[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Samsation"},"content":"[![CI Status](https://github.com/AY2223S1-CS2103T-W09-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S1-CS2103T-W09-1/tp/actions)","lastModifiedDate":"2022-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"Samsation"},"content":"# bobaBot","lastModifiedDate":"2022-09-24"},{"lineNumber":6,"author":{"gitId":"Samsation"},"content":"* This is **a project for Software Engineering (SE) students**.\u003cbr\u003e","lastModifiedDate":"2022-09-24"},{"lineNumber":7,"author":{"gitId":"Samsation"},"content":"  ","lastModifiedDate":"2022-09-24"},{"lineNumber":8,"author":{"gitId":"Samsation"},"content":"* The project simulates an ongoing software project for a desktop application _designed for bubble tea cashiers_ to manage customers’ membership details.","lastModifiedDate":"2022-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  * It is **written in OOP fashion**. It provides a **reasonably well-written** code base **bigger** (around 6 KLoC) than what students usually write in beginner-level SE modules, without being overwhelmingly big.","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  * It comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"Samsation"},"content":"* It is named `bobaBot` because it tracks the membership details of bubble tea customers.","lastModifiedDate":"2022-09-24"},{"lineNumber":12,"author":{"gitId":"Samsation"},"content":"* For the detailed documentation of this project, see the **[bobaBot Product Website](https://ay2223s1-cs2103t-w09-1.github.io/tp/)**.","lastModifiedDate":"2022-09-24"},{"lineNumber":13,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":14,"author":{"gitId":"Samsation"},"content":"## Adapted from AddressBook-Level3","lastModifiedDate":"2022-09-24"},{"lineNumber":15,"author":{"gitId":"Samsation"},"content":"* For the detailed documentation of this project, see the [Address Book Product Website](https://se-education.org/addressbook-level3)","lastModifiedDate":"2022-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"* This project is a **part of the se-education.org** initiative. If you would like to contribute code to this project, see [se-education.org](https://se-education.org#https://se-education.org/#contributing) for more info.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Samsation":10,"-":6}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"bensohh"},"content":"mainClassName \u003d \u0027seedu.boba.Main\u0027","lastModifiedDate":"2022-10-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"albertZhangTJ"},"content":"    String javaFxVersion \u003d \u002718\u0027","lastModifiedDate":"2022-10-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"bensohh"},"content":"run {","lastModifiedDate":"2022-10-20"},{"lineNumber":69,"author":{"gitId":"bensohh"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-10-20"},{"lineNumber":70,"author":{"gitId":"bensohh"},"content":"}","lastModifiedDate":"2022-10-20"},{"lineNumber":71,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":73,"author":{"gitId":"Samsation"},"content":"    archiveFileName \u003d \u0027bobaBot.jar\u0027","lastModifiedDate":"2022-10-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"Samsation"},"content":"run {","lastModifiedDate":"2022-10-20"},{"lineNumber":77,"author":{"gitId":"Samsation"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-10-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":80,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Samsation":3,"bensohh":5,"albertZhangTJ":1,"-":71}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"albertZhangTJ"},"content":"\u003clink rel\u003d\"shortcut icon\" type\u003d\"image/x-icon\" href\u003d\"favicon.ico?\"\u003e","lastModifiedDate":"2022-11-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":11,"author":{"gitId":"Samsation"},"content":"### Samuel Koh","lastModifiedDate":"2022-09-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"Samsation"},"content":"\u003cimg src\u003d\"images/samsation.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"Samsation"},"content":"[[github]](https://github.com/Samsation)","lastModifiedDate":"2022-09-17"},{"lineNumber":16,"author":{"gitId":"Samsation"},"content":"[[portfolio]](team/samsation.md)","lastModifiedDate":"2022-09-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Responsibilities: Dev Ops + Threading","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"bensohh"},"content":"### Benjamin Soh","lastModifiedDate":"2022-09-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"bensohh"},"content":"\u003cimg src\u003d\"images/bensohh.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"bensohh"},"content":"[[github]](https://github.com/bensohh)","lastModifiedDate":"2022-09-17"},{"lineNumber":26,"author":{"gitId":"bensohh"},"content":"[[portfolio]](team/bensohh.md)","lastModifiedDate":"2022-09-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"TanWenCong"},"content":"* Responsibilities: Dev Ops + Threading","lastModifiedDate":"2022-09-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":31,"author":{"gitId":"Samsation"},"content":"### Albert Zhang","lastModifiedDate":"2022-09-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"albertZhangTJ"},"content":"\u003cimg src\u003d\"images/albertzhangtj.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"Samsation"},"content":"[[github]](https://github.com/albertzhangtj)","lastModifiedDate":"2022-09-17"},{"lineNumber":36,"author":{"gitId":"Samsation"},"content":"[[portfolio]](team/albertzhangtj.md)","lastModifiedDate":"2022-09-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"Samsation"},"content":"* Responsibilities: Backend","lastModifiedDate":"2022-09-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"TanWenCong"},"content":"### Tan Wen Cong","lastModifiedDate":"2022-09-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"TanWenCong"},"content":"\u003cimg src\u003d\"images/tanwencong.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"TanWenCong"},"content":"[[github]](http://github.com/tanwencong)","lastModifiedDate":"2022-09-17"},{"lineNumber":46,"author":{"gitId":"TanWenCong"},"content":"[[portfolio]](team/tanwencong.md)","lastModifiedDate":"2022-09-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* Responsibilities: Data","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"WuHaohui1231"},"content":"### Wu Haohui","lastModifiedDate":"2022-09-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"WuHaohui1231"},"content":"\u003cimg src\u003d\"images/wuhaohui1231.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"WuHaohui1231"},"content":"[[github](https://github.com/WuHaohui1231)]","lastModifiedDate":"2022-09-17"},{"lineNumber":56,"author":{"gitId":"WuHaohui1231"},"content":"[[portfolio](team/wuhaohui1231.md)]","lastModifiedDate":"2022-09-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2022-09-17"},{"lineNumber":59,"author":{"gitId":"WuHaohui1231"},"content":"* Responsibilities: Backend","lastModifiedDate":"2022-09-17"}],"authorContributionMap":{"Samsation":8,"TanWenCong":5,"bensohh":4,"albertZhangTJ":2,"-":35,"WuHaohui1231":5}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"albertZhangTJ"},"content":"\u003clink rel\u003d\"shortcut icon\" type\u003d\"image/x-icon\" href\u003d\"favicon.png\"\u003e","lastModifiedDate":"2022-11-01"},{"lineNumber":2,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":3,"author":{"gitId":"albertZhangTJ"},"content":"# Developer Guide","lastModifiedDate":"2022-11-01"},{"lineNumber":4,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"albertZhangTJ"},"content":"* [**`BobaBotModel`**](#bobaBotModel-component): Holds the data of the App in memory.","lastModifiedDate":"2022-10-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"albertZhangTJ"},"content":"* listens for changes to `BobaBotModel` data so that the UI can be updated with the modified data.","lastModifiedDate":"2022-10-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"albertZhangTJ"},"content":"* depends on some classes in the `BobaBotModel` component, as it displays `Person` object residing in the `BobaBotModel`.","lastModifiedDate":"2022-10-31"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"albertZhangTJ"},"content":"1. The command can communicate with the `BobaBotModel` when it is executed (e.g. to add a customer).","lastModifiedDate":"2022-10-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"bensohh"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete p/1234567\")` API call.","lastModifiedDate":"2022-10-20"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"bensohh"},"content":"![Interactions Inside the Logic Component for the `delete p/1234567` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2022-10-20"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"WuHaohui1231"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":118,"author":{"gitId":"WuHaohui1231"},"content":"### Command Classes","lastModifiedDate":"2022-10-20"},{"lineNumber":119,"author":{"gitId":"WuHaohui1231"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":120,"author":{"gitId":"WuHaohui1231"},"content":"The class diagram below expands the details of Command and Parser part in the Logic component above, showing the details of how commands are parsed and created","lastModifiedDate":"2022-10-20"},{"lineNumber":121,"author":{"gitId":"WuHaohui1231"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":122,"author":{"gitId":"WuHaohui1231"},"content":"Simple commands without arguments including `clear` `list` `exit` `help` are created directly by `AddressBookParser`\u003cbr/\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":123,"author":{"gitId":"WuHaohui1231"},"content":"To parse complex commands with arguments, including `add` `find` `edit` `delete`, `AddressBookParser` will create customized parser corresponding to the command. \u003cbr/\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":124,"author":{"gitId":"WuHaohui1231"},"content":"The customized parser will parse the arguments and create the command","lastModifiedDate":"2022-10-20"},{"lineNumber":125,"author":{"gitId":"WuHaohui1231"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":126,"author":{"gitId":"albertZhangTJ"},"content":"The diagram also includes some new classes involved. For example, the `find` command depends on new predicates in the `BobaBotModel` component to allow all-info and fuzzy search (more detail in the `find` command description)","lastModifiedDate":"2022-10-31"},{"lineNumber":127,"author":{"gitId":"WuHaohui1231"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":128,"author":{"gitId":"WuHaohui1231"},"content":"\u003cimg src\u003d\"images/CommandClasses.png\" width\u003d\"1200\"/\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":129,"author":{"gitId":"WuHaohui1231"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":130,"author":{"gitId":"WuHaohui1231"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":131,"author":{"gitId":"albertZhangTJ"},"content":"## BobaBotModel component","lastModifiedDate":"2022-10-31"},{"lineNumber":132,"author":{"gitId":"WuHaohui1231"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":133,"author":{"gitId":"albertZhangTJ"},"content":"**API** : [`BobaBotModel.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/bobaBotModel/BobaBotModel.java)","lastModifiedDate":"2022-10-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"albertZhangTJ"},"content":"The `BobaBotModel` component,","lastModifiedDate":"2022-10-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"albertZhangTJ"},"content":"* does not depend on any of the other three components (as the `BobaBotModel` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2022-10-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"albertZhangTJ"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) bobaBotModel is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":161,"author":{"gitId":"albertZhangTJ"},"content":"* depends on some classes in the `BobaBotModel` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `BobaBotModel`)","lastModifiedDate":"2022-10-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"TanWenCong"},"content":"### \\[Insert Numbering\\] Add feature","lastModifiedDate":"2022-10-21"},{"lineNumber":173,"author":{"gitId":"TanWenCong"},"content":"The Add feature is facilitated by `LogicManager`. The `AddCommandParser` parses the command arguments, and returns","lastModifiedDate":"2022-10-21"},{"lineNumber":174,"author":{"gitId":"TanWenCong"},"content":"an `AddCommand` that is executed by the `LogicManager`.","lastModifiedDate":"2022-10-21"},{"lineNumber":175,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":176,"author":{"gitId":"TanWenCong"},"content":"This feature allows the user to add a new Customer.","lastModifiedDate":"2022-10-21"},{"lineNumber":177,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":178,"author":{"gitId":"TanWenCong"},"content":"**Below is a sample usage and how the add sequence behaves at each step.**","lastModifiedDate":"2022-10-21"},{"lineNumber":179,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":180,"author":{"gitId":"TanWenCong"},"content":"1. User chooses the Customer he/she wants to add and enters the command `add n/Bob p/12345678 e/johnd@example.com m/1 r/5000 t/GOLD t/MEMBER`","lastModifiedDate":"2022-10-26"},{"lineNumber":181,"author":{"gitId":"TanWenCong"},"content":"2. The `LogicManager` redirects this command to `AddressBookParser`, which parses the command via `AddCommandParser` and","lastModifiedDate":"2022-10-21"},{"lineNumber":182,"author":{"gitId":"TanWenCong"},"content":"   returns the `AddCommand` containing the Customer with all the required fields","lastModifiedDate":"2022-10-21"},{"lineNumber":183,"author":{"gitId":"TanWenCong"},"content":"3. The `LogicManager` executes the `AddCommand` and Customer is added to database","lastModifiedDate":"2022-10-21"},{"lineNumber":184,"author":{"gitId":"TanWenCong"},"content":"4. The `CommandResult` reflects this Customer","lastModifiedDate":"2022-10-21"},{"lineNumber":185,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":186,"author":{"gitId":"TanWenCong"},"content":"The following sequence diagram shows how the add feature works, following the flow of entering the command `add n/Bob p/12345678 e/johnd@example.com m/1 r/5000 t/GOLD t/MEMBER`:","lastModifiedDate":"2022-10-26"},{"lineNumber":187,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":188,"author":{"gitId":"TanWenCong"},"content":"![AddSequenceDiagram](images/AddSequenceDiagram.png)","lastModifiedDate":"2022-10-21"},{"lineNumber":189,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":190,"author":{"gitId":"TanWenCong"},"content":"The following activity diagram summarizes the flow of when a user enters an add command:","lastModifiedDate":"2022-10-21"},{"lineNumber":191,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":192,"author":{"gitId":"TanWenCong"},"content":"![AddActivityDiagram](images/AddActivityDiagram.png)","lastModifiedDate":"2022-10-21"},{"lineNumber":193,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":194,"author":{"gitId":"TanWenCong"},"content":"**Aspect: How `add` is executed**","lastModifiedDate":"2022-10-21"},{"lineNumber":195,"author":{"gitId":"TanWenCong"},"content":"* **Alternative 1 (current choice):** User can only add a customer with unique `PHONE_NUMBER` and `EMAIL` that does not already exist in database.","lastModifiedDate":"2022-10-21"},{"lineNumber":196,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":197,"author":{"gitId":"TanWenCong"},"content":"  | Pros/Cons | Description                                                                                                                                 | Examples                                                                                                                                                                      |","lastModifiedDate":"2022-10-21"},{"lineNumber":198,"author":{"gitId":"TanWenCong"},"content":"      |---------------------------------------------------------------------------------------------------------------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|----------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-10-21"},{"lineNumber":199,"author":{"gitId":"TanWenCong"},"content":"  | Pros      | Allows user to add customers with same names but different phone numbers and email addresses                                                | The user can add Alex with phone number `99999999` and a different Alex with phone number `88888888`, where Alex is not a unique name.                                        |","lastModifiedDate":"2022-10-21"},{"lineNumber":200,"author":{"gitId":"TanWenCong"},"content":"  | Cons      | If an existing customer changes phone number, and a new customer uses this customer\u0027s previous phone number, we cannot add the new customer | Alex changes his phone number from `99999999` to `88888888`, Bob got Alex\u0027s old phone number `99999999`, we cannot sign Bob up for membership without editing Alex\u0027s details. |","lastModifiedDate":"2022-10-21"},{"lineNumber":201,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":202,"author":{"gitId":"TanWenCong"},"content":"* **Alternative 2:** User can only add a customer with unique `NAME`.","lastModifiedDate":"2022-10-21"},{"lineNumber":203,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":204,"author":{"gitId":"TanWenCong"},"content":"  | Pros/Cons | Description                                                                                  | Examples                                                                                                       |","lastModifiedDate":"2022-10-21"},{"lineNumber":205,"author":{"gitId":"TanWenCong"},"content":"      |----------------------------------------------------------------------------------------------|----------------------------------------------------------------------------------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-10-21"},{"lineNumber":206,"author":{"gitId":"TanWenCong"},"content":"  | Pros      | Customers can choose not to disclose private details such as phone number and email address. | The user just needs to `add n/Bob` without asking for phone number or email address.                           |","lastModifiedDate":"2022-10-21"},{"lineNumber":207,"author":{"gitId":"TanWenCong"},"content":"  | Cons      | User cannot add customers that have same names.                                              | The user cannot `add n/Alex` if there already exists an `Alex` in the database, since `Alex` is a common name. |","lastModifiedDate":"2022-10-21"},{"lineNumber":208,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":209,"author":{"gitId":"TanWenCong"},"content":"* **Future Extension:** bobaBot can support adding more customer details such as birthday month to provide more timely deals for customers.","lastModifiedDate":"2022-10-21"},{"lineNumber":210,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":211,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":212,"author":{"gitId":"Samsation"},"content":"### \\[Insert Numbering\\] Edit feature","lastModifiedDate":"2022-10-20"},{"lineNumber":213,"author":{"gitId":"Samsation"},"content":"The Edit feature is facilitated by `LogicManager`. The `EditCommandParser` parses the command arguments, and returns","lastModifiedDate":"2022-10-20"},{"lineNumber":214,"author":{"gitId":"Samsation"},"content":"an `EditCommand` that is executed by the `LogicManager`.","lastModifiedDate":"2022-10-20"},{"lineNumber":215,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":216,"author":{"gitId":"Samsation"},"content":"This feature allows the user to edit any fields of a Customer, and supports editing multiple fields at once.","lastModifiedDate":"2022-10-20"},{"lineNumber":217,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":218,"author":{"gitId":"Samsation"},"content":"**Below is a sample usage and how the edit sequence behaves at each step.**","lastModifiedDate":"2022-10-20"},{"lineNumber":219,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":220,"author":{"gitId":"Samsation"},"content":"1. User chooses the Customer he/ she wants to edit and enters the command `edit e/test@gmail/com n/Bob`","lastModifiedDate":"2022-10-20"},{"lineNumber":221,"author":{"gitId":"Samsation"},"content":"2. The `LogicManager` redirects this command to `AddressBookParser`, which parses the command via `EditCommandParser` and","lastModifiedDate":"2022-10-20"},{"lineNumber":222,"author":{"gitId":"Samsation"},"content":"returns the `EditCommand` containing the Customer with all the new fields that are supposed to be edited to","lastModifiedDate":"2022-10-20"},{"lineNumber":223,"author":{"gitId":"Samsation"},"content":"3. The `LogicManager` executes the `EditCommand` and Customer to be edited is updated with the new fields","lastModifiedDate":"2022-10-20"},{"lineNumber":224,"author":{"gitId":"Samsation"},"content":"4. The `CommandResult` reflects the changes made to this Customer","lastModifiedDate":"2022-10-20"},{"lineNumber":225,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":226,"author":{"gitId":"Samsation"},"content":"The following sequence diagram shows how the edit feature works, following the flow of entering the command `edit e/test@gmail/com n/Bob`:","lastModifiedDate":"2022-10-20"},{"lineNumber":227,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":228,"author":{"gitId":"Samsation"},"content":"![EditSequenceDiagram](images/EditSequenceDiagram.png)","lastModifiedDate":"2022-10-20"},{"lineNumber":229,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":230,"author":{"gitId":"Samsation"},"content":"The following activity diagram summarizes the flow of when a user enters an edit command:","lastModifiedDate":"2022-10-20"},{"lineNumber":231,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":232,"author":{"gitId":"Samsation"},"content":"![EditActivityDiagram](images/EditCommandActivityDiagram.png)","lastModifiedDate":"2022-10-20"},{"lineNumber":233,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":234,"author":{"gitId":"Samsation"},"content":"**Aspect: How `edit` is executed**","lastModifiedDate":"2022-10-20"},{"lineNumber":235,"author":{"gitId":"Samsation"},"content":"* **Alternative 1 (current choice):** User can edit a customer via either `PHONE_NUMBER` or `EMAIL`.","lastModifiedDate":"2022-10-20"},{"lineNumber":236,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":237,"author":{"gitId":"Samsation"},"content":"  | Pros/Cons | Description                                                                          | Examples                                                                                                                                    |","lastModifiedDate":"2022-10-20"},{"lineNumber":238,"author":{"gitId":"Samsation"},"content":"    |--------------------------------------------------------------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------|----------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-10-20"},{"lineNumber":239,"author":{"gitId":"Samsation"},"content":"  | Pros      | Allows user more flexibility in choosing the inputs as identifiers for editing       | The user can edit any customer as long as they have details of either their `PHONE_NUMBER` or `EMAIL`.                                      |","lastModifiedDate":"2022-10-20"},{"lineNumber":240,"author":{"gitId":"Samsation"},"content":"  | Pros      | The user does not need to know the specific position of the customer within the list | The user can use either identifier `PHONE_NUMBER` or `EMAIL` to edit customers without a need for their index/position.                     |","lastModifiedDate":"2022-10-20"},{"lineNumber":241,"author":{"gitId":"Samsation"},"content":"  | Cons      | The length of the command is longer with the new identifiers                         | The user has to type `edit p/12345678 n/Bob` or `edit e/test@gmail.com n/Bob` to edit a user which is longer compared to editing via index. |","lastModifiedDate":"2022-10-20"},{"lineNumber":242,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":243,"author":{"gitId":"Samsation"},"content":"* **Alternative 2:** User can edit a customer via `index`.","lastModifiedDate":"2022-10-20"},{"lineNumber":244,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":245,"author":{"gitId":"Samsation"},"content":"  | Pros/Cons | Description                                                                                               | Examples                                                                                                                                                                                                                                            |","lastModifiedDate":"2022-10-20"},{"lineNumber":246,"author":{"gitId":"Samsation"},"content":"    |-----------------------------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-10-20"},{"lineNumber":247,"author":{"gitId":"Samsation"},"content":"  | Pros      | Short commands enable fast editing                                                                        | The user can edit any customer as long as they have details of the `index` of the customer, e.g. `edit 1`.                                                                                                                                          |","lastModifiedDate":"2022-10-20"},{"lineNumber":248,"author":{"gitId":"Samsation"},"content":"  | Cons      | Identifying the customer via `index` might be slow especially when there are customers with similar names | The user has to find out the `index` of the customer to edit before typing the command. Supposed that we want to edit Bob and there exists an Bob and bob, identifying the correct customer takes time and thus delay the execution of the command. |","lastModifiedDate":"2022-10-20"},{"lineNumber":249,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":250,"author":{"gitId":"Samsation"},"content":"* **Future Extension:** bobaBot can support multiple editing so user do not have to edit customers one by one.","lastModifiedDate":"2022-10-20"},{"lineNumber":251,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":252,"author":{"gitId":"Samsation"},"content":"### \\[Insert Numbering\\] Increase/ Decrease feature","lastModifiedDate":"2022-10-24"},{"lineNumber":253,"author":{"gitId":"Samsation"},"content":"The Increase/ Decrease feature is facilitated by `LogicManager`. The `IncreaseCommandParser` or `DecreaseCommandParser` parses the command arguments, and returns","lastModifiedDate":"2022-10-24"},{"lineNumber":254,"author":{"gitId":"Samsation"},"content":"an `IncreaseCommand` or `DecreaseCommand` that is executed by the `LogicManager`.","lastModifiedDate":"2022-10-24"},{"lineNumber":255,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":256,"author":{"gitId":"Samsation"},"content":"This feature is an extension to the above Edit feature to ease the process of editing Reward points of a Customer.","lastModifiedDate":"2022-10-24"},{"lineNumber":257,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":258,"author":{"gitId":"Samsation"},"content":"**Below is a sample usage and how the increase/ decrease sequence behaves at each step.**","lastModifiedDate":"2022-10-24"},{"lineNumber":259,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":260,"author":{"gitId":"Samsation"},"content":"1. User chooses the Customer he/ she wants to increase or decrease the Reward points for and enters the command `incr 100 e/test@gmail/com` or `decr 100 e/test@gmail/com`","lastModifiedDate":"2022-10-24"},{"lineNumber":261,"author":{"gitId":"Samsation"},"content":"2. The `LogicManager` redirects this command to `AddressBookParser`, which parses the command via `IncreaseCommandParser` or `DecreaseCommandParser` and","lastModifiedDate":"2022-10-24"},{"lineNumber":262,"author":{"gitId":"Samsation"},"content":"   returns the `IncreaseCommand` or `DecreaseCommand` containing how much to increment or decrement the existing Reward points by","lastModifiedDate":"2022-10-24"},{"lineNumber":263,"author":{"gitId":"Samsation"},"content":"3. The `LogicManager` executes the `IncreaseCommand` or `DecreaseCommand` which implicitly creates and executes the equivalent `EditCommand` for the new Reward value","lastModifiedDate":"2022-10-24"},{"lineNumber":264,"author":{"gitId":"Samsation"},"content":"4. The `CommandResult` reflects the changes made to this Customer","lastModifiedDate":"2022-10-24"},{"lineNumber":265,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":266,"author":{"gitId":"Samsation"},"content":"**Pros and Cons are the same as the above Edit Feature.**","lastModifiedDate":"2022-10-24"},{"lineNumber":267,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":268,"author":{"gitId":"bensohh"},"content":"### \\[Insert Numbering\\] Delete feature","lastModifiedDate":"2022-10-20"},{"lineNumber":269,"author":{"gitId":"bensohh"},"content":"The Delete feature is facilitated by `LogicManager`. The `DeleteCommandParser` parses the command arguments, and returns","lastModifiedDate":"2022-10-21"},{"lineNumber":270,"author":{"gitId":"bensohh"},"content":"a `DeleteCommand` that is executed by the `LogicManager` and returns a `CommandResult` as feedback to the user.","lastModifiedDate":"2022-10-21"},{"lineNumber":271,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":272,"author":{"gitId":"bensohh"},"content":"This feature enables the user to remove a customer from bobaBot via either the `PHONE` or `EMAIL` identifier.","lastModifiedDate":"2022-10-21"},{"lineNumber":273,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":274,"author":{"gitId":"bensohh"},"content":"**Below is a sample usage and how the delete sequence behaves at each step.**","lastModifiedDate":"2022-10-21"},{"lineNumber":275,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":276,"author":{"gitId":"bensohh"},"content":"1. User chooses the Customer he/she wants to delete and enters the command `delete p/12345678`","lastModifiedDate":"2022-10-21"},{"lineNumber":277,"author":{"gitId":"bensohh"},"content":"2. The `MainWindow` class retrieves the user\u0027s input and passes it on to the `LogicManager` through the `execute` method","lastModifiedDate":"2022-10-21"},{"lineNumber":278,"author":{"gitId":"bensohh"},"content":"3. The `LogicManager` redirects this command to `AddressBookParser` via the `parseCommand` method and creates a temporary `DeleteCommandParser` object ","lastModifiedDate":"2022-10-21"},{"lineNumber":279,"author":{"gitId":"bensohh"},"content":"4. The `DeleteCommandParser` object parses the command and returns the `DeleteCommand` containing the details of the Customer to delete","lastModifiedDate":"2022-10-21"},{"lineNumber":280,"author":{"gitId":"bensohh"},"content":"5. The `LogicManager` executes the `DeleteCommand`, removing the Customer from bobaBot and returning a `CommandResult` object","lastModifiedDate":"2022-10-21"},{"lineNumber":281,"author":{"gitId":"bensohh"},"content":"6. The `CommandResult` reflects the removal of this Customer","lastModifiedDate":"2022-10-21"},{"lineNumber":282,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":283,"author":{"gitId":"bensohh"},"content":"The sequence diagram below shows how the `delete` feature parsing an input `p/12345678` behaves at each step.","lastModifiedDate":"2022-10-20"},{"lineNumber":284,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":285,"author":{"gitId":"bensohh"},"content":"![DeleteSequenceDiagram](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2022-10-30"},{"lineNumber":286,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":287,"author":{"gitId":"bensohh"},"content":"The activity diagram below illustrates how the `delete` operation works.","lastModifiedDate":"2022-10-20"},{"lineNumber":288,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":289,"author":{"gitId":"bensohh"},"content":"![DeleteActivityDiagram](images/DeleteActivityDiagram.png)","lastModifiedDate":"2022-10-30"},{"lineNumber":290,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":291,"author":{"gitId":"bensohh"},"content":"#### \\[Insert Numbering\\] Design Considerations","lastModifiedDate":"2022-10-20"},{"lineNumber":292,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":293,"author":{"gitId":"bensohh"},"content":"**Aspect: How `delete` is executed**","lastModifiedDate":"2022-10-20"},{"lineNumber":294,"author":{"gitId":"bensohh"},"content":"* **Alternative 1 (current choice):** User can delete a customer via either `PHONE_NUMBER` or `EMAIL`.","lastModifiedDate":"2022-10-20"},{"lineNumber":295,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":296,"author":{"gitId":"bensohh"},"content":"  | Pros/Cons | Description                                                                          | Examples                                                                                                                               |","lastModifiedDate":"2022-10-20"},{"lineNumber":297,"author":{"gitId":"bensohh"},"content":"  |-----------|--------------------------------------------------------------------------------------|----------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-10-20"},{"lineNumber":298,"author":{"gitId":"bensohh"},"content":"  | Pros      | Allows user more flexibility in choosing the inputs as identifiers for deletion      | The user can delete any customer as long as they have details of either their `PHONE_NUMBER` or `EMAIL`.                               |","lastModifiedDate":"2022-10-20"},{"lineNumber":299,"author":{"gitId":"bensohh"},"content":"  | Pros      | The user does not need to know the specific position of the customer within the list | The user can use either identifier `PHONE_NUMBER` or `EMAIL` to delete customers without a need for their index/position.              |","lastModifiedDate":"2022-10-20"},{"lineNumber":300,"author":{"gitId":"bensohh"},"content":"  | Cons      | The length of the command is longer with the new identifiers                         | The user has to type `delete p/12345678` or `delete e/test@gmail.com` to delete a user which is longer compared to deleting via index. |","lastModifiedDate":"2022-10-20"},{"lineNumber":301,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":302,"author":{"gitId":"bensohh"},"content":"* **Alternative 2:** User can delete a customer via `index`.","lastModifiedDate":"2022-10-20"},{"lineNumber":303,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":304,"author":{"gitId":"bensohh"},"content":"  | Pros/Cons | Description                                                                                               | Examples                                                                                                                                                                                                                                                    |","lastModifiedDate":"2022-10-20"},{"lineNumber":305,"author":{"gitId":"bensohh"},"content":"  |-----------|-----------------------------------------------------------------------------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-10-20"},{"lineNumber":306,"author":{"gitId":"bensohh"},"content":"  | Pros      | Short commands enable fast deletion                                                                       | The user can delete any customer as long as they have details of the `index` of the customer, e.g. `delete 1`.                                                                                                                                              |","lastModifiedDate":"2022-10-20"},{"lineNumber":307,"author":{"gitId":"bensohh"},"content":"  | Cons      | Identifying the customer via `index` might be slow especially when there are customers with similar names | The user has to find out the `index` of the customer to delete before typing the command. Supposed that we want to delete Alex and there exists an Alex and alex, identifying the correct customer takes time and thus delay the execution of the command.  |","lastModifiedDate":"2022-10-20"},{"lineNumber":308,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":309,"author":{"gitId":"bensohh"},"content":"* **Future Extension:** bobaBot can support multiple deletions so user do not have to delete customers one by one.","lastModifiedDate":"2022-10-20"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":312,"author":{"gitId":"albertZhangTJ"},"content":"### \\[Insert Numbering\\] Find feature","lastModifiedDate":"2022-10-21"},{"lineNumber":313,"author":{"gitId":"albertZhangTJ"},"content":"The Find feature is facilitated by `LogicManager`. The `FindCommandParser` parses the command arguments, and returns","lastModifiedDate":"2022-10-21"},{"lineNumber":314,"author":{"gitId":"albertZhangTJ"},"content":"an `FindCommand` that is executed by the `LogicManager`.","lastModifiedDate":"2022-10-21"},{"lineNumber":315,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":316,"author":{"gitId":"albertZhangTJ"},"content":"This feature allows the user to find a specific user by field, or generally search for occurrences of keywords in all fields.","lastModifiedDate":"2022-10-21"},{"lineNumber":317,"author":{"gitId":"albertZhangTJ"},"content":"The feature also supports fuzzy search based on `Soundex` when searching by names.","lastModifiedDate":"2022-10-21"},{"lineNumber":318,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":319,"author":{"gitId":"albertZhangTJ"},"content":"**Below is a sample usage and how the find sequence behaves at each step.**","lastModifiedDate":"2022-10-21"},{"lineNumber":320,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":321,"author":{"gitId":"albertZhangTJ"},"content":"1. User chooses the Customer he/ she wants to find and enters the command `find Aschcroft`","lastModifiedDate":"2022-10-21"},{"lineNumber":322,"author":{"gitId":"albertZhangTJ"},"content":"2. The `LogicManager` redirects this command to `AddressBookParser`, which parses the command via `FindCommandParser` and","lastModifiedDate":"2022-10-21"},{"lineNumber":323,"author":{"gitId":"albertZhangTJ"},"content":"   returns the `FindCommand` containing the predicate","lastModifiedDate":"2022-10-21"},{"lineNumber":324,"author":{"gitId":"albertZhangTJ"},"content":"3. The `LogicManager` executes the `FindCommand` and update the filtered list with matching `Person`","lastModifiedDate":"2022-10-21"},{"lineNumber":325,"author":{"gitId":"Samsation"},"content":"4. The `CommandResult` reflects the number of customers listed","lastModifiedDate":"2022-10-26"},{"lineNumber":326,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":327,"author":{"gitId":"albertZhangTJ"},"content":"The following sequence diagram shows how the find feature works, following the flow of entering the command `find Aschcroft`:","lastModifiedDate":"2022-10-21"},{"lineNumber":328,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":329,"author":{"gitId":"albertZhangTJ"},"content":"![FindSequenceDiagram](images/FindSequenceDiagram.png)","lastModifiedDate":"2022-10-21"},{"lineNumber":330,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":331,"author":{"gitId":"albertZhangTJ"},"content":"The following activity diagram summarizes the flow of when a user enters a find command:","lastModifiedDate":"2022-10-21"},{"lineNumber":332,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":333,"author":{"gitId":"albertZhangTJ"},"content":"![FindActivityDiagram](images/FindCommandActivityDiagram.png)","lastModifiedDate":"2022-10-21"},{"lineNumber":334,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":335,"author":{"gitId":"albertZhangTJ"},"content":"**Aspect: How `find` is executed**","lastModifiedDate":"2022-10-21"},{"lineNumber":336,"author":{"gitId":"albertZhangTJ"},"content":"* User can search for a specific customer via `PHONE_NUMBER` or `EMAIL`,","lastModifiedDate":"2022-10-21"},{"lineNumber":337,"author":{"gitId":"albertZhangTJ"},"content":"or just search for occurrence of keywords (including name) vaguely.","lastModifiedDate":"2022-10-21"},{"lineNumber":338,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":339,"author":{"gitId":"albertZhangTJ"},"content":"  | Pros/Cons | Description                                                                     | Examples                                                                                    |","lastModifiedDate":"2022-10-21"},{"lineNumber":340,"author":{"gitId":"albertZhangTJ"},"content":"      |---------------------------------------------------------------------------------|---------------------------------------------------------------------------------------------|----------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-10-21"},{"lineNumber":341,"author":{"gitId":"albertZhangTJ"},"content":"  | Pros      | User can find the desired entry easily with a short command                     | For searching a customer with phone number `88888888`, the command `find 88888888` will do. |","lastModifiedDate":"2022-10-21"},{"lineNumber":342,"author":{"gitId":"albertZhangTJ"},"content":"  | Pros      | User can also search for a specific entry when needed.                          | For searching the specific customer with email address, use `find e/address@example.com`.   |","lastModifiedDate":"2022-10-21"},{"lineNumber":343,"author":{"gitId":"albertZhangTJ"},"content":"  | Cons      | User can exploit the software and get access to irrelevant customer information | User can list out all customers with digit `8` in their phone number by `find 8`.           |","lastModifiedDate":"2022-10-21"},{"lineNumber":344,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":345,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":346,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":347,"author":{"gitId":"albertZhangTJ"},"content":"* **Future Extension:** bobaBot can support priority in listing of search results.","lastModifiedDate":"2022-10-21"},{"lineNumber":348,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":350,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":354,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"albertZhangTJ"},"content":"These operations are exposed in the `BobaBotModel` interface as `BobaBotModel#commitAddressBook()`, `BobaBotModel#undoAddressBook()` and `BobaBotModel#redoAddressBook()` respectively.","lastModifiedDate":"2022-10-31"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"albertZhangTJ"},"content":"Step 2. The user executes `delete 5` command to delete the 5th customer in the address book. The `delete` command calls `BobaBotModel#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2022-10-31"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"albertZhangTJ"},"content":"Step 3. The user executes `add n/David …​` to add a new customer. The `add` command also calls `BobaBotModel#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2022-10-31"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":374,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"albertZhangTJ"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `BobaBotModel#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2022-10-31"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"albertZhangTJ"},"content":"Step 4. The user now decides that adding the customer was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `BobaBotModel#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2022-10-31"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"albertZhangTJ"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `BobaBotModel#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2022-10-31"},{"lineNumber":385,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":395,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"albertZhangTJ"},"content":"The `redo` command does the opposite — it calls `BobaBotModel#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2022-10-31"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":399,"author":{"gitId":"albertZhangTJ"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `BobaBotModel#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2022-10-31"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"albertZhangTJ"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `BobaBotModel#commitAddressBook()`, `BobaBotModel#undoAddressBook()` or `BobaBotModel#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2022-10-31"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"albertZhangTJ"},"content":"Step 6. The user executes `clear`, which calls `BobaBotModel#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2022-10-31"},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"Samsation"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the customer being deleted).","lastModifiedDate":"2022-10-26"},{"lineNumber":426,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":440,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":441,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":442,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":443,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":444,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"TanWenCong"},"content":"* has a need to manage a significant number of customers","lastModifiedDate":"2022-09-19"},{"lineNumber":454,"author":{"gitId":"TanWenCong"},"content":"* interacts with a lot of customers, especially during peak hours","lastModifiedDate":"2022-09-19"},{"lineNumber":455,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":457,"author":{"gitId":"TanWenCong"},"content":"* never used CLI before","lastModifiedDate":"2022-09-19"},{"lineNumber":458,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"TanWenCong"},"content":"**Value proposition**: manage customers faster than a typical mouse/GUI driven app","lastModifiedDate":"2022-09-19"},{"lineNumber":460,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":463,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"-"},"content":"| Priority | As a …​ | I want to …​                                                                   | So that I can…​                                                                  |","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"bensohh"},"content":"|----------|---------|--------------------------------------------------------------------------------|----------------------------------------------------------------------------------|","lastModifiedDate":"2022-09-17"},{"lineNumber":468,"author":{"gitId":"bensohh"},"content":"| `* * *`  | cashier | quickly search for customers’ membership details within the system             | verify their rewards/points                                                      |","lastModifiedDate":"2022-09-17"},{"lineNumber":469,"author":{"gitId":"bensohh"},"content":"| `* * *`  | cashier | search for customer details through various inputs (email, phone number, name) | retrieve their information flexibly                                              |","lastModifiedDate":"2022-09-17"},{"lineNumber":470,"author":{"gitId":"Samsation"},"content":"| `* * *`  | cashier | edit customers\u0027 membership details (vouchers, points, rewards)                 | remove the voucher/points once they claim them                                   |","lastModifiedDate":"2022-10-08"},{"lineNumber":471,"author":{"gitId":"bensohh"},"content":"| `* * *`  | cashier | add new members to my list                                                     | apply for membership for customers                                               |","lastModifiedDate":"2022-09-17"},{"lineNumber":472,"author":{"gitId":"bensohh"},"content":"| `* * *`  | cashier | remove members from the list                                                   | make sure membership details are correct for customers who are no longer members |","lastModifiedDate":"2022-09-17"},{"lineNumber":473,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":474,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":475,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":477,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"Samsation"},"content":"(For all use cases below, the **System** is `bobaBot` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2022-09-22"},{"lineNumber":479,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"Samsation"},"content":"**Use case 1: Add a Customer**","lastModifiedDate":"2022-09-22"},{"lineNumber":481,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":482,"author":{"gitId":"Samsation"},"content":"System: bobaBot \u003cbr\u003e","lastModifiedDate":"2022-09-22"},{"lineNumber":483,"author":{"gitId":"Samsation"},"content":"Use case: UC01 - Add a Customer \u003cbr\u003e","lastModifiedDate":"2022-09-22"},{"lineNumber":484,"author":{"gitId":"Samsation"},"content":"Actor: User \u003cbr\u003e","lastModifiedDate":"2022-09-22"},{"lineNumber":485,"author":{"gitId":"Samsation"},"content":"Guarantee: New Customer will be added into bobaBot.","lastModifiedDate":"2022-09-22"},{"lineNumber":486,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":487,"author":{"gitId":"Samsation"},"content":"**MSS**","lastModifiedDate":"2022-09-22"},{"lineNumber":488,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":489,"author":{"gitId":"Samsation"},"content":"1. User requests to add a Customer.","lastModifiedDate":"2022-09-22"},{"lineNumber":490,"author":{"gitId":"Samsation"},"content":"2. bobaBot adds the Customer into the database.","lastModifiedDate":"2022-09-22"},{"lineNumber":491,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":492,"author":{"gitId":"Samsation"},"content":"    Use case ends.","lastModifiedDate":"2022-09-22"},{"lineNumber":493,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":494,"author":{"gitId":"Samsation"},"content":"**Extensions**","lastModifiedDate":"2022-09-22"},{"lineNumber":495,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":496,"author":{"gitId":"Samsation"},"content":"* 1a. User enters the command wrongly.","lastModifiedDate":"2022-09-22"},{"lineNumber":497,"author":{"gitId":"Samsation"},"content":"  * 1a1. bobaBot displays the error message.","lastModifiedDate":"2022-09-22"},{"lineNumber":498,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":499,"author":{"gitId":"Samsation"},"content":"    Use case ends.","lastModifiedDate":"2022-09-22"},{"lineNumber":500,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":501,"author":{"gitId":"Samsation"},"content":"**Use case 2: Delete a Customer**","lastModifiedDate":"2022-09-22"},{"lineNumber":502,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":503,"author":{"gitId":"Samsation"},"content":"System: bobaBot \u003cbr\u003e","lastModifiedDate":"2022-09-22"},{"lineNumber":504,"author":{"gitId":"Samsation"},"content":"Use case: UC02 - Delete a Customer \u003cbr\u003e","lastModifiedDate":"2022-09-22"},{"lineNumber":505,"author":{"gitId":"Samsation"},"content":"Actor: User \u003cbr\u003e","lastModifiedDate":"2022-09-22"},{"lineNumber":506,"author":{"gitId":"Samsation"},"content":"Guarantee: Selected Customer will be deleted from bobaBot.","lastModifiedDate":"2022-09-22"},{"lineNumber":507,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":508,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2022-09-22"},{"lineNumber":509,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":510,"author":{"gitId":"Samsation"},"content":"1. User requests to delete a Customer.","lastModifiedDate":"2022-09-22"},{"lineNumber":511,"author":{"gitId":"Samsation"},"content":"2. bobaBot deletes the Customer from the database.","lastModifiedDate":"2022-09-22"},{"lineNumber":512,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":513,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2022-09-22"},{"lineNumber":514,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":515,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2022-09-22"},{"lineNumber":516,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":517,"author":{"gitId":"Samsation"},"content":"* 1a. User enters the command wrongly.","lastModifiedDate":"2022-09-22"},{"lineNumber":518,"author":{"gitId":"Samsation"},"content":"    * 1a1. bobaBot displays the error message.","lastModifiedDate":"2022-09-22"},{"lineNumber":519,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":520,"author":{"gitId":"Samsation"},"content":"      Use case ends.","lastModifiedDate":"2022-09-22"},{"lineNumber":521,"author":{"gitId":"Samsation"},"content":"    ","lastModifiedDate":"2022-09-22"},{"lineNumber":522,"author":{"gitId":"Samsation"},"content":"* 1b. User enters a Customer that does not exist in bobaBot\u0027s database.","lastModifiedDate":"2022-09-22"},{"lineNumber":523,"author":{"gitId":"Samsation"},"content":"    * 1b1. bobaBot displays that the Customer does not exist.","lastModifiedDate":"2022-09-22"},{"lineNumber":524,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":525,"author":{"gitId":"Samsation"},"content":"      Use case ends.","lastModifiedDate":"2022-09-22"},{"lineNumber":526,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":527,"author":{"gitId":"Samsation"},"content":"**Use case 3: Find a Customer**","lastModifiedDate":"2022-09-22"},{"lineNumber":528,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":529,"author":{"gitId":"Samsation"},"content":"System: bobaBot \u003cbr\u003e","lastModifiedDate":"2022-09-22"},{"lineNumber":530,"author":{"gitId":"Samsation"},"content":"Use case: UC03 - Find a Customer \u003cbr\u003e","lastModifiedDate":"2022-09-22"},{"lineNumber":531,"author":{"gitId":"Samsation"},"content":"Actor: User \u003cbr\u003e","lastModifiedDate":"2022-09-22"},{"lineNumber":532,"author":{"gitId":"Samsation"},"content":"Guarantee: Selected Customer\u0027s details will be displayed by bobaBot.","lastModifiedDate":"2022-09-22"},{"lineNumber":533,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":534,"author":{"gitId":"Samsation"},"content":"**MSS**","lastModifiedDate":"2022-09-22"},{"lineNumber":535,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":536,"author":{"gitId":"Samsation"},"content":"1. User requests to find a Customer.","lastModifiedDate":"2022-09-22"},{"lineNumber":537,"author":{"gitId":"Samsation"},"content":"2. bobaBot displays the Customer\u0027s details from the database.","lastModifiedDate":"2022-09-22"},{"lineNumber":538,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":539,"author":{"gitId":"Samsation"},"content":"   Use case ends.","lastModifiedDate":"2022-09-22"},{"lineNumber":540,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":541,"author":{"gitId":"Samsation"},"content":"**Extensions**","lastModifiedDate":"2022-09-22"},{"lineNumber":542,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":543,"author":{"gitId":"Samsation"},"content":"* 1a. User enters the command wrongly.","lastModifiedDate":"2022-09-22"},{"lineNumber":544,"author":{"gitId":"Samsation"},"content":"    * 1a1. bobaBot displays the error message.","lastModifiedDate":"2022-09-22"},{"lineNumber":545,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":546,"author":{"gitId":"Samsation"},"content":"      Use case ends.","lastModifiedDate":"2022-09-22"},{"lineNumber":547,"author":{"gitId":"Samsation"},"content":"    ","lastModifiedDate":"2022-09-22"},{"lineNumber":548,"author":{"gitId":"Samsation"},"content":"* 1b. User enters a Customer that does not exist in bobaBot\u0027s database.","lastModifiedDate":"2022-09-22"},{"lineNumber":549,"author":{"gitId":"Samsation"},"content":"    * 1b1. bobaBot displays that the Customer does not exist.","lastModifiedDate":"2022-09-22"},{"lineNumber":550,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":551,"author":{"gitId":"Samsation"},"content":"      Use case ends.","lastModifiedDate":"2022-09-22"},{"lineNumber":552,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":553,"author":{"gitId":"Samsation"},"content":"**Use case 4: Edit a Customer\u0027s details**","lastModifiedDate":"2022-10-08"},{"lineNumber":554,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":555,"author":{"gitId":"Samsation"},"content":"System: bobaBot \u003cbr\u003e","lastModifiedDate":"2022-09-22"},{"lineNumber":556,"author":{"gitId":"Samsation"},"content":"Use case: UC02 - Edit a Customer\u0027s details \u003cbr\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":557,"author":{"gitId":"Samsation"},"content":"Actor: User \u003cbr\u003e","lastModifiedDate":"2022-09-22"},{"lineNumber":558,"author":{"gitId":"Samsation"},"content":"Guarantee: Selected Customer\u0027s details will be edited by bobaBot.","lastModifiedDate":"2022-10-08"},{"lineNumber":559,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":560,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":561,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":562,"author":{"gitId":"Samsation"},"content":"1. User requests to edit a Customer\u0027s details.","lastModifiedDate":"2022-10-08"},{"lineNumber":563,"author":{"gitId":"Samsation"},"content":"2. bobaBot edits the Customer\u0027s details in the database.","lastModifiedDate":"2022-10-08"},{"lineNumber":564,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":565,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":566,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":567,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":568,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":569,"author":{"gitId":"Samsation"},"content":"* 1a. User enters the command wrongly.","lastModifiedDate":"2022-09-22"},{"lineNumber":570,"author":{"gitId":"Samsation"},"content":"    * 1a1. bobaBot displays the error message.","lastModifiedDate":"2022-09-22"},{"lineNumber":571,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":572,"author":{"gitId":"Samsation"},"content":"      Use case ends.","lastModifiedDate":"2022-09-22"},{"lineNumber":573,"author":{"gitId":"Samsation"},"content":"    ","lastModifiedDate":"2022-09-22"},{"lineNumber":574,"author":{"gitId":"Samsation"},"content":"* 1b. User enters a Customer that does not exist in bobaBot\u0027s database.","lastModifiedDate":"2022-09-22"},{"lineNumber":575,"author":{"gitId":"Samsation"},"content":"    * 1b1. bobaBot displays that the Customer does not exist.","lastModifiedDate":"2022-09-22"},{"lineNumber":576,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":577,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":578,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2020-05-23"},{"lineNumber":579,"author":{"gitId":"Samsation"},"content":"* 1c. bobaBot encounters a duplicate of the edited Customer in its database.","lastModifiedDate":"2022-09-22"},{"lineNumber":580,"author":{"gitId":"Samsation"},"content":"    * 1c1. bobaBot displays a warning on potential the duplicate.","lastModifiedDate":"2022-09-22"},{"lineNumber":581,"author":{"gitId":"Samsation"},"content":"    * 1c2. bobaBot provides the option to delete one of the duplicates (UC02)","lastModifiedDate":"2022-09-22"},{"lineNumber":582,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":583,"author":{"gitId":"Samsation"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2022-09-22"},{"lineNumber":584,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":585,"author":{"gitId":"Samsation"},"content":"**Use case 5: Exit bobaBot**","lastModifiedDate":"2022-09-22"},{"lineNumber":586,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":587,"author":{"gitId":"Samsation"},"content":"System: bobaBot \u003cbr\u003e","lastModifiedDate":"2022-09-22"},{"lineNumber":588,"author":{"gitId":"Samsation"},"content":"Use case: UC05 - Exit bobaBot \u003cbr\u003e","lastModifiedDate":"2022-09-22"},{"lineNumber":589,"author":{"gitId":"Samsation"},"content":"Actor: User \u003cbr\u003e","lastModifiedDate":"2022-09-22"},{"lineNumber":590,"author":{"gitId":"Samsation"},"content":"Guarantee: bobaBot will be exited.","lastModifiedDate":"2022-09-22"},{"lineNumber":591,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":592,"author":{"gitId":"Samsation"},"content":"**MSS**","lastModifiedDate":"2022-09-22"},{"lineNumber":593,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":594,"author":{"gitId":"Samsation"},"content":"1. User requests to exit bobaBot.","lastModifiedDate":"2022-09-22"},{"lineNumber":595,"author":{"gitId":"Samsation"},"content":"2. bobaBot exits.","lastModifiedDate":"2022-09-22"},{"lineNumber":596,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":597,"author":{"gitId":"Samsation"},"content":"   Use case ends.","lastModifiedDate":"2022-09-22"},{"lineNumber":598,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":599,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":600,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":601,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":602,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":603,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":604,"author":{"gitId":"WuHaohui1231"},"content":"2.  Should be able to hold up to 1000 cashiers at bubble tea shops without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2022-09-28"},{"lineNumber":605,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":606,"author":{"gitId":"WuHaohui1231"},"content":"4.  The system should respond fast within 0.5 second, so as to speed up the ordering at counters","lastModifiedDate":"2022-09-28"},{"lineNumber":607,"author":{"gitId":"WuHaohui1231"},"content":"5.  bobaBot should be able to work on any computers, either 32-bit or 64-bit, slow or fast, as the computers at counters may be old and slow","lastModifiedDate":"2022-09-28"},{"lineNumber":608,"author":{"gitId":"WuHaohui1231"},"content":"6.  The database should be able to handle frequent changes of data efficiently","lastModifiedDate":"2022-09-28"},{"lineNumber":609,"author":{"gitId":"WuHaohui1231"},"content":"7.  bobaBot should be usable by workers who are not familiar with command lines, and easy to learn","lastModifiedDate":"2022-09-28"},{"lineNumber":610,"author":{"gitId":"WuHaohui1231"},"content":"8.  The management of customers\u0027 data should follow PDPA","lastModifiedDate":"2022-09-28"},{"lineNumber":611,"author":{"gitId":"WuHaohui1231"},"content":"9.  Should work when some data is missing or inaccurate","lastModifiedDate":"2022-09-28"},{"lineNumber":612,"author":{"gitId":"WuHaohui1231"},"content":"10. The source code should be open source","lastModifiedDate":"2022-09-28"},{"lineNumber":613,"author":{"gitId":"WuHaohui1231"},"content":"11. The source code and project management should follow the requirements and principles in CS2103T","lastModifiedDate":"2022-09-28"},{"lineNumber":614,"author":{"gitId":"WuHaohui1231"},"content":"12. Should handle large amount of customers\u0027 data, like 10,000 customers","lastModifiedDate":"2022-09-28"},{"lineNumber":615,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":616,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":617,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":618,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":619,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":620,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":621,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":622,"author":{"gitId":"albertZhangTJ"},"content":"* **User**: The staff of the boba shop","lastModifiedDate":"2022-09-28"},{"lineNumber":623,"author":{"gitId":"albertZhangTJ"},"content":"* **Customer**: The customer of the boba shop","lastModifiedDate":"2022-09-28"},{"lineNumber":624,"author":{"gitId":"albertZhangTJ"},"content":"* **Customer\u0027s detail**: Any information in the system related to the customer","lastModifiedDate":"2022-09-28"},{"lineNumber":625,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":626,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":627,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":628,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":629,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":630,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":631,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":632,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":633,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":634,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":635,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":636,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":637,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":638,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":639,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":640,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":641,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":642,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":643,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":644,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":645,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":646,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":647,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":648,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":649,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":650,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":651,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":652,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":653,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":654,"author":{"gitId":"Samsation"},"content":"### Deleting a customer","lastModifiedDate":"2022-10-26"},{"lineNumber":655,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":656,"author":{"gitId":"Samsation"},"content":"1. Deleting a customer while all customers are being shown","lastModifiedDate":"2022-10-26"},{"lineNumber":657,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":658,"author":{"gitId":"Samsation"},"content":"   1. Prerequisites: List all customers using the `list` command. Multiple customers in the list.","lastModifiedDate":"2022-10-26"},{"lineNumber":659,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":660,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":661,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":662,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":663,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":664,"author":{"gitId":"Samsation"},"content":"      Expected: No customer is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2022-10-26"},{"lineNumber":665,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":666,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":667,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":668,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":669,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":670,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":671,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":672,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":673,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":674,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":675,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":676,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":677,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":678,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"Samsation":156,"TanWenCong":44,"bensohh":49,"albertZhangTJ":66,"-":339,"WuHaohui1231":24}},{"path":"docs/Documentation.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"albertZhangTJ"},"content":"\u003clink rel\u003d\"shortcut icon\" type\u003d\"image/x-icon\" href\u003d\"favicon.png\"\u003e","lastModifiedDate":"2022-11-01"},{"lineNumber":2,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":3,"author":{"gitId":"albertZhangTJ"},"content":"# Documentation Guide","lastModifiedDate":"2022-11-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"**Setting up and maintaining the project website:**","lastModifiedDate":"2020-06-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"* We use [**Jekyll**](https://jekyllrb.com/) to manage documentation.","lastModifiedDate":"2020-06-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* The `docs/` folder is used for documentation.","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"* To learn how set it up and maintain the project website, follow the guide [_[se-edu/guides] **Using Jekyll for project documentation**_](https://se-education.org/guides/tutorials/jekyll.html).","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"* Note these points when adapting the documentation to a different project/product:","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  * The \u0027Site-wide settings\u0027 section of the page linked above has information on how to update site-wide elements such as the top navigation bar.","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  * :bulb: In addition to updating content files, you might have to update the config files `docs\\_config.yml` and `docs\\_sass\\minima\\_base.scss` (which contains a reference to `AB-3` that comes into play when converting documentation pages to PDF format).","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"* If you are using Intellij for editing documentation files, you can consider enabling \u0027soft wrapping\u0027 for `*.md` files, as explained in [_[se-edu/guides] **Intellij IDEA: Useful settings**_](https://se-education.org/guides/tutorials/intellijUsefulSettings.html#enabling-soft-wrapping)","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"**Style guidance:**","lastModifiedDate":"2020-06-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* Follow the [**_Google developer documentation style guide_**](https://developers.google.com/style).","lastModifiedDate":"2020-06-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* Also relevant is the [_[se-edu/guides] **Markdown coding standard**_](https://se-education.org/guides/conventions/markdown.html)","lastModifiedDate":"2020-06-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"**Diagrams:**","lastModifiedDate":"2020-06-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"* See the [_[se-edu/guides] **Using PlantUML**_](https://se-education.org/guides/tutorials/plantUml.html)","lastModifiedDate":"2020-06-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"**Converting a document to the PDF format:**","lastModifiedDate":"2020-06-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"* See the guide [_[se-edu/guides] **Saving web documents as PDF files**_](https://se-education.org/guides/tutorials/savingPdf.html)","lastModifiedDate":"2020-06-07"}],"authorContributionMap":{"albertZhangTJ":3,"-":25}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Setting up and getting started","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2020-06-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.\u003cbr\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"TanWenCong"},"content":"   1. Run the `seedu.boba.Main` and try a few commands.","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [AddressBook’s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2020-06-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","lastModifiedDate":"2020-06-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   * [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   * [Adding a new command](tutorials/AddRemark.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   * [Removing fields](tutorials/RemovingFields.md)","lastModifiedDate":"2021-08-01"}],"authorContributionMap":{"TanWenCong":1,"-":54}},{"path":"docs/Testing.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Testing guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Running tests","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"There are two ways to run tests.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"* **Method 1: Using IntelliJ JUnit test runner**","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * To run all tests, right-click on the `src/test/java` folder and choose `Run \u0027All Tests\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  * To run a subset of tests, you can right-click on a test package,","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    test class, or a test and choose `Run \u0027ABC\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **Method 2: Using Gradle**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  * Open a console and run the command `gradlew clean test` (Mac/Linux: `./gradlew clean test`)","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-secondary\"\u003e:link: **Link**: Read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html) to learn more about using Gradle.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"## Types of tests","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"This project has three types of tests:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. *Unit tests* targeting the lowest level methods/classes.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"TanWenCong"},"content":"   e.g. `seedu.boba.commons.StringUtilTest`","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. *Integration tests* that are checking the integration of multiple code units (those code units are assumed to be working).\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"TanWenCong"},"content":"   e.g. `seedu.boba.storage.StorageManagerTest`","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"1. Hybrids of unit and integration tests. These test are checking multiple code units as well as how the are connected together.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"TanWenCong"},"content":"   e.g. `seedu.boba.logic.LogicManagerTest`","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"TanWenCong":3,"-":33}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"albertZhangTJ"},"content":"\u003clink rel\u003d\"shortcut icon\" type\u003d\"image/x-icon\" href\u003d\"favicon.png\"\u003e","lastModifiedDate":"2022-11-01"},{"lineNumber":2,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":3,"author":{"gitId":"albertZhangTJ"},"content":"# User Guide","lastModifiedDate":"2022-11-01"},{"lineNumber":4,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"Samsation"},"content":"bobaBot is a **desktop application** for managing customers’ membership details. It is **optimized for Command Line Interface (CLI) while retaining some benefits of the Graphical User Interface (GUI)**. If you are a cashier working at a bubble tea shop and can type fast, bobaBot can help you easily find and manage your customers’ membership information as compared to other GUI applications.","lastModifiedDate":"2022-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"Samsation"},"content":"---","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":10,"author":{"gitId":"Samsation"},"content":"## Table of Contents","lastModifiedDate":"2022-10-28"},{"lineNumber":11,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":12,"author":{"gitId":"bensohh"},"content":"1. [Quick start](#1-quick-start) \u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":13,"author":{"gitId":"Samsation"},"content":"1. \u003cdetails\u003e\u003csummary\u003e\u003ca href\u003d\"#4-features\"\u003eFeatures\u003c/a\u003e\u003c/summary\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"bensohh"},"content":"      2.1. \u003ca href\u003d\"#21-viewing-help--help\"\u003eHelp\u003c/a\u003e\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":15,"author":{"gitId":"bensohh"},"content":"      2.2. \u003ca href\u003d\"#22-adding-a-customer-add\"\u003eAdd\u003c/a\u003e\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":16,"author":{"gitId":"bensohh"},"content":"      2.3. \u003ca href\u003d\"#23-editing-a-customers-details-edit\"\u003eEdit\u003c/a\u003e\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":17,"author":{"gitId":"bensohh"},"content":"      2.4. \u003ca href\u003d\"#24-increasing-a-customers-reward-points-incr\"\u003eIncrease\u003c/a\u003e\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":18,"author":{"gitId":"bensohh"},"content":"      2.5. \u003ca href\u003d\"#25-decreasing-a-customers-reward-points-decr\"\u003eDecrease\u003c/a\u003e\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":19,"author":{"gitId":"bensohh"},"content":"      2.6. \u003ca href\u003d\"#26-listing-all-customers--list\"\u003eList\u003c/a\u003e\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":20,"author":{"gitId":"bensohh"},"content":"      2.7. \u003ca href\u003d\"#27-locating-customers-by-name-find\"\u003eFind\u003c/a\u003e\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":21,"author":{"gitId":"bensohh"},"content":"      2.8. \u003ca href\u003d\"#28-deleting-a-customer--delete\"\u003eDelete\u003c/a\u003e\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":22,"author":{"gitId":"bensohh"},"content":"      2.9. \u003ca href\u003d\"#29undo-a-command--undo\"\u003eUndo\u003c/a\u003e\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":23,"author":{"gitId":"bensohh"},"content":"      2.10. \u003ca href\u003d\"#210-redo-an-undocommand--redo\"\u003eRedo\u003c/a\u003e\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":24,"author":{"gitId":"bensohh"},"content":"      2.11. \u003ca href\u003d\"#211--clearing-all-entries--clear\"\u003eClear\u003c/a\u003e\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":25,"author":{"gitId":"bensohh"},"content":"      2.12. \u003ca href\u003d\"#212-calculate-calc\"\u003eCalculate\u003c/a\u003e\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":26,"author":{"gitId":"bensohh"},"content":"      2.13. \u003ca href\u003d\"#213-gui-calculator-calc-gui\"\u003eCalculator\u003c/a\u003e\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":27,"author":{"gitId":"bensohh"},"content":"      2.14. \u003ca href\u003d\"#214-exiting-the-program--exit\"\u003eExit\u003c/a\u003e\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":28,"author":{"gitId":"Samsation"},"content":"   \u003c/details\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":29,"author":{"gitId":"bensohh"},"content":"1. [FAQ](#3-faq) \u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":30,"author":{"gitId":"bensohh"},"content":"1. [Command summary](#4-command-summary) \u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"bensohh"},"content":"## 1. Quick start","lastModifiedDate":"2022-10-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"Samsation"},"content":"1. Download the latest `bobaBot.jar` from [here](https://github.com/AY2223S1-CS2103T-W09-1/tp/releases).","lastModifiedDate":"2022-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"Samsation"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your bobaBot.","lastModifiedDate":"2022-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"Samsation"},"content":"    * **`list`** : Lists all customers.","lastModifiedDate":"2022-09-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"bensohh"},"content":"    * **`add n/John Doe p/98765432 e/johnd@example.com m/1 r/0`** : Adds a customer named `John Doe` to bobaBot.","lastModifiedDate":"2022-10-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"bensohh"},"content":"    * **`delete p/98765432`** : Deletes the customer with the corresponding phone number (aka John Doe).","lastModifiedDate":"2022-10-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"Samsation"},"content":"    * **`clear`** : Deletes all customers.","lastModifiedDate":"2022-09-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"Samsation"},"content":"1. Scroll down on the Customer list and Promotion list to see all the customers and on-going promotions.","lastModifiedDate":"2022-10-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"bensohh"},"content":"## 2. Features","lastModifiedDate":"2022-10-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"bensohh"},"content":"* Command words are CASE_SENSITIVE and should all be in `lower-case`.\u003cbr\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":71,"author":{"gitId":"bensohh"},"content":"  e.g. `add` instead of `ADD`, `Add`, `aDd`,..., using `non lower-case` command words will result in command being not recognised.","lastModifiedDate":"2022-10-30"},{"lineNumber":72,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"TanWenCong"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/member` or as `n/John Doe`.","lastModifiedDate":"2022-10-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"TanWenCong"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/member`, `t/member t/gold` etc.","lastModifiedDate":"2022-10-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"bensohh"},"content":"### 2.1 Viewing help : `help`","lastModifiedDate":"2022-10-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"bensohh"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2022-09-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"bensohh"},"content":"![help message](images/screenshots/HelpCommand/HelpCommand.png)","lastModifiedDate":"2022-10-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"bensohh"},"content":"### 2.2 Adding a Customer: `add`","lastModifiedDate":"2022-10-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"TanWenCong"},"content":"Adds a Customer to bobaBot.","lastModifiedDate":"2022-09-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"TanWenCong"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL m/BIRTHDAY_MONTH r/REWARD [t/TAG]…`","lastModifiedDate":"2022-10-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":108,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":109,"author":{"gitId":"Samsation"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: Tip:","lastModifiedDate":"2022-09-22"},{"lineNumber":110,"author":{"gitId":"Samsation"},"content":"A customer can have any number of tags (including 0)","lastModifiedDate":"2022-10-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"TanWenCong"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com m/1 r/0 `","lastModifiedDate":"2022-10-26"},{"lineNumber":115,"author":{"gitId":"bensohh"},"content":"    \u003cdetails\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":116,"author":{"gitId":"bensohh"},"content":"    \u003csummary\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":117,"author":{"gitId":"bensohh"},"content":"    \u003cb\u003eWalk-through with Images\u003c/b\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":118,"author":{"gitId":"bensohh"},"content":"    \u003c/summary\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":119,"author":{"gitId":"bensohh"},"content":"    ","lastModifiedDate":"2022-10-30"},{"lineNumber":120,"author":{"gitId":"bensohh"},"content":"    Before executing the AddCommand:","lastModifiedDate":"2022-10-31"},{"lineNumber":121,"author":{"gitId":"bensohh"},"content":"    \u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":122,"author":{"gitId":"bensohh"},"content":"    \u003cimg src\u003d\"images/screenshots/AddCommand/AddCommand1.png\"\u003e\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":123,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":124,"author":{"gitId":"bensohh"},"content":"    After executing the AddCommand:","lastModifiedDate":"2022-10-31"},{"lineNumber":125,"author":{"gitId":"bensohh"},"content":"    \u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":126,"author":{"gitId":"bensohh"},"content":"    \u003cimg src\u003d\"images/screenshots/AddCommand/AddCommand1Result.png\"\u003e\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":127,"author":{"gitId":"bensohh"},"content":"    \u003c/details\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":128,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":129,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":130,"author":{"gitId":"bensohh"},"content":"* `add n/Charlie Puth p/81234567 e/charlie@puth.com r/3000 t/silver m/12`","lastModifiedDate":"2022-10-30"},{"lineNumber":131,"author":{"gitId":"bensohh"},"content":"    \u003cdetails\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":132,"author":{"gitId":"bensohh"},"content":"    \u003csummary\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":133,"author":{"gitId":"bensohh"},"content":"    \u003cb\u003eWalk-through with Images\u003c/b\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":134,"author":{"gitId":"bensohh"},"content":"    \u003c/summary\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":135,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":136,"author":{"gitId":"bensohh"},"content":"    Before executing the AddCommand:","lastModifiedDate":"2022-10-31"},{"lineNumber":137,"author":{"gitId":"bensohh"},"content":"    \u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":138,"author":{"gitId":"bensohh"},"content":"    \u003cimg src\u003d\"images/screenshots/AddCommand/AddCommand.png\"\u003e\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"bensohh"},"content":"    After executing the AddCommand:","lastModifiedDate":"2022-10-31"},{"lineNumber":141,"author":{"gitId":"bensohh"},"content":"    \u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":142,"author":{"gitId":"bensohh"},"content":"    \u003cimg src\u003d\"images/screenshots/AddCommand/AddCommandResult.png\"\u003e\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":143,"author":{"gitId":"bensohh"},"content":"    \u003c/details\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":144,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":145,"author":{"gitId":"bensohh"},"content":"### 2.3 Editing a Customer’s details: `edit`","lastModifiedDate":"2022-10-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"Samsation"},"content":"Edits an existing Customer in bobaBot.","lastModifiedDate":"2022-10-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"Samsation"},"content":"Format: `edit p/PHONE_NUMBER OR edit e/EMAIL","lastModifiedDate":"2022-10-20"},{"lineNumber":150,"author":{"gitId":"Samsation"},"content":"[n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [r/REWARD] [t/TAG]…​`","lastModifiedDate":"2022-09-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"Samsation"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: Tip:","lastModifiedDate":"2022-09-22"},{"lineNumber":153,"author":{"gitId":"Samsation"},"content":"At least one of the optional fields must be provided","lastModifiedDate":"2022-09-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"bensohh"},"content":"* `edit p/81234567 p/88888888`","lastModifiedDate":"2022-10-30"},{"lineNumber":158,"author":{"gitId":"bensohh"},"content":"    \u003cdetails\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":159,"author":{"gitId":"bensohh"},"content":"    \u003csummary\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":160,"author":{"gitId":"bensohh"},"content":"    \u003cb\u003eWalk-through with Images\u003c/b\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":161,"author":{"gitId":"bensohh"},"content":"    \u003c/summary\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":163,"author":{"gitId":"bensohh"},"content":"    Before executing the EditCommand via \u003ccode\u003ePHONE_NUMBER\u003c/code\u003e:","lastModifiedDate":"2022-10-31"},{"lineNumber":164,"author":{"gitId":"bensohh"},"content":"    \u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":165,"author":{"gitId":"bensohh"},"content":"    \u003cimg src\u003d\"images/screenshots/EditCommand/EditCommand_Phone.png\"\u003e\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":167,"author":{"gitId":"bensohh"},"content":"    After executing the EditCommand via \u003ccode\u003ePHONE_NUMBER\u003c/code\u003e:","lastModifiedDate":"2022-10-31"},{"lineNumber":168,"author":{"gitId":"bensohh"},"content":"    \u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":169,"author":{"gitId":"bensohh"},"content":"    \u003cimg src\u003d\"images/screenshots/EditCommand/EditCommand_PhoneResult.png\"\u003e\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":170,"author":{"gitId":"bensohh"},"content":"    \u003c/details\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"bensohh"},"content":"* `edit e/charlie@puth.com e/taylor@swift.com`","lastModifiedDate":"2022-10-30"},{"lineNumber":174,"author":{"gitId":"bensohh"},"content":"    \u003cdetails\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":175,"author":{"gitId":"bensohh"},"content":"    \u003csummary\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":176,"author":{"gitId":"bensohh"},"content":"    \u003cb\u003eWalk-through with Images\u003c/b\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":177,"author":{"gitId":"bensohh"},"content":"    \u003c/summary\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":178,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":179,"author":{"gitId":"bensohh"},"content":"    Before executing the EditCommand via \u003ccode\u003eEMAIL\u003c/code\u003e:","lastModifiedDate":"2022-10-31"},{"lineNumber":180,"author":{"gitId":"bensohh"},"content":"    \u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":181,"author":{"gitId":"bensohh"},"content":"    \u003cimg src\u003d\"images/screenshots/EditCommand/EditCommand_Email.png\"\u003e\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":182,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":183,"author":{"gitId":"bensohh"},"content":"    After executing the EditCommand via \u003ccode\u003eEMAIL\u003c/code\u003e:","lastModifiedDate":"2022-10-31"},{"lineNumber":184,"author":{"gitId":"bensohh"},"content":"    \u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":185,"author":{"gitId":"bensohh"},"content":"    \u003cimg src\u003d\"images/screenshots/EditCommand/EditCommand_EmailResult.png\"\u003e\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":186,"author":{"gitId":"bensohh"},"content":"    \u003c/details\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":187,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":188,"author":{"gitId":"bensohh"},"content":"### 2.4 Increasing a Customer’s Reward points: `incr`","lastModifiedDate":"2022-10-30"},{"lineNumber":189,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":190,"author":{"gitId":"Samsation"},"content":"Increases the Reward points of existing Customer in bobaBot.","lastModifiedDate":"2022-10-24"},{"lineNumber":191,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":192,"author":{"gitId":"Samsation"},"content":"Format: `incr INCREMENT_VALUE p/PHONE_NUMBER OR incr INCREMENT_VALUE e/EMAIL`","lastModifiedDate":"2022-10-24"},{"lineNumber":193,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":194,"author":{"gitId":"Samsation"},"content":"Examples:","lastModifiedDate":"2022-10-24"},{"lineNumber":195,"author":{"gitId":"bensohh"},"content":"* `incr 100 p/88888888`","lastModifiedDate":"2022-10-30"},{"lineNumber":196,"author":{"gitId":"bensohh"},"content":"    \u003cdetails\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":197,"author":{"gitId":"bensohh"},"content":"    \u003csummary\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":198,"author":{"gitId":"bensohh"},"content":"    \u003cb\u003eWalk-through with Images\u003c/b\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":199,"author":{"gitId":"bensohh"},"content":"    \u003c/summary\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":200,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":201,"author":{"gitId":"bensohh"},"content":"    Before executing the IncreaseCommand via \u003ccode\u003ePHONE_NUMBER\u003c/code\u003e:","lastModifiedDate":"2022-10-31"},{"lineNumber":202,"author":{"gitId":"bensohh"},"content":"    \u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":203,"author":{"gitId":"bensohh"},"content":"    \u003cimg src\u003d\"images/screenshots/IncreaseAndDecreaseCommand/IncreaseCommandPhone.png\"\u003e\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":204,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":205,"author":{"gitId":"bensohh"},"content":"    After executing the IncreaseCommand via \u003ccode\u003ePHONE_NUMBER\u003c/code\u003e:","lastModifiedDate":"2022-10-31"},{"lineNumber":206,"author":{"gitId":"bensohh"},"content":"    \u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":207,"author":{"gitId":"bensohh"},"content":"    \u003cimg src\u003d\"images/screenshots/IncreaseAndDecreaseCommand/IncreaseCommandPhoneResult.png\"\u003e\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":208,"author":{"gitId":"bensohh"},"content":"    \u003c/details\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":209,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":210,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":211,"author":{"gitId":"bensohh"},"content":"* `incr 1000 e/alexyeoh@example.com`","lastModifiedDate":"2022-10-30"},{"lineNumber":212,"author":{"gitId":"bensohh"},"content":"    \u003cdetails\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":213,"author":{"gitId":"bensohh"},"content":"    \u003csummary\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":214,"author":{"gitId":"bensohh"},"content":"    \u003cb\u003eWalk-through with Images\u003c/b\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":215,"author":{"gitId":"bensohh"},"content":"    \u003c/summary\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":216,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":217,"author":{"gitId":"bensohh"},"content":"    Before executing the IncreaseCommand via \u003ccode\u003eEMAIL\u003c/code\u003e:","lastModifiedDate":"2022-10-31"},{"lineNumber":218,"author":{"gitId":"bensohh"},"content":"    \u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":219,"author":{"gitId":"bensohh"},"content":"    \u003cimg src\u003d\"images/screenshots/IncreaseAndDecreaseCommand/IncreaseCommandEmail.png\"\u003e\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":220,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":221,"author":{"gitId":"bensohh"},"content":"    After executing the IncreaseCommand via \u003ccode\u003eEMAIL\u003c/code\u003e:","lastModifiedDate":"2022-10-31"},{"lineNumber":222,"author":{"gitId":"bensohh"},"content":"    \u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":223,"author":{"gitId":"bensohh"},"content":"    \u003cimg src\u003d\"images/screenshots/IncreaseAndDecreaseCommand/IncreaseCommandEmailResult.png\"\u003e\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":224,"author":{"gitId":"bensohh"},"content":"    \u003c/details\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":226,"author":{"gitId":"bensohh"},"content":"### 2.5 Decreasing a Customer’s Reward points: `decr`","lastModifiedDate":"2022-10-30"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":228,"author":{"gitId":"Samsation"},"content":"Decreases the Reward points of existing Customer in bobaBot.","lastModifiedDate":"2022-10-24"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":230,"author":{"gitId":"Samsation"},"content":"Format: `decr DECREMENT_VALUE p/PHONE_NUMBER OR decr DECREMENT_VALUE e/EMAIL`","lastModifiedDate":"2022-10-24"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":232,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-10-24"},{"lineNumber":233,"author":{"gitId":"bensohh"},"content":"* `decr 200 p/87438807`","lastModifiedDate":"2022-10-30"},{"lineNumber":234,"author":{"gitId":"bensohh"},"content":"    \u003cdetails\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":235,"author":{"gitId":"bensohh"},"content":"    \u003csummary\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":236,"author":{"gitId":"bensohh"},"content":"    \u003cb\u003eWalk-through with Images\u003c/b\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":237,"author":{"gitId":"bensohh"},"content":"    \u003c/summary\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":239,"author":{"gitId":"bensohh"},"content":"    Before executing the IncreaseCommand via \u003ccode\u003ePHONE_NUMBER\u003c/code\u003e:","lastModifiedDate":"2022-10-31"},{"lineNumber":240,"author":{"gitId":"bensohh"},"content":"    \u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":241,"author":{"gitId":"bensohh"},"content":"    \u003cimg src\u003d\"images/screenshots/IncreaseAndDecreaseCommand/DecreaseCommandPhone.png\"\u003e\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":243,"author":{"gitId":"bensohh"},"content":"    After executing the IncreaseCommand via \u003ccode\u003ePHONE_NUMBER\u003c/code\u003e:","lastModifiedDate":"2022-10-31"},{"lineNumber":244,"author":{"gitId":"bensohh"},"content":"    \u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":245,"author":{"gitId":"bensohh"},"content":"    \u003cimg src\u003d\"images/screenshots/IncreaseAndDecreaseCommand/DecreaseCommandPhoneResult.png\"\u003e\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":246,"author":{"gitId":"bensohh"},"content":"    \u003c/details\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":247,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":248,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":249,"author":{"gitId":"bensohh"},"content":"* `decr 500 e/taylor@swift.com`","lastModifiedDate":"2022-10-30"},{"lineNumber":250,"author":{"gitId":"bensohh"},"content":"    \u003cdetails\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":251,"author":{"gitId":"bensohh"},"content":"    \u003csummary\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":252,"author":{"gitId":"bensohh"},"content":"    \u003cb\u003eWalk-through with Images\u003c/b\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":253,"author":{"gitId":"bensohh"},"content":"    \u003c/summary\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":254,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":255,"author":{"gitId":"bensohh"},"content":"    Before executing the IncreaseCommand via \u003ccode\u003eEMAIL\u003c/code\u003e:","lastModifiedDate":"2022-10-31"},{"lineNumber":256,"author":{"gitId":"bensohh"},"content":"    \u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":257,"author":{"gitId":"bensohh"},"content":"    \u003cimg src\u003d\"images/screenshots/IncreaseAndDecreaseCommand/DecreaseCommandEmail.png\"\u003e\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":258,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":259,"author":{"gitId":"bensohh"},"content":"    After executing the IncreaseCommand via \u003ccode\u003eEMAIL\u003c/code\u003e:","lastModifiedDate":"2022-10-31"},{"lineNumber":260,"author":{"gitId":"bensohh"},"content":"    \u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":261,"author":{"gitId":"bensohh"},"content":"    \u003cimg src\u003d\"images/screenshots/IncreaseAndDecreaseCommand/DecreaseCommandEmailResult.png\"\u003e\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":262,"author":{"gitId":"bensohh"},"content":"    \u003c/details\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":263,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":264,"author":{"gitId":"bensohh"},"content":"### 2.6 Listing all customers : `list`","lastModifiedDate":"2022-10-30"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"bensohh"},"content":"Shows a list of all Customers in bobaBot.","lastModifiedDate":"2022-09-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"bensohh"},"content":"\u003cdetails\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":271,"author":{"gitId":"bensohh"},"content":"\u003csummary\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":272,"author":{"gitId":"bensohh"},"content":"\u003cb\u003eWalk-through with Images\u003c/b\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":273,"author":{"gitId":"bensohh"},"content":"\u003c/summary\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":274,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":275,"author":{"gitId":"bensohh"},"content":"Before executing the ListCommand:","lastModifiedDate":"2022-10-31"},{"lineNumber":276,"author":{"gitId":"bensohh"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":277,"author":{"gitId":"bensohh"},"content":"\u003cimg src\u003d\"images/screenshots/ListCommand/ListCommand.png\"\u003e\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":278,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":279,"author":{"gitId":"bensohh"},"content":"After executing the ListCommand:","lastModifiedDate":"2022-10-31"},{"lineNumber":280,"author":{"gitId":"bensohh"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":281,"author":{"gitId":"bensohh"},"content":"\u003cimg src\u003d\"images/screenshots/ListCommand/ListCommandResult.png\"\u003e\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":282,"author":{"gitId":"bensohh"},"content":"\u003c/details\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":283,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":284,"author":{"gitId":"bensohh"},"content":"### 2.7 Locating customers by name: `find`","lastModifiedDate":"2022-10-30"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"WuHaohui1231"},"content":"Finds Customers whose information (including name, phone, email, address) contain any of the given keywords.","lastModifiedDate":"2022-10-06"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"WuHaohui1231"},"content":"* Customers matching at least one keyword will be returned (i.e. `OR` search)","lastModifiedDate":"2022-10-06"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"albertZhangTJ"},"content":"* When searching for names, fuzzy search based on [Soundex](https://en.wikipedia.org/wiki/Soundex) will be used","lastModifiedDate":"2022-10-30"},{"lineNumber":295,"author":{"gitId":"bensohh"},"content":"  e.g. `Aschcroft` will match `Aschcraft`, similarly `Bob` will match `Bop`","lastModifiedDate":"2022-10-30"},{"lineNumber":296,"author":{"gitId":"WuHaohui1231"},"content":"* No need to type in the whole word. e.g `9927` will match `27859927`","lastModifiedDate":"2022-10-06"},{"lineNumber":297,"author":{"gitId":"albertZhangTJ"},"content":"* For precise searching, specify the corresponding attribute (phone number or email)","lastModifiedDate":"2022-10-28"},{"lineNumber":298,"author":{"gitId":"albertZhangTJ"},"content":"  e.g. `find p/88888888` will only match the customer with phone number `88888888`","lastModifiedDate":"2022-10-28"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"* `find John` returns `john` and `John Doe`","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"bensohh"},"content":"    \u003cdetails\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":303,"author":{"gitId":"bensohh"},"content":"    \u003csummary\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":304,"author":{"gitId":"bensohh"},"content":"    \u003cb\u003eWalk-through with Images\u003c/b\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":305,"author":{"gitId":"bensohh"},"content":"    \u003c/summary\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":306,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":307,"author":{"gitId":"bensohh"},"content":"    Before executing the FindCommand:","lastModifiedDate":"2022-10-31"},{"lineNumber":308,"author":{"gitId":"bensohh"},"content":"    \u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":309,"author":{"gitId":"bensohh"},"content":"    \u003cimg src\u003d\"images/screenshots/FindCommand/FindCommandNormal.png\"\u003e\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":310,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":311,"author":{"gitId":"bensohh"},"content":"    After executing the FindCommand:","lastModifiedDate":"2022-10-31"},{"lineNumber":312,"author":{"gitId":"bensohh"},"content":"    \u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":313,"author":{"gitId":"bensohh"},"content":"    \u003cimg src\u003d\"images/screenshots/FindCommand/FindCommandNormalResult.png\"\u003e\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":314,"author":{"gitId":"bensohh"},"content":"    \u003c/details\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":315,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":316,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":317,"author":{"gitId":"albertZhangTJ"},"content":"* `find alex david` returns `Alex Yeoh`, `David Li`","lastModifiedDate":"2022-10-28"},{"lineNumber":318,"author":{"gitId":"bensohh"},"content":"    \u003cdetails\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":319,"author":{"gitId":"bensohh"},"content":"    \u003csummary\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":320,"author":{"gitId":"bensohh"},"content":"    \u003cb\u003eWalk-through with Images\u003c/b\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":321,"author":{"gitId":"bensohh"},"content":"    \u003c/summary\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":322,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":323,"author":{"gitId":"bensohh"},"content":"    Before executing the FindCommand (with at least one keyword):","lastModifiedDate":"2022-10-31"},{"lineNumber":324,"author":{"gitId":"bensohh"},"content":"    \u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":325,"author":{"gitId":"bensohh"},"content":"    \u003cimg src\u003d\"images/screenshots/FindCommand/FindCommandMultiple.png\"\u003e\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":326,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":327,"author":{"gitId":"bensohh"},"content":"    After executing the FindCommand (with at least one keyword):","lastModifiedDate":"2022-10-31"},{"lineNumber":328,"author":{"gitId":"bensohh"},"content":"    \u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":329,"author":{"gitId":"bensohh"},"content":"    \u003cimg src\u003d\"images/screenshots/FindCommand/FindCommandMultipleResult.png\"\u003e\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":330,"author":{"gitId":"bensohh"},"content":"    \u003c/details\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":331,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":332,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":333,"author":{"gitId":"bensohh"},"content":"* `find Bob` returns `Bob` and `Bop`","lastModifiedDate":"2022-10-30"},{"lineNumber":334,"author":{"gitId":"bensohh"},"content":"    \u003cdetails\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":335,"author":{"gitId":"bensohh"},"content":"    \u003csummary\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":336,"author":{"gitId":"bensohh"},"content":"    \u003cb\u003eWalk-through with Images\u003c/b\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":337,"author":{"gitId":"bensohh"},"content":"    \u003c/summary\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":338,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":339,"author":{"gitId":"bensohh"},"content":"    Before executing the FindCommand (with FuzzySearch):","lastModifiedDate":"2022-10-31"},{"lineNumber":340,"author":{"gitId":"bensohh"},"content":"    \u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":341,"author":{"gitId":"bensohh"},"content":"    \u003cimg src\u003d\"images/screenshots/FindCommand/FindCommand_Fuzzy.png\"\u003e\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":342,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":343,"author":{"gitId":"bensohh"},"content":"    After executing the FindCommand (with FuzzySearch):","lastModifiedDate":"2022-10-31"},{"lineNumber":344,"author":{"gitId":"bensohh"},"content":"    \u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":345,"author":{"gitId":"bensohh"},"content":"    \u003cimg src\u003d\"images/screenshots/FindCommand/FindCommand_FuzzyResult.png\"\u003e\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":346,"author":{"gitId":"bensohh"},"content":"    \u003c/details\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":347,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":349,"author":{"gitId":"bensohh"},"content":"* `find 8000` returns both `Roy Balakrishnan` and `Bob`","lastModifiedDate":"2022-10-30"},{"lineNumber":350,"author":{"gitId":"bensohh"},"content":"    \u003cdetails\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":351,"author":{"gitId":"bensohh"},"content":"    \u003csummary\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":352,"author":{"gitId":"bensohh"},"content":"    \u003cb\u003eWalk-through with Images\u003c/b\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":353,"author":{"gitId":"bensohh"},"content":"    \u003c/summary\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":355,"author":{"gitId":"bensohh"},"content":"    Before executing the FindCommand (with matching keywords \u003ccode\u003e8000\u003c/code\u003e):","lastModifiedDate":"2022-10-31"},{"lineNumber":356,"author":{"gitId":"bensohh"},"content":"    \u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":357,"author":{"gitId":"bensohh"},"content":"    \u003cimg src\u003d\"images/screenshots/FindCommand/FindCommand_General.png\"\u003e\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":359,"author":{"gitId":"bensohh"},"content":"    After executing the FindCommand (with matching keywords \u003ccode\u003e8000\u003c/code\u003e):","lastModifiedDate":"2022-10-31"},{"lineNumber":360,"author":{"gitId":"bensohh"},"content":"    \u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":361,"author":{"gitId":"bensohh"},"content":"    \u003cul\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":362,"author":{"gitId":"bensohh"},"content":"      \u003cli\u003eBoth `Roy` and `Bob` have `8000` reward points hence they show up in the search.\u003c/li\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":363,"author":{"gitId":"bensohh"},"content":"    \u003c/ul\u003e\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":364,"author":{"gitId":"bensohh"},"content":"    \u003cimg src\u003d\"images/screenshots/FindCommand/FindCommand_GeneralResult.png\"\u003e\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":365,"author":{"gitId":"bensohh"},"content":"    \u003c/details\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":367,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":368,"author":{"gitId":"bensohh"},"content":"* `find p/87438807` returns only `Alex Yeoh`","lastModifiedDate":"2022-10-31"},{"lineNumber":369,"author":{"gitId":"bensohh"},"content":"    \u003cdetails\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":370,"author":{"gitId":"bensohh"},"content":"    \u003csummary\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":371,"author":{"gitId":"bensohh"},"content":"    \u003cb\u003eWalk-through with Images\u003c/b\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":372,"author":{"gitId":"bensohh"},"content":"    \u003c/summary\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":373,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":374,"author":{"gitId":"bensohh"},"content":"    Before executing the FindCommand via \u003ccode\u003ePHONE_NUMBER\u003c/code\u003e:","lastModifiedDate":"2022-10-31"},{"lineNumber":375,"author":{"gitId":"bensohh"},"content":"    \u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":376,"author":{"gitId":"bensohh"},"content":"    \u003cimg src\u003d\"images/screenshots/FindCommand/FindCommand_Phone.png\"\u003e\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":377,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":378,"author":{"gitId":"bensohh"},"content":"    After executing the FindCommand via \u003ccode\u003ePHONE_NUMBER\u003c/code\u003e:","lastModifiedDate":"2022-10-31"},{"lineNumber":379,"author":{"gitId":"bensohh"},"content":"    \u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":380,"author":{"gitId":"bensohh"},"content":"    \u003cimg src\u003d\"images/screenshots/FindCommand/FindCommand_PhoneResult.png\"\u003e\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":381,"author":{"gitId":"bensohh"},"content":"    \u003c/details\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":382,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":383,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":384,"author":{"gitId":"bensohh"},"content":"* `find e/charlotte@example.com` returns only `Charlotte Oliveiro`","lastModifiedDate":"2022-10-31"},{"lineNumber":385,"author":{"gitId":"bensohh"},"content":"    \u003cdetails\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":386,"author":{"gitId":"bensohh"},"content":"    \u003csummary\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":387,"author":{"gitId":"bensohh"},"content":"    \u003cb\u003eWalk-through with Images\u003c/b\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":388,"author":{"gitId":"bensohh"},"content":"    \u003c/summary\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"bensohh"},"content":"    Before executing the FindCommand via \u003ccode\u003eEMAIL\u003c/code\u003e:","lastModifiedDate":"2022-10-31"},{"lineNumber":391,"author":{"gitId":"bensohh"},"content":"    \u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":392,"author":{"gitId":"bensohh"},"content":"    \u003cimg src\u003d\"images/screenshots/FindCommand/FindCommand_Email.png\"\u003e\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":393,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":394,"author":{"gitId":"bensohh"},"content":"    After executing the FindCommand via \u003ccode\u003eEMAIL\u003c/code\u003e:","lastModifiedDate":"2022-10-31"},{"lineNumber":395,"author":{"gitId":"bensohh"},"content":"    \u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":396,"author":{"gitId":"bensohh"},"content":"    \u003cimg src\u003d\"images/screenshots/FindCommand/FindCommand_EmailResult.png\"\u003e\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":397,"author":{"gitId":"bensohh"},"content":"    \u003c/details\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":398,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":399,"author":{"gitId":"bensohh"},"content":"### 2.8 Deleting a Customer : `delete`","lastModifiedDate":"2022-10-30"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"bensohh"},"content":"Removes a Customer from bobaBot.","lastModifiedDate":"2022-09-17"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"bensohh"},"content":"Format:","lastModifiedDate":"2022-09-17"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"bensohh"},"content":"`delete p/PHONE_NUMBER` or","lastModifiedDate":"2022-09-17"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"bensohh"},"content":"`delete e/EMAIL`","lastModifiedDate":"2022-09-17"},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"bensohh"},"content":"* Deletes the Customer with the following `PHONE_NUMBER` when `p/` specified.","lastModifiedDate":"2022-09-17"},{"lineNumber":410,"author":{"gitId":"bensohh"},"content":"* Deletes the Customer with the following `EMAIL` when `e/` specified.","lastModifiedDate":"2022-09-17"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"bensohh"},"content":"* `delete p/88888888` removes the Customer with the phone number `88888888`.","lastModifiedDate":"2022-10-30"},{"lineNumber":414,"author":{"gitId":"bensohh"},"content":"    \u003cdetails\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":415,"author":{"gitId":"bensohh"},"content":"    \u003csummary\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":416,"author":{"gitId":"bensohh"},"content":"    \u003cb\u003eWalk-through with Images\u003c/b\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":417,"author":{"gitId":"bensohh"},"content":"    \u003c/summary\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":418,"author":{"gitId":"bensohh"},"content":"  ","lastModifiedDate":"2022-10-30"},{"lineNumber":419,"author":{"gitId":"bensohh"},"content":"    Before executing the DeleteCommand via \u003ccode\u003ePHONE_NUMBER\u003c/code\u003e:","lastModifiedDate":"2022-10-31"},{"lineNumber":420,"author":{"gitId":"bensohh"},"content":"    \u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":421,"author":{"gitId":"bensohh"},"content":"    \u003cimg src\u003d\"images/screenshots/DeleteCommand/DeleteCommand_Phone.png\"\u003e\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":422,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":423,"author":{"gitId":"bensohh"},"content":"    After executing the DeleteCommand via \u003ccode\u003ePHONE_NUMBER\u003c/code\u003e:","lastModifiedDate":"2022-10-31"},{"lineNumber":424,"author":{"gitId":"bensohh"},"content":"    \u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":425,"author":{"gitId":"bensohh"},"content":"    \u003cimg src\u003d\"images/screenshots/DeleteCommand/DeleteCommand_PhoneResult.png\"\u003e\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":426,"author":{"gitId":"bensohh"},"content":"    \u003c/details\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":427,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":428,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":429,"author":{"gitId":"bensohh"},"content":"* `delete e/royb@example.com` removes the Customer with the email `royb@example.com`.","lastModifiedDate":"2022-10-30"},{"lineNumber":430,"author":{"gitId":"bensohh"},"content":"    \u003cdetails\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":431,"author":{"gitId":"bensohh"},"content":"    \u003csummary\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":432,"author":{"gitId":"bensohh"},"content":"    \u003cb\u003eWalk-through with Images\u003c/b\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":433,"author":{"gitId":"bensohh"},"content":"    \u003c/summary\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":434,"author":{"gitId":"bensohh"},"content":"    ","lastModifiedDate":"2022-10-30"},{"lineNumber":435,"author":{"gitId":"bensohh"},"content":"    Before executing the DeleteCommand via \u003ccode\u003eEMAIL\u003c/code\u003e:","lastModifiedDate":"2022-10-31"},{"lineNumber":436,"author":{"gitId":"bensohh"},"content":"    \u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":437,"author":{"gitId":"bensohh"},"content":"    \u003cimg src\u003d\"images/screenshots/DeleteCommand/DeleteCommand_Email.png\"\u003e\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":438,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":439,"author":{"gitId":"bensohh"},"content":"    After executing the DeleteCommand via \u003ccode\u003eEMAIL\u003c/code\u003e:","lastModifiedDate":"2022-10-31"},{"lineNumber":440,"author":{"gitId":"bensohh"},"content":"    \u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":441,"author":{"gitId":"bensohh"},"content":"    \u003cimg src\u003d\"images/screenshots/DeleteCommand/DeleteCommand_EmailResult.png\"\u003e\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":442,"author":{"gitId":"bensohh"},"content":"    \u003c/details\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":443,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":444,"author":{"gitId":"bensohh"},"content":"### 2.9 Undo a Command : `undo`","lastModifiedDate":"2022-10-30"},{"lineNumber":445,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":446,"author":{"gitId":"bensohh"},"content":"Reverts a command that has been executed. Returns bobaBot to the previous state before executing the command.","lastModifiedDate":"2022-10-28"},{"lineNumber":447,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":448,"author":{"gitId":"bensohh"},"content":"Format: `undo`","lastModifiedDate":"2022-10-28"},{"lineNumber":449,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":450,"author":{"gitId":"bensohh"},"content":"\u003cdetails\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":451,"author":{"gitId":"bensohh"},"content":"\u003csummary\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":452,"author":{"gitId":"bensohh"},"content":"\u003cb\u003eWalk-through with Images\u003c/b\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":453,"author":{"gitId":"bensohh"},"content":"\u003c/summary\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":454,"author":{"gitId":"bensohh"},"content":"    ","lastModifiedDate":"2022-10-30"},{"lineNumber":455,"author":{"gitId":"bensohh"},"content":"Before executing the UndoCommand (after a DeleteCommand):","lastModifiedDate":"2022-10-31"},{"lineNumber":456,"author":{"gitId":"bensohh"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":457,"author":{"gitId":"bensohh"},"content":"\u003cimg src\u003d\"images/screenshots/UndoAndRedoCommand/UndoCommand.png\"\u003e\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":458,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":459,"author":{"gitId":"bensohh"},"content":"After executing the UndoCommand (Deleted Customer \u003ccode\u003eAlex Yeoh\u003c/code\u003e is back into bobaBot):","lastModifiedDate":"2022-10-31"},{"lineNumber":460,"author":{"gitId":"bensohh"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":461,"author":{"gitId":"bensohh"},"content":"\u003cimg src\u003d\"images/screenshots/UndoAndRedoCommand/UndoCommandResult.png\"\u003e\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":462,"author":{"gitId":"bensohh"},"content":"\u003c/details\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":463,"author":{"gitId":"bensohh"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":464,"author":{"gitId":"bensohh"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":465,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":466,"author":{"gitId":"bensohh"},"content":"**:information_source: Notes about the UndoCommand:**\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":467,"author":{"gitId":"bensohh"},"content":"* bobaBot only preserves the 20 most recent state changes (Commands such as `list`, `find`, `help`, `calc` and `exit` will not result in a state change).","lastModifiedDate":"2022-10-31"},{"lineNumber":468,"author":{"gitId":"bensohh"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":469,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":470,"author":{"gitId":"bensohh"},"content":"### 2.10 Redo an UndoCommand : `redo`","lastModifiedDate":"2022-10-30"},{"lineNumber":471,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":472,"author":{"gitId":"bensohh"},"content":"Reverts the UndoCommand. Returns bobaBot to the state before executing the UndoCommand.","lastModifiedDate":"2022-10-28"},{"lineNumber":473,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":474,"author":{"gitId":"bensohh"},"content":"Format: `redo`","lastModifiedDate":"2022-10-28"},{"lineNumber":475,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":476,"author":{"gitId":"bensohh"},"content":"\u003cdetails\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":477,"author":{"gitId":"bensohh"},"content":"\u003csummary\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":478,"author":{"gitId":"bensohh"},"content":"\u003cb\u003eWalk-through with Images\u003c/b\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":479,"author":{"gitId":"bensohh"},"content":"\u003c/summary\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":480,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":481,"author":{"gitId":"bensohh"},"content":"Before executing the RedoCommand:","lastModifiedDate":"2022-10-31"},{"lineNumber":482,"author":{"gitId":"bensohh"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":483,"author":{"gitId":"bensohh"},"content":"\u003cul\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":484,"author":{"gitId":"bensohh"},"content":"  \u003cli\u003eThis continues from the above example in UndoCommand (where we perform an UndoCommand on a DeleteCommand)\u003c/li\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":485,"author":{"gitId":"bensohh"},"content":"\u003c/ul\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":486,"author":{"gitId":"bensohh"},"content":"\u003cimg src\u003d\"images/screenshots/UndoAndRedoCommand/RedoCommand.png\"\u003e\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":487,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":488,"author":{"gitId":"bensohh"},"content":"After executing the RedoCommand (The Customer \u003ccode\u003eAlex Yeoh\u003c/code\u003e is removed from bobaBot again):","lastModifiedDate":"2022-10-31"},{"lineNumber":489,"author":{"gitId":"bensohh"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":490,"author":{"gitId":"bensohh"},"content":"\u003cimg src\u003d\"images/screenshots/UndoAndRedoCommand/RedoCommandResult.png\"\u003e\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":491,"author":{"gitId":"bensohh"},"content":"\u003c/details\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":492,"author":{"gitId":"bensohh"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":493,"author":{"gitId":"bensohh"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":494,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":495,"author":{"gitId":"bensohh"},"content":"**:information_source: Notes about the RedoCommand:**\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":496,"author":{"gitId":"bensohh"},"content":"* bobaBot only preserves the 20 most recent state changes (Commands such as `list`, `find`, `help`, `calc` and `exit` will not result in a state change).","lastModifiedDate":"2022-10-31"},{"lineNumber":497,"author":{"gitId":"bensohh"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":498,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":499,"author":{"gitId":"bensohh"},"content":"### 2.11 Clearing all entries : `clear`","lastModifiedDate":"2022-10-30"},{"lineNumber":500,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":501,"author":{"gitId":"bensohh"},"content":"Clears all Customers from the bobaBot.","lastModifiedDate":"2022-09-29"},{"lineNumber":502,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":503,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":504,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":505,"author":{"gitId":"bensohh"},"content":"\u003cdetails\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":506,"author":{"gitId":"bensohh"},"content":"\u003csummary\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":507,"author":{"gitId":"bensohh"},"content":"\u003cb\u003eWalk-through with Images\u003c/b\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":508,"author":{"gitId":"bensohh"},"content":"\u003c/summary\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":509,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":510,"author":{"gitId":"bensohh"},"content":"Before executing the ClearCommand:","lastModifiedDate":"2022-10-31"},{"lineNumber":511,"author":{"gitId":"bensohh"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":512,"author":{"gitId":"bensohh"},"content":"\u003cimg src\u003d\"images/screenshots/ClearCommand/ClearCommand.png\"\u003e\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":513,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":514,"author":{"gitId":"bensohh"},"content":"After executing the ClearCommand:","lastModifiedDate":"2022-10-31"},{"lineNumber":515,"author":{"gitId":"bensohh"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":516,"author":{"gitId":"bensohh"},"content":"\u003cimg src\u003d\"images/screenshots/ClearCommand/ClearCommandResult.png\"\u003e\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":517,"author":{"gitId":"bensohh"},"content":"\u003c/details\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":518,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":519,"author":{"gitId":"bensohh"},"content":"### 2.12 Calculate: `calc`","lastModifiedDate":"2022-10-30"},{"lineNumber":520,"author":{"gitId":"WuHaohui1231"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":521,"author":{"gitId":"WuHaohui1231"},"content":"Do basic arithmetic calculation including +, -, *, /. Allow multiple operators and precedence","lastModifiedDate":"2022-10-28"},{"lineNumber":522,"author":{"gitId":"WuHaohui1231"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":523,"author":{"gitId":"WuHaohui1231"},"content":"Format: `calc {arithmetic expression}`","lastModifiedDate":"2022-10-30"},{"lineNumber":524,"author":{"gitId":"WuHaohui1231"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":525,"author":{"gitId":"bensohh"},"content":"Example: `calc 5+2*(4-2)`","lastModifiedDate":"2022-10-30"},{"lineNumber":526,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":527,"author":{"gitId":"bensohh"},"content":"\u003cdetails\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":528,"author":{"gitId":"bensohh"},"content":"\u003csummary\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":529,"author":{"gitId":"bensohh"},"content":"\u003cb\u003eWalk-through with Images\u003c/b\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":530,"author":{"gitId":"bensohh"},"content":"\u003c/summary\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":531,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":532,"author":{"gitId":"bensohh"},"content":"Before executing the CalculateCommand:","lastModifiedDate":"2022-10-31"},{"lineNumber":533,"author":{"gitId":"bensohh"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":534,"author":{"gitId":"bensohh"},"content":"\u003cimg src\u003d\"images/screenshots/CalculateCommand/NewCalculateCommand.png\"\u003e\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":535,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":536,"author":{"gitId":"bensohh"},"content":"After executing the CalculateCommand:","lastModifiedDate":"2022-10-31"},{"lineNumber":537,"author":{"gitId":"bensohh"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":538,"author":{"gitId":"bensohh"},"content":"\u003cimg src\u003d\"images/screenshots/CalculateCommand/NewCalculateCommandResult.png\"\u003e\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":539,"author":{"gitId":"bensohh"},"content":"\u003c/details\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":540,"author":{"gitId":"bensohh"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":541,"author":{"gitId":"bensohh"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":542,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":543,"author":{"gitId":"bensohh"},"content":"**:information_source: Notes about the CalculateCommand:**\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":544,"author":{"gitId":"bensohh"},"content":"* Please do not enter spaces, e.g.`1 + 1` does not work.","lastModifiedDate":"2022-10-31"},{"lineNumber":545,"author":{"gitId":"bensohh"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":546,"author":{"gitId":"WuHaohui1231"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":547,"author":{"gitId":"bensohh"},"content":"### 2.13 GUI Calculator: `calc-gui`","lastModifiedDate":"2022-10-30"},{"lineNumber":548,"author":{"gitId":"WuHaohui1231"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":549,"author":{"gitId":"WuHaohui1231"},"content":"Launch a GUI calculator. A calculator window will pop-up","lastModifiedDate":"2022-10-28"},{"lineNumber":550,"author":{"gitId":"WuHaohui1231"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":551,"author":{"gitId":"WuHaohui1231"},"content":"Format: `calc-gui`","lastModifiedDate":"2022-10-28"},{"lineNumber":552,"author":{"gitId":"WuHaohui1231"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":553,"author":{"gitId":"bensohh"},"content":"\u003cdetails\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":554,"author":{"gitId":"bensohh"},"content":"\u003csummary\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":555,"author":{"gitId":"bensohh"},"content":"\u003cb\u003eWalk-through with Images\u003c/b\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":556,"author":{"gitId":"bensohh"},"content":"\u003c/summary\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":557,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":558,"author":{"gitId":"bensohh"},"content":"Before executing the CalculatorGuiCommand:","lastModifiedDate":"2022-10-31"},{"lineNumber":559,"author":{"gitId":"bensohh"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":560,"author":{"gitId":"bensohh"},"content":"\u003cimg src\u003d\"images/screenshots/CalculateCommand/NewCalculatorGUI.png\"\u003e\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":561,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":562,"author":{"gitId":"bensohh"},"content":"After executing the CalculatorGuiCommand:","lastModifiedDate":"2022-10-31"},{"lineNumber":563,"author":{"gitId":"bensohh"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":564,"author":{"gitId":"bensohh"},"content":"\u003cimg src\u003d\"images/screenshots/CalculateCommand/NewCalculatorGUIResult.png\"\u003e\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":565,"author":{"gitId":"bensohh"},"content":"\u003c/details\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":566,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":567,"author":{"gitId":"bensohh"},"content":"### 2.14 Exiting the program : `exit`","lastModifiedDate":"2022-10-30"},{"lineNumber":568,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":569,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":570,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":571,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":572,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":573,"author":{"gitId":"bensohh"},"content":"\u003cdetails\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":574,"author":{"gitId":"bensohh"},"content":"\u003csummary\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":575,"author":{"gitId":"bensohh"},"content":"\u003cb\u003eWalk-through with Images\u003c/b\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":576,"author":{"gitId":"bensohh"},"content":"\u003c/summary\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":577,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":578,"author":{"gitId":"bensohh"},"content":"Before executing the ExitCommand:","lastModifiedDate":"2022-10-31"},{"lineNumber":579,"author":{"gitId":"bensohh"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":580,"author":{"gitId":"bensohh"},"content":"\u003cimg src\u003d\"images/screenshots/ExitCommand/ExitCommand.png\"\u003e\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":581,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":582,"author":{"gitId":"bensohh"},"content":"After executing the ExitCommand:","lastModifiedDate":"2022-10-31"},{"lineNumber":583,"author":{"gitId":"bensohh"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":584,"author":{"gitId":"bensohh"},"content":"\u003cul\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":585,"author":{"gitId":"bensohh"},"content":"  \u003cli\u003ebobaBot Application Closed\u003c/li\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":586,"author":{"gitId":"bensohh"},"content":"\u003c/ul\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":587,"author":{"gitId":"bensohh"},"content":"\u003c/details\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":588,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":589,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":590,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":591,"author":{"gitId":"bensohh"},"content":"bobaBot data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2022-09-29"},{"lineNumber":592,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":593,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":594,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":595,"author":{"gitId":"bensohh"},"content":"bobaBot data are saved as a JSON file `[JAR file location]/data/bobaBot.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2022-09-29"},{"lineNumber":596,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":597,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":598,"author":{"gitId":"bensohh"},"content":"If your changes to the data file makes its format invalid, bobaBot will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2022-09-29"},{"lineNumber":599,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":600,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":601,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":602,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":603,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":604,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":605,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":606,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":607,"author":{"gitId":"bensohh"},"content":"## 3. FAQ","lastModifiedDate":"2022-10-30"},{"lineNumber":608,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":609,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":610,"author":{"gitId":"bensohh"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous bobaBot home folder.","lastModifiedDate":"2022-10-31"},{"lineNumber":611,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":612,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":613,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":614,"author":{"gitId":"bensohh"},"content":"## 4. Command summary","lastModifiedDate":"2022-10-30"},{"lineNumber":615,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":616,"author":{"gitId":"Samsation"},"content":"| Action         | Format, Examples                                                                                                                                                                                                                                                                     |","lastModifiedDate":"2022-10-27"},{"lineNumber":617,"author":{"gitId":"WuHaohui1231"},"content":"|----------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-10-28"},{"lineNumber":618,"author":{"gitId":"TanWenCong"},"content":"| **Add**        | `add n/NAME p/PHONE_NUMBER e/EMAIL m/BIRTHDAY_MONTH r/REWARD [t/TAG]…` \u003cbr\u003e e.g., `add n/Betsy Crowe p/1234567 e/betsycrowe@example.com m/1 r/5000 t/gold`                                                                                                                           |","lastModifiedDate":"2022-10-28"},{"lineNumber":619,"author":{"gitId":"Samsation"},"content":"| **Edit**       | `edit p/PHONE_NUMBER [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [m/BIRTHDAY] [r/REWARD] [t/TAG]…` or \u003cbr\u003e `edit e/EMAIL [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [m/BIRTHDAY] [r/REWARD] [t/TAG]…` \u003cbr\u003e e.g., `edit p/98765432 n/Miles Morales`, `edit e/alexyeoh@example.com r/1000 p/11111111` |","lastModifiedDate":"2022-10-27"},{"lineNumber":620,"author":{"gitId":"TanWenCong"},"content":"| **Increase**   | `incr 100 p/PHONE_NUMBER` or `incr 100 e/EMAIL` \u003cbr\u003e e.g., `incr 100 p/87438807`, `incr 100 e/alexyeoh@example.com`                                                                                                                                                                  |","lastModifiedDate":"2022-10-27"},{"lineNumber":621,"author":{"gitId":"TanWenCong"},"content":"| **Decrease**   | `decr 100 p/PHONE_NUMBER` or `decr 100 e/EMAIL` \u003cbr\u003e e.g., `decr 100 p/87438807`, `decr 100 e/alexyeoh@example.com`                                                                                                                                                                  |","lastModifiedDate":"2022-10-27"},{"lineNumber":622,"author":{"gitId":"TanWenCong"},"content":"| **Delete**     | `delete p/PHONE_NUMBER` or `delete e/EMAIL` \u003cbr\u003e e.g., `delete p/87438807`, `delete e/alexyeoh@example.com`                                                                                                                                                                          |","lastModifiedDate":"2022-10-27"},{"lineNumber":623,"author":{"gitId":"TanWenCong"},"content":"| **Find**       | `find KEYWORD [MORE_KEYWORDS]` \u003cbr\u003e e.g., `find alex david`                                                                                                                                                                                                                          |","lastModifiedDate":"2022-10-27"},{"lineNumber":624,"author":{"gitId":"bensohh"},"content":"| **Undo**       | `undo`                                                                                                                                                                                                                                                                               |","lastModifiedDate":"2022-10-28"},{"lineNumber":625,"author":{"gitId":"bensohh"},"content":"| **Redo**       | `redo`                                                                                                                                                                                                                                                                               |","lastModifiedDate":"2022-10-28"},{"lineNumber":626,"author":{"gitId":"WuHaohui1231"},"content":"| **Calculate**  | `calc {arithmetic expression}` \u003cbr\u003e e.g. `calc 2*(1+1)`                                                                                                                                                                                                                              |","lastModifiedDate":"2022-10-30"},{"lineNumber":627,"author":{"gitId":"WuHaohui1231"},"content":"| **Calculator** | `calc-gui`                                                                                                                                                                                                                                                                           |","lastModifiedDate":"2022-10-28"},{"lineNumber":628,"author":{"gitId":"TanWenCong"},"content":"| **Clear**      | `clear`                                                                                                                                                                                                                                                                              |","lastModifiedDate":"2022-10-27"},{"lineNumber":629,"author":{"gitId":"TanWenCong"},"content":"| **List**       | `list`                                                                                                                                                                                                                                                                               |","lastModifiedDate":"2022-10-27"},{"lineNumber":630,"author":{"gitId":"TanWenCong"},"content":"| **Help**       | `help`                                                                                                                                                                                                                                                                               |","lastModifiedDate":"2022-10-27"},{"lineNumber":631,"author":{"gitId":"TanWenCong"},"content":"| **Exit**       | `exit`                                                                                                                                                                                                                                                                               |","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"Samsation":29,"TanWenCong":15,"bensohh":424,"albertZhangTJ":8,"-":138,"WuHaohui1231":17}},{"path":"docs/diagrams/AddActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"@startuml","lastModifiedDate":"2022-10-21"},{"lineNumber":2,"author":{"gitId":"TanWenCong"},"content":"\u0027https://plantuml.com/activity-diagram-beta","lastModifiedDate":"2022-10-21"},{"lineNumber":3,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"TanWenCong"},"content":"start","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"TanWenCong"},"content":"skinparam activityBorderThickness 1.5","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"TanWenCong"},"content":"skinparam activity {","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"TanWenCong"},"content":"    BorderColor #7F5539","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"TanWenCong"},"content":"    BackgroundColor #EDE0D4","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"TanWenCong"},"content":"    arrowColor #7F5539","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"TanWenCong"},"content":"}","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"TanWenCong"},"content":":User enters a AddCommand;","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"TanWenCong"},"content":"if () then ([valid command format])","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"TanWenCong"},"content":"  :creates a AddCommandParser Object;","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"TanWenCong"},"content":"  :AddCommandParser Object parses input;","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"TanWenCong"},"content":"    if () then ([input valid format])","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"TanWenCong"},"content":"      :get all Person details;","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"TanWenCong"},"content":"      :Returns AddCommand Object;","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"TanWenCong"},"content":"      :Check if Person with same phone","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"TanWenCong"},"content":"       or email address already exists;","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"TanWenCong"},"content":"      if () then ([does not exist yet])","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"albertZhangTJ"},"content":"        :BobaBotModel adds customer;","lastModifiedDate":"2022-10-31"},{"lineNumber":22,"author":{"gitId":"TanWenCong"},"content":"        :Returns CommandResult to LogicManager;","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"TanWenCong"},"content":"        :Saves changes to Storage on bobaBot;","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"TanWenCong"},"content":"      else ([else])","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"TanWenCong"},"content":"        : throw CommandException;","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"TanWenCong"},"content":"      endif","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"TanWenCong"},"content":"    else ([else])","lastModifiedDate":"2022-10-21"},{"lineNumber":28,"author":{"gitId":"TanWenCong"},"content":"      :throw ParseException;","lastModifiedDate":"2022-10-21"},{"lineNumber":29,"author":{"gitId":"TanWenCong"},"content":"    endif","lastModifiedDate":"2022-10-21"},{"lineNumber":30,"author":{"gitId":"TanWenCong"},"content":"else ([else])","lastModifiedDate":"2022-10-21"},{"lineNumber":31,"author":{"gitId":"TanWenCong"},"content":"  :throw ParseException;","lastModifiedDate":"2022-10-21"},{"lineNumber":32,"author":{"gitId":"TanWenCong"},"content":"endif","lastModifiedDate":"2022-10-21"},{"lineNumber":33,"author":{"gitId":"TanWenCong"},"content":":Return Feedback to User;","lastModifiedDate":"2022-10-21"},{"lineNumber":34,"author":{"gitId":"TanWenCong"},"content":"stop","lastModifiedDate":"2022-10-21"},{"lineNumber":35,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":36,"author":{"gitId":"TanWenCong"},"content":"@enduml","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"TanWenCong":35,"albertZhangTJ":1}},{"path":"docs/diagrams/AddSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"@startuml","lastModifiedDate":"2022-10-21"},{"lineNumber":2,"author":{"gitId":"TanWenCong"},"content":"!include style.puml","lastModifiedDate":"2022-10-21"},{"lineNumber":3,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"TanWenCong"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"TanWenCong"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"TanWenCong"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"TanWenCong"},"content":"participant \":AddCommandParser\" as AddCommandParser LOGIC_COLOR","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"TanWenCong"},"content":"participant \"command:AddCommand\" as AddCommand LOGIC_COLOR","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"TanWenCong"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"TanWenCong"},"content":"end box","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"albertZhangTJ"},"content":"box BobaBotModel MODEL_COLOR_T1","lastModifiedDate":"2022-10-31"},{"lineNumber":13,"author":{"gitId":"albertZhangTJ"},"content":"participant \":BobaBotModel\" as BobaBotModel MODEL_COLOR","lastModifiedDate":"2022-10-31"},{"lineNumber":14,"author":{"gitId":"TanWenCong"},"content":"end box","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"TanWenCong"},"content":"[-\u003e LogicManager : execute(\"add n/Bob p/12345678...\")","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"TanWenCong"},"content":"activate LogicManager","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"TanWenCong"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"add n/Bob p/12345678...\")","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"TanWenCong"},"content":"activate AddressBookParser","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":22,"author":{"gitId":"TanWenCong"},"content":"create AddCommandParser","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"TanWenCong"},"content":"AddressBookParser -\u003e AddCommandParser","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"TanWenCong"},"content":"activate AddCommandParser","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"TanWenCong"},"content":"return","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"TanWenCong"},"content":"AddressBookParser -\u003e AddCommandParser : parse(\"n/Bob p/12345678...\")","lastModifiedDate":"2022-10-21"},{"lineNumber":28,"author":{"gitId":"TanWenCong"},"content":"activate AddCommandParser","lastModifiedDate":"2022-10-21"},{"lineNumber":29,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":30,"author":{"gitId":"TanWenCong"},"content":"create AddCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":31,"author":{"gitId":"TanWenCong"},"content":"AddCommandParser -\u003e AddCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":32,"author":{"gitId":"TanWenCong"},"content":"activate AddCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":33,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":34,"author":{"gitId":"TanWenCong"},"content":"return command","lastModifiedDate":"2022-10-21"},{"lineNumber":35,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":36,"author":{"gitId":"TanWenCong"},"content":"deactivate AddCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":37,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":38,"author":{"gitId":"TanWenCong"},"content":"AddCommandParser --\u003e AddressBookParser : command","lastModifiedDate":"2022-10-21"},{"lineNumber":39,"author":{"gitId":"TanWenCong"},"content":"deactivate AddCommandParser","lastModifiedDate":"2022-10-21"},{"lineNumber":40,"author":{"gitId":"TanWenCong"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-10-21"},{"lineNumber":41,"author":{"gitId":"TanWenCong"},"content":"AddCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2022-10-21"},{"lineNumber":42,"author":{"gitId":"TanWenCong"},"content":"destroy AddCommandParser","lastModifiedDate":"2022-10-21"},{"lineNumber":43,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":44,"author":{"gitId":"TanWenCong"},"content":"AddressBookParser --\u003e LogicManager : command","lastModifiedDate":"2022-10-21"},{"lineNumber":45,"author":{"gitId":"TanWenCong"},"content":"deactivate AddressBookParser","lastModifiedDate":"2022-10-21"},{"lineNumber":46,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":47,"author":{"gitId":"TanWenCong"},"content":"LogicManager -\u003e AddCommand : execute()","lastModifiedDate":"2022-10-21"},{"lineNumber":48,"author":{"gitId":"TanWenCong"},"content":"activate AddCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":49,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":50,"author":{"gitId":"albertZhangTJ"},"content":"AddCommand -\u003e BobaBotModel : addPerson(personToAdd)","lastModifiedDate":"2022-10-31"},{"lineNumber":51,"author":{"gitId":"albertZhangTJ"},"content":"activate BobaBotModel","lastModifiedDate":"2022-10-31"},{"lineNumber":52,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":53,"author":{"gitId":"albertZhangTJ"},"content":"BobaBotModel --\u003e AddCommand","lastModifiedDate":"2022-10-31"},{"lineNumber":54,"author":{"gitId":"albertZhangTJ"},"content":"deactivate BobaBotModel","lastModifiedDate":"2022-10-31"},{"lineNumber":55,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":56,"author":{"gitId":"TanWenCong"},"content":"create CommandResult","lastModifiedDate":"2022-10-21"},{"lineNumber":57,"author":{"gitId":"TanWenCong"},"content":"AddCommand -\u003e CommandResult","lastModifiedDate":"2022-10-21"},{"lineNumber":58,"author":{"gitId":"TanWenCong"},"content":"activate CommandResult","lastModifiedDate":"2022-10-21"},{"lineNumber":59,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":60,"author":{"gitId":"TanWenCong"},"content":"CommandResult --\u003e AddCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":61,"author":{"gitId":"TanWenCong"},"content":"deactivate CommandResult","lastModifiedDate":"2022-10-21"},{"lineNumber":62,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":63,"author":{"gitId":"TanWenCong"},"content":"AddCommand --\u003e LogicManager : commandResult","lastModifiedDate":"2022-10-21"},{"lineNumber":64,"author":{"gitId":"TanWenCong"},"content":"deactivate AddCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":65,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":66,"author":{"gitId":"TanWenCong"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-10-21"},{"lineNumber":67,"author":{"gitId":"TanWenCong"},"content":"deactivate LogicManager","lastModifiedDate":"2022-10-21"},{"lineNumber":68,"author":{"gitId":"TanWenCong"},"content":"@enduml","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"TanWenCong":62,"albertZhangTJ":6}},{"path":"docs/diagrams/ArchitectureDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include \u003coffice/Concepts/globe_internet\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"!include \u003coffice/Concepts/documents\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"!include \u003coffice/Users/user\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package \" \"\u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    Class UI UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    Class Logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    Class Storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"albertZhangTJ"},"content":"    Class BobaBotModel MODEL_COLOR","lastModifiedDate":"2022-10-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    Class Main #grey","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    Class Commons LOGIC_COLOR_T2","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class \"\u003c$user\u003e\" as User MODEL_COLOR_T2","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class \"\u003c$documents\u003e\" as File UI_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"UI -[#green]\u003e Logic","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"albertZhangTJ"},"content":"UI -right[#green]-\u003e BobaBotModel","lastModifiedDate":"2022-10-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Logic -[#blue]-\u003e Storage","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"albertZhangTJ"},"content":"Logic -down[#blue]-\u003e BobaBotModel","lastModifiedDate":"2022-10-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"Main -[#grey]-\u003e UI","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Main -[#grey]-\u003e Logic","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Main -[#grey]-\u003e Storage","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"albertZhangTJ"},"content":"Main -up[#grey]-\u003e BobaBotModel","lastModifiedDate":"2022-10-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Main -down[hidden]-\u003e Commons","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"albertZhangTJ"},"content":"Storage -up[STORAGE_COLOR].\u003e BobaBotModel","lastModifiedDate":"2022-10-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Storage .right[STORAGE_COLOR].\u003eFile","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"User ..\u003e UI","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"albertZhangTJ":5,"-":28}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"albertZhangTJ"},"content":"Participant \":BobaBotModel\" as model MODEL_COLOR","lastModifiedDate":"2022-10-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"user -[USER_COLOR]\u003e ui : \"delete 1\"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"logic -[LOGIC_COLOR]\u003e model : deletePerson(p)","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveAddressBook(addressBook)","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"albertZhangTJ":1,"-":37}},{"path":"docs/diagrams/CommandClasses.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"WuHaohui1231"},"content":"@startuml","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"WuHaohui1231"},"content":"\u0027!include style.puml","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"WuHaohui1231"},"content":"\u0027skinparam arrowThickness 1.1","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"WuHaohui1231"},"content":"\u0027skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"WuHaohui1231"},"content":"\u0027skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"WuHaohui1231"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"WuHaohui1231"},"content":"hide circle","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"WuHaohui1231"},"content":"hide empty method","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"WuHaohui1231"},"content":"hide empty attribute","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"WuHaohui1231"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"WuHaohui1231"},"content":"skinparam activityBorderThickness 1.5","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"WuHaohui1231"},"content":"skinparam class {","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"WuHaohui1231"},"content":"    BorderColor #7F5539","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"WuHaohui1231"},"content":"    BackgroundColor #EDE0D4","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"WuHaohui1231"},"content":"    arrowColor #7F5539","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"WuHaohui1231"},"content":"}","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"WuHaohui1231"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"WuHaohui1231"},"content":"abstract \"{abstract}\\nCommand\" as Command {","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"albertZhangTJ"},"content":"    {abstract} +execute(model: BobaBotModel): CommandResult","lastModifiedDate":"2022-10-31"},{"lineNumber":20,"author":{"gitId":"WuHaohui1231"},"content":"}","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"WuHaohui1231"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"WuHaohui1231"},"content":"package Commands \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"WuHaohui1231"},"content":"    Class EditCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"WuHaohui1231"},"content":"    Class AddCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"WuHaohui1231"},"content":"    Class DeleteCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"WuHaohui1231"},"content":"    Class FindCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"WuHaohui1231"},"content":"    Class ListCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"WuHaohui1231"},"content":"    Class ExitCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"WuHaohui1231"},"content":"    Class HelpCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"WuHaohui1231"},"content":"    Class ClearCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"WuHaohui1231"},"content":"}","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"WuHaohui1231"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"WuHaohui1231"},"content":"package Parsers \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"WuHaohui1231"},"content":"    Class AddCommandParser","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"WuHaohui1231"},"content":"    Class EditCommandParser","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"WuHaohui1231"},"content":"    Class DeleteCommandParser","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"WuHaohui1231"},"content":"    Class FindCommandParser","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"WuHaohui1231"},"content":"}","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"WuHaohui1231"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"albertZhangTJ"},"content":"package BobaBotModel/Person \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2022-10-31"},{"lineNumber":41,"author":{"gitId":"WuHaohui1231"},"content":"    Class MultiSearchPredicate","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"WuHaohui1231"},"content":"    Class AllInfoContainsKeywordsPredicate","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"WuHaohui1231"},"content":"    Class NameSoundsSimilarPredicate","lastModifiedDate":"2022-10-20"},{"lineNumber":44,"author":{"gitId":"WuHaohui1231"},"content":"}","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"WuHaohui1231"},"content":"class EditCommand {","lastModifiedDate":"2022-10-20"},{"lineNumber":46,"author":{"gitId":"WuHaohui1231"},"content":"    -editCommandDescriptor","lastModifiedDate":"2022-10-20"},{"lineNumber":47,"author":{"gitId":"WuHaohui1231"},"content":"    -index","lastModifiedDate":"2022-10-20"},{"lineNumber":48,"author":{"gitId":"WuHaohui1231"},"content":"}","lastModifiedDate":"2022-10-20"},{"lineNumber":49,"author":{"gitId":"WuHaohui1231"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":50,"author":{"gitId":"WuHaohui1231"},"content":"class DeleteCommand {","lastModifiedDate":"2022-10-20"},{"lineNumber":51,"author":{"gitId":"WuHaohui1231"},"content":"    -deleteCommandDescriptor","lastModifiedDate":"2022-10-20"},{"lineNumber":52,"author":{"gitId":"WuHaohui1231"},"content":"    -targetIndex","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"WuHaohui1231"},"content":"}","lastModifiedDate":"2022-10-20"},{"lineNumber":54,"author":{"gitId":"WuHaohui1231"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":55,"author":{"gitId":"WuHaohui1231"},"content":"class FindCommand {","lastModifiedDate":"2022-10-20"},{"lineNumber":56,"author":{"gitId":"WuHaohui1231"},"content":"    -predicate: Predicate\u003cPerson\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":57,"author":{"gitId":"WuHaohui1231"},"content":"    -findPersonDescriptor","lastModifiedDate":"2022-10-20"},{"lineNumber":58,"author":{"gitId":"WuHaohui1231"},"content":"}","lastModifiedDate":"2022-10-20"},{"lineNumber":59,"author":{"gitId":"WuHaohui1231"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":60,"author":{"gitId":"WuHaohui1231"},"content":"class AllInfoContainsKeywordsPredicate {","lastModifiedDate":"2022-10-20"},{"lineNumber":61,"author":{"gitId":"WuHaohui1231"},"content":"    -keyWords: List\u003cString\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":62,"author":{"gitId":"WuHaohui1231"},"content":"    +test(person: Person): boolean","lastModifiedDate":"2022-10-20"},{"lineNumber":63,"author":{"gitId":"WuHaohui1231"},"content":"}","lastModifiedDate":"2022-10-20"},{"lineNumber":64,"author":{"gitId":"WuHaohui1231"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":65,"author":{"gitId":"WuHaohui1231"},"content":"class NameSoundsSimilarPredicate {","lastModifiedDate":"2022-10-20"},{"lineNumber":66,"author":{"gitId":"WuHaohui1231"},"content":"    {static} -soundexMapping: List\u003cList\u003cString\u003e\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":67,"author":{"gitId":"WuHaohui1231"},"content":"    -keyWords: List\u003cString\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":68,"author":{"gitId":"WuHaohui1231"},"content":"    {static} -dropHwy(name: String): String","lastModifiedDate":"2022-10-20"},{"lineNumber":69,"author":{"gitId":"WuHaohui1231"},"content":"    {static} -applySoundexMapping(strippedName: String): String","lastModifiedDate":"2022-10-20"},{"lineNumber":70,"author":{"gitId":"WuHaohui1231"},"content":"    {static} -combineAdjacentDigits(code: String): String","lastModifiedDate":"2022-10-20"},{"lineNumber":71,"author":{"gitId":"WuHaohui1231"},"content":"    {static} -trimSoundexCode(code: String): String","lastModifiedDate":"2022-10-20"},{"lineNumber":72,"author":{"gitId":"WuHaohui1231"},"content":"    -hasMatch(name: String): boolean","lastModifiedDate":"2022-10-20"},{"lineNumber":73,"author":{"gitId":"WuHaohui1231"},"content":"    +test(person: Person): boolean","lastModifiedDate":"2022-10-20"},{"lineNumber":74,"author":{"gitId":"WuHaohui1231"},"content":"}","lastModifiedDate":"2022-10-20"},{"lineNumber":75,"author":{"gitId":"WuHaohui1231"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":76,"author":{"gitId":"WuHaohui1231"},"content":"class CommandResult {","lastModifiedDate":"2022-10-20"},{"lineNumber":77,"author":{"gitId":"WuHaohui1231"},"content":"    -feedbackToUser: String","lastModifiedDate":"2022-10-20"},{"lineNumber":78,"author":{"gitId":"WuHaohui1231"},"content":"}","lastModifiedDate":"2022-10-20"},{"lineNumber":79,"author":{"gitId":"WuHaohui1231"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":80,"author":{"gitId":"WuHaohui1231"},"content":"AddCommand --\u003e \"1 toAdd\" Person","lastModifiedDate":"2022-10-20"},{"lineNumber":81,"author":{"gitId":"WuHaohui1231"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":82,"author":{"gitId":"WuHaohui1231"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":83,"author":{"gitId":"WuHaohui1231"},"content":"AddressBookParser ..|\u003e EditCommandParser: creates \u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":84,"author":{"gitId":"WuHaohui1231"},"content":"AddressBookParser ..|\u003e AddCommandParser: creates \u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":85,"author":{"gitId":"WuHaohui1231"},"content":"AddressBookParser ..|\u003e DeleteCommandParser: creates \u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":86,"author":{"gitId":"WuHaohui1231"},"content":"AddressBookParser ..|\u003e FindCommandParser: creates \u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":87,"author":{"gitId":"WuHaohui1231"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":88,"author":{"gitId":"WuHaohui1231"},"content":"AddressBookParser ..|\u003e ListCommand: creates \u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":89,"author":{"gitId":"WuHaohui1231"},"content":"AddressBookParser ..|\u003e ClearCommand: creates \u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":90,"author":{"gitId":"WuHaohui1231"},"content":"AddressBookParser ..|\u003e HelpCommand: creates \u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":91,"author":{"gitId":"WuHaohui1231"},"content":"AddressBookParser ..|\u003e ExitCommand: creates \u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":92,"author":{"gitId":"WuHaohui1231"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":93,"author":{"gitId":"WuHaohui1231"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":94,"author":{"gitId":"WuHaohui1231"},"content":"FindCommandParser .....|\u003e FindCommand : creates \u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":95,"author":{"gitId":"WuHaohui1231"},"content":"EditCommandParser ....|\u003e EditCommand: creates \u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":96,"author":{"gitId":"WuHaohui1231"},"content":"DeleteCommandParser ....|\u003e DeleteCommand: creates \u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":97,"author":{"gitId":"WuHaohui1231"},"content":"AddCommandParser ....|\u003e AddCommand: creates \u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":98,"author":{"gitId":"WuHaohui1231"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":99,"author":{"gitId":"WuHaohui1231"},"content":"FindCommandParser ..|\u003e MultiSearchPredicate : uses \u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":100,"author":{"gitId":"WuHaohui1231"},"content":"MultiSearchPredicate --\u003e \"0..1 matchPredicate\" AllInfoContainsKeywordsPredicate","lastModifiedDate":"2022-10-20"},{"lineNumber":101,"author":{"gitId":"WuHaohui1231"},"content":"MultiSearchPredicate --\u003e \"0..1 fuzzyPredicate\" NameSoundsSimilarPredicate","lastModifiedDate":"2022-10-20"},{"lineNumber":102,"author":{"gitId":"WuHaohui1231"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":103,"author":{"gitId":"WuHaohui1231"},"content":"AddCommand --|\u003e Command","lastModifiedDate":"2022-10-20"},{"lineNumber":104,"author":{"gitId":"WuHaohui1231"},"content":"EditCommand --|\u003e Command","lastModifiedDate":"2022-10-20"},{"lineNumber":105,"author":{"gitId":"WuHaohui1231"},"content":"DeleteCommand --|\u003e Command","lastModifiedDate":"2022-10-20"},{"lineNumber":106,"author":{"gitId":"WuHaohui1231"},"content":"FindCommand --|\u003e Command","lastModifiedDate":"2022-10-20"},{"lineNumber":107,"author":{"gitId":"WuHaohui1231"},"content":"ListCommand --|\u003e Command","lastModifiedDate":"2022-10-20"},{"lineNumber":108,"author":{"gitId":"WuHaohui1231"},"content":"ClearCommand --|\u003e Command","lastModifiedDate":"2022-10-20"},{"lineNumber":109,"author":{"gitId":"WuHaohui1231"},"content":"HelpCommand --|\u003e Command","lastModifiedDate":"2022-10-20"},{"lineNumber":110,"author":{"gitId":"WuHaohui1231"},"content":"ExitCommand --|\u003e Command","lastModifiedDate":"2022-10-20"},{"lineNumber":111,"author":{"gitId":"WuHaohui1231"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":112,"author":{"gitId":"WuHaohui1231"},"content":"Command ..|\u003e CommandResult: returns \u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":113,"author":{"gitId":"WuHaohui1231"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":114,"author":{"gitId":"WuHaohui1231"},"content":"@enduml","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"albertZhangTJ":2,"WuHaohui1231":112}},{"path":"docs/diagrams/ComponentManagers.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2021-07-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2021-07-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-07-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2021-07-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2021-07-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nLogic\" as Logic","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class LogicManager","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"albertZhangTJ"},"content":"package BobaBotModel{","lastModifiedDate":"2022-10-31"},{"lineNumber":13,"author":{"gitId":"albertZhangTJ"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nBobaBotModel\" as BobaBotModel","lastModifiedDate":"2022-10-31"},{"lineNumber":14,"author":{"gitId":"albertZhangTJ"},"content":"Class BobaBotModelManager","lastModifiedDate":"2022-10-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nStorage\" as Storage","lastModifiedDate":"2022-01-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2021-07-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Logic","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"LogicManager .up.|\u003e Logic","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"albertZhangTJ"},"content":"BobaBotModelManager .up.|\u003e BobaBotModel","lastModifiedDate":"2022-10-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"albertZhangTJ"},"content":"LogicManager --\u003e BobaBotModel","lastModifiedDate":"2022-10-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"LogicManager --\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2021-07-31"}],"authorContributionMap":{"albertZhangTJ":5,"-":26}},{"path":"docs/diagrams/DeleteActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"bensohh"},"content":"@startuml","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"bensohh"},"content":"\u0027https://plantuml.com/activity-diagram-beta","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"bensohh"},"content":"start","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"bensohh"},"content":"skinparam activityBorderThickness 1.5","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"bensohh"},"content":"skinparam activity {","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"bensohh"},"content":"    BorderColor #7F5539","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"bensohh"},"content":"    BackgroundColor #EDE0D4","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"bensohh"},"content":"    arrowColor #7F5539","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"bensohh"},"content":"}","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"bensohh"},"content":":User enters a DeleteCommand;","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"bensohh"},"content":"if () then ([valid command format])","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"bensohh"},"content":"  :creates a DeleteCommandParser Object;","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"bensohh"},"content":"  :DeleteCommandParser Object parses input;","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"bensohh"},"content":"    if () then ([input valid format])","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"bensohh"},"content":"      :get Phone/Email details;","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"bensohh"},"content":"      :set Phone/Email details in deletePersonDescriptor;","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"bensohh"},"content":"      :Returns DeleteCommand Object;","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"bensohh"},"content":"      :Get customer\u0027s index;","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"bensohh"},"content":"      if () then ([valid index])","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"bensohh"},"content":"        :Get customer via index;","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"albertZhangTJ"},"content":"        :BobaBotModel deletes customer;","lastModifiedDate":"2022-10-31"},{"lineNumber":23,"author":{"gitId":"bensohh"},"content":"        :Returns CommandResult to LogicManager;","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"bensohh"},"content":"        :Saves changes to Storage on bobaBot;","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"bensohh"},"content":"      else ([else])","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"bensohh"},"content":"        : throw CommandException;","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"bensohh"},"content":"      endif","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"bensohh"},"content":"    else ([else])","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"bensohh"},"content":"      :throw ParseException;","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"bensohh"},"content":"    endif","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"bensohh"},"content":"else ([else])","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"bensohh"},"content":"  :throw ParseException;","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"bensohh"},"content":"endif","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"bensohh"},"content":":Return Feedback to User;","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"bensohh"},"content":"stop","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"bensohh"},"content":"@enduml","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"bensohh":36,"albertZhangTJ":1}},{"path":"docs/diagrams/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"bensohh"},"content":"skinparam SequenceBoxBorderColor red","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"bensohh"},"content":"skinparam arrowColor red","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"bensohh"},"content":"skinparam ArrowThickness 1.5","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"bensohh"},"content":"skinparam sequence {","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"bensohh"},"content":"    ParticipantBorderColor red","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"bensohh"},"content":"    ParticipantBorderThickness 1.5","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"bensohh"},"content":"    LifeLineBorderColor red","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"bensohh"},"content":"}","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"participant \":DeleteCommandParser\" as DeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"bensohh"},"content":"participant \"command:DeleteCommand\" as DeleteCommand LOGIC_COLOR","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"albertZhangTJ"},"content":"box BobaBotModel MODEL_COLOR_T1","lastModifiedDate":"2022-10-31"},{"lineNumber":22,"author":{"gitId":"albertZhangTJ"},"content":"participant \":BobaBotModel\" as BobaBotModel MODEL_COLOR","lastModifiedDate":"2022-10-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"bensohh"},"content":"[-\u003e LogicManager : execute(\"delete p/12345678\")","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"bensohh"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"delete p/12345678\")","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"activate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"create DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"AddressBookParser -\u003e DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"DeleteCommandParser --\u003e AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"bensohh"},"content":"AddressBookParser -\u003e DeleteCommandParser : parse(\"p/12345678\")","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"create DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"DeleteCommandParser -\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"bensohh"},"content":"DeleteCommand --\u003e DeleteCommandParser : command","lastModifiedDate":"2022-10-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"bensohh"},"content":"DeleteCommandParser --\u003e AddressBookParser : command","lastModifiedDate":"2022-10-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"DeleteCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"destroy DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"bensohh"},"content":"AddressBookParser --\u003e LogicManager : command","lastModifiedDate":"2022-10-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"deactivate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"LogicManager -\u003e DeleteCommand : execute()","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"albertZhangTJ"},"content":"DeleteCommand -\u003e BobaBotModel : deletePerson(personToDelete)","lastModifiedDate":"2022-10-31"},{"lineNumber":61,"author":{"gitId":"albertZhangTJ"},"content":"activate BobaBotModel","lastModifiedDate":"2022-10-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"albertZhangTJ"},"content":"BobaBotModel --\u003e DeleteCommand","lastModifiedDate":"2022-10-31"},{"lineNumber":64,"author":{"gitId":"albertZhangTJ"},"content":"deactivate BobaBotModel","lastModifiedDate":"2022-10-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"create CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"activate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"CommandResult --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"deactivate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":73,"author":{"gitId":"bensohh"},"content":"DeleteCommand --\u003e LogicManager : commandResult","lastModifiedDate":"2022-10-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"bensohh":17,"albertZhangTJ":6,"-":55}},{"path":"docs/diagrams/EditCommandActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Samsation"},"content":"@startuml","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"Samsation"},"content":"start","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"Samsation"},"content":"skinparam activityBorderThickness 1.5","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"Samsation"},"content":"skinparam activity {","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"Samsation"},"content":"    BorderColor #7F5539","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"Samsation"},"content":"    BackgroundColor #EDE0D4","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"Samsation"},"content":"    arrowColor #7F5539","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"Samsation"},"content":"}","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"Samsation"},"content":":User executes EditCommand;","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"Samsation"},"content":":AddressBookParser parses the command;","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"Samsation"},"content":":EditCommandParser parses the arguments provided;","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"Samsation"},"content":"if () then ([command is valid])","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"Samsation"},"content":"    :Get Phone/ Email details as identifier;","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"Samsation"},"content":"    :Fields to be edited are initialized in an EditPersonDescriptor object;","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"Samsation"},"content":"    :New EditCommand object created;","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"Samsation"},"content":"    :Get Customer\u0027s Index via identifier;","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"Samsation"},"content":"    if () then ([invalid index])","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"Samsation"},"content":"        :Throws an error message;","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"Samsation"},"content":"    else ([else])","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"Samsation"},"content":"        :EditCommand creates new Customer object","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"Samsation"},"content":"        containing the updated fields;","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"Samsation"},"content":"        if () then ([Customer already in database])","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"Samsation"},"content":"            :Throws an error message;","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"Samsation"},"content":"        else ([else])","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"albertZhangTJ"},"content":"            :BobaBotModel sets the Customer to edit to the edited Customer;","lastModifiedDate":"2022-10-31"},{"lineNumber":26,"author":{"gitId":"Samsation"},"content":"            :Edited Customer is reflected on the GUI;","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"Samsation"},"content":"        endif","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"Samsation"},"content":"    endif","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"Samsation"},"content":"else ([else])","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"Samsation"},"content":"    : Throws an error message;","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"Samsation"},"content":"endif","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"Samsation"},"content":"stop","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"Samsation"},"content":"@enduml","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"Samsation":32,"albertZhangTJ":1}},{"path":"docs/diagrams/EditSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Samsation"},"content":"@startuml","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"Samsation"},"content":"!include style.puml","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"Samsation"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"Samsation"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"Samsation"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"Samsation"},"content":"participant \":EditCommandParser\" as EditCommandParser LOGIC_COLOR","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"Samsation"},"content":"participant \"command:EditCommand\" as EditCommand LOGIC_COLOR","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"Samsation"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"Samsation"},"content":"end box","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"albertZhangTJ"},"content":"box BobaBotModel MODEL_COLOR_T1","lastModifiedDate":"2022-10-31"},{"lineNumber":13,"author":{"gitId":"albertZhangTJ"},"content":"participant \":BobaBotModel\" as BobaBotModel MODEL_COLOR","lastModifiedDate":"2022-10-31"},{"lineNumber":14,"author":{"gitId":"Samsation"},"content":"end box","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"Samsation"},"content":"[-\u003e LogicManager : execute(\"edit e/test@gmail.com n/Bob\")","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"Samsation"},"content":"activate LogicManager","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"Samsation"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"edit e/test@gmail.com n/Bob\")","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"Samsation"},"content":"activate AddressBookParser","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"Samsation"},"content":"create EditCommandParser","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"Samsation"},"content":"AddressBookParser -\u003e EditCommandParser","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"Samsation"},"content":"activate EditCommandParser","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"Samsation"},"content":"return","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"Samsation"},"content":"AddressBookParser -\u003e EditCommandParser : parse(\" e/test@gmail.com n/Bob\")","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"Samsation"},"content":"activate EditCommandParser","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"Samsation"},"content":"create EditCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"Samsation"},"content":"EditCommandParser -\u003e EditCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"Samsation"},"content":"activate EditCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"Samsation"},"content":"return command","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"Samsation"},"content":"deactivate EditCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"Samsation"},"content":"EditCommandParser --\u003e AddressBookParser : command","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"Samsation"},"content":"deactivate EditCommandParser","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"Samsation"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"Samsation"},"content":"EditCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"Samsation"},"content":"destroy EditCommandParser","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":44,"author":{"gitId":"Samsation"},"content":"AddressBookParser --\u003e LogicManager : command","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"Samsation"},"content":"deactivate AddressBookParser","lastModifiedDate":"2022-10-20"},{"lineNumber":46,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":47,"author":{"gitId":"Samsation"},"content":"LogicManager -\u003e EditCommand : execute()","lastModifiedDate":"2022-10-20"},{"lineNumber":48,"author":{"gitId":"Samsation"},"content":"activate EditCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":49,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":50,"author":{"gitId":"albertZhangTJ"},"content":"EditCommand -\u003e BobaBotModel : setPerson(personToEdit, editedPerson)","lastModifiedDate":"2022-10-31"},{"lineNumber":51,"author":{"gitId":"albertZhangTJ"},"content":"activate BobaBotModel","lastModifiedDate":"2022-10-31"},{"lineNumber":52,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"albertZhangTJ"},"content":"BobaBotModel --\u003e EditCommand","lastModifiedDate":"2022-10-31"},{"lineNumber":54,"author":{"gitId":"albertZhangTJ"},"content":"deactivate BobaBotModel","lastModifiedDate":"2022-10-31"},{"lineNumber":55,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":56,"author":{"gitId":"Samsation"},"content":"create CommandResult","lastModifiedDate":"2022-10-20"},{"lineNumber":57,"author":{"gitId":"Samsation"},"content":"EditCommand -\u003e CommandResult","lastModifiedDate":"2022-10-20"},{"lineNumber":58,"author":{"gitId":"Samsation"},"content":"activate CommandResult","lastModifiedDate":"2022-10-20"},{"lineNumber":59,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":60,"author":{"gitId":"Samsation"},"content":"CommandResult --\u003e EditCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":61,"author":{"gitId":"Samsation"},"content":"deactivate CommandResult","lastModifiedDate":"2022-10-20"},{"lineNumber":62,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":63,"author":{"gitId":"Samsation"},"content":"EditCommand --\u003e LogicManager : commandResult","lastModifiedDate":"2022-10-20"},{"lineNumber":64,"author":{"gitId":"Samsation"},"content":"deactivate EditCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":65,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":66,"author":{"gitId":"Samsation"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-10-20"},{"lineNumber":67,"author":{"gitId":"Samsation"},"content":"deactivate LogicManager","lastModifiedDate":"2022-10-20"},{"lineNumber":68,"author":{"gitId":"Samsation"},"content":"@enduml","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"Samsation":62,"albertZhangTJ":6}},{"path":"docs/diagrams/FindCommandActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"albertZhangTJ"},"content":"@startuml","lastModifiedDate":"2022-10-21"},{"lineNumber":2,"author":{"gitId":"albertZhangTJ"},"content":"start","lastModifiedDate":"2022-10-21"},{"lineNumber":3,"author":{"gitId":"albertZhangTJ"},"content":"skinparam activityBorderThickness 1.5","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"albertZhangTJ"},"content":"skinparam activity {","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"albertZhangTJ"},"content":"    BorderColor #7F5539","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"albertZhangTJ"},"content":"    BackgroundColor #EDE0D4","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"albertZhangTJ"},"content":"    arrowColor #7F5539","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"albertZhangTJ"},"content":"}","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"albertZhangTJ"},"content":":User executes FindCommand;","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"albertZhangTJ"},"content":":AddressBookParser parses the command;","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"albertZhangTJ"},"content":":FindCommandParser parses the arguments provided;","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"albertZhangTJ"},"content":"if () then ([command is valid])","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"albertZhangTJ"},"content":"    if () then ([Prefixes for email/phone is present])","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"albertZhangTJ"},"content":"        if () then ([invalid])","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"albertZhangTJ"},"content":"            : Throw an Exception;","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"albertZhangTJ"},"content":"        else ([else])","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"albertZhangTJ"},"content":"            : Create FindCommand with findPersonDescriptor;","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"albertZhangTJ"},"content":"        endif","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"albertZhangTJ"},"content":"    else ([else])","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"albertZhangTJ"},"content":"        : Create FindCommand with MultiSearchPredicate;","lastModifiedDate":"2022-10-21"},{"lineNumber":22,"author":{"gitId":"albertZhangTJ"},"content":"    endif","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"albertZhangTJ"},"content":"    if () then ([FindCommand has predicate])","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"albertZhangTJ"},"content":"        : MultiSearchPredicate search the argument;","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"albertZhangTJ"},"content":"        : NameSoundsSimilarToPredicate applies does fuzzy search one name ;","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"albertZhangTJ"},"content":"        : AllInfoContainsKeywordsPredicate search for occurence of the argument in all attributes;","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"albertZhangTJ"},"content":"    else ([else])","lastModifiedDate":"2022-10-21"},{"lineNumber":28,"author":{"gitId":"albertZhangTJ"},"content":"        : Search with the findPersonDescriptor;","lastModifiedDate":"2022-10-21"},{"lineNumber":29,"author":{"gitId":"albertZhangTJ"},"content":"    endif","lastModifiedDate":"2022-10-21"},{"lineNumber":30,"author":{"gitId":"albertZhangTJ"},"content":"else ([else])","lastModifiedDate":"2022-10-21"},{"lineNumber":31,"author":{"gitId":"albertZhangTJ"},"content":"    : Throws an error message;","lastModifiedDate":"2022-10-21"},{"lineNumber":32,"author":{"gitId":"albertZhangTJ"},"content":"endif","lastModifiedDate":"2022-10-21"},{"lineNumber":33,"author":{"gitId":"albertZhangTJ"},"content":": Display feedback to user on GUI ;","lastModifiedDate":"2022-10-21"},{"lineNumber":34,"author":{"gitId":"albertZhangTJ"},"content":"stop","lastModifiedDate":"2022-10-21"},{"lineNumber":35,"author":{"gitId":"albertZhangTJ"},"content":"@enduml","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"albertZhangTJ":35}},{"path":"docs/diagrams/FindSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"albertZhangTJ"},"content":"@startuml","lastModifiedDate":"2022-10-21"},{"lineNumber":2,"author":{"gitId":"albertZhangTJ"},"content":"!include style.puml","lastModifiedDate":"2022-10-21"},{"lineNumber":3,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"albertZhangTJ"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"albertZhangTJ"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"albertZhangTJ"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"albertZhangTJ"},"content":"participant \":FindCommandParser\" as FindCommandParser LOGIC_COLOR","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"albertZhangTJ"},"content":"participant \"command:FindCommand\" as FindCommand LOGIC_COLOR","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"albertZhangTJ"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"albertZhangTJ"},"content":"end box","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"albertZhangTJ"},"content":"box BobaBotModel MODEL_COLOR_T1","lastModifiedDate":"2022-10-31"},{"lineNumber":13,"author":{"gitId":"albertZhangTJ"},"content":"participant \":BobaBotModel\" as BobaBotModel MODEL_COLOR","lastModifiedDate":"2022-10-31"},{"lineNumber":14,"author":{"gitId":"albertZhangTJ"},"content":"end box","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"albertZhangTJ"},"content":"[-\u003e LogicManager : execute(\"find Aschcroft\")","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"albertZhangTJ"},"content":"activate LogicManager","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"albertZhangTJ"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"find Aschcroft\")","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"albertZhangTJ"},"content":"activate AddressBookParser","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":22,"author":{"gitId":"albertZhangTJ"},"content":"create FindCommandParser","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"albertZhangTJ"},"content":"AddressBookParser -\u003e FindCommandParser","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"albertZhangTJ"},"content":"activate FindCommandParser","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"albertZhangTJ"},"content":"return","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"albertZhangTJ"},"content":"AddressBookParser -\u003e FindCommandParser : parse(\"Aschcroft\")","lastModifiedDate":"2022-10-21"},{"lineNumber":28,"author":{"gitId":"albertZhangTJ"},"content":"activate FindCommandParser","lastModifiedDate":"2022-10-21"},{"lineNumber":29,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":30,"author":{"gitId":"albertZhangTJ"},"content":"create FindCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":31,"author":{"gitId":"albertZhangTJ"},"content":"FindCommandParser -\u003e FindCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":32,"author":{"gitId":"albertZhangTJ"},"content":"activate FindCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":33,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":34,"author":{"gitId":"albertZhangTJ"},"content":"return command","lastModifiedDate":"2022-10-21"},{"lineNumber":35,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":36,"author":{"gitId":"albertZhangTJ"},"content":"deactivate FindCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":37,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":38,"author":{"gitId":"albertZhangTJ"},"content":"FindCommandParser --\u003e AddressBookParser : command","lastModifiedDate":"2022-10-21"},{"lineNumber":39,"author":{"gitId":"albertZhangTJ"},"content":"deactivate FindCommandParser","lastModifiedDate":"2022-10-21"},{"lineNumber":40,"author":{"gitId":"albertZhangTJ"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-10-21"},{"lineNumber":41,"author":{"gitId":"albertZhangTJ"},"content":"FindCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2022-10-21"},{"lineNumber":42,"author":{"gitId":"albertZhangTJ"},"content":"destroy FindCommandParser","lastModifiedDate":"2022-10-21"},{"lineNumber":43,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":44,"author":{"gitId":"albertZhangTJ"},"content":"AddressBookParser --\u003e LogicManager : command","lastModifiedDate":"2022-10-21"},{"lineNumber":45,"author":{"gitId":"albertZhangTJ"},"content":"deactivate AddressBookParser","lastModifiedDate":"2022-10-21"},{"lineNumber":46,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":47,"author":{"gitId":"albertZhangTJ"},"content":"LogicManager -\u003e FindCommand : execute()","lastModifiedDate":"2022-10-21"},{"lineNumber":48,"author":{"gitId":"albertZhangTJ"},"content":"activate FindCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":49,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":50,"author":{"gitId":"albertZhangTJ"},"content":"FindCommand -\u003e BobaBotModel : updateFilteredPersonList(filterPersonToFind)","lastModifiedDate":"2022-10-31"},{"lineNumber":51,"author":{"gitId":"albertZhangTJ"},"content":"activate BobaBotModel","lastModifiedDate":"2022-10-31"},{"lineNumber":52,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":53,"author":{"gitId":"albertZhangTJ"},"content":"BobaBotModel --\u003e FindCommand","lastModifiedDate":"2022-10-31"},{"lineNumber":54,"author":{"gitId":"albertZhangTJ"},"content":"deactivate BobaBotModel","lastModifiedDate":"2022-10-31"},{"lineNumber":55,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":56,"author":{"gitId":"albertZhangTJ"},"content":"create CommandResult","lastModifiedDate":"2022-10-21"},{"lineNumber":57,"author":{"gitId":"albertZhangTJ"},"content":"FindCommand -\u003e CommandResult","lastModifiedDate":"2022-10-21"},{"lineNumber":58,"author":{"gitId":"albertZhangTJ"},"content":"activate CommandResult","lastModifiedDate":"2022-10-21"},{"lineNumber":59,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":60,"author":{"gitId":"albertZhangTJ"},"content":"CommandResult --\u003e FindCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":61,"author":{"gitId":"albertZhangTJ"},"content":"deactivate CommandResult","lastModifiedDate":"2022-10-21"},{"lineNumber":62,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":63,"author":{"gitId":"albertZhangTJ"},"content":"FindCommand --\u003e LogicManager : commandResult","lastModifiedDate":"2022-10-21"},{"lineNumber":64,"author":{"gitId":"albertZhangTJ"},"content":"deactivate FindCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":65,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":66,"author":{"gitId":"albertZhangTJ"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-10-21"},{"lineNumber":67,"author":{"gitId":"albertZhangTJ"},"content":"deactivate LogicManager","lastModifiedDate":"2022-10-21"},{"lineNumber":68,"author":{"gitId":"albertZhangTJ"},"content":"@enduml","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"albertZhangTJ":68}},{"path":"docs/diagrams/LogicClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Logic {","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nLogic\" as Logic","lastModifiedDate":"2022-01-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"albertZhangTJ"},"content":"package BobaBotModel{","lastModifiedDate":"2022-10-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"LogicManager .right.|\u003e Logic","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"LogicManager -right-\u003e\"1\" AddressBookParser","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"AddressBookParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"LogicManager .left.\u003e Command : executes \u003e","lastModifiedDate":"2019-07-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"albertZhangTJ"},"content":"LogicManager --\u003e BobaBotModel","lastModifiedDate":"2022-10-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"LogicManager --\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"albertZhangTJ"},"content":"Storage --[hidden] BobaBotModel","lastModifiedDate":"2022-10-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Command .[hidden]up.\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"albertZhangTJ"},"content":"Command .right.\u003e BobaBotModel","lastModifiedDate":"2022-10-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"note right of XYZCommand: XYZCommand \u003d AddCommand, \\nFindCommand, etc","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Logic ..\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"LogicManager .down.\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Command .up.\u003e CommandResult : produces \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"albertZhangTJ":4,"-":42}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"albertZhangTJ"},"content":"Package BobaBotModel \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2022-10-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyAddressBook\" as ReadOnlyAddressBook","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"albertZhangTJ"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nBobaBotModel\" as BobaBotModel","lastModifiedDate":"2022-10-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"albertZhangTJ"},"content":"Class BobaBotModelManager","lastModifiedDate":"2022-10-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UniquePersonList","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class Person","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class Address","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"albertZhangTJ"},"content":"HiddenOutside ..\u003e BobaBotModel","lastModifiedDate":"2022-10-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"albertZhangTJ"},"content":"BobaBotModelManager .up.|\u003e BobaBotModel","lastModifiedDate":"2022-10-31"},{"lineNumber":31,"author":{"gitId":"albertZhangTJ"},"content":"BobaBotModel .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2022-10-31"},{"lineNumber":32,"author":{"gitId":"albertZhangTJ"},"content":"BobaBotModel .left.\u003e ReadOnlyAddressBook","lastModifiedDate":"2022-10-31"},{"lineNumber":33,"author":{"gitId":"albertZhangTJ"},"content":"BobaBotModelManager -left-\u003e \"1\" AddressBook","lastModifiedDate":"2022-10-31"},{"lineNumber":34,"author":{"gitId":"albertZhangTJ"},"content":"BobaBotModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2022-10-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"AddressBook *--\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"UniquePersonList --\u003e \"~* all\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Person *--\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Person *--\u003e \"*\" Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Phone -[hidden]right-\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"Address -[hidden]right-\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"albertZhangTJ"},"content":"BobaBotModelManager --\u003e\"~* filtered\" Person","lastModifiedDate":"2022-10-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"albertZhangTJ":10,"-":40}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUi\" as Ui","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class PersonListPanel","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class PersonCard","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"albertZhangTJ"},"content":"package BobaBotModel \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2022-10-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" PersonListPanel","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"PersonListPanel -down-\u003e \"*\" PersonCard","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"PersonListPanel --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"PersonCard --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"albertZhangTJ"},"content":"PersonCard ..\u003e BobaBotModel","lastModifiedDate":"2022-10-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"PersonListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"albertZhangTJ":2,"-":58}},{"path":"docs/diagrams/UndoRedoState0.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title Initial state","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    class State1 as \"__ab0:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    class State2 as \"__ab1:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    class State3 as \"__ab2:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"hide State2","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"hide State3","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"WuHaohui1231"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State1","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":19,"WuHaohui1231":1}},{"path":"docs/diagrams/UndoRedoState1.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"delete 5\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    class State1 as \"__ab0:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    class State2 as \"__ab1:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    class State3 as \"__ab2:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"hide State3","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"WuHaohui1231"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":21,"WuHaohui1231":1}},{"path":"docs/diagrams/UndoRedoState2.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"add n/David\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    class State1 as \"__ab0:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    class State2 as \"__ab1:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    class State3 as \"__ab2:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"WuHaohui1231"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":19,"WuHaohui1231":1}},{"path":"docs/diagrams/UndoRedoState3.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"undo\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    class State1 as \"__ab0:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    class State2 as \"__ab1:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    class State3 as \"__ab2:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"WuHaohui1231"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":19,"WuHaohui1231":1}},{"path":"docs/diagrams/UndoRedoState4.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"list\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    class State1 as \"__ab0:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    class State2 as \"__ab1:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    class State3 as \"__ab2:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"WuHaohui1231"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":19,"WuHaohui1231":1}},{"path":"docs/diagrams/UndoRedoState5.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"clear\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    class State1 as \"__ab0:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    class State2 as \"__ab1:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    class State3 as \"__ab3:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"WuHaohui1231"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"note right on link: State ab2 deleted.","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":20,"WuHaohui1231":1}},{"path":"docs/diagrams/UndoSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \"u:UndoCommand\" as UndoCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"albertZhangTJ"},"content":"box BobaBotModel MODEL_COLOR_T1","lastModifiedDate":"2022-10-31"},{"lineNumber":11,"author":{"gitId":"albertZhangTJ"},"content":"participant \":BobaBotModel\" as BobaBotModel MODEL_COLOR","lastModifiedDate":"2022-10-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"participant \":VersionedAddressBook\" as VersionedAddressBook MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"[-\u003e LogicManager : execute(undo)","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(undo)","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"activate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"create UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"AddressBookParser -\u003e UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"activate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"UndoCommand --\u003e AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"deactivate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"AddressBookParser --\u003e LogicManager : u","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"LogicManager -\u003e UndoCommand : execute()","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"activate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"albertZhangTJ"},"content":"UndoCommand -\u003e BobaBotModel : undoAddressBook()","lastModifiedDate":"2022-10-31"},{"lineNumber":34,"author":{"gitId":"albertZhangTJ"},"content":"activate BobaBotModel","lastModifiedDate":"2022-10-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"albertZhangTJ"},"content":"BobaBotModel -\u003e VersionedAddressBook : undo()","lastModifiedDate":"2022-10-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"activate VersionedAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"VersionedAddressBook -\u003e VersionedAddressBook :resetData(ReadOnlyAddressBook)","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"albertZhangTJ"},"content":"VersionedAddressBook --\u003e BobaBotModel :","lastModifiedDate":"2022-10-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"deactivate VersionedAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"albertZhangTJ"},"content":"BobaBotModel --\u003e UndoCommand","lastModifiedDate":"2022-10-31"},{"lineNumber":44,"author":{"gitId":"albertZhangTJ"},"content":"deactivate BobaBotModel","lastModifiedDate":"2022-10-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"UndoCommand --\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"deactivate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"UndoCommand -[hidden]-\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"destroy UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"albertZhangTJ":8,"-":45}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"albertZhangTJ"},"content":"\u003clink rel\u003d\"shortcut icon\" type\u003d\"image/x-icon\" href\u003d\"favicon.png\"\u003e","lastModifiedDate":"2022-11-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":3,"author":{"gitId":"albertZhangTJ"},"content":"# bobaBot","lastModifiedDate":"2022-11-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"Samsation"},"content":"[![CI Status](https://github.com/AY2223S1-CS2103T-W09-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S1-CS2103T-W09-1/tp/actions)","lastModifiedDate":"2022-09-24"},{"lineNumber":6,"author":{"gitId":"Samsation"},"content":"[![codecov](https://codecov.io/gh/AY2223S1-CS2103T-W09-1/tp/branch/master/graph/badge.svg)](https://codecov.io/gh/AY2223S1-CS2103T-W09-1/tp)","lastModifiedDate":"2022-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"bensohh"},"content":"**bobaBot is a desktop application _designed for bubble tea shop cashiers_ to manage customers’ membership details.** While it has a GUI (Graphical User Interface), most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2022-10-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"Samsation"},"content":"* If you are interested in using bobaBot, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2022-09-24"},{"lineNumber":13,"author":{"gitId":"Samsation"},"content":"* If you are interested about developing bobaBot, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2022-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Samsation":4,"bensohh":1,"albertZhangTJ":2,"-":11}},{"path":"docs/team/albertzhangtj.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"albertZhangTJ"},"content":"---","lastModifiedDate":"2022-09-17"},{"lineNumber":2,"author":{"gitId":"albertZhangTJ"},"content":"layout: page","lastModifiedDate":"2022-11-01"},{"lineNumber":3,"author":{"gitId":"albertZhangTJ"},"content":"title: ZHANG TONGJUN\u0027s Project Portfolio Page","lastModifiedDate":"2022-11-01"},{"lineNumber":4,"author":{"gitId":"albertZhangTJ"},"content":"---","lastModifiedDate":"2022-11-01"},{"lineNumber":5,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":6,"author":{"gitId":"albertZhangTJ"},"content":"### Project: bobaBot","lastModifiedDate":"2022-11-01"},{"lineNumber":7,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":8,"author":{"gitId":"albertZhangTJ"},"content":"bobaBot is a desktop application for managing customers’ membership details.","lastModifiedDate":"2022-11-01"},{"lineNumber":9,"author":{"gitId":"albertZhangTJ"},"content":"It is optimized for Command Line Interface (CLI) while retaining some benefits of the Graphical User Interface (GUI).","lastModifiedDate":"2022-11-01"},{"lineNumber":10,"author":{"gitId":"albertZhangTJ"},"content":"If you are a cashier working at a bubble tea shop and can type fast,","lastModifiedDate":"2022-11-01"},{"lineNumber":11,"author":{"gitId":"albertZhangTJ"},"content":"bobaBot can help you easily find and manage your customers’ membership information as compared to other GUI applications.","lastModifiedDate":"2022-11-01"},{"lineNumber":12,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":13,"author":{"gitId":"albertZhangTJ"},"content":"bobaBot contains a database of customers’ information and supports operations to add,","lastModifiedDate":"2022-11-01"},{"lineNumber":14,"author":{"gitId":"albertZhangTJ"},"content":"update, delete and even find customers based on various inputs.","lastModifiedDate":"2022-11-01"},{"lineNumber":15,"author":{"gitId":"albertZhangTJ"},"content":"Every entry in the database contains the customer\u0027s name, phone number, email address,","lastModifiedDate":"2022-11-01"},{"lineNumber":16,"author":{"gitId":"albertZhangTJ"},"content":"birthday month, reward points, and tags.","lastModifiedDate":"2022-11-01"},{"lineNumber":17,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":18,"author":{"gitId":"albertZhangTJ"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-11-01"},{"lineNumber":19,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":20,"author":{"gitId":"albertZhangTJ"},"content":"* **New Feature**:","lastModifiedDate":"2022-11-01"},{"lineNumber":21,"author":{"gitId":"albertZhangTJ"},"content":"  * Fuzzy search for name based on `Soundex`","lastModifiedDate":"2022-11-01"},{"lineNumber":22,"author":{"gitId":"albertZhangTJ"},"content":"  * Search for match in all attributes","lastModifiedDate":"2022-11-01"},{"lineNumber":23,"author":{"gitId":"albertZhangTJ"},"content":"  * Undo/Redo changes","lastModifiedDate":"2022-11-01"},{"lineNumber":24,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":25,"author":{"gitId":"albertZhangTJ"},"content":"* **Code contributed**:","lastModifiedDate":"2022-11-01"},{"lineNumber":26,"author":{"gitId":"albertZhangTJ"},"content":"  * [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dalbertzhangtj\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-11-01"},{"lineNumber":27,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":28,"author":{"gitId":"albertZhangTJ"},"content":"* **Project management**:","lastModifiedDate":"2022-11-01"},{"lineNumber":29,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":30,"author":{"gitId":"albertZhangTJ"},"content":"* **Enhancement to existing features**:","lastModifiedDate":"2022-11-01"},{"lineNumber":31,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":32,"author":{"gitId":"albertZhangTJ"},"content":"* **Documentation**:","lastModifiedDate":"2022-11-01"},{"lineNumber":33,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":34,"author":{"gitId":"albertZhangTJ"},"content":"* **Community**:","lastModifiedDate":"2022-11-01"},{"lineNumber":35,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":36,"author":{"gitId":"albertZhangTJ"},"content":"* **Tools**:","lastModifiedDate":"2022-11-01"},{"lineNumber":37,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":38,"author":{"gitId":"albertZhangTJ"},"content":"{Add/Remove categories in the list above in the future}","lastModifiedDate":"2022-11-01"}],"authorContributionMap":{"albertZhangTJ":38}},{"path":"docs/team/bensohh.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"bensohh"},"content":"---","lastModifiedDate":"2022-09-17"},{"lineNumber":2,"author":{"gitId":"bensohh"},"content":"layout: page","lastModifiedDate":"2022-09-17"},{"lineNumber":3,"author":{"gitId":"bensohh"},"content":"title: Benjamin Soh\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-17"},{"lineNumber":4,"author":{"gitId":"bensohh"},"content":"---","lastModifiedDate":"2022-09-17"},{"lineNumber":5,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":6,"author":{"gitId":"bensohh"},"content":"### Project: bobaBot","lastModifiedDate":"2022-09-17"},{"lineNumber":7,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":8,"author":{"gitId":"bensohh"},"content":"bobaBot is a desktop application for managing customers’ membership details. It is optimized for Command Line Interface (CLI) while retaining some benefits of the Graphical User Interface (GUI). If you are a cashier working at a bubble tea shop and can type fast, bobaBot can help you easily find and manage your customers’ membership information as compared to other GUI applications.","lastModifiedDate":"2022-09-24"},{"lineNumber":9,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":10,"author":{"gitId":"bensohh"},"content":"bobaBot contains a database of customers’ information and supports operations to add, update, delete and even find customers based on various inputs. Every entry in the database contains the customer\u0027s name, phone number, email address, reward points/vouchers [to be added later] and …","lastModifiedDate":"2022-09-24"},{"lineNumber":11,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":12,"author":{"gitId":"bensohh"},"content":"More details to be added","lastModifiedDate":"2022-09-24"},{"lineNumber":13,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":14,"author":{"gitId":"bensohh"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-24"},{"lineNumber":15,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":16,"author":{"gitId":"bensohh"},"content":"* **New Feature**:","lastModifiedDate":"2022-09-24"},{"lineNumber":17,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":18,"author":{"gitId":"bensohh"},"content":"* **Code contributed**: [RepoSense link](insert link here)","lastModifiedDate":"2022-09-24"},{"lineNumber":19,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":20,"author":{"gitId":"bensohh"},"content":"* **Project management**:","lastModifiedDate":"2022-09-24"},{"lineNumber":21,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":22,"author":{"gitId":"bensohh"},"content":"* **Enhancement to existing features**:","lastModifiedDate":"2022-09-24"},{"lineNumber":23,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":24,"author":{"gitId":"bensohh"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-24"},{"lineNumber":25,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":26,"author":{"gitId":"bensohh"},"content":"* **Community**:","lastModifiedDate":"2022-09-24"},{"lineNumber":27,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":28,"author":{"gitId":"bensohh"},"content":"* **Tools**:","lastModifiedDate":"2022-09-24"},{"lineNumber":29,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":30,"author":{"gitId":"bensohh"},"content":"{Add/Remove categories in the list above in the future}","lastModifiedDate":"2022-09-24"},{"lineNumber":31,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-24"}],"authorContributionMap":{"bensohh":31}},{"path":"docs/team/samsation.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Samsation"},"content":"---","lastModifiedDate":"2022-09-17"},{"lineNumber":2,"author":{"gitId":"Samsation"},"content":"layout: page","lastModifiedDate":"2022-09-17"},{"lineNumber":3,"author":{"gitId":"Samsation"},"content":"title: Samuel Koh\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-17"},{"lineNumber":4,"author":{"gitId":"Samsation"},"content":"---","lastModifiedDate":"2022-09-17"},{"lineNumber":5,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":6,"author":{"gitId":"Samsation"},"content":"### Project: bobaBot","lastModifiedDate":"2022-09-17"},{"lineNumber":7,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":8,"author":{"gitId":"Samsation"},"content":"bobaBot is a desktop application for managing customers’ membership details. It is optimized for Command Line Interface (CLI) while retaining some benefits of the Graphical User Interface (GUI). If you are a cashier working at a bubble tea shop and can type fast, bobaBot can help you easily find and manage your customers’ membership information as compared to other GUI applications.","lastModifiedDate":"2022-09-18"},{"lineNumber":9,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":10,"author":{"gitId":"Samsation"},"content":"bobaBot contains a database of customers’ information and supports operations to add, update, delete and even find customers based on various inputs. Every entry in the database contains the customer\u0027s name, phone number, email address, birthday month, reward points and membership tags.","lastModifiedDate":"2022-11-02"},{"lineNumber":11,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":12,"author":{"gitId":"Samsation"},"content":"bobaBot is written in Java and has about 13 kLoC.","lastModifiedDate":"2022-11-02"},{"lineNumber":13,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":14,"author":{"gitId":"Samsation"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-18"},{"lineNumber":15,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":16,"author":{"gitId":"Samsation"},"content":"* **New Feature**: `Increase` Command - Added the functionality for users to directly increase a Customer\u0027s Reward points.","lastModifiedDate":"2022-11-02"},{"lineNumber":17,"author":{"gitId":"Samsation"},"content":"  (Pull Requests [#138](https://github.com/AY2223S1-CS2103T-W09-1/tp/pull/138), [#205](https://github.com/AY2223S1-CS2103T-W09-1/tp/pull/205))","lastModifiedDate":"2022-11-02"},{"lineNumber":18,"author":{"gitId":"Samsation"},"content":"    * What it does: Allows the user to increase a Customer\u0027s Reward points without accessing the Edit Command. For example, the user choose to identify the Customer via Phone number","lastModifiedDate":"2022-11-02"},{"lineNumber":19,"author":{"gitId":"Samsation"},"content":"      or Email address to increase his/ her Reward points. The command will only increment the Reward points if the final value **DOES NOT** exceed the **MAXIMUM INTEGER VALUE (2147483647)**. If it is exceeded,","lastModifiedDate":"2022-11-02"},{"lineNumber":20,"author":{"gitId":"Samsation"},"content":"      an appropriate error message would be thrown.","lastModifiedDate":"2022-11-02"},{"lineNumber":21,"author":{"gitId":"Samsation"},"content":"    * Justification: This feature improves the product efficiency for the users (bubble tea shop cashiers), as this would be easily the most used Command during any transaction, along with the `Decrease` Command.","lastModifiedDate":"2022-11-02"},{"lineNumber":22,"author":{"gitId":"Samsation"},"content":"      Therefore, this functionality allows for quick and easy way to increment a Customer\u0027s Reward points without accessing the `Edit` Command, which is faster to enter into the CLI. Another added side benefit is that","lastModifiedDate":"2022-11-02"},{"lineNumber":23,"author":{"gitId":"Samsation"},"content":"      there would not be any accidental changes to other Customer fields since we are not directly calling the `Edit` Command.","lastModifiedDate":"2022-11-02"},{"lineNumber":24,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":25,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":26,"author":{"gitId":"Samsation"},"content":"* **New Feature**: `Decrease` Command - Added the functionality for users to directly decrease a Customer\u0027s Reward points.","lastModifiedDate":"2022-11-02"},{"lineNumber":27,"author":{"gitId":"Samsation"},"content":"  (Pull Requests [#138](https://github.com/AY2223S1-CS2103T-W09-1/tp/pull/138), [#205](https://github.com/AY2223S1-CS2103T-W09-1/tp/pull/205))","lastModifiedDate":"2022-11-02"},{"lineNumber":28,"author":{"gitId":"Samsation"},"content":"    * What it does: Similar to the above `Increase` Command, this allows the user to decrease a Customer\u0027s Reward points without accessing the `Edit` Command. For example, the user choose to identify the Customer via Phone number","lastModifiedDate":"2022-11-02"},{"lineNumber":29,"author":{"gitId":"Samsation"},"content":"      or Email address to decrease his/ her Reward points. The command will only decrement the Reward points if the final value **DOES NOT** become a **NEGATIVE VALUE**. If it becomes negative,","lastModifiedDate":"2022-11-02"},{"lineNumber":30,"author":{"gitId":"Samsation"},"content":"      an appropriate error message would be thrown.","lastModifiedDate":"2022-11-02"},{"lineNumber":31,"author":{"gitId":"Samsation"},"content":"    * Justification: This feature provides the same efficiency benefits as the `Increase` Command stated above.","lastModifiedDate":"2022-11-02"},{"lineNumber":32,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":33,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":34,"author":{"gitId":"Samsation"},"content":"* **New Feature**: `BirthdayMonth` Tag - Reflects whether it is currently a Customer\u0027s birthday month.","lastModifiedDate":"2022-11-02"},{"lineNumber":35,"author":{"gitId":"Samsation"},"content":"  (Pull Request [#146](https://github.com/AY2223S1-CS2103T-W09-1/tp/pull/146))","lastModifiedDate":"2022-11-02"},{"lineNumber":36,"author":{"gitId":"Samsation"},"content":"    * What it does: Automatically adds a `BDAY` tag to Customers whose `BirthdayMonth` is the current month (syncs with the local system\u0027s month). For example, if the Customer\u0027s birthday is in November, then","lastModifiedDate":"2022-11-02"},{"lineNumber":37,"author":{"gitId":"Samsation"},"content":"      from 1 November onwards, the `BDAY` tag would be automatically added to the Customer for the entire month. Once it becomes 1 December, this tag will then be automatically removed as it is synced with","lastModifiedDate":"2022-11-02"},{"lineNumber":38,"author":{"gitId":"Samsation"},"content":"      the local system.","lastModifiedDate":"2022-11-02"},{"lineNumber":39,"author":{"gitId":"Samsation"},"content":"    * Justification: This allows the users (bubble tea shop cashiers) to easily track who is eligible for any ongoing birthday promotions.","lastModifiedDate":"2022-11-02"},{"lineNumber":40,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":41,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":42,"author":{"gitId":"Samsation"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dw09\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2022-09-16\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026zFR\u003dfalse\u0026tabAuthor\u003dSamsation\u0026tabRepo\u003dAY2223S1-CS2103T-W09-1%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse)","lastModifiedDate":"2022-11-02"},{"lineNumber":43,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":44,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":45,"author":{"gitId":"Samsation"},"content":"* **Project management**:","lastModifiedDate":"2022-09-18"},{"lineNumber":46,"author":{"gitId":"Samsation"},"content":"  * Refactored Person class to Customer class (Pull Request [#146](https://github.com/AY2223S1-CS2103T-W09-1/tp/pull/146))","lastModifiedDate":"2022-11-02"},{"lineNumber":47,"author":{"gitId":"Samsation"},"content":"  * Refactored Address class to Reward class (Pull Request [#76](https://github.com/AY2223S1-CS2103T-W09-1/tp/pull/76))","lastModifiedDate":"2022-11-02"},{"lineNumber":48,"author":{"gitId":"Samsation"},"content":"  * Created icon for bobaBot (Pull Request [#92](https://github.com/AY2223S1-CS2103T-W09-1/tp/pull/92))","lastModifiedDate":"2022-11-02"},{"lineNumber":49,"author":{"gitId":"Samsation"},"content":"  * Managed releases `v1.3.1` and `v1.3.2` (2 releases) on GitHub","lastModifiedDate":"2022-11-02"},{"lineNumber":50,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":51,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":52,"author":{"gitId":"Samsation"},"content":"* **Enhancement to existing features**: Improved the original `Edit` Command to allow users to identify Customers to edit via Phone number or Email address, instead of via Index.","lastModifiedDate":"2022-11-02"},{"lineNumber":53,"author":{"gitId":"Samsation"},"content":"  (Pull Requests [#68](https://github.com/AY2223S1-CS2103T-W09-1/tp/pull/68), [#76](https://github.com/AY2223S1-CS2103T-W09-1/tp/pull/76), [#82](https://github.com/AY2223S1-CS2103T-W09-1/tp/pull/82), [#205](https://github.com/AY2223S1-CS2103T-W09-1/tp/pull/205))","lastModifiedDate":"2022-11-02"},{"lineNumber":54,"author":{"gitId":"Samsation"},"content":"  * What it does: Allows users to identify Customers via Phone number or Email address, which are both unique identifiers for individuals, instead of using Index originally.","lastModifiedDate":"2022-11-02"},{"lineNumber":55,"author":{"gitId":"Samsation"},"content":"  * Justification: This feature increases the speed at which the user (bubble tea shop cashiers) can edit the Customer\u0027s fields. Originally, the user would have to scroll through the ","lastModifiedDate":"2022-11-02"},{"lineNumber":56,"author":{"gitId":"Samsation"},"content":"  entire list of Customers to find his/ her Index, then execute the `Edit` Command. With this improvement, this entire step is skipped, greatly improving the efficiency of this Command.","lastModifiedDate":"2022-11-02"},{"lineNumber":57,"author":{"gitId":"Samsation"},"content":"  We also thought of including Name as a unique identifier, but eventually decided against it since there is a high change of multiple same-named Customers appearing in the list, which does","lastModifiedDate":"2022-11-02"},{"lineNumber":58,"author":{"gitId":"Samsation"},"content":"  not help in achieving the desired efficiency.","lastModifiedDate":"2022-11-02"},{"lineNumber":59,"author":{"gitId":"Samsation"},"content":"  * Highlights: Customers\u0027 identification is now more flexible since we have 2 unique identifiers to aid in this process. This change would also later form the foundation of the `Increase` and","lastModifiedDate":"2022-11-02"},{"lineNumber":60,"author":{"gitId":"Samsation"},"content":"  `Decrease` Commands, as well as how other Commands deal with identifying unique Customers.","lastModifiedDate":"2022-11-02"},{"lineNumber":61,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":62,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":63,"author":{"gitId":"Samsation"},"content":"* **Enhancement to existing features**: Improved the original `Find` Command to allow users to find unique Customers via Phone number or Email address as well.","lastModifiedDate":"2022-11-02"},{"lineNumber":64,"author":{"gitId":"Samsation"},"content":"  (Pull Request [#80](https://github.com/AY2223S1-CS2103T-W09-1/tp/pull/80))","lastModifiedDate":"2022-11-02"},{"lineNumber":65,"author":{"gitId":"Samsation"},"content":"    * What it does: Allows users to find Customers via Phone number or Email address, which are both unique identifiers for individuals.","lastModifiedDate":"2022-11-02"},{"lineNumber":66,"author":{"gitId":"Samsation"},"content":"    * Justification: This feature ensures that only one unique Customer will be displayed after the `Find` Command has been executed, which is helpful when the user does not want to scroll","lastModifiedDate":"2022-11-02"},{"lineNumber":67,"author":{"gitId":"Samsation"},"content":"    through multiple Customers in the resultant list. ","lastModifiedDate":"2022-11-02"},{"lineNumber":68,"author":{"gitId":"Samsation"},"content":"    * Highlights: This is an alternative way to use the `Find` Command, the other being searching via keywords, which allows for greater flexibility for the users.","lastModifiedDate":"2022-11-02"},{"lineNumber":69,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":70,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":71,"author":{"gitId":"Samsation"},"content":"* **Enhancement to existing features**: Added appropriate colours for special Tags.","lastModifiedDate":"2022-11-02"},{"lineNumber":72,"author":{"gitId":"Samsation"},"content":"  (Pull Request [#146](https://github.com/AY2223S1-CS2103T-W09-1/tp/pull/146))","lastModifiedDate":"2022-11-02"},{"lineNumber":73,"author":{"gitId":"Samsation"},"content":"    * What it does: Updated GUI to display appropriate colours for different membership tiers and status e.g. `GOLD`, `BANNED`, `BDAY`","lastModifiedDate":"2022-11-02"},{"lineNumber":74,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":75,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":76,"author":{"gitId":"Samsation"},"content":"* **Documentation**:","lastModifiedDate":"2022-11-02"},{"lineNumber":77,"author":{"gitId":"Samsation"},"content":"  * User Guide:","lastModifiedDate":"2022-11-02"},{"lineNumber":78,"author":{"gitId":"Samsation"},"content":"    * Added documentation for the Commands `Edit`, `Increase`, `Decrease`","lastModifiedDate":"2022-11-02"},{"lineNumber":79,"author":{"gitId":"Samsation"},"content":"      (Pull Requests [#45](https://github.com/AY2223S1-CS2103T-W09-1/tp/pull/45), [#115](https://github.com/AY2223S1-CS2103T-W09-1/tp/pull/115), [#140](https://github.com/AY2223S1-CS2103T-W09-1/tp/pull/140))","lastModifiedDate":"2022-11-02"},{"lineNumber":80,"author":{"gitId":"Samsation"},"content":"    * Added table of contents","lastModifiedDate":"2022-11-02"},{"lineNumber":81,"author":{"gitId":"Samsation"},"content":"      (Pull Request [#165](https://github.com/AY2223S1-CS2103T-W09-1/tp/pull/165))","lastModifiedDate":"2022-11-02"},{"lineNumber":82,"author":{"gitId":"Samsation"},"content":"  * Developer Guide:","lastModifiedDate":"2022-11-02"},{"lineNumber":83,"author":{"gitId":"Samsation"},"content":"    * Added use cases","lastModifiedDate":"2022-11-02"},{"lineNumber":84,"author":{"gitId":"Samsation"},"content":"      (Pull Request [#42](https://github.com/AY2223S1-CS2103T-W09-1/tp/pull/42))","lastModifiedDate":"2022-11-02"},{"lineNumber":85,"author":{"gitId":"Samsation"},"content":"    * Added implementation details for the Commands `Edit`, `Increase`, `Decrease`","lastModifiedDate":"2022-11-02"},{"lineNumber":86,"author":{"gitId":"Samsation"},"content":"      (Pull Requests [#115](https://github.com/AY2223S1-CS2103T-W09-1/tp/pull/115), [#140](https://github.com/AY2223S1-CS2103T-W09-1/tp/pull/140/files))","lastModifiedDate":"2022-11-02"},{"lineNumber":87,"author":{"gitId":"Samsation"},"content":"    * Updated and added UML diagrams for `Edit` Command","lastModifiedDate":"2022-11-02"},{"lineNumber":88,"author":{"gitId":"Samsation"},"content":"      (Pull Request [#115](https://github.com/AY2223S1-CS2103T-W09-1/tp/pull/115))","lastModifiedDate":"2022-11-02"},{"lineNumber":89,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":90,"author":{"gitId":"Samsation"},"content":"* **Community**:","lastModifiedDate":"2022-11-02"},{"lineNumber":91,"author":{"gitId":"Samsation"},"content":"  * Reported [bugs](https://github.com/Samsation/ped/issues) for another team","lastModifiedDate":"2022-11-02"},{"lineNumber":92,"author":{"gitId":"Samsation"},"content":"  * PRs reviewed (with non-trivial comments): [#114](https://github.com/AY2223S1-CS2103T-W09-1/tp/pull/114), [#136](https://github.com/AY2223S1-CS2103T-W09-1/tp/pull/136)","lastModifiedDate":"2022-11-02"},{"lineNumber":93,"author":{"gitId":"Samsation"},"content":"  ","lastModifiedDate":"2022-09-18"}],"authorContributionMap":{"Samsation":93}},{"path":"docs/team/tanwencong.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"---","lastModifiedDate":"2022-09-24"},{"lineNumber":2,"author":{"gitId":"TanWenCong"},"content":"layout: page","lastModifiedDate":"2022-09-24"},{"lineNumber":3,"author":{"gitId":"TanWenCong"},"content":"title: Tan Wen Cong\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-24"},{"lineNumber":4,"author":{"gitId":"TanWenCong"},"content":"---","lastModifiedDate":"2022-09-24"},{"lineNumber":5,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":6,"author":{"gitId":"TanWenCong"},"content":"### Project: bobaBot","lastModifiedDate":"2022-09-24"},{"lineNumber":7,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":8,"author":{"gitId":"TanWenCong"},"content":"bobaBot is a desktop application for managing customers’ membership details. It is optimized for Command Line","lastModifiedDate":"2022-09-24"},{"lineNumber":9,"author":{"gitId":"TanWenCong"},"content":"Interface (CLI) while retaining some benefits of the Graphical User Interface (GUI). If you are a cashier working at a","lastModifiedDate":"2022-09-24"},{"lineNumber":10,"author":{"gitId":"TanWenCong"},"content":"bubble tea shop and can type fast, bobaBot can help you easily find and manage your customers’ membership information as","lastModifiedDate":"2022-09-24"},{"lineNumber":11,"author":{"gitId":"TanWenCong"},"content":"compared to other GUI applications.","lastModifiedDate":"2022-09-24"},{"lineNumber":12,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":13,"author":{"gitId":"TanWenCong"},"content":"bobaBot contains a database of customers’ information and supports operations to add, update, delete and even find","lastModifiedDate":"2022-09-24"},{"lineNumber":14,"author":{"gitId":"TanWenCong"},"content":"customers based on various inputs. Every entry in the database contains the customer\u0027s name, phone number, email","lastModifiedDate":"2022-09-24"},{"lineNumber":15,"author":{"gitId":"TanWenCong"},"content":"address, birthday month, reward points and membership tags.","lastModifiedDate":"2022-11-02"},{"lineNumber":16,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":17,"author":{"gitId":"TanWenCong"},"content":"bobaBot is written in Java and has about 13k LoC.","lastModifiedDate":"2022-11-02"},{"lineNumber":18,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":19,"author":{"gitId":"TanWenCong"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-24"},{"lineNumber":20,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":21,"author":{"gitId":"TanWenCong"},"content":"* **New Feature**: Added BirthdayMonth class to model a customer\u0027s birthday month. [PR #136](https://github.com/AY2223S1-CS2103T-W09-1/tp/pull/136/files) ","lastModifiedDate":"2022-11-02"},{"lineNumber":22,"author":{"gitId":"TanWenCong"},"content":"  * What it does: Tracks customers\u0027 birthday months to provide them timely birthday promotions.","lastModifiedDate":"2022-11-02"},{"lineNumber":23,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":24,"author":{"gitId":"TanWenCong"},"content":"* **New Feature**: Added emoji to be displayed in CustomerCard in GUI [PR #144](https://github.com/AY2223S1-CS2103T-W09-1/tp/pull/144/files)","lastModifiedDate":"2022-11-02"},{"lineNumber":25,"author":{"gitId":"TanWenCong"},"content":"  * Credits: Reused from [stackoverflow](https://stackoverflow.com/questions/22872484/javafx-how-can-i-display-emoji)","lastModifiedDate":"2022-11-02"},{"lineNumber":26,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":27,"author":{"gitId":"TanWenCong"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dtanwencong\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2022-09-16\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dTanWenCong\u0026tabRepo\u003dAY2223S1-CS2103T-W09-1%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse)","lastModifiedDate":"2022-11-02"},{"lineNumber":28,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":29,"author":{"gitId":"TanWenCong"},"content":"* **Project management**:","lastModifiedDate":"2022-09-24"},{"lineNumber":30,"author":{"gitId":"TanWenCong"},"content":"  * Refactor addressbook to bobaBot [PR #155](https://github.com/AY2223S1-CS2103T-W09-1/tp/pull/155/files)","lastModifiedDate":"2022-11-02"},{"lineNumber":31,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":32,"author":{"gitId":"TanWenCong"},"content":"* **Enhancement to existing features**: Update Customer (formerly Person) class to be uniquely identified by phone number and email address [PR #66](https://github.com/AY2223S1-CS2103T-W09-1/tp/pull/66)","lastModifiedDate":"2022-11-02"},{"lineNumber":33,"author":{"gitId":"TanWenCong"},"content":"  * Justification: Allows different customers with same names to be added into database. (e.g. Alex, Benjamin...)","lastModifiedDate":"2022-11-02"},{"lineNumber":34,"author":{"gitId":"TanWenCong"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in the future that needs to","lastModifiedDate":"2022-11-02"},{"lineNumber":35,"author":{"gitId":"TanWenCong"},"content":"    identify customers. It required analysis of robustness and trade-offs with other design alternatives.","lastModifiedDate":"2022-11-02"},{"lineNumber":36,"author":{"gitId":"TanWenCong"},"content":"  ","lastModifiedDate":"2022-09-24"},{"lineNumber":37,"author":{"gitId":"TanWenCong"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-24"},{"lineNumber":38,"author":{"gitId":"TanWenCong"},"content":"  * User Guide:","lastModifiedDate":"2022-11-02"},{"lineNumber":39,"author":{"gitId":"TanWenCong"},"content":"    * Added documentation for the `add` feature. [PR #145](https://github.com/AY2223S1-CS2103T-W09-1/tp/pull/145/files)","lastModifiedDate":"2022-11-02"},{"lineNumber":40,"author":{"gitId":"TanWenCong"},"content":"  * Developer Guide:","lastModifiedDate":"2022-11-02"},{"lineNumber":41,"author":{"gitId":"TanWenCong"},"content":"    * Added Activity and Sequence diagrams for the `add` feature. [PR #117](https://github.com/AY2223S1-CS2103T-W09-1/tp/pull/117/files)","lastModifiedDate":"2022-11-02"},{"lineNumber":42,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":43,"author":{"gitId":"TanWenCong"},"content":"* **Community**:","lastModifiedDate":"2022-09-24"},{"lineNumber":44,"author":{"gitId":"TanWenCong"},"content":"  * Reported bugs for other teams ([#1 - #5](https://github.com/TanWenCong/ped/issues))","lastModifiedDate":"2022-11-02"},{"lineNumber":45,"author":{"gitId":"TanWenCong"},"content":"  ","lastModifiedDate":"2022-09-24"}],"authorContributionMap":{"TanWenCong":45}},{"path":"docs/team/wuhaohui1231.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"WuHaohui1231"},"content":"---","lastModifiedDate":"2022-09-17"},{"lineNumber":2,"author":{"gitId":"WuHaohui1231"},"content":"layout: page","lastModifiedDate":"2022-09-17"},{"lineNumber":3,"author":{"gitId":"WuHaohui1231"},"content":"title: Wu Haohui\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-17"},{"lineNumber":4,"author":{"gitId":"WuHaohui1231"},"content":"---","lastModifiedDate":"2022-09-17"},{"lineNumber":5,"author":{"gitId":"WuHaohui1231"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":6,"author":{"gitId":"WuHaohui1231"},"content":"### Project: bobaBot","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"WuHaohui1231"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"WuHaohui1231"},"content":"bobaBot is a desktop application for managing customers’ membership details. It is optimized for Command Line Interface (CLI) while retaining some benefits of the Graphical User Interface (GUI). If you are a cashier working at a bubble tea shop and can type fast, bobaBot can help you easily find and manage your customers’ membership information as compared to other GUI applications.","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"WuHaohui1231"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"WuHaohui1231"},"content":"bobaBot contains a database of customers’ information and supports operations to add, update, delete and even find customers based on various inputs. Every entry in the database contains the customer\u0027s name, phone number, email address, reward points/vouchers [to be added later] and …","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"WuHaohui1231"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"WuHaohui1231"},"content":"More details to be added","lastModifiedDate":"2022-09-29"},{"lineNumber":13,"author":{"gitId":"WuHaohui1231"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":14,"author":{"gitId":"WuHaohui1231"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-29"},{"lineNumber":15,"author":{"gitId":"WuHaohui1231"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":16,"author":{"gitId":"WuHaohui1231"},"content":"* **New Feature**:","lastModifiedDate":"2022-09-29"},{"lineNumber":17,"author":{"gitId":"WuHaohui1231"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":18,"author":{"gitId":"WuHaohui1231"},"content":"* **Code contributed**: [RepoSense link](insert link here)","lastModifiedDate":"2022-09-29"},{"lineNumber":19,"author":{"gitId":"WuHaohui1231"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":20,"author":{"gitId":"WuHaohui1231"},"content":"* **Project management**:","lastModifiedDate":"2022-09-29"},{"lineNumber":21,"author":{"gitId":"WuHaohui1231"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":22,"author":{"gitId":"WuHaohui1231"},"content":"* **Enhancement to existing features**:","lastModifiedDate":"2022-09-29"},{"lineNumber":23,"author":{"gitId":"WuHaohui1231"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":24,"author":{"gitId":"WuHaohui1231"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-29"},{"lineNumber":25,"author":{"gitId":"WuHaohui1231"},"content":"  * Command summary in UG","lastModifiedDate":"2022-09-29"},{"lineNumber":26,"author":{"gitId":"WuHaohui1231"},"content":"  * NFRs in DG","lastModifiedDate":"2022-09-29"},{"lineNumber":27,"author":{"gitId":"WuHaohui1231"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":28,"author":{"gitId":"WuHaohui1231"},"content":"* **Community**:","lastModifiedDate":"2022-09-29"},{"lineNumber":29,"author":{"gitId":"WuHaohui1231"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":30,"author":{"gitId":"WuHaohui1231"},"content":"* **Tools**:","lastModifiedDate":"2022-09-29"},{"lineNumber":31,"author":{"gitId":"WuHaohui1231"},"content":"  * IntelliJ","lastModifiedDate":"2022-09-29"},{"lineNumber":32,"author":{"gitId":"WuHaohui1231"},"content":"  * Git","lastModifiedDate":"2022-09-29"},{"lineNumber":33,"author":{"gitId":"WuHaohui1231"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":34,"author":{"gitId":"WuHaohui1231"},"content":"{Add/Remove categories in the list above in the future}","lastModifiedDate":"2022-09-29"},{"lineNumber":35,"author":{"gitId":"WuHaohui1231"},"content":"","lastModifiedDate":"2022-09-29"}],"authorContributionMap":{"WuHaohui1231":35}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.logic.commands;","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"albertZhangTJ"},"content":"import seedu.boba.model.BobaBotModell.Model;","lastModifiedDate":"2022-10-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"Samsation"},"content":" * Changes the remark of an existing customer in the address book.","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"albertZhangTJ"},"content":"    public CommandResult execute(Model bobaBotModel) {","lastModifiedDate":"2022-10-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"Samsation"},"content":"            + \": Edits the remark of the customer identified \"","lastModifiedDate":"2022-10-26"},{"lineNumber":69,"author":{"gitId":"Samsation"},"content":"            + \"by the index number used in the last customer listing. \"","lastModifiedDate":"2022-10-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"albertZhangTJ"},"content":"    public CommandResult execute(Model bobaBotModel) throws CommandException {","lastModifiedDate":"2022-10-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"Samsation"},"content":"     * @param index of the customer in the filtered customer list to edit the remark","lastModifiedDate":"2022-10-26"},{"lineNumber":105,"author":{"gitId":"Samsation"},"content":"     * @param remark of the customer to be updated to","lastModifiedDate":"2022-10-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"albertZhangTJ"},"content":"    public CommandResult execute(Model bobaBotModel) throws CommandException {","lastModifiedDate":"2022-10-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"TanWenCong"},"content":"Create a `RemarkCommandParser` class in the `seedu.boba.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2022-10-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"albertZhangTJ"},"content":"## Add `Remark` to the bobaBotModel","lastModifiedDate":"2022-10-31"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"albertZhangTJ"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of customer data. We achieve that by working with the `Person` bobaBotModel. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the customer’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a customer.","lastModifiedDate":"2022-10-31"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"albertZhangTJ"},"content":"Create a new `Remark` in `seedu.boba.bobaBotModel.customer`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2022-10-31"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":235,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"Samsation"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each customer.","lastModifiedDate":"2022-10-26"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"TanWenCong"},"content":"Simply add the following to [`seedu.boba.ui.CustomerCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2022-10-27"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-01-02"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"Samsation"},"content":"public PersonCard(Person customer, int displayedIndex) {","lastModifiedDate":"2022-10-26"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"Samsation"},"content":"    remark.setText(customer.getRemark().value);","lastModifiedDate":"2022-10-26"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"albertZhangTJ"},"content":"    public CommandResult execute(Model bobaBotModel) throws CommandException {","lastModifiedDate":"2022-10-31"},{"lineNumber":340,"author":{"gitId":"albertZhangTJ"},"content":"        List\u003cPerson\u003e lastShownList \u003d bobaBotModel.getFilteredPersonList();","lastModifiedDate":"2022-10-31"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"Samsation"},"content":"        Person customerToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-10-26"},{"lineNumber":347,"author":{"gitId":"Samsation"},"content":"        Person editedCustomer \u003d new Person(","lastModifiedDate":"2022-10-26"},{"lineNumber":348,"author":{"gitId":"Samsation"},"content":"                customerToEdit.getName(), customerToEdit.getPhone(), customerToEdit.getEmail(),","lastModifiedDate":"2022-10-26"},{"lineNumber":349,"author":{"gitId":"Samsation"},"content":"                customerToEdit.getAddress(), remark, customerToEdit.getTags());","lastModifiedDate":"2022-10-26"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"albertZhangTJ"},"content":"        bobaBotModel.setPerson(customerToEdit, editedCustomer);","lastModifiedDate":"2022-10-31"},{"lineNumber":352,"author":{"gitId":"albertZhangTJ"},"content":"        bobaBotModel.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-10-31"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"Samsation"},"content":"        return new CommandResult(generateSuccessMessage(editedCustomer));","lastModifiedDate":"2022-10-26"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"Samsation"},"content":"     * {@code customerToEdit}.","lastModifiedDate":"2022-10-26"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"Samsation"},"content":"    private String generateSuccessMessage(Person customerToEdit) {","lastModifiedDate":"2022-10-26"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"Samsation"},"content":"        return String.format(message, customerToEdit);","lastModifiedDate":"2022-10-26"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":378,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"Samsation":16,"TanWenCong":4,"albertZhangTJ":11,"-":370}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Person` class.","lastModifiedDate":"2021-08-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"albertZhangTJ"},"content":"The `address` field in `Person` is actually an instance of the `seedu.boba.bobaBotModel.customer.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2022-10-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2021-08-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Let’s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"1. Safe delete the field `address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**`invalidPersonAddressBook.json`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"Samsation"},"content":"  \"customers\": [ {","lastModifiedDate":"2022-10-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Samsation":1,"albertZhangTJ":1,"-":110}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"TanWenCong"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `seedu.boba.logic.Logic`.","lastModifiedDate":"2022-10-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"TanWenCong"},"content":"A quick look at the `seedu.boba.logic.Logic` (an extract given below) confirms that this indeed might be what we’re looking for.","lastModifiedDate":"2022-10-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"albertZhangTJ"},"content":"        commandResult \u003d command.execute(bobaBotModel);","lastModifiedDate":"2022-10-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"albertZhangTJ"},"content":"            //We can deduce that the previous line of code modifies bobaBotModel in some way","lastModifiedDate":"2022-10-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"albertZhangTJ"},"content":"            storage.saveAddressBook(bobaBotModel.getAddressBook());","lastModifiedDate":"2022-10-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `AddressBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"albertZhangTJ"},"content":"   public CommandResult execute(Model bobaBotModel) throws CommandException {","lastModifiedDate":"2022-10-31"},{"lineNumber":191,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"Samsation"},"content":"       Person customerToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-10-26"},{"lineNumber":193,"author":{"gitId":"Samsation"},"content":"       Person editedCustomer \u003d createEditedPerson(customerToEdit, editPersonDescriptor);","lastModifiedDate":"2022-10-26"},{"lineNumber":194,"author":{"gitId":"albertZhangTJ"},"content":"       if (!customerToEdit.isSamePerson(editedCustomer) \u0026\u0026 bobaBotModel.hasPerson(editedCustomer)) {","lastModifiedDate":"2022-10-31"},{"lineNumber":195,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"albertZhangTJ"},"content":"       bobaBotModel.setPerson(customerToEdit, editedCustomer);","lastModifiedDate":"2022-10-31"},{"lineNumber":198,"author":{"gitId":"albertZhangTJ"},"content":"       bobaBotModel.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-10-31"},{"lineNumber":199,"author":{"gitId":"Samsation"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedCustomer));","lastModifiedDate":"2022-10-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"albertZhangTJ"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `bobaBotModel` object. Specifically,","lastModifiedDate":"2022-10-31"},{"lineNumber":204,"author":{"gitId":"Samsation"},"content":"   * it uses the `setPerson()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the customer data.","lastModifiedDate":"2022-10-26"},{"lineNumber":205,"author":{"gitId":"Samsation"},"content":"   * it uses the `updateFilteredPersonList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ customers.\u003cbr\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":206,"author":{"gitId":"Samsation"},"content":"     FYI, The \u0027filtered list\u0027 is the list of customers resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the customers so that the user can see the edited customer along with all other customers. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":207,"author":{"gitId":"Samsation"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of customers is being tracked.","lastModifiedDate":"2022-10-26"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     \u003cimg src\u003d\"../images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":209,"author":{"gitId":"albertZhangTJ"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#bobaBotModel-component)","lastModifiedDate":"2022-10-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"../images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":220,"author":{"gitId":"albertZhangTJ"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** When trying to step into a statement such as `storage.saveAddressBook(bobaBotModel.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2022-10-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"1.  As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonAddressBook#saveAddressBook()` method which calls the `JsonSerializableAddressBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook` constructor:**","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"Samsation"},"content":"        customers.addAll(","lastModifiedDate":"2022-10-26"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                  .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    5.  Add a new field to `Person`","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Samsation":8,"TanWenCong":2,"albertZhangTJ":10,"-":281}},{"path":"src/main/java/seedu/boba/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.commons.core.LogsCenter;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.commons.util.FileUtil;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AppParameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return appParameters;","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return Objects.equals(getConfigPath(), otherAppParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return configPath.hashCode();","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"TanWenCong":3,"-":62}},{"path":"src/main/java/seedu/boba/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"TanWenCong":1,"-":24}},{"path":"src/main/java/seedu/boba/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.commons.core.Config;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.commons.core.LogsCenter;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.commons.core.Version;","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.commons.util.ConfigUtil;","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.commons.util.StringUtil;","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.logic.Logic;","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.logic.LogicManager;","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"albertZhangTJ"},"content":"import seedu.boba.model.BobaBot;","lastModifiedDate":"2022-10-31"},{"lineNumber":19,"author":{"gitId":"albertZhangTJ"},"content":"import seedu.boba.model.BobaBotModel;","lastModifiedDate":"2022-10-31"},{"lineNumber":20,"author":{"gitId":"albertZhangTJ"},"content":"import seedu.boba.model.BobaBotModelManager;","lastModifiedDate":"2022-10-31"},{"lineNumber":21,"author":{"gitId":"albertZhangTJ"},"content":"import seedu.boba.model.ReadOnlyBobaBot;","lastModifiedDate":"2022-10-31"},{"lineNumber":22,"author":{"gitId":"albertZhangTJ"},"content":"import seedu.boba.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-31"},{"lineNumber":23,"author":{"gitId":"albertZhangTJ"},"content":"import seedu.boba.model.UserPrefs;","lastModifiedDate":"2022-10-31"},{"lineNumber":24,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.util.SampleDataUtil;","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.storage.BobaBotStorage;","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.storage.JsonBobaBotStorage;","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.storage.JsonUserPrefsStorage;","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.storage.Storage;","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.storage.StorageManager;","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.storage.UserPrefsStorage;","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.ui.Ui;","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.ui.UiManager;","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 0, true);","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"albertZhangTJ"},"content":"    protected BobaBotModel bobaBotModel;","lastModifiedDate":"2022-10-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"TanWenCong"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing BobaBot ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-10-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"TanWenCong"},"content":"        BobaBotStorage bobaBotStorage \u003d new JsonBobaBotStorage(userPrefs.getBobaBotFilePath());","lastModifiedDate":"2022-10-27"},{"lineNumber":60,"author":{"gitId":"TanWenCong"},"content":"        storage \u003d new StorageManager(bobaBotStorage, userPrefsStorage);","lastModifiedDate":"2022-10-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"albertZhangTJ"},"content":"        bobaBotModel \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2022-10-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"albertZhangTJ"},"content":"        logic \u003d new LogicManager(bobaBotModel, storage);","lastModifiedDate":"2022-10-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"albertZhangTJ"},"content":"     * Returns a {@code BobaBotModelManager} with the data","lastModifiedDate":"2022-10-31"},{"lineNumber":73,"author":{"gitId":"albertZhangTJ"},"content":"     * from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":77,"author":{"gitId":"albertZhangTJ"},"content":"    private BobaBotModel initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2022-10-31"},{"lineNumber":78,"author":{"gitId":"TanWenCong"},"content":"        Optional\u003cReadOnlyBobaBot\u003e addressBookOptional;","lastModifiedDate":"2022-10-27"},{"lineNumber":79,"author":{"gitId":"TanWenCong"},"content":"        ReadOnlyBobaBot initialData;","lastModifiedDate":"2022-10-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"TanWenCong"},"content":"            addressBookOptional \u003d storage.readBobaBot();","lastModifiedDate":"2022-10-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"TanWenCong"},"content":"                logger.info(\"Data file not found. Will be starting with a sample BobaBot\");","lastModifiedDate":"2022-10-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"TanWenCong"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleBobaBot);","lastModifiedDate":"2022-10-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"TanWenCong"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty BobaBot\");","lastModifiedDate":"2022-10-27"},{"lineNumber":88,"author":{"gitId":"TanWenCong"},"content":"            initialData \u003d new BobaBot();","lastModifiedDate":"2022-10-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":90,"author":{"gitId":"TanWenCong"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty BobaBot\");","lastModifiedDate":"2022-10-27"},{"lineNumber":91,"author":{"gitId":"TanWenCong"},"content":"            initialData \u003d new BobaBot();","lastModifiedDate":"2022-10-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"albertZhangTJ"},"content":"        return new BobaBotModelManager(initialData, userPrefs);","lastModifiedDate":"2022-10-31"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"TanWenCong"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty BobaBot\");","lastModifiedDate":"2022-10-27"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"TanWenCong"},"content":"        logger.info(\"Starting BobaBot \" + MainApp.VERSION);","lastModifiedDate":"2022-10-27"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":179,"author":{"gitId":"albertZhangTJ"},"content":"            storage.saveUserPrefs(bobaBotModel.getUserPrefs());","lastModifiedDate":"2022-10-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"TanWenCong":32,"albertZhangTJ":14,"-":138}},{"path":"src/main/java/seedu/boba/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.commons.core;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config o \u003d (Config) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, o.logLevel)","lastModifiedDate":"2018-12-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, o.userPrefsFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2018-12-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        sb.append(\"Current log level : \" + logLevel);","lastModifiedDate":"2018-12-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        sb.append(\"\\nPreference file Location : \" + userPrefsFilePath);","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"TanWenCong":1,"-":62}},{"path":"src/main/java/seedu/boba/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.commons.core;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_HEIGHT \u003d 600;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_WIDTH \u003d 740;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings o \u003d (GuiSettings) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d o.windowWidth","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d o.windowHeight","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        sb.append(\"Width : \" + windowWidth + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        sb.append(\"Height : \" + windowHeight + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        sb.append(\"Position : \" + windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"TanWenCong":1,"-":78}},{"path":"src/main/java/seedu/boba/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.commons.core;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String LOG_FILE \u003d \"addressbook.log\";","lastModifiedDate":"2016-09-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"TanWenCong":1,"-":111}},{"path":"src/main/java/seedu/boba/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.commons.core;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"bensohh"},"content":"    public static final String MESSAGE_NO_UNIQUE_PREFIX_IDENTIFIER \u003d","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"bensohh"},"content":"            \"Please use ONLY ONE phone or email as identifier \\n%1$s\";","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"bensohh"},"content":"    public static final String MESSAGE_BOTH_EMAIL_AND_PHONE \u003d","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"bensohh"},"content":"            \"Please use only EMAIL or PHONE as identifier, NOT BOTH! \\n%1$s\";","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"bensohh"},"content":"    public static final String MESSAGE_EMPTY_EMAIL_AND_PHONE \u003d \"No EMAIL or PHONE identifier found in command! \\n%1$s\";","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"bensohh"},"content":"    public static final String MESSAGE_INVALID_PERSON_INFORMATION \u003d \"No customer matching input details!\";","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"TanWenCong":1,"bensohh":6,"-":11}},{"path":"src/main/java/seedu/boba/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.commons.core;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Version)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Version other \u003d (Version) obj;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return compareTo(other) \u003d\u003d 0;","lastModifiedDate":"2018-08-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"TanWenCong":1,"-":115}},{"path":"src/main/java/seedu/boba/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.commons.core.index;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof Index // instanceof handles nulls","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"TanWenCong":1,"-":53}},{"path":"src/main/java/seedu/boba/commons/exceptions/DataConversionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.commons.exceptions;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error during conversion of data from one format to another","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class DataConversionException extends Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public DataConversionException(Exception cause) {","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(cause);","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"TanWenCong":1,"-":10}},{"path":"src/main/java/seedu/boba/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.commons.exceptions;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param cause of the main exception","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"TanWenCong":1,"-":20}},{"path":"src/main/java/seedu/boba/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.commons.util;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.MainApp;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A container for App specific utility functions","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2020-05-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"TanWenCong":2,"-":40}},{"path":"src/main/java/seedu/boba/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.commons.util;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** @see #requireAllNonNull(Collection) */","lastModifiedDate":"2017-05-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"TanWenCong":1,"-":34}},{"path":"src/main/java/seedu/boba/commons/util/ConfigUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.commons.util;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.commons.core.Config;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A class for accessing the Config File.","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ConfigUtil {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(configFilePath, Config.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void saveConfig(Config config, Path configFilePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(config, configFilePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"TanWenCong":3,"-":20}},{"path":"src/main/java/seedu/boba/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.commons.util;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"TanWenCong":1,"-":82}},{"path":"src/main/java/seedu/boba/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.commons.util;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.commons.core.LogsCenter;","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the Json object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2016-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid json file.","lastModifiedDate":"2016-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize Json file has to correspond to the structure in the class given here.","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            logger.info(\"Json file \" + filePath + \" not found\");","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new DataConversionException(e);","lastModifiedDate":"2016-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"TanWenCong":3,"-":140}},{"path":"src/main/java/seedu/boba/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.commons.util;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"TanWenCong":2,"-":66}},{"path":"src/main/java/seedu/boba/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.logic;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"albertZhangTJ"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-31"},{"lineNumber":4,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"bensohh"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.commons.core.GuiSettings;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.logic.commands.CommandResult;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"albertZhangTJ"},"content":"import seedu.boba.model.BobaBotModel;","lastModifiedDate":"2022-10-31"},{"lineNumber":12,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.ReadOnlyBobaBot;","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Customer;","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"TanWenCong"},"content":"     * Returns the BobaBot.","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"albertZhangTJ"},"content":"     * @see BobaBotModel#getBobaBot()","lastModifiedDate":"2022-10-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"TanWenCong"},"content":"    ReadOnlyBobaBot getBobaBot();","lastModifiedDate":"2022-10-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":35,"author":{"gitId":"albertZhangTJ"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2022-10-31"},{"lineNumber":36,"author":{"gitId":"Samsation"},"content":"    ObservableList\u003cCustomer\u003e getFilteredPersonList();","lastModifiedDate":"2022-10-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":38,"author":{"gitId":"albertZhangTJ"},"content":"    /** Returns an unmodifiable view of the list of promotion images*/","lastModifiedDate":"2022-10-31"},{"lineNumber":39,"author":{"gitId":"bensohh"},"content":"    ObservableList\u003cImage\u003e getPromotionList();","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":41,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-11-01"},{"lineNumber":42,"author":{"gitId":"bensohh"},"content":"     * Parses all the image files stored in the folder indicated by the filepath.","lastModifiedDate":"2022-11-01"},{"lineNumber":43,"author":{"gitId":"bensohh"},"content":"     *","lastModifiedDate":"2022-11-01"},{"lineNumber":44,"author":{"gitId":"bensohh"},"content":"     * @param filePath String representation of the FilePath of the folder containing the promotion images","lastModifiedDate":"2022-11-01"},{"lineNumber":45,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-11-01"},{"lineNumber":46,"author":{"gitId":"bensohh"},"content":"    void parseAllPromotion(String filePath);","lastModifiedDate":"2022-10-27"},{"lineNumber":47,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"TanWenCong"},"content":"    Path getBobaBotFilePath();","lastModifiedDate":"2022-10-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"Samsation":1,"TanWenCong":10,"bensohh":10,"albertZhangTJ":6,"-":35}},{"path":"src/main/java/seedu/boba/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.logic;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"albertZhangTJ"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-31"},{"lineNumber":4,"author":{"gitId":"albertZhangTJ"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-31"},{"lineNumber":5,"author":{"gitId":"albertZhangTJ"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-31"},{"lineNumber":6,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"bensohh"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.commons.core.GuiSettings;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.commons.core.LogsCenter;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.logic.commands.Command;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.logic.commands.CommandResult;","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.logic.parser.BobaBotParser;","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"albertZhangTJ"},"content":"import seedu.boba.model.BobaBotModel;","lastModifiedDate":"2022-10-31"},{"lineNumber":17,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.ReadOnlyBobaBot;","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Customer;","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.storage.Storage;","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"albertZhangTJ"},"content":"    private final BobaBotModel bobaBotModel;","lastModifiedDate":"2022-10-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"TanWenCong"},"content":"    private final BobaBotParser bobaBotParser;","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"albertZhangTJ"},"content":"     * Constructs a {@code LogicManager} with the given {@code BobaBotModel} and {@code Storage}.","lastModifiedDate":"2022-10-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"albertZhangTJ"},"content":"    public LogicManager(BobaBotModel bobaBotModel, Storage storage) {","lastModifiedDate":"2022-10-31"},{"lineNumber":36,"author":{"gitId":"albertZhangTJ"},"content":"        this.bobaBotModel \u003d bobaBotModel;","lastModifiedDate":"2022-10-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"TanWenCong"},"content":"        bobaBotParser \u003d new BobaBotParser();","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"TanWenCong"},"content":"        Command command \u003d bobaBotParser.parseCommand(commandText);","lastModifiedDate":"2022-10-27"},{"lineNumber":47,"author":{"gitId":"albertZhangTJ"},"content":"        commandResult \u003d command.execute(bobaBotModel);","lastModifiedDate":"2022-10-31"},{"lineNumber":48,"author":{"gitId":"bensohh"},"content":"        if (!(commandResult.isRedo() || commandResult.isUndo())) {","lastModifiedDate":"2022-10-25"},{"lineNumber":49,"author":{"gitId":"albertZhangTJ"},"content":"            bobaBotModel.commitBobaBot();","lastModifiedDate":"2022-10-31"},{"lineNumber":50,"author":{"gitId":"bensohh"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"albertZhangTJ"},"content":"            storage.saveBobaBot(bobaBotModel.getBobaBot());","lastModifiedDate":"2022-10-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"TanWenCong"},"content":"    public ReadOnlyBobaBot getBobaBot() {","lastModifiedDate":"2022-10-27"},{"lineNumber":63,"author":{"gitId":"albertZhangTJ"},"content":"        return bobaBotModel.getBobaBot();","lastModifiedDate":"2022-10-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"Samsation"},"content":"    public ObservableList\u003cCustomer\u003e getFilteredPersonList() {","lastModifiedDate":"2022-10-26"},{"lineNumber":68,"author":{"gitId":"albertZhangTJ"},"content":"        return bobaBotModel.getFilteredPersonList();","lastModifiedDate":"2022-10-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":71,"author":{"gitId":"bensohh"},"content":"    /** Returns an unmodifiable view of the list of promotion images*/","lastModifiedDate":"2022-11-01"},{"lineNumber":72,"author":{"gitId":"bensohh"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":73,"author":{"gitId":"bensohh"},"content":"    public ObservableList\u003cImage\u003e getPromotionList() {","lastModifiedDate":"2022-10-27"},{"lineNumber":74,"author":{"gitId":"albertZhangTJ"},"content":"        return bobaBotModel.getPromotionList();","lastModifiedDate":"2022-10-31"},{"lineNumber":75,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":76,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":77,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-11-01"},{"lineNumber":78,"author":{"gitId":"bensohh"},"content":"     * Parses all the image files stored in the folder indicated by the filepath.","lastModifiedDate":"2022-11-01"},{"lineNumber":79,"author":{"gitId":"bensohh"},"content":"     *","lastModifiedDate":"2022-11-01"},{"lineNumber":80,"author":{"gitId":"bensohh"},"content":"     * @param filePath String representation of the FilePath of the folder containing the promotion images","lastModifiedDate":"2022-11-01"},{"lineNumber":81,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-11-01"},{"lineNumber":82,"author":{"gitId":"bensohh"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":83,"author":{"gitId":"bensohh"},"content":"    public void parseAllPromotion(String filePath) {","lastModifiedDate":"2022-10-27"},{"lineNumber":84,"author":{"gitId":"albertZhangTJ"},"content":"        bobaBotModel.parseAllPromotion(filePath);","lastModifiedDate":"2022-10-31"},{"lineNumber":85,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":86,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"TanWenCong"},"content":"    public Path getBobaBotFilePath() {","lastModifiedDate":"2022-10-27"},{"lineNumber":89,"author":{"gitId":"albertZhangTJ"},"content":"        return bobaBotModel.getBobaBotFilePath();","lastModifiedDate":"2022-10-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"albertZhangTJ"},"content":"        return bobaBotModel.getGuiSettings();","lastModifiedDate":"2022-10-31"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"albertZhangTJ"},"content":"        bobaBotModel.setGuiSettings(guiSettings);","lastModifiedDate":"2022-10-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Samsation":1,"TanWenCong":16,"bensohh":17,"albertZhangTJ":19,"-":48}},{"path":"src/main/java/seedu/boba/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.logic.commands;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.parser.CliSyntax.PREFIX_BIRTHDAY_MONTH;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.parser.CliSyntax.PREFIX_REWARD;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"Samsation"},"content":"import static seedu.boba.model.customer.Customer.BIRTHDAY_TAG;","lastModifiedDate":"2022-10-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"albertZhangTJ"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-31"},{"lineNumber":13,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":14,"author":{"gitId":"albertZhangTJ"},"content":"import seedu.boba.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-31"},{"lineNumber":15,"author":{"gitId":"albertZhangTJ"},"content":"import seedu.boba.model.BobaBotModel;","lastModifiedDate":"2022-10-31"},{"lineNumber":16,"author":{"gitId":"albertZhangTJ"},"content":"import seedu.boba.model.customer.Customer;","lastModifiedDate":"2022-10-31"},{"lineNumber":17,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"TanWenCong"},"content":" * Adds a customer to bobaBot.","lastModifiedDate":"2022-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"TanWenCong"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a customer to bobaBot. \"","lastModifiedDate":"2022-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":30,"author":{"gitId":"TanWenCong"},"content":"            + PREFIX_BIRTHDAY_MONTH + \"BIRTHDAY_MONTH \"","lastModifiedDate":"2022-10-24"},{"lineNumber":31,"author":{"gitId":"TanWenCong"},"content":"            + PREFIX_REWARD + \"REWARD \"","lastModifiedDate":"2022-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"TanWenCong"},"content":"            + PREFIX_BIRTHDAY_MONTH + \"1 \"","lastModifiedDate":"2022-10-24"},{"lineNumber":38,"author":{"gitId":"TanWenCong"},"content":"            + PREFIX_REWARD + \"5000 \"","lastModifiedDate":"2022-09-25"},{"lineNumber":39,"author":{"gitId":"TanWenCong"},"content":"            + PREFIX_TAG + \"GOLD \"","lastModifiedDate":"2022-09-25"},{"lineNumber":40,"author":{"gitId":"TanWenCong"},"content":"            + PREFIX_TAG + \"MEMBER\";","lastModifiedDate":"2022-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"TanWenCong"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New customer added: %1$s\";","lastModifiedDate":"2022-09-25"},{"lineNumber":43,"author":{"gitId":"TanWenCong"},"content":"    public static final String MESSAGE_DUPLICATE_CUSTOMER \u003d \"This customer already exists in bobaBot\";","lastModifiedDate":"2022-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"Samsation"},"content":"    private final Customer toAdd;","lastModifiedDate":"2022-10-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"Samsation"},"content":"     * Creates an AddCommand to add the specified {@code Customer}","lastModifiedDate":"2022-10-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"Samsation"},"content":"    public AddCommand(Customer customer) {","lastModifiedDate":"2022-10-26"},{"lineNumber":51,"author":{"gitId":"Samsation"},"content":"        requireNonNull(customer);","lastModifiedDate":"2022-10-26"},{"lineNumber":52,"author":{"gitId":"Samsation"},"content":"        toAdd \u003d customer;","lastModifiedDate":"2022-10-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"albertZhangTJ"},"content":"    public CommandResult execute(BobaBotModel bobaBotModel) throws CommandException {","lastModifiedDate":"2022-10-31"},{"lineNumber":57,"author":{"gitId":"albertZhangTJ"},"content":"        requireNonNull(bobaBotModel);","lastModifiedDate":"2022-10-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"albertZhangTJ"},"content":"        if (bobaBotModel.hasPerson(toAdd)) {","lastModifiedDate":"2022-10-31"},{"lineNumber":60,"author":{"gitId":"TanWenCong"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_CUSTOMER);","lastModifiedDate":"2022-09-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"Samsation"},"content":"        LocalDate currentDate \u003d LocalDate.now();","lastModifiedDate":"2022-10-30"},{"lineNumber":64,"author":{"gitId":"Samsation"},"content":"        String currentMonth \u003d String.valueOf(currentDate.getMonth().getValue());","lastModifiedDate":"2022-10-30"},{"lineNumber":65,"author":{"gitId":"Samsation"},"content":"        if (toAdd.getTags().contains(BIRTHDAY_TAG)","lastModifiedDate":"2022-10-30"},{"lineNumber":66,"author":{"gitId":"Samsation"},"content":"                \u0026\u0026 !toAdd.getBirthdayMonth().value.equals(currentMonth)) {","lastModifiedDate":"2022-10-30"},{"lineNumber":67,"author":{"gitId":"Samsation"},"content":"            toAdd.removeBirthdayTag();","lastModifiedDate":"2022-10-30"},{"lineNumber":68,"author":{"gitId":"Samsation"},"content":"        } else if (!toAdd.getTags().contains(BIRTHDAY_TAG)","lastModifiedDate":"2022-10-30"},{"lineNumber":69,"author":{"gitId":"Samsation"},"content":"                \u0026\u0026 toAdd.getBirthdayMonth().value.equals(currentMonth)) {","lastModifiedDate":"2022-10-30"},{"lineNumber":70,"author":{"gitId":"Samsation"},"content":"            toAdd.addBirthdayTag();","lastModifiedDate":"2022-10-30"},{"lineNumber":71,"author":{"gitId":"Samsation"},"content":"        }","lastModifiedDate":"2022-10-30"},{"lineNumber":72,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":73,"author":{"gitId":"albertZhangTJ"},"content":"        bobaBotModel.addPerson(toAdd);","lastModifiedDate":"2022-10-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Samsation":16,"TanWenCong":18,"albertZhangTJ":10,"-":39}},{"path":"src/main/java/seedu/boba/logic/commands/CalculateCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.logic.commands;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"WuHaohui1231"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"albertZhangTJ"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-31"},{"lineNumber":4,"author":{"gitId":"WuHaohui1231"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"WuHaohui1231"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"WuHaohui1231"},"content":"import java.util.EmptyStackException;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"WuHaohui1231"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"WuHaohui1231"},"content":"import java.util.Map;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"WuHaohui1231"},"content":"import java.util.Stack;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"WuHaohui1231"},"content":"import java.util.logging.Level;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"WuHaohui1231"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"WuHaohui1231"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"albertZhangTJ"},"content":"import seedu.boba.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-31"},{"lineNumber":14,"author":{"gitId":"albertZhangTJ"},"content":"import seedu.boba.model.BobaBotModel;","lastModifiedDate":"2022-10-31"},{"lineNumber":15,"author":{"gitId":"WuHaohui1231"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"WuHaohui1231"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"WuHaohui1231"},"content":"/**","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"WuHaohui1231"},"content":" * A build-in calculator for bobaBot for cashiers to do basic arithmetic","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"WuHaohui1231"},"content":" * calculation including +, -, /, -, with precedence enabled","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"WuHaohui1231"},"content":" * e.g. calc 3*(1+4)/2","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"WuHaohui1231"},"content":" */","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"WuHaohui1231"},"content":"public class CalculateCommand extends Command {","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"WuHaohui1231"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"WuHaohui1231"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"WuHaohui1231"},"content":"     * Command word for calculator.","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"WuHaohui1231"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"WuHaohui1231"},"content":"    public static final String COMMAND_WORD \u003d \"calc\";","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"WuHaohui1231"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"WuHaohui1231"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"WuHaohui1231"},"content":"     * Message for calculator.","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"WuHaohui1231"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"WuHaohui1231"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"WuHaohui1231"},"content":"            + \"Calculate an arithmetic expression\"","lastModifiedDate":"2022-10-27"},{"lineNumber":34,"author":{"gitId":"WuHaohui1231"},"content":"            + \"Example: \" + COMMAND_WORD + \"3 * (1 + 2.4)\";","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"WuHaohui1231"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":36,"author":{"gitId":"WuHaohui1231"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"WuHaohui1231"},"content":"     * Logger to record all the calculations performed","lastModifiedDate":"2022-10-27"},{"lineNumber":38,"author":{"gitId":"WuHaohui1231"},"content":"     * for future checking of bugs","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"WuHaohui1231"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"albertZhangTJ"},"content":"    private static Logger logger \u003d Logger.getLogger(\"Calculation_History\");","lastModifiedDate":"2022-10-31"},{"lineNumber":41,"author":{"gitId":"WuHaohui1231"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":42,"author":{"gitId":"WuHaohui1231"},"content":"    private final String expression;","lastModifiedDate":"2022-10-27"},{"lineNumber":43,"author":{"gitId":"WuHaohui1231"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"WuHaohui1231"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"WuHaohui1231"},"content":"     * Constructor for calculator.","lastModifiedDate":"2022-10-27"},{"lineNumber":46,"author":{"gitId":"WuHaohui1231"},"content":"     * @param exp The arithmetic expression to be computed","lastModifiedDate":"2022-10-27"},{"lineNumber":47,"author":{"gitId":"WuHaohui1231"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":48,"author":{"gitId":"WuHaohui1231"},"content":"    public CalculateCommand(String exp) {","lastModifiedDate":"2022-10-27"},{"lineNumber":49,"author":{"gitId":"WuHaohui1231"},"content":"        this.expression \u003d exp;","lastModifiedDate":"2022-10-27"},{"lineNumber":50,"author":{"gitId":"WuHaohui1231"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":51,"author":{"gitId":"WuHaohui1231"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":52,"author":{"gitId":"albertZhangTJ"},"content":"    public CommandResult execute(BobaBotModel bobaBotModel) throws CommandException {","lastModifiedDate":"2022-10-31"},{"lineNumber":53,"author":{"gitId":"WuHaohui1231"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":54,"author":{"gitId":"albertZhangTJ"},"content":"        requireNonNull(bobaBotModel);","lastModifiedDate":"2022-10-31"},{"lineNumber":55,"author":{"gitId":"WuHaohui1231"},"content":"        String calcResult \u003d","lastModifiedDate":"2022-10-27"},{"lineNumber":56,"author":{"gitId":"WuHaohui1231"},"content":"                ArithmeticExpressionReader.parseCalculation(this.expression);","lastModifiedDate":"2022-10-27"},{"lineNumber":57,"author":{"gitId":"WuHaohui1231"},"content":"        String feedback \u003d \"Calculator:\\n\";","lastModifiedDate":"2022-10-27"},{"lineNumber":58,"author":{"gitId":"WuHaohui1231"},"content":"        feedback +\u003d this.expression + \" \u003d \" + calcResult;","lastModifiedDate":"2022-10-27"},{"lineNumber":59,"author":{"gitId":"WuHaohui1231"},"content":"        logger.log(Level.INFO, feedback);","lastModifiedDate":"2022-10-27"},{"lineNumber":60,"author":{"gitId":"WuHaohui1231"},"content":"        return new CommandResult(feedback);","lastModifiedDate":"2022-10-27"},{"lineNumber":61,"author":{"gitId":"WuHaohui1231"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":62,"author":{"gitId":"WuHaohui1231"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":63,"author":{"gitId":"WuHaohui1231"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":64,"author":{"gitId":"WuHaohui1231"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-27"},{"lineNumber":65,"author":{"gitId":"WuHaohui1231"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-27"},{"lineNumber":66,"author":{"gitId":"WuHaohui1231"},"content":"                || (other instanceof CalculateCommand // instanceof handles nulls","lastModifiedDate":"2022-10-27"},{"lineNumber":67,"author":{"gitId":"WuHaohui1231"},"content":"                \u0026\u0026 expression.equals(((CalculateCommand) other).expression)); // state check","lastModifiedDate":"2022-10-27"},{"lineNumber":68,"author":{"gitId":"WuHaohui1231"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":69,"author":{"gitId":"WuHaohui1231"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":70,"author":{"gitId":"WuHaohui1231"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":71,"author":{"gitId":"WuHaohui1231"},"content":"     * Class for reading and understanding the arithmetic expression.","lastModifiedDate":"2022-10-27"},{"lineNumber":72,"author":{"gitId":"WuHaohui1231"},"content":"     * Adapted from: https://www.daniweb.com/programming/software-development/","lastModifiedDate":"2022-10-27"},{"lineNumber":73,"author":{"gitId":"WuHaohui1231"},"content":"     *      threads/442690/java-expression-parser-calculator","lastModifiedDate":"2022-10-27"},{"lineNumber":74,"author":{"gitId":"WuHaohui1231"},"content":"     * with modifications","lastModifiedDate":"2022-10-27"},{"lineNumber":75,"author":{"gitId":"WuHaohui1231"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":76,"author":{"gitId":"WuHaohui1231"},"content":"    private static class ArithmeticExpressionReader {","lastModifiedDate":"2022-10-27"},{"lineNumber":77,"author":{"gitId":"WuHaohui1231"},"content":"        private static final int HIGH_PRECEDENCE \u003d 2;","lastModifiedDate":"2022-10-27"},{"lineNumber":78,"author":{"gitId":"WuHaohui1231"},"content":"        private static final int LOW_PRECEDENCE \u003d 0;","lastModifiedDate":"2022-10-27"},{"lineNumber":79,"author":{"gitId":"WuHaohui1231"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":80,"author":{"gitId":"WuHaohui1231"},"content":"        // All operators set with their precedence","lastModifiedDate":"2022-10-27"},{"lineNumber":81,"author":{"gitId":"WuHaohui1231"},"content":"        private static final Map\u003cString, Integer\u003e OPERATORS \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-10-27"},{"lineNumber":82,"author":{"gitId":"WuHaohui1231"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":83,"author":{"gitId":"WuHaohui1231"},"content":"        static {","lastModifiedDate":"2022-10-27"},{"lineNumber":84,"author":{"gitId":"WuHaohui1231"},"content":"            // Map\u003c\"token\", precedence\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":85,"author":{"gitId":"WuHaohui1231"},"content":"            OPERATORS.put(\"+\", LOW_PRECEDENCE);","lastModifiedDate":"2022-10-27"},{"lineNumber":86,"author":{"gitId":"WuHaohui1231"},"content":"            OPERATORS.put(\"-\", LOW_PRECEDENCE);","lastModifiedDate":"2022-10-27"},{"lineNumber":87,"author":{"gitId":"WuHaohui1231"},"content":"            OPERATORS.put(\"*\", HIGH_PRECEDENCE);","lastModifiedDate":"2022-10-27"},{"lineNumber":88,"author":{"gitId":"WuHaohui1231"},"content":"            OPERATORS.put(\"/\", HIGH_PRECEDENCE);","lastModifiedDate":"2022-10-27"},{"lineNumber":89,"author":{"gitId":"WuHaohui1231"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":90,"author":{"gitId":"WuHaohui1231"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":91,"author":{"gitId":"WuHaohui1231"},"content":"        // Test if token is an operator","lastModifiedDate":"2022-10-27"},{"lineNumber":92,"author":{"gitId":"WuHaohui1231"},"content":"        private static boolean isOperator(String token) {","lastModifiedDate":"2022-10-27"},{"lineNumber":93,"author":{"gitId":"WuHaohui1231"},"content":"            return OPERATORS.containsKey(token);","lastModifiedDate":"2022-10-27"},{"lineNumber":94,"author":{"gitId":"WuHaohui1231"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":95,"author":{"gitId":"WuHaohui1231"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":96,"author":{"gitId":"WuHaohui1231"},"content":"        // Compare precedence of operators.","lastModifiedDate":"2022-10-27"},{"lineNumber":97,"author":{"gitId":"WuHaohui1231"},"content":"        private static int comparePrecedence(String token1, String token2) {","lastModifiedDate":"2022-10-27"},{"lineNumber":98,"author":{"gitId":"WuHaohui1231"},"content":"            if (!isOperator(token1) || !isOperator(token2)) {","lastModifiedDate":"2022-10-27"},{"lineNumber":99,"author":{"gitId":"WuHaohui1231"},"content":"                throw new IllegalArgumentException(\"Invalid tokens: \" + token1","lastModifiedDate":"2022-10-27"},{"lineNumber":100,"author":{"gitId":"WuHaohui1231"},"content":"                        + \" \" + token2);","lastModifiedDate":"2022-10-27"},{"lineNumber":101,"author":{"gitId":"WuHaohui1231"},"content":"            }","lastModifiedDate":"2022-10-27"},{"lineNumber":102,"author":{"gitId":"WuHaohui1231"},"content":"            return OPERATORS.get(token1) - OPERATORS.get(token2);","lastModifiedDate":"2022-10-27"},{"lineNumber":103,"author":{"gitId":"WuHaohui1231"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":104,"author":{"gitId":"WuHaohui1231"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":105,"author":{"gitId":"WuHaohui1231"},"content":"        // Convert infix expression format into Reverse Polish notation","lastModifiedDate":"2022-10-27"},{"lineNumber":106,"author":{"gitId":"WuHaohui1231"},"content":"        public static String[] expressionToRpn(String[] inputTokens) {","lastModifiedDate":"2022-10-27"},{"lineNumber":107,"author":{"gitId":"WuHaohui1231"},"content":"            // Reverse Polish notation","lastModifiedDate":"2022-10-27"},{"lineNumber":108,"author":{"gitId":"WuHaohui1231"},"content":"            ArrayList\u003cString\u003e rpn \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-27"},{"lineNumber":109,"author":{"gitId":"WuHaohui1231"},"content":"            Stack\u003cString\u003e stack \u003d new Stack\u003c\u003e();","lastModifiedDate":"2022-10-27"},{"lineNumber":110,"author":{"gitId":"WuHaohui1231"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":111,"author":{"gitId":"WuHaohui1231"},"content":"            // For each token","lastModifiedDate":"2022-10-27"},{"lineNumber":112,"author":{"gitId":"WuHaohui1231"},"content":"            for (String token : inputTokens) {","lastModifiedDate":"2022-10-27"},{"lineNumber":113,"author":{"gitId":"WuHaohui1231"},"content":"                if (isOperator(token)) {","lastModifiedDate":"2022-10-27"},{"lineNumber":114,"author":{"gitId":"WuHaohui1231"},"content":"                    // If token is an operator.","lastModifiedDate":"2022-10-27"},{"lineNumber":115,"author":{"gitId":"WuHaohui1231"},"content":"                    // While stack not empty AND stack top element","lastModifiedDate":"2022-10-27"},{"lineNumber":116,"author":{"gitId":"WuHaohui1231"},"content":"                    // is an operator and have higher precedence","lastModifiedDate":"2022-10-27"},{"lineNumber":117,"author":{"gitId":"WuHaohui1231"},"content":"                    while (!stack.empty()","lastModifiedDate":"2022-10-27"},{"lineNumber":118,"author":{"gitId":"WuHaohui1231"},"content":"                            \u0026\u0026 isOperator(stack.peek())","lastModifiedDate":"2022-10-27"},{"lineNumber":119,"author":{"gitId":"WuHaohui1231"},"content":"                            \u0026\u0026 comparePrecedence(token, stack.peek()) \u003c\u003d 0) {","lastModifiedDate":"2022-10-27"},{"lineNumber":120,"author":{"gitId":"WuHaohui1231"},"content":"                        rpn.add(stack.pop());","lastModifiedDate":"2022-10-27"},{"lineNumber":121,"author":{"gitId":"WuHaohui1231"},"content":"                    }","lastModifiedDate":"2022-10-27"},{"lineNumber":122,"author":{"gitId":"WuHaohui1231"},"content":"                    // Push the new operator on the stack","lastModifiedDate":"2022-10-27"},{"lineNumber":123,"author":{"gitId":"WuHaohui1231"},"content":"                    stack.push(token);","lastModifiedDate":"2022-10-27"},{"lineNumber":124,"author":{"gitId":"WuHaohui1231"},"content":"                } else if (token.equals(\"(\")) {","lastModifiedDate":"2022-10-27"},{"lineNumber":125,"author":{"gitId":"WuHaohui1231"},"content":"                    // If token is a left parenthesis","lastModifiedDate":"2022-10-27"},{"lineNumber":126,"author":{"gitId":"WuHaohui1231"},"content":"                    stack.push(token);","lastModifiedDate":"2022-10-27"},{"lineNumber":127,"author":{"gitId":"WuHaohui1231"},"content":"                } else if (token.equals(\")\")) {","lastModifiedDate":"2022-10-27"},{"lineNumber":128,"author":{"gitId":"WuHaohui1231"},"content":"                    // If token is a right parenthesis","lastModifiedDate":"2022-10-27"},{"lineNumber":129,"author":{"gitId":"WuHaohui1231"},"content":"                    while (!stack.empty() \u0026\u0026 !stack.peek().equals(\"(\")) {","lastModifiedDate":"2022-10-27"},{"lineNumber":130,"author":{"gitId":"WuHaohui1231"},"content":"                        rpn.add(stack.pop());","lastModifiedDate":"2022-10-27"},{"lineNumber":131,"author":{"gitId":"WuHaohui1231"},"content":"                    }","lastModifiedDate":"2022-10-27"},{"lineNumber":132,"author":{"gitId":"WuHaohui1231"},"content":"                    stack.pop();","lastModifiedDate":"2022-10-27"},{"lineNumber":133,"author":{"gitId":"WuHaohui1231"},"content":"                } else {","lastModifiedDate":"2022-10-27"},{"lineNumber":134,"author":{"gitId":"WuHaohui1231"},"content":"                    // If token is a number","lastModifiedDate":"2022-10-27"},{"lineNumber":135,"author":{"gitId":"WuHaohui1231"},"content":"                    rpn.add(token);","lastModifiedDate":"2022-10-27"},{"lineNumber":136,"author":{"gitId":"WuHaohui1231"},"content":"                }","lastModifiedDate":"2022-10-27"},{"lineNumber":137,"author":{"gitId":"WuHaohui1231"},"content":"            }","lastModifiedDate":"2022-10-27"},{"lineNumber":138,"author":{"gitId":"WuHaohui1231"},"content":"            while (!stack.empty()) {","lastModifiedDate":"2022-10-27"},{"lineNumber":139,"author":{"gitId":"WuHaohui1231"},"content":"                rpn.add(stack.pop());","lastModifiedDate":"2022-10-27"},{"lineNumber":140,"author":{"gitId":"WuHaohui1231"},"content":"            }","lastModifiedDate":"2022-10-27"},{"lineNumber":141,"author":{"gitId":"WuHaohui1231"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":142,"author":{"gitId":"WuHaohui1231"},"content":"            assert stack.empty() : \"Stack is not empty at the end\";","lastModifiedDate":"2022-10-27"},{"lineNumber":143,"author":{"gitId":"WuHaohui1231"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":144,"author":{"gitId":"WuHaohui1231"},"content":"            String[] rpnStrArr \u003d new String[rpn.size()];","lastModifiedDate":"2022-10-27"},{"lineNumber":145,"author":{"gitId":"WuHaohui1231"},"content":"            return rpn.toArray(rpnStrArr);","lastModifiedDate":"2022-10-27"},{"lineNumber":146,"author":{"gitId":"WuHaohui1231"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":147,"author":{"gitId":"WuHaohui1231"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":148,"author":{"gitId":"WuHaohui1231"},"content":"        public static double rpnToDouble(String[] tokens) {","lastModifiedDate":"2022-10-27"},{"lineNumber":149,"author":{"gitId":"WuHaohui1231"},"content":"            Stack\u003cString\u003e stack \u003d new Stack\u003c\u003e();","lastModifiedDate":"2022-10-27"},{"lineNumber":150,"author":{"gitId":"WuHaohui1231"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":151,"author":{"gitId":"WuHaohui1231"},"content":"            for (String token : tokens) {","lastModifiedDate":"2022-10-27"},{"lineNumber":152,"author":{"gitId":"WuHaohui1231"},"content":"                // If the token is a value, push it onto the stack","lastModifiedDate":"2022-10-27"},{"lineNumber":153,"author":{"gitId":"WuHaohui1231"},"content":"                if (!isOperator(token)) {","lastModifiedDate":"2022-10-27"},{"lineNumber":154,"author":{"gitId":"WuHaohui1231"},"content":"                    stack.push(token);","lastModifiedDate":"2022-10-27"},{"lineNumber":155,"author":{"gitId":"WuHaohui1231"},"content":"                } else {","lastModifiedDate":"2022-10-27"},{"lineNumber":156,"author":{"gitId":"WuHaohui1231"},"content":"                    // Token is an operator: pop top two entries","lastModifiedDate":"2022-10-27"},{"lineNumber":157,"author":{"gitId":"WuHaohui1231"},"content":"                    Double d2 \u003d Double.valueOf(stack.pop());","lastModifiedDate":"2022-10-27"},{"lineNumber":158,"author":{"gitId":"WuHaohui1231"},"content":"                    Double d1 \u003d Double.valueOf(stack.pop());","lastModifiedDate":"2022-10-27"},{"lineNumber":159,"author":{"gitId":"WuHaohui1231"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":160,"author":{"gitId":"WuHaohui1231"},"content":"                    // Calculate the result","lastModifiedDate":"2022-10-27"},{"lineNumber":161,"author":{"gitId":"WuHaohui1231"},"content":"                    Double result \u003d token.compareTo(\"*\") \u003d\u003d 0","lastModifiedDate":"2022-10-27"},{"lineNumber":162,"author":{"gitId":"WuHaohui1231"},"content":"                        ? d1 * d2","lastModifiedDate":"2022-10-27"},{"lineNumber":163,"author":{"gitId":"WuHaohui1231"},"content":"                        : token.compareTo(\"/\") \u003d\u003d 0","lastModifiedDate":"2022-10-27"},{"lineNumber":164,"author":{"gitId":"WuHaohui1231"},"content":"                        ? d1 / d2","lastModifiedDate":"2022-10-27"},{"lineNumber":165,"author":{"gitId":"WuHaohui1231"},"content":"                        : token.compareTo(\"+\") \u003d\u003d 0","lastModifiedDate":"2022-10-27"},{"lineNumber":166,"author":{"gitId":"WuHaohui1231"},"content":"                        ? d1 + d2","lastModifiedDate":"2022-10-27"},{"lineNumber":167,"author":{"gitId":"WuHaohui1231"},"content":"                        : d1 - d2;","lastModifiedDate":"2022-10-27"},{"lineNumber":168,"author":{"gitId":"WuHaohui1231"},"content":"                    // Push result onto stack","lastModifiedDate":"2022-10-27"},{"lineNumber":169,"author":{"gitId":"WuHaohui1231"},"content":"                    stack.push(String.valueOf(result));","lastModifiedDate":"2022-10-27"},{"lineNumber":170,"author":{"gitId":"WuHaohui1231"},"content":"                }","lastModifiedDate":"2022-10-27"},{"lineNumber":171,"author":{"gitId":"WuHaohui1231"},"content":"            }","lastModifiedDate":"2022-10-27"},{"lineNumber":172,"author":{"gitId":"WuHaohui1231"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":173,"author":{"gitId":"WuHaohui1231"},"content":"            return Double.parseDouble(stack.pop());","lastModifiedDate":"2022-10-27"},{"lineNumber":174,"author":{"gitId":"WuHaohui1231"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":175,"author":{"gitId":"WuHaohui1231"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":176,"author":{"gitId":"WuHaohui1231"},"content":"        /**","lastModifiedDate":"2022-10-27"},{"lineNumber":177,"author":{"gitId":"WuHaohui1231"},"content":"         * Main logic (method) for the calculation reader.","lastModifiedDate":"2022-10-27"},{"lineNumber":178,"author":{"gitId":"WuHaohui1231"},"content":"         * @param userInput Cashier\u0027s input in String","lastModifiedDate":"2022-10-27"},{"lineNumber":179,"author":{"gitId":"WuHaohui1231"},"content":"         * @return The result of calculation, rounded to 2 d.p.","lastModifiedDate":"2022-10-27"},{"lineNumber":180,"author":{"gitId":"WuHaohui1231"},"content":"         */","lastModifiedDate":"2022-10-27"},{"lineNumber":181,"author":{"gitId":"WuHaohui1231"},"content":"        public static String parseCalculation(String userInput) {","lastModifiedDate":"2022-10-27"},{"lineNumber":182,"author":{"gitId":"WuHaohui1231"},"content":"            String regex \u003d \"((?\u003c\u003d[(|)|\\\\+|\\\\*|\\\\-|/])|(?\u003d[(|)|\\\\+|\\\\*|\\\\-|/]))\";","lastModifiedDate":"2022-10-27"},{"lineNumber":183,"author":{"gitId":"WuHaohui1231"},"content":"            String resultStr;","lastModifiedDate":"2022-10-27"},{"lineNumber":184,"author":{"gitId":"WuHaohui1231"},"content":"            System.out.println(userInput);","lastModifiedDate":"2022-10-27"},{"lineNumber":185,"author":{"gitId":"WuHaohui1231"},"content":"            assert OPERATORS.containsKey(\"+\") : \"Don\u0027t have addition\";","lastModifiedDate":"2022-10-27"},{"lineNumber":186,"author":{"gitId":"WuHaohui1231"},"content":"            assert OPERATORS.containsKey(\"-\") : \"Don\u0027t have subtraction\";","lastModifiedDate":"2022-10-27"},{"lineNumber":187,"author":{"gitId":"WuHaohui1231"},"content":"            assert OPERATORS.containsKey(\"*\") : \"Don\u0027t have multiplication\";","lastModifiedDate":"2022-10-27"},{"lineNumber":188,"author":{"gitId":"WuHaohui1231"},"content":"            assert OPERATORS.containsKey(\"/\") : \"Don\u0027t have division\";","lastModifiedDate":"2022-10-27"},{"lineNumber":189,"author":{"gitId":"WuHaohui1231"},"content":"            try {","lastModifiedDate":"2022-10-27"},{"lineNumber":190,"author":{"gitId":"WuHaohui1231"},"content":"                String[] input \u003d userInput.split(regex);","lastModifiedDate":"2022-10-27"},{"lineNumber":191,"author":{"gitId":"WuHaohui1231"},"content":"                String[] output \u003d expressionToRpn(input);","lastModifiedDate":"2022-10-27"},{"lineNumber":192,"author":{"gitId":"WuHaohui1231"},"content":"                System.out.println(\" \");","lastModifiedDate":"2022-10-27"},{"lineNumber":193,"author":{"gitId":"WuHaohui1231"},"content":"                // Feed the rpn string to rpntoDouble to give result","lastModifiedDate":"2022-10-27"},{"lineNumber":194,"author":{"gitId":"WuHaohui1231"},"content":"                Double result \u003d rpnToDouble(output);","lastModifiedDate":"2022-10-27"},{"lineNumber":195,"author":{"gitId":"WuHaohui1231"},"content":"                resultStr \u003d String.format(\"%.2f\", result);","lastModifiedDate":"2022-10-27"},{"lineNumber":196,"author":{"gitId":"WuHaohui1231"},"content":"            } catch (NumberFormatException | EmptyStackException nfe) {","lastModifiedDate":"2022-10-27"},{"lineNumber":197,"author":{"gitId":"WuHaohui1231"},"content":"                resultStr \u003d \"INVALID EXPRESSION\";","lastModifiedDate":"2022-10-27"},{"lineNumber":198,"author":{"gitId":"WuHaohui1231"},"content":"            }","lastModifiedDate":"2022-10-27"},{"lineNumber":199,"author":{"gitId":"WuHaohui1231"},"content":"            return resultStr;","lastModifiedDate":"2022-10-27"},{"lineNumber":200,"author":{"gitId":"WuHaohui1231"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":201,"author":{"gitId":"WuHaohui1231"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":202,"author":{"gitId":"WuHaohui1231"},"content":"}","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"TanWenCong":1,"albertZhangTJ":6,"WuHaohui1231":195}},{"path":"src/main/java/seedu/boba/logic/commands/CalculatorGuiCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.logic.commands;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"WuHaohui1231"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"albertZhangTJ"},"content":"import seedu.boba.model.BobaBotModel;","lastModifiedDate":"2022-10-31"},{"lineNumber":4,"author":{"gitId":"WuHaohui1231"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"WuHaohui1231"},"content":"/**","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"WuHaohui1231"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"WuHaohui1231"},"content":" */","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"WuHaohui1231"},"content":"public class CalculatorGuiCommand extends Command {","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"WuHaohui1231"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"WuHaohui1231"},"content":"    public static final String COMMAND_WORD \u003d \"calc-gui\";","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"WuHaohui1231"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"WuHaohui1231"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows calculator in GUI.\\n\"","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"WuHaohui1231"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"WuHaohui1231"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"WuHaohui1231"},"content":"    public static final String SHOWING_CALC_MESSAGE \u003d \"Opened calculator.\";","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"WuHaohui1231"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"WuHaohui1231"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"albertZhangTJ"},"content":"    public CommandResult execute(BobaBotModel bobaBotModel) {","lastModifiedDate":"2022-10-31"},{"lineNumber":19,"author":{"gitId":"WuHaohui1231"},"content":"        return new CommandResult(SHOWING_CALC_MESSAGE, false, false, false, false, true);","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"WuHaohui1231"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"WuHaohui1231"},"content":"}","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"TanWenCong":1,"albertZhangTJ":2,"WuHaohui1231":18}},{"path":"src/main/java/seedu/boba/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.logic.commands;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"albertZhangTJ"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-31"},{"lineNumber":4,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":5,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.BobaBot;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"albertZhangTJ"},"content":"import seedu.boba.model.BobaBotModel;","lastModifiedDate":"2022-10-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"TanWenCong"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"bobaBot has been cleared!\";","lastModifiedDate":"2022-10-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"albertZhangTJ"},"content":"    public CommandResult execute(BobaBotModel bobaBotModel) {","lastModifiedDate":"2022-10-31"},{"lineNumber":19,"author":{"gitId":"albertZhangTJ"},"content":"        requireNonNull(bobaBotModel);","lastModifiedDate":"2022-10-31"},{"lineNumber":20,"author":{"gitId":"albertZhangTJ"},"content":"        bobaBotModel.setBobaBot(new BobaBot());","lastModifiedDate":"2022-10-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"TanWenCong":3,"albertZhangTJ":6,"-":14}},{"path":"src/main/java/seedu/boba/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.logic.commands;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"albertZhangTJ"},"content":"import seedu.boba.model.BobaBotModel;","lastModifiedDate":"2022-10-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"albertZhangTJ"},"content":"     * @param bobaBotModel {@code BobaBotModel} which the command should operate on.","lastModifiedDate":"2022-10-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"albertZhangTJ"},"content":"    public abstract CommandResult execute(BobaBotModel bobaBotModel) throws CommandException, ParseException;","lastModifiedDate":"2022-10-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"TanWenCong":3,"albertZhangTJ":3,"-":15}},{"path":"src/main/java/seedu/boba/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.logic.commands;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"WuHaohui1231"},"content":"    private final boolean isShowHelp;","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"WuHaohui1231"},"content":"    private final boolean isExit;","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"bensohh"},"content":"    private final boolean isUndo;","lastModifiedDate":"2022-10-25"},{"lineNumber":21,"author":{"gitId":"bensohh"},"content":"    private final boolean isRedo;","lastModifiedDate":"2022-10-25"},{"lineNumber":22,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":23,"author":{"gitId":"WuHaohui1231"},"content":"    private final boolean isShowCalculator;","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"WuHaohui1231"},"content":"    public CommandResult(String feedbackToUser, boolean isShowHelp, boolean isExit,","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"WuHaohui1231"},"content":"                         boolean isUndo, boolean isRedo, boolean isShowCalculator) {","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"WuHaohui1231"},"content":"        this.isShowHelp \u003d isShowHelp;","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"WuHaohui1231"},"content":"        this.isExit \u003d isExit;","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"bensohh"},"content":"        this.isUndo \u003d isUndo;","lastModifiedDate":"2022-10-25"},{"lineNumber":34,"author":{"gitId":"bensohh"},"content":"        this.isRedo \u003d isRedo;","lastModifiedDate":"2022-10-25"},{"lineNumber":35,"author":{"gitId":"WuHaohui1231"},"content":"        this.isShowCalculator \u003d isShowCalculator;","lastModifiedDate":"2022-10-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"WuHaohui1231"},"content":"        this(feedbackToUser, false, false, false, false, false);","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"WuHaohui1231"},"content":"        return isShowHelp;","lastModifiedDate":"2022-10-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"WuHaohui1231"},"content":"        return isExit;","lastModifiedDate":"2022-10-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"bensohh"},"content":"    public boolean isUndo() {","lastModifiedDate":"2022-10-25"},{"lineNumber":59,"author":{"gitId":"bensohh"},"content":"        return isUndo;","lastModifiedDate":"2022-10-25"},{"lineNumber":60,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":61,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":62,"author":{"gitId":"bensohh"},"content":"    public boolean isRedo() {","lastModifiedDate":"2022-10-25"},{"lineNumber":63,"author":{"gitId":"bensohh"},"content":"        return isRedo;","lastModifiedDate":"2022-10-25"},{"lineNumber":64,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":65,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":66,"author":{"gitId":"WuHaohui1231"},"content":"    public boolean isShowCalculator() {","lastModifiedDate":"2022-10-27"},{"lineNumber":67,"author":{"gitId":"WuHaohui1231"},"content":"        return isShowCalculator;","lastModifiedDate":"2022-10-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"WuHaohui1231"},"content":"                \u0026\u0026 isShowHelp \u003d\u003d otherCommandResult.isShowHelp","lastModifiedDate":"2022-10-20"},{"lineNumber":84,"author":{"gitId":"bensohh"},"content":"                \u0026\u0026 isExit \u003d\u003d otherCommandResult.isExit","lastModifiedDate":"2022-10-25"},{"lineNumber":85,"author":{"gitId":"bensohh"},"content":"                \u0026\u0026 isUndo \u003d\u003d otherCommandResult.isUndo","lastModifiedDate":"2022-10-25"},{"lineNumber":86,"author":{"gitId":"bensohh"},"content":"                \u0026\u0026 isRedo \u003d\u003d otherCommandResult.isRedo;","lastModifiedDate":"2022-10-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"WuHaohui1231"},"content":"        return Objects.hash(feedbackToUser, isShowHelp, isExit);","lastModifiedDate":"2022-10-20"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"TanWenCong":1,"bensohh":16,"-":62,"WuHaohui1231":15}},{"path":"src/main/java/seedu/boba/logic/commands/DecreaseCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.logic.commands;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":3,"author":{"gitId":"albertZhangTJ"},"content":"import static java.util.Objects.isNull;","lastModifiedDate":"2022-10-31"},{"lineNumber":4,"author":{"gitId":"albertZhangTJ"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-31"},{"lineNumber":5,"author":{"gitId":"albertZhangTJ"},"content":"import static seedu.boba.model.BobaBotModel.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-10-31"},{"lineNumber":6,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":7,"author":{"gitId":"albertZhangTJ"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2022-10-31"},{"lineNumber":8,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":9,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.commons.core.Messages;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.logic.parser.ParserUtil;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"albertZhangTJ"},"content":"import seedu.boba.model.BobaBotModel;","lastModifiedDate":"2022-10-31"},{"lineNumber":14,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Email;","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Phone;","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Reward;","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":18,"author":{"gitId":"Samsation"},"content":"/**","lastModifiedDate":"2022-10-24"},{"lineNumber":19,"author":{"gitId":"Samsation"},"content":" * Decreases the reward points of an existing Customer in bobaBot.","lastModifiedDate":"2022-10-24"},{"lineNumber":20,"author":{"gitId":"Samsation"},"content":" */","lastModifiedDate":"2022-10-24"},{"lineNumber":21,"author":{"gitId":"Samsation"},"content":"public class DecreaseCommand extends Command {","lastModifiedDate":"2022-10-24"},{"lineNumber":22,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":23,"author":{"gitId":"Samsation"},"content":"    public static final String COMMAND_WORD \u003d \"decr\";","lastModifiedDate":"2022-10-24"},{"lineNumber":24,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":25,"author":{"gitId":"Samsation"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-24"},{"lineNumber":26,"author":{"gitId":"Samsation"},"content":"            + \": Decreases the reward points of the Customer identified \"","lastModifiedDate":"2022-10-24"},{"lineNumber":27,"author":{"gitId":"Samsation"},"content":"            + \"by the phone number/ email address used to register for membership. \"","lastModifiedDate":"2022-10-24"},{"lineNumber":28,"author":{"gitId":"Samsation"},"content":"            + \"Existing reward points will be overwritten by the input values.\\n\"","lastModifiedDate":"2022-10-24"},{"lineNumber":29,"author":{"gitId":"Samsation"},"content":"            + \"Parameters: REWARD (must be a POSITIVE integer) \"","lastModifiedDate":"2022-10-24"},{"lineNumber":30,"author":{"gitId":"Samsation"},"content":"            + \"Parameters: p/PHONE_NUMBER or e/EMAIL \\n\"","lastModifiedDate":"2022-10-24"},{"lineNumber":31,"author":{"gitId":"Samsation"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1000\" + \" p/98349032  or  \"","lastModifiedDate":"2022-10-24"},{"lineNumber":32,"author":{"gitId":"Samsation"},"content":"            + COMMAND_WORD + \" 500\" + \" e/example@gmail.com\";","lastModifiedDate":"2022-10-24"},{"lineNumber":33,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":34,"author":{"gitId":"albertZhangTJ"},"content":"    private String decrementReward;","lastModifiedDate":"2022-10-31"},{"lineNumber":35,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":36,"author":{"gitId":"Samsation"},"content":"    private Phone phoneIdentifier \u003d null;","lastModifiedDate":"2022-10-24"},{"lineNumber":37,"author":{"gitId":"Samsation"},"content":"    private Email emailIdentifier \u003d null;","lastModifiedDate":"2022-10-24"},{"lineNumber":38,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":39,"author":{"gitId":"Samsation"},"content":"    private final EditCommand.EditPersonDescriptor editPersonDescriptor \u003d new EditCommand.EditPersonDescriptor();","lastModifiedDate":"2022-10-24"},{"lineNumber":40,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":41,"author":{"gitId":"Samsation"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":42,"author":{"gitId":"Samsation"},"content":"     * @param phoneIdentifier current phone number of the customer","lastModifiedDate":"2022-10-26"},{"lineNumber":43,"author":{"gitId":"Samsation"},"content":"     * @param rewardPoints amount of reward points to decrement by","lastModifiedDate":"2022-10-24"},{"lineNumber":44,"author":{"gitId":"Samsation"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":45,"author":{"gitId":"Samsation"},"content":"    public DecreaseCommand(Phone phoneIdentifier, String rewardPoints) {","lastModifiedDate":"2022-10-24"},{"lineNumber":46,"author":{"gitId":"Samsation"},"content":"        requireNonNull(phoneIdentifier);","lastModifiedDate":"2022-10-24"},{"lineNumber":47,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":48,"author":{"gitId":"Samsation"},"content":"        this.phoneIdentifier \u003d phoneIdentifier;","lastModifiedDate":"2022-10-24"},{"lineNumber":49,"author":{"gitId":"Samsation"},"content":"        this.decrementReward \u003d rewardPoints;","lastModifiedDate":"2022-10-24"},{"lineNumber":50,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":51,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":52,"author":{"gitId":"Samsation"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":53,"author":{"gitId":"Samsation"},"content":"     * @param emailIdentifier current email address of the customer","lastModifiedDate":"2022-10-26"},{"lineNumber":54,"author":{"gitId":"Samsation"},"content":"     * @param rewardPoints amount of reward points to decrement by","lastModifiedDate":"2022-10-24"},{"lineNumber":55,"author":{"gitId":"Samsation"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":56,"author":{"gitId":"Samsation"},"content":"    public DecreaseCommand(Email emailIdentifier, String rewardPoints) {","lastModifiedDate":"2022-10-24"},{"lineNumber":57,"author":{"gitId":"Samsation"},"content":"        requireNonNull(emailIdentifier);","lastModifiedDate":"2022-10-24"},{"lineNumber":58,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":59,"author":{"gitId":"Samsation"},"content":"        this.emailIdentifier \u003d emailIdentifier;","lastModifiedDate":"2022-10-24"},{"lineNumber":60,"author":{"gitId":"Samsation"},"content":"        this.decrementReward \u003d rewardPoints;","lastModifiedDate":"2022-10-24"},{"lineNumber":61,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":62,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":63,"author":{"gitId":"Samsation"},"content":"    @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":64,"author":{"gitId":"albertZhangTJ"},"content":"    public CommandResult execute(BobaBotModel bobaBotModel) throws ParseException, CommandException {","lastModifiedDate":"2022-10-31"},{"lineNumber":65,"author":{"gitId":"albertZhangTJ"},"content":"        requireNonNull(bobaBotModel);","lastModifiedDate":"2022-10-31"},{"lineNumber":66,"author":{"gitId":"albertZhangTJ"},"content":"        bobaBotModel.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-10-31"},{"lineNumber":67,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":68,"author":{"gitId":"Samsation"},"content":"        try {","lastModifiedDate":"2022-10-24"},{"lineNumber":69,"author":{"gitId":"Samsation"},"content":"            Reward currentReward \u003d isNull(phoneIdentifier)","lastModifiedDate":"2022-10-24"},{"lineNumber":70,"author":{"gitId":"albertZhangTJ"},"content":"                    ? bobaBotModel.getCurrentReward(emailIdentifier)","lastModifiedDate":"2022-10-31"},{"lineNumber":71,"author":{"gitId":"albertZhangTJ"},"content":"                    : bobaBotModel.getCurrentReward(phoneIdentifier);","lastModifiedDate":"2022-10-31"},{"lineNumber":72,"author":{"gitId":"Samsation"},"content":"            int newReward \u003d Integer.parseInt(currentReward.value) - Integer.parseInt(decrementReward);","lastModifiedDate":"2022-10-24"},{"lineNumber":73,"author":{"gitId":"Samsation"},"content":"            if (newReward \u003c 0) {","lastModifiedDate":"2022-10-24"},{"lineNumber":74,"author":{"gitId":"Samsation"},"content":"                throw new ParseException(Reward.MESSAGE_NEGATIVE);","lastModifiedDate":"2022-10-30"},{"lineNumber":75,"author":{"gitId":"Samsation"},"content":"            }","lastModifiedDate":"2022-10-24"},{"lineNumber":76,"author":{"gitId":"Samsation"},"content":"            editPersonDescriptor.setReward(ParserUtil.parseReward(String.valueOf(newReward)));","lastModifiedDate":"2022-10-24"},{"lineNumber":77,"author":{"gitId":"Samsation"},"content":"            EditCommand editCommand \u003d isNull(phoneIdentifier)","lastModifiedDate":"2022-10-24"},{"lineNumber":78,"author":{"gitId":"Samsation"},"content":"                    ? new EditCommand(emailIdentifier, editPersonDescriptor)","lastModifiedDate":"2022-10-24"},{"lineNumber":79,"author":{"gitId":"Samsation"},"content":"                    : new EditCommand(phoneIdentifier, editPersonDescriptor);","lastModifiedDate":"2022-10-24"},{"lineNumber":80,"author":{"gitId":"albertZhangTJ"},"content":"            return editCommand.execute(bobaBotModel);","lastModifiedDate":"2022-10-31"},{"lineNumber":81,"author":{"gitId":"Samsation"},"content":"        } catch (NoSuchElementException e) {","lastModifiedDate":"2022-10-24"},{"lineNumber":82,"author":{"gitId":"Samsation"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_INFORMATION);","lastModifiedDate":"2022-10-24"},{"lineNumber":83,"author":{"gitId":"Samsation"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":84,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":85,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":86,"author":{"gitId":"Samsation"},"content":"    @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":87,"author":{"gitId":"Samsation"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-24"},{"lineNumber":88,"author":{"gitId":"Samsation"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-24"},{"lineNumber":89,"author":{"gitId":"Samsation"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-24"},{"lineNumber":90,"author":{"gitId":"Samsation"},"content":"            return true;","lastModifiedDate":"2022-10-24"},{"lineNumber":91,"author":{"gitId":"Samsation"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":92,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":93,"author":{"gitId":"Samsation"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-24"},{"lineNumber":94,"author":{"gitId":"Samsation"},"content":"        if (!(other instanceof DecreaseCommand)) {","lastModifiedDate":"2022-10-24"},{"lineNumber":95,"author":{"gitId":"Samsation"},"content":"            return false;","lastModifiedDate":"2022-10-24"},{"lineNumber":96,"author":{"gitId":"Samsation"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":97,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":98,"author":{"gitId":"Samsation"},"content":"        // state check","lastModifiedDate":"2022-10-24"},{"lineNumber":99,"author":{"gitId":"Samsation"},"content":"        DecreaseCommand e \u003d (DecreaseCommand) other;","lastModifiedDate":"2022-10-24"},{"lineNumber":100,"author":{"gitId":"Samsation"},"content":"        return (isNull(emailIdentifier) \u0026\u0026 phoneIdentifier.equals(e.phoneIdentifier)","lastModifiedDate":"2022-10-24"},{"lineNumber":101,"author":{"gitId":"Samsation"},"content":"                || isNull(phoneIdentifier) \u0026\u0026 emailIdentifier.equals(e.emailIdentifier))","lastModifiedDate":"2022-10-24"},{"lineNumber":102,"author":{"gitId":"Samsation"},"content":"                \u0026\u0026 decrementReward.equals(e.decrementReward)","lastModifiedDate":"2022-10-24"},{"lineNumber":103,"author":{"gitId":"Samsation"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2022-10-24"},{"lineNumber":104,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":105,"author":{"gitId":"Samsation"},"content":"}","lastModifiedDate":"2022-10-24"}],"authorContributionMap":{"Samsation":83,"TanWenCong":8,"albertZhangTJ":14}},{"path":"src/main/java/seedu/boba/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.logic.commands;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"albertZhangTJ"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-31"},{"lineNumber":4,"author":{"gitId":"albertZhangTJ"},"content":"import static seedu.boba.model.BobaBotModel.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-10-31"},{"lineNumber":5,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":6,"author":{"gitId":"albertZhangTJ"},"content":"import java.util.List;","lastModifiedDate":"2022-10-31"},{"lineNumber":7,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":8,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.commons.core.Messages;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.commons.core.index.Index;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"albertZhangTJ"},"content":"import seedu.boba.model.BobaBotModel;","lastModifiedDate":"2022-10-31"},{"lineNumber":12,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Customer;","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Email;","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Phone;","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.exceptions.PersonNotFoundException;","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"Samsation"},"content":" * Deletes a customer identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"Samsation"},"content":"            + \": Deletes the customer identified by the phone number or email used to register for membership.\\n\"","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"bensohh"},"content":"            + \"Parameters: p/PHONE_NUMBER or e/EMAIL \\n\"","lastModifiedDate":"2022-10-03"},{"lineNumber":27,"author":{"gitId":"bensohh"},"content":"            + \"Example: \" + COMMAND_WORD + \" p/81234567  or  \" + COMMAND_WORD + \" e/example@gmail.com\";","lastModifiedDate":"2022-10-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"Samsation"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Customer: %1$s\";","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"bensohh"},"content":"    private Index targetIndex;","lastModifiedDate":"2022-10-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"bensohh"},"content":"    private final DeletePersonDescriptor deletePersonDescriptor;","lastModifiedDate":"2022-10-03"},{"lineNumber":34,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":35,"author":{"gitId":"bensohh"},"content":"    public DeleteCommand(DeletePersonDescriptor deletePersonDescriptor) {","lastModifiedDate":"2022-10-03"},{"lineNumber":36,"author":{"gitId":"bensohh"},"content":"        this.deletePersonDescriptor \u003d deletePersonDescriptor;","lastModifiedDate":"2022-10-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"albertZhangTJ"},"content":"    public CommandResult execute(BobaBotModel bobaBotModel) throws CommandException {","lastModifiedDate":"2022-10-31"},{"lineNumber":41,"author":{"gitId":"albertZhangTJ"},"content":"        requireNonNull(bobaBotModel);","lastModifiedDate":"2022-10-31"},{"lineNumber":42,"author":{"gitId":"bensohh"},"content":"        // Refresh the list to show everyone before each delete","lastModifiedDate":"2022-10-17"},{"lineNumber":43,"author":{"gitId":"albertZhangTJ"},"content":"        bobaBotModel.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-10-31"},{"lineNumber":44,"author":{"gitId":"bensohh"},"content":"        int index;","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"bensohh"},"content":"        try {","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"bensohh"},"content":"            if (deletePersonDescriptor.isPhoneEmpty) {","lastModifiedDate":"2022-10-03"},{"lineNumber":47,"author":{"gitId":"albertZhangTJ"},"content":"                index \u003d bobaBotModel.findEmail(deletePersonDescriptor.getEmail());","lastModifiedDate":"2022-10-31"},{"lineNumber":48,"author":{"gitId":"bensohh"},"content":"            } else {","lastModifiedDate":"2022-10-03"},{"lineNumber":49,"author":{"gitId":"albertZhangTJ"},"content":"                index \u003d bobaBotModel.findNum(deletePersonDescriptor.getPhone());","lastModifiedDate":"2022-10-31"},{"lineNumber":50,"author":{"gitId":"bensohh"},"content":"            }","lastModifiedDate":"2022-10-03"},{"lineNumber":51,"author":{"gitId":"bensohh"},"content":"        } catch (PersonNotFoundException e) {","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"bensohh"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_INFORMATION);","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"bensohh"},"content":"        this.targetIndex \u003d Index.fromZeroBased(index);","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"albertZhangTJ"},"content":"        List\u003cCustomer\u003e lastShownList \u003d bobaBotModel.getFilteredPersonList();","lastModifiedDate":"2022-10-31"},{"lineNumber":57,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":58,"author":{"gitId":"Samsation"},"content":"        Customer customerToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-26"},{"lineNumber":59,"author":{"gitId":"albertZhangTJ"},"content":"        bobaBotModel.deletePerson(customerToDelete);","lastModifiedDate":"2022-10-31"},{"lineNumber":60,"author":{"gitId":"Samsation"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, customerToDelete));","lastModifiedDate":"2022-10-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"bensohh"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-09"},{"lineNumber":66,"author":{"gitId":"bensohh"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-09"},{"lineNumber":67,"author":{"gitId":"bensohh"},"content":"            return true;","lastModifiedDate":"2022-10-09"},{"lineNumber":68,"author":{"gitId":"bensohh"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":69,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":70,"author":{"gitId":"bensohh"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-09"},{"lineNumber":71,"author":{"gitId":"bensohh"},"content":"        if (!(other instanceof DeleteCommand)) {","lastModifiedDate":"2022-10-09"},{"lineNumber":72,"author":{"gitId":"bensohh"},"content":"            return false;","lastModifiedDate":"2022-10-09"},{"lineNumber":73,"author":{"gitId":"bensohh"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":74,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":75,"author":{"gitId":"bensohh"},"content":"        // state check","lastModifiedDate":"2022-10-09"},{"lineNumber":76,"author":{"gitId":"bensohh"},"content":"        DeleteCommand d \u003d (DeleteCommand) other;","lastModifiedDate":"2022-10-09"},{"lineNumber":77,"author":{"gitId":"bensohh"},"content":"        return deletePersonDescriptor.equals(d.deletePersonDescriptor)","lastModifiedDate":"2022-10-09"},{"lineNumber":78,"author":{"gitId":"bensohh"},"content":"                \u0026\u0026 (targetIndex \u003d\u003d null || targetIndex.equals(d.targetIndex));","lastModifiedDate":"2022-10-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":81,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":82,"author":{"gitId":"Samsation"},"content":"     * Stores the details of the Customer to delete (either the phone number or email).","lastModifiedDate":"2022-10-26"},{"lineNumber":83,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":84,"author":{"gitId":"bensohh"},"content":"    public static class DeletePersonDescriptor {","lastModifiedDate":"2022-10-03"},{"lineNumber":85,"author":{"gitId":"bensohh"},"content":"        private Email email;","lastModifiedDate":"2022-10-03"},{"lineNumber":86,"author":{"gitId":"bensohh"},"content":"        private Phone phone;","lastModifiedDate":"2022-10-03"},{"lineNumber":87,"author":{"gitId":"bensohh"},"content":"        private boolean isPhoneEmpty \u003d true;","lastModifiedDate":"2022-10-03"},{"lineNumber":88,"author":{"gitId":"bensohh"},"content":"        private boolean isEmailEmpty \u003d true;","lastModifiedDate":"2022-10-03"},{"lineNumber":89,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":90,"author":{"gitId":"bensohh"},"content":"        public DeletePersonDescriptor() {","lastModifiedDate":"2022-10-03"},{"lineNumber":91,"author":{"gitId":"bensohh"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":92,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":93,"author":{"gitId":"bensohh"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2022-10-03"},{"lineNumber":94,"author":{"gitId":"bensohh"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2022-10-03"},{"lineNumber":95,"author":{"gitId":"bensohh"},"content":"            this.isPhoneEmpty \u003d false;","lastModifiedDate":"2022-10-03"},{"lineNumber":96,"author":{"gitId":"bensohh"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":97,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":98,"author":{"gitId":"bensohh"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2022-10-03"},{"lineNumber":99,"author":{"gitId":"bensohh"},"content":"            this.email \u003d email;","lastModifiedDate":"2022-10-03"},{"lineNumber":100,"author":{"gitId":"bensohh"},"content":"            this.isEmailEmpty \u003d false;","lastModifiedDate":"2022-10-03"},{"lineNumber":101,"author":{"gitId":"bensohh"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":102,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":103,"author":{"gitId":"bensohh"},"content":"        public Phone getPhone() {","lastModifiedDate":"2022-10-03"},{"lineNumber":104,"author":{"gitId":"bensohh"},"content":"            return this.phone;","lastModifiedDate":"2022-10-03"},{"lineNumber":105,"author":{"gitId":"bensohh"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":106,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":107,"author":{"gitId":"bensohh"},"content":"        public Email getEmail() {","lastModifiedDate":"2022-10-03"},{"lineNumber":108,"author":{"gitId":"bensohh"},"content":"            return this.email;","lastModifiedDate":"2022-10-03"},{"lineNumber":109,"author":{"gitId":"bensohh"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":110,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":111,"author":{"gitId":"bensohh"},"content":"        public boolean isAnyFilled() {","lastModifiedDate":"2022-10-03"},{"lineNumber":112,"author":{"gitId":"bensohh"},"content":"            return this.isPhoneEmpty || this.isEmailEmpty;","lastModifiedDate":"2022-10-03"},{"lineNumber":113,"author":{"gitId":"bensohh"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":114,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":115,"author":{"gitId":"bensohh"},"content":"        @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":116,"author":{"gitId":"bensohh"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2022-10-09"},{"lineNumber":117,"author":{"gitId":"bensohh"},"content":"            // short circuit if same object","lastModifiedDate":"2022-10-09"},{"lineNumber":118,"author":{"gitId":"bensohh"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-09"},{"lineNumber":119,"author":{"gitId":"bensohh"},"content":"                return true;","lastModifiedDate":"2022-10-09"},{"lineNumber":120,"author":{"gitId":"bensohh"},"content":"            }","lastModifiedDate":"2022-10-09"},{"lineNumber":121,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":122,"author":{"gitId":"bensohh"},"content":"            // instanceof handles nulls","lastModifiedDate":"2022-10-09"},{"lineNumber":123,"author":{"gitId":"bensohh"},"content":"            if (!(other instanceof DeleteCommand.DeletePersonDescriptor)) {","lastModifiedDate":"2022-10-09"},{"lineNumber":124,"author":{"gitId":"bensohh"},"content":"                return false;","lastModifiedDate":"2022-10-09"},{"lineNumber":125,"author":{"gitId":"bensohh"},"content":"            }","lastModifiedDate":"2022-10-09"},{"lineNumber":126,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":127,"author":{"gitId":"bensohh"},"content":"            // state check","lastModifiedDate":"2022-10-09"},{"lineNumber":128,"author":{"gitId":"bensohh"},"content":"            DeleteCommand.DeletePersonDescriptor d \u003d (DeleteCommand.DeletePersonDescriptor) other;","lastModifiedDate":"2022-10-09"},{"lineNumber":129,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":130,"author":{"gitId":"bensohh"},"content":"            boolean isSamePhone \u003d isPhoneEmpty || getPhone().equals(d.getPhone());","lastModifiedDate":"2022-10-09"},{"lineNumber":131,"author":{"gitId":"bensohh"},"content":"            boolean isSameEmail \u003d isEmailEmpty || getEmail().equals(d.getEmail());","lastModifiedDate":"2022-10-09"},{"lineNumber":132,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":133,"author":{"gitId":"bensohh"},"content":"            return isPhoneEmpty \u003d\u003d d.isPhoneEmpty","lastModifiedDate":"2022-10-09"},{"lineNumber":134,"author":{"gitId":"bensohh"},"content":"                    \u0026\u0026 isEmailEmpty \u003d\u003d d.isEmailEmpty","lastModifiedDate":"2022-10-09"},{"lineNumber":135,"author":{"gitId":"bensohh"},"content":"                    \u0026\u0026 isAnyFilled() \u003d\u003d d.isAnyFilled()","lastModifiedDate":"2022-10-09"},{"lineNumber":136,"author":{"gitId":"bensohh"},"content":"                    \u0026\u0026 isSamePhone","lastModifiedDate":"2022-10-09"},{"lineNumber":137,"author":{"gitId":"bensohh"},"content":"                    \u0026\u0026 isSameEmail;","lastModifiedDate":"2022-10-09"},{"lineNumber":138,"author":{"gitId":"bensohh"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":139,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":140,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Samsation":6,"TanWenCong":8,"bensohh":90,"albertZhangTJ":13,"-":23}},{"path":"src/main/java/seedu/boba/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.logic.commands;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"albertZhangTJ"},"content":"import static java.util.Objects.isNull;","lastModifiedDate":"2022-10-31"},{"lineNumber":4,"author":{"gitId":"albertZhangTJ"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-31"},{"lineNumber":5,"author":{"gitId":"albertZhangTJ"},"content":"import static seedu.boba.logic.parser.CliSyntax.PREFIX_BIRTHDAY_MONTH;","lastModifiedDate":"2022-10-31"},{"lineNumber":6,"author":{"gitId":"albertZhangTJ"},"content":"import static seedu.boba.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-31"},{"lineNumber":7,"author":{"gitId":"albertZhangTJ"},"content":"import static seedu.boba.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-31"},{"lineNumber":8,"author":{"gitId":"albertZhangTJ"},"content":"import static seedu.boba.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-31"},{"lineNumber":9,"author":{"gitId":"albertZhangTJ"},"content":"import static seedu.boba.logic.parser.CliSyntax.PREFIX_REWARD;","lastModifiedDate":"2022-10-31"},{"lineNumber":10,"author":{"gitId":"albertZhangTJ"},"content":"import static seedu.boba.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-31"},{"lineNumber":11,"author":{"gitId":"albertZhangTJ"},"content":"import static seedu.boba.model.BobaBotModel.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-10-31"},{"lineNumber":12,"author":{"gitId":"albertZhangTJ"},"content":"import static seedu.boba.model.customer.Customer.BIRTHDAY_TAG;","lastModifiedDate":"2022-10-31"},{"lineNumber":13,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":14,"author":{"gitId":"albertZhangTJ"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-31"},{"lineNumber":15,"author":{"gitId":"albertZhangTJ"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-31"},{"lineNumber":16,"author":{"gitId":"albertZhangTJ"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-31"},{"lineNumber":17,"author":{"gitId":"albertZhangTJ"},"content":"import java.util.List;","lastModifiedDate":"2022-10-31"},{"lineNumber":18,"author":{"gitId":"albertZhangTJ"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-31"},{"lineNumber":19,"author":{"gitId":"albertZhangTJ"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-31"},{"lineNumber":20,"author":{"gitId":"albertZhangTJ"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-31"},{"lineNumber":21,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":22,"author":{"gitId":"Samsation"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2022-10-08"},{"lineNumber":23,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.commons.core.Messages;","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.commons.core.index.Index;","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.commons.util.CollectionUtil;","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"albertZhangTJ"},"content":"import seedu.boba.model.BobaBotModel;","lastModifiedDate":"2022-10-31"},{"lineNumber":29,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.BirthdayMonth;","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Customer;","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Email;","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Name;","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Phone;","lastModifiedDate":"2022-10-27"},{"lineNumber":34,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Reward;","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.exceptions.PersonNotFoundException;","lastModifiedDate":"2022-10-27"},{"lineNumber":36,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.tag.Tag;","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"Samsation"},"content":" * Edits the details of an existing Customer in bobaBot.","lastModifiedDate":"2022-10-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":45,"author":{"gitId":"Samsation"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the customer identified \"","lastModifiedDate":"2022-10-26"},{"lineNumber":46,"author":{"gitId":"Samsation"},"content":"            + \"by the phone number/ email address used to register for membership. \"","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":48,"author":{"gitId":"Samsation"},"content":"            + \"Parameters: p/PHONE_NUMBER or e/EMAIL \\n\"","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"TanWenCong"},"content":"            + \"[\" + PREFIX_BIRTHDAY_MONTH + \"BIRTHDAY_MONTH] \"","lastModifiedDate":"2022-10-24"},{"lineNumber":53,"author":{"gitId":"TanWenCong"},"content":"            + \"[\" + PREFIX_REWARD + \"REWARD] \"","lastModifiedDate":"2022-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"Samsation"},"content":"            + \"Example: \" + COMMAND_WORD + \" p/98349032  or  \" + COMMAND_WORD + \" e/example@gmail.com\"","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"Samsation"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Customer: %1$s\";","lastModifiedDate":"2022-10-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"Samsation"},"content":"    public static final String MESSAGE_DUPLICATE_CUSTOMER \u003d \"This customer already exists in bobaBot\";","lastModifiedDate":"2022-10-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":65,"author":{"gitId":"Samsation"},"content":"    private Phone phoneIdentifier \u003d null;","lastModifiedDate":"2022-10-03"},{"lineNumber":66,"author":{"gitId":"Samsation"},"content":"    private Email emailIdentifier \u003d null;","lastModifiedDate":"2022-10-03"},{"lineNumber":67,"author":{"gitId":"Samsation"},"content":"    private Index index;","lastModifiedDate":"2022-10-02"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"Samsation"},"content":"     * @param phoneIdentifier current phone number of the customer","lastModifiedDate":"2022-10-26"},{"lineNumber":71,"author":{"gitId":"Samsation"},"content":"     * @param editPersonDescriptor details to edit the customer with","lastModifiedDate":"2022-10-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":73,"author":{"gitId":"Samsation"},"content":"    public EditCommand(Phone phoneIdentifier, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2022-10-02"},{"lineNumber":74,"author":{"gitId":"Samsation"},"content":"        requireNonNull(phoneIdentifier);","lastModifiedDate":"2022-10-02"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":77,"author":{"gitId":"Samsation"},"content":"        this.phoneIdentifier \u003d phoneIdentifier;","lastModifiedDate":"2022-10-02"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":81,"author":{"gitId":"Samsation"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":82,"author":{"gitId":"Samsation"},"content":"     * @param emailIdentifier current email address of the customer","lastModifiedDate":"2022-10-26"},{"lineNumber":83,"author":{"gitId":"Samsation"},"content":"     * @param editPersonDescriptor details to edit the customer with","lastModifiedDate":"2022-10-26"},{"lineNumber":84,"author":{"gitId":"Samsation"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":85,"author":{"gitId":"Samsation"},"content":"    public EditCommand(Email emailIdentifier, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2022-10-03"},{"lineNumber":86,"author":{"gitId":"Samsation"},"content":"        requireNonNull(emailIdentifier);","lastModifiedDate":"2022-10-03"},{"lineNumber":87,"author":{"gitId":"Samsation"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2022-10-03"},{"lineNumber":88,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":89,"author":{"gitId":"Samsation"},"content":"        this.emailIdentifier \u003d emailIdentifier;","lastModifiedDate":"2022-10-03"},{"lineNumber":90,"author":{"gitId":"Samsation"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2022-10-03"},{"lineNumber":91,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":92,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":94,"author":{"gitId":"albertZhangTJ"},"content":"    public CommandResult execute(BobaBotModel bobaBotModel) throws CommandException, ParseException {","lastModifiedDate":"2022-10-31"},{"lineNumber":95,"author":{"gitId":"albertZhangTJ"},"content":"        requireNonNull(bobaBotModel);","lastModifiedDate":"2022-10-31"},{"lineNumber":96,"author":{"gitId":"albertZhangTJ"},"content":"        bobaBotModel.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-10-31"},{"lineNumber":97,"author":{"gitId":"Samsation"},"content":"        try {","lastModifiedDate":"2022-10-10"},{"lineNumber":98,"author":{"gitId":"Samsation"},"content":"            this.index \u003d !isNull(this.phoneIdentifier)","lastModifiedDate":"2022-10-03"},{"lineNumber":99,"author":{"gitId":"albertZhangTJ"},"content":"                    ? Index.fromZeroBased(bobaBotModel.findNum(phoneIdentifier))","lastModifiedDate":"2022-10-31"},{"lineNumber":100,"author":{"gitId":"albertZhangTJ"},"content":"                    : Index.fromZeroBased(bobaBotModel.findEmail(emailIdentifier));","lastModifiedDate":"2022-10-31"},{"lineNumber":101,"author":{"gitId":"Samsation"},"content":"        } catch (PersonNotFoundException e) {","lastModifiedDate":"2022-10-10"},{"lineNumber":102,"author":{"gitId":"Samsation"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_INFORMATION);","lastModifiedDate":"2022-10-10"},{"lineNumber":103,"author":{"gitId":"Samsation"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":104,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":105,"author":{"gitId":"albertZhangTJ"},"content":"        List\u003cCustomer\u003e lastShownList \u003d bobaBotModel.getFilteredPersonList();","lastModifiedDate":"2022-10-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":108,"author":{"gitId":"Samsation"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_INFORMATION);","lastModifiedDate":"2022-10-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":110,"author":{"gitId":"Samsation"},"content":"        Customer customerToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-10-26"},{"lineNumber":111,"author":{"gitId":"Samsation"},"content":"        Customer editedCustomer \u003d createEditedPerson(customerToEdit, editPersonDescriptor);","lastModifiedDate":"2022-10-26"},{"lineNumber":112,"author":{"gitId":"Samsation"},"content":"        LocalDate currentDate \u003d LocalDate.now();","lastModifiedDate":"2022-10-26"},{"lineNumber":113,"author":{"gitId":"Samsation"},"content":"        String currentMonth \u003d String.valueOf(currentDate.getMonth().getValue());","lastModifiedDate":"2022-10-26"},{"lineNumber":114,"author":{"gitId":"Samsation"},"content":"        if (editedCustomer.getTags().contains(BIRTHDAY_TAG)","lastModifiedDate":"2022-10-26"},{"lineNumber":115,"author":{"gitId":"Samsation"},"content":"                \u0026\u0026 !editedCustomer.getBirthdayMonth().value.equals(currentMonth)) {","lastModifiedDate":"2022-10-26"},{"lineNumber":116,"author":{"gitId":"Samsation"},"content":"            editedCustomer.removeBirthdayTag();","lastModifiedDate":"2022-10-26"},{"lineNumber":117,"author":{"gitId":"Samsation"},"content":"        } else if (!editedCustomer.getTags().contains(BIRTHDAY_TAG)","lastModifiedDate":"2022-10-26"},{"lineNumber":118,"author":{"gitId":"Samsation"},"content":"                \u0026\u0026 editedCustomer.getBirthdayMonth().value.equals(currentMonth)) {","lastModifiedDate":"2022-10-26"},{"lineNumber":119,"author":{"gitId":"Samsation"},"content":"            editedCustomer.addBirthdayTag();","lastModifiedDate":"2022-10-26"},{"lineNumber":120,"author":{"gitId":"Samsation"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":121,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":122,"author":{"gitId":"Samsation"},"content":"        Predicate\u003cCustomer\u003e filterPersonToEdit \u003d p -\u003e !p.equals(customerToEdit);","lastModifiedDate":"2022-10-26"},{"lineNumber":123,"author":{"gitId":"albertZhangTJ"},"content":"        FilteredList\u003cCustomer\u003e filteredListWithoutTarget \u003d bobaBotModel.getBobaBot().getPersonList()","lastModifiedDate":"2022-10-31"},{"lineNumber":124,"author":{"gitId":"Samsation"},"content":"                .filtered(filterPersonToEdit);","lastModifiedDate":"2022-10-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":126,"author":{"gitId":"Samsation"},"content":"        if (filteredListWithoutTarget.contains(editedCustomer)) {","lastModifiedDate":"2022-10-26"},{"lineNumber":127,"author":{"gitId":"Samsation"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_CUSTOMER);","lastModifiedDate":"2022-10-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":130,"author":{"gitId":"albertZhangTJ"},"content":"        bobaBotModel.setPerson(customerToEdit, editedCustomer);","lastModifiedDate":"2022-10-31"},{"lineNumber":131,"author":{"gitId":"albertZhangTJ"},"content":"        bobaBotModel.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-10-31"},{"lineNumber":132,"author":{"gitId":"Samsation"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedCustomer));","lastModifiedDate":"2022-10-26"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":136,"author":{"gitId":"Samsation"},"content":"     * Creates and returns a {@code Customer} with the details of {@code customerToEdit}","lastModifiedDate":"2022-10-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":139,"author":{"gitId":"Samsation"},"content":"    private static Customer createEditedPerson(Customer customerToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2022-10-26"},{"lineNumber":140,"author":{"gitId":"Samsation"},"content":"        assert customerToEdit !\u003d null;","lastModifiedDate":"2022-10-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":142,"author":{"gitId":"Samsation"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(customerToEdit.getName());","lastModifiedDate":"2022-10-26"},{"lineNumber":143,"author":{"gitId":"Samsation"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(customerToEdit.getPhone());","lastModifiedDate":"2022-10-26"},{"lineNumber":144,"author":{"gitId":"Samsation"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(customerToEdit.getEmail());","lastModifiedDate":"2022-10-26"},{"lineNumber":145,"author":{"gitId":"TanWenCong"},"content":"        BirthdayMonth updatedBirthdayMonth \u003d editPersonDescriptor.getBirthdayMonth()","lastModifiedDate":"2022-10-24"},{"lineNumber":146,"author":{"gitId":"Samsation"},"content":"            .orElse(customerToEdit.getBirthdayMonth());","lastModifiedDate":"2022-10-26"},{"lineNumber":147,"author":{"gitId":"Samsation"},"content":"        Reward updatedReward \u003d editPersonDescriptor.getReward().orElse(customerToEdit.getReward());","lastModifiedDate":"2022-10-26"},{"lineNumber":148,"author":{"gitId":"Samsation"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(customerToEdit.getTags());","lastModifiedDate":"2022-10-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":150,"author":{"gitId":"Samsation"},"content":"        return new Customer(updatedName, updatedPhone, updatedEmail, updatedBirthdayMonth, updatedReward, updatedTags);","lastModifiedDate":"2022-10-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"Samsation"},"content":"        return (isNull(emailIdentifier) \u0026\u0026 phoneIdentifier.equals(e.phoneIdentifier)","lastModifiedDate":"2022-10-14"},{"lineNumber":168,"author":{"gitId":"Samsation"},"content":"                || isNull(phoneIdentifier) \u0026\u0026 emailIdentifier.equals(e.emailIdentifier))","lastModifiedDate":"2022-10-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"Samsation"},"content":"     * Stores the details to edit the customer with. Each non-empty field value will replace the","lastModifiedDate":"2022-10-26"},{"lineNumber":174,"author":{"gitId":"Samsation"},"content":"     * corresponding field value of the customer.","lastModifiedDate":"2022-10-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":180,"author":{"gitId":"TanWenCong"},"content":"        private BirthdayMonth birthdayMonth;","lastModifiedDate":"2022-10-24"},{"lineNumber":181,"author":{"gitId":"Samsation"},"content":"        private Reward reward;","lastModifiedDate":"2022-10-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"albertZhangTJ"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2022-10-31"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":187,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":188,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":189,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":194,"author":{"gitId":"TanWenCong"},"content":"            setBirthdayMonth(toCopy.birthdayMonth);","lastModifiedDate":"2022-10-24"},{"lineNumber":195,"author":{"gitId":"Samsation"},"content":"            setReward(toCopy.reward);","lastModifiedDate":"2022-10-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":203,"author":{"gitId":"Samsation"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, reward, tags);","lastModifiedDate":"2022-10-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":227,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":230,"author":{"gitId":"TanWenCong"},"content":"        public void setBirthdayMonth(BirthdayMonth birthdayMonth) {","lastModifiedDate":"2022-10-24"},{"lineNumber":231,"author":{"gitId":"TanWenCong"},"content":"            this.birthdayMonth \u003d birthdayMonth;","lastModifiedDate":"2022-10-24"},{"lineNumber":232,"author":{"gitId":"TanWenCong"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":233,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":234,"author":{"gitId":"TanWenCong"},"content":"        public Optional\u003cBirthdayMonth\u003e getBirthdayMonth() {","lastModifiedDate":"2022-10-24"},{"lineNumber":235,"author":{"gitId":"TanWenCong"},"content":"            return Optional.ofNullable(birthdayMonth);","lastModifiedDate":"2022-10-24"},{"lineNumber":236,"author":{"gitId":"TanWenCong"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":237,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":238,"author":{"gitId":"Samsation"},"content":"        public void setReward(Reward reward) {","lastModifiedDate":"2022-10-08"},{"lineNumber":239,"author":{"gitId":"Samsation"},"content":"            this.reward \u003d reward;","lastModifiedDate":"2022-10-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":242,"author":{"gitId":"Samsation"},"content":"        public Optional\u003cReward\u003e getReward() {","lastModifiedDate":"2022-10-08"},{"lineNumber":243,"author":{"gitId":"Samsation"},"content":"            return Optional.ofNullable(reward);","lastModifiedDate":"2022-10-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":247,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":248,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":249,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":251,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":255,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":256,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":257,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":258,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":260,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":265,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":266,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":267,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":268,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":271,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":272,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":273,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":275,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":276,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":278,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":279,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":280,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":281,"author":{"gitId":"TanWenCong"},"content":"                    \u0026\u0026 getBirthdayMonth().equals(e.getBirthdayMonth())","lastModifiedDate":"2022-10-24"},{"lineNumber":282,"author":{"gitId":"Samsation"},"content":"                    \u0026\u0026 getReward().equals(e.getReward())","lastModifiedDate":"2022-10-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":284,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"Samsation":75,"TanWenCong":28,"albertZhangTJ":30,"-":153}},{"path":"src/main/java/seedu/boba/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.logic.commands;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"albertZhangTJ"},"content":"import seedu.boba.model.BobaBotModel;","lastModifiedDate":"2022-10-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Address Book as requested ...\";","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"albertZhangTJ"},"content":"    public CommandResult execute(BobaBotModel bobaBotModel) {","lastModifiedDate":"2022-10-31"},{"lineNumber":16,"author":{"gitId":"WuHaohui1231"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true, false, false, false);","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"TanWenCong":1,"albertZhangTJ":2,"-":15,"WuHaohui1231":1}},{"path":"src/main/java/seedu/boba/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.logic.commands;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"albertZhangTJ"},"content":"import static java.util.Objects.isNull;","lastModifiedDate":"2022-10-31"},{"lineNumber":4,"author":{"gitId":"albertZhangTJ"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-31"},{"lineNumber":5,"author":{"gitId":"albertZhangTJ"},"content":"import static seedu.boba.model.BobaBotModel.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-10-31"},{"lineNumber":6,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":7,"author":{"gitId":"albertZhangTJ"},"content":"import java.util.List;","lastModifiedDate":"2022-10-31"},{"lineNumber":8,"author":{"gitId":"albertZhangTJ"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-31"},{"lineNumber":9,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":10,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.commons.core.Messages;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.commons.core.index.Index;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"albertZhangTJ"},"content":"import seedu.boba.model.BobaBotModel;","lastModifiedDate":"2022-10-31"},{"lineNumber":14,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Customer;","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Email;","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Phone;","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.exceptions.PersonNotFoundException;","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose names contain any of \"","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"Samsation"},"content":"    private final Predicate\u003cCustomer\u003e predicate;","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"Samsation"},"content":"    private Index targetIndex;","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"Samsation"},"content":"    private FindPersonDescriptor findPersonDescriptor;","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"Samsation"},"content":"    public FindCommand(Predicate\u003cCustomer\u003e predicate) {","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"Samsation"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"Samsation"},"content":"     * Constructor for FindCommand.","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"Samsation"},"content":"     *","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"Samsation"},"content":"     * @param findPersonDescriptor contains details for the customer we are finding.","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"Samsation"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"Samsation"},"content":"    public FindCommand(FindPersonDescriptor findPersonDescriptor) {","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"Samsation"},"content":"        this.predicate \u003d null;","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"Samsation"},"content":"        this.findPersonDescriptor \u003d findPersonDescriptor;","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":54,"author":{"gitId":"albertZhangTJ"},"content":"    public CommandResult execute(BobaBotModel bobaBotModel) throws CommandException {","lastModifiedDate":"2022-10-31"},{"lineNumber":55,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":56,"author":{"gitId":"albertZhangTJ"},"content":"        requireNonNull(bobaBotModel);","lastModifiedDate":"2022-10-31"},{"lineNumber":57,"author":{"gitId":"albertZhangTJ"},"content":"        bobaBotModel.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-10-31"},{"lineNumber":58,"author":{"gitId":"Samsation"},"content":"        if (!isNull(predicate)) {","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"albertZhangTJ"},"content":"            bobaBotModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-10-31"},{"lineNumber":60,"author":{"gitId":"Samsation"},"content":"        } else {","lastModifiedDate":"2022-10-09"},{"lineNumber":61,"author":{"gitId":"Samsation"},"content":"            try {","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"Samsation"},"content":"                if (findPersonDescriptor.isPhoneEmpty) {","lastModifiedDate":"2022-10-09"},{"lineNumber":63,"author":{"gitId":"albertZhangTJ"},"content":"                    this.targetIndex \u003d Index.fromZeroBased(bobaBotModel.findEmail(findPersonDescriptor.getEmail()));","lastModifiedDate":"2022-10-31"},{"lineNumber":64,"author":{"gitId":"Samsation"},"content":"                } else {","lastModifiedDate":"2022-10-09"},{"lineNumber":65,"author":{"gitId":"albertZhangTJ"},"content":"                    this.targetIndex \u003d Index.fromZeroBased(bobaBotModel.findNum(findPersonDescriptor.getPhone()));","lastModifiedDate":"2022-10-31"},{"lineNumber":66,"author":{"gitId":"Samsation"},"content":"                }","lastModifiedDate":"2022-10-09"},{"lineNumber":67,"author":{"gitId":"Samsation"},"content":"            } catch (PersonNotFoundException e) {","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"Samsation"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_PERSON_INFORMATION);","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"Samsation"},"content":"            }","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"albertZhangTJ"},"content":"            List\u003cCustomer\u003e lastShownList \u003d bobaBotModel.getFilteredPersonList();","lastModifiedDate":"2022-10-31"},{"lineNumber":72,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":73,"author":{"gitId":"Samsation"},"content":"            if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-09"},{"lineNumber":74,"author":{"gitId":"Samsation"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_PERSON_INFORMATION);","lastModifiedDate":"2022-10-14"},{"lineNumber":75,"author":{"gitId":"Samsation"},"content":"            }","lastModifiedDate":"2022-10-09"},{"lineNumber":76,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":77,"author":{"gitId":"Samsation"},"content":"            Customer customerToFind \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-26"},{"lineNumber":78,"author":{"gitId":"Samsation"},"content":"            Predicate\u003cCustomer\u003e filterPersonToFind \u003d p -\u003e p.equals(customerToFind);","lastModifiedDate":"2022-10-26"},{"lineNumber":79,"author":{"gitId":"albertZhangTJ"},"content":"            bobaBotModel.updateFilteredPersonList(filterPersonToFind);","lastModifiedDate":"2022-10-31"},{"lineNumber":80,"author":{"gitId":"Samsation"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":82,"author":{"gitId":"albertZhangTJ"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, bobaBotModel.getFilteredPersonList().size()));","lastModifiedDate":"2022-10-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":92,"author":{"gitId":"Samsation"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":93,"author":{"gitId":"Samsation"},"content":"     * Stores the details of the Customer to find (either the phone number or email).","lastModifiedDate":"2022-10-26"},{"lineNumber":94,"author":{"gitId":"Samsation"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":95,"author":{"gitId":"Samsation"},"content":"    public static class FindPersonDescriptor {","lastModifiedDate":"2022-10-09"},{"lineNumber":96,"author":{"gitId":"Samsation"},"content":"        private Email email;","lastModifiedDate":"2022-10-09"},{"lineNumber":97,"author":{"gitId":"Samsation"},"content":"        private Phone phone;","lastModifiedDate":"2022-10-09"},{"lineNumber":98,"author":{"gitId":"Samsation"},"content":"        private boolean isPhoneEmpty \u003d true;","lastModifiedDate":"2022-10-09"},{"lineNumber":99,"author":{"gitId":"Samsation"},"content":"        private boolean isEmailEmpty \u003d true;","lastModifiedDate":"2022-10-09"},{"lineNumber":100,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":101,"author":{"gitId":"Samsation"},"content":"        public FindPersonDescriptor() {","lastModifiedDate":"2022-10-09"},{"lineNumber":102,"author":{"gitId":"Samsation"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":103,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":104,"author":{"gitId":"Samsation"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2022-10-09"},{"lineNumber":105,"author":{"gitId":"Samsation"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2022-10-09"},{"lineNumber":106,"author":{"gitId":"Samsation"},"content":"            this.isPhoneEmpty \u003d false;","lastModifiedDate":"2022-10-09"},{"lineNumber":107,"author":{"gitId":"Samsation"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":108,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":109,"author":{"gitId":"Samsation"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2022-10-09"},{"lineNumber":110,"author":{"gitId":"Samsation"},"content":"            this.email \u003d email;","lastModifiedDate":"2022-10-09"},{"lineNumber":111,"author":{"gitId":"Samsation"},"content":"            this.isEmailEmpty \u003d false;","lastModifiedDate":"2022-10-09"},{"lineNumber":112,"author":{"gitId":"Samsation"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":113,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":114,"author":{"gitId":"Samsation"},"content":"        public Phone getPhone() {","lastModifiedDate":"2022-10-09"},{"lineNumber":115,"author":{"gitId":"Samsation"},"content":"            return this.phone;","lastModifiedDate":"2022-10-09"},{"lineNumber":116,"author":{"gitId":"Samsation"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":117,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":118,"author":{"gitId":"Samsation"},"content":"        public Email getEmail() {","lastModifiedDate":"2022-10-09"},{"lineNumber":119,"author":{"gitId":"Samsation"},"content":"            return this.email;","lastModifiedDate":"2022-10-09"},{"lineNumber":120,"author":{"gitId":"Samsation"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":121,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":122,"author":{"gitId":"Samsation"},"content":"        public boolean isAnyFilled() {","lastModifiedDate":"2022-10-09"},{"lineNumber":123,"author":{"gitId":"Samsation"},"content":"            return this.isPhoneEmpty || this.isEmailEmpty;","lastModifiedDate":"2022-10-09"},{"lineNumber":124,"author":{"gitId":"Samsation"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":125,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":126,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"Samsation":69,"TanWenCong":8,"albertZhangTJ":19,"-":30}},{"path":"src/main/java/seedu/boba/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.logic.commands;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"albertZhangTJ"},"content":"import seedu.boba.model.BobaBotModel;","lastModifiedDate":"2022-10-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"albertZhangTJ"},"content":"    public CommandResult execute(BobaBotModel bobaBotModel) {","lastModifiedDate":"2022-10-31"},{"lineNumber":19,"author":{"gitId":"WuHaohui1231"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false, false, false, false);","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"TanWenCong":1,"albertZhangTJ":2,"-":17,"WuHaohui1231":1}},{"path":"src/main/java/seedu/boba/logic/commands/IncreaseCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.logic.commands;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":3,"author":{"gitId":"albertZhangTJ"},"content":"import static java.util.Objects.isNull;","lastModifiedDate":"2022-10-31"},{"lineNumber":4,"author":{"gitId":"albertZhangTJ"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-31"},{"lineNumber":5,"author":{"gitId":"albertZhangTJ"},"content":"import static seedu.boba.model.BobaBotModel.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-10-31"},{"lineNumber":6,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":7,"author":{"gitId":"albertZhangTJ"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2022-10-31"},{"lineNumber":8,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":9,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.commons.core.Messages;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.logic.parser.ParserUtil;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"albertZhangTJ"},"content":"import seedu.boba.model.BobaBotModel;","lastModifiedDate":"2022-10-31"},{"lineNumber":14,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Email;","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Phone;","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Reward;","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":18,"author":{"gitId":"Samsation"},"content":"/**","lastModifiedDate":"2022-10-24"},{"lineNumber":19,"author":{"gitId":"Samsation"},"content":" * Increases the reward points of an existing Customer in bobaBot.","lastModifiedDate":"2022-10-24"},{"lineNumber":20,"author":{"gitId":"Samsation"},"content":" */","lastModifiedDate":"2022-10-24"},{"lineNumber":21,"author":{"gitId":"Samsation"},"content":"public class IncreaseCommand extends Command {","lastModifiedDate":"2022-10-24"},{"lineNumber":22,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":23,"author":{"gitId":"Samsation"},"content":"    public static final String COMMAND_WORD \u003d \"incr\";","lastModifiedDate":"2022-10-24"},{"lineNumber":24,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":25,"author":{"gitId":"Samsation"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-24"},{"lineNumber":26,"author":{"gitId":"Samsation"},"content":"            + \": Increases the reward points of the Customer identified \"","lastModifiedDate":"2022-10-24"},{"lineNumber":27,"author":{"gitId":"Samsation"},"content":"            + \"by the phone number/ email address used to register for membership. \"","lastModifiedDate":"2022-10-24"},{"lineNumber":28,"author":{"gitId":"Samsation"},"content":"            + \"Existing reward points will be overwritten by the input values.\\n\"","lastModifiedDate":"2022-10-24"},{"lineNumber":29,"author":{"gitId":"Samsation"},"content":"            + \"Parameters: REWARD (must be a POSITIVE integer) \"","lastModifiedDate":"2022-10-24"},{"lineNumber":30,"author":{"gitId":"Samsation"},"content":"            + \"Parameters: p/PHONE_NUMBER or e/EMAIL \\n\"","lastModifiedDate":"2022-10-24"},{"lineNumber":31,"author":{"gitId":"Samsation"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1000\" + \" p/98349032  or  \"","lastModifiedDate":"2022-10-24"},{"lineNumber":32,"author":{"gitId":"Samsation"},"content":"            + COMMAND_WORD + \" 500\" + \" e/example@gmail.com\";","lastModifiedDate":"2022-10-24"},{"lineNumber":33,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":34,"author":{"gitId":"albertZhangTJ"},"content":"    private String incrementReward;","lastModifiedDate":"2022-10-31"},{"lineNumber":35,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":36,"author":{"gitId":"Samsation"},"content":"    private Phone phoneIdentifier \u003d null;","lastModifiedDate":"2022-10-24"},{"lineNumber":37,"author":{"gitId":"Samsation"},"content":"    private Email emailIdentifier \u003d null;","lastModifiedDate":"2022-10-24"},{"lineNumber":38,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":39,"author":{"gitId":"Samsation"},"content":"    private final EditCommand.EditPersonDescriptor editPersonDescriptor \u003d new EditCommand.EditPersonDescriptor();","lastModifiedDate":"2022-10-24"},{"lineNumber":40,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":41,"author":{"gitId":"Samsation"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":42,"author":{"gitId":"Samsation"},"content":"     * @param phoneIdentifier current phone number of the customer","lastModifiedDate":"2022-10-26"},{"lineNumber":43,"author":{"gitId":"Samsation"},"content":"     * @param rewardPoints amount of reward points to increment by","lastModifiedDate":"2022-10-24"},{"lineNumber":44,"author":{"gitId":"Samsation"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":45,"author":{"gitId":"Samsation"},"content":"    public IncreaseCommand(Phone phoneIdentifier, String rewardPoints) {","lastModifiedDate":"2022-10-24"},{"lineNumber":46,"author":{"gitId":"Samsation"},"content":"        requireNonNull(phoneIdentifier);","lastModifiedDate":"2022-10-24"},{"lineNumber":47,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":48,"author":{"gitId":"Samsation"},"content":"        this.phoneIdentifier \u003d phoneIdentifier;","lastModifiedDate":"2022-10-24"},{"lineNumber":49,"author":{"gitId":"Samsation"},"content":"        this.incrementReward \u003d rewardPoints;","lastModifiedDate":"2022-10-24"},{"lineNumber":50,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":51,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":52,"author":{"gitId":"Samsation"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":53,"author":{"gitId":"Samsation"},"content":"     * @param emailIdentifier current email address of the customer","lastModifiedDate":"2022-10-26"},{"lineNumber":54,"author":{"gitId":"Samsation"},"content":"     * @param rewardPoints amount of reward points to increment by","lastModifiedDate":"2022-10-24"},{"lineNumber":55,"author":{"gitId":"Samsation"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":56,"author":{"gitId":"Samsation"},"content":"    public IncreaseCommand(Email emailIdentifier, String rewardPoints) {","lastModifiedDate":"2022-10-24"},{"lineNumber":57,"author":{"gitId":"Samsation"},"content":"        requireNonNull(emailIdentifier);","lastModifiedDate":"2022-10-24"},{"lineNumber":58,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":59,"author":{"gitId":"Samsation"},"content":"        this.emailIdentifier \u003d emailIdentifier;","lastModifiedDate":"2022-10-24"},{"lineNumber":60,"author":{"gitId":"Samsation"},"content":"        this.incrementReward \u003d rewardPoints;","lastModifiedDate":"2022-10-24"},{"lineNumber":61,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":62,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":63,"author":{"gitId":"Samsation"},"content":"    @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":64,"author":{"gitId":"albertZhangTJ"},"content":"    public CommandResult execute(BobaBotModel bobaBotModel) throws ParseException, CommandException {","lastModifiedDate":"2022-10-31"},{"lineNumber":65,"author":{"gitId":"albertZhangTJ"},"content":"        requireNonNull(bobaBotModel);","lastModifiedDate":"2022-10-31"},{"lineNumber":66,"author":{"gitId":"albertZhangTJ"},"content":"        bobaBotModel.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-10-31"},{"lineNumber":67,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":68,"author":{"gitId":"Samsation"},"content":"        try {","lastModifiedDate":"2022-10-24"},{"lineNumber":69,"author":{"gitId":"Samsation"},"content":"            Reward currentReward \u003d isNull(phoneIdentifier)","lastModifiedDate":"2022-10-24"},{"lineNumber":70,"author":{"gitId":"albertZhangTJ"},"content":"                    ? bobaBotModel.getCurrentReward(emailIdentifier)","lastModifiedDate":"2022-10-31"},{"lineNumber":71,"author":{"gitId":"albertZhangTJ"},"content":"                    : bobaBotModel.getCurrentReward(phoneIdentifier);","lastModifiedDate":"2022-10-31"},{"lineNumber":72,"author":{"gitId":"Samsation"},"content":"            editPersonDescriptor.setReward(ParserUtil.parseReward(","lastModifiedDate":"2022-10-24"},{"lineNumber":73,"author":{"gitId":"Samsation"},"content":"                    String.valueOf(Integer.parseInt(currentReward.value) + Integer.parseInt(incrementReward))));","lastModifiedDate":"2022-10-24"},{"lineNumber":74,"author":{"gitId":"Samsation"},"content":"            EditCommand editCommand \u003d isNull(phoneIdentifier)","lastModifiedDate":"2022-10-24"},{"lineNumber":75,"author":{"gitId":"Samsation"},"content":"                    ? new EditCommand(emailIdentifier, editPersonDescriptor)","lastModifiedDate":"2022-10-24"},{"lineNumber":76,"author":{"gitId":"Samsation"},"content":"                    : new EditCommand(phoneIdentifier, editPersonDescriptor);","lastModifiedDate":"2022-10-24"},{"lineNumber":77,"author":{"gitId":"albertZhangTJ"},"content":"            return editCommand.execute(bobaBotModel);","lastModifiedDate":"2022-10-31"},{"lineNumber":78,"author":{"gitId":"Samsation"},"content":"        } catch (NoSuchElementException e) {","lastModifiedDate":"2022-10-24"},{"lineNumber":79,"author":{"gitId":"Samsation"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_INFORMATION);","lastModifiedDate":"2022-10-24"},{"lineNumber":80,"author":{"gitId":"Samsation"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2022-10-30"},{"lineNumber":81,"author":{"gitId":"Samsation"},"content":"            throw new CommandException(Reward.MESSAGE_MAX_EXCEEDED);","lastModifiedDate":"2022-10-30"},{"lineNumber":82,"author":{"gitId":"Samsation"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":83,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":84,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":85,"author":{"gitId":"Samsation"},"content":"    @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":86,"author":{"gitId":"Samsation"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-24"},{"lineNumber":87,"author":{"gitId":"Samsation"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-24"},{"lineNumber":88,"author":{"gitId":"Samsation"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-24"},{"lineNumber":89,"author":{"gitId":"Samsation"},"content":"            return true;","lastModifiedDate":"2022-10-24"},{"lineNumber":90,"author":{"gitId":"Samsation"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":91,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":92,"author":{"gitId":"Samsation"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-24"},{"lineNumber":93,"author":{"gitId":"Samsation"},"content":"        if (!(other instanceof IncreaseCommand)) {","lastModifiedDate":"2022-10-24"},{"lineNumber":94,"author":{"gitId":"Samsation"},"content":"            return false;","lastModifiedDate":"2022-10-24"},{"lineNumber":95,"author":{"gitId":"Samsation"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":96,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":97,"author":{"gitId":"Samsation"},"content":"        // state check","lastModifiedDate":"2022-10-24"},{"lineNumber":98,"author":{"gitId":"Samsation"},"content":"        IncreaseCommand e \u003d (IncreaseCommand) other;","lastModifiedDate":"2022-10-24"},{"lineNumber":99,"author":{"gitId":"Samsation"},"content":"        return (isNull(emailIdentifier) \u0026\u0026 phoneIdentifier.equals(e.phoneIdentifier)","lastModifiedDate":"2022-10-24"},{"lineNumber":100,"author":{"gitId":"Samsation"},"content":"                || isNull(phoneIdentifier) \u0026\u0026 emailIdentifier.equals(e.emailIdentifier))","lastModifiedDate":"2022-10-24"},{"lineNumber":101,"author":{"gitId":"Samsation"},"content":"                \u0026\u0026 incrementReward.equals(e.incrementReward)","lastModifiedDate":"2022-10-24"},{"lineNumber":102,"author":{"gitId":"Samsation"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2022-10-24"},{"lineNumber":103,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":104,"author":{"gitId":"Samsation"},"content":"}","lastModifiedDate":"2022-10-24"}],"authorContributionMap":{"Samsation":82,"TanWenCong":8,"albertZhangTJ":14}},{"path":"src/main/java/seedu/boba/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.logic.commands;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"albertZhangTJ"},"content":"import static seedu.boba.model.BobaBotModel.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-10-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"albertZhangTJ"},"content":"import seedu.boba.model.BobaBotModel;","lastModifiedDate":"2022-10-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons\";","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"albertZhangTJ"},"content":"    public CommandResult execute(BobaBotModel bobaBotModel) {","lastModifiedDate":"2022-10-31"},{"lineNumber":20,"author":{"gitId":"albertZhangTJ"},"content":"        requireNonNull(bobaBotModel);","lastModifiedDate":"2022-10-31"},{"lineNumber":21,"author":{"gitId":"albertZhangTJ"},"content":"        bobaBotModel.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-10-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"TanWenCong":1,"albertZhangTJ":5,"-":18}},{"path":"src/main/java/seedu/boba/logic/commands/RedoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.logic.commands;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":3,"author":{"gitId":"albertZhangTJ"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-31"},{"lineNumber":4,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":5,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"albertZhangTJ"},"content":"import seedu.boba.model.BobaBotModel;","lastModifiedDate":"2022-10-31"},{"lineNumber":7,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.exceptions.NextStateNotFoundException;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.exceptions.PreviousStateNotFoundException;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":10,"author":{"gitId":"bensohh"},"content":"/**","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"bensohh"},"content":" * Returns bobaBot to the state before UndoCommand.","lastModifiedDate":"2022-10-25"},{"lineNumber":12,"author":{"gitId":"bensohh"},"content":" */","lastModifiedDate":"2022-10-25"},{"lineNumber":13,"author":{"gitId":"bensohh"},"content":"public class RedoCommand extends Command {","lastModifiedDate":"2022-10-25"},{"lineNumber":14,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":15,"author":{"gitId":"bensohh"},"content":"    public static final String COMMAND_WORD \u003d \"redo\";","lastModifiedDate":"2022-10-25"},{"lineNumber":16,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"bensohh"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"bensohh"},"content":"            + \": Returns bobaBot to the state before the UndoCommand.\\n\"","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"bensohh"},"content":"            + \"Parameters: No Parameters\\n\"","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"bensohh"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2022-10-25"},{"lineNumber":21,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":22,"author":{"gitId":"bensohh"},"content":"    public static final String MESSAGE_REDO_SUCCESS \u003d \"Successfully returned to the state before UndoCommand!\";","lastModifiedDate":"2022-10-25"},{"lineNumber":23,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":24,"author":{"gitId":"bensohh"},"content":"    public RedoCommand() {","lastModifiedDate":"2022-10-25"},{"lineNumber":25,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":27,"author":{"gitId":"bensohh"},"content":"    @Override","lastModifiedDate":"2022-10-25"},{"lineNumber":28,"author":{"gitId":"albertZhangTJ"},"content":"    public CommandResult execute(BobaBotModel bobaBotModel) throws CommandException {","lastModifiedDate":"2022-10-31"},{"lineNumber":29,"author":{"gitId":"albertZhangTJ"},"content":"        requireNonNull(bobaBotModel);","lastModifiedDate":"2022-10-31"},{"lineNumber":30,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":31,"author":{"gitId":"bensohh"},"content":"        try {","lastModifiedDate":"2022-10-25"},{"lineNumber":32,"author":{"gitId":"albertZhangTJ"},"content":"            bobaBotModel.redoBobaBot();","lastModifiedDate":"2022-10-31"},{"lineNumber":33,"author":{"gitId":"bensohh"},"content":"        } catch (PreviousStateNotFoundException | NextStateNotFoundException e) {","lastModifiedDate":"2022-10-25"},{"lineNumber":34,"author":{"gitId":"bensohh"},"content":"            throw new CommandException(e.getMessage());","lastModifiedDate":"2022-10-25"},{"lineNumber":35,"author":{"gitId":"bensohh"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":36,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":37,"author":{"gitId":"WuHaohui1231"},"content":"        return new CommandResult(MESSAGE_REDO_SUCCESS, false, false, false, true, false);","lastModifiedDate":"2022-10-27"},{"lineNumber":38,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":39,"author":{"gitId":"bensohh"},"content":"}","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"TanWenCong":4,"bensohh":28,"albertZhangTJ":6,"WuHaohui1231":1}},{"path":"src/main/java/seedu/boba/logic/commands/UndoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.logic.commands;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":3,"author":{"gitId":"albertZhangTJ"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-31"},{"lineNumber":4,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":5,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"albertZhangTJ"},"content":"import seedu.boba.model.BobaBotModel;","lastModifiedDate":"2022-10-31"},{"lineNumber":7,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.exceptions.NextStateNotFoundException;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.exceptions.PreviousStateNotFoundException;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":10,"author":{"gitId":"bensohh"},"content":"/**","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"bensohh"},"content":" * Returns bobaBot to the state before executing the previous command.","lastModifiedDate":"2022-10-25"},{"lineNumber":12,"author":{"gitId":"bensohh"},"content":" */","lastModifiedDate":"2022-10-25"},{"lineNumber":13,"author":{"gitId":"bensohh"},"content":"public class UndoCommand extends Command {","lastModifiedDate":"2022-10-25"},{"lineNumber":14,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":15,"author":{"gitId":"bensohh"},"content":"    public static final String COMMAND_WORD \u003d \"undo\";","lastModifiedDate":"2022-10-25"},{"lineNumber":16,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"bensohh"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"bensohh"},"content":"            + \": Returns bobaBot to the state before executing the previous command.\\n\"","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"bensohh"},"content":"            + \"Parameters: No Parameters\\n\"","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"bensohh"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2022-10-25"},{"lineNumber":21,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":22,"author":{"gitId":"bensohh"},"content":"    public static final String MESSAGE_UNDO_SUCCESS \u003d \"Successfully returned to previous state!\";","lastModifiedDate":"2022-10-25"},{"lineNumber":23,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":24,"author":{"gitId":"bensohh"},"content":"    public UndoCommand() {","lastModifiedDate":"2022-10-25"},{"lineNumber":25,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":27,"author":{"gitId":"bensohh"},"content":"    @Override","lastModifiedDate":"2022-10-25"},{"lineNumber":28,"author":{"gitId":"albertZhangTJ"},"content":"    public CommandResult execute(BobaBotModel bobaBotModel) throws CommandException {","lastModifiedDate":"2022-10-31"},{"lineNumber":29,"author":{"gitId":"albertZhangTJ"},"content":"        requireNonNull(bobaBotModel);","lastModifiedDate":"2022-10-31"},{"lineNumber":30,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":31,"author":{"gitId":"bensohh"},"content":"        try {","lastModifiedDate":"2022-10-25"},{"lineNumber":32,"author":{"gitId":"albertZhangTJ"},"content":"            bobaBotModel.undoBobaBot();","lastModifiedDate":"2022-10-31"},{"lineNumber":33,"author":{"gitId":"bensohh"},"content":"        } catch (PreviousStateNotFoundException | NextStateNotFoundException e) {","lastModifiedDate":"2022-10-25"},{"lineNumber":34,"author":{"gitId":"bensohh"},"content":"            throw new CommandException(e.getMessage());","lastModifiedDate":"2022-10-25"},{"lineNumber":35,"author":{"gitId":"bensohh"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":36,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":37,"author":{"gitId":"WuHaohui1231"},"content":"        return new CommandResult(MESSAGE_UNDO_SUCCESS, false, false, true, false, false);","lastModifiedDate":"2022-10-27"},{"lineNumber":38,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":39,"author":{"gitId":"bensohh"},"content":"}","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"TanWenCong":4,"bensohh":28,"albertZhangTJ":6,"WuHaohui1231":1}},{"path":"src/main/java/seedu/boba/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.logic.commands.exceptions;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"TanWenCong":1,"-":16}},{"path":"src/main/java/seedu/boba/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.logic.parser;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.parser.CliSyntax.PREFIX_BIRTHDAY_MONTH;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.parser.CliSyntax.PREFIX_REWARD;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.logic.commands.AddCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.BirthdayMonth;","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Customer;","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Email;","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Name;","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Phone;","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Reward;","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.tag.Tag;","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"TanWenCong"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2022-10-24"},{"lineNumber":37,"author":{"gitId":"TanWenCong"},"content":"                    PREFIX_BIRTHDAY_MONTH, PREFIX_REWARD, PREFIX_TAG);","lastModifiedDate":"2022-10-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":39,"author":{"gitId":"TanWenCong"},"content":"        boolean isUniquePrefix \u003d argMultimap.isUniquePrefix(PREFIX_NAME)","lastModifiedDate":"2022-10-14"},{"lineNumber":40,"author":{"gitId":"TanWenCong"},"content":"                                    \u0026\u0026 argMultimap.isUniquePrefix(PREFIX_PHONE)","lastModifiedDate":"2022-10-14"},{"lineNumber":41,"author":{"gitId":"TanWenCong"},"content":"                                    \u0026\u0026 argMultimap.isUniquePrefix(PREFIX_EMAIL)","lastModifiedDate":"2022-10-14"},{"lineNumber":42,"author":{"gitId":"TanWenCong"},"content":"                                    \u0026\u0026 argMultimap.isUniquePrefix(PREFIX_BIRTHDAY_MONTH)","lastModifiedDate":"2022-10-24"},{"lineNumber":43,"author":{"gitId":"TanWenCong"},"content":"                                    \u0026\u0026 argMultimap.isUniquePrefix(PREFIX_REWARD);","lastModifiedDate":"2022-10-14"},{"lineNumber":44,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":45,"author":{"gitId":"TanWenCong"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_REWARD, PREFIX_PHONE,","lastModifiedDate":"2022-10-24"},{"lineNumber":46,"author":{"gitId":"TanWenCong"},"content":"            PREFIX_BIRTHDAY_MONTH, PREFIX_EMAIL)","lastModifiedDate":"2022-10-24"},{"lineNumber":47,"author":{"gitId":"TanWenCong"},"content":"                || !argMultimap.getPreamble().isEmpty()","lastModifiedDate":"2022-10-14"},{"lineNumber":48,"author":{"gitId":"TanWenCong"},"content":"                || !isUniquePrefix) {","lastModifiedDate":"2022-10-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":51,"author":{"gitId":"Samsation"},"content":"        try {","lastModifiedDate":"2022-10-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"Samsation"},"content":"            BirthdayMonth birthdayMonth \u003d ParserUtil.parseBirthdayMonth(argMultimap","lastModifiedDate":"2022-10-30"},{"lineNumber":56,"author":{"gitId":"Samsation"},"content":"                    .getValue(PREFIX_BIRTHDAY_MONTH).get());","lastModifiedDate":"2022-10-30"},{"lineNumber":57,"author":{"gitId":"Samsation"},"content":"            Reward reward \u003d ParserUtil.parseReward(argMultimap.getValue(PREFIX_REWARD).get());","lastModifiedDate":"2022-10-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"Samsation"},"content":"            Customer customer \u003d new Customer(name, phone, email, birthdayMonth, reward, tagList);","lastModifiedDate":"2022-10-26"},{"lineNumber":61,"author":{"gitId":"Samsation"},"content":"            return new AddCommand(customer);","lastModifiedDate":"2022-10-26"},{"lineNumber":62,"author":{"gitId":"Samsation"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-10-30"},{"lineNumber":63,"author":{"gitId":"Samsation"},"content":"            throw new ParseException(Reward.MESSAGE_MAX_INTEGER);","lastModifiedDate":"2022-10-30"},{"lineNumber":64,"author":{"gitId":"Samsation"},"content":"        }","lastModifiedDate":"2022-10-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"Samsation":9,"TanWenCong":29,"-":37}},{"path":"src/main/java/seedu/boba/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.logic.parser;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"Samsation"},"content":"import static java.util.Objects.isNull;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"Samsation"},"content":"    private Prefix firstPrefix \u003d null;","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"Samsation"},"content":"    private boolean phoneIdentifier \u003d false;","lastModifiedDate":"2022-10-03"},{"lineNumber":28,"author":{"gitId":"Samsation"},"content":"    private boolean emailIdentifier \u003d false;","lastModifiedDate":"2022-10-03"},{"lineNumber":29,"author":{"gitId":"Samsation"},"content":"    private int prefixCount \u003d 0;","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"Samsation"},"content":"        if (isNull(firstPrefix) || firstPrefix.getPrefix().isEmpty()) {","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"Samsation"},"content":"            firstPrefix \u003d prefix;","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"Samsation"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"Samsation"},"content":"        if (prefix.equals(PREFIX_PHONE) \u0026\u0026 !emailIdentifier) {","lastModifiedDate":"2022-10-03"},{"lineNumber":43,"author":{"gitId":"Samsation"},"content":"            phoneIdentifier \u003d true;","lastModifiedDate":"2022-10-03"},{"lineNumber":44,"author":{"gitId":"Samsation"},"content":"        } else if (prefix.equals(PREFIX_EMAIL) \u0026\u0026 !phoneIdentifier) {","lastModifiedDate":"2022-10-03"},{"lineNumber":45,"author":{"gitId":"Samsation"},"content":"            emailIdentifier \u003d true;","lastModifiedDate":"2022-10-03"},{"lineNumber":46,"author":{"gitId":"Samsation"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"Samsation"},"content":"        prefixCount++;","lastModifiedDate":"2022-10-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":61,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":62,"author":{"gitId":"bensohh"},"content":"     * Checks if the {@code prefix} only occurs once in the user input.","lastModifiedDate":"2022-10-09"},{"lineNumber":63,"author":{"gitId":"bensohh"},"content":"     *","lastModifiedDate":"2022-10-09"},{"lineNumber":64,"author":{"gitId":"bensohh"},"content":"     * @param prefix the prefix to check against","lastModifiedDate":"2022-10-09"},{"lineNumber":65,"author":{"gitId":"bensohh"},"content":"     * @return true if the {@code prefix} only occurs once, otherwise return false","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":67,"author":{"gitId":"bensohh"},"content":"    public boolean isUniquePrefix(Prefix prefix) {","lastModifiedDate":"2022-10-09"},{"lineNumber":68,"author":{"gitId":"bensohh"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2022-10-09"},{"lineNumber":69,"author":{"gitId":"bensohh"},"content":"        return values.size() \u003d\u003d 1;","lastModifiedDate":"2022-10-09"},{"lineNumber":70,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":71,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":91,"author":{"gitId":"Samsation"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":92,"author":{"gitId":"Samsation"},"content":"     * Returns the first prefix input by the user.","lastModifiedDate":"2022-10-09"},{"lineNumber":93,"author":{"gitId":"Samsation"},"content":"     *","lastModifiedDate":"2022-10-09"},{"lineNumber":94,"author":{"gitId":"Samsation"},"content":"     * @return the first prefix input by the user.","lastModifiedDate":"2022-10-09"},{"lineNumber":95,"author":{"gitId":"Samsation"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":96,"author":{"gitId":"Samsation"},"content":"    public Prefix getFirstPrefix() {","lastModifiedDate":"2022-10-09"},{"lineNumber":97,"author":{"gitId":"Samsation"},"content":"        return this.firstPrefix;","lastModifiedDate":"2022-10-09"},{"lineNumber":98,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":99,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":100,"author":{"gitId":"Samsation"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":101,"author":{"gitId":"Samsation"},"content":"     * Returns if the phone number of a customer exists as an identifier.","lastModifiedDate":"2022-10-26"},{"lineNumber":102,"author":{"gitId":"Samsation"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":103,"author":{"gitId":"Samsation"},"content":"     * @return whether phone number exists as an identifier.","lastModifiedDate":"2022-10-05"},{"lineNumber":104,"author":{"gitId":"Samsation"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":105,"author":{"gitId":"Samsation"},"content":"    public boolean getPhoneIdentifier() {","lastModifiedDate":"2022-10-03"},{"lineNumber":106,"author":{"gitId":"Samsation"},"content":"        return phoneIdentifier;","lastModifiedDate":"2022-10-03"},{"lineNumber":107,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":108,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":109,"author":{"gitId":"Samsation"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":110,"author":{"gitId":"Samsation"},"content":"     * Returns if the email address of a customer exists as an identifier.","lastModifiedDate":"2022-10-26"},{"lineNumber":111,"author":{"gitId":"Samsation"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":112,"author":{"gitId":"Samsation"},"content":"     * @return whether email address exists as an identifier.","lastModifiedDate":"2022-10-05"},{"lineNumber":113,"author":{"gitId":"Samsation"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":114,"author":{"gitId":"Samsation"},"content":"    public boolean getEmailIdentifier() {","lastModifiedDate":"2022-10-03"},{"lineNumber":115,"author":{"gitId":"Samsation"},"content":"        return emailIdentifier;","lastModifiedDate":"2022-10-03"},{"lineNumber":116,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":117,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":118,"author":{"gitId":"Samsation"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":119,"author":{"gitId":"Samsation"},"content":"     * Returns number of prefixes found in the command.","lastModifiedDate":"2022-10-14"},{"lineNumber":120,"author":{"gitId":"Samsation"},"content":"     *","lastModifiedDate":"2022-10-14"},{"lineNumber":121,"author":{"gitId":"Samsation"},"content":"     * @return number of prefixes found in the command.","lastModifiedDate":"2022-10-14"},{"lineNumber":122,"author":{"gitId":"Samsation"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":123,"author":{"gitId":"Samsation"},"content":"    public int getPrefixCount() {","lastModifiedDate":"2022-10-14"},{"lineNumber":124,"author":{"gitId":"Samsation"},"content":"        return this.prefixCount;","lastModifiedDate":"2022-10-14"},{"lineNumber":125,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"Samsation":52,"TanWenCong":3,"bensohh":11,"-":60}},{"path":"src/main/java/seedu/boba/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.logic.parser;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"TanWenCong":1,"-":147}},{"path":"src/main/java/seedu/boba/logic/parser/BobaBotParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.logic.parser;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.logic.commands.AddCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.logic.commands.CalculateCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.logic.commands.CalculatorGuiCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.logic.commands.ClearCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.logic.commands.Command;","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.logic.commands.DecreaseCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.logic.commands.DeleteCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.logic.commands.EditCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.logic.commands.ExitCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.logic.commands.FindCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.logic.commands.HelpCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.logic.commands.IncreaseCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.logic.commands.ListCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.logic.commands.RedoCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.logic.commands.UndoCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"TanWenCong"},"content":"public class BobaBotParser {","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"Samsation"},"content":"        case IncreaseCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-24"},{"lineNumber":60,"author":{"gitId":"Samsation"},"content":"            return new IncreaseCommandParser().parse(arguments);","lastModifiedDate":"2022-10-24"},{"lineNumber":61,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":62,"author":{"gitId":"Samsation"},"content":"        case DecreaseCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-24"},{"lineNumber":63,"author":{"gitId":"Samsation"},"content":"            return new DecreaseCommandParser().parse(arguments);","lastModifiedDate":"2022-10-24"},{"lineNumber":64,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"bensohh"},"content":"        case UndoCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-25"},{"lineNumber":75,"author":{"gitId":"bensohh"},"content":"            return new UndoCommandParser().parse(arguments);","lastModifiedDate":"2022-10-25"},{"lineNumber":76,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":77,"author":{"gitId":"bensohh"},"content":"        case RedoCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-25"},{"lineNumber":78,"author":{"gitId":"bensohh"},"content":"            return new RedoCommandParser().parse(arguments);","lastModifiedDate":"2022-10-25"},{"lineNumber":79,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":80,"author":{"gitId":"WuHaohui1231"},"content":"        case CalculateCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-27"},{"lineNumber":81,"author":{"gitId":"WuHaohui1231"},"content":"            return new CalculateCommandParser().parse(arguments);","lastModifiedDate":"2022-10-27"},{"lineNumber":82,"author":{"gitId":"WuHaohui1231"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":92,"author":{"gitId":"WuHaohui1231"},"content":"        case CalculatorGuiCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-27"},{"lineNumber":93,"author":{"gitId":"WuHaohui1231"},"content":"            return new CalculatorGuiCommand();","lastModifiedDate":"2022-10-27"},{"lineNumber":94,"author":{"gitId":"WuHaohui1231"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Samsation":6,"TanWenCong":20,"bensohh":6,"-":62,"WuHaohui1231":6}},{"path":"src/main/java/seedu/boba/logic/parser/CalculateCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.logic.parser;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"WuHaohui1231"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.logic.commands.CalculateCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"WuHaohui1231"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"WuHaohui1231"},"content":"/**","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"WuHaohui1231"},"content":" * Parser for calculate command that create a calculator.","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"WuHaohui1231"},"content":" */","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"WuHaohui1231"},"content":"public class CalculateCommandParser implements Parser\u003cCalculateCommand\u003e {","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"WuHaohui1231"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"WuHaohui1231"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"WuHaohui1231"},"content":"    public CalculateCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"WuHaohui1231"},"content":"        return new CalculateCommand(userInput);","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"WuHaohui1231"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"WuHaohui1231"},"content":"}","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"TanWenCong":3,"WuHaohui1231":12}},{"path":"src/main/java/seedu/boba/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.logic.parser;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"TanWenCong"},"content":"    public static final Prefix PREFIX_BIRTHDAY_MONTH \u003d new Prefix(\"m/\");","lastModifiedDate":"2022-10-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"TanWenCong"},"content":"    public static final Prefix PREFIX_REWARD \u003d new Prefix(\"r/\");","lastModifiedDate":"2022-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"TanWenCong":3,"-":13}},{"path":"src/main/java/seedu/boba/logic/parser/DecreaseCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.logic.parser;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":3,"author":{"gitId":"Samsation"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-24"},{"lineNumber":4,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":8,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.logic.commands.DecreaseCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Email;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Phone;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"Samsation"},"content":"import seedu.boba.model.customer.Reward;","lastModifiedDate":"2022-10-30"},{"lineNumber":13,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":14,"author":{"gitId":"Samsation"},"content":"/**","lastModifiedDate":"2022-10-24"},{"lineNumber":15,"author":{"gitId":"Samsation"},"content":" * Parses input arguments and creates a new DecreaseCommand object","lastModifiedDate":"2022-10-24"},{"lineNumber":16,"author":{"gitId":"Samsation"},"content":" */","lastModifiedDate":"2022-10-24"},{"lineNumber":17,"author":{"gitId":"Samsation"},"content":"public class DecreaseCommandParser implements Parser\u003cDecreaseCommand\u003e {","lastModifiedDate":"2022-10-24"},{"lineNumber":18,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":19,"author":{"gitId":"Samsation"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":20,"author":{"gitId":"Samsation"},"content":"     * Parses the given {@code String} of arguments in the context of the DecreaseCommand","lastModifiedDate":"2022-10-24"},{"lineNumber":21,"author":{"gitId":"Samsation"},"content":"     * and returns an DecreaseCommand object for execution.","lastModifiedDate":"2022-10-24"},{"lineNumber":22,"author":{"gitId":"Samsation"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-24"},{"lineNumber":23,"author":{"gitId":"Samsation"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":24,"author":{"gitId":"Samsation"},"content":"    public DecreaseCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-24"},{"lineNumber":25,"author":{"gitId":"Samsation"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-10-24"},{"lineNumber":26,"author":{"gitId":"Samsation"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-10-24"},{"lineNumber":27,"author":{"gitId":"Samsation"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_PHONE, PREFIX_EMAIL);","lastModifiedDate":"2022-10-24"},{"lineNumber":28,"author":{"gitId":"Samsation"},"content":"        Phone phoneIdentifier \u003d null;","lastModifiedDate":"2022-10-24"},{"lineNumber":29,"author":{"gitId":"Samsation"},"content":"        Email emailIdentifier \u003d null;","lastModifiedDate":"2022-10-24"},{"lineNumber":30,"author":{"gitId":"Samsation"},"content":"        Prefix firstPrefix \u003d argMultimap.getFirstPrefix();","lastModifiedDate":"2022-10-24"},{"lineNumber":31,"author":{"gitId":"Samsation"},"content":"        String incrementReward;","lastModifiedDate":"2022-10-24"},{"lineNumber":32,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":33,"author":{"gitId":"Samsation"},"content":"        try {","lastModifiedDate":"2022-10-24"},{"lineNumber":34,"author":{"gitId":"Samsation"},"content":"            incrementReward \u003d argMultimap.getPreamble();","lastModifiedDate":"2022-10-24"},{"lineNumber":35,"author":{"gitId":"Samsation"},"content":"            if (incrementReward.isEmpty() || Integer.parseInt(incrementReward) \u003c 0) {","lastModifiedDate":"2022-10-24"},{"lineNumber":36,"author":{"gitId":"Samsation"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DecreaseCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-24"},{"lineNumber":37,"author":{"gitId":"Samsation"},"content":"            }","lastModifiedDate":"2022-10-24"},{"lineNumber":38,"author":{"gitId":"Samsation"},"content":"            if (!(firstPrefix.equals(PREFIX_PHONE) || firstPrefix.equals(PREFIX_EMAIL))) {","lastModifiedDate":"2022-10-24"},{"lineNumber":39,"author":{"gitId":"Samsation"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DecreaseCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-24"},{"lineNumber":40,"author":{"gitId":"Samsation"},"content":"            } else if (argMultimap.getPhoneIdentifier()) {","lastModifiedDate":"2022-10-24"},{"lineNumber":41,"author":{"gitId":"Samsation"},"content":"                if (argMultimap.getAllValues(PREFIX_PHONE).size() \u003d\u003d 1","lastModifiedDate":"2022-10-30"},{"lineNumber":42,"author":{"gitId":"Samsation"},"content":"                        \u0026\u0026 argMultimap.getAllValues(PREFIX_EMAIL).size() \u003d\u003d 0) {","lastModifiedDate":"2022-10-30"},{"lineNumber":43,"author":{"gitId":"Samsation"},"content":"                    phoneIdentifier \u003d ParserUtil.parsePhone(argMultimap.getAllValues(PREFIX_PHONE).get(0));","lastModifiedDate":"2022-10-24"},{"lineNumber":44,"author":{"gitId":"Samsation"},"content":"                } else {","lastModifiedDate":"2022-10-30"},{"lineNumber":45,"author":{"gitId":"Samsation"},"content":"                    throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-30"},{"lineNumber":46,"author":{"gitId":"Samsation"},"content":"                            DecreaseCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-30"},{"lineNumber":47,"author":{"gitId":"Samsation"},"content":"                }","lastModifiedDate":"2022-10-30"},{"lineNumber":48,"author":{"gitId":"Samsation"},"content":"            } else if (argMultimap.getEmailIdentifier()) {","lastModifiedDate":"2022-10-24"},{"lineNumber":49,"author":{"gitId":"Samsation"},"content":"                if (argMultimap.getAllValues(PREFIX_EMAIL).size() \u003d\u003d 1","lastModifiedDate":"2022-10-30"},{"lineNumber":50,"author":{"gitId":"Samsation"},"content":"                        \u0026\u0026 argMultimap.getAllValues(PREFIX_PHONE).size() \u003d\u003d 0) {","lastModifiedDate":"2022-10-30"},{"lineNumber":51,"author":{"gitId":"Samsation"},"content":"                    emailIdentifier \u003d ParserUtil.parseEmail(argMultimap.getAllValues(PREFIX_EMAIL).get(0));","lastModifiedDate":"2022-10-24"},{"lineNumber":52,"author":{"gitId":"Samsation"},"content":"                } else {","lastModifiedDate":"2022-10-30"},{"lineNumber":53,"author":{"gitId":"Samsation"},"content":"                    throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-30"},{"lineNumber":54,"author":{"gitId":"Samsation"},"content":"                            DecreaseCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-30"},{"lineNumber":55,"author":{"gitId":"Samsation"},"content":"                }","lastModifiedDate":"2022-10-30"},{"lineNumber":56,"author":{"gitId":"Samsation"},"content":"            }","lastModifiedDate":"2022-10-24"},{"lineNumber":57,"author":{"gitId":"Samsation"},"content":"        } catch (NumberFormatException ne) {","lastModifiedDate":"2022-10-24"},{"lineNumber":58,"author":{"gitId":"Samsation"},"content":"            throw new ParseException(Reward.MESSAGE_MAX_INTEGER);","lastModifiedDate":"2022-10-30"},{"lineNumber":59,"author":{"gitId":"Samsation"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":60,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":61,"author":{"gitId":"Samsation"},"content":"        return argMultimap.getPhoneIdentifier()","lastModifiedDate":"2022-10-24"},{"lineNumber":62,"author":{"gitId":"Samsation"},"content":"                ? new DecreaseCommand(phoneIdentifier, incrementReward)","lastModifiedDate":"2022-10-24"},{"lineNumber":63,"author":{"gitId":"Samsation"},"content":"                : new DecreaseCommand(emailIdentifier, incrementReward);","lastModifiedDate":"2022-10-24"},{"lineNumber":64,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":65,"author":{"gitId":"Samsation"},"content":"}","lastModifiedDate":"2022-10-24"}],"authorContributionMap":{"Samsation":57,"TanWenCong":8}},{"path":"src/main/java/seedu/boba/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.logic.parser;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.commons.core.Messages.MESSAGE_BOTH_EMAIL_AND_PHONE;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.commons.core.Messages.MESSAGE_EMPTY_EMAIL_AND_PHONE;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.commons.core.Messages.MESSAGE_NO_UNIQUE_PREFIX_IDENTIFIER;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"bensohh"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.logic.commands.DeleteCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Email;","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Phone;","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"bensohh"},"content":"            ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-10-03"},{"lineNumber":32,"author":{"gitId":"bensohh"},"content":"                    ArgumentTokenizer.tokenize(args, PREFIX_PHONE, PREFIX_EMAIL);","lastModifiedDate":"2022-10-03"},{"lineNumber":33,"author":{"gitId":"bensohh"},"content":"            DeleteCommand.DeletePersonDescriptor deletePersonDescriptor \u003d new DeleteCommand.DeletePersonDescriptor();","lastModifiedDate":"2022-10-03"},{"lineNumber":34,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":35,"author":{"gitId":"bensohh"},"content":"            boolean isBothEmpty \u003d !arePrefixesPresent(argMultimap, PREFIX_PHONE)","lastModifiedDate":"2022-10-03"},{"lineNumber":36,"author":{"gitId":"bensohh"},"content":"                    \u0026\u0026 !arePrefixesPresent(argMultimap, PREFIX_EMAIL);","lastModifiedDate":"2022-10-03"},{"lineNumber":37,"author":{"gitId":"bensohh"},"content":"            boolean isBothFilled \u003d arePrefixesPresent(argMultimap, PREFIX_PHONE)","lastModifiedDate":"2022-10-03"},{"lineNumber":38,"author":{"gitId":"bensohh"},"content":"                    \u0026\u0026 arePrefixesPresent(argMultimap, PREFIX_EMAIL);","lastModifiedDate":"2022-10-03"},{"lineNumber":39,"author":{"gitId":"bensohh"},"content":"            boolean isPrefixUnique \u003d arePrefixesPresent(argMultimap, PREFIX_PHONE)","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"bensohh"},"content":"                    ? argMultimap.isUniquePrefix(PREFIX_PHONE)","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"bensohh"},"content":"                    : argMultimap.isUniquePrefix(PREFIX_EMAIL);","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":43,"author":{"gitId":"bensohh"},"content":"            if (isBothEmpty) {","lastModifiedDate":"2022-10-21"},{"lineNumber":44,"author":{"gitId":"bensohh"},"content":"                throw new ParseException(String.format(MESSAGE_EMPTY_EMAIL_AND_PHONE, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-21"},{"lineNumber":45,"author":{"gitId":"bensohh"},"content":"            } else if (isBothFilled) {","lastModifiedDate":"2022-10-21"},{"lineNumber":46,"author":{"gitId":"bensohh"},"content":"                throw new ParseException(String.format(MESSAGE_BOTH_EMAIL_AND_PHONE, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-21"},{"lineNumber":47,"author":{"gitId":"bensohh"},"content":"            } else if (!argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-10-21"},{"lineNumber":48,"author":{"gitId":"bensohh"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-03"},{"lineNumber":49,"author":{"gitId":"bensohh"},"content":"            } else if (!isPrefixUnique) {","lastModifiedDate":"2022-10-21"},{"lineNumber":50,"author":{"gitId":"bensohh"},"content":"                throw new ParseException(String.format(MESSAGE_NO_UNIQUE_PREFIX_IDENTIFIER,","lastModifiedDate":"2022-10-21"},{"lineNumber":51,"author":{"gitId":"bensohh"},"content":"                        DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-21"},{"lineNumber":52,"author":{"gitId":"bensohh"},"content":"            } else if (arePrefixesPresent(argMultimap, PREFIX_PHONE)) {","lastModifiedDate":"2022-10-03"},{"lineNumber":53,"author":{"gitId":"bensohh"},"content":"                Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2022-10-03"},{"lineNumber":54,"author":{"gitId":"bensohh"},"content":"                deletePersonDescriptor.setPhone(phone);","lastModifiedDate":"2022-10-03"},{"lineNumber":55,"author":{"gitId":"bensohh"},"content":"            } else if (arePrefixesPresent(argMultimap, PREFIX_EMAIL)) {","lastModifiedDate":"2022-10-03"},{"lineNumber":56,"author":{"gitId":"bensohh"},"content":"                Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2022-10-03"},{"lineNumber":57,"author":{"gitId":"bensohh"},"content":"                deletePersonDescriptor.setEmail(email);","lastModifiedDate":"2022-10-03"},{"lineNumber":58,"author":{"gitId":"bensohh"},"content":"            }","lastModifiedDate":"2022-10-03"},{"lineNumber":59,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":60,"author":{"gitId":"bensohh"},"content":"            //Checks the assumption that either the Phone_Number or Email should be filled","lastModifiedDate":"2022-10-09"},{"lineNumber":61,"author":{"gitId":"bensohh"},"content":"            assert(deletePersonDescriptor.isAnyFilled());","lastModifiedDate":"2022-10-09"},{"lineNumber":62,"author":{"gitId":"bensohh"},"content":"            return new DeleteCommand(deletePersonDescriptor);","lastModifiedDate":"2022-10-03"},{"lineNumber":63,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":65,"author":{"gitId":"bensohh"},"content":"            throw new ParseException(pe.getMessage(), pe);","lastModifiedDate":"2022-10-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":70,"author":{"gitId":"bensohh"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-10-03"},{"lineNumber":71,"author":{"gitId":"bensohh"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-10-03"},{"lineNumber":72,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":73,"author":{"gitId":"bensohh"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-10-03"},{"lineNumber":74,"author":{"gitId":"bensohh"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-10-03"},{"lineNumber":75,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":76,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"TanWenCong":11,"bensohh":46,"-":20}},{"path":"src/main/java/seedu/boba/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.logic.parser;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.parser.CliSyntax.PREFIX_BIRTHDAY_MONTH;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.parser.CliSyntax.PREFIX_REWARD;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.logic.commands.EditCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Email;","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Phone;","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Reward;","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.tag.Tag;","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":38,"author":{"gitId":"TanWenCong"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2022-10-25"},{"lineNumber":39,"author":{"gitId":"TanWenCong"},"content":"                    PREFIX_BIRTHDAY_MONTH, PREFIX_REWARD, PREFIX_TAG);","lastModifiedDate":"2022-10-25"},{"lineNumber":40,"author":{"gitId":"Samsation"},"content":"        Phone phoneIdentifier \u003d null;","lastModifiedDate":"2022-10-03"},{"lineNumber":41,"author":{"gitId":"Samsation"},"content":"        Email emailIdentifier \u003d null;","lastModifiedDate":"2022-10-03"},{"lineNumber":42,"author":{"gitId":"Samsation"},"content":"        Prefix firstPrefix \u003d argMultimap.getFirstPrefix();","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"Samsation"},"content":"            if (!(firstPrefix.equals(PREFIX_PHONE) || firstPrefix.equals(PREFIX_EMAIL))) {","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"Samsation"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"Samsation"},"content":"            } else if (argMultimap.getPhoneIdentifier()) {","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"Samsation"},"content":"                phoneIdentifier \u003d ParserUtil.parsePhone(argMultimap.getAllValues(PREFIX_PHONE).get(0));","lastModifiedDate":"2022-10-02"},{"lineNumber":49,"author":{"gitId":"Samsation"},"content":"            } else if (argMultimap.getEmailIdentifier()) {","lastModifiedDate":"2022-10-03"},{"lineNumber":50,"author":{"gitId":"Samsation"},"content":"                emailIdentifier \u003d ParserUtil.parseEmail(argMultimap.getAllValues(PREFIX_EMAIL).get(0));","lastModifiedDate":"2022-10-03"},{"lineNumber":51,"author":{"gitId":"Samsation"},"content":"            }","lastModifiedDate":"2022-10-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":57,"author":{"gitId":"Samsation"},"content":"        if (argMultimap.getPrefixCount() \u003c\u003d 2) {","lastModifiedDate":"2022-10-14"},{"lineNumber":58,"author":{"gitId":"Samsation"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-10-14"},{"lineNumber":59,"author":{"gitId":"Samsation"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":60,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"Samsation"},"content":"            if (argMultimap.getAllValues(PREFIX_NAME).size() \u003d\u003d 1) {","lastModifiedDate":"2022-10-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"Samsation"},"content":"            } else {","lastModifiedDate":"2022-10-30"},{"lineNumber":65,"author":{"gitId":"Samsation"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-30"},{"lineNumber":66,"author":{"gitId":"Samsation"},"content":"            }","lastModifiedDate":"2022-10-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":68,"author":{"gitId":"Samsation"},"content":"        if (!argMultimap.getAllValues(PREFIX_PHONE).isEmpty()) {","lastModifiedDate":"2022-10-02"},{"lineNumber":69,"author":{"gitId":"Samsation"},"content":"            if (argMultimap.getAllValues(PREFIX_PHONE).size() \u003d\u003d 1) {","lastModifiedDate":"2022-10-02"},{"lineNumber":70,"author":{"gitId":"Samsation"},"content":"                editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getAllValues(PREFIX_PHONE).get(0)));","lastModifiedDate":"2022-10-02"},{"lineNumber":71,"author":{"gitId":"Samsation"},"content":"            } else if (argMultimap.getAllValues(PREFIX_PHONE).size() \u003d\u003d 2) {","lastModifiedDate":"2022-10-02"},{"lineNumber":72,"author":{"gitId":"Samsation"},"content":"                editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getAllValues(PREFIX_PHONE).get(1)));","lastModifiedDate":"2022-10-02"},{"lineNumber":73,"author":{"gitId":"Samsation"},"content":"            } else {","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"Samsation"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-07-10"},{"lineNumber":76,"author":{"gitId":"Samsation"},"content":"        }","lastModifiedDate":"2022-10-02"},{"lineNumber":77,"author":{"gitId":"Samsation"},"content":"        if (!argMultimap.getAllValues(PREFIX_EMAIL).isEmpty()) {","lastModifiedDate":"2022-10-03"},{"lineNumber":78,"author":{"gitId":"Samsation"},"content":"            if (argMultimap.getAllValues(PREFIX_EMAIL).size() \u003d\u003d 1) {","lastModifiedDate":"2022-10-03"},{"lineNumber":79,"author":{"gitId":"Samsation"},"content":"                editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getAllValues(PREFIX_EMAIL).get(0)));","lastModifiedDate":"2022-10-03"},{"lineNumber":80,"author":{"gitId":"Samsation"},"content":"            } else if (argMultimap.getAllValues(PREFIX_EMAIL).size() \u003d\u003d 2) {","lastModifiedDate":"2022-10-03"},{"lineNumber":81,"author":{"gitId":"Samsation"},"content":"                editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getAllValues(PREFIX_EMAIL).get(1)));","lastModifiedDate":"2022-10-03"},{"lineNumber":82,"author":{"gitId":"Samsation"},"content":"            } else {","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"Samsation"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"Samsation"},"content":"            }","lastModifiedDate":"2022-10-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":86,"author":{"gitId":"TanWenCong"},"content":"        if (argMultimap.getValue(PREFIX_BIRTHDAY_MONTH).isPresent()) {","lastModifiedDate":"2022-10-25"},{"lineNumber":87,"author":{"gitId":"Samsation"},"content":"            if (argMultimap.getAllValues(PREFIX_BIRTHDAY_MONTH).size() \u003d\u003d 1) {","lastModifiedDate":"2022-10-30"},{"lineNumber":88,"author":{"gitId":"TanWenCong"},"content":"                editPersonDescriptor.setBirthdayMonth(","lastModifiedDate":"2022-10-25"},{"lineNumber":89,"author":{"gitId":"TanWenCong"},"content":"                        ParserUtil.parseBirthdayMonth(argMultimap.getValue(PREFIX_BIRTHDAY_MONTH).get()));","lastModifiedDate":"2022-10-25"},{"lineNumber":90,"author":{"gitId":"Samsation"},"content":"            } else {","lastModifiedDate":"2022-10-30"},{"lineNumber":91,"author":{"gitId":"Samsation"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-30"},{"lineNumber":92,"author":{"gitId":"Samsation"},"content":"            }","lastModifiedDate":"2022-10-30"},{"lineNumber":93,"author":{"gitId":"TanWenCong"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":94,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":95,"author":{"gitId":"TanWenCong"},"content":"        if (argMultimap.getValue(PREFIX_REWARD).isPresent()) {","lastModifiedDate":"2022-09-25"},{"lineNumber":96,"author":{"gitId":"Samsation"},"content":"            try {","lastModifiedDate":"2022-10-24"},{"lineNumber":97,"author":{"gitId":"Samsation"},"content":"                int newReward \u003d Integer.parseInt(argMultimap.getValue(PREFIX_REWARD).get());","lastModifiedDate":"2022-10-24"},{"lineNumber":98,"author":{"gitId":"Samsation"},"content":"                if (newReward \u003c 0) {","lastModifiedDate":"2022-10-24"},{"lineNumber":99,"author":{"gitId":"Samsation"},"content":"                    throw new ParseException(Reward.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-24"},{"lineNumber":100,"author":{"gitId":"Samsation"},"content":"                }","lastModifiedDate":"2022-10-24"},{"lineNumber":101,"author":{"gitId":"Samsation"},"content":"                if (argMultimap.getAllValues(PREFIX_REWARD).size() \u003d\u003d 1) {","lastModifiedDate":"2022-10-30"},{"lineNumber":102,"author":{"gitId":"Samsation"},"content":"                    editPersonDescriptor.setReward(ParserUtil.parseReward(String.valueOf(newReward)));","lastModifiedDate":"2022-10-24"},{"lineNumber":103,"author":{"gitId":"Samsation"},"content":"                } else {","lastModifiedDate":"2022-10-30"},{"lineNumber":104,"author":{"gitId":"Samsation"},"content":"                    throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-30"},{"lineNumber":105,"author":{"gitId":"Samsation"},"content":"                }","lastModifiedDate":"2022-10-30"},{"lineNumber":106,"author":{"gitId":"Samsation"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2022-10-24"},{"lineNumber":107,"author":{"gitId":"Samsation"},"content":"                //throw new ParseException(\"Reward.MESSAGE_MAX_INTEGER\");","lastModifiedDate":"2022-10-30"},{"lineNumber":108,"author":{"gitId":"Samsation"},"content":"                throw new ParseException(Reward.MESSAGE_MAX_INTEGER);","lastModifiedDate":"2022-10-30"},{"lineNumber":109,"author":{"gitId":"Samsation"},"content":"            }","lastModifiedDate":"2022-10-24"},{"lineNumber":110,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":118,"author":{"gitId":"Samsation"},"content":"        return argMultimap.getPhoneIdentifier()","lastModifiedDate":"2022-10-03"},{"lineNumber":119,"author":{"gitId":"Samsation"},"content":"                ? new EditCommand(phoneIdentifier, editPersonDescriptor)","lastModifiedDate":"2022-10-03"},{"lineNumber":120,"author":{"gitId":"Samsation"},"content":"                : new EditCommand(emailIdentifier, editPersonDescriptor);","lastModifiedDate":"2022-10-03"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"Samsation":56,"TanWenCong":23,"-":59}},{"path":"src/main/java/seedu/boba/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.logic.parser;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"Samsation"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.logic.commands.EditCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.logic.commands.FindCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Email;","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.MultiSearchPredicate;","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Phone;","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"Samsation"},"content":"        try {","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"Samsation"},"content":"            ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"Samsation"},"content":"                    ArgumentTokenizer.tokenize(args, PREFIX_PHONE, PREFIX_EMAIL);","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"Samsation"},"content":"            FindCommand.FindPersonDescriptor findPersonDescriptor \u003d new FindCommand.FindPersonDescriptor();","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"Samsation"},"content":"            boolean isBothEmpty \u003d !arePrefixesPresent(argMultimap, PREFIX_PHONE)","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"Samsation"},"content":"                    \u0026\u0026 !arePrefixesPresent(argMultimap, PREFIX_EMAIL);","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"Samsation"},"content":"            boolean isBothFilled \u003d arePrefixesPresent(argMultimap, PREFIX_PHONE)","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"Samsation"},"content":"                    \u0026\u0026 arePrefixesPresent(argMultimap, PREFIX_EMAIL);","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"Samsation"},"content":"            if (isBothEmpty) {","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                            String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2017-01-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"albertZhangTJ"},"content":"                return new FindCommand(new MultiSearchPredicate((Arrays.asList(nameKeywords))));","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"Samsation"},"content":"            } else if (isBothFilled || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"Samsation"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"Samsation"},"content":"            } else if (arePrefixesPresent(argMultimap, PREFIX_PHONE)","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"Samsation"},"content":"                    \u0026\u0026 argMultimap.getAllValues(PREFIX_PHONE).size() \u003d\u003d 1) {","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"Samsation"},"content":"                Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"Samsation"},"content":"                findPersonDescriptor.setPhone(phone);","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"Samsation"},"content":"            } else if (arePrefixesPresent(argMultimap, PREFIX_EMAIL)","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"Samsation"},"content":"                    \u0026\u0026 argMultimap.getAllValues(PREFIX_EMAIL).size() \u003d\u003d 1) {","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"Samsation"},"content":"                Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"Samsation"},"content":"                findPersonDescriptor.setEmail(email);","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"Samsation"},"content":"            } else {","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"Samsation"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-01-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":59,"author":{"gitId":"Samsation"},"content":"            //Checks the assumption that either the Phone_Number or Email should be filled","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"Samsation"},"content":"            assert(findPersonDescriptor.isAnyFilled());","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"Samsation"},"content":"            return new FindCommand(findPersonDescriptor);","lastModifiedDate":"2022-10-09"},{"lineNumber":62,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":63,"author":{"gitId":"Samsation"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-09"},{"lineNumber":64,"author":{"gitId":"Samsation"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-09"},{"lineNumber":65,"author":{"gitId":"Samsation"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-09"},{"lineNumber":66,"author":{"gitId":"Samsation"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":67,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":68,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":69,"author":{"gitId":"Samsation"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":70,"author":{"gitId":"Samsation"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-10-09"},{"lineNumber":71,"author":{"gitId":"Samsation"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-10-09"},{"lineNumber":72,"author":{"gitId":"Samsation"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":73,"author":{"gitId":"Samsation"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-10-09"},{"lineNumber":74,"author":{"gitId":"Samsation"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-10-09"},{"lineNumber":75,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"Samsation":40,"TanWenCong":10,"albertZhangTJ":1,"-":25}},{"path":"src/main/java/seedu/boba/logic/parser/IncreaseCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.logic.parser;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":3,"author":{"gitId":"Samsation"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-24"},{"lineNumber":4,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":8,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.logic.commands.IncreaseCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Email;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Phone;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"Samsation"},"content":"import seedu.boba.model.customer.Reward;","lastModifiedDate":"2022-10-30"},{"lineNumber":13,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":14,"author":{"gitId":"Samsation"},"content":"/**","lastModifiedDate":"2022-10-24"},{"lineNumber":15,"author":{"gitId":"Samsation"},"content":" * Parses input arguments and creates a new IncreaseCommand object","lastModifiedDate":"2022-10-24"},{"lineNumber":16,"author":{"gitId":"Samsation"},"content":" */","lastModifiedDate":"2022-10-24"},{"lineNumber":17,"author":{"gitId":"Samsation"},"content":"public class IncreaseCommandParser implements Parser\u003cIncreaseCommand\u003e {","lastModifiedDate":"2022-10-24"},{"lineNumber":18,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":19,"author":{"gitId":"Samsation"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":20,"author":{"gitId":"Samsation"},"content":"     * Parses the given {@code String} of arguments in the context of the IncreaseCommand","lastModifiedDate":"2022-10-24"},{"lineNumber":21,"author":{"gitId":"Samsation"},"content":"     * and returns an IncreaseCommand object for execution.","lastModifiedDate":"2022-10-24"},{"lineNumber":22,"author":{"gitId":"Samsation"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-24"},{"lineNumber":23,"author":{"gitId":"Samsation"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":24,"author":{"gitId":"Samsation"},"content":"    public IncreaseCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-24"},{"lineNumber":25,"author":{"gitId":"Samsation"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-10-24"},{"lineNumber":26,"author":{"gitId":"Samsation"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-10-24"},{"lineNumber":27,"author":{"gitId":"Samsation"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_PHONE, PREFIX_EMAIL);","lastModifiedDate":"2022-10-24"},{"lineNumber":28,"author":{"gitId":"Samsation"},"content":"        Phone phoneIdentifier \u003d null;","lastModifiedDate":"2022-10-24"},{"lineNumber":29,"author":{"gitId":"Samsation"},"content":"        Email emailIdentifier \u003d null;","lastModifiedDate":"2022-10-24"},{"lineNumber":30,"author":{"gitId":"Samsation"},"content":"        Prefix firstPrefix \u003d argMultimap.getFirstPrefix();","lastModifiedDate":"2022-10-24"},{"lineNumber":31,"author":{"gitId":"Samsation"},"content":"        String incrementReward;","lastModifiedDate":"2022-10-24"},{"lineNumber":32,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":33,"author":{"gitId":"Samsation"},"content":"        try {","lastModifiedDate":"2022-10-24"},{"lineNumber":34,"author":{"gitId":"Samsation"},"content":"            incrementReward \u003d argMultimap.getPreamble();","lastModifiedDate":"2022-10-24"},{"lineNumber":35,"author":{"gitId":"Samsation"},"content":"            if (incrementReward.isEmpty() || Integer.parseInt(incrementReward) \u003c 0) {","lastModifiedDate":"2022-10-24"},{"lineNumber":36,"author":{"gitId":"Samsation"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, IncreaseCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-24"},{"lineNumber":37,"author":{"gitId":"Samsation"},"content":"            }","lastModifiedDate":"2022-10-24"},{"lineNumber":38,"author":{"gitId":"Samsation"},"content":"            if (!(firstPrefix.equals(PREFIX_PHONE) || firstPrefix.equals(PREFIX_EMAIL))) {","lastModifiedDate":"2022-10-24"},{"lineNumber":39,"author":{"gitId":"Samsation"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, IncreaseCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-24"},{"lineNumber":40,"author":{"gitId":"Samsation"},"content":"            } else if (argMultimap.getPhoneIdentifier()) {","lastModifiedDate":"2022-10-24"},{"lineNumber":41,"author":{"gitId":"Samsation"},"content":"                if (argMultimap.getAllValues(PREFIX_PHONE).size() \u003d\u003d 1","lastModifiedDate":"2022-10-30"},{"lineNumber":42,"author":{"gitId":"Samsation"},"content":"                        \u0026\u0026 argMultimap.getAllValues(PREFIX_EMAIL).size() \u003d\u003d 0) {","lastModifiedDate":"2022-10-30"},{"lineNumber":43,"author":{"gitId":"Samsation"},"content":"                    phoneIdentifier \u003d ParserUtil.parsePhone(argMultimap.getAllValues(PREFIX_PHONE).get(0));","lastModifiedDate":"2022-10-24"},{"lineNumber":44,"author":{"gitId":"Samsation"},"content":"                } else {","lastModifiedDate":"2022-10-30"},{"lineNumber":45,"author":{"gitId":"Samsation"},"content":"                    throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-30"},{"lineNumber":46,"author":{"gitId":"Samsation"},"content":"                            IncreaseCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-30"},{"lineNumber":47,"author":{"gitId":"Samsation"},"content":"                }","lastModifiedDate":"2022-10-30"},{"lineNumber":48,"author":{"gitId":"Samsation"},"content":"            } else if (argMultimap.getEmailIdentifier()) {","lastModifiedDate":"2022-10-24"},{"lineNumber":49,"author":{"gitId":"Samsation"},"content":"                if (argMultimap.getAllValues(PREFIX_EMAIL).size() \u003d\u003d 1","lastModifiedDate":"2022-10-30"},{"lineNumber":50,"author":{"gitId":"Samsation"},"content":"                        \u0026\u0026 argMultimap.getAllValues(PREFIX_PHONE).size() \u003d\u003d 0) {","lastModifiedDate":"2022-10-30"},{"lineNumber":51,"author":{"gitId":"Samsation"},"content":"                    emailIdentifier \u003d ParserUtil.parseEmail(argMultimap.getAllValues(PREFIX_EMAIL).get(0));","lastModifiedDate":"2022-10-24"},{"lineNumber":52,"author":{"gitId":"Samsation"},"content":"                } else {","lastModifiedDate":"2022-10-30"},{"lineNumber":53,"author":{"gitId":"Samsation"},"content":"                    throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-30"},{"lineNumber":54,"author":{"gitId":"Samsation"},"content":"                            IncreaseCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-30"},{"lineNumber":55,"author":{"gitId":"Samsation"},"content":"                }","lastModifiedDate":"2022-10-30"},{"lineNumber":56,"author":{"gitId":"Samsation"},"content":"            }","lastModifiedDate":"2022-10-24"},{"lineNumber":57,"author":{"gitId":"Samsation"},"content":"        } catch (NumberFormatException ne) {","lastModifiedDate":"2022-10-24"},{"lineNumber":58,"author":{"gitId":"Samsation"},"content":"            throw new ParseException(Reward.MESSAGE_MAX_INTEGER);","lastModifiedDate":"2022-10-30"},{"lineNumber":59,"author":{"gitId":"Samsation"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":60,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":61,"author":{"gitId":"Samsation"},"content":"        return argMultimap.getPhoneIdentifier()","lastModifiedDate":"2022-10-24"},{"lineNumber":62,"author":{"gitId":"Samsation"},"content":"                ? new IncreaseCommand(phoneIdentifier, incrementReward)","lastModifiedDate":"2022-10-24"},{"lineNumber":63,"author":{"gitId":"Samsation"},"content":"                : new IncreaseCommand(emailIdentifier, incrementReward);","lastModifiedDate":"2022-10-24"},{"lineNumber":64,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":65,"author":{"gitId":"Samsation"},"content":"}","lastModifiedDate":"2022-10-24"}],"authorContributionMap":{"Samsation":57,"TanWenCong":8}},{"path":"src/main/java/seedu/boba/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.logic.parser;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.logic.commands.Command;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"TanWenCong":3,"-":13}},{"path":"src/main/java/seedu/boba/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.logic.parser;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.commons.core.index.Index;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.commons.util.StringUtil;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.BirthdayMonth;","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Email;","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Name;","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Phone;","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Reward;","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.tag.Tag;","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"TanWenCong"},"content":"     * Parses a {@code String birthdayMonth} into an {@code BirthdayMonth}.","lastModifiedDate":"2022-10-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"TanWenCong"},"content":"     * @throws ParseException if the given {@code birthdayMonth} is invalid.","lastModifiedDate":"2022-10-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":75,"author":{"gitId":"TanWenCong"},"content":"    public static BirthdayMonth parseBirthdayMonth(String birthdayMonth) throws ParseException {","lastModifiedDate":"2022-10-24"},{"lineNumber":76,"author":{"gitId":"TanWenCong"},"content":"        requireNonNull(birthdayMonth);","lastModifiedDate":"2022-10-24"},{"lineNumber":77,"author":{"gitId":"TanWenCong"},"content":"        String trimmedBirthdayMonth \u003d birthdayMonth.trim();","lastModifiedDate":"2022-10-24"},{"lineNumber":78,"author":{"gitId":"TanWenCong"},"content":"        if (!BirthdayMonth.isValidBirthdayMonth(trimmedBirthdayMonth)) {","lastModifiedDate":"2022-10-24"},{"lineNumber":79,"author":{"gitId":"TanWenCong"},"content":"            throw new ParseException(BirthdayMonth.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":81,"author":{"gitId":"TanWenCong"},"content":"        return new BirthdayMonth(trimmedBirthdayMonth);","lastModifiedDate":"2022-10-24"},{"lineNumber":82,"author":{"gitId":"TanWenCong"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":83,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":84,"author":{"gitId":"TanWenCong"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":85,"author":{"gitId":"TanWenCong"},"content":"     * Parses a {@code String reward} into an {@code Reward}.","lastModifiedDate":"2022-10-24"},{"lineNumber":86,"author":{"gitId":"TanWenCong"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-24"},{"lineNumber":87,"author":{"gitId":"TanWenCong"},"content":"     *","lastModifiedDate":"2022-10-24"},{"lineNumber":88,"author":{"gitId":"TanWenCong"},"content":"     * @throws ParseException if the given {@code reward} is invalid.","lastModifiedDate":"2022-10-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"Samsation"},"content":"    public static Reward parseReward(String reward) throws ParseException {","lastModifiedDate":"2022-10-08"},{"lineNumber":91,"author":{"gitId":"Samsation"},"content":"        requireNonNull(reward);","lastModifiedDate":"2022-10-08"},{"lineNumber":92,"author":{"gitId":"Samsation"},"content":"        String trimmedReward \u003d reward.trim();","lastModifiedDate":"2022-10-08"},{"lineNumber":93,"author":{"gitId":"Samsation"},"content":"        if (!Reward.isValidReward(trimmedReward)) {","lastModifiedDate":"2022-10-08"},{"lineNumber":94,"author":{"gitId":"Samsation"},"content":"            throw new ParseException(Reward.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"Samsation"},"content":"        return new Reward(trimmedReward);","lastModifiedDate":"2022-10-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"Samsation":6,"TanWenCong":25,"-":109}},{"path":"src/main/java/seedu/boba/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.logic.parser;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Prefix)) {","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) obj;","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return otherPrefix.getPrefix().equals(getPrefix());","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"TanWenCong":1,"-":38}},{"path":"src/main/java/seedu/boba/logic/parser/RedoCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.logic.parser;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":3,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.commons.core.Messages;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.logic.commands.RedoCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"bensohh"},"content":"/**","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"bensohh"},"content":" * Parses input arguments and creates a new UndoCommand object","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"bensohh"},"content":" */","lastModifiedDate":"2022-10-25"},{"lineNumber":10,"author":{"gitId":"bensohh"},"content":"public class RedoCommandParser implements Parser\u003cRedoCommand\u003e {","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":12,"author":{"gitId":"bensohh"},"content":"     * Parses the given {@code String} of arguments in the context of the UndoCommand","lastModifiedDate":"2022-10-25"},{"lineNumber":13,"author":{"gitId":"bensohh"},"content":"     * and returns a UndoCommand object for execution.","lastModifiedDate":"2022-10-25"},{"lineNumber":14,"author":{"gitId":"bensohh"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-25"},{"lineNumber":15,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":16,"author":{"gitId":"bensohh"},"content":"    public RedoCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"bensohh"},"content":"        if (args.isEmpty()) {","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"bensohh"},"content":"            return new RedoCommand();","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"bensohh"},"content":"        } else {","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"bensohh"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, RedoCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-25"},{"lineNumber":21,"author":{"gitId":"bensohh"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":22,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":23,"author":{"gitId":"bensohh"},"content":"}","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"TanWenCong":4,"bensohh":19}},{"path":"src/main/java/seedu/boba/logic/parser/UndoCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.logic.parser;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":3,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.commons.core.Messages;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.logic.commands.UndoCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"bensohh"},"content":"/**","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"bensohh"},"content":" * Parses input arguments and creates a new UndoCommand object","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"bensohh"},"content":" */","lastModifiedDate":"2022-10-25"},{"lineNumber":10,"author":{"gitId":"bensohh"},"content":"public class UndoCommandParser implements Parser\u003cUndoCommand\u003e {","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":12,"author":{"gitId":"bensohh"},"content":"     * Parses the given {@code String} of arguments in the context of the UndoCommand","lastModifiedDate":"2022-10-25"},{"lineNumber":13,"author":{"gitId":"bensohh"},"content":"     * and returns a UndoCommand object for execution.","lastModifiedDate":"2022-10-25"},{"lineNumber":14,"author":{"gitId":"bensohh"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-25"},{"lineNumber":15,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":16,"author":{"gitId":"bensohh"},"content":"    public UndoCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"bensohh"},"content":"        if (args.isEmpty()) {","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"bensohh"},"content":"            return new UndoCommand();","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"bensohh"},"content":"        } else {","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"bensohh"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, UndoCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-25"},{"lineNumber":21,"author":{"gitId":"bensohh"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":22,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":23,"author":{"gitId":"bensohh"},"content":"}","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"TanWenCong":4,"bensohh":19}},{"path":"src/main/java/seedu/boba/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.logic.parser.exceptions;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"TanWenCong":2,"-":15}},{"path":"src/main/java/seedu/boba/model/BobaBot.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.model;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Customer;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Email;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Phone;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Reward;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.UniqueCustomerList;","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.exceptions.PersonNotFoundException;","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"TanWenCong"},"content":"public class BobaBot implements ReadOnlyBobaBot {","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"Samsation"},"content":"    private final UniqueCustomerList persons;","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"albertZhangTJ"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":30,"author":{"gitId":"albertZhangTJ"},"content":"    {","lastModifiedDate":"2022-10-28"},{"lineNumber":31,"author":{"gitId":"Samsation"},"content":"        persons \u003d new UniqueCustomerList();","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"albertZhangTJ"},"content":"    public BobaBot() {}","lastModifiedDate":"2022-10-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"TanWenCong"},"content":"     * Creates an BobaBot using the Persons in the {@code toBeCopied}","lastModifiedDate":"2022-10-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"TanWenCong"},"content":"    public BobaBot(ReadOnlyBobaBot toBeCopied) {","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"Samsation"},"content":"     * Replaces the contents of the customer list with {@code customers}.","lastModifiedDate":"2022-10-26"},{"lineNumber":48,"author":{"gitId":"Samsation"},"content":"     * {@code customers} must not contain duplicate customers.","lastModifiedDate":"2022-10-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"Samsation"},"content":"    public void setPersons(List\u003cCustomer\u003e customers) {","lastModifiedDate":"2022-10-26"},{"lineNumber":51,"author":{"gitId":"Samsation"},"content":"        this.persons.setPersons(customers);","lastModifiedDate":"2022-10-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"TanWenCong"},"content":"     * Resets the existing data of this {@code BobaBot} with {@code newData}.","lastModifiedDate":"2022-10-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"TanWenCong"},"content":"    public void resetData(ReadOnlyBobaBot newData) {","lastModifiedDate":"2022-10-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"Samsation"},"content":"    //// customer-level operations","lastModifiedDate":"2022-10-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"Samsation"},"content":"     * Returns true if a customer with the same identity as {@code customer} exists in the address book.","lastModifiedDate":"2022-10-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"Samsation"},"content":"    public boolean hasPerson(Customer customer) {","lastModifiedDate":"2022-10-26"},{"lineNumber":69,"author":{"gitId":"Samsation"},"content":"        requireNonNull(customer);","lastModifiedDate":"2022-10-26"},{"lineNumber":70,"author":{"gitId":"Samsation"},"content":"        return persons.contains(customer);","lastModifiedDate":"2022-10-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"Samsation"},"content":"     * Adds a customer to the address book.","lastModifiedDate":"2022-10-26"},{"lineNumber":75,"author":{"gitId":"Samsation"},"content":"     * The customer must not already exist in the address book.","lastModifiedDate":"2022-10-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"Samsation"},"content":"    public void addPerson(Customer p) {","lastModifiedDate":"2022-10-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":82,"author":{"gitId":"Samsation"},"content":"     * Replaces the given customer {@code target} in the list with {@code editedCustomer}.","lastModifiedDate":"2022-10-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"Samsation"},"content":"     * The customer identity of {@code editedCustomer} must not be the same as another existing customer","lastModifiedDate":"2022-10-26"},{"lineNumber":85,"author":{"gitId":"Samsation"},"content":"     * in the address book.","lastModifiedDate":"2022-10-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":87,"author":{"gitId":"Samsation"},"content":"    public void setPerson(Customer target, Customer editedCustomer) {","lastModifiedDate":"2022-10-26"},{"lineNumber":88,"author":{"gitId":"Samsation"},"content":"        requireNonNull(editedCustomer);","lastModifiedDate":"2022-10-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":90,"author":{"gitId":"Samsation"},"content":"        persons.setPerson(target, editedCustomer);","lastModifiedDate":"2022-10-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":94,"author":{"gitId":"TanWenCong"},"content":"     * Removes {@code key} from this {@code BobaBot}.","lastModifiedDate":"2022-10-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"Samsation"},"content":"    public void removePerson(Customer key) {","lastModifiedDate":"2022-10-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2018-04-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"Samsation"},"content":"    public ObservableList\u003cCustomer\u003e getPersonList() {","lastModifiedDate":"2022-10-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"TanWenCong"},"content":"                || (other instanceof BobaBot // instanceof handles nulls","lastModifiedDate":"2022-10-27"},{"lineNumber":118,"author":{"gitId":"TanWenCong"},"content":"                \u0026\u0026 persons.equals(((BobaBot) other).persons));","lastModifiedDate":"2022-10-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"albertZhangTJ"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":122,"author":{"gitId":"albertZhangTJ"},"content":"     * Compares if two BobaBot ledgers are strictly equals","lastModifiedDate":"2022-10-28"},{"lineNumber":123,"author":{"gitId":"albertZhangTJ"},"content":"     * @param other","lastModifiedDate":"2022-10-28"},{"lineNumber":124,"author":{"gitId":"albertZhangTJ"},"content":"     * @return","lastModifiedDate":"2022-10-28"},{"lineNumber":125,"author":{"gitId":"albertZhangTJ"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":126,"author":{"gitId":"albertZhangTJ"},"content":"    public boolean strictlyEquals(Object other) {","lastModifiedDate":"2022-10-28"},{"lineNumber":127,"author":{"gitId":"albertZhangTJ"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-28"},{"lineNumber":128,"author":{"gitId":"albertZhangTJ"},"content":"                || (other instanceof BobaBot // instanceof handles nulls","lastModifiedDate":"2022-10-28"},{"lineNumber":129,"author":{"gitId":"albertZhangTJ"},"content":"                \u0026\u0026 persons.strictlyEquals(((BobaBot) other).persons));","lastModifiedDate":"2022-10-28"},{"lineNumber":130,"author":{"gitId":"albertZhangTJ"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":131,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":136,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":137,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":138,"author":{"gitId":"Samsation"},"content":"     * Returns the index of the customer with the same phone number.","lastModifiedDate":"2022-10-26"},{"lineNumber":139,"author":{"gitId":"bensohh"},"content":"     *","lastModifiedDate":"2022-10-17"},{"lineNumber":140,"author":{"gitId":"bensohh"},"content":"     * @param phone Phone number to search","lastModifiedDate":"2022-10-17"},{"lineNumber":141,"author":{"gitId":"Samsation"},"content":"     * @return index of the customer with the same phone number","lastModifiedDate":"2022-10-26"},{"lineNumber":142,"author":{"gitId":"Samsation"},"content":"     * @throws PersonNotFoundException if no customer with corresponding phone number found","lastModifiedDate":"2022-10-26"},{"lineNumber":143,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":144,"author":{"gitId":"bensohh"},"content":"    public int findNum(Phone phone) throws PersonNotFoundException {","lastModifiedDate":"2022-10-09"},{"lineNumber":145,"author":{"gitId":"bensohh"},"content":"        return persons.findNum(phone);","lastModifiedDate":"2022-10-03"},{"lineNumber":146,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":147,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":148,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":149,"author":{"gitId":"Samsation"},"content":"     * Returns the index of the customer with the same email.","lastModifiedDate":"2022-10-26"},{"lineNumber":150,"author":{"gitId":"bensohh"},"content":"     *","lastModifiedDate":"2022-10-17"},{"lineNumber":151,"author":{"gitId":"bensohh"},"content":"     * @param email Email to search","lastModifiedDate":"2022-10-17"},{"lineNumber":152,"author":{"gitId":"Samsation"},"content":"     * @return index of the customer with the same email","lastModifiedDate":"2022-10-26"},{"lineNumber":153,"author":{"gitId":"Samsation"},"content":"     * @throws PersonNotFoundException if no customer with corresponding email found","lastModifiedDate":"2022-10-26"},{"lineNumber":154,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":155,"author":{"gitId":"bensohh"},"content":"    public int findEmail(Email email) throws PersonNotFoundException {","lastModifiedDate":"2022-10-09"},{"lineNumber":156,"author":{"gitId":"bensohh"},"content":"        return persons.findEmail(email);","lastModifiedDate":"2022-10-03"},{"lineNumber":157,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":158,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":159,"author":{"gitId":"Samsation"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":160,"author":{"gitId":"Samsation"},"content":"     * Returns the current Reward points of a Customer","lastModifiedDate":"2022-10-24"},{"lineNumber":161,"author":{"gitId":"Samsation"},"content":"     *","lastModifiedDate":"2022-10-24"},{"lineNumber":162,"author":{"gitId":"Samsation"},"content":"     * @param phone Phone number of the Customer of interest","lastModifiedDate":"2022-10-24"},{"lineNumber":163,"author":{"gitId":"Samsation"},"content":"     * @return the current Reward points of a Customer","lastModifiedDate":"2022-10-24"},{"lineNumber":164,"author":{"gitId":"Samsation"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":165,"author":{"gitId":"Samsation"},"content":"    public Reward getCurrentReward(Phone phone) {","lastModifiedDate":"2022-10-24"},{"lineNumber":166,"author":{"gitId":"Samsation"},"content":"        return persons.getCurrentReward(phone);","lastModifiedDate":"2022-10-24"},{"lineNumber":167,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":168,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":169,"author":{"gitId":"Samsation"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":170,"author":{"gitId":"Samsation"},"content":"     * Returns the current Reward points of a Customer","lastModifiedDate":"2022-10-24"},{"lineNumber":171,"author":{"gitId":"Samsation"},"content":"     *","lastModifiedDate":"2022-10-24"},{"lineNumber":172,"author":{"gitId":"Samsation"},"content":"     * @param email Email of the Customer of interest","lastModifiedDate":"2022-10-24"},{"lineNumber":173,"author":{"gitId":"Samsation"},"content":"     * @return the current Reward points of a Customer","lastModifiedDate":"2022-10-24"},{"lineNumber":174,"author":{"gitId":"Samsation"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":175,"author":{"gitId":"Samsation"},"content":"    public Reward getCurrentReward(Email email) {","lastModifiedDate":"2022-10-24"},{"lineNumber":176,"author":{"gitId":"Samsation"},"content":"        return persons.getCurrentReward(email);","lastModifiedDate":"2022-10-24"},{"lineNumber":177,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Samsation":48,"TanWenCong":15,"bensohh":16,"albertZhangTJ":14,"-":85}},{"path":"src/main/java/seedu/boba/model/BobaBotModel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.model;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"albertZhangTJ"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-31"},{"lineNumber":4,"author":{"gitId":"albertZhangTJ"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-31"},{"lineNumber":5,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"bensohh"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.commons.core.GuiSettings;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Customer;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Email;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Phone;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Reward;","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.exceptions.PersonNotFoundException;","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.exceptions.NextStateNotFoundException;","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.exceptions.PreviousStateNotFoundException;","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"albertZhangTJ"},"content":" * The API of the BobaBotModel component.","lastModifiedDate":"2022-10-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"albertZhangTJ"},"content":"public interface BobaBotModel {","lastModifiedDate":"2022-10-31"},{"lineNumber":21,"author":{"gitId":"albertZhangTJ"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2022-10-31"},{"lineNumber":22,"author":{"gitId":"Samsation"},"content":"    Predicate\u003cCustomer\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"TanWenCong"},"content":"    Path getBobaBotFilePath();","lastModifiedDate":"2022-10-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"TanWenCong"},"content":"    void setBobaBotFilePath(Path addressBookFilePath);","lastModifiedDate":"2022-10-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"TanWenCong"},"content":"     * Replaces address book data with the data in {@code bobaBot}.","lastModifiedDate":"2022-10-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"TanWenCong"},"content":"    void setBobaBot(ReadOnlyBobaBot bobaBot);","lastModifiedDate":"2022-10-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":59,"author":{"gitId":"albertZhangTJ"},"content":"    /** Returns the BobaBot */","lastModifiedDate":"2022-10-31"},{"lineNumber":60,"author":{"gitId":"TanWenCong"},"content":"    ReadOnlyBobaBot getBobaBot();","lastModifiedDate":"2022-10-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"Samsation"},"content":"     * Returns true if a customer with the same identity as {@code customer} exists in the address book.","lastModifiedDate":"2022-10-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"Samsation"},"content":"    boolean hasPerson(Customer customer);","lastModifiedDate":"2022-10-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"Samsation"},"content":"     * Deletes the given customer.","lastModifiedDate":"2022-10-26"},{"lineNumber":69,"author":{"gitId":"Samsation"},"content":"     * The customer must exist in the address book.","lastModifiedDate":"2022-10-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"Samsation"},"content":"    void deletePerson(Customer target);","lastModifiedDate":"2022-10-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"Samsation"},"content":"     * Adds the given customer.","lastModifiedDate":"2022-10-26"},{"lineNumber":75,"author":{"gitId":"Samsation"},"content":"     * {@code customer} must not already exist in the address book.","lastModifiedDate":"2022-10-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"Samsation"},"content":"    void addPerson(Customer customer);","lastModifiedDate":"2022-10-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":80,"author":{"gitId":"Samsation"},"content":"     * Replaces the given customer {@code target} with {@code editedCustomer}.","lastModifiedDate":"2022-10-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"Samsation"},"content":"     * The customer identity of {@code editedCustomer} must not be the same as another existing customer","lastModifiedDate":"2022-10-26"},{"lineNumber":83,"author":{"gitId":"Samsation"},"content":"     * in the address book.","lastModifiedDate":"2022-10-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":85,"author":{"gitId":"Samsation"},"content":"    void setPerson(Customer target, Customer editedCustomer);","lastModifiedDate":"2022-10-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":87,"author":{"gitId":"albertZhangTJ"},"content":"    /** Returns an unmodifiable view of the filtered customer list */","lastModifiedDate":"2022-10-31"},{"lineNumber":88,"author":{"gitId":"Samsation"},"content":"    ObservableList\u003cCustomer\u003e getFilteredPersonList();","lastModifiedDate":"2022-10-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":91,"author":{"gitId":"Samsation"},"content":"     * Updates the filter of the filtered customer list to filter by the given {@code predicate}.","lastModifiedDate":"2022-10-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":94,"author":{"gitId":"Samsation"},"content":"    void updateFilteredPersonList(Predicate\u003cCustomer\u003e predicate);","lastModifiedDate":"2022-10-26"},{"lineNumber":95,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":96,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":97,"author":{"gitId":"Samsation"},"content":"     * Returns the index of the customer with the same phone number.","lastModifiedDate":"2022-10-26"},{"lineNumber":98,"author":{"gitId":"bensohh"},"content":"     *","lastModifiedDate":"2022-10-03"},{"lineNumber":99,"author":{"gitId":"bensohh"},"content":"     * @param phone Phone number to search","lastModifiedDate":"2022-10-03"},{"lineNumber":100,"author":{"gitId":"Samsation"},"content":"     * @return index of the customer with the same phone number","lastModifiedDate":"2022-10-26"},{"lineNumber":101,"author":{"gitId":"Samsation"},"content":"     * @throws PersonNotFoundException if no customer with corresponding phone number found","lastModifiedDate":"2022-10-26"},{"lineNumber":102,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":103,"author":{"gitId":"bensohh"},"content":"    int findNum(Phone phone) throws PersonNotFoundException;","lastModifiedDate":"2022-10-09"},{"lineNumber":104,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":105,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":106,"author":{"gitId":"Samsation"},"content":"     * Returns the index of the customer with the same email.","lastModifiedDate":"2022-10-26"},{"lineNumber":107,"author":{"gitId":"bensohh"},"content":"     *","lastModifiedDate":"2022-10-03"},{"lineNumber":108,"author":{"gitId":"bensohh"},"content":"     * @param email Email to search","lastModifiedDate":"2022-10-03"},{"lineNumber":109,"author":{"gitId":"Samsation"},"content":"     * @return index of the customer with the same email","lastModifiedDate":"2022-10-26"},{"lineNumber":110,"author":{"gitId":"Samsation"},"content":"     * @throws PersonNotFoundException if no customer with corresponding email found","lastModifiedDate":"2022-10-26"},{"lineNumber":111,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":112,"author":{"gitId":"bensohh"},"content":"    int findEmail(Email email) throws PersonNotFoundException;","lastModifiedDate":"2022-10-09"},{"lineNumber":113,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":114,"author":{"gitId":"Samsation"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":115,"author":{"gitId":"Samsation"},"content":"     * Returns the current Reward points of a Customer","lastModifiedDate":"2022-10-24"},{"lineNumber":116,"author":{"gitId":"Samsation"},"content":"     *","lastModifiedDate":"2022-10-24"},{"lineNumber":117,"author":{"gitId":"Samsation"},"content":"     * @param phone Phone number of the Customer of interest","lastModifiedDate":"2022-10-24"},{"lineNumber":118,"author":{"gitId":"Samsation"},"content":"     * @return the current Reward points of a Customer","lastModifiedDate":"2022-10-24"},{"lineNumber":119,"author":{"gitId":"Samsation"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":120,"author":{"gitId":"Samsation"},"content":"    Reward getCurrentReward(Phone phone);","lastModifiedDate":"2022-10-24"},{"lineNumber":121,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":122,"author":{"gitId":"Samsation"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":123,"author":{"gitId":"Samsation"},"content":"     * Returns the current Reward points of a Customer","lastModifiedDate":"2022-10-24"},{"lineNumber":124,"author":{"gitId":"Samsation"},"content":"     *","lastModifiedDate":"2022-10-24"},{"lineNumber":125,"author":{"gitId":"Samsation"},"content":"     * @param email Email of the Customer of interest","lastModifiedDate":"2022-10-24"},{"lineNumber":126,"author":{"gitId":"Samsation"},"content":"     * @return the current Reward points of a Customer","lastModifiedDate":"2022-10-24"},{"lineNumber":127,"author":{"gitId":"Samsation"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":128,"author":{"gitId":"Samsation"},"content":"    Reward getCurrentReward(Email email);","lastModifiedDate":"2022-10-24"},{"lineNumber":129,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":130,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-11-01"},{"lineNumber":131,"author":{"gitId":"bensohh"},"content":"     * Retrieves the promotionList.","lastModifiedDate":"2022-11-01"},{"lineNumber":132,"author":{"gitId":"bensohh"},"content":"     *","lastModifiedDate":"2022-11-01"},{"lineNumber":133,"author":{"gitId":"bensohh"},"content":"     * @return an ObservableList consisting of the parsed promotion images","lastModifiedDate":"2022-11-01"},{"lineNumber":134,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-11-01"},{"lineNumber":135,"author":{"gitId":"bensohh"},"content":"    ObservableList\u003cImage\u003e getPromotionList();","lastModifiedDate":"2022-10-27"},{"lineNumber":136,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":137,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-11-01"},{"lineNumber":138,"author":{"gitId":"bensohh"},"content":"     * Parses all the image files stored in the folder indicated by the filepath.","lastModifiedDate":"2022-11-01"},{"lineNumber":139,"author":{"gitId":"bensohh"},"content":"     *","lastModifiedDate":"2022-11-01"},{"lineNumber":140,"author":{"gitId":"bensohh"},"content":"     * @param filePath String representation of the FilePath of the folder containing the promotion images","lastModifiedDate":"2022-11-01"},{"lineNumber":141,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-11-01"},{"lineNumber":142,"author":{"gitId":"bensohh"},"content":"    void parseAllPromotion(String filePath);","lastModifiedDate":"2022-10-27"},{"lineNumber":143,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":144,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-11-01"},{"lineNumber":145,"author":{"gitId":"bensohh"},"content":"     * Stores the current version of bobaBot into VersionedBobaBot.","lastModifiedDate":"2022-11-01"},{"lineNumber":146,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-11-01"},{"lineNumber":147,"author":{"gitId":"TanWenCong"},"content":"    void commitBobaBot();","lastModifiedDate":"2022-10-27"},{"lineNumber":148,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":149,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-11-01"},{"lineNumber":150,"author":{"gitId":"bensohh"},"content":"     * Retrieves the previous state/version of bobaBot from VersionedBobaBot.","lastModifiedDate":"2022-11-01"},{"lineNumber":151,"author":{"gitId":"bensohh"},"content":"     *","lastModifiedDate":"2022-11-01"},{"lineNumber":152,"author":{"gitId":"bensohh"},"content":"     * @throws PreviousStateNotFoundException if bobaBot is in the initialised state","lastModifiedDate":"2022-11-01"},{"lineNumber":153,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-11-01"},{"lineNumber":154,"author":{"gitId":"TanWenCong"},"content":"    void undoBobaBot() throws PreviousStateNotFoundException;","lastModifiedDate":"2022-10-27"},{"lineNumber":155,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":156,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-11-01"},{"lineNumber":157,"author":{"gitId":"bensohh"},"content":"     * Retrieves the state/version of bobaBot before the undoCommand from VersionedBobaBot.","lastModifiedDate":"2022-11-01"},{"lineNumber":158,"author":{"gitId":"bensohh"},"content":"     *","lastModifiedDate":"2022-11-01"},{"lineNumber":159,"author":{"gitId":"bensohh"},"content":"     * @throws NextStateNotFoundException if bobaBot is in the most updated state.","lastModifiedDate":"2022-11-01"},{"lineNumber":160,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-11-01"},{"lineNumber":161,"author":{"gitId":"TanWenCong"},"content":"    void redoBobaBot() throws NextStateNotFoundException;","lastModifiedDate":"2022-10-27"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"Samsation":38,"TanWenCong":17,"bensohh":43,"albertZhangTJ":8,"-":56}},{"path":"src/main/java/seedu/boba/model/BobaBotModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.model;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"albertZhangTJ"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-31"},{"lineNumber":4,"author":{"gitId":"albertZhangTJ"},"content":"import static seedu.boba.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-31"},{"lineNumber":5,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":6,"author":{"gitId":"albertZhangTJ"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-31"},{"lineNumber":7,"author":{"gitId":"albertZhangTJ"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-31"},{"lineNumber":8,"author":{"gitId":"albertZhangTJ"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-31"},{"lineNumber":9,"author":{"gitId":"albertZhangTJ"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-31"},{"lineNumber":10,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"bensohh"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.commons.core.GuiSettings;","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.commons.core.LogsCenter;","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Customer;","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Email;","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Phone;","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Reward;","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.exceptions.PersonNotFoundException;","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.exceptions.NextStateNotFoundException;","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.exceptions.PreviousStateNotFoundException;","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.promotion.Promotion;","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"albertZhangTJ"},"content":" * Represents the in-memory bobaBotModel of the address book data.","lastModifiedDate":"2022-10-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"albertZhangTJ"},"content":"public class BobaBotModelManager implements BobaBotModel {","lastModifiedDate":"2022-10-31"},{"lineNumber":29,"author":{"gitId":"albertZhangTJ"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(BobaBotModelManager.class);","lastModifiedDate":"2022-10-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"TanWenCong"},"content":"    private final VersionedBobaBot versionedBobaBot;","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"TanWenCong"},"content":"    private final BobaBot bobaBot;","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"Samsation"},"content":"    private final FilteredList\u003cCustomer\u003e filteredCustomers;","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"bensohh"},"content":"    private final Promotion promotionManager;","lastModifiedDate":"2022-10-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"albertZhangTJ"},"content":"     * Initializes a BobaBotModelManager with the given bobaBot and userPrefs.","lastModifiedDate":"2022-10-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"albertZhangTJ"},"content":"    public BobaBotModelManager(ReadOnlyBobaBot bobaBot, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2022-10-31"},{"lineNumber":41,"author":{"gitId":"TanWenCong"},"content":"        requireAllNonNull(bobaBot, userPrefs);","lastModifiedDate":"2022-10-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":43,"author":{"gitId":"TanWenCong"},"content":"        logger.fine(\"Initializing with bobaBot: \" + bobaBot + \" and user prefs \" + userPrefs);","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"Samsation"},"content":"        LocalDate currentDate \u003d LocalDate.now();","lastModifiedDate":"2022-10-26"},{"lineNumber":45,"author":{"gitId":"Samsation"},"content":"        String currentMonth \u003d String.valueOf(currentDate.getMonth().getValue());","lastModifiedDate":"2022-10-26"},{"lineNumber":46,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":47,"author":{"gitId":"TanWenCong"},"content":"        for (Customer customer : bobaBot.getPersonList()) {","lastModifiedDate":"2022-10-27"},{"lineNumber":48,"author":{"gitId":"Samsation"},"content":"            if (customer.getBirthdayMonth().value.equals(currentMonth)) {","lastModifiedDate":"2022-10-26"},{"lineNumber":49,"author":{"gitId":"Samsation"},"content":"                customer.addBirthdayTag();","lastModifiedDate":"2022-10-26"},{"lineNumber":50,"author":{"gitId":"Samsation"},"content":"            } else {","lastModifiedDate":"2022-10-26"},{"lineNumber":51,"author":{"gitId":"Samsation"},"content":"                customer.removeBirthdayTag();","lastModifiedDate":"2022-10-26"},{"lineNumber":52,"author":{"gitId":"Samsation"},"content":"            }","lastModifiedDate":"2022-10-26"},{"lineNumber":53,"author":{"gitId":"Samsation"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":54,"author":{"gitId":"TanWenCong"},"content":"        this.bobaBot \u003d new BobaBot(bobaBot);","lastModifiedDate":"2022-10-27"},{"lineNumber":55,"author":{"gitId":"TanWenCong"},"content":"        this.versionedBobaBot \u003d new VersionedBobaBot(bobaBot);","lastModifiedDate":"2022-10-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":57,"author":{"gitId":"TanWenCong"},"content":"        filteredCustomers \u003d new FilteredList\u003c\u003e(this.bobaBot.getPersonList());","lastModifiedDate":"2022-10-27"},{"lineNumber":58,"author":{"gitId":"bensohh"},"content":"        this.promotionManager \u003d new Promotion();","lastModifiedDate":"2022-10-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"albertZhangTJ"},"content":"    public BobaBotModelManager() {","lastModifiedDate":"2022-10-31"},{"lineNumber":62,"author":{"gitId":"TanWenCong"},"content":"        this(new BobaBot(), new UserPrefs());","lastModifiedDate":"2022-10-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"TanWenCong"},"content":"    public Path getBobaBotFilePath() {","lastModifiedDate":"2022-10-27"},{"lineNumber":91,"author":{"gitId":"TanWenCong"},"content":"        return userPrefs.getBobaBotFilePath();","lastModifiedDate":"2022-10-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"TanWenCong"},"content":"    public void setBobaBotFilePath(Path bobaBotFilePath) {","lastModifiedDate":"2022-10-27"},{"lineNumber":96,"author":{"gitId":"TanWenCong"},"content":"        requireNonNull(bobaBotFilePath);","lastModifiedDate":"2022-10-27"},{"lineNumber":97,"author":{"gitId":"TanWenCong"},"content":"        userPrefs.setBobaBotFilePath(bobaBotFilePath);","lastModifiedDate":"2022-10-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"TanWenCong"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d BobaBot \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":103,"author":{"gitId":"TanWenCong"},"content":"    public void setBobaBot(ReadOnlyBobaBot bobaBot) {","lastModifiedDate":"2022-10-27"},{"lineNumber":104,"author":{"gitId":"TanWenCong"},"content":"        this.bobaBot.resetData(bobaBot);","lastModifiedDate":"2022-10-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":108,"author":{"gitId":"TanWenCong"},"content":"    public ReadOnlyBobaBot getBobaBot() {","lastModifiedDate":"2022-10-27"},{"lineNumber":109,"author":{"gitId":"TanWenCong"},"content":"        return bobaBot;","lastModifiedDate":"2022-10-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":113,"author":{"gitId":"Samsation"},"content":"    public boolean hasPerson(Customer customer) {","lastModifiedDate":"2022-10-26"},{"lineNumber":114,"author":{"gitId":"Samsation"},"content":"        requireNonNull(customer);","lastModifiedDate":"2022-10-26"},{"lineNumber":115,"author":{"gitId":"TanWenCong"},"content":"        return bobaBot.hasPerson(customer);","lastModifiedDate":"2022-10-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":117,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":119,"author":{"gitId":"Samsation"},"content":"    public void deletePerson(Customer target) {","lastModifiedDate":"2022-10-26"},{"lineNumber":120,"author":{"gitId":"TanWenCong"},"content":"        bobaBot.removePerson(target);","lastModifiedDate":"2022-10-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":124,"author":{"gitId":"Samsation"},"content":"    public void addPerson(Customer customer) {","lastModifiedDate":"2022-10-26"},{"lineNumber":125,"author":{"gitId":"TanWenCong"},"content":"        bobaBot.addPerson(customer);","lastModifiedDate":"2022-10-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":130,"author":{"gitId":"Samsation"},"content":"    public void setPerson(Customer target, Customer editedCustomer) {","lastModifiedDate":"2022-10-26"},{"lineNumber":131,"author":{"gitId":"Samsation"},"content":"        requireAllNonNull(target, editedCustomer);","lastModifiedDate":"2022-10-26"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":133,"author":{"gitId":"TanWenCong"},"content":"        bobaBot.setPerson(target, editedCustomer);","lastModifiedDate":"2022-10-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":136,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-11-01"},{"lineNumber":137,"author":{"gitId":"bensohh"},"content":"     * Stores the current version of bobaBot into VersionedBobaBot.","lastModifiedDate":"2022-11-01"},{"lineNumber":138,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-11-01"},{"lineNumber":139,"author":{"gitId":"bensohh"},"content":"    @Override","lastModifiedDate":"2022-10-25"},{"lineNumber":140,"author":{"gitId":"TanWenCong"},"content":"    public void commitBobaBot() {","lastModifiedDate":"2022-10-27"},{"lineNumber":141,"author":{"gitId":"TanWenCong"},"content":"        versionedBobaBot.commit(this.bobaBot);","lastModifiedDate":"2022-10-27"},{"lineNumber":142,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":143,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":144,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-11-01"},{"lineNumber":145,"author":{"gitId":"bensohh"},"content":"     * Retrieves the previous state/version of bobaBot from VersionedBobaBot.","lastModifiedDate":"2022-11-01"},{"lineNumber":146,"author":{"gitId":"bensohh"},"content":"     *","lastModifiedDate":"2022-11-01"},{"lineNumber":147,"author":{"gitId":"bensohh"},"content":"     * @throws PreviousStateNotFoundException if bobaBot is in the initialised state","lastModifiedDate":"2022-11-01"},{"lineNumber":148,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-11-01"},{"lineNumber":149,"author":{"gitId":"bensohh"},"content":"    @Override","lastModifiedDate":"2022-10-25"},{"lineNumber":150,"author":{"gitId":"TanWenCong"},"content":"    public void undoBobaBot() throws PreviousStateNotFoundException {","lastModifiedDate":"2022-10-27"},{"lineNumber":151,"author":{"gitId":"TanWenCong"},"content":"        versionedBobaBot.undo(this.bobaBot);","lastModifiedDate":"2022-10-27"},{"lineNumber":152,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":153,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":154,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-11-01"},{"lineNumber":155,"author":{"gitId":"bensohh"},"content":"     * Retrieves the state/version of bobaBot before the undoCommand from VersionedBobaBot.","lastModifiedDate":"2022-11-01"},{"lineNumber":156,"author":{"gitId":"bensohh"},"content":"     *","lastModifiedDate":"2022-11-01"},{"lineNumber":157,"author":{"gitId":"bensohh"},"content":"     * @throws NextStateNotFoundException if bobaBot is in the most updated state.","lastModifiedDate":"2022-11-01"},{"lineNumber":158,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-11-01"},{"lineNumber":159,"author":{"gitId":"bensohh"},"content":"    @Override","lastModifiedDate":"2022-10-25"},{"lineNumber":160,"author":{"gitId":"TanWenCong"},"content":"    public void redoBobaBot() throws NextStateNotFoundException {","lastModifiedDate":"2022-10-27"},{"lineNumber":161,"author":{"gitId":"TanWenCong"},"content":"        versionedBobaBot.redo(this.bobaBot);","lastModifiedDate":"2022-10-27"},{"lineNumber":162,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":163,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":164,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":165,"author":{"gitId":"Samsation"},"content":"     * Returns the index of the customer with the same phone number.","lastModifiedDate":"2022-10-26"},{"lineNumber":166,"author":{"gitId":"bensohh"},"content":"     *","lastModifiedDate":"2022-10-17"},{"lineNumber":167,"author":{"gitId":"bensohh"},"content":"     * @param phone Phone number to search","lastModifiedDate":"2022-10-17"},{"lineNumber":168,"author":{"gitId":"Samsation"},"content":"     * @return index of the customer with the same phone number","lastModifiedDate":"2022-10-26"},{"lineNumber":169,"author":{"gitId":"Samsation"},"content":"     * @throws PersonNotFoundException if no customer with corresponding phone number found","lastModifiedDate":"2022-10-26"},{"lineNumber":170,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":171,"author":{"gitId":"bensohh"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":172,"author":{"gitId":"bensohh"},"content":"    public int findNum(Phone phone) throws PersonNotFoundException {","lastModifiedDate":"2022-10-09"},{"lineNumber":173,"author":{"gitId":"Samsation"},"content":"        requireNonNull(phone);","lastModifiedDate":"2022-10-05"},{"lineNumber":174,"author":{"gitId":"TanWenCong"},"content":"        return bobaBot.findNum(phone);","lastModifiedDate":"2022-10-27"},{"lineNumber":175,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":176,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":177,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":178,"author":{"gitId":"Samsation"},"content":"     * Returns the index of the customer with the same email.","lastModifiedDate":"2022-10-26"},{"lineNumber":179,"author":{"gitId":"bensohh"},"content":"     *","lastModifiedDate":"2022-10-17"},{"lineNumber":180,"author":{"gitId":"bensohh"},"content":"     * @param email Email to search","lastModifiedDate":"2022-10-17"},{"lineNumber":181,"author":{"gitId":"Samsation"},"content":"     * @return index of the customer with the same email","lastModifiedDate":"2022-10-26"},{"lineNumber":182,"author":{"gitId":"Samsation"},"content":"     * @throws PersonNotFoundException if no customer with corresponding email found","lastModifiedDate":"2022-10-26"},{"lineNumber":183,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":184,"author":{"gitId":"bensohh"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":185,"author":{"gitId":"bensohh"},"content":"    public int findEmail(Email email) throws PersonNotFoundException {","lastModifiedDate":"2022-10-09"},{"lineNumber":186,"author":{"gitId":"Samsation"},"content":"        requireNonNull(email);","lastModifiedDate":"2022-10-05"},{"lineNumber":187,"author":{"gitId":"TanWenCong"},"content":"        return bobaBot.findEmail(email);","lastModifiedDate":"2022-10-27"},{"lineNumber":188,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":189,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":190,"author":{"gitId":"Samsation"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":191,"author":{"gitId":"Samsation"},"content":"     * Returns the current Reward points of a Customer","lastModifiedDate":"2022-10-24"},{"lineNumber":192,"author":{"gitId":"Samsation"},"content":"     *","lastModifiedDate":"2022-10-24"},{"lineNumber":193,"author":{"gitId":"Samsation"},"content":"     * @param phone Phone number of the Customer of interest","lastModifiedDate":"2022-10-24"},{"lineNumber":194,"author":{"gitId":"Samsation"},"content":"     * @return the current Reward points of a Customer","lastModifiedDate":"2022-10-24"},{"lineNumber":195,"author":{"gitId":"Samsation"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":196,"author":{"gitId":"Samsation"},"content":"    @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":197,"author":{"gitId":"Samsation"},"content":"    public Reward getCurrentReward(Phone phone) {","lastModifiedDate":"2022-10-24"},{"lineNumber":198,"author":{"gitId":"Samsation"},"content":"        requireAllNonNull(phone);","lastModifiedDate":"2022-10-24"},{"lineNumber":199,"author":{"gitId":"TanWenCong"},"content":"        return bobaBot.getCurrentReward(phone);","lastModifiedDate":"2022-10-27"},{"lineNumber":200,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":201,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":202,"author":{"gitId":"Samsation"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":203,"author":{"gitId":"Samsation"},"content":"     * Returns the current Reward points of a Customer","lastModifiedDate":"2022-10-24"},{"lineNumber":204,"author":{"gitId":"Samsation"},"content":"     *","lastModifiedDate":"2022-10-24"},{"lineNumber":205,"author":{"gitId":"Samsation"},"content":"     * @param email Email of the Customer of interest","lastModifiedDate":"2022-10-24"},{"lineNumber":206,"author":{"gitId":"Samsation"},"content":"     * @return the current Reward points of a Customer","lastModifiedDate":"2022-10-24"},{"lineNumber":207,"author":{"gitId":"Samsation"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":208,"author":{"gitId":"Samsation"},"content":"    @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":209,"author":{"gitId":"Samsation"},"content":"    public Reward getCurrentReward(Email email) {","lastModifiedDate":"2022-10-24"},{"lineNumber":210,"author":{"gitId":"Samsation"},"content":"        requireAllNonNull(email);","lastModifiedDate":"2022-10-24"},{"lineNumber":211,"author":{"gitId":"TanWenCong"},"content":"        return bobaBot.getCurrentReward(email);","lastModifiedDate":"2022-10-27"},{"lineNumber":212,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":213,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":214,"author":{"gitId":"Samsation"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Customer List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-26"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":217,"author":{"gitId":"Samsation"},"content":"     * Returns an unmodifiable view of the list of {@code Customer} backed by the internal list of","lastModifiedDate":"2022-10-26"},{"lineNumber":218,"author":{"gitId":"TanWenCong"},"content":"     * {@code versionedBobaBot}","lastModifiedDate":"2022-10-27"},{"lineNumber":219,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":221,"author":{"gitId":"Samsation"},"content":"    public ObservableList\u003cCustomer\u003e getFilteredPersonList() {","lastModifiedDate":"2022-10-26"},{"lineNumber":222,"author":{"gitId":"Samsation"},"content":"        return filteredCustomers;","lastModifiedDate":"2022-10-26"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":226,"author":{"gitId":"Samsation"},"content":"    public void updateFilteredPersonList(Predicate\u003cCustomer\u003e predicate) {","lastModifiedDate":"2022-10-26"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":228,"author":{"gitId":"Samsation"},"content":"        filteredCustomers.setPredicate(predicate);","lastModifiedDate":"2022-10-26"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":231,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-11-01"},{"lineNumber":232,"author":{"gitId":"bensohh"},"content":"     * Retrieves the promotionList.","lastModifiedDate":"2022-11-01"},{"lineNumber":233,"author":{"gitId":"bensohh"},"content":"     *","lastModifiedDate":"2022-11-01"},{"lineNumber":234,"author":{"gitId":"bensohh"},"content":"     * @return an ObservableList consisting of the parsed promotion images","lastModifiedDate":"2022-11-01"},{"lineNumber":235,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-11-01"},{"lineNumber":236,"author":{"gitId":"bensohh"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":237,"author":{"gitId":"bensohh"},"content":"    public ObservableList\u003cImage\u003e getPromotionList() {","lastModifiedDate":"2022-10-27"},{"lineNumber":238,"author":{"gitId":"bensohh"},"content":"        return promotionManager.getPromotionList();","lastModifiedDate":"2022-10-27"},{"lineNumber":239,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":240,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":241,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-11-01"},{"lineNumber":242,"author":{"gitId":"bensohh"},"content":"     * Parses all the image files stored in the folder indicated by the filepath.","lastModifiedDate":"2022-11-01"},{"lineNumber":243,"author":{"gitId":"bensohh"},"content":"     *","lastModifiedDate":"2022-11-01"},{"lineNumber":244,"author":{"gitId":"bensohh"},"content":"     * @param filePath String representation of the FilePath of the folder containing the promotion images","lastModifiedDate":"2022-11-01"},{"lineNumber":245,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-11-01"},{"lineNumber":246,"author":{"gitId":"bensohh"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":247,"author":{"gitId":"bensohh"},"content":"    public void parseAllPromotion(String filePath) {","lastModifiedDate":"2022-10-27"},{"lineNumber":248,"author":{"gitId":"bensohh"},"content":"        promotionManager.parseAllPromotions(filePath);","lastModifiedDate":"2022-10-27"},{"lineNumber":249,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":250,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":255,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":259,"author":{"gitId":"albertZhangTJ"},"content":"        if (!(obj instanceof BobaBotModelManager)) {","lastModifiedDate":"2022-10-31"},{"lineNumber":260,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":264,"author":{"gitId":"albertZhangTJ"},"content":"        BobaBotModelManager other \u003d (BobaBotModelManager) obj;","lastModifiedDate":"2022-10-31"},{"lineNumber":265,"author":{"gitId":"TanWenCong"},"content":"        return bobaBot.equals(other.bobaBot)","lastModifiedDate":"2022-10-27"},{"lineNumber":266,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":267,"author":{"gitId":"Samsation"},"content":"                \u0026\u0026 filteredCustomers.equals(other.filteredCustomers);","lastModifiedDate":"2022-10-26"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":269,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Samsation":54,"TanWenCong":46,"bensohh":61,"albertZhangTJ":16,"-":92}},{"path":"src/main/java/seedu/boba/model/ReadOnlyBobaBot.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.model;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Customer;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"TanWenCong"},"content":"public interface ReadOnlyBobaBot {","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"Samsation"},"content":"    ObservableList\u003cCustomer\u003e getPersonList();","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Samsation":1,"TanWenCong":3,"-":13}},{"path":"src/main/java/seedu/boba/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.model;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.commons.core.GuiSettings;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"TanWenCong"},"content":"    Path getBobaBotFilePath();","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"TanWenCong":3,"-":13}},{"path":"src/main/java/seedu/boba/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.model;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.commons.core.GuiSettings;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"TanWenCong"},"content":"    private Path bobaBotFilePath \u003d Paths.get(\"data\" , \"bobabot.json\");","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"TanWenCong"},"content":"        setBobaBotFilePath(newUserPrefs.getBobaBotFilePath());","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"TanWenCong"},"content":"    public Path getBobaBotFilePath() {","lastModifiedDate":"2022-10-27"},{"lineNumber":51,"author":{"gitId":"TanWenCong"},"content":"        return bobaBotFilePath;","lastModifiedDate":"2022-10-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"TanWenCong"},"content":"    public void setBobaBotFilePath(Path bobaBotFilePath) {","lastModifiedDate":"2022-10-27"},{"lineNumber":55,"author":{"gitId":"TanWenCong"},"content":"        requireNonNull(bobaBotFilePath);","lastModifiedDate":"2022-10-27"},{"lineNumber":56,"author":{"gitId":"TanWenCong"},"content":"        this.bobaBotFilePath \u003d bobaBotFilePath;","lastModifiedDate":"2022-10-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"TanWenCong"},"content":"                \u0026\u0026 bobaBotFilePath.equals(o.bobaBotFilePath);","lastModifiedDate":"2022-10-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"TanWenCong"},"content":"        return Objects.hash(guiSettings, bobaBotFilePath);","lastModifiedDate":"2022-10-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"TanWenCong"},"content":"        sb.append(\"\\nLocal data file location : \" + bobaBotFilePath);","lastModifiedDate":"2022-10-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"TanWenCong":12,"-":75}},{"path":"src/main/java/seedu/boba/model/VersionedBobaBot.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.model;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"albertZhangTJ"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-11-01"},{"lineNumber":4,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"TanWenCong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"albertZhangTJ"},"content":"import seedu.boba.model.exceptions.NextStateNotFoundException;","lastModifiedDate":"2022-11-01"},{"lineNumber":8,"author":{"gitId":"albertZhangTJ"},"content":"import seedu.boba.model.exceptions.PreviousStateNotFoundException;","lastModifiedDate":"2022-11-01"},{"lineNumber":9,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"TanWenCong"},"content":"/**","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"TanWenCong"},"content":" * Keeps track of the current state of the BobaBot by storing multiple","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"TanWenCong"},"content":" * versions of the BobaBot after each successful command.","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"TanWenCong"},"content":" */","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"TanWenCong"},"content":"public class VersionedBobaBot extends BobaBot {","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"TanWenCong"},"content":"    // Keeps track of the current version of BobaBot","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"TanWenCong"},"content":"    private int currentStatePointer;","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"TanWenCong"},"content":"    // Maximum number of snapshots we take","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"TanWenCong"},"content":"    private int sizeLimit;","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"TanWenCong"},"content":"    // Stores the different versions of BobaBot","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"TanWenCong"},"content":"    private ArrayList\u003cReadOnlyBobaBot\u003e bobaBotStateList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"TanWenCong"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"TanWenCong"},"content":"     * Creates an instance of VersionedBobaBot.","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"TanWenCong"},"content":"     *","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"TanWenCong"},"content":"     * @param bobaBot BobaBot to be initialised as the first state","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"TanWenCong"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"TanWenCong"},"content":"    public VersionedBobaBot(ReadOnlyBobaBot bobaBot) {","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"albertZhangTJ"},"content":"        assert bobaBot !\u003d null;","lastModifiedDate":"2022-11-01"},{"lineNumber":31,"author":{"gitId":"TanWenCong"},"content":"        this.currentStatePointer \u003d 0;","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"TanWenCong"},"content":"        this.sizeLimit \u003d 20; // Default value","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"TanWenCong"},"content":"        bobaBotStateList.add(this.currentStatePointer, bobaBot);","lastModifiedDate":"2022-10-27"},{"lineNumber":34,"author":{"gitId":"TanWenCong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":36,"author":{"gitId":"TanWenCong"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"TanWenCong"},"content":"     * Creates an instance of VersionedBobaBot.","lastModifiedDate":"2022-10-27"},{"lineNumber":38,"author":{"gitId":"TanWenCong"},"content":"     *","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"TanWenCong"},"content":"     * @param bobaBot   BobaBot to be initialised as the first state","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"TanWenCong"},"content":"     * @param stepLimit maximum number of previous states tracked","lastModifiedDate":"2022-10-27"},{"lineNumber":41,"author":{"gitId":"TanWenCong"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":42,"author":{"gitId":"TanWenCong"},"content":"    public VersionedBobaBot(ReadOnlyBobaBot bobaBot, int stepLimit) {","lastModifiedDate":"2022-10-27"},{"lineNumber":43,"author":{"gitId":"albertZhangTJ"},"content":"        assert bobaBot !\u003d null;","lastModifiedDate":"2022-11-01"},{"lineNumber":44,"author":{"gitId":"TanWenCong"},"content":"        this.currentStatePointer \u003d 0;","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"TanWenCong"},"content":"        this.sizeLimit \u003d stepLimit; // Default value","lastModifiedDate":"2022-10-27"},{"lineNumber":46,"author":{"gitId":"TanWenCong"},"content":"        bobaBotStateList.add(this.currentStatePointer, bobaBot);","lastModifiedDate":"2022-10-27"},{"lineNumber":47,"author":{"gitId":"TanWenCong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":48,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":49,"author":{"gitId":"TanWenCong"},"content":"    private void trimStateList() {","lastModifiedDate":"2022-10-27"},{"lineNumber":50,"author":{"gitId":"TanWenCong"},"content":"        if (this.bobaBotStateList.size() \u003c\u003d this.sizeLimit) {","lastModifiedDate":"2022-10-27"},{"lineNumber":51,"author":{"gitId":"TanWenCong"},"content":"            return;","lastModifiedDate":"2022-10-27"},{"lineNumber":52,"author":{"gitId":"TanWenCong"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":53,"author":{"gitId":"TanWenCong"},"content":"        while (this.bobaBotStateList.size() \u003e this.sizeLimit) {","lastModifiedDate":"2022-10-27"},{"lineNumber":54,"author":{"gitId":"TanWenCong"},"content":"            this.bobaBotStateList.remove(0);","lastModifiedDate":"2022-10-27"},{"lineNumber":55,"author":{"gitId":"TanWenCong"},"content":"            this.currentStatePointer--;","lastModifiedDate":"2022-10-27"},{"lineNumber":56,"author":{"gitId":"TanWenCong"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":57,"author":{"gitId":"TanWenCong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":58,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":59,"author":{"gitId":"TanWenCong"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":60,"author":{"gitId":"TanWenCong"},"content":"     * Saves the current BobaBot state in its history.","lastModifiedDate":"2022-10-27"},{"lineNumber":61,"author":{"gitId":"TanWenCong"},"content":"     *","lastModifiedDate":"2022-10-27"},{"lineNumber":62,"author":{"gitId":"TanWenCong"},"content":"     * @param bobaBot BobaBot to save","lastModifiedDate":"2022-10-27"},{"lineNumber":63,"author":{"gitId":"TanWenCong"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":64,"author":{"gitId":"TanWenCong"},"content":"    public void commit(BobaBot bobaBot) {","lastModifiedDate":"2022-10-27"},{"lineNumber":65,"author":{"gitId":"TanWenCong"},"content":"        requireNonNull(bobaBot);","lastModifiedDate":"2022-10-27"},{"lineNumber":66,"author":{"gitId":"TanWenCong"},"content":"        BobaBot copiedBobaBot \u003d new BobaBot(bobaBot);","lastModifiedDate":"2022-10-27"},{"lineNumber":67,"author":{"gitId":"albertZhangTJ"},"content":"        if (!copiedBobaBot.strictlyEquals(this.bobaBotStateList.get(this.currentStatePointer))) {","lastModifiedDate":"2022-10-28"},{"lineNumber":68,"author":{"gitId":"albertZhangTJ"},"content":"            // prune away all previously stored redoable steps","lastModifiedDate":"2022-10-30"},{"lineNumber":69,"author":{"gitId":"albertZhangTJ"},"content":"            for (int i \u003d currentStatePointer + 1; i \u003c this.bobaBotStateList.size(); i++) {","lastModifiedDate":"2022-10-30"},{"lineNumber":70,"author":{"gitId":"albertZhangTJ"},"content":"                this.bobaBotStateList.remove(currentStatePointer + 1);","lastModifiedDate":"2022-10-30"},{"lineNumber":71,"author":{"gitId":"albertZhangTJ"},"content":"            }","lastModifiedDate":"2022-10-30"},{"lineNumber":72,"author":{"gitId":"TanWenCong"},"content":"            this.bobaBotStateList.add(copiedBobaBot);","lastModifiedDate":"2022-10-27"},{"lineNumber":73,"author":{"gitId":"TanWenCong"},"content":"            this.currentStatePointer++;","lastModifiedDate":"2022-10-27"},{"lineNumber":74,"author":{"gitId":"TanWenCong"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":75,"author":{"gitId":"TanWenCong"},"content":"        this.trimStateList();","lastModifiedDate":"2022-10-27"},{"lineNumber":76,"author":{"gitId":"TanWenCong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":77,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":78,"author":{"gitId":"TanWenCong"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":79,"author":{"gitId":"TanWenCong"},"content":"     * Restores the previous BobaBot state from its history.","lastModifiedDate":"2022-10-27"},{"lineNumber":80,"author":{"gitId":"TanWenCong"},"content":"     *","lastModifiedDate":"2022-10-27"},{"lineNumber":81,"author":{"gitId":"TanWenCong"},"content":"     * @param currentBobaBot BobaBot to set to the previous state","lastModifiedDate":"2022-10-27"},{"lineNumber":82,"author":{"gitId":"TanWenCong"},"content":"     * @throws PreviousStateNotFoundException if currentStatePointer is at the initialised state","lastModifiedDate":"2022-10-27"},{"lineNumber":83,"author":{"gitId":"TanWenCong"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":84,"author":{"gitId":"TanWenCong"},"content":"    public void undo(BobaBot currentBobaBot) throws PreviousStateNotFoundException {","lastModifiedDate":"2022-10-27"},{"lineNumber":85,"author":{"gitId":"TanWenCong"},"content":"        requireNonNull(currentBobaBot);","lastModifiedDate":"2022-10-27"},{"lineNumber":86,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":87,"author":{"gitId":"TanWenCong"},"content":"        if (this.currentStatePointer \u003c\u003d 0) {","lastModifiedDate":"2022-10-27"},{"lineNumber":88,"author":{"gitId":"TanWenCong"},"content":"            throw new PreviousStateNotFoundException();","lastModifiedDate":"2022-10-27"},{"lineNumber":89,"author":{"gitId":"TanWenCong"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":90,"author":{"gitId":"TanWenCong"},"content":"        this.currentStatePointer--;","lastModifiedDate":"2022-10-27"},{"lineNumber":91,"author":{"gitId":"TanWenCong"},"content":"        currentBobaBot.resetData(this.bobaBotStateList.get(this.currentStatePointer));","lastModifiedDate":"2022-10-27"},{"lineNumber":92,"author":{"gitId":"TanWenCong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":93,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":94,"author":{"gitId":"TanWenCong"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":95,"author":{"gitId":"TanWenCong"},"content":"     * Restores the previously undone BobaBot state from its history.","lastModifiedDate":"2022-10-27"},{"lineNumber":96,"author":{"gitId":"TanWenCong"},"content":"     *","lastModifiedDate":"2022-10-27"},{"lineNumber":97,"author":{"gitId":"TanWenCong"},"content":"     * @param currentBobaBot BobaBot to set to the before undone state","lastModifiedDate":"2022-10-27"},{"lineNumber":98,"author":{"gitId":"TanWenCong"},"content":"     * @throws NextStateNotFoundException if currentStatePointer is at the most updated state","lastModifiedDate":"2022-10-27"},{"lineNumber":99,"author":{"gitId":"TanWenCong"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":100,"author":{"gitId":"TanWenCong"},"content":"    public void redo(BobaBot currentBobaBot) throws NextStateNotFoundException {","lastModifiedDate":"2022-10-27"},{"lineNumber":101,"author":{"gitId":"TanWenCong"},"content":"        requireNonNull(currentBobaBot);","lastModifiedDate":"2022-10-27"},{"lineNumber":102,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":103,"author":{"gitId":"TanWenCong"},"content":"        int length \u003d this.bobaBotStateList.size();","lastModifiedDate":"2022-10-27"},{"lineNumber":104,"author":{"gitId":"TanWenCong"},"content":"        if (this.currentStatePointer + 1 \u003e\u003d length) {","lastModifiedDate":"2022-10-27"},{"lineNumber":105,"author":{"gitId":"TanWenCong"},"content":"            throw new NextStateNotFoundException();","lastModifiedDate":"2022-10-27"},{"lineNumber":106,"author":{"gitId":"TanWenCong"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":107,"author":{"gitId":"TanWenCong"},"content":"        this.currentStatePointer++;","lastModifiedDate":"2022-10-27"},{"lineNumber":108,"author":{"gitId":"TanWenCong"},"content":"        currentBobaBot.resetData(this.bobaBotStateList.get(this.currentStatePointer));","lastModifiedDate":"2022-10-27"},{"lineNumber":109,"author":{"gitId":"TanWenCong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":110,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":111,"author":{"gitId":"albertZhangTJ"},"content":"    /**","lastModifiedDate":"2022-10-30"},{"lineNumber":112,"author":{"gitId":"albertZhangTJ"},"content":"     * Compares if two VersionedBobaBot objects are equal","lastModifiedDate":"2022-10-30"},{"lineNumber":113,"author":{"gitId":"albertZhangTJ"},"content":"     *","lastModifiedDate":"2022-10-30"},{"lineNumber":114,"author":{"gitId":"albertZhangTJ"},"content":"     * @param other","lastModifiedDate":"2022-10-30"},{"lineNumber":115,"author":{"gitId":"albertZhangTJ"},"content":"     * @return boolean that represents whether the other object is considered equal to self","lastModifiedDate":"2022-10-30"},{"lineNumber":116,"author":{"gitId":"albertZhangTJ"},"content":"     */","lastModifiedDate":"2022-10-30"},{"lineNumber":117,"author":{"gitId":"albertZhangTJ"},"content":"    @Override","lastModifiedDate":"2022-10-30"},{"lineNumber":118,"author":{"gitId":"albertZhangTJ"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-30"},{"lineNumber":119,"author":{"gitId":"albertZhangTJ"},"content":"        if (other instanceof VersionedBobaBot) {","lastModifiedDate":"2022-10-30"},{"lineNumber":120,"author":{"gitId":"albertZhangTJ"},"content":"            VersionedBobaBot ot \u003d (VersionedBobaBot) other;","lastModifiedDate":"2022-10-30"},{"lineNumber":121,"author":{"gitId":"albertZhangTJ"},"content":"            return this.bobaBotStateList.equals(ot.bobaBotStateList)","lastModifiedDate":"2022-10-30"},{"lineNumber":122,"author":{"gitId":"albertZhangTJ"},"content":"                    \u0026\u0026 this.currentStatePointer \u003d\u003d ot.currentStatePointer","lastModifiedDate":"2022-10-30"},{"lineNumber":123,"author":{"gitId":"albertZhangTJ"},"content":"                    \u0026\u0026 this.sizeLimit \u003d\u003d ot.sizeLimit;","lastModifiedDate":"2022-10-30"},{"lineNumber":124,"author":{"gitId":"albertZhangTJ"},"content":"        }","lastModifiedDate":"2022-10-30"},{"lineNumber":125,"author":{"gitId":"albertZhangTJ"},"content":"        return false;","lastModifiedDate":"2022-10-30"},{"lineNumber":126,"author":{"gitId":"albertZhangTJ"},"content":"    }","lastModifiedDate":"2022-10-30"},{"lineNumber":127,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":128,"author":{"gitId":"albertZhangTJ"},"content":"    /**","lastModifiedDate":"2022-10-30"},{"lineNumber":129,"author":{"gitId":"albertZhangTJ"},"content":"     * Returns a String representing this object","lastModifiedDate":"2022-10-30"},{"lineNumber":130,"author":{"gitId":"albertZhangTJ"},"content":"     */","lastModifiedDate":"2022-10-30"},{"lineNumber":131,"author":{"gitId":"albertZhangTJ"},"content":"    @Override","lastModifiedDate":"2022-10-30"},{"lineNumber":132,"author":{"gitId":"albertZhangTJ"},"content":"    public String toString() {","lastModifiedDate":"2022-10-30"},{"lineNumber":133,"author":{"gitId":"albertZhangTJ"},"content":"        return \"VersionedBobaBot: \\n\"","lastModifiedDate":"2022-10-30"},{"lineNumber":134,"author":{"gitId":"albertZhangTJ"},"content":"                + \"    size limit: \" + this.sizeLimit + \"\\n\"","lastModifiedDate":"2022-10-30"},{"lineNumber":135,"author":{"gitId":"albertZhangTJ"},"content":"                + \"    current pointer: \" + this.currentStatePointer + \"\\n\"","lastModifiedDate":"2022-10-30"},{"lineNumber":136,"author":{"gitId":"albertZhangTJ"},"content":"                + this.bobaBotStateList.toString();","lastModifiedDate":"2022-10-30"},{"lineNumber":137,"author":{"gitId":"albertZhangTJ"},"content":"    }","lastModifiedDate":"2022-10-30"},{"lineNumber":138,"author":{"gitId":"TanWenCong"},"content":"}","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"TanWenCong":100,"albertZhangTJ":38}},{"path":"src/main/java/seedu/boba/model/customer/AllInfoContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.model.customer;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"albertZhangTJ"},"content":"import java.util.List;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"albertZhangTJ"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"albertZhangTJ"},"content":"/**","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"Samsation"},"content":" * Tests that a {@code Customer}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"albertZhangTJ"},"content":" */","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"Samsation"},"content":"public class AllInfoContainsKeywordsPredicate implements Predicate\u003cCustomer\u003e {","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"albertZhangTJ"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"albertZhangTJ"},"content":"    /**","lastModifiedDate":"2022-11-01"},{"lineNumber":14,"author":{"gitId":"albertZhangTJ"},"content":"     * Constructor for this class","lastModifiedDate":"2022-11-01"},{"lineNumber":15,"author":{"gitId":"albertZhangTJ"},"content":"     * @param keywords","lastModifiedDate":"2022-11-01"},{"lineNumber":16,"author":{"gitId":"albertZhangTJ"},"content":"     */","lastModifiedDate":"2022-11-01"},{"lineNumber":17,"author":{"gitId":"albertZhangTJ"},"content":"    public AllInfoContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"albertZhangTJ"},"content":"        assert keywords !\u003d null;","lastModifiedDate":"2022-11-01"},{"lineNumber":19,"author":{"gitId":"albertZhangTJ"},"content":"        if (keywords \u003d\u003d null) {","lastModifiedDate":"2022-11-01"},{"lineNumber":20,"author":{"gitId":"albertZhangTJ"},"content":"            throw new RuntimeException(\"Keyword list cannot be null\");","lastModifiedDate":"2022-11-01"},{"lineNumber":21,"author":{"gitId":"albertZhangTJ"},"content":"        }","lastModifiedDate":"2022-11-01"},{"lineNumber":22,"author":{"gitId":"albertZhangTJ"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"albertZhangTJ"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"albertZhangTJ"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"Samsation"},"content":"    public boolean test(Customer customer) {","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"Samsation"},"content":"        String allInfo \u003d customer.getAllInfo();","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"albertZhangTJ"},"content":"        for (String s : keywords) {","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"albertZhangTJ"},"content":"            if (allInfo.toLowerCase().contains(s.toLowerCase())) {","lastModifiedDate":"2022-10-30"},{"lineNumber":30,"author":{"gitId":"albertZhangTJ"},"content":"                return true;","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"albertZhangTJ"},"content":"            }","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"albertZhangTJ"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"albertZhangTJ"},"content":"        return false;","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"albertZhangTJ"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"albertZhangTJ"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"albertZhangTJ"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"albertZhangTJ"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"albertZhangTJ"},"content":"                || (other instanceof AllInfoContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"albertZhangTJ"},"content":"                \u0026\u0026 keywords.equals(((AllInfoContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"albertZhangTJ"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":42,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"albertZhangTJ"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"Samsation":4,"TanWenCong":1,"albertZhangTJ":38}},{"path":"src/main/java/seedu/boba/model/customer/BirthdayMonth.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.model.customer;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":3,"author":{"gitId":"TanWenCong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-24"},{"lineNumber":4,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":6,"author":{"gitId":"TanWenCong"},"content":"import java.nio.charset.StandardCharsets;","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"TanWenCong"},"content":"/**","lastModifiedDate":"2022-10-24"},{"lineNumber":9,"author":{"gitId":"Samsation"},"content":" * Represents a Customer\u0027s birthday in bobaBot.","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"TanWenCong"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidBirthdayMonth(String)}","lastModifiedDate":"2022-10-24"},{"lineNumber":11,"author":{"gitId":"TanWenCong"},"content":" */","lastModifiedDate":"2022-10-24"},{"lineNumber":12,"author":{"gitId":"TanWenCong"},"content":"public class BirthdayMonth {","lastModifiedDate":"2022-10-24"},{"lineNumber":13,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":14,"author":{"gitId":"TanWenCong"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Birthday month should not be blank. It should be between 1 - 12.\";","lastModifiedDate":"2022-10-24"},{"lineNumber":15,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":16,"author":{"gitId":"TanWenCong"},"content":"    /*","lastModifiedDate":"2022-10-24"},{"lineNumber":17,"author":{"gitId":"TanWenCong"},"content":"     * The first character of the birthdayMonth must not be a whitespace,","lastModifiedDate":"2022-10-24"},{"lineNumber":18,"author":{"gitId":"TanWenCong"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-10-24"},{"lineNumber":19,"author":{"gitId":"TanWenCong"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":20,"author":{"gitId":"TanWenCong"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2022-10-24"},{"lineNumber":21,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":22,"author":{"gitId":"TanWenCong"},"content":"    private static final String[] monthStrings \u003d {\"JAN\", \"FEB\", \"MAR\", \"APR\", \"MAY\", \"JUN\",","lastModifiedDate":"2022-10-24"},{"lineNumber":23,"author":{"gitId":"TanWenCong"},"content":"        \"JUL\", \"AUG\", \"SEP\", \"OCT\", \"NOV\", \"DEC\"};","lastModifiedDate":"2022-10-24"},{"lineNumber":24,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":25,"author":{"gitId":"TanWenCong"},"content":"    public final String value;","lastModifiedDate":"2022-10-24"},{"lineNumber":26,"author":{"gitId":"TanWenCong"},"content":"    public final String monthString;","lastModifiedDate":"2022-10-24"},{"lineNumber":27,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":28,"author":{"gitId":"TanWenCong"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":29,"author":{"gitId":"TanWenCong"},"content":"     * Constructs a {@code BirthdayMonth}.","lastModifiedDate":"2022-10-24"},{"lineNumber":30,"author":{"gitId":"TanWenCong"},"content":"     *","lastModifiedDate":"2022-10-24"},{"lineNumber":31,"author":{"gitId":"TanWenCong"},"content":"     * @param birthdayMonth A valid birthdayMonth.","lastModifiedDate":"2022-10-24"},{"lineNumber":32,"author":{"gitId":"TanWenCong"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":33,"author":{"gitId":"TanWenCong"},"content":"    public BirthdayMonth(String birthdayMonth) {","lastModifiedDate":"2022-10-24"},{"lineNumber":34,"author":{"gitId":"TanWenCong"},"content":"        requireNonNull(birthdayMonth);","lastModifiedDate":"2022-10-24"},{"lineNumber":35,"author":{"gitId":"TanWenCong"},"content":"        checkArgument(isValidBirthdayMonth(birthdayMonth), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-24"},{"lineNumber":36,"author":{"gitId":"TanWenCong"},"content":"        int integerValue \u003d Integer.valueOf(birthdayMonth);","lastModifiedDate":"2022-10-24"},{"lineNumber":37,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":38,"author":{"gitId":"TanWenCong"},"content":"        assert integerValue \u003e 0 \u0026\u0026 integerValue \u003c 13;","lastModifiedDate":"2022-10-24"},{"lineNumber":39,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // @@author tanwencong-reused","lastModifiedDate":"2022-11-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // Reused from https://stackoverflow.com/questions/22872484/javafx-how-can-i-display-emoji","lastModifiedDate":"2022-11-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // with minor modifications","lastModifiedDate":"2022-11-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Generate birthday cake emoji","lastModifiedDate":"2022-10-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        byte[] emojiByteCode \u003d new byte[] {(byte) 0xF0, (byte) 0x9F, (byte) 0x8E, (byte) 0x82};","lastModifiedDate":"2022-10-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        String emoji \u003d new String(emojiByteCode, StandardCharsets.UTF_8);","lastModifiedDate":"2022-10-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // @@author","lastModifiedDate":"2022-11-02"},{"lineNumber":47,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":48,"author":{"gitId":"TanWenCong"},"content":"        monthString \u003d emoji + \" \" + monthStrings[integerValue - 1];","lastModifiedDate":"2022-10-26"},{"lineNumber":49,"author":{"gitId":"TanWenCong"},"content":"        value \u003d String.valueOf(integerValue);","lastModifiedDate":"2022-10-24"},{"lineNumber":50,"author":{"gitId":"TanWenCong"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":51,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":52,"author":{"gitId":"TanWenCong"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":53,"author":{"gitId":"TanWenCong"},"content":"     * Returns true if a given string is a valid birthdayMonth.","lastModifiedDate":"2022-10-24"},{"lineNumber":54,"author":{"gitId":"TanWenCong"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":55,"author":{"gitId":"TanWenCong"},"content":"    public static boolean isValidBirthdayMonth(String test) {","lastModifiedDate":"2022-10-24"},{"lineNumber":56,"author":{"gitId":"TanWenCong"},"content":"        return test.matches(VALIDATION_REGEX) \u0026\u0026 isNumeric(test)","lastModifiedDate":"2022-10-24"},{"lineNumber":57,"author":{"gitId":"TanWenCong"},"content":"            \u0026\u0026 Integer.valueOf(test) \u003e 0 \u0026\u0026 Integer.valueOf(test) \u003c 13;","lastModifiedDate":"2022-10-24"},{"lineNumber":58,"author":{"gitId":"TanWenCong"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":59,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":60,"author":{"gitId":"TanWenCong"},"content":"    private static boolean isNumeric(String str) {","lastModifiedDate":"2022-10-24"},{"lineNumber":61,"author":{"gitId":"TanWenCong"},"content":"        try {","lastModifiedDate":"2022-10-24"},{"lineNumber":62,"author":{"gitId":"TanWenCong"},"content":"            Integer.parseInt(str);","lastModifiedDate":"2022-10-24"},{"lineNumber":63,"author":{"gitId":"TanWenCong"},"content":"            return true;","lastModifiedDate":"2022-10-24"},{"lineNumber":64,"author":{"gitId":"TanWenCong"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-10-24"},{"lineNumber":65,"author":{"gitId":"TanWenCong"},"content":"            return false;","lastModifiedDate":"2022-10-24"},{"lineNumber":66,"author":{"gitId":"TanWenCong"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":67,"author":{"gitId":"TanWenCong"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":68,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":69,"author":{"gitId":"TanWenCong"},"content":"    @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":70,"author":{"gitId":"TanWenCong"},"content":"    public String toString() {","lastModifiedDate":"2022-10-24"},{"lineNumber":71,"author":{"gitId":"TanWenCong"},"content":"        return value;","lastModifiedDate":"2022-10-24"},{"lineNumber":72,"author":{"gitId":"TanWenCong"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":73,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":74,"author":{"gitId":"TanWenCong"},"content":"    @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":75,"author":{"gitId":"TanWenCong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-24"},{"lineNumber":76,"author":{"gitId":"TanWenCong"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-24"},{"lineNumber":77,"author":{"gitId":"TanWenCong"},"content":"            || (other instanceof BirthdayMonth // instanceof handles nulls","lastModifiedDate":"2022-10-24"},{"lineNumber":78,"author":{"gitId":"TanWenCong"},"content":"            \u0026\u0026 value.equals(((BirthdayMonth) other).value)); // state check","lastModifiedDate":"2022-10-24"},{"lineNumber":79,"author":{"gitId":"TanWenCong"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":80,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":81,"author":{"gitId":"TanWenCong"},"content":"    @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":82,"author":{"gitId":"TanWenCong"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-24"},{"lineNumber":83,"author":{"gitId":"TanWenCong"},"content":"        return value.hashCode();","lastModifiedDate":"2022-10-24"},{"lineNumber":84,"author":{"gitId":"TanWenCong"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":85,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":86,"author":{"gitId":"TanWenCong"},"content":"}","lastModifiedDate":"2022-10-24"}],"authorContributionMap":{"Samsation":1,"TanWenCong":78,"-":7}},{"path":"src/main/java/seedu/boba/model/customer/Customer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.model.customer;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.tag.Tag;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"Samsation"},"content":" * Represents a Customer in the address book.","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"Samsation"},"content":"public class Customer {","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"Samsation"},"content":"    public static final Tag BIRTHDAY_TAG \u003d new Tag(\"BDAY\");","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"TanWenCong"},"content":"    private final BirthdayMonth birthdayMonth;","lastModifiedDate":"2022-10-24"},{"lineNumber":27,"author":{"gitId":"Samsation"},"content":"    private final Reward reward;","lastModifiedDate":"2022-10-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"Samsation"},"content":"    public Customer(Name name, Phone phone, Email email, BirthdayMonth birthdayMonth, Reward reward, Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"Samsation"},"content":"        requireAllNonNull(name, phone, email, reward, tags);","lastModifiedDate":"2022-10-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"TanWenCong"},"content":"        this.birthdayMonth \u003d birthdayMonth;","lastModifiedDate":"2022-10-24"},{"lineNumber":39,"author":{"gitId":"Samsation"},"content":"        this.reward \u003d reward;","lastModifiedDate":"2022-10-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"TanWenCong"},"content":"    public BirthdayMonth getBirthdayMonth() {","lastModifiedDate":"2022-10-24"},{"lineNumber":56,"author":{"gitId":"TanWenCong"},"content":"        return birthdayMonth;","lastModifiedDate":"2022-10-24"},{"lineNumber":57,"author":{"gitId":"TanWenCong"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":58,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":59,"author":{"gitId":"Samsation"},"content":"    public Reward getReward() {","lastModifiedDate":"2022-10-08"},{"lineNumber":60,"author":{"gitId":"Samsation"},"content":"        return reward;","lastModifiedDate":"2022-10-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"Samsation"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":72,"author":{"gitId":"Samsation"},"content":"     * Adds a birthday tag to a Customer.","lastModifiedDate":"2022-10-26"},{"lineNumber":73,"author":{"gitId":"Samsation"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":74,"author":{"gitId":"Samsation"},"content":"    public void addBirthdayTag() {","lastModifiedDate":"2022-10-26"},{"lineNumber":75,"author":{"gitId":"Samsation"},"content":"        if (!tags.contains(BIRTHDAY_TAG)) {","lastModifiedDate":"2022-10-26"},{"lineNumber":76,"author":{"gitId":"Samsation"},"content":"            this.tags.add(BIRTHDAY_TAG);","lastModifiedDate":"2022-10-26"},{"lineNumber":77,"author":{"gitId":"Samsation"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":78,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":79,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":80,"author":{"gitId":"Samsation"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":81,"author":{"gitId":"Samsation"},"content":"     * Removes the birthday tag from a Customer (if any).","lastModifiedDate":"2022-10-26"},{"lineNumber":82,"author":{"gitId":"Samsation"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":83,"author":{"gitId":"Samsation"},"content":"    public void removeBirthdayTag() {","lastModifiedDate":"2022-10-26"},{"lineNumber":84,"author":{"gitId":"Samsation"},"content":"        this.tags.remove(BIRTHDAY_TAG);","lastModifiedDate":"2022-10-26"},{"lineNumber":85,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":86,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"TanWenCong"},"content":"     * Returns true if both persons have the same phone number or email address.","lastModifiedDate":"2022-10-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"Samsation"},"content":"    public boolean isSamePerson(Customer otherCustomer) {","lastModifiedDate":"2022-10-26"},{"lineNumber":92,"author":{"gitId":"Samsation"},"content":"        if (otherCustomer \u003d\u003d this) {","lastModifiedDate":"2022-10-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"Samsation"},"content":"        return otherCustomer !\u003d null","lastModifiedDate":"2022-10-26"},{"lineNumber":97,"author":{"gitId":"Samsation"},"content":"                \u0026\u0026 (otherCustomer.getPhone().equals(getPhone())","lastModifiedDate":"2022-10-26"},{"lineNumber":98,"author":{"gitId":"Samsation"},"content":"                || otherCustomer.getEmail().equals(getEmail()));","lastModifiedDate":"2022-10-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":101,"author":{"gitId":"albertZhangTJ"},"content":"    public String getAllInfo() {","lastModifiedDate":"2022-10-06"},{"lineNumber":102,"author":{"gitId":"albertZhangTJ"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-10-06"},{"lineNumber":103,"author":{"gitId":"albertZhangTJ"},"content":"        builder.append(getName() + \"\\n\")","lastModifiedDate":"2022-10-30"},{"lineNumber":104,"author":{"gitId":"albertZhangTJ"},"content":"                .append(getPhone() + \"\\n\")","lastModifiedDate":"2022-10-30"},{"lineNumber":105,"author":{"gitId":"albertZhangTJ"},"content":"                .append(getEmail() + \"\\n\")","lastModifiedDate":"2022-10-30"},{"lineNumber":106,"author":{"gitId":"albertZhangTJ"},"content":"                .append(getBirthdayMonth() + \"\\n\")","lastModifiedDate":"2022-10-30"},{"lineNumber":107,"author":{"gitId":"albertZhangTJ"},"content":"                .append(getReward() + \"\\n\");","lastModifiedDate":"2022-10-30"},{"lineNumber":108,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":109,"author":{"gitId":"albertZhangTJ"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2022-10-06"},{"lineNumber":110,"author":{"gitId":"albertZhangTJ"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2022-10-06"},{"lineNumber":111,"author":{"gitId":"albertZhangTJ"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2022-10-06"},{"lineNumber":112,"author":{"gitId":"albertZhangTJ"},"content":"            builder.append(\"\\n\");","lastModifiedDate":"2022-10-30"},{"lineNumber":113,"author":{"gitId":"albertZhangTJ"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":114,"author":{"gitId":"albertZhangTJ"},"content":"        return builder.toString();","lastModifiedDate":"2022-10-06"},{"lineNumber":115,"author":{"gitId":"albertZhangTJ"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":116,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":118,"author":{"gitId":"Samsation"},"content":"     * Returns true if both persons have the same identity and phone number/ email address.","lastModifiedDate":"2022-10-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":123,"author":{"gitId":"albertZhangTJ"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-28"},{"lineNumber":124,"author":{"gitId":"albertZhangTJ"},"content":"            return true;","lastModifiedDate":"2022-10-28"},{"lineNumber":125,"author":{"gitId":"albertZhangTJ"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":126,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":127,"author":{"gitId":"Samsation"},"content":"        if (!(other instanceof Customer)) {","lastModifiedDate":"2022-10-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":131,"author":{"gitId":"albertZhangTJ"},"content":"        Customer otherCustomer \u003d (Customer) other;","lastModifiedDate":"2022-10-28"},{"lineNumber":132,"author":{"gitId":"albertZhangTJ"},"content":"        return otherCustomer.getPhone().equals(getPhone())","lastModifiedDate":"2022-10-28"},{"lineNumber":133,"author":{"gitId":"albertZhangTJ"},"content":"                || otherCustomer.getEmail().equals(getEmail());","lastModifiedDate":"2022-10-28"},{"lineNumber":134,"author":{"gitId":"albertZhangTJ"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":135,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":136,"author":{"gitId":"albertZhangTJ"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":137,"author":{"gitId":"albertZhangTJ"},"content":"     * Compares if two Customers are strictly equals","lastModifiedDate":"2022-10-28"},{"lineNumber":138,"author":{"gitId":"albertZhangTJ"},"content":"     * two customers are strictly equals if all of their attributes are the same","lastModifiedDate":"2022-10-28"},{"lineNumber":139,"author":{"gitId":"albertZhangTJ"},"content":"     *","lastModifiedDate":"2022-10-30"},{"lineNumber":140,"author":{"gitId":"albertZhangTJ"},"content":"     * @param other","lastModifiedDate":"2022-10-28"},{"lineNumber":141,"author":{"gitId":"albertZhangTJ"},"content":"     * @return","lastModifiedDate":"2022-10-28"},{"lineNumber":142,"author":{"gitId":"albertZhangTJ"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":143,"author":{"gitId":"albertZhangTJ"},"content":"    public boolean strictlyEquals(Object other) {","lastModifiedDate":"2022-10-28"},{"lineNumber":144,"author":{"gitId":"albertZhangTJ"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-28"},{"lineNumber":145,"author":{"gitId":"albertZhangTJ"},"content":"            return true;","lastModifiedDate":"2022-10-28"},{"lineNumber":146,"author":{"gitId":"albertZhangTJ"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":147,"author":{"gitId":"albertZhangTJ"},"content":"        if (!(other instanceof Customer)) {","lastModifiedDate":"2022-10-28"},{"lineNumber":148,"author":{"gitId":"albertZhangTJ"},"content":"            return false;","lastModifiedDate":"2022-10-28"},{"lineNumber":149,"author":{"gitId":"albertZhangTJ"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":150,"author":{"gitId":"Samsation"},"content":"        Customer otherCustomer \u003d (Customer) other;","lastModifiedDate":"2022-10-26"},{"lineNumber":151,"author":{"gitId":"albertZhangTJ"},"content":"        return otherCustomer.getAllInfo().equals(getAllInfo());","lastModifiedDate":"2022-10-28"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":157,"author":{"gitId":"TanWenCong"},"content":"        return Objects.hash(name, phone, email, birthdayMonth, reward, tags);","lastModifiedDate":"2022-10-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":164,"author":{"gitId":"TanWenCong"},"content":"                .append(\"\\nPhone: \")","lastModifiedDate":"2022-10-14"},{"lineNumber":165,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":166,"author":{"gitId":"TanWenCong"},"content":"                .append(\"\\nEmail: \")","lastModifiedDate":"2022-10-14"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":168,"author":{"gitId":"TanWenCong"},"content":"                .append(\"\\nBirthday Month: \")","lastModifiedDate":"2022-10-24"},{"lineNumber":169,"author":{"gitId":"TanWenCong"},"content":"                .append(getBirthdayMonth())","lastModifiedDate":"2022-10-24"},{"lineNumber":170,"author":{"gitId":"TanWenCong"},"content":"                .append(\"\\nReward: \")","lastModifiedDate":"2022-10-14"},{"lineNumber":171,"author":{"gitId":"Samsation"},"content":"                .append(getReward());","lastModifiedDate":"2022-10-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":175,"author":{"gitId":"TanWenCong"},"content":"            builder.append(\"\\nTags: \");","lastModifiedDate":"2022-10-14"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Samsation":35,"TanWenCong":17,"albertZhangTJ":40,"-":89}},{"path":"src/main/java/seedu/boba/model/customer/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.model.customer;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"TanWenCong"},"content":"import java.nio.charset.StandardCharsets;","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"Samsation"},"content":" * Represents a Customer\u0027s email in the address book.","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"TanWenCong"},"content":"    public final String displayValue;","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":48,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // @@author tanwencong-reused","lastModifiedDate":"2022-11-02"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // Reused from https://stackoverflow.com/questions/22872484/javafx-how-can-i-display-emoji","lastModifiedDate":"2022-11-02"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // with minor modifications","lastModifiedDate":"2022-11-02"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Generate email emoji","lastModifiedDate":"2022-10-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        byte[] emojiByteCode \u003d new byte[] {(byte) 0xF0, (byte) 0x9F, (byte) 0x93, (byte) 0xA7};","lastModifiedDate":"2022-10-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        String emoji \u003d new String(emojiByteCode, StandardCharsets.UTF_8);","lastModifiedDate":"2022-10-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // @@author","lastModifiedDate":"2022-11-02"},{"lineNumber":56,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":57,"author":{"gitId":"TanWenCong"},"content":"        displayValue \u003d emoji + \" \" + value;","lastModifiedDate":"2022-10-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Samsation":1,"TanWenCong":7,"-":76}},{"path":"src/main/java/seedu/boba/model/customer/MultiSearchPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.model.customer;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"albertZhangTJ"},"content":"import java.util.List;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"albertZhangTJ"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"albertZhangTJ"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"Samsation"},"content":" * Tests that a {@code Customer}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"albertZhangTJ"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"Samsation"},"content":"public class MultiSearchPredicate implements Predicate\u003cCustomer\u003e {","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"albertZhangTJ"},"content":"    private final AllInfoContainsKeywordsPredicate matchPredicate;","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"albertZhangTJ"},"content":"    private final NameSoundsSimilarToPredicate fuzzyPredicate;","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"albertZhangTJ"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"albertZhangTJ"},"content":"     * Initialize the two sub-predicates","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"albertZhangTJ"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"albertZhangTJ"},"content":"     * @param keywords","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"albertZhangTJ"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"albertZhangTJ"},"content":"    public MultiSearchPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"albertZhangTJ"},"content":"        this.matchPredicate \u003d new AllInfoContainsKeywordsPredicate(keywords);","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"albertZhangTJ"},"content":"        this.fuzzyPredicate \u003d new NameSoundsSimilarToPredicate(keywords);","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"albertZhangTJ"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"albertZhangTJ"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"Samsation"},"content":"    public boolean test(Customer customer) {","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"Samsation"},"content":"        return matchPredicate.test(customer) || fuzzyPredicate.test(customer);","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"albertZhangTJ"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"albertZhangTJ"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"albertZhangTJ"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"albertZhangTJ"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"albertZhangTJ"},"content":"                || (other instanceof MultiSearchPredicate // instanceof handles nulls","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"albertZhangTJ"},"content":"                \u0026\u0026 matchPredicate.equals(((MultiSearchPredicate) other).matchPredicate)","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"albertZhangTJ"},"content":"                \u0026\u0026 fuzzyPredicate.equals(((MultiSearchPredicate) other).fuzzyPredicate)); // state check","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"albertZhangTJ"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"albertZhangTJ"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"Samsation":4,"TanWenCong":1,"albertZhangTJ":31}},{"path":"src/main/java/seedu/boba/model/customer/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.model.customer;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"Samsation"},"content":" * Represents a Customer\u0027s name in the address book.","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"albertZhangTJ"},"content":"        fullName \u003d name.trim();","lastModifiedDate":"2022-10-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Samsation":1,"TanWenCong":2,"albertZhangTJ":1,"-":55}},{"path":"src/main/java/seedu/boba/model/customer/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.model.customer;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.commons.util.StringUtil;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"Samsation"},"content":" * Tests that a {@code Customer}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"Samsation"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cCustomer\u003e {","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"Samsation"},"content":"    public boolean test(Customer customer) {","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"Samsation"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(customer.getName().fullName, keyword));","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Samsation":4,"TanWenCong":2,"-":25}},{"path":"src/main/java/seedu/boba/model/customer/NameSoundsSimilarToPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.model.customer;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"albertZhangTJ"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"albertZhangTJ"},"content":"import java.util.List;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"albertZhangTJ"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"albertZhangTJ"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"Samsation"},"content":" * Tests that a {@code Customer}\u0027s {@code Name} sounds like any of the keywords given.","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"albertZhangTJ"},"content":" * Implemented using soundex (algorithm can be found on wikipedia, slight modifications were made)","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"albertZhangTJ"},"content":" *","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"albertZhangTJ"},"content":" * @author albertZhangTJ","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"albertZhangTJ"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"Samsation"},"content":"public class NameSoundsSimilarToPredicate implements Predicate\u003cCustomer\u003e {","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"albertZhangTJ"},"content":"    private static final List\u003cList\u003cString\u003e\u003e soundexMapping \u003d List.of(","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"albertZhangTJ"},"content":"            List.of(\"a\", \"e\", \"i\", \"o\", \"u\", \"y\", \"h\", \"w\"), //0","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"albertZhangTJ"},"content":"            List.of(\"b\", \"f\", \"p\", \"v\"), //1","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"albertZhangTJ"},"content":"            List.of(\"c\", \"g\", \"j\", \"k\", \"q\", \"s\", \"x\", \"z\"), //2","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"albertZhangTJ"},"content":"            List.of(\"d\", \"t\"), //3","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"albertZhangTJ"},"content":"            List.of(\"l\"), //4","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"albertZhangTJ"},"content":"            List.of(\"m\", \"n\"), //5","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"albertZhangTJ"},"content":"            List.of(\"r\") //6","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"albertZhangTJ"},"content":"    );","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"albertZhangTJ"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"albertZhangTJ"},"content":"    /**","lastModifiedDate":"2022-11-01"},{"lineNumber":27,"author":{"gitId":"albertZhangTJ"},"content":"     * Constructor for this class","lastModifiedDate":"2022-11-01"},{"lineNumber":28,"author":{"gitId":"albertZhangTJ"},"content":"     * @param keywords","lastModifiedDate":"2022-11-01"},{"lineNumber":29,"author":{"gitId":"albertZhangTJ"},"content":"     */","lastModifiedDate":"2022-11-01"},{"lineNumber":30,"author":{"gitId":"albertZhangTJ"},"content":"    public NameSoundsSimilarToPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"albertZhangTJ"},"content":"        assert keywords !\u003d null;","lastModifiedDate":"2022-11-01"},{"lineNumber":32,"author":{"gitId":"albertZhangTJ"},"content":"        if (keywords \u003d\u003d null) {","lastModifiedDate":"2022-11-01"},{"lineNumber":33,"author":{"gitId":"albertZhangTJ"},"content":"            throw new RuntimeException(\"Keyword list cannot be null\");","lastModifiedDate":"2022-11-01"},{"lineNumber":34,"author":{"gitId":"albertZhangTJ"},"content":"        }","lastModifiedDate":"2022-11-01"},{"lineNumber":35,"author":{"gitId":"albertZhangTJ"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"albertZhangTJ"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"albertZhangTJ"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003dSOUNDEX\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"albertZhangTJ"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"albertZhangTJ"},"content":"     * Check if the name is fully alphabetical","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"albertZhangTJ"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"albertZhangTJ"},"content":"     * @param name the input name","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"albertZhangTJ"},"content":"     * @return whether the name is fully alphabetical","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"albertZhangTJ"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"albertZhangTJ"},"content":"    private static boolean isFullyAlphabetical(String name) {","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"albertZhangTJ"},"content":"        for (int i \u003d 0; i \u003c name.length(); i++) {","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"albertZhangTJ"},"content":"            int ascii \u003d (int) name.charAt(i);","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"albertZhangTJ"},"content":"            if (!(ascii \u003e\u003d 65 \u0026\u0026 ascii \u003c\u003d 90) \u0026\u0026 !(ascii \u003e\u003d 97 \u0026\u0026 ascii \u003c\u003d 122)) {","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"albertZhangTJ"},"content":"                return false;","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"albertZhangTJ"},"content":"            }","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"albertZhangTJ"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"albertZhangTJ"},"content":"        return true;","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"albertZhangTJ"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"albertZhangTJ"},"content":"    private static String dropHwy(String name) {","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"albertZhangTJ"},"content":"        if (name \u003d\u003d null || name.length() \u003c 2) {","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"albertZhangTJ"},"content":"            return name;","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"albertZhangTJ"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"albertZhangTJ"},"content":"        String ans \u003d \"\";","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"albertZhangTJ"},"content":"        for (int i \u003d 0; i \u003c name.length(); i++) {","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"albertZhangTJ"},"content":"            //add if is first character or is not HWY","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"albertZhangTJ"},"content":"            if (i \u003d\u003d 0 || (name.charAt(i) !\u003d \u0027h\u0027 \u0026\u0026 name.charAt(i) !\u003d \u0027w\u0027 \u0026\u0026 name.charAt(i) !\u003d \u0027y\u0027)) {","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"albertZhangTJ"},"content":"                ans \u003d ans + name.charAt(i);","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"albertZhangTJ"},"content":"            }","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"albertZhangTJ"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"albertZhangTJ"},"content":"        return ans;","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"albertZhangTJ"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"albertZhangTJ"},"content":"    private static String applySoundexMapping(String strippedName) {","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"albertZhangTJ"},"content":"        if (strippedName \u003d\u003d null || strippedName.length() \u003c 2) {","lastModifiedDate":"2022-10-12"},{"lineNumber":72,"author":{"gitId":"albertZhangTJ"},"content":"            return strippedName;","lastModifiedDate":"2022-10-12"},{"lineNumber":73,"author":{"gitId":"albertZhangTJ"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":74,"author":{"gitId":"albertZhangTJ"},"content":"        String ans \u003d strippedName.substring(0, 1);","lastModifiedDate":"2022-10-12"},{"lineNumber":75,"author":{"gitId":"albertZhangTJ"},"content":"        for (int i \u003d 1; i \u003c strippedName.length(); i++) {","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"albertZhangTJ"},"content":"            for (int j \u003d 0; j \u003c soundexMapping.size(); j++) {","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"albertZhangTJ"},"content":"                if (soundexMapping.get(j).contains(strippedName.substring(i, i + 1))) {","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"albertZhangTJ"},"content":"                    ans \u003d ans + j;","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"albertZhangTJ"},"content":"                    break;","lastModifiedDate":"2022-10-12"},{"lineNumber":80,"author":{"gitId":"albertZhangTJ"},"content":"                }","lastModifiedDate":"2022-10-12"},{"lineNumber":81,"author":{"gitId":"albertZhangTJ"},"content":"            }","lastModifiedDate":"2022-10-12"},{"lineNumber":82,"author":{"gitId":"albertZhangTJ"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":83,"author":{"gitId":"albertZhangTJ"},"content":"        return ans;","lastModifiedDate":"2022-10-12"},{"lineNumber":84,"author":{"gitId":"albertZhangTJ"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":85,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":86,"author":{"gitId":"albertZhangTJ"},"content":"    private static String combineAdjacentDigits(String code) {","lastModifiedDate":"2022-10-12"},{"lineNumber":87,"author":{"gitId":"albertZhangTJ"},"content":"        //short name, no repetition is possible","lastModifiedDate":"2022-10-12"},{"lineNumber":88,"author":{"gitId":"albertZhangTJ"},"content":"        if (code \u003d\u003d null || code.length() \u003c\u003d 2) {","lastModifiedDate":"2022-10-12"},{"lineNumber":89,"author":{"gitId":"albertZhangTJ"},"content":"            return code;","lastModifiedDate":"2022-10-12"},{"lineNumber":90,"author":{"gitId":"albertZhangTJ"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":91,"author":{"gitId":"albertZhangTJ"},"content":"        String ans \u003d code.substring(0, 2);","lastModifiedDate":"2022-10-12"},{"lineNumber":92,"author":{"gitId":"albertZhangTJ"},"content":"        for (int i \u003d 2; i \u003c code.length(); i++) {","lastModifiedDate":"2022-10-12"},{"lineNumber":93,"author":{"gitId":"albertZhangTJ"},"content":"            if (code.charAt(i) !\u003d code.charAt(i - 1)) {","lastModifiedDate":"2022-10-12"},{"lineNumber":94,"author":{"gitId":"albertZhangTJ"},"content":"                ans \u003d ans + code.charAt(i);","lastModifiedDate":"2022-10-12"},{"lineNumber":95,"author":{"gitId":"albertZhangTJ"},"content":"            }","lastModifiedDate":"2022-10-12"},{"lineNumber":96,"author":{"gitId":"albertZhangTJ"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":97,"author":{"gitId":"albertZhangTJ"},"content":"        return ans;","lastModifiedDate":"2022-10-12"},{"lineNumber":98,"author":{"gitId":"albertZhangTJ"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":99,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":100,"author":{"gitId":"albertZhangTJ"},"content":"    private static String trimSoundexCode(String code) {","lastModifiedDate":"2022-10-12"},{"lineNumber":101,"author":{"gitId":"albertZhangTJ"},"content":"        //remove all existing zeros","lastModifiedDate":"2022-10-12"},{"lineNumber":102,"author":{"gitId":"albertZhangTJ"},"content":"        String ans \u003d \"\";","lastModifiedDate":"2022-10-12"},{"lineNumber":103,"author":{"gitId":"albertZhangTJ"},"content":"        for (int i \u003d 0; i \u003c code.length(); i++) {","lastModifiedDate":"2022-10-12"},{"lineNumber":104,"author":{"gitId":"albertZhangTJ"},"content":"            if (code.charAt(i) !\u003d \u00270\u0027) {","lastModifiedDate":"2022-10-12"},{"lineNumber":105,"author":{"gitId":"albertZhangTJ"},"content":"                ans \u003d ans + code.charAt(i);","lastModifiedDate":"2022-10-12"},{"lineNumber":106,"author":{"gitId":"albertZhangTJ"},"content":"            }","lastModifiedDate":"2022-10-12"},{"lineNumber":107,"author":{"gitId":"albertZhangTJ"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":108,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":109,"author":{"gitId":"albertZhangTJ"},"content":"        //if length\u003c4, append 0 to end","lastModifiedDate":"2022-10-12"},{"lineNumber":110,"author":{"gitId":"albertZhangTJ"},"content":"        while (ans.length() \u003c 4) {","lastModifiedDate":"2022-10-12"},{"lineNumber":111,"author":{"gitId":"albertZhangTJ"},"content":"            ans \u003d ans + \"0\";","lastModifiedDate":"2022-10-12"},{"lineNumber":112,"author":{"gitId":"albertZhangTJ"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":113,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":114,"author":{"gitId":"albertZhangTJ"},"content":"        //if length\u003e4, only keep letter + the first 3 digits","lastModifiedDate":"2022-10-12"},{"lineNumber":115,"author":{"gitId":"albertZhangTJ"},"content":"        if (ans.length() \u003e 4) {","lastModifiedDate":"2022-10-12"},{"lineNumber":116,"author":{"gitId":"albertZhangTJ"},"content":"            ans \u003d ans.substring(0, 4);","lastModifiedDate":"2022-10-12"},{"lineNumber":117,"author":{"gitId":"albertZhangTJ"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":118,"author":{"gitId":"albertZhangTJ"},"content":"        return ans;","lastModifiedDate":"2022-10-12"},{"lineNumber":119,"author":{"gitId":"albertZhangTJ"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":120,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":121,"author":{"gitId":"albertZhangTJ"},"content":"    private static String soundexOfIfAlphabetical(String name) {","lastModifiedDate":"2022-10-12"},{"lineNumber":122,"author":{"gitId":"albertZhangTJ"},"content":"        name \u003d name.toLowerCase();","lastModifiedDate":"2022-10-12"},{"lineNumber":123,"author":{"gitId":"albertZhangTJ"},"content":"        if (!isFullyAlphabetical(name)) {","lastModifiedDate":"2022-10-12"},{"lineNumber":124,"author":{"gitId":"albertZhangTJ"},"content":"            return name;","lastModifiedDate":"2022-10-12"},{"lineNumber":125,"author":{"gitId":"albertZhangTJ"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":126,"author":{"gitId":"albertZhangTJ"},"content":"        name \u003d dropHwy(name);","lastModifiedDate":"2022-10-12"},{"lineNumber":127,"author":{"gitId":"albertZhangTJ"},"content":"        name \u003d applySoundexMapping(name);","lastModifiedDate":"2022-10-12"},{"lineNumber":128,"author":{"gitId":"albertZhangTJ"},"content":"        name \u003d combineAdjacentDigits(name);","lastModifiedDate":"2022-10-12"},{"lineNumber":129,"author":{"gitId":"albertZhangTJ"},"content":"        name \u003d trimSoundexCode(name);","lastModifiedDate":"2022-10-12"},{"lineNumber":130,"author":{"gitId":"albertZhangTJ"},"content":"        return name;","lastModifiedDate":"2022-10-12"},{"lineNumber":131,"author":{"gitId":"albertZhangTJ"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":132,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":133,"author":{"gitId":"albertZhangTJ"},"content":"    private boolean hasMatch(String name) {","lastModifiedDate":"2022-10-12"},{"lineNumber":134,"author":{"gitId":"albertZhangTJ"},"content":"        String[] splitedName \u003d name.split(\" \");","lastModifiedDate":"2022-10-12"},{"lineNumber":135,"author":{"gitId":"albertZhangTJ"},"content":"        List\u003cString\u003e searchCode \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-12"},{"lineNumber":136,"author":{"gitId":"albertZhangTJ"},"content":"        for (String part : splitedName) {","lastModifiedDate":"2022-10-12"},{"lineNumber":137,"author":{"gitId":"albertZhangTJ"},"content":"            if (part.length() \u003e 0) {","lastModifiedDate":"2022-10-12"},{"lineNumber":138,"author":{"gitId":"albertZhangTJ"},"content":"                searchCode.add(soundexOfIfAlphabetical(part));","lastModifiedDate":"2022-10-12"},{"lineNumber":139,"author":{"gitId":"albertZhangTJ"},"content":"            }","lastModifiedDate":"2022-10-12"},{"lineNumber":140,"author":{"gitId":"albertZhangTJ"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":141,"author":{"gitId":"albertZhangTJ"},"content":"        for (String keyword : keywords) {","lastModifiedDate":"2022-10-12"},{"lineNumber":142,"author":{"gitId":"albertZhangTJ"},"content":"            String keywordCode \u003d soundexOfIfAlphabetical(keyword);","lastModifiedDate":"2022-10-12"},{"lineNumber":143,"author":{"gitId":"albertZhangTJ"},"content":"            for (String nameCode : searchCode) {","lastModifiedDate":"2022-10-12"},{"lineNumber":144,"author":{"gitId":"albertZhangTJ"},"content":"                if (keywordCode.equals(nameCode)) {","lastModifiedDate":"2022-10-12"},{"lineNumber":145,"author":{"gitId":"albertZhangTJ"},"content":"                    return true;","lastModifiedDate":"2022-10-12"},{"lineNumber":146,"author":{"gitId":"albertZhangTJ"},"content":"                }","lastModifiedDate":"2022-10-12"},{"lineNumber":147,"author":{"gitId":"albertZhangTJ"},"content":"            }","lastModifiedDate":"2022-10-12"},{"lineNumber":148,"author":{"gitId":"albertZhangTJ"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":149,"author":{"gitId":"albertZhangTJ"},"content":"        return false;","lastModifiedDate":"2022-10-12"},{"lineNumber":150,"author":{"gitId":"albertZhangTJ"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":151,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":152,"author":{"gitId":"albertZhangTJ"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":153,"author":{"gitId":"Samsation"},"content":"    public boolean test(Customer customer) {","lastModifiedDate":"2022-10-26"},{"lineNumber":154,"author":{"gitId":"Samsation"},"content":"        return hasMatch(customer.getName().fullName);","lastModifiedDate":"2022-10-26"},{"lineNumber":155,"author":{"gitId":"albertZhangTJ"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":156,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":157,"author":{"gitId":"albertZhangTJ"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":158,"author":{"gitId":"albertZhangTJ"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-12"},{"lineNumber":159,"author":{"gitId":"albertZhangTJ"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-12"},{"lineNumber":160,"author":{"gitId":"TanWenCong"},"content":"                || (other instanceof seedu.boba.model.customer","lastModifiedDate":"2022-10-27"},{"lineNumber":161,"author":{"gitId":"Samsation"},"content":"                .NameSoundsSimilarToPredicate // instanceof handles nulls","lastModifiedDate":"2022-10-26"},{"lineNumber":162,"author":{"gitId":"albertZhangTJ"},"content":"                \u0026\u0026 keywords.equals((","lastModifiedDate":"2022-10-12"},{"lineNumber":163,"author":{"gitId":"TanWenCong"},"content":"                (seedu.boba.model.customer.NameSoundsSimilarToPredicate) other).keywords","lastModifiedDate":"2022-10-27"},{"lineNumber":164,"author":{"gitId":"albertZhangTJ"},"content":"        )); // state check","lastModifiedDate":"2022-10-12"},{"lineNumber":165,"author":{"gitId":"albertZhangTJ"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":166,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":167,"author":{"gitId":"albertZhangTJ"},"content":"}","lastModifiedDate":"2022-10-12"},{"lineNumber":168,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"Samsation":5,"TanWenCong":3,"albertZhangTJ":160}},{"path":"src/main/java/seedu/boba/model/customer/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.model.customer;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"TanWenCong"},"content":"import java.nio.charset.StandardCharsets;","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"Samsation"},"content":" * Represents a Customer\u0027s phone number in the address book.","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"TanWenCong"},"content":"            \"Phone numbers should only contain numbers, and it should be EXACTLY 8 digits long\";","lastModifiedDate":"2022-10-30"},{"lineNumber":17,"author":{"gitId":"Samsation"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{8,}\";","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"TanWenCong"},"content":"    public final String displayValue;","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":30,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // @@author tanwencong-reused","lastModifiedDate":"2022-11-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // Reused from https://stackoverflow.com/questions/22872484/javafx-how-can-i-display-emoji","lastModifiedDate":"2022-11-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // with minor modifications","lastModifiedDate":"2022-11-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // Generate phone emoji","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        byte[] emojiByteCode \u003d new byte[] {(byte) 0xF0, (byte) 0x9F, (byte) 0x93, (byte) 0xB1};","lastModifiedDate":"2022-10-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String emoji \u003d new String(emojiByteCode, StandardCharsets.UTF_8);","lastModifiedDate":"2022-10-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // @@author","lastModifiedDate":"2022-11-02"},{"lineNumber":38,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":39,"author":{"gitId":"TanWenCong"},"content":"        displayValue \u003d emoji + \" \" + value;","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"TanWenCong"},"content":"        return test.matches(VALIDATION_REGEX) \u0026\u0026 test.length() \u003d\u003d 8;","lastModifiedDate":"2022-10-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Samsation":2,"TanWenCong":9,"-":55}},{"path":"src/main/java/seedu/boba/model/customer/Reward.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.model.customer;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"TanWenCong"},"content":"import java.nio.charset.StandardCharsets;","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"Samsation"},"content":" * Represents a Customer\u0027s reward points in bobaBot.","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"Samsation"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidReward(String)}","lastModifiedDate":"2022-10-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"Samsation"},"content":"public class Reward {","lastModifiedDate":"2022-10-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"Samsation"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Reward points can take any NON-NEGATIVE values\"","lastModifiedDate":"2022-10-24"},{"lineNumber":15,"author":{"gitId":"Samsation"},"content":"            + \", and it should not be blank\";","lastModifiedDate":"2022-10-24"},{"lineNumber":16,"author":{"gitId":"Samsation"},"content":"    public static final String MESSAGE_MAX_INTEGER \u003d \"Reward points must be POSITIVE integers and\"","lastModifiedDate":"2022-10-30"},{"lineNumber":17,"author":{"gitId":"Samsation"},"content":"            + \" CANNOT take any values more than 2147483647 (Maximum integer value)\";","lastModifiedDate":"2022-10-30"},{"lineNumber":18,"author":{"gitId":"Samsation"},"content":"    public static final String MESSAGE_MAX_EXCEEDED \u003d \"Reward points exceeded 2147483647 (Maximum integer value)!\";","lastModifiedDate":"2022-10-30"},{"lineNumber":19,"author":{"gitId":"Samsation"},"content":"    public static final String MESSAGE_NEGATIVE \u003d \"Reward points will be NEGATIVE after decrement. Please check again!\";","lastModifiedDate":"2022-10-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":22,"author":{"gitId":"Samsation"},"content":"     * The first character of the reward must not be a whitespace,","lastModifiedDate":"2022-10-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"TanWenCong"},"content":"    public final String displayValue;","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"TanWenCong"},"content":"     * Constructs an {@code Reward}.","lastModifiedDate":"2022-10-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"TanWenCong"},"content":"     * @param reward A valid reward.","lastModifiedDate":"2022-10-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"Samsation"},"content":"    public Reward(String reward) {","lastModifiedDate":"2022-10-08"},{"lineNumber":36,"author":{"gitId":"Samsation"},"content":"        requireNonNull(reward);","lastModifiedDate":"2022-10-08"},{"lineNumber":37,"author":{"gitId":"Samsation"},"content":"        checkArgument(isValidReward(reward), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-08"},{"lineNumber":38,"author":{"gitId":"Samsation"},"content":"        int integerValue \u003d Integer.valueOf(reward);","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"Samsation"},"content":"        checkArgument(integerValue \u003e\u003d 0, MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-24"},{"lineNumber":40,"author":{"gitId":"Samsation"},"content":"        value \u003d String.valueOf(integerValue);","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // @@author tanwencong-reused","lastModifiedDate":"2022-11-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Reused from https://stackoverflow.com/questions/22872484/javafx-how-can-i-display-emoji","lastModifiedDate":"2022-11-02"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // with minor modifications","lastModifiedDate":"2022-11-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Generate reward emoji","lastModifiedDate":"2022-10-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        byte[] emojiByteCode \u003d new byte[] {(byte) 0xF0, (byte) 0x9F, (byte) 0x8E, (byte) 0x81};","lastModifiedDate":"2022-10-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        String emoji \u003d new String(emojiByteCode, StandardCharsets.UTF_8);","lastModifiedDate":"2022-10-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // @@author","lastModifiedDate":"2022-11-02"},{"lineNumber":49,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":50,"author":{"gitId":"TanWenCong"},"content":"        displayValue \u003d emoji + \" \" + value;","lastModifiedDate":"2022-10-26"},{"lineNumber":51,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"Samsation"},"content":"     * Returns true if a given string is a valid reward.","lastModifiedDate":"2022-10-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"Samsation"},"content":"    public static boolean isValidReward(String test) {","lastModifiedDate":"2022-10-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"Samsation"},"content":"        return value;","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"Samsation"},"content":"                || (other instanceof Reward // instanceof handles nulls","lastModifiedDate":"2022-10-08"},{"lineNumber":69,"author":{"gitId":"Samsation"},"content":"                \u0026\u0026 value.equals(((Reward) other).value)); // state check","lastModifiedDate":"2022-10-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Samsation":23,"TanWenCong":10,"-":44}},{"path":"src/main/java/seedu/boba/model/customer/UniqueCustomerList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.model.customer;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"Samsation"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-24"},{"lineNumber":9,"author":{"gitId":"bensohh"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.exceptions.DuplicatePersonException;","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.exceptions.PersonNotFoundException;","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"Samsation"},"content":" * A customer is considered unique by comparing using {@code Customer#isSamePerson(Customer)}.","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"Samsation"},"content":" * As such, adding and updating ofpersons uses Customer#isSamePerson(Customer) for equality so as to ensure","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"Samsation"},"content":" * that the customer being added or updated is unique in terms of identity in the UniqueCustomerList.","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"Samsation"},"content":" * However, the removal of a customer uses Customer#equals(Object) so as to ensure that the customer with","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"Samsation"},"content":" * exactly the same fields will be removed.","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"albertZhangTJ"},"content":" * \u003cp\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"Samsation"},"content":" * @see Customer#isSamePerson(Customer)","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"Samsation"},"content":"public class UniqueCustomerList implements Iterable\u003cCustomer\u003e {","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"Samsation"},"content":"    private final ObservableList\u003cCustomer\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"Samsation"},"content":"    private final ObservableList\u003cCustomer\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"Samsation"},"content":"     * Returns true if the list contains an equivalent customer as the given argument.","lastModifiedDate":"2022-10-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"Samsation"},"content":"    public boolean contains(Customer toCheck) {","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":43,"author":{"gitId":"bensohh"},"content":"     * Returns the index of the Customer with the same phone number.","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"bensohh"},"content":"     *","lastModifiedDate":"2022-10-03"},{"lineNumber":45,"author":{"gitId":"bensohh"},"content":"     * @param toCheck Phone number to check against the list","lastModifiedDate":"2022-10-03"},{"lineNumber":46,"author":{"gitId":"Samsation"},"content":"     * @return index of the Customer with the same phone number in the list","lastModifiedDate":"2022-10-26"},{"lineNumber":47,"author":{"gitId":"bensohh"},"content":"     * @throws PersonNotFoundException if no Customer with corresponding phone number found","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":49,"author":{"gitId":"bensohh"},"content":"    public int findNum(Phone toCheck) throws PersonNotFoundException {","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"bensohh"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-10-03"},{"lineNumber":51,"author":{"gitId":"Samsation"},"content":"        int index \u003d internalList.stream().map(Customer::getPhone).collect(Collectors.toList()).indexOf(toCheck);","lastModifiedDate":"2022-10-26"},{"lineNumber":52,"author":{"gitId":"bensohh"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"bensohh"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"bensohh"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"bensohh"},"content":"        return index;","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":57,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":58,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":59,"author":{"gitId":"bensohh"},"content":"     * Returns the index of the Customer with the same email.","lastModifiedDate":"2022-10-09"},{"lineNumber":60,"author":{"gitId":"bensohh"},"content":"     *","lastModifiedDate":"2022-10-03"},{"lineNumber":61,"author":{"gitId":"bensohh"},"content":"     * @param toCheck Email to check against the list","lastModifiedDate":"2022-10-03"},{"lineNumber":62,"author":{"gitId":"Samsation"},"content":"     * @return index of the Customer with the same email in the list","lastModifiedDate":"2022-10-26"},{"lineNumber":63,"author":{"gitId":"bensohh"},"content":"     * @throws PersonNotFoundException if no Customer with corresponding email found","lastModifiedDate":"2022-10-09"},{"lineNumber":64,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":65,"author":{"gitId":"bensohh"},"content":"    public int findEmail(Email toCheck) throws PersonNotFoundException {","lastModifiedDate":"2022-10-09"},{"lineNumber":66,"author":{"gitId":"bensohh"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-10-03"},{"lineNumber":67,"author":{"gitId":"Samsation"},"content":"        int index \u003d internalList.stream().map(Customer::getEmail).collect(Collectors.toList()).indexOf(toCheck);","lastModifiedDate":"2022-10-26"},{"lineNumber":68,"author":{"gitId":"bensohh"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-10-09"},{"lineNumber":69,"author":{"gitId":"bensohh"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2022-10-09"},{"lineNumber":70,"author":{"gitId":"bensohh"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":71,"author":{"gitId":"bensohh"},"content":"        return index;","lastModifiedDate":"2022-10-09"},{"lineNumber":72,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":73,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":74,"author":{"gitId":"Samsation"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":75,"author":{"gitId":"Samsation"},"content":"     * Returns the current Reward points of a Customer","lastModifiedDate":"2022-10-24"},{"lineNumber":76,"author":{"gitId":"Samsation"},"content":"     *","lastModifiedDate":"2022-10-24"},{"lineNumber":77,"author":{"gitId":"Samsation"},"content":"     * @param phone Phone number of the Customer of interest","lastModifiedDate":"2022-10-24"},{"lineNumber":78,"author":{"gitId":"Samsation"},"content":"     * @return the current Reward points of a Customer","lastModifiedDate":"2022-10-24"},{"lineNumber":79,"author":{"gitId":"Samsation"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":80,"author":{"gitId":"Samsation"},"content":"    public Reward getCurrentReward(Phone phone) {","lastModifiedDate":"2022-10-24"},{"lineNumber":81,"author":{"gitId":"Samsation"},"content":"        requireNonNull(phone);","lastModifiedDate":"2022-10-24"},{"lineNumber":82,"author":{"gitId":"Samsation"},"content":"        Optional\u003cReward\u003e currentReward \u003d internalList.stream().filter(person -\u003e person.getPhone().equals(phone))","lastModifiedDate":"2022-10-24"},{"lineNumber":83,"author":{"gitId":"Samsation"},"content":"                .map(Customer::getReward).findFirst();","lastModifiedDate":"2022-10-26"},{"lineNumber":84,"author":{"gitId":"Samsation"},"content":"        return currentReward.get();","lastModifiedDate":"2022-10-24"},{"lineNumber":85,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":86,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":87,"author":{"gitId":"Samsation"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":88,"author":{"gitId":"Samsation"},"content":"     * Returns the current Reward points of a Customer","lastModifiedDate":"2022-10-24"},{"lineNumber":89,"author":{"gitId":"Samsation"},"content":"     *","lastModifiedDate":"2022-10-24"},{"lineNumber":90,"author":{"gitId":"Samsation"},"content":"     * @param email Email of the Customer of interest","lastModifiedDate":"2022-10-24"},{"lineNumber":91,"author":{"gitId":"Samsation"},"content":"     * @return the current Reward points of a Customer","lastModifiedDate":"2022-10-24"},{"lineNumber":92,"author":{"gitId":"Samsation"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":93,"author":{"gitId":"Samsation"},"content":"    public Reward getCurrentReward(Email email) {","lastModifiedDate":"2022-10-24"},{"lineNumber":94,"author":{"gitId":"Samsation"},"content":"        requireNonNull(email);","lastModifiedDate":"2022-10-24"},{"lineNumber":95,"author":{"gitId":"Samsation"},"content":"        Optional\u003cReward\u003e currentReward \u003d internalList.stream().filter(person -\u003e person.getEmail().equals(email))","lastModifiedDate":"2022-10-24"},{"lineNumber":96,"author":{"gitId":"Samsation"},"content":"                .map(Customer::getReward).findFirst();","lastModifiedDate":"2022-10-26"},{"lineNumber":97,"author":{"gitId":"Samsation"},"content":"        return currentReward.get();","lastModifiedDate":"2022-10-24"},{"lineNumber":98,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":99,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":101,"author":{"gitId":"Samsation"},"content":"     * Adds a customer to the list.","lastModifiedDate":"2022-10-26"},{"lineNumber":102,"author":{"gitId":"Samsation"},"content":"     * The customer must not already exist in the list.","lastModifiedDate":"2022-10-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":104,"author":{"gitId":"Samsation"},"content":"    public void add(Customer toAdd) {","lastModifiedDate":"2022-10-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":113,"author":{"gitId":"Samsation"},"content":"     * Replaces the customer {@code target} in the list with {@code editedCustomer}.","lastModifiedDate":"2022-10-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":115,"author":{"gitId":"Samsation"},"content":"     * The customer identity of {@code editedCustomer} must not be the same as another existing customer in the list.","lastModifiedDate":"2022-10-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":117,"author":{"gitId":"Samsation"},"content":"    public void setPerson(Customer target, Customer editedCustomer) {","lastModifiedDate":"2022-10-26"},{"lineNumber":118,"author":{"gitId":"Samsation"},"content":"        requireAllNonNull(target, editedCustomer);","lastModifiedDate":"2022-10-26"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":125,"author":{"gitId":"Samsation"},"content":"        if (!target.isSamePerson(editedCustomer) \u0026\u0026 contains(editedCustomer)) {","lastModifiedDate":"2022-10-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":129,"author":{"gitId":"Samsation"},"content":"        internalList.set(index, editedCustomer);","lastModifiedDate":"2022-10-26"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":133,"author":{"gitId":"Samsation"},"content":"     * Removes the equivalent customer from the list.","lastModifiedDate":"2022-10-26"},{"lineNumber":134,"author":{"gitId":"Samsation"},"content":"     * The customer must exist in the list.","lastModifiedDate":"2022-10-26"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":136,"author":{"gitId":"Samsation"},"content":"    public void remove(Customer toRemove) {","lastModifiedDate":"2022-10-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":143,"author":{"gitId":"Samsation"},"content":"    public void setPersons(UniqueCustomerList replacement) {","lastModifiedDate":"2022-10-26"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":149,"author":{"gitId":"Samsation"},"content":"     * Replaces the contents of this list with {@code customers}.","lastModifiedDate":"2022-10-26"},{"lineNumber":150,"author":{"gitId":"Samsation"},"content":"     * {@code customers} must not contain duplicate customers.","lastModifiedDate":"2022-10-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":152,"author":{"gitId":"Samsation"},"content":"    public void setPersons(List\u003cCustomer\u003e customers) {","lastModifiedDate":"2022-10-26"},{"lineNumber":153,"author":{"gitId":"Samsation"},"content":"        requireAllNonNull(customers);","lastModifiedDate":"2022-10-26"},{"lineNumber":154,"author":{"gitId":"Samsation"},"content":"        if (!personsAreUnique(customers)) {","lastModifiedDate":"2022-10-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":158,"author":{"gitId":"Samsation"},"content":"        internalList.setAll(customers);","lastModifiedDate":"2022-10-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":164,"author":{"gitId":"Samsation"},"content":"    public ObservableList\u003cCustomer\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-10-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":169,"author":{"gitId":"Samsation"},"content":"    public Iterator\u003cCustomer\u003e iterator() {","lastModifiedDate":"2022-10-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":176,"author":{"gitId":"Samsation"},"content":"                || (other instanceof UniqueCustomerList // instanceof handles nulls","lastModifiedDate":"2022-10-26"},{"lineNumber":177,"author":{"gitId":"Samsation"},"content":"                \u0026\u0026 internalList.equals(((UniqueCustomerList) other).internalList));","lastModifiedDate":"2022-10-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":180,"author":{"gitId":"albertZhangTJ"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":181,"author":{"gitId":"albertZhangTJ"},"content":"     * Compares if two Lists are strictly equals","lastModifiedDate":"2022-10-28"},{"lineNumber":182,"author":{"gitId":"albertZhangTJ"},"content":"     * which is true only when each person in the lists are strictly equals","lastModifiedDate":"2022-10-28"},{"lineNumber":183,"author":{"gitId":"albertZhangTJ"},"content":"     * @param other","lastModifiedDate":"2022-10-28"},{"lineNumber":184,"author":{"gitId":"albertZhangTJ"},"content":"     * @return","lastModifiedDate":"2022-10-28"},{"lineNumber":185,"author":{"gitId":"albertZhangTJ"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":186,"author":{"gitId":"albertZhangTJ"},"content":"    public boolean strictlyEquals(Object other) {","lastModifiedDate":"2022-10-28"},{"lineNumber":187,"author":{"gitId":"albertZhangTJ"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-28"},{"lineNumber":188,"author":{"gitId":"albertZhangTJ"},"content":"            return true;","lastModifiedDate":"2022-10-28"},{"lineNumber":189,"author":{"gitId":"albertZhangTJ"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":190,"author":{"gitId":"albertZhangTJ"},"content":"        if (!(other instanceof UniqueCustomerList)) {","lastModifiedDate":"2022-10-28"},{"lineNumber":191,"author":{"gitId":"albertZhangTJ"},"content":"            return false;","lastModifiedDate":"2022-10-28"},{"lineNumber":192,"author":{"gitId":"albertZhangTJ"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":193,"author":{"gitId":"albertZhangTJ"},"content":"        UniqueCustomerList otherList \u003d (UniqueCustomerList) other;","lastModifiedDate":"2022-10-28"},{"lineNumber":194,"author":{"gitId":"albertZhangTJ"},"content":"        if (this.internalList.size() !\u003d otherList.internalList.size()) {","lastModifiedDate":"2022-10-28"},{"lineNumber":195,"author":{"gitId":"albertZhangTJ"},"content":"            return false;","lastModifiedDate":"2022-10-28"},{"lineNumber":196,"author":{"gitId":"albertZhangTJ"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":197,"author":{"gitId":"albertZhangTJ"},"content":"        for (int i \u003d 0; i \u003c this.internalList.size(); i++) {","lastModifiedDate":"2022-10-28"},{"lineNumber":198,"author":{"gitId":"albertZhangTJ"},"content":"            if (!internalList.get(i).strictlyEquals(otherList.internalList.get(i))) {","lastModifiedDate":"2022-10-28"},{"lineNumber":199,"author":{"gitId":"albertZhangTJ"},"content":"                return false;","lastModifiedDate":"2022-10-28"},{"lineNumber":200,"author":{"gitId":"albertZhangTJ"},"content":"            }","lastModifiedDate":"2022-10-28"},{"lineNumber":201,"author":{"gitId":"albertZhangTJ"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":202,"author":{"gitId":"albertZhangTJ"},"content":"        return true;","lastModifiedDate":"2022-10-28"},{"lineNumber":203,"author":{"gitId":"albertZhangTJ"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":204,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":211,"author":{"gitId":"Samsation"},"content":"     * Returns true if {@code customers} contains only unique customers.","lastModifiedDate":"2022-10-26"},{"lineNumber":212,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":213,"author":{"gitId":"Samsation"},"content":"    private boolean personsAreUnique(List\u003cCustomer\u003e customers) {","lastModifiedDate":"2022-10-26"},{"lineNumber":214,"author":{"gitId":"Samsation"},"content":"        for (int i \u003d 0; i \u003c customers.size() - 1; i++) {","lastModifiedDate":"2022-10-26"},{"lineNumber":215,"author":{"gitId":"Samsation"},"content":"            for (int j \u003d i + 1; j \u003c customers.size(); j++) {","lastModifiedDate":"2022-10-26"},{"lineNumber":216,"author":{"gitId":"Samsation"},"content":"                if (customers.get(i).isSamePerson(customers.get(j))) {","lastModifiedDate":"2022-10-26"},{"lineNumber":217,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":218,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":223,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Samsation":70,"TanWenCong":4,"bensohh":29,"albertZhangTJ":26,"-":94}},{"path":"src/main/java/seedu/boba/model/customer/exceptions/DuplicatePersonException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.model.customer.exceptions;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation will result in duplicate Persons (Persons are considered duplicates if they have the same","lastModifiedDate":"2018-04-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * identity).","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class DuplicatePersonException extends RuntimeException {","lastModifiedDate":"2018-08-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public DuplicatePersonException() {","lastModifiedDate":"2017-06-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"        super(\"Operation would result in duplicate persons\");","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"TanWenCong":1,"-":10}},{"path":"src/main/java/seedu/boba/model/customer/exceptions/PersonNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.model.customer.exceptions;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":3,"author":{"gitId":"Samsation"},"content":"/**","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"Samsation"},"content":" * Signals that the operation is unable to find the specified customer.","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"Samsation"},"content":" */","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"Samsation"},"content":"public class PersonNotFoundException extends RuntimeException {}","lastModifiedDate":"2022-10-26"}],"authorContributionMap":{"Samsation":5,"TanWenCong":1}},{"path":"src/main/java/seedu/boba/model/exceptions/NextStateNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.model.exceptions;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":3,"author":{"gitId":"bensohh"},"content":"/**","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"TanWenCong"},"content":" * Represents a redo error where the BobaBot is at the most updated state.","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"bensohh"},"content":" */","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"bensohh"},"content":"public class NextStateNotFoundException extends RuntimeException {","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"bensohh"},"content":"    public NextStateNotFoundException() {","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"bensohh"},"content":"        super(\"No next state found! You are at the most updated state!\");","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":10,"author":{"gitId":"bensohh"},"content":"}","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"TanWenCong":2,"bensohh":8}},{"path":"src/main/java/seedu/boba/model/exceptions/PreviousStateNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.model.exceptions;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":3,"author":{"gitId":"bensohh"},"content":"/**","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"TanWenCong"},"content":" * Represents an undo error where the BobaBot is at the initialised state.","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"bensohh"},"content":" */","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"bensohh"},"content":"public class PreviousStateNotFoundException extends RuntimeException {","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"bensohh"},"content":"    public PreviousStateNotFoundException() {","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"bensohh"},"content":"        super(\"No previous state found! You are at the initial state!\");","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":10,"author":{"gitId":"bensohh"},"content":"}","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"TanWenCong":2,"bensohh":8}},{"path":"src/main/java/seedu/boba/model/promotion/Promotion.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.model.promotion;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"bensohh"},"content":"import java.io.InputStream;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"bensohh"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"bensohh"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"bensohh"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"bensohh"},"content":"/**","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"bensohh"},"content":" * Manages the operations for parsing images(promotions) for the GUI.","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"bensohh"},"content":" */","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"bensohh"},"content":"public class Promotion {","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"bensohh"},"content":"    private ObservableList\u003cImage\u003e promotionList;","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"bensohh"},"content":"    public Promotion() {","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"bensohh"},"content":"        this.promotionList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"bensohh"},"content":"     * Retrieves and stores all the images from a directory into an ObservableList.","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"bensohh"},"content":"     * @param filePath Filepath indicating the directory location to retrieve images from","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"bensohh"},"content":"    public void parseAllPromotions(String filePath) {","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"bensohh"},"content":"        for (int i \u003d 1; i \u003c\u003d 5; i++) {","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"bensohh"},"content":"            String currFilePath \u003d filePath + \"/promo\" + i + \".png\";","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"bensohh"},"content":"            InputStream is \u003d getFileFromResourceAsStream(currFilePath);","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"bensohh"},"content":"            Image image \u003d new Image(is);","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"bensohh"},"content":"            this.promotionList.add(image);","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"bensohh"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"bensohh"},"content":"        InputStream is \u003d getFileFromResourceAsStream(filePath + \"/promo-anya.gif\");","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"bensohh"},"content":"        Image image \u003d new Image(is);","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"bensohh"},"content":"        this.promotionList.add(image);","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":34,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"bensohh"},"content":"    public ObservableList\u003cImage\u003e getPromotionList() {","lastModifiedDate":"2022-10-27"},{"lineNumber":36,"author":{"gitId":"bensohh"},"content":"        return this.promotionList;","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":38,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    //@@author bensohh-reused","lastModifiedDate":"2022-11-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    //Reused from: https://mkyong.com/java/java-read-a-file-from-resources-folder/","lastModifiedDate":"2022-11-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Retrieves individual files as resources (compatible with JAR files)","lastModifiedDate":"2022-10-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @param fileName Filepath of the file we want to retrieve","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @return InputStream that contains the file information","lastModifiedDate":"2022-10-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private InputStream getFileFromResourceAsStream(String fileName) {","lastModifiedDate":"2022-10-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // The class loader that loaded the class","lastModifiedDate":"2022-10-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        ClassLoader classLoader \u003d getClass().getClassLoader();","lastModifiedDate":"2022-10-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        InputStream inputStream \u003d classLoader.getResourceAsStream(fileName);","lastModifiedDate":"2022-10-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // the stream holding the file content","lastModifiedDate":"2022-10-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (inputStream \u003d\u003d null) {","lastModifiedDate":"2022-10-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"File not found! \" + fileName);","lastModifiedDate":"2022-10-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2022-10-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return inputStream;","lastModifiedDate":"2022-10-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"TanWenCong":1,"bensohh":37,"-":23}},{"path":"src/main/java/seedu/boba/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.model.tag;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"Samsation"},"content":"import java.util.Locale;","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":27,"author":{"gitId":"Samsation"},"content":"        this.tagName \u003d tagName.toUpperCase(Locale.ROOT);","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Samsation":2,"TanWenCong":2,"-":52}},{"path":"src/main/java/seedu/boba/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.model.util;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.BobaBot;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.ReadOnlyBobaBot;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.BirthdayMonth;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Customer;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Email;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Name;","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Phone;","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Reward;","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.tag.Tag;","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":18,"author":{"gitId":"TanWenCong"},"content":" * Contains utility methods for populating {@code BobaBot} with sample data.","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":21,"author":{"gitId":"Samsation"},"content":"    public static Customer[] getSamplePersons() {","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"Samsation"},"content":"        return new Customer[] {","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"Samsation"},"content":"            new Customer(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"bensohh"},"content":"                new BirthdayMonth(\"10\"), new Reward(\"2300\"),","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"bensohh"},"content":"                getTagSet(\"bronze\", \"warning\")),","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"Samsation"},"content":"            new Customer(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"bensohh"},"content":"                new BirthdayMonth(\"11\"), new Reward(\"6900\"),","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"bensohh"},"content":"                getTagSet(\"gold\")),","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"Samsation"},"content":"            new Customer(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"bensohh"},"content":"                new BirthdayMonth(\"10\"), new Reward(\"12345\"),","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"bensohh"},"content":"                getTagSet(\"diamond\")),","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"Samsation"},"content":"            new Customer(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2022-10-26"},{"lineNumber":33,"author":{"gitId":"TanWenCong"},"content":"                new BirthdayMonth(\"6\"), new Reward(\"0\"),","lastModifiedDate":"2022-10-24"},{"lineNumber":34,"author":{"gitId":"bensohh"},"content":"                getTagSet(\"member\", \"banned\")),","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"Samsation"},"content":"            new Customer(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2022-10-26"},{"lineNumber":36,"author":{"gitId":"TanWenCong"},"content":"                new BirthdayMonth(\"12\"), new Reward(\"4000\"),","lastModifiedDate":"2022-10-24"},{"lineNumber":37,"author":{"gitId":"bensohh"},"content":"                getTagSet(\"silver\")),","lastModifiedDate":"2022-10-27"},{"lineNumber":38,"author":{"gitId":"Samsation"},"content":"            new Customer(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2022-10-26"},{"lineNumber":39,"author":{"gitId":"bensohh"},"content":"                new BirthdayMonth(\"9\"), new Reward(\"8000\"),","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"bensohh"},"content":"                getTagSet(\"platinum\"))","lastModifiedDate":"2022-10-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":44,"author":{"gitId":"TanWenCong"},"content":"    public static ReadOnlyBobaBot getSampleBobaBot() {","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"TanWenCong"},"content":"        BobaBot sampleAb \u003d new BobaBot();","lastModifiedDate":"2022-10-27"},{"lineNumber":46,"author":{"gitId":"Samsation"},"content":"        for (Customer sampleCustomer : getSamplePersons()) {","lastModifiedDate":"2022-10-26"},{"lineNumber":47,"author":{"gitId":"Samsation"},"content":"            sampleAb.addPerson(sampleCustomer);","lastModifiedDate":"2022-10-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"Samsation":10,"TanWenCong":15,"bensohh":10,"-":26}},{"path":"src/main/java/seedu/boba/storage/BobaBotStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.storage;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"TanWenCong"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"TanWenCong"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"TanWenCong"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.BobaBot;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.ReadOnlyBobaBot;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"TanWenCong"},"content":"/**","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"TanWenCong"},"content":" * Represents a storage for {@link BobaBot}.","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"TanWenCong"},"content":" */","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"TanWenCong"},"content":"public interface BobaBotStorage {","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"TanWenCong"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"TanWenCong"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"TanWenCong"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"TanWenCong"},"content":"    Path getBobaBotFilePath();","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"TanWenCong"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"TanWenCong"},"content":"     * Returns BobaBot data as a {@link ReadOnlyBobaBot}.","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"TanWenCong"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"TanWenCong"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"TanWenCong"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"TanWenCong"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"TanWenCong"},"content":"    Optional\u003cReadOnlyBobaBot\u003e readBobaBot() throws DataConversionException, IOException;","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"TanWenCong"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"TanWenCong"},"content":"     * @see #getBobaBotFilePath()","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"TanWenCong"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"TanWenCong"},"content":"    Optional\u003cReadOnlyBobaBot\u003e readBobaBot(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":34,"author":{"gitId":"TanWenCong"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"TanWenCong"},"content":"     * Saves the given {@link ReadOnlyBobaBot} to the storage.","lastModifiedDate":"2022-10-27"},{"lineNumber":36,"author":{"gitId":"TanWenCong"},"content":"     * @param addressBook cannot be null.","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"TanWenCong"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2022-10-27"},{"lineNumber":38,"author":{"gitId":"TanWenCong"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"TanWenCong"},"content":"    void saveBobaBot(ReadOnlyBobaBot addressBook) throws IOException;","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":41,"author":{"gitId":"TanWenCong"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":42,"author":{"gitId":"TanWenCong"},"content":"     * @see #saveBobaBot(ReadOnlyBobaBot)","lastModifiedDate":"2022-10-27"},{"lineNumber":43,"author":{"gitId":"TanWenCong"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"TanWenCong"},"content":"    void saveBobaBot(ReadOnlyBobaBot addressBook, Path filePath) throws IOException;","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":46,"author":{"gitId":"TanWenCong"},"content":"}","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"TanWenCong":46}},{"path":"src/main/java/seedu/boba/storage/JsonAdaptedCustomer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.storage;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"albertZhangTJ"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-31"},{"lineNumber":4,"author":{"gitId":"albertZhangTJ"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-31"},{"lineNumber":5,"author":{"gitId":"albertZhangTJ"},"content":"import java.util.List;","lastModifiedDate":"2022-10-31"},{"lineNumber":6,"author":{"gitId":"albertZhangTJ"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-31"},{"lineNumber":7,"author":{"gitId":"albertZhangTJ"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-31"},{"lineNumber":8,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":12,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.BirthdayMonth;","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Customer;","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Email;","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Name;","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Phone;","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Reward;","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.tag.Tag;","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"Samsation"},"content":" * Jackson-friendly version of {@link Customer}.","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"Samsation"},"content":"class JsonAdaptedCustomer {","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"Samsation"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Customer\u0027s %s field is missing!\";","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"TanWenCong"},"content":"    private final String birthdayMonth;","lastModifiedDate":"2022-10-24"},{"lineNumber":32,"author":{"gitId":"Samsation"},"content":"    private final String reward;","lastModifiedDate":"2022-10-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"Samsation"},"content":"     * Constructs a {@code JsonAdaptedCustomer} with the given customer details.","lastModifiedDate":"2022-10-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"Samsation"},"content":"    public JsonAdaptedCustomer(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"TanWenCong"},"content":"                               @JsonProperty(\"email\") String email, @JsonProperty(\"birthdayMonth\") String birthdayMonth,","lastModifiedDate":"2022-10-24"},{"lineNumber":41,"author":{"gitId":"Samsation"},"content":"                               @JsonProperty(\"reward\") String reward,","lastModifiedDate":"2022-10-26"},{"lineNumber":42,"author":{"gitId":"Samsation"},"content":"                               @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2022-10-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"TanWenCong"},"content":"        this.birthdayMonth \u003d birthdayMonth;","lastModifiedDate":"2022-10-24"},{"lineNumber":47,"author":{"gitId":"Samsation"},"content":"        this.reward \u003d reward;","lastModifiedDate":"2022-10-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"Samsation"},"content":"     * Converts a given {@code Customer} into this class for Jackson use.","lastModifiedDate":"2022-10-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"Samsation"},"content":"    public JsonAdaptedCustomer(Customer source) {","lastModifiedDate":"2022-10-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"TanWenCong"},"content":"        birthdayMonth \u003d source.getBirthdayMonth().value;","lastModifiedDate":"2022-10-24"},{"lineNumber":61,"author":{"gitId":"Samsation"},"content":"        reward \u003d source.getReward().value;","lastModifiedDate":"2022-10-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"albertZhangTJ"},"content":"     * Converts this Jackson-friendly adapted customer object into the bobaBotModel\u0027s {@code Customer} object.","lastModifiedDate":"2022-10-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"Samsation"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted customer.","lastModifiedDate":"2022-10-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"Samsation"},"content":"    public Customer toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"TanWenCong"},"content":"        if (birthdayMonth \u003d\u003d null) {","lastModifiedDate":"2022-10-24"},{"lineNumber":103,"author":{"gitId":"TanWenCong"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2022-10-24"},{"lineNumber":104,"author":{"gitId":"TanWenCong"},"content":"                String.format(MISSING_FIELD_MESSAGE_FORMAT, BirthdayMonth.class.getSimpleName()));","lastModifiedDate":"2022-10-24"},{"lineNumber":105,"author":{"gitId":"TanWenCong"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":106,"author":{"gitId":"TanWenCong"},"content":"        if (!BirthdayMonth.isValidBirthdayMonth(birthdayMonth)) {","lastModifiedDate":"2022-10-24"},{"lineNumber":107,"author":{"gitId":"TanWenCong"},"content":"            throw new IllegalValueException(BirthdayMonth.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-24"},{"lineNumber":108,"author":{"gitId":"TanWenCong"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":109,"author":{"gitId":"TanWenCong"},"content":"        final BirthdayMonth modelBirthdayMonth \u003d new BirthdayMonth(birthdayMonth);","lastModifiedDate":"2022-10-24"},{"lineNumber":110,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":111,"author":{"gitId":"Samsation"},"content":"        if (reward \u003d\u003d null) {","lastModifiedDate":"2022-10-08"},{"lineNumber":112,"author":{"gitId":"Samsation"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Reward.class.getSimpleName()));","lastModifiedDate":"2022-10-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"Samsation"},"content":"        if (!Reward.isValidReward(reward)) {","lastModifiedDate":"2022-10-08"},{"lineNumber":115,"author":{"gitId":"Samsation"},"content":"            throw new IllegalValueException(Reward.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"Samsation"},"content":"        final Reward modelReward \u003d new Reward(reward);","lastModifiedDate":"2022-10-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"Samsation"},"content":"        return new Customer(modelName, modelPhone, modelEmail, modelBirthdayMonth, modelReward, modelTags);","lastModifiedDate":"2022-10-26"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Samsation":20,"TanWenCong":22,"albertZhangTJ":8,"-":73}},{"path":"src/main/java/seedu/boba/storage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.storage;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":6,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.tag.Tag;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"class JsonAdaptedTag {","lastModifiedDate":"2018-12-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        tagName \u003d source.tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"albertZhangTJ"},"content":"     * Converts this Jackson-friendly adapted tag object into the bobaBotModel\u0027s {@code Tag} object.","lastModifiedDate":"2022-10-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Tag(tagName);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"TanWenCong":3,"albertZhangTJ":1,"-":44}},{"path":"src/main/java/seedu/boba/storage/JsonBobaBotStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.storage;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"TanWenCong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"TanWenCong"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"TanWenCong"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"TanWenCong"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"TanWenCong"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.commons.core.LogsCenter;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.commons.util.FileUtil;","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.commons.util.JsonUtil;","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.ReadOnlyBobaBot;","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"TanWenCong"},"content":"/**","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"TanWenCong"},"content":" * A class to access BobaBot data stored as a json file on the hard disk.","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"TanWenCong"},"content":" */","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"TanWenCong"},"content":"public class JsonBobaBotStorage implements BobaBotStorage {","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"TanWenCong"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonBobaBotStorage.class);","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"TanWenCong"},"content":"    private Path filePath;","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"TanWenCong"},"content":"    public JsonBobaBotStorage(Path filePath) {","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"TanWenCong"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"TanWenCong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"TanWenCong"},"content":"    public Path getBobaBotFilePath() {","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"TanWenCong"},"content":"        return filePath;","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"TanWenCong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":34,"author":{"gitId":"TanWenCong"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"TanWenCong"},"content":"    public Optional\u003cReadOnlyBobaBot\u003e readBobaBot() throws DataConversionException {","lastModifiedDate":"2022-10-27"},{"lineNumber":36,"author":{"gitId":"TanWenCong"},"content":"        return readBobaBot(filePath);","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"TanWenCong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":38,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"TanWenCong"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"TanWenCong"},"content":"     * Similar to {@link #readBobaBot()}.","lastModifiedDate":"2022-10-27"},{"lineNumber":41,"author":{"gitId":"TanWenCong"},"content":"     *","lastModifiedDate":"2022-10-27"},{"lineNumber":42,"author":{"gitId":"TanWenCong"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2022-10-27"},{"lineNumber":43,"author":{"gitId":"TanWenCong"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"TanWenCong"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"TanWenCong"},"content":"    public Optional\u003cReadOnlyBobaBot\u003e readBobaBot(Path filePath) throws DataConversionException {","lastModifiedDate":"2022-10-27"},{"lineNumber":46,"author":{"gitId":"TanWenCong"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2022-10-27"},{"lineNumber":47,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":48,"author":{"gitId":"TanWenCong"},"content":"        Optional\u003cJsonSerializableBobaBot\u003e jsonAddressBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2022-10-27"},{"lineNumber":49,"author":{"gitId":"TanWenCong"},"content":"                filePath, JsonSerializableBobaBot.class);","lastModifiedDate":"2022-10-27"},{"lineNumber":50,"author":{"gitId":"TanWenCong"},"content":"        if (!jsonAddressBook.isPresent()) {","lastModifiedDate":"2022-10-27"},{"lineNumber":51,"author":{"gitId":"TanWenCong"},"content":"            return Optional.empty();","lastModifiedDate":"2022-10-27"},{"lineNumber":52,"author":{"gitId":"TanWenCong"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":53,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":54,"author":{"gitId":"TanWenCong"},"content":"        try {","lastModifiedDate":"2022-10-27"},{"lineNumber":55,"author":{"gitId":"TanWenCong"},"content":"            return Optional.of(jsonAddressBook.get().toModelType());","lastModifiedDate":"2022-10-27"},{"lineNumber":56,"author":{"gitId":"TanWenCong"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2022-10-27"},{"lineNumber":57,"author":{"gitId":"TanWenCong"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2022-10-27"},{"lineNumber":58,"author":{"gitId":"TanWenCong"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2022-10-27"},{"lineNumber":59,"author":{"gitId":"TanWenCong"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":60,"author":{"gitId":"TanWenCong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":61,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":62,"author":{"gitId":"TanWenCong"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":63,"author":{"gitId":"TanWenCong"},"content":"    public void saveBobaBot(ReadOnlyBobaBot addressBook) throws IOException {","lastModifiedDate":"2022-10-27"},{"lineNumber":64,"author":{"gitId":"TanWenCong"},"content":"        saveBobaBot(addressBook, filePath);","lastModifiedDate":"2022-10-27"},{"lineNumber":65,"author":{"gitId":"TanWenCong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":66,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":67,"author":{"gitId":"TanWenCong"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":68,"author":{"gitId":"TanWenCong"},"content":"     * Similar to {@link #saveBobaBot(ReadOnlyBobaBot)}.","lastModifiedDate":"2022-10-27"},{"lineNumber":69,"author":{"gitId":"TanWenCong"},"content":"     *","lastModifiedDate":"2022-10-27"},{"lineNumber":70,"author":{"gitId":"TanWenCong"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2022-10-27"},{"lineNumber":71,"author":{"gitId":"TanWenCong"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":72,"author":{"gitId":"TanWenCong"},"content":"    public void saveBobaBot(ReadOnlyBobaBot addressBook, Path filePath) throws IOException {","lastModifiedDate":"2022-10-27"},{"lineNumber":73,"author":{"gitId":"TanWenCong"},"content":"        requireNonNull(addressBook);","lastModifiedDate":"2022-10-27"},{"lineNumber":74,"author":{"gitId":"TanWenCong"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2022-10-27"},{"lineNumber":75,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":76,"author":{"gitId":"TanWenCong"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2022-10-27"},{"lineNumber":77,"author":{"gitId":"TanWenCong"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableBobaBot(addressBook), filePath);","lastModifiedDate":"2022-10-27"},{"lineNumber":78,"author":{"gitId":"TanWenCong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":79,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":80,"author":{"gitId":"TanWenCong"},"content":"}","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"TanWenCong":80}},{"path":"src/main/java/seedu/boba/storage/JsonSerializableBobaBot.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.storage;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"albertZhangTJ"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-31"},{"lineNumber":4,"author":{"gitId":"albertZhangTJ"},"content":"import java.util.List;","lastModifiedDate":"2022-10-31"},{"lineNumber":5,"author":{"gitId":"albertZhangTJ"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-31"},{"lineNumber":6,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":11,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.BobaBot;","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.ReadOnlyBobaBot;","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Customer;","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"TanWenCong"},"content":" * An Immutable BobaBot that is serializable to JSON format.","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"TanWenCong"},"content":"@JsonRootName(value \u003d \"bobabot\")","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"TanWenCong"},"content":"class JsonSerializableBobaBot {","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"Samsation"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate customer(s).\";","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"Samsation"},"content":"    private final List\u003cJsonAdaptedCustomer\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"TanWenCong"},"content":"     * Constructs a {@code JsonSerializableBobaBot} with the given persons.","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"TanWenCong"},"content":"    public JsonSerializableBobaBot(@JsonProperty(\"persons\") List\u003cJsonAdaptedCustomer\u003e persons) {","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"TanWenCong"},"content":"     * Converts a given {@code ReadOnlyBobaBot} into this class for Jackson use.","lastModifiedDate":"2022-10-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"TanWenCong"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableBobaBot}.","lastModifiedDate":"2022-10-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"TanWenCong"},"content":"    public JsonSerializableBobaBot(ReadOnlyBobaBot source) {","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"Samsation"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedCustomer::new).collect(Collectors.toList()));","lastModifiedDate":"2022-10-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"albertZhangTJ"},"content":"     * Converts this bobabot into the bobaBotModel\u0027s {@code BobaBot} object.","lastModifiedDate":"2022-10-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"TanWenCong"},"content":"    public BobaBot toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-27"},{"lineNumber":49,"author":{"gitId":"TanWenCong"},"content":"        BobaBot bobaBot \u003d new BobaBot();","lastModifiedDate":"2022-10-27"},{"lineNumber":50,"author":{"gitId":"Samsation"},"content":"        for (JsonAdaptedCustomer jsonAdaptedCustomer : persons) {","lastModifiedDate":"2022-10-26"},{"lineNumber":51,"author":{"gitId":"Samsation"},"content":"            Customer customer \u003d jsonAdaptedCustomer.toModelType();","lastModifiedDate":"2022-10-26"},{"lineNumber":52,"author":{"gitId":"TanWenCong"},"content":"            if (bobaBot.hasPerson(customer)) {","lastModifiedDate":"2022-10-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"TanWenCong"},"content":"            bobaBot.addPerson(customer);","lastModifiedDate":"2022-10-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"TanWenCong"},"content":"        return bobaBot;","lastModifiedDate":"2022-10-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Samsation":5,"TanWenCong":18,"albertZhangTJ":6,"-":31}},{"path":"src/main/java/seedu/boba/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.storage;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.commons.util.JsonUtil;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.UserPrefs;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException {","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"TanWenCong":5,"-":42}},{"path":"src/main/java/seedu/boba/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.storage;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"TanWenCong"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"TanWenCong"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"TanWenCong"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.ReadOnlyBobaBot;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.UserPrefs;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"TanWenCong"},"content":"/**","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"TanWenCong"},"content":" * API of the Storage component","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"TanWenCong"},"content":" */","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"TanWenCong"},"content":"public interface Storage extends BobaBotStorage, UserPrefsStorage {","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"TanWenCong"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"TanWenCong"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"TanWenCong"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"TanWenCong"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"TanWenCong"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"TanWenCong"},"content":"    Path getBobaBotFilePath();","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"TanWenCong"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"TanWenCong"},"content":"    Optional\u003cReadOnlyBobaBot\u003e readBobaBot() throws DataConversionException, IOException;","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"TanWenCong"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"TanWenCong"},"content":"    void saveBobaBot(ReadOnlyBobaBot addressBook) throws IOException;","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"TanWenCong"},"content":"}","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"TanWenCong":32}},{"path":"src/main/java/seedu/boba/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.storage;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"TanWenCong"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"TanWenCong"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"TanWenCong"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"TanWenCong"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.commons.core.LogsCenter;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.ReadOnlyBobaBot;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.UserPrefs;","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"TanWenCong"},"content":"/**","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"TanWenCong"},"content":" * Manages storage of BobaBot data in local storage.","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"TanWenCong"},"content":" */","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"TanWenCong"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"TanWenCong"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"TanWenCong"},"content":"    private BobaBotStorage bobaBotStorage;","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"TanWenCong"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"TanWenCong"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"TanWenCong"},"content":"     * Creates a {@code StorageManager} with the given {@code BobaBotStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"TanWenCong"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"TanWenCong"},"content":"    public StorageManager(BobaBotStorage bobaBotStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"TanWenCong"},"content":"        this.bobaBotStorage \u003d bobaBotStorage;","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"TanWenCong"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"TanWenCong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"TanWenCong"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"TanWenCong"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":34,"author":{"gitId":"TanWenCong"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"TanWenCong"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2022-10-27"},{"lineNumber":36,"author":{"gitId":"TanWenCong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":38,"author":{"gitId":"TanWenCong"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"TanWenCong"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"TanWenCong"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2022-10-27"},{"lineNumber":41,"author":{"gitId":"TanWenCong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":42,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":43,"author":{"gitId":"TanWenCong"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"TanWenCong"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"TanWenCong"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2022-10-27"},{"lineNumber":46,"author":{"gitId":"TanWenCong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":47,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":48,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":49,"author":{"gitId":"TanWenCong"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d BobaBot methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-27"},{"lineNumber":50,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":51,"author":{"gitId":"TanWenCong"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":52,"author":{"gitId":"TanWenCong"},"content":"    public Path getBobaBotFilePath() {","lastModifiedDate":"2022-10-27"},{"lineNumber":53,"author":{"gitId":"TanWenCong"},"content":"        return bobaBotStorage.getBobaBotFilePath();","lastModifiedDate":"2022-10-27"},{"lineNumber":54,"author":{"gitId":"TanWenCong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":55,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":56,"author":{"gitId":"TanWenCong"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":57,"author":{"gitId":"TanWenCong"},"content":"    public Optional\u003cReadOnlyBobaBot\u003e readBobaBot() throws DataConversionException, IOException {","lastModifiedDate":"2022-10-27"},{"lineNumber":58,"author":{"gitId":"TanWenCong"},"content":"        return readBobaBot(bobaBotStorage.getBobaBotFilePath());","lastModifiedDate":"2022-10-27"},{"lineNumber":59,"author":{"gitId":"TanWenCong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":60,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":61,"author":{"gitId":"TanWenCong"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":62,"author":{"gitId":"TanWenCong"},"content":"    public Optional\u003cReadOnlyBobaBot\u003e readBobaBot(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2022-10-27"},{"lineNumber":63,"author":{"gitId":"TanWenCong"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2022-10-27"},{"lineNumber":64,"author":{"gitId":"TanWenCong"},"content":"        return bobaBotStorage.readBobaBot(filePath);","lastModifiedDate":"2022-10-27"},{"lineNumber":65,"author":{"gitId":"TanWenCong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":66,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":67,"author":{"gitId":"TanWenCong"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":68,"author":{"gitId":"TanWenCong"},"content":"    public void saveBobaBot(ReadOnlyBobaBot bobaBot) throws IOException {","lastModifiedDate":"2022-10-27"},{"lineNumber":69,"author":{"gitId":"TanWenCong"},"content":"        saveBobaBot(bobaBot, bobaBotStorage.getBobaBotFilePath());","lastModifiedDate":"2022-10-27"},{"lineNumber":70,"author":{"gitId":"TanWenCong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":71,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":72,"author":{"gitId":"TanWenCong"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":73,"author":{"gitId":"TanWenCong"},"content":"    public void saveBobaBot(ReadOnlyBobaBot bobaBot, Path filePath) throws IOException {","lastModifiedDate":"2022-10-27"},{"lineNumber":74,"author":{"gitId":"TanWenCong"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2022-10-27"},{"lineNumber":75,"author":{"gitId":"TanWenCong"},"content":"        bobaBotStorage.saveBobaBot(bobaBot, filePath);","lastModifiedDate":"2022-10-27"},{"lineNumber":76,"author":{"gitId":"TanWenCong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":77,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":78,"author":{"gitId":"TanWenCong"},"content":"}","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"TanWenCong":78}},{"path":"src/main/java/seedu/boba/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.storage;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.UserPrefs;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"TanWenCong"},"content":" * Represents a storage for {@link seedu.boba.model.UserPrefs}.","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"TanWenCong"},"content":"     * Saves the given {@link seedu.boba.model.ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"TanWenCong":6,"-":30}},{"path":"src/main/java/seedu/boba/ui/CalculatorWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.ui;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"WuHaohui1231"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"Samsation"},"content":"import static seedu.boba.commons.util.AppUtil.getImage;","lastModifiedDate":"2022-10-28"},{"lineNumber":4,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":5,"author":{"gitId":"WuHaohui1231"},"content":"import java.math.BigDecimal;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"WuHaohui1231"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"WuHaohui1231"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"WuHaohui1231"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"WuHaohui1231"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"WuHaohui1231"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"WuHaohui1231"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"WuHaohui1231"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.commons.core.LogsCenter;","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"WuHaohui1231"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"WuHaohui1231"},"content":"/**","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"WuHaohui1231"},"content":" * Controller for a calculator page","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"WuHaohui1231"},"content":" */","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"WuHaohui1231"},"content":"public class CalculatorWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"WuHaohui1231"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"WuHaohui1231"},"content":"    private static final String FXML \u003d \"CalculatorWindow.fxml\";","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"WuHaohui1231"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(CalculatorWindow.class);","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"Samsation"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/calculator.png\";","lastModifiedDate":"2022-10-28"},{"lineNumber":23,"author":{"gitId":"WuHaohui1231"},"content":"    private BigDecimal left;","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"WuHaohui1231"},"content":"    private String selectedOperator;","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"WuHaohui1231"},"content":"    private boolean numberInputting;","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"WuHaohui1231"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"WuHaohui1231"},"content":"    @FXML","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"WuHaohui1231"},"content":"    private TextField display;","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"WuHaohui1231"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"WuHaohui1231"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"WuHaohui1231"},"content":"     * Creates a new CalculatorWindow.","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"WuHaohui1231"},"content":"     *","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"WuHaohui1231"},"content":"     * @param root Stage to use as the root of the CalculatorWindow.","lastModifiedDate":"2022-10-27"},{"lineNumber":34,"author":{"gitId":"WuHaohui1231"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"WuHaohui1231"},"content":"    public CalculatorWindow(Stage root) {","lastModifiedDate":"2022-10-27"},{"lineNumber":36,"author":{"gitId":"WuHaohui1231"},"content":"        super(FXML, root);","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"WuHaohui1231"},"content":"        this.left \u003d BigDecimal.ZERO;","lastModifiedDate":"2022-10-27"},{"lineNumber":38,"author":{"gitId":"WuHaohui1231"},"content":"        this.selectedOperator \u003d \"\";","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"WuHaohui1231"},"content":"        this.numberInputting \u003d false;","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":41,"author":{"gitId":"Samsation"},"content":"        //Set the application icon.","lastModifiedDate":"2022-10-28"},{"lineNumber":42,"author":{"gitId":"Samsation"},"content":"        root.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2022-10-28"},{"lineNumber":43,"author":{"gitId":"WuHaohui1231"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"WuHaohui1231"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"WuHaohui1231"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":46,"author":{"gitId":"WuHaohui1231"},"content":"     * Creates a new CalculatorWindow.","lastModifiedDate":"2022-10-27"},{"lineNumber":47,"author":{"gitId":"WuHaohui1231"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":48,"author":{"gitId":"WuHaohui1231"},"content":"    public CalculatorWindow() {","lastModifiedDate":"2022-10-27"},{"lineNumber":49,"author":{"gitId":"WuHaohui1231"},"content":"        this(new Stage());","lastModifiedDate":"2022-10-27"},{"lineNumber":50,"author":{"gitId":"WuHaohui1231"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":51,"author":{"gitId":"WuHaohui1231"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":52,"author":{"gitId":"WuHaohui1231"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":53,"author":{"gitId":"WuHaohui1231"},"content":"     * Shows the calculator window.","lastModifiedDate":"2022-10-27"},{"lineNumber":54,"author":{"gitId":"WuHaohui1231"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2022-10-27"},{"lineNumber":55,"author":{"gitId":"WuHaohui1231"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":56,"author":{"gitId":"WuHaohui1231"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":57,"author":{"gitId":"WuHaohui1231"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2022-10-27"},{"lineNumber":58,"author":{"gitId":"WuHaohui1231"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":59,"author":{"gitId":"WuHaohui1231"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":60,"author":{"gitId":"WuHaohui1231"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2022-10-27"},{"lineNumber":61,"author":{"gitId":"WuHaohui1231"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":62,"author":{"gitId":"WuHaohui1231"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":63,"author":{"gitId":"WuHaohui1231"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2022-10-27"},{"lineNumber":64,"author":{"gitId":"WuHaohui1231"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":65,"author":{"gitId":"WuHaohui1231"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":66,"author":{"gitId":"WuHaohui1231"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2022-10-27"},{"lineNumber":67,"author":{"gitId":"WuHaohui1231"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":68,"author":{"gitId":"WuHaohui1231"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":69,"author":{"gitId":"WuHaohui1231"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":70,"author":{"gitId":"WuHaohui1231"},"content":"    public void show() {","lastModifiedDate":"2022-10-27"},{"lineNumber":71,"author":{"gitId":"WuHaohui1231"},"content":"        logger.fine(\"Showing calculator.\");","lastModifiedDate":"2022-10-27"},{"lineNumber":72,"author":{"gitId":"WuHaohui1231"},"content":"        getRoot().show();","lastModifiedDate":"2022-10-27"},{"lineNumber":73,"author":{"gitId":"WuHaohui1231"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2022-10-27"},{"lineNumber":74,"author":{"gitId":"WuHaohui1231"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":75,"author":{"gitId":"WuHaohui1231"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":76,"author":{"gitId":"WuHaohui1231"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":77,"author":{"gitId":"WuHaohui1231"},"content":"     * Returns true if the calculator window is currently being shown.","lastModifiedDate":"2022-10-27"},{"lineNumber":78,"author":{"gitId":"WuHaohui1231"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":79,"author":{"gitId":"WuHaohui1231"},"content":"    public boolean isShowing() {","lastModifiedDate":"2022-10-27"},{"lineNumber":80,"author":{"gitId":"WuHaohui1231"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2022-10-27"},{"lineNumber":81,"author":{"gitId":"WuHaohui1231"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":82,"author":{"gitId":"WuHaohui1231"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":83,"author":{"gitId":"WuHaohui1231"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":84,"author":{"gitId":"WuHaohui1231"},"content":"     * Hides the calculator window.","lastModifiedDate":"2022-10-27"},{"lineNumber":85,"author":{"gitId":"WuHaohui1231"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":86,"author":{"gitId":"WuHaohui1231"},"content":"    public void hide() {","lastModifiedDate":"2022-10-27"},{"lineNumber":87,"author":{"gitId":"WuHaohui1231"},"content":"        getRoot().hide();","lastModifiedDate":"2022-10-27"},{"lineNumber":88,"author":{"gitId":"WuHaohui1231"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":89,"author":{"gitId":"WuHaohui1231"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":90,"author":{"gitId":"WuHaohui1231"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":91,"author":{"gitId":"WuHaohui1231"},"content":"     * Focuses on the calculator window.","lastModifiedDate":"2022-10-27"},{"lineNumber":92,"author":{"gitId":"WuHaohui1231"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":93,"author":{"gitId":"WuHaohui1231"},"content":"    public void focus() {","lastModifiedDate":"2022-10-27"},{"lineNumber":94,"author":{"gitId":"WuHaohui1231"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2022-10-27"},{"lineNumber":95,"author":{"gitId":"WuHaohui1231"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":96,"author":{"gitId":"WuHaohui1231"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":97,"author":{"gitId":"WuHaohui1231"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":98,"author":{"gitId":"WuHaohui1231"},"content":"     * Handle the bottom clicks on calculator.","lastModifiedDate":"2022-10-27"},{"lineNumber":99,"author":{"gitId":"WuHaohui1231"},"content":"     * Reused from https://gist.github.com/argius/08834fab73b91de8d79b","lastModifiedDate":"2022-10-27"},{"lineNumber":100,"author":{"gitId":"WuHaohui1231"},"content":"     * with modifications.","lastModifiedDate":"2022-10-27"},{"lineNumber":101,"author":{"gitId":"WuHaohui1231"},"content":"     * @param evt User actions","lastModifiedDate":"2022-10-27"},{"lineNumber":102,"author":{"gitId":"WuHaohui1231"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":103,"author":{"gitId":"WuHaohui1231"},"content":"    @FXML","lastModifiedDate":"2022-10-27"},{"lineNumber":104,"author":{"gitId":"WuHaohui1231"},"content":"    protected void handleOnAnyButtonClicked(ActionEvent evt) {","lastModifiedDate":"2022-10-27"},{"lineNumber":105,"author":{"gitId":"WuHaohui1231"},"content":"        Button button \u003d (Button) evt.getSource();","lastModifiedDate":"2022-10-27"},{"lineNumber":106,"author":{"gitId":"WuHaohui1231"},"content":"        final String buttonText \u003d button.getText();","lastModifiedDate":"2022-10-27"},{"lineNumber":107,"author":{"gitId":"WuHaohui1231"},"content":"        if (buttonText.equals(\"C\") || buttonText.equals(\"AC\")) {","lastModifiedDate":"2022-10-27"},{"lineNumber":108,"author":{"gitId":"WuHaohui1231"},"content":"            if (buttonText.equals(\"AC\")) {","lastModifiedDate":"2022-10-27"},{"lineNumber":109,"author":{"gitId":"WuHaohui1231"},"content":"                left \u003d BigDecimal.ZERO;","lastModifiedDate":"2022-10-27"},{"lineNumber":110,"author":{"gitId":"WuHaohui1231"},"content":"            }","lastModifiedDate":"2022-10-27"},{"lineNumber":111,"author":{"gitId":"WuHaohui1231"},"content":"            selectedOperator \u003d \"\";","lastModifiedDate":"2022-10-27"},{"lineNumber":112,"author":{"gitId":"WuHaohui1231"},"content":"            numberInputting \u003d false;","lastModifiedDate":"2022-10-27"},{"lineNumber":113,"author":{"gitId":"WuHaohui1231"},"content":"            display.setText(\"0\");;","lastModifiedDate":"2022-10-27"},{"lineNumber":114,"author":{"gitId":"WuHaohui1231"},"content":"            return;","lastModifiedDate":"2022-10-27"},{"lineNumber":115,"author":{"gitId":"WuHaohui1231"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":116,"author":{"gitId":"WuHaohui1231"},"content":"        if (buttonText.matches(\"[0-9\\\\.]\")) {","lastModifiedDate":"2022-10-27"},{"lineNumber":117,"author":{"gitId":"WuHaohui1231"},"content":"            if (!numberInputting) {","lastModifiedDate":"2022-10-27"},{"lineNumber":118,"author":{"gitId":"WuHaohui1231"},"content":"                numberInputting \u003d true;","lastModifiedDate":"2022-10-27"},{"lineNumber":119,"author":{"gitId":"WuHaohui1231"},"content":"                display.clear();","lastModifiedDate":"2022-10-27"},{"lineNumber":120,"author":{"gitId":"WuHaohui1231"},"content":"            }","lastModifiedDate":"2022-10-27"},{"lineNumber":121,"author":{"gitId":"WuHaohui1231"},"content":"            display.appendText(buttonText);","lastModifiedDate":"2022-10-27"},{"lineNumber":122,"author":{"gitId":"WuHaohui1231"},"content":"            return;","lastModifiedDate":"2022-10-27"},{"lineNumber":123,"author":{"gitId":"WuHaohui1231"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":124,"author":{"gitId":"WuHaohui1231"},"content":"        if (buttonText.matches(\"[＋－×÷]\")) {","lastModifiedDate":"2022-10-27"},{"lineNumber":125,"author":{"gitId":"WuHaohui1231"},"content":"            left \u003d new BigDecimal(display.getText());","lastModifiedDate":"2022-10-27"},{"lineNumber":126,"author":{"gitId":"WuHaohui1231"},"content":"            selectedOperator \u003d buttonText;","lastModifiedDate":"2022-10-27"},{"lineNumber":127,"author":{"gitId":"WuHaohui1231"},"content":"            numberInputting \u003d false;","lastModifiedDate":"2022-10-27"},{"lineNumber":128,"author":{"gitId":"WuHaohui1231"},"content":"            return;","lastModifiedDate":"2022-10-27"},{"lineNumber":129,"author":{"gitId":"WuHaohui1231"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":130,"author":{"gitId":"WuHaohui1231"},"content":"        if (buttonText.equals(\"\u003d\")) {","lastModifiedDate":"2022-10-27"},{"lineNumber":131,"author":{"gitId":"WuHaohui1231"},"content":"            final BigDecimal right \u003d numberInputting ? new BigDecimal(display.getText()) : left;","lastModifiedDate":"2022-10-27"},{"lineNumber":132,"author":{"gitId":"WuHaohui1231"},"content":"            left \u003d calculate(selectedOperator, left, right);","lastModifiedDate":"2022-10-27"},{"lineNumber":133,"author":{"gitId":"WuHaohui1231"},"content":"            display.setText(left.toString());","lastModifiedDate":"2022-10-27"},{"lineNumber":134,"author":{"gitId":"WuHaohui1231"},"content":"            numberInputting \u003d false;","lastModifiedDate":"2022-10-27"},{"lineNumber":135,"author":{"gitId":"WuHaohui1231"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":136,"author":{"gitId":"WuHaohui1231"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":137,"author":{"gitId":"WuHaohui1231"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":138,"author":{"gitId":"WuHaohui1231"},"content":"    static BigDecimal calculate(String operator, BigDecimal left, BigDecimal right) {","lastModifiedDate":"2022-10-27"},{"lineNumber":139,"author":{"gitId":"WuHaohui1231"},"content":"        switch (operator) {","lastModifiedDate":"2022-10-27"},{"lineNumber":140,"author":{"gitId":"WuHaohui1231"},"content":"        case \"＋\":","lastModifiedDate":"2022-10-27"},{"lineNumber":141,"author":{"gitId":"WuHaohui1231"},"content":"            return left.add(right);","lastModifiedDate":"2022-10-27"},{"lineNumber":142,"author":{"gitId":"WuHaohui1231"},"content":"        case \"－\":","lastModifiedDate":"2022-10-27"},{"lineNumber":143,"author":{"gitId":"WuHaohui1231"},"content":"            return left.subtract(right);","lastModifiedDate":"2022-10-27"},{"lineNumber":144,"author":{"gitId":"WuHaohui1231"},"content":"        case \"×\":","lastModifiedDate":"2022-10-27"},{"lineNumber":145,"author":{"gitId":"WuHaohui1231"},"content":"            return left.multiply(right);","lastModifiedDate":"2022-10-27"},{"lineNumber":146,"author":{"gitId":"WuHaohui1231"},"content":"        case \"÷\":","lastModifiedDate":"2022-10-27"},{"lineNumber":147,"author":{"gitId":"WuHaohui1231"},"content":"            return left.divide(right);","lastModifiedDate":"2022-10-27"},{"lineNumber":148,"author":{"gitId":"WuHaohui1231"},"content":"        default:","lastModifiedDate":"2022-10-27"},{"lineNumber":149,"author":{"gitId":"WuHaohui1231"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":150,"author":{"gitId":"WuHaohui1231"},"content":"        return right;","lastModifiedDate":"2022-10-27"},{"lineNumber":151,"author":{"gitId":"WuHaohui1231"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":152,"author":{"gitId":"WuHaohui1231"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":153,"author":{"gitId":"WuHaohui1231"},"content":"}","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"Samsation":6,"TanWenCong":2,"WuHaohui1231":145}},{"path":"src/main/java/seedu/boba/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.ui;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.logic.commands.CommandResult;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"TanWenCong"},"content":"         * @see seedu.boba.logic.Logic#execute(String)","lastModifiedDate":"2022-10-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"TanWenCong":5,"-":80}},{"path":"src/main/java/seedu/boba/ui/CustomerCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.ui;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.model.customer.Customer.BIRTHDAY_TAG;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":6,"author":{"gitId":"Samsation"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"Samsation"},"content":"import java.util.List;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"Samsation"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Customer;","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.tag.Tag;","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"Samsation"},"content":" * An UI component that displays information of a {@code Customer}.","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"Samsation"},"content":"public class CustomerCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"Samsation"},"content":"    private static final String FXML \u003d \"CustomerListCard.fxml\";","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"Samsation"},"content":"    private static final HashMap\u003cString, String\u003e colourMap \u003d new HashMap\u003c\u003e() {{","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"Samsation"},"content":"            put(\"DIAMOND\", \" -fx-background-color: ba68c8; \");","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"Samsation"},"content":"            put(\"PLATINUM\", \" -fx-background-color: a5d6a7; \");","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"Samsation"},"content":"            put(\"GOLD\", \" -fx-background-color: c9b037; \");","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"Samsation"},"content":"            put(\"SILVER\", \" -fx-background-color: c0c0c0; \");","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"Samsation"},"content":"            put(\"BRONZE\", \" -fx-background-color: cd7f32; \");","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"Samsation"},"content":"            put(\"WARNING\", \" -fx-background-color: ff6600; \");","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"Samsation"},"content":"            put(\"BANNED\", \" -fx-background-color: dd0000; \");","lastModifiedDate":"2022-10-26"},{"lineNumber":33,"author":{"gitId":"Samsation"},"content":"            put(BIRTHDAY_TAG.tagName, \" -fx-background-color: ff69b4; \");","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"Samsation"},"content":"        }};","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":41,"author":{"gitId":"TanWenCong"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on BobaBot level 4\u003c/a\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":44,"author":{"gitId":"Samsation"},"content":"    public final Customer customer;","lastModifiedDate":"2022-10-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"TanWenCong"},"content":"    private Label birthdayMonth;","lastModifiedDate":"2022-10-26"},{"lineNumber":56,"author":{"gitId":"TanWenCong"},"content":"    @FXML","lastModifiedDate":"2022-10-26"},{"lineNumber":57,"author":{"gitId":"Samsation"},"content":"    private Label reward;","lastModifiedDate":"2022-10-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":64,"author":{"gitId":"Samsation"},"content":"     * Creates a {@code PersonCode} with the given {@code Customer} and index to display.","lastModifiedDate":"2022-10-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":66,"author":{"gitId":"Samsation"},"content":"    public CustomerCard(Customer customer, int displayedIndex) {","lastModifiedDate":"2022-10-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":68,"author":{"gitId":"Samsation"},"content":"        this.customer \u003d customer;","lastModifiedDate":"2022-10-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"Samsation"},"content":"        name.setText(customer.getName().fullName);","lastModifiedDate":"2022-10-26"},{"lineNumber":71,"author":{"gitId":"Samsation"},"content":"        phone.setText(customer.getPhone().displayValue);","lastModifiedDate":"2022-10-26"},{"lineNumber":72,"author":{"gitId":"Samsation"},"content":"        birthdayMonth.setText(customer.getBirthdayMonth().monthString);","lastModifiedDate":"2022-10-26"},{"lineNumber":73,"author":{"gitId":"Samsation"},"content":"        reward.setText(customer.getReward().displayValue);","lastModifiedDate":"2022-10-26"},{"lineNumber":74,"author":{"gitId":"Samsation"},"content":"        email.setText(customer.getEmail().displayValue);","lastModifiedDate":"2022-10-26"},{"lineNumber":75,"author":{"gitId":"Samsation"},"content":"        List\u003cTag\u003e listOfTags \u003d customer.getTags().stream()","lastModifiedDate":"2022-10-26"},{"lineNumber":76,"author":{"gitId":"Samsation"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName)).collect(Collectors.toList());","lastModifiedDate":"2022-10-26"},{"lineNumber":77,"author":{"gitId":"Samsation"},"content":"        for (Tag tag : listOfTags) {","lastModifiedDate":"2022-10-26"},{"lineNumber":78,"author":{"gitId":"Samsation"},"content":"            String tagName \u003d tag.tagName;","lastModifiedDate":"2022-10-26"},{"lineNumber":79,"author":{"gitId":"Samsation"},"content":"            Label label \u003d new Label(tagName);","lastModifiedDate":"2022-10-26"},{"lineNumber":80,"author":{"gitId":"albertZhangTJ"},"content":"            label.setStyle(colourMap.getOrDefault(tagName, \"  -fx-background-color: #3e7b91; \"));","lastModifiedDate":"2022-10-28"},{"lineNumber":81,"author":{"gitId":"Samsation"},"content":"            tags.getChildren().add(label);","lastModifiedDate":"2022-10-26"},{"lineNumber":82,"author":{"gitId":"Samsation"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":93,"author":{"gitId":"Samsation"},"content":"        if (!(other instanceof CustomerCard)) {","lastModifiedDate":"2022-10-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":98,"author":{"gitId":"Samsation"},"content":"        CustomerCard card \u003d (CustomerCard) other;","lastModifiedDate":"2022-10-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":100,"author":{"gitId":"Samsation"},"content":"                \u0026\u0026 customer.equals(card.customer);","lastModifiedDate":"2022-10-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Samsation":39,"TanWenCong":7,"albertZhangTJ":1,"-":55}},{"path":"src/main/java/seedu/boba/ui/CustomerListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.ui;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":3,"author":{"gitId":"Samsation"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"Samsation"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"Samsation"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"Samsation"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"Samsation"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"Samsation"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.commons.core.LogsCenter;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Customer;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"Samsation"},"content":"/**","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"Samsation"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"Samsation"},"content":" */","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"Samsation"},"content":"public class CustomerListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"Samsation"},"content":"    private static final String FXML \u003d \"CustomerListPanel.fxml\";","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"Samsation"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(CustomerListPanel.class);","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"Samsation"},"content":"    @FXML","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"Samsation"},"content":"    private ListView\u003cCustomer\u003e personListView;","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"Samsation"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"Samsation"},"content":"     * Creates a {@code CustomerListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"Samsation"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"Samsation"},"content":"    public CustomerListPanel(ObservableList\u003cCustomer\u003e customerList) {","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"Samsation"},"content":"        super(FXML);","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"Samsation"},"content":"        personListView.setItems(customerList);","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"Samsation"},"content":"        personListView.setCellFactory(listView -\u003e new PersonListViewCell());","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"Samsation"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":33,"author":{"gitId":"Samsation"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Customer} using a {@code CustomerCard}.","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"Samsation"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"Samsation"},"content":"    class PersonListViewCell extends ListCell\u003cCustomer\u003e {","lastModifiedDate":"2022-10-26"},{"lineNumber":36,"author":{"gitId":"Samsation"},"content":"        @Override","lastModifiedDate":"2022-10-26"},{"lineNumber":37,"author":{"gitId":"Samsation"},"content":"        protected void updateItem(Customer customer, boolean empty) {","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"Samsation"},"content":"            super.updateItem(customer, empty);","lastModifiedDate":"2022-10-26"},{"lineNumber":39,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"Samsation"},"content":"            if (empty || customer \u003d\u003d null) {","lastModifiedDate":"2022-10-26"},{"lineNumber":41,"author":{"gitId":"Samsation"},"content":"                setGraphic(null);","lastModifiedDate":"2022-10-26"},{"lineNumber":42,"author":{"gitId":"Samsation"},"content":"                setText(null);","lastModifiedDate":"2022-10-26"},{"lineNumber":43,"author":{"gitId":"Samsation"},"content":"            } else {","lastModifiedDate":"2022-10-26"},{"lineNumber":44,"author":{"gitId":"Samsation"},"content":"                setGraphic(new CustomerCard(customer, getIndex() + 1).getRoot());","lastModifiedDate":"2022-10-26"},{"lineNumber":45,"author":{"gitId":"Samsation"},"content":"            }","lastModifiedDate":"2022-10-26"},{"lineNumber":46,"author":{"gitId":"Samsation"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":47,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":48,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":49,"author":{"gitId":"Samsation"},"content":"}","lastModifiedDate":"2022-10-26"}],"authorContributionMap":{"Samsation":46,"TanWenCong":3}},{"path":"src/main/java/seedu/boba/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.ui;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.commons.core.LogsCenter;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"bensohh"},"content":"    public static final String USERGUIDE_URL \u003d","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"bensohh"},"content":"            \"https://github.com/AY2223S1-CS2103T-W09-1/tp/blob/master/docs/UserGuide.md\";","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"TanWenCong":2,"bensohh":2,"-":99}},{"path":"src/main/java/seedu/boba/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.ui;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"bensohh"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.commons.core.GuiSettings;","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.commons.core.LogsCenter;","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.logic.Logic;","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.logic.commands.CommandResult;","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"Samsation"},"content":"    private CustomerListPanel customerListPanel;","lastModifiedDate":"2022-10-26"},{"lineNumber":36,"author":{"gitId":"bensohh"},"content":"    private PromotionListPanel promotionListPanel;","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":39,"author":{"gitId":"WuHaohui1231"},"content":"    private CalculatorWindow calculatorWindow;","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"bensohh"},"content":"    @FXML","lastModifiedDate":"2022-10-27"},{"lineNumber":51,"author":{"gitId":"bensohh"},"content":"    private StackPane promotionListPanelPlaceholder;","lastModifiedDate":"2022-10-27"},{"lineNumber":52,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"WuHaohui1231"},"content":"        calculatorWindow \u003d new CalculatorWindow();","lastModifiedDate":"2022-10-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":119,"author":{"gitId":"bensohh"},"content":"    void fillInnerParts() throws IOException {","lastModifiedDate":"2022-10-27"},{"lineNumber":120,"author":{"gitId":"bensohh"},"content":"        //Fills up the customer list and its placeholder","lastModifiedDate":"2022-11-01"},{"lineNumber":121,"author":{"gitId":"Samsation"},"content":"        customerListPanel \u003d new CustomerListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2022-10-26"},{"lineNumber":122,"author":{"gitId":"Samsation"},"content":"        personListPanelPlaceholder.getChildren().add(customerListPanel.getRoot());","lastModifiedDate":"2022-10-26"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"bensohh"},"content":"        //Fills up the promotion list and its placeholder","lastModifiedDate":"2022-11-01"},{"lineNumber":125,"author":{"gitId":"bensohh"},"content":"        this.logic.parseAllPromotion(\"promotions\");","lastModifiedDate":"2022-10-27"},{"lineNumber":126,"author":{"gitId":"bensohh"},"content":"        promotionListPanel \u003d new PromotionListPanel(this.logic.getPromotionList());","lastModifiedDate":"2022-10-27"},{"lineNumber":127,"author":{"gitId":"bensohh"},"content":"        promotionListPanelPlaceholder.getChildren().add(promotionListPanel.getRoot());","lastModifiedDate":"2022-10-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":129,"author":{"gitId":"bensohh"},"content":"        //Fills up the result display box","lastModifiedDate":"2022-11-01"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":133,"author":{"gitId":"bensohh"},"content":"        //Fills up the bottom status bar indicating file path","lastModifiedDate":"2022-11-01"},{"lineNumber":134,"author":{"gitId":"TanWenCong"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getBobaBotFilePath());","lastModifiedDate":"2022-10-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":137,"author":{"gitId":"bensohh"},"content":"        //Fills up the command box","lastModifiedDate":"2022-11-01"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"WuHaohui1231"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":167,"author":{"gitId":"WuHaohui1231"},"content":"     * Opens","lastModifiedDate":"2022-10-27"},{"lineNumber":168,"author":{"gitId":"WuHaohui1231"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":169,"author":{"gitId":"WuHaohui1231"},"content":"    @FXML","lastModifiedDate":"2022-10-27"},{"lineNumber":170,"author":{"gitId":"WuHaohui1231"},"content":"    public void handleCalculator() {","lastModifiedDate":"2022-10-27"},{"lineNumber":171,"author":{"gitId":"WuHaohui1231"},"content":"        if (!calculatorWindow.isShowing()) {","lastModifiedDate":"2022-10-27"},{"lineNumber":172,"author":{"gitId":"WuHaohui1231"},"content":"            calculatorWindow.show();","lastModifiedDate":"2022-10-27"},{"lineNumber":173,"author":{"gitId":"WuHaohui1231"},"content":"        } else {","lastModifiedDate":"2022-10-27"},{"lineNumber":174,"author":{"gitId":"WuHaohui1231"},"content":"            calculatorWindow.focus();","lastModifiedDate":"2022-10-27"},{"lineNumber":175,"author":{"gitId":"WuHaohui1231"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":176,"author":{"gitId":"WuHaohui1231"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":177,"author":{"gitId":"WuHaohui1231"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":184,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":191,"author":{"gitId":"WuHaohui1231"},"content":"        calculatorWindow.hide();","lastModifiedDate":"2022-10-27"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":195,"author":{"gitId":"Samsation"},"content":"    public CustomerListPanel getPersonListPanel() {","lastModifiedDate":"2022-10-26"},{"lineNumber":196,"author":{"gitId":"Samsation"},"content":"        return customerListPanel;","lastModifiedDate":"2022-10-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"TanWenCong"},"content":"     * @see seedu.boba.logic.Logic#execute(String)","lastModifiedDate":"2022-10-27"},{"lineNumber":203,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":215,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":218,"author":{"gitId":"WuHaohui1231"},"content":"            if (commandResult.isShowCalculator()) {","lastModifiedDate":"2022-10-27"},{"lineNumber":219,"author":{"gitId":"WuHaohui1231"},"content":"                handleCalculator();","lastModifiedDate":"2022-10-27"},{"lineNumber":220,"author":{"gitId":"WuHaohui1231"},"content":"            }","lastModifiedDate":"2022-10-27"},{"lineNumber":221,"author":{"gitId":"WuHaohui1231"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Samsation":5,"TanWenCong":9,"bensohh":14,"-":182,"WuHaohui1231":19}},{"path":"src/main/java/seedu/boba/ui/PromotionCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.ui;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"bensohh"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"bensohh"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"bensohh"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"bensohh"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"bensohh"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"bensohh"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"bensohh"},"content":"/**","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"bensohh"},"content":" * An UI component that displays information of a {@code Promotion}.","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"bensohh"},"content":" */","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"bensohh"},"content":"public class PromotionCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"bensohh"},"content":"    private static final String FXML \u003d \"PromotionListCard.fxml\";","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"bensohh"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"bensohh"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"bensohh"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"bensohh"},"content":"     *","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"TanWenCong"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on BobaBot level 4\u003c/a\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"bensohh"},"content":"    public final Image image;","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"bensohh"},"content":"    @FXML","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"bensohh"},"content":"    private HBox cardPane;","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"bensohh"},"content":"    @FXML","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"bensohh"},"content":"    private StackPane stackPane;","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":34,"author":{"gitId":"bensohh"},"content":"     * Creates a {@code PromotionCode} with the given {@code Promotion} and index to display.","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":36,"author":{"gitId":"bensohh"},"content":"    public PromotionCard(Image image, int displayedIndex) {","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"bensohh"},"content":"        super(FXML);","lastModifiedDate":"2022-10-27"},{"lineNumber":38,"author":{"gitId":"bensohh"},"content":"        this.image \u003d image;","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"bensohh"},"content":"        ImageView imageView \u003d new ImageView(image);","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"bensohh"},"content":"        //setting the fit height and width of the image view to the ratio of A4","lastModifiedDate":"2022-10-27"},{"lineNumber":41,"author":{"gitId":"bensohh"},"content":"        imageView.setFitHeight(636.4);","lastModifiedDate":"2022-10-27"},{"lineNumber":42,"author":{"gitId":"bensohh"},"content":"        imageView.setFitWidth(450);","lastModifiedDate":"2022-10-27"},{"lineNumber":43,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"bensohh"},"content":"        //Setting the preserve ratio of the image view","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"bensohh"},"content":"        imageView.setPreserveRatio(true);","lastModifiedDate":"2022-10-27"},{"lineNumber":46,"author":{"gitId":"bensohh"},"content":"        stackPane.getChildren().add(imageView);","lastModifiedDate":"2022-10-27"},{"lineNumber":47,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":48,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":49,"author":{"gitId":"bensohh"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":50,"author":{"gitId":"bensohh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-27"},{"lineNumber":51,"author":{"gitId":"bensohh"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-27"},{"lineNumber":52,"author":{"gitId":"bensohh"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-27"},{"lineNumber":53,"author":{"gitId":"bensohh"},"content":"            return true;","lastModifiedDate":"2022-10-27"},{"lineNumber":54,"author":{"gitId":"bensohh"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":55,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":56,"author":{"gitId":"bensohh"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-27"},{"lineNumber":57,"author":{"gitId":"bensohh"},"content":"        if (!(other instanceof PromotionCard)) {","lastModifiedDate":"2022-10-27"},{"lineNumber":58,"author":{"gitId":"bensohh"},"content":"            return false;","lastModifiedDate":"2022-10-27"},{"lineNumber":59,"author":{"gitId":"bensohh"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":60,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":61,"author":{"gitId":"bensohh"},"content":"        // state check","lastModifiedDate":"2022-10-27"},{"lineNumber":62,"author":{"gitId":"bensohh"},"content":"        PromotionCard card \u003d (PromotionCard) other;","lastModifiedDate":"2022-10-27"},{"lineNumber":63,"author":{"gitId":"bensohh"},"content":"        return image.equals(card.image);","lastModifiedDate":"2022-10-27"},{"lineNumber":64,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":65,"author":{"gitId":"bensohh"},"content":"}","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"TanWenCong":2,"bensohh":63}},{"path":"src/main/java/seedu/boba/ui/PromotionListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.ui;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"bensohh"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"bensohh"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"bensohh"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"bensohh"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"bensohh"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"bensohh"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"bensohh"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.commons.core.LogsCenter;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"bensohh"},"content":"/**","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"bensohh"},"content":" * Panel containing the list of promotions.","lastModifiedDate":"2022-11-01"},{"lineNumber":15,"author":{"gitId":"bensohh"},"content":" */","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"bensohh"},"content":"public class PromotionListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"bensohh"},"content":"    private static final String FXML \u003d \"PromotionListPanel.fxml\";","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"bensohh"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PromotionListPanel.class);","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"bensohh"},"content":"    @FXML","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"bensohh"},"content":"    private ListView\u003cImage\u003e promotionListView;","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"bensohh"},"content":"     * Creates a {@code PromotionListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"bensohh"},"content":"    public PromotionListPanel(ObservableList\u003cImage\u003e promotionList) {","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"bensohh"},"content":"        super(FXML);","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"bensohh"},"content":"        promotionListView.setItems(promotionList);","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"bensohh"},"content":"        promotionListView.setCellFactory(listView -\u003e new PromotionListViewCell());","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"bensohh"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Image} using a {@code PromotionCard}.","lastModifiedDate":"2022-11-01"},{"lineNumber":34,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"bensohh"},"content":"    class PromotionListViewCell extends ListCell\u003cImage\u003e {","lastModifiedDate":"2022-10-27"},{"lineNumber":36,"author":{"gitId":"bensohh"},"content":"        @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"bensohh"},"content":"        protected void updateItem(Image image, boolean empty) {","lastModifiedDate":"2022-10-27"},{"lineNumber":38,"author":{"gitId":"bensohh"},"content":"            super.updateItem(image, empty);","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"bensohh"},"content":"            if (empty || image \u003d\u003d null) {","lastModifiedDate":"2022-10-27"},{"lineNumber":41,"author":{"gitId":"bensohh"},"content":"                setGraphic(null);","lastModifiedDate":"2022-10-27"},{"lineNumber":42,"author":{"gitId":"bensohh"},"content":"                setText(null);","lastModifiedDate":"2022-10-27"},{"lineNumber":43,"author":{"gitId":"bensohh"},"content":"            } else {","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"bensohh"},"content":"                setGraphic(new PromotionCard(image, getIndex() + 1).getRoot());","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"bensohh"},"content":"            }","lastModifiedDate":"2022-10-27"},{"lineNumber":46,"author":{"gitId":"bensohh"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":47,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":48,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":49,"author":{"gitId":"bensohh"},"content":"}","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"TanWenCong":2,"bensohh":47}},{"path":"src/main/java/seedu/boba/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.ui;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"TanWenCong":1,"-":27}},{"path":"src/main/java/seedu/boba/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.ui;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public StatusBarFooter(Path saveLocation) {","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        saveLocationStatus.setText(Paths.get(\".\").resolve(saveLocation).toString());","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"TanWenCong":1,"-":27}},{"path":"src/main/java/seedu/boba/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.ui;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * API of UI component","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /** Starts the UI (and the App).  */","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"TanWenCong":1,"-":12}},{"path":"src/main/java/seedu/boba/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.ui;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.MainApp;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.commons.core.LogsCenter;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.commons.util.StringUtil;","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.logic.Logic;","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"Samsation"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/bobaBot.png\";","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Samsation":1,"TanWenCong":5,"-":82}},{"path":"src/main/java/seedu/boba/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.ui;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.MainApp;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Resource folder where FXML files are stored. */","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"TanWenCong":2,"-":86}},{"path":"src/main/resources/view/CalculatorWindow.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"WuHaohui1231"},"content":".background {","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"bensohh"},"content":"  -fx-background-color: #DDB892;","lastModifiedDate":"2022-10-28"},{"lineNumber":3,"author":{"gitId":"WuHaohui1231"},"content":"}","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"WuHaohui1231"},"content":".button {","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"bensohh"},"content":"  -fx-background-color: derive(#AB8C6B, 10%);","lastModifiedDate":"2022-10-28"},{"lineNumber":6,"author":{"gitId":"WuHaohui1231"},"content":"}","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"WuHaohui1231"},"content":".display {","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"bensohh"},"content":"  -fx-background-color: derive(#EDE0D4, 20%);","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"WuHaohui1231"},"content":"}","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"bensohh":3,"WuHaohui1231":6}},{"path":"src/main/resources/view/CalculatorWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"WuHaohui1231"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"WuHaohui1231"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"WuHaohui1231"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"bensohh"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":5,"author":{"gitId":"bensohh"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":6,"author":{"gitId":"bensohh"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"bensohh"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"bensohh"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"WuHaohui1231"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"WuHaohui1231"},"content":"\u003c!-- Reused from https://gist.github.com/argius/08834fab73b91de8d79b with modifications --\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":12,"author":{"gitId":"bensohh"},"content":"\u003cfx:root minHeight\u003d\"270.0\" minWidth\u003d\"201.0\" title\u003d\"Calculator\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/18\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"WuHaohui1231"},"content":"   \u003cscene\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"WuHaohui1231"},"content":"      \u003cScene\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"bensohh"},"content":"         \u003cAnchorPane minHeight\u003d\"270.0\" minWidth\u003d\"201.0\" styleClass\u003d\"background\" stylesheets\u003d\"@CalculatorWindow.css\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"WuHaohui1231"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"bensohh"},"content":"               \u003cButton layoutX\u003d\"27.0\" layoutY\u003d\"183.0\" minHeight\u003d\"30.0\" minWidth\u003d\"30.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleOnAnyButtonClicked\" text\u003d\"1\" /\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":19,"author":{"gitId":"bensohh"},"content":"               \u003cButton layoutX\u003d\"66.0\" layoutY\u003d\"183.0\" minHeight\u003d\"30.0\" minWidth\u003d\"30.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleOnAnyButtonClicked\" text\u003d\"2\" /\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":20,"author":{"gitId":"bensohh"},"content":"               \u003cButton layoutX\u003d\"104.0\" layoutY\u003d\"183.0\" minHeight\u003d\"30.0\" minWidth\u003d\"30.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleOnAnyButtonClicked\" text\u003d\"3\" /\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"bensohh"},"content":"               \u003cButton layoutX\u003d\"27.0\" layoutY\u003d\"146.0\" minHeight\u003d\"30.0\" minWidth\u003d\"30.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleOnAnyButtonClicked\" text\u003d\"4\" /\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":22,"author":{"gitId":"bensohh"},"content":"               \u003cButton layoutX\u003d\"66.0\" layoutY\u003d\"146.0\" minHeight\u003d\"30.0\" minWidth\u003d\"30.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleOnAnyButtonClicked\" text\u003d\"5\" /\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":23,"author":{"gitId":"bensohh"},"content":"               \u003cButton layoutX\u003d\"104.0\" layoutY\u003d\"146.0\" minHeight\u003d\"30.0\" minWidth\u003d\"30.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleOnAnyButtonClicked\" text\u003d\"6\" /\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":24,"author":{"gitId":"bensohh"},"content":"               \u003cButton layoutX\u003d\"27.0\" layoutY\u003d\"109.0\" minHeight\u003d\"30.0\" minWidth\u003d\"30.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleOnAnyButtonClicked\" text\u003d\"7\" /\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"bensohh"},"content":"               \u003cButton layoutX\u003d\"66.0\" layoutY\u003d\"109.0\" minHeight\u003d\"30.0\" minWidth\u003d\"30.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleOnAnyButtonClicked\" text\u003d\"8\" /\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":26,"author":{"gitId":"bensohh"},"content":"               \u003cButton layoutX\u003d\"104.0\" layoutY\u003d\"109.0\" minHeight\u003d\"30.0\" minWidth\u003d\"30.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleOnAnyButtonClicked\" text\u003d\"9\" /\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":27,"author":{"gitId":"bensohh"},"content":"               \u003cTextField fx:id\u003d\"display\" alignment\u003d\"CENTER_RIGHT\" editable\u003d\"false\" layoutX\u003d\"26.0\" layoutY\u003d\"17.0\" minHeight\u003d\"40.0\" minWidth\u003d\"150.0\" prefHeight\u003d\"40.0\" prefWidth\u003d\"150.0\" styleClass\u003d\"display\" text\u003d\"0\"\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":28,"author":{"gitId":"WuHaohui1231"},"content":"                  \u003cfont\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"bensohh"},"content":"                     \u003cFont size\u003d\"20.0\" /\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":30,"author":{"gitId":"WuHaohui1231"},"content":"                  \u003c/font\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"WuHaohui1231"},"content":"               \u003c/TextField\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"bensohh"},"content":"               \u003cButton layoutX\u003d\"104.0\" layoutY\u003d\"72.0\" minHeight\u003d\"30.0\" minWidth\u003d\"30.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleOnAnyButtonClicked\" prefHeight\u003d\"25.0\" prefWidth\u003d\"27.0\" text\u003d\"C\" /\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":33,"author":{"gitId":"bensohh"},"content":"               \u003cButton layoutX\u003d\"104.0\" layoutY\u003d\"220.0\" minHeight\u003d\"30.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleOnAnyButtonClicked\" prefHeight\u003d\"25.0\" prefWidth\u003d\"71.0\" text\u003d\"\u003d\" /\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":34,"author":{"gitId":"bensohh"},"content":"               \u003cButton layoutX\u003d\"142.0\" layoutY\u003d\"183.0\" minHeight\u003d\"30.0\" minWidth\u003d\"31.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleOnAnyButtonClicked\" prefHeight\u003d\"25.0\" prefWidth\u003d\"33.0\" text\u003d\"＋\" /\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":35,"author":{"gitId":"bensohh"},"content":"               \u003cButton layoutX\u003d\"27.0\" layoutY\u003d\"220.0\" minHeight\u003d\"30.0\" minWidth\u003d\"30.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleOnAnyButtonClicked\" text\u003d\"0\" /\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":36,"author":{"gitId":"bensohh"},"content":"               \u003cButton layoutX\u003d\"142.0\" layoutY\u003d\"146.0\" minHeight\u003d\"30.0\" minWidth\u003d\"31.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleOnAnyButtonClicked\" prefHeight\u003d\"25.0\" prefWidth\u003d\"33.0\" text\u003d\"－\" /\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":37,"author":{"gitId":"bensohh"},"content":"               \u003cButton layoutX\u003d\"142.0\" layoutY\u003d\"109.0\" minHeight\u003d\"30.0\" minWidth\u003d\"31.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleOnAnyButtonClicked\" prefHeight\u003d\"25.0\" prefWidth\u003d\"33.0\" styleClass\u003d\"background\" text\u003d\"×\" /\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":38,"author":{"gitId":"bensohh"},"content":"               \u003cButton layoutX\u003d\"142.0\" layoutY\u003d\"72.0\" minHeight\u003d\"30.0\" minWidth\u003d\"31.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleOnAnyButtonClicked\" prefHeight\u003d\"25.0\" prefWidth\u003d\"33.0\" styleClass\u003d\"background\" text\u003d\"÷\" /\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":39,"author":{"gitId":"bensohh"},"content":"               \u003cButton layoutX\u003d\"27.0\" layoutY\u003d\"72.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleOnAnyButtonClicked\" prefHeight\u003d\"30.0\" prefWidth\u003d\"69.0\" text\u003d\"AC\" /\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":40,"author":{"gitId":"bensohh"},"content":"               \u003cButton layoutX\u003d\"66.0\" layoutY\u003d\"220.0\" minHeight\u003d\"30.0\" minWidth\u003d\"30.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleOnAnyButtonClicked\" prefHeight\u003d\"25.0\" prefWidth\u003d\"27.0\" text\u003d\".\" /\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":41,"author":{"gitId":"WuHaohui1231"},"content":"            \u003c/children\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":42,"author":{"gitId":"WuHaohui1231"},"content":"         \u003c/AnchorPane\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":43,"author":{"gitId":"WuHaohui1231"},"content":"      \u003c/Scene\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"WuHaohui1231"},"content":"   \u003c/scene\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"WuHaohui1231"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"bensohh":29,"WuHaohui1231":16}},{"path":"src/main/resources/view/CommandBox.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"bensohh"},"content":"\u003cStackPane styleClass\u003d\"stack-pane\" xmlns\u003d\"http://javafx.com/javafx/18\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  \u003cTextField fx:id\u003d\"commandTextField\" onAction\u003d\"#handleCommandEntered\" promptText\u003d\"Enter command here...\"/\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"bensohh":1,"-":7}},{"path":"src/main/resources/view/CustomerListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"bensohh"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":13,"author":{"gitId":"bensohh"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" style\u003d\"-fx-background-radius: 10;\" xmlns\u003d\"http://javafx.com/javafx/18\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"bensohh"},"content":"        \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"bensohh"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"bensohh"},"content":"        \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" /\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"TanWenCong"},"content":"         \u003cLabel fx:id\u003d\"birthdayMonth\" layoutX\u003d\"25.0\" layoutY\u003d\"45.0\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$birthdayMonth\" /\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"Samsation"},"content":"      \u003cLabel fx:id\u003d\"reward\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$reward\" /\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"bensohh"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"bensohh"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"bensohh"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Samsation":1,"TanWenCong":1,"bensohh":8,"-":31}},{"path":"src/main/resources/view/CustomerListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"bensohh"},"content":"\u003cVBox style\u003d\"-fx-background-color: #e6CCB2;\" xmlns\u003d\"http://javafx.com/javafx/18\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"bensohh"},"content":"  \u003cListView fx:id\u003d\"personListView\" style\u003d\"-fx-background-color: derive(#1D1D1D, 20%); -fx-background-radius: 10;\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"bensohh":2,"-":6}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"bensohh"},"content":"    -fx-background-color: derive(#EDE0D4, 20%);","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"bensohh"},"content":"    -fx-base: #EDE0D4;","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"bensohh"},"content":"    -fx-control-inner-background: #EDE0D4;","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"bensohh"},"content":"    -fx-background-color: #EDE0D4;","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"bensohh"},"content":"    -fx-background-color: derive(#EDE0D4, 20%);","lastModifiedDate":"2022-10-11"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"bensohh"},"content":"    -fx-background-color: derive(#EDE0D4, 20%);","lastModifiedDate":"2022-10-11"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"bensohh"},"content":"    -fx-background-color: derive(#EDE0D4, 20%);","lastModifiedDate":"2022-10-11"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"bensohh"},"content":"/* Sets the colour for each of the entry shown to #AB8C6B (Lighter shade of brown)","lastModifiedDate":"2022-10-14"},{"lineNumber":103,"author":{"gitId":"bensohh"},"content":"if it is even, for e.g. the customers in the 0th, 2nd, 4th,... positions are set to this colour. */","lastModifiedDate":"2022-10-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"bensohh"},"content":"    -fx-background-color: #AB8C6B;","lastModifiedDate":"2022-10-11"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"bensohh"},"content":"/* Sets the colour for each of the entry shown to #81684D (Darker shade of brown)","lastModifiedDate":"2022-10-14"},{"lineNumber":109,"author":{"gitId":"bensohh"},"content":"if it is even, for e.g. the customers in the 1st, 3rd, 5th,... positions are set to this colour. */","lastModifiedDate":"2022-10-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"bensohh"},"content":"    -fx-background-color: #81684D;","lastModifiedDate":"2022-10-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"bensohh"},"content":"/* Sets the colour shown for when we select(mouse click) each of the customer entry on the GUI */","lastModifiedDate":"2022-10-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"bensohh"},"content":"    -fx-background-color: #6C6053;","lastModifiedDate":"2022-10-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"bensohh"},"content":"/* Sets the colour \u0026 width of the border of the selection frame when we select(mouse click)","lastModifiedDate":"2022-10-14"},{"lineNumber":120,"author":{"gitId":"bensohh"},"content":"each of the customer entry on the GUI */","lastModifiedDate":"2022-10-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":122,"author":{"gitId":"bensohh"},"content":"    -fx-border-color: #4D3D3D;","lastModifiedDate":"2022-10-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":126,"author":{"gitId":"bensohh"},"content":"/* Sets the font-colour of the Customer\u0027s details shown in each row */","lastModifiedDate":"2022-10-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":129,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"bensohh"},"content":"/* Sets the font formatting for the big labels (aka the NAME formatting of each customer) */","lastModifiedDate":"2022-10-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"bensohh"},"content":"/* Sets the font formatting for the small labels (aka the PHONE NUMBER, EMAIL, REWARDS, ... of each customer) */","lastModifiedDate":"2022-10-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":146,"author":{"gitId":"bensohh"},"content":"     -fx-background-color: #e6ccb2;","lastModifiedDate":"2022-10-11"},{"lineNumber":147,"author":{"gitId":"bensohh"},"content":"     -fx-background-radius: 15;","lastModifiedDate":"2022-10-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":156,"author":{"gitId":"bensohh"},"content":"/* Sets styling for the box containing the result-display */","lastModifiedDate":"2022-10-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":166,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"bensohh"},"content":"/* Sets the bottom status bar to #4D3D3D (Dark Reddish-Brown) colour */","lastModifiedDate":"2022-10-14"},{"lineNumber":169,"author":{"gitId":"bensohh"},"content":".status-bar {","lastModifiedDate":"2022-10-11"},{"lineNumber":170,"author":{"gitId":"bensohh"},"content":"    -fx-background-color: #4D3D3D;","lastModifiedDate":"2022-10-11"},{"lineNumber":171,"author":{"gitId":"bensohh"},"content":"}","lastModifiedDate":"2022-10-11"},{"lineNumber":172,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":173,"author":{"gitId":"bensohh"},"content":"/* Sets the CSS elements of the status bar */","lastModifiedDate":"2022-10-14"},{"lineNumber":174,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"bensohh"},"content":"    -fx-background-color: derive(#EDE0D4, 30%);","lastModifiedDate":"2022-10-11"},{"lineNumber":193,"author":{"gitId":"bensohh"},"content":"    -fx-border-color: derive(#EDE0D4, 30%);","lastModifiedDate":"2022-10-11"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":198,"author":{"gitId":"bensohh"},"content":"    -fx-background-color: derive(#EDE0D4, 30%);","lastModifiedDate":"2022-10-11"},{"lineNumber":199,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"bensohh"},"content":"/* Sets the colour of the menu item after drop down to #4D3D3D (a lighter shade of dark reddish-brown) */","lastModifiedDate":"2022-10-14"},{"lineNumber":202,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"bensohh"},"content":"    -fx-background-color: derive(#4D3D3D, 50%);","lastModifiedDate":"2022-10-11"},{"lineNumber":204,"author":{"gitId":"bensohh"},"content":"    -fx-highlight-fill: red;","lastModifiedDate":"2022-10-14"},{"lineNumber":205,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"bensohh"},"content":"/* Sets the top menu-bar (with File \u0026 Help) to #DDB892 (Burlywood) colour */","lastModifiedDate":"2022-10-14"},{"lineNumber":212,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"bensohh"},"content":"    -fx-background-color: #DDB892;","lastModifiedDate":"2022-10-11"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"bensohh"},"content":"/* Sets the CSS elements within the menu-bar */","lastModifiedDate":"2022-10-14"},{"lineNumber":217,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"bensohh"},"content":"/* Sets the hovering colour of the menu buttons for File \u0026 Help */","lastModifiedDate":"2022-10-14"},{"lineNumber":229,"author":{"gitId":"bensohh"},"content":".menu:hover {","lastModifiedDate":"2022-10-14"},{"lineNumber":230,"author":{"gitId":"bensohh"},"content":"    -fx-background-color: #B08968;","lastModifiedDate":"2022-10-14"},{"lineNumber":231,"author":{"gitId":"bensohh"},"content":"}","lastModifiedDate":"2022-10-14"},{"lineNumber":232,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":233,"author":{"gitId":"bensohh"},"content":"/* Sets the hovering colour of the menu items within each menu button */","lastModifiedDate":"2022-10-14"},{"lineNumber":234,"author":{"gitId":"bensohh"},"content":".menu-item:hover {","lastModifiedDate":"2022-10-14"},{"lineNumber":235,"author":{"gitId":"bensohh"},"content":"    -fx-background-color: derive(#4D3D3D, 20%);","lastModifiedDate":"2022-10-14"},{"lineNumber":236,"author":{"gitId":"bensohh"},"content":"}","lastModifiedDate":"2022-10-14"},{"lineNumber":237,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":238,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":262,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"bensohh"},"content":"    -fx-background-color: #EDE0D4;","lastModifiedDate":"2022-10-11"},{"lineNumber":289,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"bensohh"},"content":"    -fx-background-color: #EDE0D4;","lastModifiedDate":"2022-10-11"},{"lineNumber":293,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":295,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":299,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":301,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":302,"author":{"gitId":"bensohh"},"content":"    -fx-background-color: derive(#EDE0D4, 25%);","lastModifiedDate":"2022-10-11"},{"lineNumber":303,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":305,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":310,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"bensohh"},"content":"/* Sets the background of the scroll bar to #EDE0D4 (very light shade of orange/whitish-beige) colour */","lastModifiedDate":"2022-10-14"},{"lineNumber":313,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":314,"author":{"gitId":"bensohh"},"content":"    -fx-background-color: derive(#EDE0D4, 20%);","lastModifiedDate":"2022-10-11"},{"lineNumber":315,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":317,"author":{"gitId":"bensohh"},"content":"/* Sets the scroll bar to #4D3D3D (Dark reddish-brown but lighter shade 50%) colour */","lastModifiedDate":"2022-10-14"},{"lineNumber":318,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":319,"author":{"gitId":"bensohh"},"content":"    -fx-background-color: derive(#4D3D3D, 50%);","lastModifiedDate":"2022-10-11"},{"lineNumber":320,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":321,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":323,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":326,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":328,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":330,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":332,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":334,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":336,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":338,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":340,"author":{"gitId":"bensohh"},"content":"/* CSS elements for the placeholder containing the command box */","lastModifiedDate":"2022-10-14"},{"lineNumber":341,"author":{"gitId":"bensohh"},"content":"#commandBoxPlaceholder {","lastModifiedDate":"2022-10-11"},{"lineNumber":342,"author":{"gitId":"bensohh"},"content":"    -fx-background-color: #e6ccb2;","lastModifiedDate":"2022-10-11"},{"lineNumber":343,"author":{"gitId":"bensohh"},"content":"    -fx-border-radius: 10;","lastModifiedDate":"2022-10-11"},{"lineNumber":344,"author":{"gitId":"bensohh"},"content":"}","lastModifiedDate":"2022-10-11"},{"lineNumber":345,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":346,"author":{"gitId":"bensohh"},"content":"/* Sets every card (aka a rectangle box containing customer data in each row) to have a transparent background */","lastModifiedDate":"2022-10-14"},{"lineNumber":347,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":349,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":351,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":352,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":354,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":356,"author":{"gitId":"bensohh"},"content":"/* CSS styling for the Command Field */","lastModifiedDate":"2022-10-14"},{"lineNumber":357,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":358,"author":{"gitId":"bensohh"},"content":"    -fx-background-color: #ddb892;","lastModifiedDate":"2022-10-11"},{"lineNumber":359,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":361,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":364,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":365,"author":{"gitId":"bensohh"},"content":"    -fx-prompt-text-fill: white;","lastModifiedDate":"2022-10-11"},{"lineNumber":366,"author":{"gitId":"bensohh"},"content":"    -fx-border-radius: 10;","lastModifiedDate":"2022-10-11"},{"lineNumber":367,"author":{"gitId":"bensohh"},"content":"    -fx-background-radius: 10;","lastModifiedDate":"2022-10-11"},{"lineNumber":368,"author":{"gitId":"bensohh"},"content":"    -fx-border-color: #ddb892;","lastModifiedDate":"2022-10-11"},{"lineNumber":369,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":371,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":372,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":373,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":375,"author":{"gitId":"bensohh"},"content":"/* Sets the background of the result display to #4D3D3D (Dark reddish-brown) colour */","lastModifiedDate":"2022-10-14"},{"lineNumber":376,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":377,"author":{"gitId":"bensohh"},"content":"    -fx-background-color: #4D3D3D;","lastModifiedDate":"2022-10-11"},{"lineNumber":378,"author":{"gitId":"bensohh"},"content":"}","lastModifiedDate":"2022-10-11"},{"lineNumber":379,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":380,"author":{"gitId":"bensohh"},"content":"/* CSS styling for the frame surrounding the result display box */","lastModifiedDate":"2022-10-14"},{"lineNumber":381,"author":{"gitId":"bensohh"},"content":"#resultDisplayPlaceholder {","lastModifiedDate":"2022-10-11"},{"lineNumber":382,"author":{"gitId":"bensohh"},"content":"    -fx-background-color: #e6ccb2;","lastModifiedDate":"2022-10-11"},{"lineNumber":383,"author":{"gitId":"bensohh"},"content":"    -fx-border-radius: 10;","lastModifiedDate":"2022-10-11"},{"lineNumber":384,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":386,"author":{"gitId":"bensohh"},"content":"/* CSS styling for the gap between each tags that the customer has, where hgap is (horizontal gap)","lastModifiedDate":"2022-10-14"},{"lineNumber":387,"author":{"gitId":"bensohh"},"content":"and vgap is (vertical gap) */","lastModifiedDate":"2022-10-14"},{"lineNumber":388,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":389,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":390,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":391,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":393,"author":{"gitId":"bensohh"},"content":"/* CSS styling (Colour of text, font size, background colour, etc) for labels */","lastModifiedDate":"2022-10-14"},{"lineNumber":394,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":395,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":396,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":397,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":398,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":399,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":400,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":401,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"bensohh":80,"-":321}},{"path":"src/main/resources/view/HelpWindow.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#copyButton, #helpMessage {","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-01-02"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"#copyButton {","lastModifiedDate":"2022-01-02"},{"lineNumber":6,"author":{"gitId":"bensohh"},"content":"    -fx-background-color: #7F5539;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"#copyButton:hover {","lastModifiedDate":"2022-01-02"},{"lineNumber":10,"author":{"gitId":"bensohh"},"content":"    -fx-background-color: #603F29;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"#copyButton:armed {","lastModifiedDate":"2022-01-02"},{"lineNumber":14,"author":{"gitId":"bensohh"},"content":"    -fx-background-color: #7F5539;","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"#helpMessageContainer {","lastModifiedDate":"2022-01-02"},{"lineNumber":18,"author":{"gitId":"bensohh"},"content":"    -fx-background-color: #DDB892;","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"bensohh":4,"-":15}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":10,"author":{"gitId":"bensohh"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"bensohh"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":15,"author":{"gitId":"bensohh"},"content":"\u003cfx:root minHeight\u003d\"800.0\" minWidth\u003d\"850.0\" onCloseRequest\u003d\"#handleExit\" title\u003d\"bobaBot\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/18\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"bensohh"},"content":"    \u003cImage url\u003d\"@/images/bobaBot.png\" /\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"bensohh"},"content":"            \u003cStackPane VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":36,"author":{"gitId":"bensohh"},"content":"               \u003cchildren\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"bensohh"},"content":"                  \u003cHBox\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":38,"author":{"gitId":"bensohh"},"content":"                     \u003cchildren\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"bensohh"},"content":"                    \u003cVBox fx:id\u003d\"customerList\" minWidth\u003d\"350.0\" style\u003d\"-fx-background-color: #e6ccb2;\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                      \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":41,"author":{"gitId":"bensohh"},"content":"                        \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                      \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":43,"author":{"gitId":"bensohh"},"content":"                      \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" style\u003d\"-fx-background-color: #DDB892;\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"bensohh"},"content":"                    \u003c/VBox\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"bensohh"},"content":"                        \u003cVBox fx:id\u003d\"promotionList\" minWidth\u003d\"500.0\" style\u003d\"-fx-background-color: #e6ccb2;\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":46,"author":{"gitId":"bensohh"},"content":"                           \u003cchildren\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":47,"author":{"gitId":"bensohh"},"content":"                              \u003cStackPane fx:id\u003d\"promotionListPanelPlaceholder\" style\u003d\"-fx-background-color: #e6ccb2;\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":48,"author":{"gitId":"bensohh"},"content":"                           \u003c/children\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":49,"author":{"gitId":"bensohh"},"content":"                        \u003c/VBox\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":50,"author":{"gitId":"bensohh"},"content":"                     \u003c/children\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":51,"author":{"gitId":"bensohh"},"content":"                  \u003c/HBox\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":52,"author":{"gitId":"bensohh"},"content":"               \u003c/children\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":53,"author":{"gitId":"bensohh"},"content":"            \u003c/StackPane\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":55,"author":{"gitId":"bensohh"},"content":"        \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" maxHeight\u003d\"160.0\" minHeight\u003d\"160.0\" prefHeight\u003d\"160.0\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":57,"author":{"gitId":"bensohh"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":61,"author":{"gitId":"bensohh"},"content":"        \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":63,"author":{"gitId":"bensohh"},"content":"            \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"bensohh":25,"-":46}},{"path":"src/main/resources/view/PromotionListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bensohh"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"bensohh"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"bensohh"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"bensohh"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"bensohh"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"bensohh"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"bensohh"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"bensohh"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"bensohh"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"bensohh"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"bensohh"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"bensohh"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" style\u003d\"-fx-background-radius: 10;\" xmlns\u003d\"http://javafx.com/javafx/18\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"bensohh"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"bensohh"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"bensohh"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"bensohh"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"bensohh"},"content":"            \u003cStackPane id\u003d\"stackPane\" fx:id\u003d\"stackPane\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"bensohh"},"content":"        \u003crowConstraints\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"bensohh"},"content":"            \u003cRowConstraints /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"bensohh"},"content":"        \u003c/rowConstraints\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"bensohh"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"bensohh"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"bensohh":24}},{"path":"src/main/resources/view/PromotionListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bensohh"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"bensohh"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"bensohh"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"bensohh"},"content":"\u003cVBox style\u003d\"-fx-background-color: #e6CCB2;\" xmlns\u003d\"http://javafx.com/javafx/18\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"bensohh"},"content":"    \u003cListView fx:id\u003d\"promotionListView\" style\u003d\"-fx-background-color: #EDE0D4; -fx-background-radius: 10;\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"bensohh"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"bensohh":8}},{"path":"src/main/resources/view/ResultDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2016-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"bensohh"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" style\u003d\"-fx-background-color: #e6ccb2;\" xmlns\u003d\"http://javafx.com/javafx/18\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"bensohh"},"content":"  \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" style\u003d\"-fx-background-radius: 15; -fx-border-radius: 15;\" styleClass\u003d\"result-display\" /\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"bensohh":2,"-":6}},{"path":"src/test/java/seedu/boba/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"TanWenCong":1,"-":57}},{"path":"src/test/java/seedu/boba/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.commons.core;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void toString_defaultObject_stringReturned() {","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        String defaultConfigAsString \u003d \"Current log level : INFO\\n\"","lastModifiedDate":"2018-12-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"                + \"Preference file Location : preferences.json\";","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertEquals(defaultConfigAsString, new Config().toString());","lastModifiedDate":"2016-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2016-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2016-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"TanWenCong":1,"-":26}},{"path":"src/test/java/seedu/boba/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.commons.core;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2017-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2017-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"TanWenCong":2,"-":133}},{"path":"src/test/java/seedu/boba/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.commons.core.index;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        final Index fifthPersonIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(fifthPersonIndex));","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(null));","lastModifiedDate":"2017-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(5.0f));","lastModifiedDate":"2017-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2017-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"TanWenCong":2,"-":58}},{"path":"src/test/java/seedu/boba/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.commons.util;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"Samsation"},"content":"        assertNotNull(AppUtil.getImage(\"/images/bobaBot.png\"));","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"Samsation":1,"TanWenCong":2,"-":33}},{"path":"src/test/java/seedu/boba/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.commons.util;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2016-12-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2017-05-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // no arguments","lastModifiedDate":"2017-01-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2017-05-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // any non-empty argument list","lastModifiedDate":"2017-01-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2017-01-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2017-01-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2017-05-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2017-01-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2017-01-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // empty list","lastModifiedDate":"2017-01-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // list with all non-null elements","lastModifiedDate":"2017-01-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2018-04-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2017-06-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2017-06-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2017-06-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2017-06-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(objects));","lastModifiedDate":"2019-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(collection));","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireAllNonNull(objects);","lastModifiedDate":"2017-05-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireAllNonNull(collection);","lastModifiedDate":"2017-05-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-22"}],"authorContributionMap":{"TanWenCong":3,"-":105}},{"path":"src/test/java/seedu/boba/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.commons.util;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.commons.core.Config;","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path tempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void read_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2018-04-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return config;","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveConfig_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                                  ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                                  : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"TanWenCong":4,"-":112}},{"path":"src/test/java/seedu/boba/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.commons.util;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class FileUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void isValidPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        // valid path","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        // invalid path","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"TanWenCong":2,"-":21}},{"path":"src/test/java/seedu/boba/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.commons.util;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.testutil.SerializableTestClass;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.testutil.TestUtil;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Tests JSON Read and Write","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2016-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2016-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2016-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2016-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"TanWenCong":3,"-":42}},{"path":"src/test/java/seedu/boba/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.commons.util;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"TanWenCong":2,"-":141}},{"path":"src/test/java/seedu/boba/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.logic;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-31"},{"lineNumber":4,"author":{"gitId":"albertZhangTJ"},"content":"import static seedu.boba.commons.core.Messages.MESSAGE_INVALID_PERSON_INFORMATION;","lastModifiedDate":"2022-10-31"},{"lineNumber":5,"author":{"gitId":"albertZhangTJ"},"content":"import static seedu.boba.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-10-31"},{"lineNumber":6,"author":{"gitId":"albertZhangTJ"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.BIRTHDAY_MONTH_DESC_AMY;","lastModifiedDate":"2022-10-31"},{"lineNumber":7,"author":{"gitId":"albertZhangTJ"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-10-31"},{"lineNumber":8,"author":{"gitId":"albertZhangTJ"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-10-31"},{"lineNumber":9,"author":{"gitId":"albertZhangTJ"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-10-31"},{"lineNumber":10,"author":{"gitId":"albertZhangTJ"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.REWARD_DESC_AMY;","lastModifiedDate":"2022-10-31"},{"lineNumber":11,"author":{"gitId":"albertZhangTJ"},"content":"import static seedu.boba.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-31"},{"lineNumber":12,"author":{"gitId":"albertZhangTJ"},"content":"import static seedu.boba.testutil.TypicalCustomers.AMY;","lastModifiedDate":"2022-10-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":21,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.logic.commands.AddCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.logic.commands.CommandResult;","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.logic.commands.ListCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"albertZhangTJ"},"content":"import seedu.boba.model.BobaBotModel;","lastModifiedDate":"2022-10-31"},{"lineNumber":27,"author":{"gitId":"albertZhangTJ"},"content":"import seedu.boba.model.BobaBotModelManager;","lastModifiedDate":"2022-10-31"},{"lineNumber":28,"author":{"gitId":"albertZhangTJ"},"content":"import seedu.boba.model.ReadOnlyBobaBot;","lastModifiedDate":"2022-10-31"},{"lineNumber":29,"author":{"gitId":"albertZhangTJ"},"content":"import seedu.boba.model.UserPrefs;","lastModifiedDate":"2022-10-31"},{"lineNumber":30,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Customer;","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.storage.JsonBobaBotStorage;","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.storage.JsonUserPrefsStorage;","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.storage.StorageManager;","lastModifiedDate":"2022-10-27"},{"lineNumber":34,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.testutil.CustomerBuilder;","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"albertZhangTJ"},"content":"    private BobaBotModel bobaBotModel \u003d new BobaBotModelManager();","lastModifiedDate":"2022-10-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"TanWenCong"},"content":"        JsonBobaBotStorage addressBookStorage \u003d","lastModifiedDate":"2022-10-27"},{"lineNumber":48,"author":{"gitId":"TanWenCong"},"content":"                new JsonBobaBotStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2022-10-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"albertZhangTJ"},"content":"        logic \u003d new LogicManager(bobaBotModel, storage);","lastModifiedDate":"2022-10-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"bensohh"},"content":"        String deleteCommand \u003d \"delete p/00000000\"; // No Customer with this number exist","lastModifiedDate":"2022-10-09"},{"lineNumber":64,"author":{"gitId":"bensohh"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_INFORMATION);","lastModifiedDate":"2022-10-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":71,"author":{"gitId":"albertZhangTJ"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, bobaBotModel);","lastModifiedDate":"2022-10-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":76,"author":{"gitId":"TanWenCong"},"content":"        // Setup LogicManager with JsonBobaBotIoExceptionThrowingStub","lastModifiedDate":"2022-10-27"},{"lineNumber":77,"author":{"gitId":"TanWenCong"},"content":"        JsonBobaBotStorage addressBookStorage \u003d","lastModifiedDate":"2022-10-27"},{"lineNumber":78,"author":{"gitId":"TanWenCong"},"content":"                new JsonBobaBotIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2022-10-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"albertZhangTJ"},"content":"        logic \u003d new LogicManager(bobaBotModel, storage);","lastModifiedDate":"2022-10-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"TanWenCong"},"content":"                + BIRTHDAY_MONTH_DESC_AMY + REWARD_DESC_AMY;","lastModifiedDate":"2022-10-24"},{"lineNumber":87,"author":{"gitId":"Samsation"},"content":"        Customer expectedCustomer \u003d new CustomerBuilder(AMY).withTags().build();","lastModifiedDate":"2022-10-26"},{"lineNumber":88,"author":{"gitId":"albertZhangTJ"},"content":"        BobaBotModelManager expectedModel \u003d new BobaBotModelManager();","lastModifiedDate":"2022-10-31"},{"lineNumber":89,"author":{"gitId":"Samsation"},"content":"        expectedModel.addPerson(expectedCustomer);","lastModifiedDate":"2022-10-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"albertZhangTJ"},"content":"     * - the internal bobaBotModel manager state is the same as that in {@code expectedBobaBotModel} \u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":104,"author":{"gitId":"albertZhangTJ"},"content":"     * @see #assertCommandFailure(String, Class, String, BobaBotModel)","lastModifiedDate":"2022-10-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"albertZhangTJ"},"content":"            BobaBotModel expectedBobaBotModel) throws CommandException, ParseException {","lastModifiedDate":"2022-10-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"albertZhangTJ"},"content":"        assertEquals(expectedBobaBotModel, bobaBotModel);","lastModifiedDate":"2022-10-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"albertZhangTJ"},"content":"     * @see #assertCommandFailure(String, Class, String, BobaBotModel)","lastModifiedDate":"2022-10-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"albertZhangTJ"},"content":"     * @see #assertCommandFailure(String, Class, String, BobaBotModel)","lastModifiedDate":"2022-10-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":131,"author":{"gitId":"albertZhangTJ"},"content":"     * @see #assertCommandFailure(String, Class, String, BobaBotModel)","lastModifiedDate":"2022-10-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"albertZhangTJ"},"content":"        BobaBotModel expectedBobaBotModel \u003d new BobaBotModelManager(bobaBotModel.getBobaBot(), new UserPrefs());","lastModifiedDate":"2022-10-31"},{"lineNumber":136,"author":{"gitId":"albertZhangTJ"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedBobaBotModel);","lastModifiedDate":"2022-10-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"albertZhangTJ"},"content":"     * - the internal bobaBotModel manager state is the same as that in {@code expectedBobaBotModel} \u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":144,"author":{"gitId":"albertZhangTJ"},"content":"     * @see #assertCommandSuccess(String, String, BobaBotModel)","lastModifiedDate":"2022-10-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"albertZhangTJ"},"content":"            String expectedMessage, BobaBotModel expectedBobaBotModel) {","lastModifiedDate":"2022-10-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":149,"author":{"gitId":"albertZhangTJ"},"content":"        assertEquals(expectedBobaBotModel, bobaBotModel);","lastModifiedDate":"2022-10-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"TanWenCong"},"content":"    private static class JsonBobaBotIoExceptionThrowingStub extends JsonBobaBotStorage {","lastModifiedDate":"2022-10-27"},{"lineNumber":156,"author":{"gitId":"TanWenCong"},"content":"        private JsonBobaBotIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2022-10-27"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"TanWenCong"},"content":"        public void saveBobaBot(ReadOnlyBobaBot addressBook, Path filePath) throws IOException {","lastModifiedDate":"2022-10-27"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Samsation":2,"TanWenCong":20,"bensohh":3,"albertZhangTJ":31,"-":109}},{"path":"src/test/java/seedu/boba/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.logic.commands;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"albertZhangTJ"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-31"},{"lineNumber":4,"author":{"gitId":"albertZhangTJ"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-31"},{"lineNumber":5,"author":{"gitId":"albertZhangTJ"},"content":"import static seedu.boba.testutil.TypicalCustomers.getTypicalBobaBot;","lastModifiedDate":"2022-10-31"},{"lineNumber":6,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":10,"author":{"gitId":"albertZhangTJ"},"content":"import seedu.boba.model.BobaBotModel;","lastModifiedDate":"2022-10-31"},{"lineNumber":11,"author":{"gitId":"albertZhangTJ"},"content":"import seedu.boba.model.BobaBotModelManager;","lastModifiedDate":"2022-10-31"},{"lineNumber":12,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.UserPrefs;","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Customer;","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.testutil.CustomerBuilder;","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"albertZhangTJ"},"content":" * Contains integration tests (interaction with the BobaBotModel) for {@code AddCommand}.","lastModifiedDate":"2022-10-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"albertZhangTJ"},"content":"    private BobaBotModel bobaBotModel;","lastModifiedDate":"2022-10-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"albertZhangTJ"},"content":"        bobaBotModel \u003d new BobaBotModelManager(getTypicalBobaBot(), new UserPrefs());","lastModifiedDate":"2022-10-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":30,"author":{"gitId":"Samsation"},"content":"        Customer validCustomer \u003d new CustomerBuilder().build();","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"albertZhangTJ"},"content":"        BobaBotModel expectedBobaBotModel \u003d new BobaBotModelManager(bobaBotModel.getBobaBot(), new UserPrefs());","lastModifiedDate":"2022-10-31"},{"lineNumber":33,"author":{"gitId":"albertZhangTJ"},"content":"        expectedBobaBotModel.addPerson(validCustomer);","lastModifiedDate":"2022-10-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"albertZhangTJ"},"content":"        assertCommandSuccess(new AddCommand(validCustomer), bobaBotModel,","lastModifiedDate":"2022-10-31"},{"lineNumber":36,"author":{"gitId":"albertZhangTJ"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validCustomer), expectedBobaBotModel);","lastModifiedDate":"2022-10-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":41,"author":{"gitId":"albertZhangTJ"},"content":"        Customer customerInList \u003d bobaBotModel.getBobaBot().getPersonList().get(0);","lastModifiedDate":"2022-10-31"},{"lineNumber":42,"author":{"gitId":"albertZhangTJ"},"content":"        assertCommandFailure(new AddCommand(customerInList), bobaBotModel, AddCommand.MESSAGE_DUPLICATE_CUSTOMER);","lastModifiedDate":"2022-10-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"Samsation":1,"TanWenCong":4,"albertZhangTJ":16,"-":24}},{"path":"src/test/java/seedu/boba/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.logic.commands;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"albertZhangTJ"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-31"},{"lineNumber":4,"author":{"gitId":"albertZhangTJ"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-31"},{"lineNumber":5,"author":{"gitId":"albertZhangTJ"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-31"},{"lineNumber":6,"author":{"gitId":"albertZhangTJ"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-31"},{"lineNumber":7,"author":{"gitId":"albertZhangTJ"},"content":"import static seedu.boba.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-31"},{"lineNumber":8,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":9,"author":{"gitId":"albertZhangTJ"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-31"},{"lineNumber":10,"author":{"gitId":"albertZhangTJ"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-31"},{"lineNumber":11,"author":{"gitId":"albertZhangTJ"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-31"},{"lineNumber":12,"author":{"gitId":"albertZhangTJ"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-31"},{"lineNumber":13,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":14,"author":{"gitId":"albertZhangTJ"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-31"},{"lineNumber":15,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"bensohh"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.commons.core.GuiSettings;","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.BobaBot;","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"albertZhangTJ"},"content":"import seedu.boba.model.BobaBotModel;","lastModifiedDate":"2022-10-31"},{"lineNumber":22,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.ReadOnlyBobaBot;","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Customer;","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Email;","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Phone;","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Reward;","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.exceptions.NextStateNotFoundException;","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.exceptions.PreviousStateNotFoundException;","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.testutil.CustomerBuilder;","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"albertZhangTJ"},"content":"        BobaBotModelStubAcceptingPersonAdded modelStub \u003d new BobaBotModelStubAcceptingPersonAdded();","lastModifiedDate":"2022-10-31"},{"lineNumber":42,"author":{"gitId":"Samsation"},"content":"        Customer validCustomer \u003d new CustomerBuilder().build();","lastModifiedDate":"2022-10-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"Samsation"},"content":"        CommandResult commandResult \u003d new AddCommand(validCustomer).execute(modelStub);","lastModifiedDate":"2022-10-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"Samsation"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validCustomer), commandResult.getFeedbackToUser());","lastModifiedDate":"2022-10-26"},{"lineNumber":47,"author":{"gitId":"Samsation"},"content":"        assertEquals(Arrays.asList(validCustomer), modelStub.personsAdded);","lastModifiedDate":"2022-10-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"Samsation"},"content":"        Customer validCustomer \u003d new CustomerBuilder().build();","lastModifiedDate":"2022-10-26"},{"lineNumber":53,"author":{"gitId":"Samsation"},"content":"        AddCommand addCommand \u003d new AddCommand(validCustomer);","lastModifiedDate":"2022-10-26"},{"lineNumber":54,"author":{"gitId":"albertZhangTJ"},"content":"        BobaBotModelStub modelStub \u003d new BobaBotModelStubWithPerson(validCustomer);","lastModifiedDate":"2022-10-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"TanWenCong"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2022-09-25"},{"lineNumber":57,"author":{"gitId":"TanWenCong"},"content":"            AddCommand.MESSAGE_DUPLICATE_CUSTOMER, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2022-09-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"Samsation"},"content":"        Customer alice \u003d new CustomerBuilder().withName(\"Alice\").build();","lastModifiedDate":"2022-10-26"},{"lineNumber":63,"author":{"gitId":"Samsation"},"content":"        Customer bob \u003d new CustomerBuilder().withName(\"Bob\").withPhone(\"83838000\").build();","lastModifiedDate":"2022-10-26"},{"lineNumber":64,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"TanWenCong"},"content":"        // different name, same email, different phone -\u003e returns true","lastModifiedDate":"2022-10-14"},{"lineNumber":82,"author":{"gitId":"TanWenCong"},"content":"        assertTrue(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2022-10-14"},{"lineNumber":83,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":84,"author":{"gitId":"TanWenCong"},"content":"        // different name, same phone, different email -\u003e returns true","lastModifiedDate":"2022-10-14"},{"lineNumber":85,"author":{"gitId":"Samsation"},"content":"        bob \u003d new CustomerBuilder().withName(\"Bob\").withEmail(\"bob@example.com\").build();","lastModifiedDate":"2022-10-26"},{"lineNumber":86,"author":{"gitId":"TanWenCong"},"content":"        addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2022-10-14"},{"lineNumber":87,"author":{"gitId":"TanWenCong"},"content":"        assertTrue(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2022-10-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":91,"author":{"gitId":"albertZhangTJ"},"content":"     * A default bobaBotModel stub that have all of the methods failing.","lastModifiedDate":"2022-10-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":93,"author":{"gitId":"albertZhangTJ"},"content":"    private class BobaBotModelStub implements BobaBotModel {","lastModifiedDate":"2022-10-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"TanWenCong"},"content":"        public Path getBobaBotFilePath() {","lastModifiedDate":"2022-10-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"TanWenCong"},"content":"        public void setBobaBotFilePath(Path addressBookFilePath) {","lastModifiedDate":"2022-10-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"Samsation"},"content":"        public void addPerson(Customer customer) {","lastModifiedDate":"2022-10-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":130,"author":{"gitId":"TanWenCong"},"content":"        public void setBobaBot(ReadOnlyBobaBot newData) {","lastModifiedDate":"2022-10-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":135,"author":{"gitId":"TanWenCong"},"content":"        public ReadOnlyBobaBot getBobaBot() {","lastModifiedDate":"2022-10-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"Samsation"},"content":"        public boolean hasPerson(Customer customer) {","lastModifiedDate":"2022-10-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":145,"author":{"gitId":"Samsation"},"content":"        public void deletePerson(Customer target) {","lastModifiedDate":"2022-10-26"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"Samsation"},"content":"        public void setPerson(Customer target, Customer editedCustomer) {","lastModifiedDate":"2022-10-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":155,"author":{"gitId":"Samsation"},"content":"        public ObservableList\u003cCustomer\u003e getFilteredPersonList() {","lastModifiedDate":"2022-10-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":160,"author":{"gitId":"Samsation"},"content":"        public void updateFilteredPersonList(Predicate\u003cCustomer\u003e predicate) {","lastModifiedDate":"2022-10-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":163,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":164,"author":{"gitId":"bensohh"},"content":"        @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":165,"author":{"gitId":"bensohh"},"content":"        public int findNum(Phone phone) {","lastModifiedDate":"2022-10-03"},{"lineNumber":166,"author":{"gitId":"bensohh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-03"},{"lineNumber":167,"author":{"gitId":"bensohh"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":168,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":169,"author":{"gitId":"bensohh"},"content":"        @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":170,"author":{"gitId":"bensohh"},"content":"        public int findEmail(Email email) {","lastModifiedDate":"2022-10-03"},{"lineNumber":171,"author":{"gitId":"bensohh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-03"},{"lineNumber":172,"author":{"gitId":"bensohh"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":173,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":174,"author":{"gitId":"Samsation"},"content":"        @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":175,"author":{"gitId":"Samsation"},"content":"        public Reward getCurrentReward(Phone phone) {","lastModifiedDate":"2022-10-24"},{"lineNumber":176,"author":{"gitId":"Samsation"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-24"},{"lineNumber":177,"author":{"gitId":"Samsation"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":178,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":179,"author":{"gitId":"Samsation"},"content":"        @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":180,"author":{"gitId":"Samsation"},"content":"        public Reward getCurrentReward(Email email) {","lastModifiedDate":"2022-10-24"},{"lineNumber":181,"author":{"gitId":"Samsation"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-24"},{"lineNumber":182,"author":{"gitId":"Samsation"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":183,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":184,"author":{"gitId":"bensohh"},"content":"        @Override","lastModifiedDate":"2022-10-25"},{"lineNumber":185,"author":{"gitId":"TanWenCong"},"content":"        public void commitBobaBot() {","lastModifiedDate":"2022-10-27"},{"lineNumber":186,"author":{"gitId":"bensohh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-25"},{"lineNumber":187,"author":{"gitId":"bensohh"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":188,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":189,"author":{"gitId":"bensohh"},"content":"        @Override","lastModifiedDate":"2022-10-25"},{"lineNumber":190,"author":{"gitId":"TanWenCong"},"content":"        public void undoBobaBot() throws PreviousStateNotFoundException {","lastModifiedDate":"2022-10-27"},{"lineNumber":191,"author":{"gitId":"bensohh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-25"},{"lineNumber":192,"author":{"gitId":"bensohh"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":193,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":194,"author":{"gitId":"bensohh"},"content":"        @Override","lastModifiedDate":"2022-10-25"},{"lineNumber":195,"author":{"gitId":"TanWenCong"},"content":"        public void redoBobaBot() throws NextStateNotFoundException {","lastModifiedDate":"2022-10-27"},{"lineNumber":196,"author":{"gitId":"bensohh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-25"},{"lineNumber":197,"author":{"gitId":"bensohh"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":198,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":199,"author":{"gitId":"bensohh"},"content":"        @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":200,"author":{"gitId":"bensohh"},"content":"        public ObservableList\u003cImage\u003e getPromotionList() {","lastModifiedDate":"2022-10-27"},{"lineNumber":201,"author":{"gitId":"bensohh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-27"},{"lineNumber":202,"author":{"gitId":"bensohh"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":203,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":204,"author":{"gitId":"bensohh"},"content":"        @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":205,"author":{"gitId":"bensohh"},"content":"        public void parseAllPromotion(String filePath) {","lastModifiedDate":"2022-10-27"},{"lineNumber":206,"author":{"gitId":"bensohh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-27"},{"lineNumber":207,"author":{"gitId":"bensohh"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":211,"author":{"gitId":"albertZhangTJ"},"content":"     * A BobaBotModel stub that contains a single customer.","lastModifiedDate":"2022-10-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":213,"author":{"gitId":"albertZhangTJ"},"content":"    private class BobaBotModelStubWithPerson extends BobaBotModelStub {","lastModifiedDate":"2022-10-31"},{"lineNumber":214,"author":{"gitId":"Samsation"},"content":"        private final Customer customer;","lastModifiedDate":"2022-10-26"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":216,"author":{"gitId":"albertZhangTJ"},"content":"        BobaBotModelStubWithPerson(Customer customer) {","lastModifiedDate":"2022-10-31"},{"lineNumber":217,"author":{"gitId":"Samsation"},"content":"            requireNonNull(customer);","lastModifiedDate":"2022-10-26"},{"lineNumber":218,"author":{"gitId":"Samsation"},"content":"            this.customer \u003d customer;","lastModifiedDate":"2022-10-26"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":222,"author":{"gitId":"Samsation"},"content":"        public boolean hasPerson(Customer customer) {","lastModifiedDate":"2022-10-26"},{"lineNumber":223,"author":{"gitId":"Samsation"},"content":"            requireNonNull(customer);","lastModifiedDate":"2022-10-26"},{"lineNumber":224,"author":{"gitId":"Samsation"},"content":"            return this.customer.isSamePerson(customer);","lastModifiedDate":"2022-10-26"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":229,"author":{"gitId":"albertZhangTJ"},"content":"     * A BobaBotModel stub that always accept the customer being added.","lastModifiedDate":"2022-10-31"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":231,"author":{"gitId":"albertZhangTJ"},"content":"    private class BobaBotModelStubAcceptingPersonAdded extends BobaBotModelStub {","lastModifiedDate":"2022-10-31"},{"lineNumber":232,"author":{"gitId":"Samsation"},"content":"        final ArrayList\u003cCustomer\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-26"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":235,"author":{"gitId":"Samsation"},"content":"        public boolean hasPerson(Customer customer) {","lastModifiedDate":"2022-10-26"},{"lineNumber":236,"author":{"gitId":"Samsation"},"content":"            requireNonNull(customer);","lastModifiedDate":"2022-10-26"},{"lineNumber":237,"author":{"gitId":"Samsation"},"content":"            return personsAdded.stream().anyMatch(customer::isSamePerson);","lastModifiedDate":"2022-10-26"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":241,"author":{"gitId":"Samsation"},"content":"        public void addPerson(Customer customer) {","lastModifiedDate":"2022-10-26"},{"lineNumber":242,"author":{"gitId":"Samsation"},"content":"            requireNonNull(customer);","lastModifiedDate":"2022-10-26"},{"lineNumber":243,"author":{"gitId":"Samsation"},"content":"            personsAdded.add(customer);","lastModifiedDate":"2022-10-26"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":247,"author":{"gitId":"TanWenCong"},"content":"        public ReadOnlyBobaBot getBobaBot() {","lastModifiedDate":"2022-10-27"},{"lineNumber":248,"author":{"gitId":"TanWenCong"},"content":"            return new BobaBot();","lastModifiedDate":"2022-10-27"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":252,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"Samsation":38,"TanWenCong":30,"bensohh":34,"albertZhangTJ":23,"-":127}},{"path":"src/test/java/seedu/boba/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.logic.commands;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"albertZhangTJ"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-31"},{"lineNumber":4,"author":{"gitId":"albertZhangTJ"},"content":"import static seedu.boba.testutil.TypicalCustomers.getTypicalBobaBot;","lastModifiedDate":"2022-10-31"},{"lineNumber":5,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":6,"author":{"gitId":"TanWenCong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":8,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.BobaBot;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"albertZhangTJ"},"content":"import seedu.boba.model.BobaBotModel;","lastModifiedDate":"2022-10-31"},{"lineNumber":10,"author":{"gitId":"albertZhangTJ"},"content":"import seedu.boba.model.BobaBotModelManager;","lastModifiedDate":"2022-10-31"},{"lineNumber":11,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.UserPrefs;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"TanWenCong"},"content":"public class ClearCommandTest {","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"TanWenCong"},"content":"    @Test","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"TanWenCong"},"content":"    public void execute_emptyBobaBot_success() {","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"albertZhangTJ"},"content":"        BobaBotModel bobaBotModel \u003d new BobaBotModelManager();","lastModifiedDate":"2022-10-31"},{"lineNumber":18,"author":{"gitId":"albertZhangTJ"},"content":"        BobaBotModel expectedBobaBotModel \u003d new BobaBotModelManager();","lastModifiedDate":"2022-10-31"},{"lineNumber":19,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"albertZhangTJ"},"content":"        assertCommandSuccess(new ClearCommand(), bobaBotModel, ClearCommand.MESSAGE_SUCCESS, expectedBobaBotModel);","lastModifiedDate":"2022-10-31"},{"lineNumber":21,"author":{"gitId":"TanWenCong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"TanWenCong"},"content":"    @Test","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"TanWenCong"},"content":"    public void execute_nonEmptyBobaBot_success() {","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"albertZhangTJ"},"content":"        BobaBotModel bobaBotModel \u003d new BobaBotModelManager(getTypicalBobaBot(), new UserPrefs());","lastModifiedDate":"2022-10-31"},{"lineNumber":26,"author":{"gitId":"albertZhangTJ"},"content":"        BobaBotModel expectedBobaBotModel \u003d new BobaBotModelManager(getTypicalBobaBot(), new UserPrefs());","lastModifiedDate":"2022-10-31"},{"lineNumber":27,"author":{"gitId":"albertZhangTJ"},"content":"        expectedBobaBotModel.setBobaBot(new BobaBot());","lastModifiedDate":"2022-10-31"},{"lineNumber":28,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"albertZhangTJ"},"content":"        assertCommandSuccess(new ClearCommand(), bobaBotModel, ClearCommand.MESSAGE_SUCCESS, expectedBobaBotModel);","lastModifiedDate":"2022-10-31"},{"lineNumber":30,"author":{"gitId":"TanWenCong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"TanWenCong"},"content":"}","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"TanWenCong":19,"albertZhangTJ":13}},{"path":"src/test/java/seedu/boba/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.logic.commands;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"bensohh"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false,","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"WuHaohui1231"},"content":"                false, false, false, false)));","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"bensohh"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true,","lastModifiedDate":"2022-10-25"},{"lineNumber":34,"author":{"gitId":"WuHaohui1231"},"content":"                false, false, false, false)));","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"bensohh"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true,","lastModifiedDate":"2022-10-25"},{"lineNumber":38,"author":{"gitId":"WuHaohui1231"},"content":"                false, false, false)));","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"bensohh"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true,","lastModifiedDate":"2022-10-25"},{"lineNumber":53,"author":{"gitId":"WuHaohui1231"},"content":"                false, false, false, false).hashCode());","lastModifiedDate":"2022-10-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"bensohh"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false,","lastModifiedDate":"2022-10-25"},{"lineNumber":57,"author":{"gitId":"WuHaohui1231"},"content":"                true, false, false, false).hashCode());","lastModifiedDate":"2022-10-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"TanWenCong":1,"bensohh":5,"-":48,"WuHaohui1231":5}},{"path":"src/test/java/seedu/boba/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.logic.commands;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.parser.CliSyntax.PREFIX_BIRTHDAY_MONTH;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.parser.CliSyntax.PREFIX_REWARD;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"albertZhangTJ"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-31"},{"lineNumber":14,"author":{"gitId":"albertZhangTJ"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-31"},{"lineNumber":15,"author":{"gitId":"albertZhangTJ"},"content":"import java.util.List;","lastModifiedDate":"2022-10-31"},{"lineNumber":16,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":17,"author":{"gitId":"albertZhangTJ"},"content":"import seedu.boba.commons.core.index.Index;","lastModifiedDate":"2022-10-31"},{"lineNumber":18,"author":{"gitId":"albertZhangTJ"},"content":"import seedu.boba.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-31"},{"lineNumber":19,"author":{"gitId":"albertZhangTJ"},"content":"import seedu.boba.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-31"},{"lineNumber":20,"author":{"gitId":"albertZhangTJ"},"content":"import seedu.boba.model.BobaBot;","lastModifiedDate":"2022-10-31"},{"lineNumber":21,"author":{"gitId":"albertZhangTJ"},"content":"import seedu.boba.model.BobaBotModel;","lastModifiedDate":"2022-10-31"},{"lineNumber":22,"author":{"gitId":"albertZhangTJ"},"content":"import seedu.boba.model.customer.Customer;","lastModifiedDate":"2022-10-31"},{"lineNumber":23,"author":{"gitId":"albertZhangTJ"},"content":"import seedu.boba.model.customer.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-31"},{"lineNumber":24,"author":{"gitId":"albertZhangTJ"},"content":"import seedu.boba.testutil.EditCustomerDescriptorBuilder;","lastModifiedDate":"2022-10-31"},{"lineNumber":25,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"Samsation"},"content":"    public static final String VALID_PHONE_AMY \u003d \"85355255\";","lastModifiedDate":"2022-10-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"TanWenCong"},"content":"    public static final String VALID_BIRTHDAY_MONTH_AMY \u003d \"1\";","lastModifiedDate":"2022-10-24"},{"lineNumber":38,"author":{"gitId":"TanWenCong"},"content":"    public static final String VALID_BIRTHDAY_MONTH_BOB \u003d \"2\";","lastModifiedDate":"2022-10-24"},{"lineNumber":39,"author":{"gitId":"TanWenCong"},"content":"    public static final String VALID_REWARD_AMY \u003d \"420\";","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"TanWenCong"},"content":"    public static final String VALID_REWARD_BOB \u003d \"5000\";","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"TanWenCong"},"content":"    public static final String VALID_TAG_GOLD \u003d \"GOLD\";","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"TanWenCong"},"content":"    public static final String VALID_TAG_MEMBER \u003d \"MEMBER\";","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"TanWenCong"},"content":"    public static final String BIRTHDAY_MONTH_DESC_AMY \u003d \" \" + PREFIX_BIRTHDAY_MONTH + VALID_BIRTHDAY_MONTH_AMY;","lastModifiedDate":"2022-10-24"},{"lineNumber":51,"author":{"gitId":"TanWenCong"},"content":"    public static final String BIRTHDAY_MONTH_DESC_BOB \u003d \" \" + PREFIX_BIRTHDAY_MONTH + VALID_BIRTHDAY_MONTH_BOB;","lastModifiedDate":"2022-10-24"},{"lineNumber":52,"author":{"gitId":"TanWenCong"},"content":"    public static final String REWARD_DESC_AMY \u003d \" \" + PREFIX_REWARD + VALID_REWARD_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"TanWenCong"},"content":"    public static final String REWARD_DESC_BOB \u003d \" \" + PREFIX_REWARD + VALID_REWARD_BOB;","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"TanWenCong"},"content":"    public static final String TAG_DESC_MEMBER \u003d \" \" + PREFIX_TAG + VALID_TAG_MEMBER;","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"TanWenCong"},"content":"    public static final String TAG_DESC_GOLD \u003d \" \" + PREFIX_TAG + VALID_TAG_GOLD;","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"TanWenCong"},"content":"    public static final String INVALID_BIRTHDAY_MONTH_DESC \u003d \" \" + PREFIX_BIRTHDAY_MONTH + \"two\"; // not integer value","lastModifiedDate":"2022-10-24"},{"lineNumber":61,"author":{"gitId":"Samsation"},"content":"    public static final String INVALID_REWARD_DESC \u003d \" \" + PREFIX_REWARD; // empty string not allowed for rewards","lastModifiedDate":"2022-10-14"},{"lineNumber":62,"author":{"gitId":"TanWenCong"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"GOLD*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"Samsation"},"content":"        DESC_AMY \u003d new EditCustomerDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2022-10-26"},{"lineNumber":72,"author":{"gitId":"TanWenCong"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2022-10-24"},{"lineNumber":73,"author":{"gitId":"TanWenCong"},"content":"                .withBirthdayMonth(VALID_BIRTHDAY_MONTH_AMY)","lastModifiedDate":"2022-10-24"},{"lineNumber":74,"author":{"gitId":"TanWenCong"},"content":"                .withReward(VALID_REWARD_AMY).withTags(VALID_TAG_MEMBER).build();","lastModifiedDate":"2022-10-24"},{"lineNumber":75,"author":{"gitId":"Samsation"},"content":"        DESC_BOB \u003d new EditCustomerDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2022-10-26"},{"lineNumber":76,"author":{"gitId":"TanWenCong"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2022-10-24"},{"lineNumber":77,"author":{"gitId":"TanWenCong"},"content":"                .withBirthdayMonth(VALID_BIRTHDAY_MONTH_BOB)","lastModifiedDate":"2022-10-24"},{"lineNumber":78,"author":{"gitId":"TanWenCong"},"content":"                .withReward(VALID_REWARD_BOB).withTags(VALID_TAG_GOLD, VALID_TAG_MEMBER).build();","lastModifiedDate":"2022-10-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"albertZhangTJ"},"content":"     * - the {@code actualBobaBotModel} matches {@code expectedBobaBotModel}","lastModifiedDate":"2022-10-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":86,"author":{"gitId":"albertZhangTJ"},"content":"    public static void assertCommandSuccess(Command command, BobaBotModel actualBobaBotModel,","lastModifiedDate":"2022-10-31"},{"lineNumber":87,"author":{"gitId":"albertZhangTJ"},"content":"                                            CommandResult expectedCommandResult,","lastModifiedDate":"2022-10-31"},{"lineNumber":88,"author":{"gitId":"albertZhangTJ"},"content":"                                            BobaBotModel expectedBobaBotModel) {","lastModifiedDate":"2022-10-31"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":90,"author":{"gitId":"albertZhangTJ"},"content":"            CommandResult result \u003d command.execute(actualBobaBotModel);","lastModifiedDate":"2022-10-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"albertZhangTJ"},"content":"            assertEquals(expectedBobaBotModel, actualBobaBotModel);","lastModifiedDate":"2022-10-31"},{"lineNumber":93,"author":{"gitId":"Samsation"},"content":"        } catch (CommandException | ParseException ce) {","lastModifiedDate":"2022-10-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"albertZhangTJ"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, BobaBotModel, CommandResult, BobaBotModel)}","lastModifiedDate":"2022-10-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":102,"author":{"gitId":"albertZhangTJ"},"content":"    public static void assertCommandSuccess(Command command, BobaBotModel actualBobaBotModel, String expectedMessage,","lastModifiedDate":"2022-10-31"},{"lineNumber":103,"author":{"gitId":"albertZhangTJ"},"content":"                                            BobaBotModel expectedBobaBotModel) {","lastModifiedDate":"2022-10-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"albertZhangTJ"},"content":"        assertCommandSuccess(command, actualBobaBotModel, expectedCommandResult, expectedBobaBotModel);","lastModifiedDate":"2022-10-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"albertZhangTJ"},"content":"     * - the address book, filtered customer list and selected customer in {@code actualBobaBotModel} remain unchanged","lastModifiedDate":"2022-10-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"albertZhangTJ"},"content":"    public static void assertCommandFailure(Command command, BobaBotModel actualBobaBotModel, String expectedMessage) {","lastModifiedDate":"2022-10-31"},{"lineNumber":115,"author":{"gitId":"albertZhangTJ"},"content":"        // we are unable to defensively copy the bobaBotModel for comparison later, so we can","lastModifiedDate":"2022-10-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"albertZhangTJ"},"content":"        BobaBot expectedBobaBot \u003d new BobaBot(actualBobaBotModel.getBobaBot());","lastModifiedDate":"2022-10-31"},{"lineNumber":118,"author":{"gitId":"albertZhangTJ"},"content":"        List\u003cCustomer\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualBobaBotModel.getFilteredPersonList());","lastModifiedDate":"2022-10-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"albertZhangTJ"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualBobaBotModel));","lastModifiedDate":"2022-10-31"},{"lineNumber":121,"author":{"gitId":"albertZhangTJ"},"content":"        assertEquals(expectedBobaBot, actualBobaBotModel.getBobaBot());","lastModifiedDate":"2022-10-31"},{"lineNumber":122,"author":{"gitId":"albertZhangTJ"},"content":"        assertEquals(expectedFilteredList, actualBobaBotModel.getFilteredPersonList());","lastModifiedDate":"2022-10-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":125,"author":{"gitId":"albertZhangTJ"},"content":"     * Updates {@code bobaBotModel}\u0027s filtered list to show only the customer at the given {@code targetIndex} in the","lastModifiedDate":"2022-10-31"},{"lineNumber":126,"author":{"gitId":"albertZhangTJ"},"content":"     * {@code bobaBotModel}\u0027s address book.","lastModifiedDate":"2022-10-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":128,"author":{"gitId":"albertZhangTJ"},"content":"    public static void showPersonAtIndex(BobaBotModel bobaBotModel, Index targetIndex) {","lastModifiedDate":"2022-10-31"},{"lineNumber":129,"author":{"gitId":"albertZhangTJ"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c bobaBotModel.getFilteredPersonList().size());","lastModifiedDate":"2022-10-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":131,"author":{"gitId":"albertZhangTJ"},"content":"        Customer customer \u003d bobaBotModel.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-31"},{"lineNumber":132,"author":{"gitId":"Samsation"},"content":"        final String[] splitName \u003d customer.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2022-10-26"},{"lineNumber":133,"author":{"gitId":"albertZhangTJ"},"content":"        bobaBotModel.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2022-10-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":135,"author":{"gitId":"albertZhangTJ"},"content":"        assertEquals(1, bobaBotModel.getFilteredPersonList().size());","lastModifiedDate":"2022-10-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"Samsation":6,"TanWenCong":28,"albertZhangTJ":38,"-":66}},{"path":"src/test/java/seedu/boba/logic/commands/DecreaseCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.logic.commands;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":3,"author":{"gitId":"Samsation"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-24"},{"lineNumber":4,"author":{"gitId":"Samsation"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-24"},{"lineNumber":5,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.testutil.TypicalCustomers.ALICE_DECREMENT;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.testutil.TypicalCustomers.getTypicalBobaBot;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.testutil.TypicalEmails.EMAIL_FIRST_PERSON;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.testutil.TypicalEmails.EMAIL_SECOND_PERSON;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.testutil.TypicalPhones.PHONE_FIRST_PERSON;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.testutil.TypicalPhones.PHONE_SECOND_PERSON;","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":14,"author":{"gitId":"albertZhangTJ"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-31"},{"lineNumber":15,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":16,"author":{"gitId":"albertZhangTJ"},"content":"import seedu.boba.commons.core.Messages;","lastModifiedDate":"2022-10-31"},{"lineNumber":17,"author":{"gitId":"albertZhangTJ"},"content":"import seedu.boba.model.BobaBot;","lastModifiedDate":"2022-10-31"},{"lineNumber":18,"author":{"gitId":"albertZhangTJ"},"content":"import seedu.boba.model.BobaBotModel;","lastModifiedDate":"2022-10-31"},{"lineNumber":19,"author":{"gitId":"albertZhangTJ"},"content":"import seedu.boba.model.BobaBotModelManager;","lastModifiedDate":"2022-10-31"},{"lineNumber":20,"author":{"gitId":"albertZhangTJ"},"content":"import seedu.boba.model.UserPrefs;","lastModifiedDate":"2022-10-31"},{"lineNumber":21,"author":{"gitId":"albertZhangTJ"},"content":"import seedu.boba.model.customer.Customer;","lastModifiedDate":"2022-10-31"},{"lineNumber":22,"author":{"gitId":"albertZhangTJ"},"content":"import seedu.boba.model.customer.Email;","lastModifiedDate":"2022-10-31"},{"lineNumber":23,"author":{"gitId":"albertZhangTJ"},"content":"import seedu.boba.model.customer.Phone;","lastModifiedDate":"2022-10-31"},{"lineNumber":24,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":25,"author":{"gitId":"Samsation"},"content":"/**","lastModifiedDate":"2022-10-24"},{"lineNumber":26,"author":{"gitId":"albertZhangTJ"},"content":" * Contains integration tests (interaction with the BobaBotModel) and unit tests for IncreaseCommand.","lastModifiedDate":"2022-10-31"},{"lineNumber":27,"author":{"gitId":"Samsation"},"content":" */","lastModifiedDate":"2022-10-24"},{"lineNumber":28,"author":{"gitId":"Samsation"},"content":"public class DecreaseCommandTest {","lastModifiedDate":"2022-10-24"},{"lineNumber":29,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":30,"author":{"gitId":"albertZhangTJ"},"content":"    private BobaBotModel bobaBotModel \u003d new BobaBotModelManager(getTypicalBobaBot(), new UserPrefs());","lastModifiedDate":"2022-10-31"},{"lineNumber":31,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":32,"author":{"gitId":"Samsation"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":33,"author":{"gitId":"Samsation"},"content":"    public void execute_phoneAllFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-10-24"},{"lineNumber":34,"author":{"gitId":"Samsation"},"content":"        Customer editedCustomer \u003d ALICE_DECREMENT;","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"Samsation"},"content":"        DecreaseCommand decreaseCommand \u003d new DecreaseCommand(PHONE_FIRST_PERSON, \"100\");","lastModifiedDate":"2022-10-24"},{"lineNumber":36,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":37,"author":{"gitId":"Samsation"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedCustomer);","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":39,"author":{"gitId":"albertZhangTJ"},"content":"        BobaBotModel expectedBobaBotModel \u003d new BobaBotModelManager(","lastModifiedDate":"2022-10-31"},{"lineNumber":40,"author":{"gitId":"albertZhangTJ"},"content":"                new BobaBot(bobaBotModel.getBobaBot()), new UserPrefs());","lastModifiedDate":"2022-10-31"},{"lineNumber":41,"author":{"gitId":"albertZhangTJ"},"content":"        expectedBobaBotModel.setPerson(bobaBotModel.getFilteredPersonList().get(0), editedCustomer);","lastModifiedDate":"2022-10-31"},{"lineNumber":42,"author":{"gitId":"albertZhangTJ"},"content":"        assertCommandSuccess(decreaseCommand, bobaBotModel, expectedMessage, expectedBobaBotModel);","lastModifiedDate":"2022-10-31"},{"lineNumber":43,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":44,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":45,"author":{"gitId":"Samsation"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":46,"author":{"gitId":"Samsation"},"content":"    public void execute_emailAllFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-10-24"},{"lineNumber":47,"author":{"gitId":"Samsation"},"content":"        Customer editedCustomer \u003d ALICE_DECREMENT;","lastModifiedDate":"2022-10-26"},{"lineNumber":48,"author":{"gitId":"Samsation"},"content":"        DecreaseCommand decreaseCommand \u003d new DecreaseCommand(EMAIL_FIRST_PERSON, \"100\");","lastModifiedDate":"2022-10-24"},{"lineNumber":49,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":50,"author":{"gitId":"Samsation"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedCustomer);","lastModifiedDate":"2022-10-26"},{"lineNumber":51,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":52,"author":{"gitId":"albertZhangTJ"},"content":"        BobaBotModel expectedBobaBotModel \u003d new BobaBotModelManager(","lastModifiedDate":"2022-10-31"},{"lineNumber":53,"author":{"gitId":"albertZhangTJ"},"content":"                new BobaBot(bobaBotModel.getBobaBot()), new UserPrefs());","lastModifiedDate":"2022-10-31"},{"lineNumber":54,"author":{"gitId":"albertZhangTJ"},"content":"        expectedBobaBotModel.setPerson(bobaBotModel.getFilteredPersonList().get(0), editedCustomer);","lastModifiedDate":"2022-10-31"},{"lineNumber":55,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":56,"author":{"gitId":"albertZhangTJ"},"content":"        assertCommandSuccess(decreaseCommand, bobaBotModel, expectedMessage, expectedBobaBotModel);","lastModifiedDate":"2022-10-31"},{"lineNumber":57,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":58,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":59,"author":{"gitId":"Samsation"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":60,"author":{"gitId":"Samsation"},"content":"    public void execute_phoneInvalidPersonUnfilteredList_failure() {","lastModifiedDate":"2022-10-24"},{"lineNumber":61,"author":{"gitId":"Samsation"},"content":"        Phone outOfBoundPhone \u003d new Phone(\"00000000\");","lastModifiedDate":"2022-10-24"},{"lineNumber":62,"author":{"gitId":"Samsation"},"content":"        DecreaseCommand increaseCommand \u003d new DecreaseCommand(outOfBoundPhone, \"100\");","lastModifiedDate":"2022-10-24"},{"lineNumber":63,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":64,"author":{"gitId":"albertZhangTJ"},"content":"        assertCommandFailure(increaseCommand, bobaBotModel, Messages.MESSAGE_INVALID_PERSON_INFORMATION);","lastModifiedDate":"2022-10-31"},{"lineNumber":65,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":66,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":67,"author":{"gitId":"Samsation"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":68,"author":{"gitId":"Samsation"},"content":"    public void execute_emailInvalidPersonUnfilteredList_failure() {","lastModifiedDate":"2022-10-24"},{"lineNumber":69,"author":{"gitId":"Samsation"},"content":"        Email outOfBoundEmail \u003d new Email(\"test@test.com\");","lastModifiedDate":"2022-10-24"},{"lineNumber":70,"author":{"gitId":"Samsation"},"content":"        DecreaseCommand increaseCommand \u003d new DecreaseCommand(outOfBoundEmail, \"100\");","lastModifiedDate":"2022-10-24"},{"lineNumber":71,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":72,"author":{"gitId":"albertZhangTJ"},"content":"        assertCommandFailure(increaseCommand, bobaBotModel, Messages.MESSAGE_INVALID_PERSON_INFORMATION);","lastModifiedDate":"2022-10-31"},{"lineNumber":73,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":74,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":75,"author":{"gitId":"Samsation"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":76,"author":{"gitId":"Samsation"},"content":"    public void equals() {","lastModifiedDate":"2022-10-24"},{"lineNumber":77,"author":{"gitId":"Samsation"},"content":"        final DecreaseCommand standardCommand \u003d new DecreaseCommand(PHONE_FIRST_PERSON, \"100\");","lastModifiedDate":"2022-10-24"},{"lineNumber":78,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":79,"author":{"gitId":"Samsation"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-24"},{"lineNumber":80,"author":{"gitId":"Samsation"},"content":"        DecreaseCommand commandWithSameValues \u003d new DecreaseCommand(PHONE_FIRST_PERSON, \"100\");","lastModifiedDate":"2022-10-24"},{"lineNumber":81,"author":{"gitId":"Samsation"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2022-10-24"},{"lineNumber":82,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":83,"author":{"gitId":"Samsation"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-24"},{"lineNumber":84,"author":{"gitId":"Samsation"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2022-10-24"},{"lineNumber":85,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":86,"author":{"gitId":"Samsation"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-24"},{"lineNumber":87,"author":{"gitId":"Samsation"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2022-10-24"},{"lineNumber":88,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":89,"author":{"gitId":"Samsation"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-24"},{"lineNumber":90,"author":{"gitId":"Samsation"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2022-10-24"},{"lineNumber":91,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":92,"author":{"gitId":"Samsation"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2022-10-24"},{"lineNumber":93,"author":{"gitId":"Samsation"},"content":"        assertFalse(standardCommand.equals(new DecreaseCommand(PHONE_SECOND_PERSON, \"100\")));","lastModifiedDate":"2022-10-24"},{"lineNumber":94,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":95,"author":{"gitId":"Samsation"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2022-10-24"},{"lineNumber":96,"author":{"gitId":"Samsation"},"content":"        assertFalse(standardCommand.equals(new DecreaseCommand(EMAIL_SECOND_PERSON, \"100\")));","lastModifiedDate":"2022-10-24"},{"lineNumber":97,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":98,"author":{"gitId":"Samsation"},"content":"        // different reward value -\u003e returns false","lastModifiedDate":"2022-10-24"},{"lineNumber":99,"author":{"gitId":"Samsation"},"content":"        assertFalse(standardCommand.equals(new DecreaseCommand(PHONE_FIRST_PERSON, \"200\")));","lastModifiedDate":"2022-10-24"},{"lineNumber":100,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":101,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":102,"author":{"gitId":"Samsation"},"content":"}","lastModifiedDate":"2022-10-24"}],"authorContributionMap":{"Samsation":70,"TanWenCong":9,"albertZhangTJ":23}},{"path":"src/test/java/seedu/boba/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.logic.commands;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"albertZhangTJ"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-31"},{"lineNumber":4,"author":{"gitId":"albertZhangTJ"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-31"},{"lineNumber":5,"author":{"gitId":"albertZhangTJ"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-31"},{"lineNumber":6,"author":{"gitId":"albertZhangTJ"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-31"},{"lineNumber":7,"author":{"gitId":"albertZhangTJ"},"content":"import static seedu.boba.testutil.TypicalCustomers.getTypicalBobaBot;","lastModifiedDate":"2022-10-31"},{"lineNumber":8,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":11,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.commons.core.Messages;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.commons.core.index.Index;","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"albertZhangTJ"},"content":"import seedu.boba.model.BobaBotModel;","lastModifiedDate":"2022-10-31"},{"lineNumber":14,"author":{"gitId":"albertZhangTJ"},"content":"import seedu.boba.model.BobaBotModelManager;","lastModifiedDate":"2022-10-31"},{"lineNumber":15,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.UserPrefs;","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Customer;","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Email;","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Phone;","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"albertZhangTJ"},"content":" * Contains integration tests (interaction with the BobaBotModel) and unit tests for","lastModifiedDate":"2022-10-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"albertZhangTJ"},"content":"    private BobaBotModel bobaBotModel \u003d new BobaBotModelManager(getTypicalBobaBot(), new UserPrefs());","lastModifiedDate":"2022-10-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"bensohh"},"content":"    public void execute_validPhoneArg_success() {","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"Samsation"},"content":"        // Corresponds to phone number input for \"ALICE\" under TypicalCustomers class","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"bensohh"},"content":"        DeleteCommand.DeletePersonDescriptor deletePersonDescriptor \u003d new DeleteCommand.DeletePersonDescriptor();","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"bensohh"},"content":"        deletePersonDescriptor.setPhone(new Phone(\"94351253\"));","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"bensohh"},"content":"        // Gets the index of Customer (ALICE) within the list via her phone number","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"albertZhangTJ"},"content":"        int index \u003d bobaBotModel.findNum(deletePersonDescriptor.getPhone());","lastModifiedDate":"2022-10-31"},{"lineNumber":37,"author":{"gitId":"bensohh"},"content":"        Index targetIndex \u003d Index.fromZeroBased(index);","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"bensohh"},"content":"        // Gets ALICE","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"albertZhangTJ"},"content":"        Customer customerToDelete \u003d bobaBotModel.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-31"},{"lineNumber":41,"author":{"gitId":"bensohh"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(deletePersonDescriptor);","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"Samsation"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, customerToDelete);","lastModifiedDate":"2022-10-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"albertZhangTJ"},"content":"        BobaBotModelManager expectedModel \u003d new BobaBotModelManager(bobaBotModel.getBobaBot(), new UserPrefs());","lastModifiedDate":"2022-10-31"},{"lineNumber":46,"author":{"gitId":"Samsation"},"content":"        expectedModel.deletePerson(customerToDelete);","lastModifiedDate":"2022-10-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"albertZhangTJ"},"content":"        assertCommandSuccess(deleteCommand, bobaBotModel, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"bensohh"},"content":"    public void execute_invalidPhoneArg_throwsCommandException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"Samsation"},"content":"        // Corresponds to a random phone number input not in the TypicalCustomers class","lastModifiedDate":"2022-10-26"},{"lineNumber":54,"author":{"gitId":"bensohh"},"content":"        DeleteCommand.DeletePersonDescriptor deletePersonDescriptor \u003d new DeleteCommand.DeletePersonDescriptor();","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"bensohh"},"content":"        deletePersonDescriptor.setPhone(new Phone(\"11111111\"));","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":57,"author":{"gitId":"bensohh"},"content":"        // Throws a CommandException due to no corresponding Customer found","lastModifiedDate":"2022-10-09"},{"lineNumber":58,"author":{"gitId":"bensohh"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(deletePersonDescriptor);","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"albertZhangTJ"},"content":"        assertCommandFailure(deleteCommand, bobaBotModel, Messages.MESSAGE_INVALID_PERSON_INFORMATION);","lastModifiedDate":"2022-10-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":64,"author":{"gitId":"bensohh"},"content":"    public void execute_validEmailArg_success() {","lastModifiedDate":"2022-10-09"},{"lineNumber":65,"author":{"gitId":"Samsation"},"content":"        // Corresponds to email input for \"CARL\" under TypicalCustomers class","lastModifiedDate":"2022-10-26"},{"lineNumber":66,"author":{"gitId":"bensohh"},"content":"        DeleteCommand.DeletePersonDescriptor deletePersonDescriptor \u003d new DeleteCommand.DeletePersonDescriptor();","lastModifiedDate":"2022-10-09"},{"lineNumber":67,"author":{"gitId":"bensohh"},"content":"        deletePersonDescriptor.setEmail(new Email(\"heinz@example.com\"));","lastModifiedDate":"2022-10-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":69,"author":{"gitId":"bensohh"},"content":"        // Gets the index of Customer (CARL) within the list via his email","lastModifiedDate":"2022-10-09"},{"lineNumber":70,"author":{"gitId":"albertZhangTJ"},"content":"        int index \u003d bobaBotModel.findEmail(deletePersonDescriptor.getEmail());","lastModifiedDate":"2022-10-31"},{"lineNumber":71,"author":{"gitId":"bensohh"},"content":"        Index targetIndex \u003d Index.fromZeroBased(index);","lastModifiedDate":"2022-10-09"},{"lineNumber":72,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":73,"author":{"gitId":"bensohh"},"content":"        // Gets CARL","lastModifiedDate":"2022-10-09"},{"lineNumber":74,"author":{"gitId":"albertZhangTJ"},"content":"        Customer customerToDelete \u003d bobaBotModel.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-31"},{"lineNumber":75,"author":{"gitId":"bensohh"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(deletePersonDescriptor);","lastModifiedDate":"2022-10-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"Samsation"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, customerToDelete);","lastModifiedDate":"2022-10-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"albertZhangTJ"},"content":"        BobaBotModelManager expectedModel \u003d new BobaBotModelManager(bobaBotModel.getBobaBot(), new UserPrefs());","lastModifiedDate":"2022-10-31"},{"lineNumber":80,"author":{"gitId":"Samsation"},"content":"        expectedModel.deletePerson(customerToDelete);","lastModifiedDate":"2022-10-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":82,"author":{"gitId":"albertZhangTJ"},"content":"        assertCommandSuccess(deleteCommand, bobaBotModel, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":86,"author":{"gitId":"bensohh"},"content":"    public void execute_invalidEmailArg_throwsCommandException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":87,"author":{"gitId":"Samsation"},"content":"        // Corresponds to a random email input not in the TypicalCustomers class","lastModifiedDate":"2022-10-26"},{"lineNumber":88,"author":{"gitId":"bensohh"},"content":"        DeleteCommand.DeletePersonDescriptor deletePersonDescriptor \u003d new DeleteCommand.DeletePersonDescriptor();","lastModifiedDate":"2022-10-09"},{"lineNumber":89,"author":{"gitId":"bensohh"},"content":"        deletePersonDescriptor.setEmail(new Email(\"testing123@test.com\"));","lastModifiedDate":"2022-10-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":91,"author":{"gitId":"bensohh"},"content":"        // Throws a CommandException due to no corresponding Customer found","lastModifiedDate":"2022-10-09"},{"lineNumber":92,"author":{"gitId":"bensohh"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(deletePersonDescriptor);","lastModifiedDate":"2022-10-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":94,"author":{"gitId":"albertZhangTJ"},"content":"        assertCommandFailure(deleteCommand, bobaBotModel, Messages.MESSAGE_INVALID_PERSON_INFORMATION);","lastModifiedDate":"2022-10-31"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"bensohh"},"content":"        // (Phone Number) input values for deleteFirstCommand","lastModifiedDate":"2022-10-09"},{"lineNumber":100,"author":{"gitId":"bensohh"},"content":"        DeleteCommand.DeletePersonDescriptor deletePersonDescriptor \u003d new DeleteCommand.DeletePersonDescriptor();","lastModifiedDate":"2022-10-09"},{"lineNumber":101,"author":{"gitId":"bensohh"},"content":"        deletePersonDescriptor.setPhone(new Phone(\"12345678\"));","lastModifiedDate":"2022-10-09"},{"lineNumber":102,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":103,"author":{"gitId":"bensohh"},"content":"        // (Phone Number) input values for deleteSecondCommand","lastModifiedDate":"2022-10-09"},{"lineNumber":104,"author":{"gitId":"bensohh"},"content":"        DeleteCommand.DeletePersonDescriptor deletePersonDescriptor2 \u003d new DeleteCommand.DeletePersonDescriptor();","lastModifiedDate":"2022-10-09"},{"lineNumber":105,"author":{"gitId":"bensohh"},"content":"        deletePersonDescriptor2.setPhone(new Phone(\"87654321\"));","lastModifiedDate":"2022-10-09"},{"lineNumber":106,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":107,"author":{"gitId":"bensohh"},"content":"        // (Email) input values for deleteThirdCommand","lastModifiedDate":"2022-10-09"},{"lineNumber":108,"author":{"gitId":"bensohh"},"content":"        DeleteCommand.DeletePersonDescriptor deletePersonDescriptor3 \u003d new DeleteCommand.DeletePersonDescriptor();","lastModifiedDate":"2022-10-09"},{"lineNumber":109,"author":{"gitId":"bensohh"},"content":"        deletePersonDescriptor3.setEmail(new Email(\"test@test.com\"));","lastModifiedDate":"2022-10-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":111,"author":{"gitId":"bensohh"},"content":"        // (Email) input values for deleteFourthCommand","lastModifiedDate":"2022-10-09"},{"lineNumber":112,"author":{"gitId":"bensohh"},"content":"        DeleteCommand.DeletePersonDescriptor deletePersonDescriptor4 \u003d new DeleteCommand.DeletePersonDescriptor();","lastModifiedDate":"2022-10-09"},{"lineNumber":113,"author":{"gitId":"bensohh"},"content":"        deletePersonDescriptor4.setEmail(new Email(\"test2@test2.com\"));","lastModifiedDate":"2022-10-09"},{"lineNumber":114,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":115,"author":{"gitId":"bensohh"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(deletePersonDescriptor);","lastModifiedDate":"2022-10-09"},{"lineNumber":116,"author":{"gitId":"bensohh"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(deletePersonDescriptor2);","lastModifiedDate":"2022-10-09"},{"lineNumber":117,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":118,"author":{"gitId":"bensohh"},"content":"        DeleteCommand deleteThirdCommand \u003d new DeleteCommand(deletePersonDescriptor3);","lastModifiedDate":"2022-10-09"},{"lineNumber":119,"author":{"gitId":"bensohh"},"content":"        DeleteCommand deleteFourthCommand \u003d new DeleteCommand(deletePersonDescriptor4);","lastModifiedDate":"2022-10-09"},{"lineNumber":120,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":121,"author":{"gitId":"bensohh"},"content":"        // (Phone Number) same object -\u003e returns true","lastModifiedDate":"2022-10-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":124,"author":{"gitId":"bensohh"},"content":"        // (Phone Number) same values -\u003e returns true","lastModifiedDate":"2022-10-09"},{"lineNumber":125,"author":{"gitId":"bensohh"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(deletePersonDescriptor);","lastModifiedDate":"2022-10-09"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":128,"author":{"gitId":"bensohh"},"content":"        // (Phone Number) different types -\u003e returns false","lastModifiedDate":"2022-10-09"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":131,"author":{"gitId":"bensohh"},"content":"        // (Phone Number) null -\u003e returns false","lastModifiedDate":"2022-10-09"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":134,"author":{"gitId":"bensohh"},"content":"        // (Phone Number) different customer -\u003e returns false","lastModifiedDate":"2022-10-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":137,"author":{"gitId":"bensohh"},"content":"        // (Email) same object -\u003e returns true","lastModifiedDate":"2022-10-09"},{"lineNumber":138,"author":{"gitId":"bensohh"},"content":"        assertTrue(deleteThirdCommand.equals(deleteThirdCommand));","lastModifiedDate":"2022-10-09"},{"lineNumber":139,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":140,"author":{"gitId":"bensohh"},"content":"        // (Email) same values -\u003e returns true","lastModifiedDate":"2022-10-09"},{"lineNumber":141,"author":{"gitId":"bensohh"},"content":"        DeleteCommand deleteThirdCommandCopy \u003d new DeleteCommand(deletePersonDescriptor3);","lastModifiedDate":"2022-10-09"},{"lineNumber":142,"author":{"gitId":"bensohh"},"content":"        assertTrue(deleteThirdCommand.equals(deleteThirdCommandCopy));","lastModifiedDate":"2022-10-09"},{"lineNumber":143,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":144,"author":{"gitId":"bensohh"},"content":"        // (Email) different types -\u003e returns false","lastModifiedDate":"2022-10-09"},{"lineNumber":145,"author":{"gitId":"bensohh"},"content":"        assertFalse(deleteThirdCommand.equals(1));","lastModifiedDate":"2022-10-09"},{"lineNumber":146,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":147,"author":{"gitId":"bensohh"},"content":"        // (Email) null -\u003e returns false","lastModifiedDate":"2022-10-09"},{"lineNumber":148,"author":{"gitId":"bensohh"},"content":"        assertFalse(deleteThirdCommand.equals(null));","lastModifiedDate":"2022-10-09"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":150,"author":{"gitId":"bensohh"},"content":"        // (Email) different customer -\u003e returns false","lastModifiedDate":"2022-10-09"},{"lineNumber":151,"author":{"gitId":"bensohh"},"content":"        assertFalse(deleteThirdCommand.equals(deleteFourthCommand));","lastModifiedDate":"2022-10-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":153,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"Samsation":8,"TanWenCong":7,"bensohh":70,"albertZhangTJ":21,"-":47}},{"path":"src/test/java/seedu/boba/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.logic.commands;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"Samsation"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"Samsation"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.VALID_TAG_GOLD;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.testutil.TypicalCustomers.getTypicalBobaBot;","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.testutil.TypicalEmails.EMAIL_FIRST_PERSON;","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.testutil.TypicalEmails.EMAIL_SECOND_PERSON;","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.testutil.TypicalPhones.PHONE_FIRST_PERSON;","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.testutil.TypicalPhones.PHONE_SECOND_PERSON;","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"albertZhangTJ"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-31"},{"lineNumber":21,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":22,"author":{"gitId":"albertZhangTJ"},"content":"import seedu.boba.commons.core.Messages;","lastModifiedDate":"2022-10-31"},{"lineNumber":23,"author":{"gitId":"albertZhangTJ"},"content":"import seedu.boba.commons.core.index.Index;","lastModifiedDate":"2022-10-31"},{"lineNumber":24,"author":{"gitId":"albertZhangTJ"},"content":"import seedu.boba.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2022-10-31"},{"lineNumber":25,"author":{"gitId":"albertZhangTJ"},"content":"import seedu.boba.model.BobaBot;","lastModifiedDate":"2022-10-31"},{"lineNumber":26,"author":{"gitId":"albertZhangTJ"},"content":"import seedu.boba.model.BobaBotModel;","lastModifiedDate":"2022-10-31"},{"lineNumber":27,"author":{"gitId":"albertZhangTJ"},"content":"import seedu.boba.model.BobaBotModelManager;","lastModifiedDate":"2022-10-31"},{"lineNumber":28,"author":{"gitId":"albertZhangTJ"},"content":"import seedu.boba.model.UserPrefs;","lastModifiedDate":"2022-10-31"},{"lineNumber":29,"author":{"gitId":"albertZhangTJ"},"content":"import seedu.boba.model.customer.Customer;","lastModifiedDate":"2022-10-31"},{"lineNumber":30,"author":{"gitId":"albertZhangTJ"},"content":"import seedu.boba.model.customer.Email;","lastModifiedDate":"2022-10-31"},{"lineNumber":31,"author":{"gitId":"albertZhangTJ"},"content":"import seedu.boba.model.customer.Phone;","lastModifiedDate":"2022-10-31"},{"lineNumber":32,"author":{"gitId":"albertZhangTJ"},"content":"import seedu.boba.testutil.CustomerBuilder;","lastModifiedDate":"2022-10-31"},{"lineNumber":33,"author":{"gitId":"albertZhangTJ"},"content":"import seedu.boba.testutil.EditCustomerDescriptorBuilder;","lastModifiedDate":"2022-10-31"},{"lineNumber":34,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":35,"author":{"gitId":"Samsation"},"content":"/**","lastModifiedDate":"2022-10-14"},{"lineNumber":36,"author":{"gitId":"albertZhangTJ"},"content":" * Contains integration tests (interaction with the BobaBotModel) and unit tests for EditCommand.","lastModifiedDate":"2022-10-31"},{"lineNumber":37,"author":{"gitId":"Samsation"},"content":" */","lastModifiedDate":"2022-10-14"},{"lineNumber":38,"author":{"gitId":"Samsation"},"content":"public class EditCommandTest {","lastModifiedDate":"2022-10-14"},{"lineNumber":39,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":40,"author":{"gitId":"albertZhangTJ"},"content":"    private BobaBotModel bobaBotModel \u003d new BobaBotModelManager(getTypicalBobaBot(), new UserPrefs());","lastModifiedDate":"2022-10-31"},{"lineNumber":41,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":42,"author":{"gitId":"Samsation"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":43,"author":{"gitId":"Samsation"},"content":"    public void execute_phoneAllFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-10-14"},{"lineNumber":44,"author":{"gitId":"Samsation"},"content":"        Customer editedCustomer \u003d new CustomerBuilder().build();","lastModifiedDate":"2022-10-26"},{"lineNumber":45,"author":{"gitId":"Samsation"},"content":"        EditPersonDescriptor descriptor \u003d new EditCustomerDescriptorBuilder(editedCustomer).build();","lastModifiedDate":"2022-10-26"},{"lineNumber":46,"author":{"gitId":"Samsation"},"content":"        EditCommand editCommand \u003d new EditCommand(PHONE_FIRST_PERSON, descriptor);","lastModifiedDate":"2022-10-14"},{"lineNumber":47,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":48,"author":{"gitId":"Samsation"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedCustomer);","lastModifiedDate":"2022-10-26"},{"lineNumber":49,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":50,"author":{"gitId":"albertZhangTJ"},"content":"        BobaBotModel expectedBobaBotModel \u003d new BobaBotModelManager(","lastModifiedDate":"2022-10-31"},{"lineNumber":51,"author":{"gitId":"albertZhangTJ"},"content":"                new BobaBot(bobaBotModel.getBobaBot()), new UserPrefs());","lastModifiedDate":"2022-10-31"},{"lineNumber":52,"author":{"gitId":"albertZhangTJ"},"content":"        expectedBobaBotModel.setPerson(bobaBotModel.getFilteredPersonList().get(0), editedCustomer);","lastModifiedDate":"2022-10-31"},{"lineNumber":53,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":54,"author":{"gitId":"albertZhangTJ"},"content":"        assertCommandSuccess(editCommand, bobaBotModel, expectedMessage, expectedBobaBotModel);","lastModifiedDate":"2022-10-31"},{"lineNumber":55,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":56,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":57,"author":{"gitId":"Samsation"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":58,"author":{"gitId":"Samsation"},"content":"    public void execute_emailAllFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-10-14"},{"lineNumber":59,"author":{"gitId":"Samsation"},"content":"        Customer editedCustomer \u003d new CustomerBuilder().build();","lastModifiedDate":"2022-10-26"},{"lineNumber":60,"author":{"gitId":"Samsation"},"content":"        EditPersonDescriptor descriptor \u003d new EditCustomerDescriptorBuilder(editedCustomer).build();","lastModifiedDate":"2022-10-26"},{"lineNumber":61,"author":{"gitId":"Samsation"},"content":"        EditCommand editCommand \u003d new EditCommand(EMAIL_FIRST_PERSON, descriptor);","lastModifiedDate":"2022-10-14"},{"lineNumber":62,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":63,"author":{"gitId":"Samsation"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedCustomer);","lastModifiedDate":"2022-10-26"},{"lineNumber":64,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":65,"author":{"gitId":"albertZhangTJ"},"content":"        BobaBotModel expectedBobaBotModel \u003d new BobaBotModelManager(","lastModifiedDate":"2022-10-31"},{"lineNumber":66,"author":{"gitId":"albertZhangTJ"},"content":"                new BobaBot(bobaBotModel.getBobaBot()), new UserPrefs());","lastModifiedDate":"2022-10-31"},{"lineNumber":67,"author":{"gitId":"albertZhangTJ"},"content":"        expectedBobaBotModel.setPerson(bobaBotModel.getFilteredPersonList().get(0), editedCustomer);","lastModifiedDate":"2022-10-31"},{"lineNumber":68,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":69,"author":{"gitId":"albertZhangTJ"},"content":"        assertCommandSuccess(editCommand, bobaBotModel, expectedMessage, expectedBobaBotModel);","lastModifiedDate":"2022-10-31"},{"lineNumber":70,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":71,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":72,"author":{"gitId":"Samsation"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":73,"author":{"gitId":"Samsation"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-10-14"},{"lineNumber":74,"author":{"gitId":"albertZhangTJ"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(bobaBotModel.getFilteredPersonList().size());","lastModifiedDate":"2022-10-31"},{"lineNumber":75,"author":{"gitId":"albertZhangTJ"},"content":"        Customer lastCustomer \u003d bobaBotModel.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2022-10-31"},{"lineNumber":76,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":77,"author":{"gitId":"Samsation"},"content":"        CustomerBuilder personInList \u003d new CustomerBuilder(lastCustomer);","lastModifiedDate":"2022-10-26"},{"lineNumber":78,"author":{"gitId":"Samsation"},"content":"        Customer editedCustomer \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-10-26"},{"lineNumber":79,"author":{"gitId":"Samsation"},"content":"                .withTags(VALID_TAG_GOLD).build();","lastModifiedDate":"2022-10-14"},{"lineNumber":80,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":81,"author":{"gitId":"Samsation"},"content":"        EditPersonDescriptor descriptor \u003d new EditCustomerDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2022-10-26"},{"lineNumber":82,"author":{"gitId":"Samsation"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_GOLD).build();","lastModifiedDate":"2022-10-14"},{"lineNumber":83,"author":{"gitId":"Samsation"},"content":"        EditCommand editCommand \u003d new EditCommand(lastCustomer.getPhone(), descriptor);","lastModifiedDate":"2022-10-26"},{"lineNumber":84,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":85,"author":{"gitId":"Samsation"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedCustomer);","lastModifiedDate":"2022-10-26"},{"lineNumber":86,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":87,"author":{"gitId":"albertZhangTJ"},"content":"        BobaBotModel expectedBobaBotModel \u003d new BobaBotModelManager(","lastModifiedDate":"2022-10-31"},{"lineNumber":88,"author":{"gitId":"albertZhangTJ"},"content":"                new BobaBot(bobaBotModel.getBobaBot()), new UserPrefs());","lastModifiedDate":"2022-10-31"},{"lineNumber":89,"author":{"gitId":"albertZhangTJ"},"content":"        expectedBobaBotModel.setPerson(lastCustomer, editedCustomer);","lastModifiedDate":"2022-10-31"},{"lineNumber":90,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":91,"author":{"gitId":"albertZhangTJ"},"content":"        assertCommandSuccess(editCommand, bobaBotModel, expectedMessage, expectedBobaBotModel);","lastModifiedDate":"2022-10-31"},{"lineNumber":92,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":93,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":94,"author":{"gitId":"Samsation"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":95,"author":{"gitId":"Samsation"},"content":"    public void execute_phoneNoFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-10-14"},{"lineNumber":96,"author":{"gitId":"Samsation"},"content":"        EditCommand editCommand \u003d new EditCommand(PHONE_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2022-10-14"},{"lineNumber":97,"author":{"gitId":"albertZhangTJ"},"content":"        Customer editedCustomer \u003d bobaBotModel.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-10-31"},{"lineNumber":98,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":99,"author":{"gitId":"Samsation"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedCustomer);","lastModifiedDate":"2022-10-26"},{"lineNumber":100,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":101,"author":{"gitId":"albertZhangTJ"},"content":"        BobaBotModel expectedBobaBotModel \u003d new BobaBotModelManager(","lastModifiedDate":"2022-10-31"},{"lineNumber":102,"author":{"gitId":"albertZhangTJ"},"content":"                new BobaBot(bobaBotModel.getBobaBot()), new UserPrefs());","lastModifiedDate":"2022-10-31"},{"lineNumber":103,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":104,"author":{"gitId":"albertZhangTJ"},"content":"        assertCommandSuccess(editCommand, bobaBotModel, expectedMessage, expectedBobaBotModel);","lastModifiedDate":"2022-10-31"},{"lineNumber":105,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":106,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":107,"author":{"gitId":"Samsation"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":108,"author":{"gitId":"Samsation"},"content":"    public void execute_emailNoFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-10-14"},{"lineNumber":109,"author":{"gitId":"Samsation"},"content":"        EditCommand editCommand \u003d new EditCommand(EMAIL_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2022-10-14"},{"lineNumber":110,"author":{"gitId":"albertZhangTJ"},"content":"        Customer editedCustomer \u003d bobaBotModel.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-10-31"},{"lineNumber":111,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":112,"author":{"gitId":"Samsation"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedCustomer);","lastModifiedDate":"2022-10-26"},{"lineNumber":113,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":114,"author":{"gitId":"albertZhangTJ"},"content":"        BobaBotModel expectedBobaBotModel \u003d new BobaBotModelManager(","lastModifiedDate":"2022-10-31"},{"lineNumber":115,"author":{"gitId":"albertZhangTJ"},"content":"                new BobaBot(bobaBotModel.getBobaBot()), new UserPrefs());","lastModifiedDate":"2022-10-31"},{"lineNumber":116,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":117,"author":{"gitId":"albertZhangTJ"},"content":"        assertCommandSuccess(editCommand, bobaBotModel, expectedMessage, expectedBobaBotModel);","lastModifiedDate":"2022-10-31"},{"lineNumber":118,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":119,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":120,"author":{"gitId":"Samsation"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":121,"author":{"gitId":"Samsation"},"content":"    public void execute_phoneFilteredList_success() {","lastModifiedDate":"2022-10-14"},{"lineNumber":122,"author":{"gitId":"albertZhangTJ"},"content":"        showPersonAtIndex(bobaBotModel, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-31"},{"lineNumber":123,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":124,"author":{"gitId":"albertZhangTJ"},"content":"        Customer customerInFilteredList \u003d bobaBotModel.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-10-31"},{"lineNumber":125,"author":{"gitId":"Samsation"},"content":"        Customer editedCustomer \u003d new CustomerBuilder(customerInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-26"},{"lineNumber":126,"author":{"gitId":"Samsation"},"content":"        EditCommand editCommand \u003d new EditCommand(PHONE_FIRST_PERSON,","lastModifiedDate":"2022-10-14"},{"lineNumber":127,"author":{"gitId":"Samsation"},"content":"                new EditCustomerDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2022-10-26"},{"lineNumber":128,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":129,"author":{"gitId":"Samsation"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedCustomer);","lastModifiedDate":"2022-10-26"},{"lineNumber":130,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":131,"author":{"gitId":"albertZhangTJ"},"content":"        BobaBotModel expectedBobaBotModel \u003d new BobaBotModelManager(","lastModifiedDate":"2022-10-31"},{"lineNumber":132,"author":{"gitId":"albertZhangTJ"},"content":"                new BobaBot(bobaBotModel.getBobaBot()), new UserPrefs());","lastModifiedDate":"2022-10-31"},{"lineNumber":133,"author":{"gitId":"albertZhangTJ"},"content":"        expectedBobaBotModel.setPerson(bobaBotModel.getFilteredPersonList().get(0), editedCustomer);","lastModifiedDate":"2022-10-31"},{"lineNumber":134,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":135,"author":{"gitId":"albertZhangTJ"},"content":"        assertCommandSuccess(editCommand, bobaBotModel, expectedMessage, expectedBobaBotModel);","lastModifiedDate":"2022-10-31"},{"lineNumber":136,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":137,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":138,"author":{"gitId":"Samsation"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":139,"author":{"gitId":"Samsation"},"content":"    public void execute_emailFilteredList_success() {","lastModifiedDate":"2022-10-14"},{"lineNumber":140,"author":{"gitId":"albertZhangTJ"},"content":"        showPersonAtIndex(bobaBotModel, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-31"},{"lineNumber":141,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":142,"author":{"gitId":"albertZhangTJ"},"content":"        Customer customerInFilteredList \u003d bobaBotModel.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-10-31"},{"lineNumber":143,"author":{"gitId":"Samsation"},"content":"        Customer editedCustomer \u003d new CustomerBuilder(customerInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-26"},{"lineNumber":144,"author":{"gitId":"Samsation"},"content":"        EditCommand editCommand \u003d new EditCommand(EMAIL_FIRST_PERSON,","lastModifiedDate":"2022-10-14"},{"lineNumber":145,"author":{"gitId":"Samsation"},"content":"                new EditCustomerDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2022-10-26"},{"lineNumber":146,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":147,"author":{"gitId":"Samsation"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedCustomer);","lastModifiedDate":"2022-10-26"},{"lineNumber":148,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":149,"author":{"gitId":"albertZhangTJ"},"content":"        BobaBotModel expectedBobaBotModel \u003d new BobaBotModelManager(","lastModifiedDate":"2022-10-31"},{"lineNumber":150,"author":{"gitId":"albertZhangTJ"},"content":"                new BobaBot(bobaBotModel.getBobaBot()), new UserPrefs());","lastModifiedDate":"2022-10-31"},{"lineNumber":151,"author":{"gitId":"albertZhangTJ"},"content":"        expectedBobaBotModel.setPerson(bobaBotModel.getFilteredPersonList().get(0), editedCustomer);","lastModifiedDate":"2022-10-31"},{"lineNumber":152,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":153,"author":{"gitId":"albertZhangTJ"},"content":"        assertCommandSuccess(editCommand, bobaBotModel, expectedMessage, expectedBobaBotModel);","lastModifiedDate":"2022-10-31"},{"lineNumber":154,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":155,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":156,"author":{"gitId":"Samsation"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":157,"author":{"gitId":"Samsation"},"content":"    public void execute_phoneDuplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2022-10-14"},{"lineNumber":158,"author":{"gitId":"albertZhangTJ"},"content":"        Customer firstCustomer \u003d bobaBotModel.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-10-31"},{"lineNumber":159,"author":{"gitId":"Samsation"},"content":"        EditPersonDescriptor descriptor \u003d new EditCustomerDescriptorBuilder(firstCustomer).build();","lastModifiedDate":"2022-10-26"},{"lineNumber":160,"author":{"gitId":"Samsation"},"content":"        EditCommand editCommand \u003d new EditCommand(PHONE_SECOND_PERSON, descriptor);","lastModifiedDate":"2022-10-14"},{"lineNumber":161,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":162,"author":{"gitId":"albertZhangTJ"},"content":"        assertCommandFailure(editCommand, bobaBotModel, EditCommand.MESSAGE_DUPLICATE_CUSTOMER);","lastModifiedDate":"2022-10-31"},{"lineNumber":163,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":164,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":165,"author":{"gitId":"Samsation"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":166,"author":{"gitId":"Samsation"},"content":"    public void execute_emailDuplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2022-10-14"},{"lineNumber":167,"author":{"gitId":"albertZhangTJ"},"content":"        Customer firstCustomer \u003d bobaBotModel.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-10-31"},{"lineNumber":168,"author":{"gitId":"Samsation"},"content":"        EditPersonDescriptor descriptor \u003d new EditCustomerDescriptorBuilder(firstCustomer).build();","lastModifiedDate":"2022-10-26"},{"lineNumber":169,"author":{"gitId":"Samsation"},"content":"        EditCommand editCommand \u003d new EditCommand(EMAIL_SECOND_PERSON, descriptor);","lastModifiedDate":"2022-10-14"},{"lineNumber":170,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":171,"author":{"gitId":"albertZhangTJ"},"content":"        assertCommandFailure(editCommand, bobaBotModel, EditCommand.MESSAGE_DUPLICATE_CUSTOMER);","lastModifiedDate":"2022-10-31"},{"lineNumber":172,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":173,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":174,"author":{"gitId":"Samsation"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":175,"author":{"gitId":"Samsation"},"content":"    public void execute_phoneInvalidPersonUnfilteredList_failure() {","lastModifiedDate":"2022-10-14"},{"lineNumber":176,"author":{"gitId":"Samsation"},"content":"        Phone outOfBoundPhone \u003d new Phone(\"00000000\");","lastModifiedDate":"2022-10-14"},{"lineNumber":177,"author":{"gitId":"Samsation"},"content":"        EditPersonDescriptor descriptor \u003d new EditCustomerDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-26"},{"lineNumber":178,"author":{"gitId":"Samsation"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundPhone, descriptor);","lastModifiedDate":"2022-10-14"},{"lineNumber":179,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":180,"author":{"gitId":"albertZhangTJ"},"content":"        assertCommandFailure(editCommand, bobaBotModel, Messages.MESSAGE_INVALID_PERSON_INFORMATION);","lastModifiedDate":"2022-10-31"},{"lineNumber":181,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":182,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":183,"author":{"gitId":"Samsation"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":184,"author":{"gitId":"Samsation"},"content":"    public void execute_emailInvalidPersonUnfilteredList_failure() {","lastModifiedDate":"2022-10-14"},{"lineNumber":185,"author":{"gitId":"Samsation"},"content":"        Email outOfBoundEmail \u003d new Email(\"test@test.com\");","lastModifiedDate":"2022-10-14"},{"lineNumber":186,"author":{"gitId":"Samsation"},"content":"        EditPersonDescriptor descriptor \u003d new EditCustomerDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-26"},{"lineNumber":187,"author":{"gitId":"Samsation"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundEmail, descriptor);","lastModifiedDate":"2022-10-14"},{"lineNumber":188,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":189,"author":{"gitId":"albertZhangTJ"},"content":"        assertCommandFailure(editCommand, bobaBotModel, Messages.MESSAGE_INVALID_PERSON_INFORMATION);","lastModifiedDate":"2022-10-31"},{"lineNumber":190,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":191,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":192,"author":{"gitId":"Samsation"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":193,"author":{"gitId":"Samsation"},"content":"    public void equals() {","lastModifiedDate":"2022-10-14"},{"lineNumber":194,"author":{"gitId":"Samsation"},"content":"        final EditCommand standardCommand \u003d new EditCommand(PHONE_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2022-10-14"},{"lineNumber":195,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":196,"author":{"gitId":"Samsation"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-14"},{"lineNumber":197,"author":{"gitId":"Samsation"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2022-10-14"},{"lineNumber":198,"author":{"gitId":"Samsation"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(PHONE_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2022-10-14"},{"lineNumber":199,"author":{"gitId":"Samsation"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2022-10-14"},{"lineNumber":200,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":201,"author":{"gitId":"Samsation"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-14"},{"lineNumber":202,"author":{"gitId":"Samsation"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2022-10-14"},{"lineNumber":203,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":204,"author":{"gitId":"Samsation"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-14"},{"lineNumber":205,"author":{"gitId":"Samsation"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2022-10-14"},{"lineNumber":206,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":207,"author":{"gitId":"Samsation"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-14"},{"lineNumber":208,"author":{"gitId":"Samsation"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2022-10-14"},{"lineNumber":209,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":210,"author":{"gitId":"Samsation"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2022-10-14"},{"lineNumber":211,"author":{"gitId":"Samsation"},"content":"        assertFalse(standardCommand.equals(new EditCommand(PHONE_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2022-10-14"},{"lineNumber":212,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":213,"author":{"gitId":"Samsation"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2022-10-14"},{"lineNumber":214,"author":{"gitId":"Samsation"},"content":"        assertFalse(standardCommand.equals(new EditCommand(EMAIL_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2022-10-14"},{"lineNumber":215,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":216,"author":{"gitId":"Samsation"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2022-10-14"},{"lineNumber":217,"author":{"gitId":"Samsation"},"content":"        assertFalse(standardCommand.equals(new EditCommand(PHONE_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2022-10-14"},{"lineNumber":218,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":219,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":220,"author":{"gitId":"Samsation"},"content":"}","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"Samsation":148,"TanWenCong":15,"albertZhangTJ":57}},{"path":"src/test/java/seedu/boba/logic/commands/EditCustomerDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.logic.commands;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.VALID_REWARD_BOB;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.VALID_TAG_GOLD;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.testutil.EditCustomerDescriptorBuilder;","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"Samsation"},"content":"public class EditCustomerDescriptorTest {","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"Samsation"},"content":"        EditPersonDescriptor editedAmy \u003d new EditCustomerDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"Samsation"},"content":"        editedAmy \u003d new EditCustomerDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-10-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"Samsation"},"content":"        editedAmy \u003d new EditCustomerDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2022-10-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"Samsation"},"content":"        editedAmy \u003d new EditCustomerDescriptorBuilder(DESC_AMY).withReward(VALID_REWARD_BOB).build();","lastModifiedDate":"2022-10-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"Samsation"},"content":"        editedAmy \u003d new EditCustomerDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_GOLD).build();","lastModifiedDate":"2022-10-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"Samsation":6,"TanWenCong":10,"-":42}},{"path":"src/test/java/seedu/boba/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.logic.commands;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"albertZhangTJ"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-31"},{"lineNumber":4,"author":{"gitId":"albertZhangTJ"},"content":"import static seedu.boba.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2022-10-31"},{"lineNumber":5,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":8,"author":{"gitId":"albertZhangTJ"},"content":"import seedu.boba.model.BobaBotModel;","lastModifiedDate":"2022-10-31"},{"lineNumber":9,"author":{"gitId":"albertZhangTJ"},"content":"import seedu.boba.model.BobaBotModelManager;","lastModifiedDate":"2022-10-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"albertZhangTJ"},"content":"    private BobaBotModel bobaBotModel \u003d new BobaBotModelManager();","lastModifiedDate":"2022-10-31"},{"lineNumber":13,"author":{"gitId":"albertZhangTJ"},"content":"    private BobaBotModel expectedBobaBotModel \u003d new BobaBotModelManager();","lastModifiedDate":"2022-10-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"bensohh"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false,","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"WuHaohui1231"},"content":"                true, false, false, false);","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"albertZhangTJ"},"content":"        assertCommandSuccess(new ExitCommand(), bobaBotModel, expectedCommandResult, expectedBobaBotModel);","lastModifiedDate":"2022-10-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"TanWenCong":1,"bensohh":1,"albertZhangTJ":9,"-":9,"WuHaohui1231":1}},{"path":"src/test/java/seedu/boba/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.logic.commands;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.testutil.TypicalCustomers.CARL;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.testutil.TypicalCustomers.ELLE;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.testutil.TypicalCustomers.FIONA;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.testutil.TypicalCustomers.getTypicalBobaBot;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":18,"author":{"gitId":"albertZhangTJ"},"content":"import seedu.boba.model.BobaBotModel;","lastModifiedDate":"2022-10-31"},{"lineNumber":19,"author":{"gitId":"albertZhangTJ"},"content":"import seedu.boba.model.BobaBotModelManager;","lastModifiedDate":"2022-10-31"},{"lineNumber":20,"author":{"gitId":"albertZhangTJ"},"content":"import seedu.boba.model.UserPrefs;","lastModifiedDate":"2022-10-31"},{"lineNumber":21,"author":{"gitId":"albertZhangTJ"},"content":"import seedu.boba.model.customer.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"albertZhangTJ"},"content":" * Contains integration tests (interaction with the BobaBotModel) for {@code FindCommand}.","lastModifiedDate":"2022-10-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"albertZhangTJ"},"content":"    private BobaBotModel bobaBotModel \u003d new BobaBotModelManager(getTypicalBobaBot(), new UserPrefs());","lastModifiedDate":"2022-10-31"},{"lineNumber":28,"author":{"gitId":"albertZhangTJ"},"content":"    private BobaBotModel expectedBobaBotModel \u003d new BobaBotModelManager(getTypicalBobaBot(), new UserPrefs());","lastModifiedDate":"2022-10-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"Samsation"},"content":"        // different customer -\u003e returns false","lastModifiedDate":"2022-10-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"albertZhangTJ"},"content":"        expectedBobaBotModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-10-31"},{"lineNumber":63,"author":{"gitId":"albertZhangTJ"},"content":"        assertCommandSuccess(command, bobaBotModel, expectedMessage, expectedBobaBotModel);","lastModifiedDate":"2022-10-31"},{"lineNumber":64,"author":{"gitId":"albertZhangTJ"},"content":"        assertEquals(Collections.emptyList(), bobaBotModel.getFilteredPersonList());","lastModifiedDate":"2022-10-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"albertZhangTJ"},"content":"        expectedBobaBotModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-10-31"},{"lineNumber":73,"author":{"gitId":"albertZhangTJ"},"content":"        assertCommandSuccess(command, bobaBotModel, expectedMessage, expectedBobaBotModel);","lastModifiedDate":"2022-10-31"},{"lineNumber":74,"author":{"gitId":"albertZhangTJ"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), bobaBotModel.getFilteredPersonList());","lastModifiedDate":"2022-10-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Samsation":1,"TanWenCong":7,"albertZhangTJ":13,"-":62}},{"path":"src/test/java/seedu/boba/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.logic.commands;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"albertZhangTJ"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-31"},{"lineNumber":4,"author":{"gitId":"albertZhangTJ"},"content":"import static seedu.boba.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2022-10-31"},{"lineNumber":5,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":8,"author":{"gitId":"albertZhangTJ"},"content":"import seedu.boba.model.BobaBotModel;","lastModifiedDate":"2022-10-31"},{"lineNumber":9,"author":{"gitId":"albertZhangTJ"},"content":"import seedu.boba.model.BobaBotModelManager;","lastModifiedDate":"2022-10-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"albertZhangTJ"},"content":"    private BobaBotModel bobaBotModel \u003d new BobaBotModelManager();","lastModifiedDate":"2022-10-31"},{"lineNumber":13,"author":{"gitId":"albertZhangTJ"},"content":"    private BobaBotModel expectedBobaBotModel \u003d new BobaBotModelManager();","lastModifiedDate":"2022-10-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"WuHaohui1231"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false, false, false, false);","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"albertZhangTJ"},"content":"        assertCommandSuccess(new HelpCommand(), bobaBotModel, expectedCommandResult, expectedBobaBotModel);","lastModifiedDate":"2022-10-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"TanWenCong":1,"albertZhangTJ":9,"-":9,"WuHaohui1231":1}},{"path":"src/test/java/seedu/boba/logic/commands/IncreaseCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.logic.commands;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":3,"author":{"gitId":"Samsation"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-24"},{"lineNumber":4,"author":{"gitId":"Samsation"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-24"},{"lineNumber":5,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.testutil.TypicalCustomers.ALICE_INCREMENT;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.testutil.TypicalCustomers.getTypicalBobaBot;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.testutil.TypicalEmails.EMAIL_FIRST_PERSON;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.testutil.TypicalEmails.EMAIL_SECOND_PERSON;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.testutil.TypicalPhones.PHONE_FIRST_PERSON;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.testutil.TypicalPhones.PHONE_SECOND_PERSON;","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":14,"author":{"gitId":"albertZhangTJ"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-31"},{"lineNumber":15,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":16,"author":{"gitId":"albertZhangTJ"},"content":"import seedu.boba.commons.core.Messages;","lastModifiedDate":"2022-10-31"},{"lineNumber":17,"author":{"gitId":"albertZhangTJ"},"content":"import seedu.boba.model.BobaBot;","lastModifiedDate":"2022-10-31"},{"lineNumber":18,"author":{"gitId":"albertZhangTJ"},"content":"import seedu.boba.model.BobaBotModel;","lastModifiedDate":"2022-10-31"},{"lineNumber":19,"author":{"gitId":"albertZhangTJ"},"content":"import seedu.boba.model.BobaBotModelManager;","lastModifiedDate":"2022-10-31"},{"lineNumber":20,"author":{"gitId":"albertZhangTJ"},"content":"import seedu.boba.model.UserPrefs;","lastModifiedDate":"2022-10-31"},{"lineNumber":21,"author":{"gitId":"albertZhangTJ"},"content":"import seedu.boba.model.customer.Customer;","lastModifiedDate":"2022-10-31"},{"lineNumber":22,"author":{"gitId":"albertZhangTJ"},"content":"import seedu.boba.model.customer.Email;","lastModifiedDate":"2022-10-31"},{"lineNumber":23,"author":{"gitId":"albertZhangTJ"},"content":"import seedu.boba.model.customer.Phone;","lastModifiedDate":"2022-10-31"},{"lineNumber":24,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":25,"author":{"gitId":"Samsation"},"content":"/**","lastModifiedDate":"2022-10-24"},{"lineNumber":26,"author":{"gitId":"albertZhangTJ"},"content":" * Contains integration tests (interaction with the BobaBotModel) and unit tests for IncreaseCommand.","lastModifiedDate":"2022-10-31"},{"lineNumber":27,"author":{"gitId":"Samsation"},"content":" */","lastModifiedDate":"2022-10-24"},{"lineNumber":28,"author":{"gitId":"Samsation"},"content":"public class IncreaseCommandTest {","lastModifiedDate":"2022-10-24"},{"lineNumber":29,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":30,"author":{"gitId":"albertZhangTJ"},"content":"    private BobaBotModel bobaBotModel \u003d new BobaBotModelManager(getTypicalBobaBot(), new UserPrefs());","lastModifiedDate":"2022-10-31"},{"lineNumber":31,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":32,"author":{"gitId":"Samsation"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":33,"author":{"gitId":"Samsation"},"content":"    public void execute_phoneAllFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-10-24"},{"lineNumber":34,"author":{"gitId":"Samsation"},"content":"        Customer editedCustomer \u003d ALICE_INCREMENT;","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"Samsation"},"content":"        IncreaseCommand increaseCommand \u003d new IncreaseCommand(PHONE_FIRST_PERSON, \"100\");","lastModifiedDate":"2022-10-24"},{"lineNumber":36,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":37,"author":{"gitId":"Samsation"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedCustomer);","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":39,"author":{"gitId":"albertZhangTJ"},"content":"        BobaBotModel expectedBobaBotModel \u003d new BobaBotModelManager(","lastModifiedDate":"2022-10-31"},{"lineNumber":40,"author":{"gitId":"albertZhangTJ"},"content":"                new BobaBot(bobaBotModel.getBobaBot()), new UserPrefs());","lastModifiedDate":"2022-10-31"},{"lineNumber":41,"author":{"gitId":"albertZhangTJ"},"content":"        expectedBobaBotModel.setPerson(bobaBotModel.getFilteredPersonList().get(0), editedCustomer);","lastModifiedDate":"2022-10-31"},{"lineNumber":42,"author":{"gitId":"albertZhangTJ"},"content":"        assertCommandSuccess(increaseCommand, bobaBotModel, expectedMessage, expectedBobaBotModel);","lastModifiedDate":"2022-10-31"},{"lineNumber":43,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":44,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":45,"author":{"gitId":"Samsation"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":46,"author":{"gitId":"Samsation"},"content":"    public void execute_emailAllFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-10-24"},{"lineNumber":47,"author":{"gitId":"Samsation"},"content":"        Customer editedCustomer \u003d ALICE_INCREMENT;","lastModifiedDate":"2022-10-26"},{"lineNumber":48,"author":{"gitId":"Samsation"},"content":"        IncreaseCommand increaseCommand \u003d new IncreaseCommand(EMAIL_FIRST_PERSON, \"100\");","lastModifiedDate":"2022-10-24"},{"lineNumber":49,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":50,"author":{"gitId":"Samsation"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedCustomer);","lastModifiedDate":"2022-10-26"},{"lineNumber":51,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":52,"author":{"gitId":"albertZhangTJ"},"content":"        BobaBotModel expectedBobaBotModel \u003d new BobaBotModelManager(","lastModifiedDate":"2022-10-31"},{"lineNumber":53,"author":{"gitId":"albertZhangTJ"},"content":"                new BobaBot(bobaBotModel.getBobaBot()), new UserPrefs());","lastModifiedDate":"2022-10-31"},{"lineNumber":54,"author":{"gitId":"albertZhangTJ"},"content":"        expectedBobaBotModel.setPerson(bobaBotModel.getFilteredPersonList().get(0), editedCustomer);","lastModifiedDate":"2022-10-31"},{"lineNumber":55,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":56,"author":{"gitId":"albertZhangTJ"},"content":"        assertCommandSuccess(increaseCommand, bobaBotModel, expectedMessage, expectedBobaBotModel);","lastModifiedDate":"2022-10-31"},{"lineNumber":57,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":58,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":59,"author":{"gitId":"Samsation"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":60,"author":{"gitId":"Samsation"},"content":"    public void execute_phoneInvalidPersonUnfilteredList_failure() {","lastModifiedDate":"2022-10-24"},{"lineNumber":61,"author":{"gitId":"Samsation"},"content":"        Phone outOfBoundPhone \u003d new Phone(\"00000000\");","lastModifiedDate":"2022-10-24"},{"lineNumber":62,"author":{"gitId":"Samsation"},"content":"        IncreaseCommand increaseCommand \u003d new IncreaseCommand(outOfBoundPhone, \"100\");","lastModifiedDate":"2022-10-24"},{"lineNumber":63,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":64,"author":{"gitId":"albertZhangTJ"},"content":"        assertCommandFailure(increaseCommand, bobaBotModel, Messages.MESSAGE_INVALID_PERSON_INFORMATION);","lastModifiedDate":"2022-10-31"},{"lineNumber":65,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":66,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":67,"author":{"gitId":"Samsation"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":68,"author":{"gitId":"Samsation"},"content":"    public void execute_emailInvalidPersonUnfilteredList_failure() {","lastModifiedDate":"2022-10-24"},{"lineNumber":69,"author":{"gitId":"Samsation"},"content":"        Email outOfBoundEmail \u003d new Email(\"test@test.com\");","lastModifiedDate":"2022-10-24"},{"lineNumber":70,"author":{"gitId":"Samsation"},"content":"        IncreaseCommand increaseCommand \u003d new IncreaseCommand(outOfBoundEmail, \"100\");","lastModifiedDate":"2022-10-24"},{"lineNumber":71,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":72,"author":{"gitId":"albertZhangTJ"},"content":"        assertCommandFailure(increaseCommand, bobaBotModel, Messages.MESSAGE_INVALID_PERSON_INFORMATION);","lastModifiedDate":"2022-10-31"},{"lineNumber":73,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":74,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":75,"author":{"gitId":"Samsation"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":76,"author":{"gitId":"Samsation"},"content":"    public void equals() {","lastModifiedDate":"2022-10-24"},{"lineNumber":77,"author":{"gitId":"Samsation"},"content":"        final IncreaseCommand standardCommand \u003d new IncreaseCommand(PHONE_FIRST_PERSON, \"100\");","lastModifiedDate":"2022-10-24"},{"lineNumber":78,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":79,"author":{"gitId":"Samsation"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-24"},{"lineNumber":80,"author":{"gitId":"Samsation"},"content":"        IncreaseCommand commandWithSameValues \u003d new IncreaseCommand(PHONE_FIRST_PERSON, \"100\");","lastModifiedDate":"2022-10-24"},{"lineNumber":81,"author":{"gitId":"Samsation"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2022-10-24"},{"lineNumber":82,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":83,"author":{"gitId":"Samsation"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-24"},{"lineNumber":84,"author":{"gitId":"Samsation"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2022-10-24"},{"lineNumber":85,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":86,"author":{"gitId":"Samsation"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-24"},{"lineNumber":87,"author":{"gitId":"Samsation"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2022-10-24"},{"lineNumber":88,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":89,"author":{"gitId":"Samsation"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-24"},{"lineNumber":90,"author":{"gitId":"Samsation"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2022-10-24"},{"lineNumber":91,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":92,"author":{"gitId":"Samsation"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2022-10-24"},{"lineNumber":93,"author":{"gitId":"Samsation"},"content":"        assertFalse(standardCommand.equals(new IncreaseCommand(PHONE_SECOND_PERSON, \"100\")));","lastModifiedDate":"2022-10-24"},{"lineNumber":94,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":95,"author":{"gitId":"Samsation"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2022-10-24"},{"lineNumber":96,"author":{"gitId":"Samsation"},"content":"        assertFalse(standardCommand.equals(new IncreaseCommand(EMAIL_SECOND_PERSON, \"100\")));","lastModifiedDate":"2022-10-24"},{"lineNumber":97,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":98,"author":{"gitId":"Samsation"},"content":"        // different reward value -\u003e returns false","lastModifiedDate":"2022-10-24"},{"lineNumber":99,"author":{"gitId":"Samsation"},"content":"        assertFalse(standardCommand.equals(new IncreaseCommand(PHONE_FIRST_PERSON, \"200\")));","lastModifiedDate":"2022-10-24"},{"lineNumber":100,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":101,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":102,"author":{"gitId":"Samsation"},"content":"}","lastModifiedDate":"2022-10-24"}],"authorContributionMap":{"Samsation":70,"TanWenCong":9,"albertZhangTJ":23}},{"path":"src/test/java/seedu/boba/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.logic.commands;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"albertZhangTJ"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-31"},{"lineNumber":4,"author":{"gitId":"albertZhangTJ"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2022-10-31"},{"lineNumber":5,"author":{"gitId":"albertZhangTJ"},"content":"import static seedu.boba.testutil.TypicalCustomers.getTypicalBobaBot;","lastModifiedDate":"2022-10-31"},{"lineNumber":6,"author":{"gitId":"albertZhangTJ"},"content":"import static seedu.boba.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-31"},{"lineNumber":7,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":11,"author":{"gitId":"albertZhangTJ"},"content":"import seedu.boba.model.BobaBotModel;","lastModifiedDate":"2022-10-31"},{"lineNumber":12,"author":{"gitId":"albertZhangTJ"},"content":"import seedu.boba.model.BobaBotModelManager;","lastModifiedDate":"2022-10-31"},{"lineNumber":13,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.UserPrefs;","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"albertZhangTJ"},"content":" * Contains integration tests (interaction with the BobaBotModel) and unit tests for ListCommand.","lastModifiedDate":"2022-10-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"albertZhangTJ"},"content":"    private BobaBotModel bobaBotModel;","lastModifiedDate":"2022-10-31"},{"lineNumber":21,"author":{"gitId":"albertZhangTJ"},"content":"    private BobaBotModel expectedBobaBotModel;","lastModifiedDate":"2022-10-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"albertZhangTJ"},"content":"        bobaBotModel \u003d new BobaBotModelManager(getTypicalBobaBot(), new UserPrefs());","lastModifiedDate":"2022-10-31"},{"lineNumber":26,"author":{"gitId":"albertZhangTJ"},"content":"        expectedBobaBotModel \u003d new BobaBotModelManager(bobaBotModel.getBobaBot(), new UserPrefs());","lastModifiedDate":"2022-10-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"albertZhangTJ"},"content":"        assertCommandSuccess(new ListCommand(), bobaBotModel, ListCommand.MESSAGE_SUCCESS, expectedBobaBotModel);","lastModifiedDate":"2022-10-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"albertZhangTJ"},"content":"        showPersonAtIndex(bobaBotModel, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-31"},{"lineNumber":37,"author":{"gitId":"albertZhangTJ"},"content":"        assertCommandSuccess(new ListCommand(), bobaBotModel, ListCommand.MESSAGE_SUCCESS, expectedBobaBotModel);","lastModifiedDate":"2022-10-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"TanWenCong":2,"albertZhangTJ":16,"-":21}},{"path":"src/test/java/seedu/boba/logic/commands/UndoCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.logic.commands;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":3,"author":{"gitId":"albertZhangTJ"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-11-01"},{"lineNumber":4,"author":{"gitId":"albertZhangTJ"},"content":"import static seedu.boba.logic.commands.UndoCommand.MESSAGE_UNDO_SUCCESS;","lastModifiedDate":"2022-11-01"},{"lineNumber":5,"author":{"gitId":"albertZhangTJ"},"content":"import static seedu.boba.testutil.TypicalCustomers.getTypicalBobaBot;","lastModifiedDate":"2022-10-31"},{"lineNumber":6,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"albertZhangTJ"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-11-01"},{"lineNumber":8,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":9,"author":{"gitId":"albertZhangTJ"},"content":"import seedu.boba.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-11-01"},{"lineNumber":10,"author":{"gitId":"albertZhangTJ"},"content":"import seedu.boba.model.BobaBotModel;","lastModifiedDate":"2022-10-31"},{"lineNumber":11,"author":{"gitId":"albertZhangTJ"},"content":"import seedu.boba.model.BobaBotModelManager;","lastModifiedDate":"2022-10-31"},{"lineNumber":12,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.UserPrefs;","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"albertZhangTJ"},"content":"import seedu.boba.testutil.CustomerBuilder;","lastModifiedDate":"2022-11-01"},{"lineNumber":14,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":15,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":16,"author":{"gitId":"bensohh"},"content":"public class UndoCommandTest {","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"albertZhangTJ"},"content":"    private BobaBotModel bobaBotModel \u003d new BobaBotModelManager(getTypicalBobaBot(), new UserPrefs());","lastModifiedDate":"2022-10-31"},{"lineNumber":18,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":20,"author":{"gitId":"bensohh"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":21,"author":{"gitId":"bensohh"},"content":"    public void execute_undoAfterAddCommand_success() throws CommandException {","lastModifiedDate":"2022-10-25"},{"lineNumber":22,"author":{"gitId":"albertZhangTJ"},"content":"        BobaBotModel expectedModel \u003d new BobaBotModelManager(getTypicalBobaBot(), new UserPrefs());","lastModifiedDate":"2022-10-31"},{"lineNumber":23,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":24,"author":{"gitId":"albertZhangTJ"},"content":"        CommandResult commandResult \u003d new AddCommand(new CustomerBuilder().build()).execute(bobaBotModel);","lastModifiedDate":"2022-10-31"},{"lineNumber":25,"author":{"gitId":"albertZhangTJ"},"content":"        bobaBotModel.commitBobaBot();","lastModifiedDate":"2022-11-01"},{"lineNumber":26,"author":{"gitId":"bensohh"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_UNDO_SUCCESS, false,","lastModifiedDate":"2022-10-25"},{"lineNumber":27,"author":{"gitId":"albertZhangTJ"},"content":"                false, true, false, false);","lastModifiedDate":"2022-11-01"},{"lineNumber":28,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":29,"author":{"gitId":"albertZhangTJ"},"content":"        assertCommandSuccess(new UndoCommand(), bobaBotModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-10-31"},{"lineNumber":30,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":31,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":32,"author":{"gitId":"albertZhangTJ"},"content":"    /*@Test","lastModifiedDate":"2022-11-01"},{"lineNumber":33,"author":{"gitId":"albertZhangTJ"},"content":"    public void execute_undoAfterEditCommand_success() throws Exception {","lastModifiedDate":"2022-11-01"},{"lineNumber":34,"author":{"gitId":"albertZhangTJ"},"content":"        BobaBotModel expectedModel \u003d new BobaBotModelManager(getTypicalBobaBot(), new UserPrefs());","lastModifiedDate":"2022-11-01"},{"lineNumber":35,"author":{"gitId":"albertZhangTJ"},"content":"        EditCommand.EditPersonDescriptor pd \u003d new EditCommand.EditPersonDescriptor();","lastModifiedDate":"2022-11-01"},{"lineNumber":36,"author":{"gitId":"albertZhangTJ"},"content":"        pd.setEmail(new Email(\"a@b.com\"));","lastModifiedDate":"2022-11-01"},{"lineNumber":37,"author":{"gitId":"albertZhangTJ"},"content":"        System.out.println(new Email(new CustomerBuilder().build().getEmail().toString()));","lastModifiedDate":"2022-11-01"},{"lineNumber":38,"author":{"gitId":"albertZhangTJ"},"content":"        CommandResult commandResult \u003d new EditCommand(new Email(new CustomerBuilder().build().getEmail().toString()),","lastModifiedDate":"2022-11-01"},{"lineNumber":39,"author":{"gitId":"albertZhangTJ"},"content":"                pd).execute(bobaBotModel);","lastModifiedDate":"2022-11-01"},{"lineNumber":40,"author":{"gitId":"albertZhangTJ"},"content":"        bobaBotModel.commitBobaBot();","lastModifiedDate":"2022-11-01"},{"lineNumber":41,"author":{"gitId":"albertZhangTJ"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_UNDO_SUCCESS, false,","lastModifiedDate":"2022-11-01"},{"lineNumber":42,"author":{"gitId":"albertZhangTJ"},"content":"                false, true, false, false);","lastModifiedDate":"2022-11-01"},{"lineNumber":43,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":44,"author":{"gitId":"albertZhangTJ"},"content":"        assertCommandSuccess(new UndoCommand(), bobaBotModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-11-01"},{"lineNumber":45,"author":{"gitId":"albertZhangTJ"},"content":"    }*/","lastModifiedDate":"2022-11-01"},{"lineNumber":46,"author":{"gitId":"bensohh"},"content":"}","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"TanWenCong":2,"bensohh":10,"albertZhangTJ":34}},{"path":"src/test/java/seedu/boba/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.logic.parser;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.BIRTHDAY_MONTH_DESC_AMY;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.BIRTHDAY_MONTH_DESC_BOB;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.INVALID_BIRTHDAY_MONTH_DESC;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.INVALID_REWARD_DESC;","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.REWARD_DESC_AMY;","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.REWARD_DESC_BOB;","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.TAG_DESC_GOLD;","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.TAG_DESC_MEMBER;","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.VALID_BIRTHDAY_MONTH_BOB;","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.VALID_REWARD_BOB;","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.VALID_TAG_GOLD;","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.VALID_TAG_MEMBER;","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.testutil.TypicalCustomers.AMY;","lastModifiedDate":"2022-10-27"},{"lineNumber":34,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.testutil.TypicalCustomers.BOB;","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.logic.commands.AddCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.BirthdayMonth;","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Customer;","lastModifiedDate":"2022-10-27"},{"lineNumber":41,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Email;","lastModifiedDate":"2022-10-27"},{"lineNumber":42,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Name;","lastModifiedDate":"2022-10-27"},{"lineNumber":43,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Phone;","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Reward;","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.tag.Tag;","lastModifiedDate":"2022-10-27"},{"lineNumber":46,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.testutil.CustomerBuilder;","lastModifiedDate":"2022-10-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"TanWenCong"},"content":"    private final AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":53,"author":{"gitId":"Samsation"},"content":"        Customer expectedCustomer \u003d new CustomerBuilder(BOB).withTags(VALID_TAG_MEMBER).build();","lastModifiedDate":"2022-10-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":57,"author":{"gitId":"Samsation"},"content":"            + BIRTHDAY_MONTH_DESC_BOB + REWARD_DESC_BOB + TAG_DESC_MEMBER, new AddCommand(expectedCustomer));","lastModifiedDate":"2022-10-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":60,"author":{"gitId":"Samsation"},"content":"        Customer expectedCustomerMultipleTags \u003d new CustomerBuilder(BOB).withTags(VALID_TAG_MEMBER, VALID_TAG_GOLD)","lastModifiedDate":"2022-10-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":62,"author":{"gitId":"TanWenCong"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + BIRTHDAY_MONTH_DESC_BOB","lastModifiedDate":"2022-10-24"},{"lineNumber":63,"author":{"gitId":"Samsation"},"content":"            + REWARD_DESC_BOB + TAG_DESC_GOLD + TAG_DESC_MEMBER, new AddCommand(expectedCustomerMultipleTags));","lastModifiedDate":"2022-10-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"TanWenCong"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":67,"author":{"gitId":"TanWenCong"},"content":"    public void parse_multipleUniqueFields_failure() {","lastModifiedDate":"2022-10-14"},{"lineNumber":68,"author":{"gitId":"TanWenCong"},"content":"        String message \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-14"},{"lineNumber":69,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":70,"author":{"gitId":"TanWenCong"},"content":"        // multiple names - rejected","lastModifiedDate":"2022-10-14"},{"lineNumber":71,"author":{"gitId":"TanWenCong"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-14"},{"lineNumber":72,"author":{"gitId":"TanWenCong"},"content":"            + BIRTHDAY_MONTH_DESC_BOB + REWARD_DESC_BOB + TAG_DESC_MEMBER, message);","lastModifiedDate":"2022-10-24"},{"lineNumber":73,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":74,"author":{"gitId":"TanWenCong"},"content":"        // multiple phones - rejected","lastModifiedDate":"2022-10-14"},{"lineNumber":75,"author":{"gitId":"TanWenCong"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-14"},{"lineNumber":76,"author":{"gitId":"TanWenCong"},"content":"            + BIRTHDAY_MONTH_DESC_BOB + REWARD_DESC_BOB + TAG_DESC_MEMBER, message);","lastModifiedDate":"2022-10-24"},{"lineNumber":77,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":78,"author":{"gitId":"TanWenCong"},"content":"        // multiple emails - rejected","lastModifiedDate":"2022-10-14"},{"lineNumber":79,"author":{"gitId":"TanWenCong"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-14"},{"lineNumber":80,"author":{"gitId":"TanWenCong"},"content":"            + BIRTHDAY_MONTH_DESC_BOB + REWARD_DESC_BOB + TAG_DESC_MEMBER, message);","lastModifiedDate":"2022-10-24"},{"lineNumber":81,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":82,"author":{"gitId":"TanWenCong"},"content":"        // multiple birthdayMonths - rejected","lastModifiedDate":"2022-10-24"},{"lineNumber":83,"author":{"gitId":"TanWenCong"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + BIRTHDAY_MONTH_DESC_AMY","lastModifiedDate":"2022-10-24"},{"lineNumber":84,"author":{"gitId":"TanWenCong"},"content":"            + BIRTHDAY_MONTH_DESC_BOB + REWARD_DESC_BOB + TAG_DESC_MEMBER, message);","lastModifiedDate":"2022-10-24"},{"lineNumber":85,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":86,"author":{"gitId":"TanWenCong"},"content":"        // multiple rewards - rejected","lastModifiedDate":"2022-10-14"},{"lineNumber":87,"author":{"gitId":"TanWenCong"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + REWARD_DESC_AMY","lastModifiedDate":"2022-10-14"},{"lineNumber":88,"author":{"gitId":"TanWenCong"},"content":"            + BIRTHDAY_MONTH_DESC_BOB + REWARD_DESC_BOB + TAG_DESC_MEMBER, message);","lastModifiedDate":"2022-10-24"},{"lineNumber":89,"author":{"gitId":"TanWenCong"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":90,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":94,"author":{"gitId":"Samsation"},"content":"        Customer expectedCustomer \u003d new CustomerBuilder(AMY).withTags().build();","lastModifiedDate":"2022-10-26"},{"lineNumber":95,"author":{"gitId":"TanWenCong"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2022-10-24"},{"lineNumber":96,"author":{"gitId":"TanWenCong"},"content":"            NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + BIRTHDAY_MONTH_DESC_AMY + REWARD_DESC_AMY,","lastModifiedDate":"2022-10-24"},{"lineNumber":97,"author":{"gitId":"Samsation"},"content":"            new AddCommand(expectedCustomer));","lastModifiedDate":"2022-10-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":105,"author":{"gitId":"TanWenCong"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2022-10-24"},{"lineNumber":106,"author":{"gitId":"TanWenCong"},"content":"            VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + BIRTHDAY_MONTH_DESC_BOB + REWARD_DESC_BOB,","lastModifiedDate":"2022-10-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":110,"author":{"gitId":"TanWenCong"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2022-10-24"},{"lineNumber":111,"author":{"gitId":"TanWenCong"},"content":"            NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + BIRTHDAY_MONTH_DESC_BOB + REWARD_DESC_BOB,","lastModifiedDate":"2022-10-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":115,"author":{"gitId":"TanWenCong"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2022-10-24"},{"lineNumber":116,"author":{"gitId":"TanWenCong"},"content":"            NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + BIRTHDAY_MONTH_DESC_BOB + REWARD_DESC_BOB,","lastModifiedDate":"2022-10-24"},{"lineNumber":117,"author":{"gitId":"TanWenCong"},"content":"            expectedMessage);","lastModifiedDate":"2022-10-24"},{"lineNumber":118,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":119,"author":{"gitId":"TanWenCong"},"content":"        // missing birthdayMonth prefix","lastModifiedDate":"2022-10-24"},{"lineNumber":120,"author":{"gitId":"TanWenCong"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2022-10-24"},{"lineNumber":121,"author":{"gitId":"TanWenCong"},"content":"            NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_BIRTHDAY_MONTH_BOB + VALID_REWARD_BOB,","lastModifiedDate":"2022-10-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":124,"author":{"gitId":"TanWenCong"},"content":"        // missing reward prefix","lastModifiedDate":"2022-10-24"},{"lineNumber":125,"author":{"gitId":"TanWenCong"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2022-10-24"},{"lineNumber":126,"author":{"gitId":"TanWenCong"},"content":"            NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + BIRTHDAY_MONTH_DESC_BOB + VALID_REWARD_BOB,","lastModifiedDate":"2022-10-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":130,"author":{"gitId":"TanWenCong"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2022-10-24"},{"lineNumber":131,"author":{"gitId":"TanWenCong"},"content":"            VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_BIRTHDAY_MONTH_BOB + VALID_REWARD_BOB,","lastModifiedDate":"2022-10-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":138,"author":{"gitId":"TanWenCong"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2022-10-24"},{"lineNumber":139,"author":{"gitId":"TanWenCong"},"content":"            INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + BIRTHDAY_MONTH_DESC_BOB + REWARD_DESC_BOB","lastModifiedDate":"2022-10-24"},{"lineNumber":140,"author":{"gitId":"TanWenCong"},"content":"            + TAG_DESC_GOLD + TAG_DESC_MEMBER, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":143,"author":{"gitId":"TanWenCong"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2022-10-24"},{"lineNumber":144,"author":{"gitId":"TanWenCong"},"content":"            NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + BIRTHDAY_MONTH_DESC_BOB + REWARD_DESC_BOB","lastModifiedDate":"2022-10-24"},{"lineNumber":145,"author":{"gitId":"TanWenCong"},"content":"            + TAG_DESC_GOLD + TAG_DESC_MEMBER, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":148,"author":{"gitId":"TanWenCong"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2022-10-24"},{"lineNumber":149,"author":{"gitId":"TanWenCong"},"content":"            NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + BIRTHDAY_MONTH_DESC_BOB + REWARD_DESC_BOB","lastModifiedDate":"2022-10-24"},{"lineNumber":150,"author":{"gitId":"TanWenCong"},"content":"            + TAG_DESC_GOLD + TAG_DESC_MEMBER, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":152,"author":{"gitId":"TanWenCong"},"content":"        // invalid birthdayMonth","lastModifiedDate":"2022-10-24"},{"lineNumber":153,"author":{"gitId":"TanWenCong"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2022-10-24"},{"lineNumber":154,"author":{"gitId":"TanWenCong"},"content":"            NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_BIRTHDAY_MONTH_DESC + REWARD_DESC_BOB","lastModifiedDate":"2022-10-24"},{"lineNumber":155,"author":{"gitId":"TanWenCong"},"content":"                + TAG_DESC_GOLD + TAG_DESC_MEMBER, BirthdayMonth.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-24"},{"lineNumber":156,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":157,"author":{"gitId":"TanWenCong"},"content":"        // invalid reward","lastModifiedDate":"2022-10-24"},{"lineNumber":158,"author":{"gitId":"TanWenCong"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2022-10-24"},{"lineNumber":159,"author":{"gitId":"TanWenCong"},"content":"            NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + BIRTHDAY_MONTH_DESC_BOB + INVALID_REWARD_DESC","lastModifiedDate":"2022-10-24"},{"lineNumber":160,"author":{"gitId":"TanWenCong"},"content":"            + TAG_DESC_GOLD + TAG_DESC_MEMBER, Reward.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":163,"author":{"gitId":"TanWenCong"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2022-10-24"},{"lineNumber":164,"author":{"gitId":"TanWenCong"},"content":"            NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + BIRTHDAY_MONTH_DESC_BOB + REWARD_DESC_BOB","lastModifiedDate":"2022-10-24"},{"lineNumber":165,"author":{"gitId":"TanWenCong"},"content":"            + INVALID_TAG_DESC + VALID_TAG_MEMBER, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":168,"author":{"gitId":"TanWenCong"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2022-10-24"},{"lineNumber":169,"author":{"gitId":"TanWenCong"},"content":"            INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + BIRTHDAY_MONTH_DESC_BOB + INVALID_REWARD_DESC,","lastModifiedDate":"2022-10-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":174,"author":{"gitId":"TanWenCong"},"content":"                + BIRTHDAY_MONTH_DESC_BOB + REWARD_DESC_BOB + TAG_DESC_GOLD + TAG_DESC_MEMBER,","lastModifiedDate":"2022-10-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"Samsation":6,"TanWenCong":111,"-":60}},{"path":"src/test/java/seedu/boba/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.logic.parser;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"TanWenCong":1,"-":149}},{"path":"src/test/java/seedu/boba/logic/parser/BobaBotParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.logic.parser;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.testutil.TypicalEmails.EMAIL_FIRST_PERSON;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.testutil.TypicalPhones.PHONE_FIRST_PERSON;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.logic.commands.AddCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.logic.commands.ClearCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.logic.commands.DeleteCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.logic.commands.EditCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.logic.commands.ExitCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.logic.commands.FindCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.logic.commands.HelpCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.logic.commands.ListCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Customer;","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Email;","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.MultiSearchPredicate;","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Phone;","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.testutil.CustomerBuilder;","lastModifiedDate":"2022-10-27"},{"lineNumber":34,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.testutil.CustomerUtil;","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.testutil.EditCustomerDescriptorBuilder;","lastModifiedDate":"2022-10-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"TanWenCong"},"content":"public class BobaBotParserTest {","lastModifiedDate":"2022-10-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"TanWenCong"},"content":"    private final BobaBotParser parser \u003d new BobaBotParser();","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"Samsation"},"content":"        Customer customer \u003d new CustomerBuilder().build();","lastModifiedDate":"2022-10-26"},{"lineNumber":44,"author":{"gitId":"Samsation"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(CustomerUtil.getAddCommand(customer));","lastModifiedDate":"2022-10-26"},{"lineNumber":45,"author":{"gitId":"Samsation"},"content":"        assertEquals(new AddCommand(customer), command);","lastModifiedDate":"2022-10-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"bensohh"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"bensohh"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"bensohh"},"content":"        DeleteCommand.DeletePersonDescriptor deletePersonDescriptor \u003d new DeleteCommand.DeletePersonDescriptor();","lastModifiedDate":"2022-10-09"},{"lineNumber":57,"author":{"gitId":"bensohh"},"content":"        deletePersonDescriptor.setPhone(new Phone(\"12345678\"));","lastModifiedDate":"2022-10-09"},{"lineNumber":58,"author":{"gitId":"bensohh"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"bensohh"},"content":"                DeleteCommand.COMMAND_WORD + \" p/12345678\");","lastModifiedDate":"2022-10-09"},{"lineNumber":60,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":61,"author":{"gitId":"bensohh"},"content":"        DeleteCommand.DeletePersonDescriptor deletePersonDescriptor2 \u003d new DeleteCommand.DeletePersonDescriptor();","lastModifiedDate":"2022-10-09"},{"lineNumber":62,"author":{"gitId":"bensohh"},"content":"        deletePersonDescriptor2.setEmail(new Email(\"testing@test.com\"));","lastModifiedDate":"2022-10-09"},{"lineNumber":63,"author":{"gitId":"bensohh"},"content":"        DeleteCommand command2 \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2022-10-09"},{"lineNumber":64,"author":{"gitId":"bensohh"},"content":"                DeleteCommand.COMMAND_WORD + \" e/testing@test.com\");","lastModifiedDate":"2022-10-09"},{"lineNumber":65,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":66,"author":{"gitId":"bensohh"},"content":"        assertEquals(new DeleteCommand(deletePersonDescriptor), command);","lastModifiedDate":"2022-10-09"},{"lineNumber":67,"author":{"gitId":"bensohh"},"content":"        assertEquals(new DeleteCommand(deletePersonDescriptor2), command2);","lastModifiedDate":"2022-10-09"},{"lineNumber":68,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":69,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":70,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":71,"author":{"gitId":"Samsation"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":72,"author":{"gitId":"Samsation"},"content":"    public void parseCommand_phone_edit() throws Exception {","lastModifiedDate":"2022-10-14"},{"lineNumber":73,"author":{"gitId":"Samsation"},"content":"        Customer customer \u003d new CustomerBuilder().build();","lastModifiedDate":"2022-10-26"},{"lineNumber":74,"author":{"gitId":"Samsation"},"content":"        EditPersonDescriptor descriptor \u003d new EditCustomerDescriptorBuilder(customer).build();","lastModifiedDate":"2022-10-26"},{"lineNumber":75,"author":{"gitId":"Samsation"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-14"},{"lineNumber":76,"author":{"gitId":"Samsation"},"content":"                + PREFIX_PHONE + PHONE_FIRST_PERSON + \" \" + CustomerUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2022-10-26"},{"lineNumber":77,"author":{"gitId":"Samsation"},"content":"        assertEquals(new EditCommand(PHONE_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2022-10-14"},{"lineNumber":78,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":79,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":80,"author":{"gitId":"bensohh"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":81,"author":{"gitId":"Samsation"},"content":"    public void parseCommand_pemail_edit() throws Exception {","lastModifiedDate":"2022-10-14"},{"lineNumber":82,"author":{"gitId":"Samsation"},"content":"        Customer customer \u003d new CustomerBuilder().build();","lastModifiedDate":"2022-10-26"},{"lineNumber":83,"author":{"gitId":"Samsation"},"content":"        EditPersonDescriptor descriptor \u003d new EditCustomerDescriptorBuilder(customer).build();","lastModifiedDate":"2022-10-26"},{"lineNumber":84,"author":{"gitId":"bensohh"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-09"},{"lineNumber":85,"author":{"gitId":"Samsation"},"content":"                + PREFIX_EMAIL + EMAIL_FIRST_PERSON + \" \" + CustomerUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2022-10-26"},{"lineNumber":86,"author":{"gitId":"Samsation"},"content":"        assertEquals(new EditCommand(EMAIL_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2022-10-14"},{"lineNumber":87,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"albertZhangTJ"},"content":"        assertEquals(new FindCommand(new MultiSearchPredicate(keywords)), command);","lastModifiedDate":"2022-10-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"Samsation":18,"TanWenCong":27,"bensohh":19,"albertZhangTJ":1,"-":60}},{"path":"src/test/java/seedu/boba/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.logic.parser;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.logic.commands.Command;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser\u003c? extends Command\u003e parser, String userInput,","lastModifiedDate":"2022-02-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            Command expectedCommand) {","lastModifiedDate":"2022-02-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser\u003c? extends Command\u003e parser, String userInput, String expectedMessage) {","lastModifiedDate":"2022-02-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"TanWenCong":3,"-":36}},{"path":"src/test/java/seedu/boba/logic/parser/DecreaseCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.logic.parser;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":3,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.testutil.TypicalPhones.PHONE_FIRST_PERSON;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":12,"author":{"gitId":"Samsation"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-24"},{"lineNumber":13,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":14,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.logic.commands.DecreaseCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"Samsation"},"content":"import seedu.boba.model.customer.Reward;","lastModifiedDate":"2022-10-30"},{"lineNumber":16,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":17,"author":{"gitId":"Samsation"},"content":"public class DecreaseCommandParserTest {","lastModifiedDate":"2022-10-24"},{"lineNumber":18,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":19,"author":{"gitId":"Samsation"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2022-10-24"},{"lineNumber":20,"author":{"gitId":"Samsation"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, DecreaseCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-24"},{"lineNumber":21,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":22,"author":{"gitId":"Samsation"},"content":"    private static final String MESSAGE_INVALID_REWARD \u003d Reward.MESSAGE_MAX_INTEGER;","lastModifiedDate":"2022-10-30"},{"lineNumber":23,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":24,"author":{"gitId":"Samsation"},"content":"    private DecreaseCommandParser parser \u003d new DecreaseCommandParser();","lastModifiedDate":"2022-10-24"},{"lineNumber":25,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":26,"author":{"gitId":"Samsation"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":27,"author":{"gitId":"Samsation"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2022-10-24"},{"lineNumber":28,"author":{"gitId":"Samsation"},"content":"        // no reward values specified","lastModifiedDate":"2022-10-24"},{"lineNumber":29,"author":{"gitId":"Samsation"},"content":"        assertParseFailure(parser, VALID_PHONE_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-24"},{"lineNumber":30,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":31,"author":{"gitId":"Samsation"},"content":"        // another no reward values specified","lastModifiedDate":"2022-10-24"},{"lineNumber":32,"author":{"gitId":"Samsation"},"content":"        assertParseFailure(parser, \" \" + PREFIX_PHONE + PHONE_FIRST_PERSON, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-24"},{"lineNumber":33,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":34,"author":{"gitId":"Samsation"},"content":"        // no index and no field specified","lastModifiedDate":"2022-10-24"},{"lineNumber":35,"author":{"gitId":"Samsation"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-24"},{"lineNumber":36,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":37,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":38,"author":{"gitId":"Samsation"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":39,"author":{"gitId":"Samsation"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2022-10-24"},{"lineNumber":40,"author":{"gitId":"Samsation"},"content":"        // negative reward value","lastModifiedDate":"2022-10-24"},{"lineNumber":41,"author":{"gitId":"Samsation"},"content":"        assertParseFailure(parser, \"-5\" + PHONE_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-24"},{"lineNumber":42,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":43,"author":{"gitId":"Samsation"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2022-10-24"},{"lineNumber":44,"author":{"gitId":"Samsation"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_REWARD);","lastModifiedDate":"2022-10-30"},{"lineNumber":45,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":46,"author":{"gitId":"Samsation"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2022-10-24"},{"lineNumber":47,"author":{"gitId":"Samsation"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_REWARD);","lastModifiedDate":"2022-10-30"},{"lineNumber":48,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":49,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":50,"author":{"gitId":"Samsation"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":51,"author":{"gitId":"Samsation"},"content":"    public void parse_invalidIdentifier_failure() {","lastModifiedDate":"2022-10-24"},{"lineNumber":52,"author":{"gitId":"Samsation"},"content":"        assertParseFailure(parser, \" \" + INVALID_PHONE_DESC,","lastModifiedDate":"2022-10-24"},{"lineNumber":53,"author":{"gitId":"Samsation"},"content":"                MESSAGE_INVALID_FORMAT); // invalid phone","lastModifiedDate":"2022-10-24"},{"lineNumber":54,"author":{"gitId":"Samsation"},"content":"        assertParseFailure(parser, \" \" + INVALID_EMAIL_DESC,","lastModifiedDate":"2022-10-24"},{"lineNumber":55,"author":{"gitId":"Samsation"},"content":"                MESSAGE_INVALID_FORMAT); // invalid email","lastModifiedDate":"2022-10-24"},{"lineNumber":56,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":57,"author":{"gitId":"Samsation"},"content":"}","lastModifiedDate":"2022-10-24"}],"authorContributionMap":{"Samsation":47,"TanWenCong":10}},{"path":"src/test/java/seedu/boba/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.logic.parser;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.commons.core.Messages.MESSAGE_BOTH_EMAIL_AND_PHONE;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.commons.core.Messages.MESSAGE_EMPTY_EMAIL_AND_PHONE;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.commons.core.Messages.MESSAGE_NO_UNIQUE_PREFIX_IDENTIFIER;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.logic.commands.DeleteCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Email;","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Phone;","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"bensohh"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"bensohh"},"content":"    public void parse_validPhoneArg_returnsDeleteCommand() {","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"bensohh"},"content":"        DeleteCommand.DeletePersonDescriptor deletePersonDescriptor \u003d new DeleteCommand.DeletePersonDescriptor();","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"bensohh"},"content":"        deletePersonDescriptor.setPhone(new Phone(\"12345678\"));","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"bensohh"},"content":"        assertParseSuccess(parser, \" p/12345678\", new DeleteCommand(deletePersonDescriptor));","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"bensohh"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"bensohh"},"content":"    public void parse_validEmailArg_returnsDeleteCommand() {","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"bensohh"},"content":"        DeleteCommand.DeletePersonDescriptor deletePersonDescriptor \u003d new DeleteCommand.DeletePersonDescriptor();","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"bensohh"},"content":"        deletePersonDescriptor.setEmail(new Email(\"test@test.com\"));","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"bensohh"},"content":"        assertParseSuccess(parser, \" e/test@test.com\", new DeleteCommand(deletePersonDescriptor));","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"bensohh"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"bensohh"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"bensohh"},"content":"        assertParseFailure(parser, \"\",","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"bensohh"},"content":"                String.format(MESSAGE_EMPTY_EMAIL_AND_PHONE, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-21"},{"lineNumber":45,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"bensohh"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"bensohh"},"content":"    public void parse_emptyPhoneArg_throwsParseException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"bensohh"},"content":"        assertParseFailure(parser, \" p/\",","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"bensohh"},"content":"                String.format(Phone.MESSAGE_CONSTRAINTS, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-21"},{"lineNumber":51,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"bensohh"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"bensohh"},"content":"    public void parse_emptyEmailArg_throwsParseException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"bensohh"},"content":"        assertParseFailure(parser, \" e/\",","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"bensohh"},"content":"                String.format(Email.MESSAGE_CONSTRAINTS, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-21"},{"lineNumber":57,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":58,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"bensohh"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":60,"author":{"gitId":"bensohh"},"content":"    public void parse_invalidArg_throwsParseException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":61,"author":{"gitId":"bensohh"},"content":"        assertParseFailure(parser, \"testing123\",","lastModifiedDate":"2022-10-09"},{"lineNumber":62,"author":{"gitId":"bensohh"},"content":"                String.format(MESSAGE_EMPTY_EMAIL_AND_PHONE, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-21"},{"lineNumber":63,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":64,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":65,"author":{"gitId":"bensohh"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":66,"author":{"gitId":"bensohh"},"content":"    public void parse_bothArgs_throwsParseException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":67,"author":{"gitId":"bensohh"},"content":"        assertParseFailure(parser, \" p/12345678 e/test@test.com\",","lastModifiedDate":"2022-10-09"},{"lineNumber":68,"author":{"gitId":"bensohh"},"content":"                String.format(MESSAGE_BOTH_EMAIL_AND_PHONE, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-21"},{"lineNumber":69,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":70,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":71,"author":{"gitId":"bensohh"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":72,"author":{"gitId":"bensohh"},"content":"    public void parse_multiplePhoneArgs_throwsParseException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":73,"author":{"gitId":"bensohh"},"content":"        assertParseFailure(parser, \" p/12345678 p/87654321\",","lastModifiedDate":"2022-10-09"},{"lineNumber":74,"author":{"gitId":"bensohh"},"content":"                String.format(MESSAGE_NO_UNIQUE_PREFIX_IDENTIFIER, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-21"},{"lineNumber":75,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":78,"author":{"gitId":"bensohh"},"content":"    public void parse_multipleEmailArgs_throwsParseException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":79,"author":{"gitId":"bensohh"},"content":"        assertParseFailure(parser, \" e/test@test.com e/test123@test.com\",","lastModifiedDate":"2022-10-09"},{"lineNumber":80,"author":{"gitId":"bensohh"},"content":"                String.format(MESSAGE_NO_UNIQUE_PREFIX_IDENTIFIER, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-21"},{"lineNumber":81,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":82,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":83,"author":{"gitId":"bensohh"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":84,"author":{"gitId":"bensohh"},"content":"    public void parse_preambleAndPhone_throwsParseException() {","lastModifiedDate":"2022-10-21"},{"lineNumber":85,"author":{"gitId":"bensohh"},"content":"        assertParseFailure(parser, \" test p/12345678\",","lastModifiedDate":"2022-10-21"},{"lineNumber":86,"author":{"gitId":"bensohh"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-21"},{"lineNumber":87,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":88,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":89,"author":{"gitId":"bensohh"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":90,"author":{"gitId":"bensohh"},"content":"    public void parse_preambleAndEmail_throwsParseException() {","lastModifiedDate":"2022-10-21"},{"lineNumber":91,"author":{"gitId":"bensohh"},"content":"        assertParseFailure(parser, \" test e/test@test.com\",","lastModifiedDate":"2022-10-21"},{"lineNumber":92,"author":{"gitId":"bensohh"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"TanWenCong":10,"bensohh":64,"-":20}},{"path":"src/test/java/seedu/boba/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.logic.parser;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.INVALID_REWARD_DESC;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.REWARD_DESC_AMY;","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.TAG_DESC_GOLD;","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.TAG_DESC_MEMBER;","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.VALID_REWARD_AMY;","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.VALID_TAG_GOLD;","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.VALID_TAG_MEMBER;","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.testutil.TypicalEmails.EMAIL_FIRST_PERSON;","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.testutil.TypicalEmails.EMAIL_SECOND_PERSON;","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.testutil.TypicalEmails.EMAIL_THIRD_PERSON;","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.testutil.TypicalPhones.PHONE_FIRST_PERSON;","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.testutil.TypicalPhones.PHONE_SECOND_PERSON;","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.testutil.TypicalPhones.PHONE_THIRD_PERSON;","lastModifiedDate":"2022-10-27"},{"lineNumber":34,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":35,"author":{"gitId":"Samsation"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-14"},{"lineNumber":36,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":37,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.logic.commands.EditCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":38,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Email;","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Name;","lastModifiedDate":"2022-10-27"},{"lineNumber":41,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Phone;","lastModifiedDate":"2022-10-27"},{"lineNumber":42,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Reward;","lastModifiedDate":"2022-10-27"},{"lineNumber":43,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.tag.Tag;","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.testutil.EditCustomerDescriptorBuilder;","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":46,"author":{"gitId":"Samsation"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2022-10-14"},{"lineNumber":47,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":48,"author":{"gitId":"Samsation"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2022-10-14"},{"lineNumber":49,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":50,"author":{"gitId":"Samsation"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2022-10-14"},{"lineNumber":51,"author":{"gitId":"Samsation"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-14"},{"lineNumber":52,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":53,"author":{"gitId":"Samsation"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2022-10-14"},{"lineNumber":54,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":55,"author":{"gitId":"Samsation"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":56,"author":{"gitId":"Samsation"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2022-10-14"},{"lineNumber":57,"author":{"gitId":"Samsation"},"content":"        // no index specified","lastModifiedDate":"2022-10-14"},{"lineNumber":58,"author":{"gitId":"Samsation"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-14"},{"lineNumber":59,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":60,"author":{"gitId":"Samsation"},"content":"        // no field specified","lastModifiedDate":"2022-10-14"},{"lineNumber":61,"author":{"gitId":"Samsation"},"content":"        assertParseFailure(parser, \" \" + PREFIX_PHONE + PHONE_FIRST_PERSON, EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-10-14"},{"lineNumber":62,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":63,"author":{"gitId":"Samsation"},"content":"        // no index and no field specified","lastModifiedDate":"2022-10-14"},{"lineNumber":64,"author":{"gitId":"Samsation"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-14"},{"lineNumber":65,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":66,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":67,"author":{"gitId":"Samsation"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":68,"author":{"gitId":"Samsation"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2022-10-14"},{"lineNumber":69,"author":{"gitId":"Samsation"},"content":"        // negative index","lastModifiedDate":"2022-10-14"},{"lineNumber":70,"author":{"gitId":"Samsation"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-14"},{"lineNumber":71,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":72,"author":{"gitId":"Samsation"},"content":"        // zero index","lastModifiedDate":"2022-10-14"},{"lineNumber":73,"author":{"gitId":"Samsation"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-14"},{"lineNumber":74,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":75,"author":{"gitId":"Samsation"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2022-10-14"},{"lineNumber":76,"author":{"gitId":"Samsation"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-14"},{"lineNumber":77,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":78,"author":{"gitId":"Samsation"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2022-10-14"},{"lineNumber":79,"author":{"gitId":"Samsation"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-14"},{"lineNumber":80,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":81,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":82,"author":{"gitId":"Samsation"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":83,"author":{"gitId":"Samsation"},"content":"    public void parse_phoneInvalidValue_failure() {","lastModifiedDate":"2022-10-14"},{"lineNumber":84,"author":{"gitId":"Samsation"},"content":"        assertParseFailure(parser, \" \" + PREFIX_PHONE + PHONE_FIRST_PERSON + INVALID_NAME_DESC,","lastModifiedDate":"2022-10-14"},{"lineNumber":85,"author":{"gitId":"Samsation"},"content":"                Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2022-10-14"},{"lineNumber":86,"author":{"gitId":"Samsation"},"content":"        assertParseFailure(parser, \" \" + PREFIX_PHONE + PHONE_FIRST_PERSON + INVALID_PHONE_DESC,","lastModifiedDate":"2022-10-14"},{"lineNumber":87,"author":{"gitId":"Samsation"},"content":"                Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2022-10-14"},{"lineNumber":88,"author":{"gitId":"Samsation"},"content":"        assertParseFailure(parser, \" \" + PREFIX_PHONE + PHONE_FIRST_PERSON + INVALID_EMAIL_DESC,","lastModifiedDate":"2022-10-14"},{"lineNumber":89,"author":{"gitId":"Samsation"},"content":"                Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2022-10-14"},{"lineNumber":90,"author":{"gitId":"Samsation"},"content":"        assertParseFailure(parser, \" \" + PREFIX_PHONE + PHONE_FIRST_PERSON + INVALID_REWARD_DESC,","lastModifiedDate":"2022-10-14"},{"lineNumber":91,"author":{"gitId":"Samsation"},"content":"                Reward.MESSAGE_MAX_INTEGER); // invalid reward","lastModifiedDate":"2022-10-30"},{"lineNumber":92,"author":{"gitId":"Samsation"},"content":"        assertParseFailure(parser, \" \" + PREFIX_PHONE + PHONE_FIRST_PERSON + INVALID_TAG_DESC,","lastModifiedDate":"2022-10-14"},{"lineNumber":93,"author":{"gitId":"Samsation"},"content":"                Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2022-10-14"},{"lineNumber":94,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":95,"author":{"gitId":"Samsation"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2022-10-14"},{"lineNumber":96,"author":{"gitId":"Samsation"},"content":"        assertParseFailure(parser, \" \" + PREFIX_PHONE + PHONE_FIRST_PERSON + INVALID_PHONE_DESC + EMAIL_DESC_AMY,","lastModifiedDate":"2022-10-14"},{"lineNumber":97,"author":{"gitId":"Samsation"},"content":"                Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-14"},{"lineNumber":98,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":99,"author":{"gitId":"Samsation"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Customer} being edited,","lastModifiedDate":"2022-10-26"},{"lineNumber":100,"author":{"gitId":"Samsation"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2022-10-14"},{"lineNumber":101,"author":{"gitId":"Samsation"},"content":"        assertParseFailure(parser, \" \" + PREFIX_PHONE + PHONE_FIRST_PERSON","lastModifiedDate":"2022-10-14"},{"lineNumber":102,"author":{"gitId":"Samsation"},"content":"                + TAG_DESC_MEMBER + TAG_DESC_GOLD + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-14"},{"lineNumber":103,"author":{"gitId":"Samsation"},"content":"        assertParseFailure(parser, \" \" + PREFIX_PHONE + PHONE_FIRST_PERSON","lastModifiedDate":"2022-10-14"},{"lineNumber":104,"author":{"gitId":"Samsation"},"content":"                + TAG_DESC_MEMBER + TAG_EMPTY + TAG_DESC_GOLD, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-14"},{"lineNumber":105,"author":{"gitId":"Samsation"},"content":"        assertParseFailure(parser, \" \" + PREFIX_PHONE + PHONE_FIRST_PERSON","lastModifiedDate":"2022-10-14"},{"lineNumber":106,"author":{"gitId":"Samsation"},"content":"                + TAG_EMPTY + TAG_DESC_MEMBER + TAG_DESC_GOLD, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-14"},{"lineNumber":107,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":108,"author":{"gitId":"Samsation"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2022-10-14"},{"lineNumber":109,"author":{"gitId":"Samsation"},"content":"        assertParseFailure(parser, \" \" + PREFIX_PHONE + PHONE_FIRST_PERSON","lastModifiedDate":"2022-10-14"},{"lineNumber":110,"author":{"gitId":"Samsation"},"content":"                        + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_REWARD_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2022-10-14"},{"lineNumber":111,"author":{"gitId":"Samsation"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-14"},{"lineNumber":112,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":113,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":114,"author":{"gitId":"Samsation"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":115,"author":{"gitId":"Samsation"},"content":"    public void parse_emailInvalidValue_failure() {","lastModifiedDate":"2022-10-14"},{"lineNumber":116,"author":{"gitId":"Samsation"},"content":"        assertParseFailure(parser, \" \" + PREFIX_EMAIL + EMAIL_FIRST_PERSON + INVALID_NAME_DESC,","lastModifiedDate":"2022-10-14"},{"lineNumber":117,"author":{"gitId":"Samsation"},"content":"                Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2022-10-14"},{"lineNumber":118,"author":{"gitId":"Samsation"},"content":"        assertParseFailure(parser, \" \" + PREFIX_EMAIL + EMAIL_FIRST_PERSON + INVALID_PHONE_DESC,","lastModifiedDate":"2022-10-14"},{"lineNumber":119,"author":{"gitId":"Samsation"},"content":"                Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2022-10-14"},{"lineNumber":120,"author":{"gitId":"Samsation"},"content":"        assertParseFailure(parser, \" \" + PREFIX_EMAIL + EMAIL_FIRST_PERSON + INVALID_EMAIL_DESC,","lastModifiedDate":"2022-10-14"},{"lineNumber":121,"author":{"gitId":"Samsation"},"content":"                Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2022-10-14"},{"lineNumber":122,"author":{"gitId":"Samsation"},"content":"        assertParseFailure(parser, \" \" + PREFIX_EMAIL + EMAIL_FIRST_PERSON + INVALID_REWARD_DESC,","lastModifiedDate":"2022-10-14"},{"lineNumber":123,"author":{"gitId":"Samsation"},"content":"                Reward.MESSAGE_MAX_INTEGER); // invalid reward","lastModifiedDate":"2022-10-30"},{"lineNumber":124,"author":{"gitId":"Samsation"},"content":"        assertParseFailure(parser, \" \" + PREFIX_EMAIL + EMAIL_FIRST_PERSON + INVALID_TAG_DESC,","lastModifiedDate":"2022-10-14"},{"lineNumber":125,"author":{"gitId":"Samsation"},"content":"                Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2022-10-14"},{"lineNumber":126,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":127,"author":{"gitId":"Samsation"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2022-10-14"},{"lineNumber":128,"author":{"gitId":"Samsation"},"content":"        assertParseFailure(parser, \" \" + PREFIX_EMAIL + EMAIL_FIRST_PERSON + INVALID_PHONE_DESC + EMAIL_DESC_AMY,","lastModifiedDate":"2022-10-14"},{"lineNumber":129,"author":{"gitId":"Samsation"},"content":"                Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-14"},{"lineNumber":130,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":131,"author":{"gitId":"Samsation"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Customer} being edited,","lastModifiedDate":"2022-10-26"},{"lineNumber":132,"author":{"gitId":"Samsation"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2022-10-14"},{"lineNumber":133,"author":{"gitId":"Samsation"},"content":"        assertParseFailure(parser, \" \" + PREFIX_EMAIL + EMAIL_FIRST_PERSON","lastModifiedDate":"2022-10-14"},{"lineNumber":134,"author":{"gitId":"Samsation"},"content":"                + TAG_DESC_MEMBER + TAG_DESC_GOLD + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-14"},{"lineNumber":135,"author":{"gitId":"Samsation"},"content":"        assertParseFailure(parser, \" \" + PREFIX_EMAIL + EMAIL_FIRST_PERSON","lastModifiedDate":"2022-10-14"},{"lineNumber":136,"author":{"gitId":"Samsation"},"content":"                + TAG_DESC_MEMBER + TAG_EMPTY + TAG_DESC_GOLD, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-14"},{"lineNumber":137,"author":{"gitId":"Samsation"},"content":"        assertParseFailure(parser, \" \" + PREFIX_EMAIL + EMAIL_FIRST_PERSON","lastModifiedDate":"2022-10-14"},{"lineNumber":138,"author":{"gitId":"Samsation"},"content":"                + TAG_EMPTY + TAG_DESC_MEMBER + TAG_DESC_GOLD, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-14"},{"lineNumber":139,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":140,"author":{"gitId":"Samsation"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2022-10-14"},{"lineNumber":141,"author":{"gitId":"Samsation"},"content":"        assertParseFailure(parser, \" \" + PREFIX_EMAIL + EMAIL_FIRST_PERSON","lastModifiedDate":"2022-10-14"},{"lineNumber":142,"author":{"gitId":"Samsation"},"content":"                        + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_REWARD_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2022-10-14"},{"lineNumber":143,"author":{"gitId":"Samsation"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-14"},{"lineNumber":144,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":145,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":146,"author":{"gitId":"Samsation"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":147,"author":{"gitId":"Samsation"},"content":"    public void parse_phoneAllFieldsSpecified_success() {","lastModifiedDate":"2022-10-14"},{"lineNumber":148,"author":{"gitId":"Samsation"},"content":"        Phone targetPhone \u003d PHONE_SECOND_PERSON;","lastModifiedDate":"2022-10-14"},{"lineNumber":149,"author":{"gitId":"Samsation"},"content":"        String userInput \u003d \" \" + PREFIX_PHONE + targetPhone + PHONE_DESC_BOB + TAG_DESC_GOLD","lastModifiedDate":"2022-10-14"},{"lineNumber":150,"author":{"gitId":"Samsation"},"content":"                + EMAIL_DESC_AMY + REWARD_DESC_AMY + NAME_DESC_AMY + TAG_DESC_MEMBER;","lastModifiedDate":"2022-10-14"},{"lineNumber":151,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":152,"author":{"gitId":"Samsation"},"content":"        EditPersonDescriptor descriptor \u003d new EditCustomerDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2022-10-26"},{"lineNumber":153,"author":{"gitId":"Samsation"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withReward(VALID_REWARD_AMY)","lastModifiedDate":"2022-10-14"},{"lineNumber":154,"author":{"gitId":"Samsation"},"content":"                .withTags(VALID_TAG_GOLD, VALID_TAG_MEMBER).build();","lastModifiedDate":"2022-10-14"},{"lineNumber":155,"author":{"gitId":"Samsation"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetPhone, descriptor);","lastModifiedDate":"2022-10-14"},{"lineNumber":156,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":157,"author":{"gitId":"Samsation"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-14"},{"lineNumber":158,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":159,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":160,"author":{"gitId":"Samsation"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":161,"author":{"gitId":"Samsation"},"content":"    public void parse_emailAllFieldsSpecified_success() {","lastModifiedDate":"2022-10-14"},{"lineNumber":162,"author":{"gitId":"Samsation"},"content":"        Email targetEmail \u003d EMAIL_SECOND_PERSON;","lastModifiedDate":"2022-10-14"},{"lineNumber":163,"author":{"gitId":"Samsation"},"content":"        String userInput \u003d \" \" + PREFIX_EMAIL + targetEmail + PHONE_DESC_BOB + TAG_DESC_GOLD","lastModifiedDate":"2022-10-14"},{"lineNumber":164,"author":{"gitId":"Samsation"},"content":"                + EMAIL_DESC_AMY + REWARD_DESC_AMY + NAME_DESC_AMY + TAG_DESC_MEMBER;","lastModifiedDate":"2022-10-14"},{"lineNumber":165,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":166,"author":{"gitId":"Samsation"},"content":"        EditPersonDescriptor descriptor \u003d new EditCustomerDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2022-10-26"},{"lineNumber":167,"author":{"gitId":"Samsation"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withReward(VALID_REWARD_AMY)","lastModifiedDate":"2022-10-14"},{"lineNumber":168,"author":{"gitId":"Samsation"},"content":"                .withTags(VALID_TAG_GOLD, VALID_TAG_MEMBER).build();","lastModifiedDate":"2022-10-14"},{"lineNumber":169,"author":{"gitId":"Samsation"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetEmail, descriptor);","lastModifiedDate":"2022-10-14"},{"lineNumber":170,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":171,"author":{"gitId":"Samsation"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-14"},{"lineNumber":172,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":173,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":174,"author":{"gitId":"Samsation"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":175,"author":{"gitId":"Samsation"},"content":"    public void parse_phoneSomeFieldsSpecified_success() {","lastModifiedDate":"2022-10-14"},{"lineNumber":176,"author":{"gitId":"Samsation"},"content":"        Phone targetPhone \u003d PHONE_FIRST_PERSON;","lastModifiedDate":"2022-10-14"},{"lineNumber":177,"author":{"gitId":"Samsation"},"content":"        String userInput \u003d \" \" + PREFIX_PHONE + targetPhone + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2022-10-14"},{"lineNumber":178,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":179,"author":{"gitId":"Samsation"},"content":"        EditPersonDescriptor descriptor \u003d new EditCustomerDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-10-26"},{"lineNumber":180,"author":{"gitId":"Samsation"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2022-10-14"},{"lineNumber":181,"author":{"gitId":"Samsation"},"content":"        EditCommand expectedCommand \u003d new EditCommand(PHONE_FIRST_PERSON, descriptor);","lastModifiedDate":"2022-10-14"},{"lineNumber":182,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":183,"author":{"gitId":"Samsation"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-14"},{"lineNumber":184,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":185,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":186,"author":{"gitId":"Samsation"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":187,"author":{"gitId":"Samsation"},"content":"    public void parse_emailSomeFieldsSpecified_success() {","lastModifiedDate":"2022-10-14"},{"lineNumber":188,"author":{"gitId":"Samsation"},"content":"        Email targetEmail \u003d EMAIL_FIRST_PERSON;","lastModifiedDate":"2022-10-14"},{"lineNumber":189,"author":{"gitId":"Samsation"},"content":"        String userInput \u003d \" \" + PREFIX_EMAIL + targetEmail + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2022-10-14"},{"lineNumber":190,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":191,"author":{"gitId":"Samsation"},"content":"        EditPersonDescriptor descriptor \u003d new EditCustomerDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-10-26"},{"lineNumber":192,"author":{"gitId":"Samsation"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2022-10-14"},{"lineNumber":193,"author":{"gitId":"Samsation"},"content":"        EditCommand expectedCommand \u003d new EditCommand(EMAIL_FIRST_PERSON, descriptor);","lastModifiedDate":"2022-10-14"},{"lineNumber":194,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":195,"author":{"gitId":"Samsation"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-14"},{"lineNumber":196,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":197,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":198,"author":{"gitId":"Samsation"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":199,"author":{"gitId":"Samsation"},"content":"    public void parse_phoneOneFieldSpecified_success() {","lastModifiedDate":"2022-10-14"},{"lineNumber":200,"author":{"gitId":"Samsation"},"content":"        // name","lastModifiedDate":"2022-10-14"},{"lineNumber":201,"author":{"gitId":"Samsation"},"content":"        Phone targetPhone \u003d PHONE_THIRD_PERSON;","lastModifiedDate":"2022-10-14"},{"lineNumber":202,"author":{"gitId":"Samsation"},"content":"        String userInput \u003d \" \" + PREFIX_PHONE + targetPhone + NAME_DESC_AMY;","lastModifiedDate":"2022-10-14"},{"lineNumber":203,"author":{"gitId":"Samsation"},"content":"        EditPersonDescriptor descriptor \u003d new EditCustomerDescriptorBuilder()","lastModifiedDate":"2022-10-26"},{"lineNumber":204,"author":{"gitId":"Samsation"},"content":"                .withPhone(targetPhone.value).withName(VALID_NAME_AMY).build();","lastModifiedDate":"2022-10-14"},{"lineNumber":205,"author":{"gitId":"Samsation"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetPhone, descriptor);","lastModifiedDate":"2022-10-14"},{"lineNumber":206,"author":{"gitId":"Samsation"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-14"},{"lineNumber":207,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":208,"author":{"gitId":"Samsation"},"content":"        // phone","lastModifiedDate":"2022-10-14"},{"lineNumber":209,"author":{"gitId":"Samsation"},"content":"        userInput \u003d \" \" + PREFIX_PHONE + targetPhone + PHONE_DESC_AMY;","lastModifiedDate":"2022-10-14"},{"lineNumber":210,"author":{"gitId":"Samsation"},"content":"        descriptor \u003d new EditCustomerDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2022-10-26"},{"lineNumber":211,"author":{"gitId":"Samsation"},"content":"        expectedCommand \u003d new EditCommand(targetPhone, descriptor);","lastModifiedDate":"2022-10-14"},{"lineNumber":212,"author":{"gitId":"Samsation"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-14"},{"lineNumber":213,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":214,"author":{"gitId":"Samsation"},"content":"        // email","lastModifiedDate":"2022-10-14"},{"lineNumber":215,"author":{"gitId":"Samsation"},"content":"        userInput \u003d \" \" + PREFIX_PHONE + targetPhone + EMAIL_DESC_AMY;","lastModifiedDate":"2022-10-14"},{"lineNumber":216,"author":{"gitId":"Samsation"},"content":"        descriptor \u003d new EditCustomerDescriptorBuilder()","lastModifiedDate":"2022-10-26"},{"lineNumber":217,"author":{"gitId":"Samsation"},"content":"                .withPhone(targetPhone.value).withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2022-10-14"},{"lineNumber":218,"author":{"gitId":"Samsation"},"content":"        expectedCommand \u003d new EditCommand(targetPhone, descriptor);","lastModifiedDate":"2022-10-14"},{"lineNumber":219,"author":{"gitId":"Samsation"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-14"},{"lineNumber":220,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":221,"author":{"gitId":"Samsation"},"content":"        // reward","lastModifiedDate":"2022-10-14"},{"lineNumber":222,"author":{"gitId":"Samsation"},"content":"        userInput \u003d \" \" + PREFIX_PHONE + targetPhone + REWARD_DESC_AMY;","lastModifiedDate":"2022-10-14"},{"lineNumber":223,"author":{"gitId":"Samsation"},"content":"        descriptor \u003d new EditCustomerDescriptorBuilder()","lastModifiedDate":"2022-10-26"},{"lineNumber":224,"author":{"gitId":"Samsation"},"content":"                .withPhone(targetPhone.value).withReward(VALID_REWARD_AMY).build();","lastModifiedDate":"2022-10-14"},{"lineNumber":225,"author":{"gitId":"Samsation"},"content":"        expectedCommand \u003d new EditCommand(targetPhone, descriptor);","lastModifiedDate":"2022-10-14"},{"lineNumber":226,"author":{"gitId":"Samsation"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-14"},{"lineNumber":227,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":228,"author":{"gitId":"Samsation"},"content":"        // tags","lastModifiedDate":"2022-10-14"},{"lineNumber":229,"author":{"gitId":"Samsation"},"content":"        userInput \u003d \" \" + PREFIX_PHONE + targetPhone + TAG_DESC_MEMBER;","lastModifiedDate":"2022-10-14"},{"lineNumber":230,"author":{"gitId":"Samsation"},"content":"        descriptor \u003d new EditCustomerDescriptorBuilder()","lastModifiedDate":"2022-10-26"},{"lineNumber":231,"author":{"gitId":"Samsation"},"content":"                .withPhone(targetPhone.value).withTags(VALID_TAG_MEMBER).build();","lastModifiedDate":"2022-10-14"},{"lineNumber":232,"author":{"gitId":"Samsation"},"content":"        expectedCommand \u003d new EditCommand(targetPhone, descriptor);","lastModifiedDate":"2022-10-14"},{"lineNumber":233,"author":{"gitId":"Samsation"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-14"},{"lineNumber":234,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":235,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":236,"author":{"gitId":"Samsation"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":237,"author":{"gitId":"Samsation"},"content":"    public void parse_emailOneFieldSpecified_success() {","lastModifiedDate":"2022-10-14"},{"lineNumber":238,"author":{"gitId":"Samsation"},"content":"        // name","lastModifiedDate":"2022-10-14"},{"lineNumber":239,"author":{"gitId":"Samsation"},"content":"        Email targetEmail \u003d EMAIL_THIRD_PERSON;","lastModifiedDate":"2022-10-14"},{"lineNumber":240,"author":{"gitId":"Samsation"},"content":"        String userInput \u003d \" \" + PREFIX_EMAIL + targetEmail + NAME_DESC_AMY;","lastModifiedDate":"2022-10-14"},{"lineNumber":241,"author":{"gitId":"Samsation"},"content":"        EditPersonDescriptor descriptor \u003d new EditCustomerDescriptorBuilder()","lastModifiedDate":"2022-10-26"},{"lineNumber":242,"author":{"gitId":"Samsation"},"content":"                .withEmail(targetEmail.value).withName(VALID_NAME_AMY).build();","lastModifiedDate":"2022-10-14"},{"lineNumber":243,"author":{"gitId":"Samsation"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetEmail, descriptor);","lastModifiedDate":"2022-10-14"},{"lineNumber":244,"author":{"gitId":"Samsation"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-14"},{"lineNumber":245,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":246,"author":{"gitId":"Samsation"},"content":"        // phone","lastModifiedDate":"2022-10-14"},{"lineNumber":247,"author":{"gitId":"Samsation"},"content":"        userInput \u003d \" \" + PREFIX_EMAIL + targetEmail + PHONE_DESC_AMY;","lastModifiedDate":"2022-10-14"},{"lineNumber":248,"author":{"gitId":"Samsation"},"content":"        descriptor \u003d new EditCustomerDescriptorBuilder()","lastModifiedDate":"2022-10-26"},{"lineNumber":249,"author":{"gitId":"Samsation"},"content":"                .withEmail(targetEmail.value).withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2022-10-14"},{"lineNumber":250,"author":{"gitId":"Samsation"},"content":"        expectedCommand \u003d new EditCommand(targetEmail, descriptor);","lastModifiedDate":"2022-10-14"},{"lineNumber":251,"author":{"gitId":"Samsation"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-14"},{"lineNumber":252,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":253,"author":{"gitId":"Samsation"},"content":"        // email","lastModifiedDate":"2022-10-14"},{"lineNumber":254,"author":{"gitId":"Samsation"},"content":"        userInput \u003d \" \" + PREFIX_EMAIL + targetEmail + EMAIL_DESC_AMY;","lastModifiedDate":"2022-10-14"},{"lineNumber":255,"author":{"gitId":"Samsation"},"content":"        descriptor \u003d new EditCustomerDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2022-10-26"},{"lineNumber":256,"author":{"gitId":"Samsation"},"content":"        expectedCommand \u003d new EditCommand(targetEmail, descriptor);","lastModifiedDate":"2022-10-14"},{"lineNumber":257,"author":{"gitId":"Samsation"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-14"},{"lineNumber":258,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":259,"author":{"gitId":"Samsation"},"content":"        // reward","lastModifiedDate":"2022-10-14"},{"lineNumber":260,"author":{"gitId":"Samsation"},"content":"        userInput \u003d \" \" + PREFIX_EMAIL + targetEmail + REWARD_DESC_AMY;","lastModifiedDate":"2022-10-14"},{"lineNumber":261,"author":{"gitId":"Samsation"},"content":"        descriptor \u003d new EditCustomerDescriptorBuilder()","lastModifiedDate":"2022-10-26"},{"lineNumber":262,"author":{"gitId":"Samsation"},"content":"                .withEmail(targetEmail.value).withReward(VALID_REWARD_AMY).build();","lastModifiedDate":"2022-10-14"},{"lineNumber":263,"author":{"gitId":"Samsation"},"content":"        expectedCommand \u003d new EditCommand(targetEmail, descriptor);","lastModifiedDate":"2022-10-14"},{"lineNumber":264,"author":{"gitId":"Samsation"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-14"},{"lineNumber":265,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":266,"author":{"gitId":"Samsation"},"content":"        // tags","lastModifiedDate":"2022-10-14"},{"lineNumber":267,"author":{"gitId":"Samsation"},"content":"        userInput \u003d \" \" + PREFIX_EMAIL + targetEmail + TAG_DESC_MEMBER;","lastModifiedDate":"2022-10-14"},{"lineNumber":268,"author":{"gitId":"Samsation"},"content":"        descriptor \u003d new EditCustomerDescriptorBuilder()","lastModifiedDate":"2022-10-26"},{"lineNumber":269,"author":{"gitId":"Samsation"},"content":"                .withEmail(targetEmail.value).withTags(VALID_TAG_MEMBER).build();","lastModifiedDate":"2022-10-14"},{"lineNumber":270,"author":{"gitId":"Samsation"},"content":"        expectedCommand \u003d new EditCommand(targetEmail, descriptor);","lastModifiedDate":"2022-10-14"},{"lineNumber":271,"author":{"gitId":"Samsation"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-14"},{"lineNumber":272,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":273,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":274,"author":{"gitId":"Samsation"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":275,"author":{"gitId":"Samsation"},"content":"    public void parse_phoneAllFieldSpecified_success() {","lastModifiedDate":"2022-10-14"},{"lineNumber":276,"author":{"gitId":"Samsation"},"content":"        Phone targetPhone \u003d PHONE_FIRST_PERSON;","lastModifiedDate":"2022-10-14"},{"lineNumber":277,"author":{"gitId":"Samsation"},"content":"        String userInput \u003d \" \" + PREFIX_PHONE + targetPhone + PHONE_DESC_AMY + REWARD_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2022-10-14"},{"lineNumber":278,"author":{"gitId":"Samsation"},"content":"                + TAG_DESC_MEMBER + TAG_DESC_GOLD;","lastModifiedDate":"2022-10-14"},{"lineNumber":279,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":280,"author":{"gitId":"Samsation"},"content":"        EditPersonDescriptor descriptor \u003d new EditCustomerDescriptorBuilder()","lastModifiedDate":"2022-10-26"},{"lineNumber":281,"author":{"gitId":"Samsation"},"content":"                .withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2022-10-14"},{"lineNumber":282,"author":{"gitId":"Samsation"},"content":"                .withReward(VALID_REWARD_AMY)","lastModifiedDate":"2022-10-14"},{"lineNumber":283,"author":{"gitId":"Samsation"},"content":"                .withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2022-10-14"},{"lineNumber":284,"author":{"gitId":"Samsation"},"content":"                .withTags(VALID_TAG_MEMBER, VALID_TAG_GOLD)","lastModifiedDate":"2022-10-14"},{"lineNumber":285,"author":{"gitId":"Samsation"},"content":"                .build();","lastModifiedDate":"2022-10-14"},{"lineNumber":286,"author":{"gitId":"Samsation"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetPhone, descriptor);","lastModifiedDate":"2022-10-14"},{"lineNumber":287,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":288,"author":{"gitId":"Samsation"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-14"},{"lineNumber":289,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":290,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":291,"author":{"gitId":"Samsation"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":292,"author":{"gitId":"Samsation"},"content":"    public void parse_emailAllFieldSpecified_success() {","lastModifiedDate":"2022-10-14"},{"lineNumber":293,"author":{"gitId":"Samsation"},"content":"        Email targetEmail \u003d EMAIL_FIRST_PERSON;","lastModifiedDate":"2022-10-14"},{"lineNumber":294,"author":{"gitId":"Samsation"},"content":"        String userInput \u003d \" \" + PREFIX_EMAIL + targetEmail + PHONE_DESC_AMY + REWARD_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2022-10-14"},{"lineNumber":295,"author":{"gitId":"Samsation"},"content":"                + TAG_DESC_MEMBER + TAG_DESC_GOLD;","lastModifiedDate":"2022-10-14"},{"lineNumber":296,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":297,"author":{"gitId":"Samsation"},"content":"        EditPersonDescriptor descriptor \u003d new EditCustomerDescriptorBuilder()","lastModifiedDate":"2022-10-26"},{"lineNumber":298,"author":{"gitId":"Samsation"},"content":"                .withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2022-10-14"},{"lineNumber":299,"author":{"gitId":"Samsation"},"content":"                .withReward(VALID_REWARD_AMY)","lastModifiedDate":"2022-10-14"},{"lineNumber":300,"author":{"gitId":"Samsation"},"content":"                .withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2022-10-14"},{"lineNumber":301,"author":{"gitId":"Samsation"},"content":"                .withTags(VALID_TAG_MEMBER, VALID_TAG_GOLD)","lastModifiedDate":"2022-10-14"},{"lineNumber":302,"author":{"gitId":"Samsation"},"content":"                .build();","lastModifiedDate":"2022-10-14"},{"lineNumber":303,"author":{"gitId":"Samsation"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetEmail, descriptor);","lastModifiedDate":"2022-10-14"},{"lineNumber":304,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":305,"author":{"gitId":"Samsation"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-14"},{"lineNumber":306,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":307,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":308,"author":{"gitId":"Samsation"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":309,"author":{"gitId":"Samsation"},"content":"    public void parse_phoneResetTags_success() {","lastModifiedDate":"2022-10-14"},{"lineNumber":310,"author":{"gitId":"Samsation"},"content":"        Phone targetPhone \u003d PHONE_THIRD_PERSON;","lastModifiedDate":"2022-10-14"},{"lineNumber":311,"author":{"gitId":"Samsation"},"content":"        String userInput \u003d \" \" + PREFIX_PHONE + targetPhone + TAG_EMPTY;","lastModifiedDate":"2022-10-14"},{"lineNumber":312,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":313,"author":{"gitId":"Samsation"},"content":"        EditPersonDescriptor descriptor \u003d new EditCustomerDescriptorBuilder()","lastModifiedDate":"2022-10-26"},{"lineNumber":314,"author":{"gitId":"Samsation"},"content":"                .withPhone(targetPhone.value).withTags().build();","lastModifiedDate":"2022-10-14"},{"lineNumber":315,"author":{"gitId":"Samsation"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetPhone, descriptor);","lastModifiedDate":"2022-10-14"},{"lineNumber":316,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":317,"author":{"gitId":"Samsation"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-14"},{"lineNumber":318,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":319,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":320,"author":{"gitId":"Samsation"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":321,"author":{"gitId":"Samsation"},"content":"    public void parse_emailResetTags_success() {","lastModifiedDate":"2022-10-14"},{"lineNumber":322,"author":{"gitId":"Samsation"},"content":"        Email targetEmail \u003d EMAIL_THIRD_PERSON;","lastModifiedDate":"2022-10-14"},{"lineNumber":323,"author":{"gitId":"Samsation"},"content":"        String userInput \u003d \" \" + PREFIX_EMAIL + targetEmail + TAG_EMPTY;","lastModifiedDate":"2022-10-14"},{"lineNumber":324,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":325,"author":{"gitId":"Samsation"},"content":"        EditPersonDescriptor descriptor \u003d new EditCustomerDescriptorBuilder()","lastModifiedDate":"2022-10-26"},{"lineNumber":326,"author":{"gitId":"Samsation"},"content":"                .withEmail(targetEmail.value).withTags().build();","lastModifiedDate":"2022-10-14"},{"lineNumber":327,"author":{"gitId":"Samsation"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetEmail, descriptor);","lastModifiedDate":"2022-10-14"},{"lineNumber":328,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":329,"author":{"gitId":"Samsation"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-14"},{"lineNumber":330,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":331,"author":{"gitId":"Samsation"},"content":"}","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"Samsation":291,"TanWenCong":40}},{"path":"src/test/java/seedu/boba/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.logic.parser;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.logic.commands.FindCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.MultiSearchPredicate;","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"albertZhangTJ"},"content":"                new FindCommand(new MultiSearchPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"TanWenCong":6,"albertZhangTJ":1,"-":27}},{"path":"src/test/java/seedu/boba/logic/parser/IncreaseCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.logic.parser;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":3,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.testutil.TypicalPhones.PHONE_FIRST_PERSON;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":12,"author":{"gitId":"Samsation"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-24"},{"lineNumber":13,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":14,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.logic.commands.IncreaseCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"Samsation"},"content":"import seedu.boba.model.customer.Reward;","lastModifiedDate":"2022-10-30"},{"lineNumber":16,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":17,"author":{"gitId":"Samsation"},"content":"public class IncreaseCommandParserTest {","lastModifiedDate":"2022-10-24"},{"lineNumber":18,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":19,"author":{"gitId":"Samsation"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2022-10-24"},{"lineNumber":20,"author":{"gitId":"Samsation"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, IncreaseCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-24"},{"lineNumber":21,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":22,"author":{"gitId":"Samsation"},"content":"    private static final String MESSAGE_INVALID_REWARD \u003d Reward.MESSAGE_MAX_INTEGER;","lastModifiedDate":"2022-10-30"},{"lineNumber":23,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":24,"author":{"gitId":"Samsation"},"content":"    private IncreaseCommandParser parser \u003d new IncreaseCommandParser();","lastModifiedDate":"2022-10-24"},{"lineNumber":25,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":26,"author":{"gitId":"Samsation"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":27,"author":{"gitId":"Samsation"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2022-10-24"},{"lineNumber":28,"author":{"gitId":"Samsation"},"content":"        // no reward values specified","lastModifiedDate":"2022-10-24"},{"lineNumber":29,"author":{"gitId":"Samsation"},"content":"        assertParseFailure(parser, VALID_PHONE_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-24"},{"lineNumber":30,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":31,"author":{"gitId":"Samsation"},"content":"        // another no reward values specified","lastModifiedDate":"2022-10-24"},{"lineNumber":32,"author":{"gitId":"Samsation"},"content":"        assertParseFailure(parser, \" \" + PREFIX_PHONE + PHONE_FIRST_PERSON, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-24"},{"lineNumber":33,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":34,"author":{"gitId":"Samsation"},"content":"        // no index and no field specified","lastModifiedDate":"2022-10-24"},{"lineNumber":35,"author":{"gitId":"Samsation"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-24"},{"lineNumber":36,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":37,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":38,"author":{"gitId":"Samsation"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":39,"author":{"gitId":"Samsation"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2022-10-24"},{"lineNumber":40,"author":{"gitId":"Samsation"},"content":"        // negative reward value","lastModifiedDate":"2022-10-24"},{"lineNumber":41,"author":{"gitId":"Samsation"},"content":"        assertParseFailure(parser, \"-5\" + PHONE_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-24"},{"lineNumber":42,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":43,"author":{"gitId":"Samsation"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2022-10-24"},{"lineNumber":44,"author":{"gitId":"Samsation"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_REWARD);","lastModifiedDate":"2022-10-30"},{"lineNumber":45,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":46,"author":{"gitId":"Samsation"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2022-10-24"},{"lineNumber":47,"author":{"gitId":"Samsation"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_REWARD);","lastModifiedDate":"2022-10-30"},{"lineNumber":48,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":49,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":50,"author":{"gitId":"Samsation"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":51,"author":{"gitId":"Samsation"},"content":"    public void parse_invalidIdentifier_failure() {","lastModifiedDate":"2022-10-24"},{"lineNumber":52,"author":{"gitId":"Samsation"},"content":"        assertParseFailure(parser, \" \" + INVALID_PHONE_DESC,","lastModifiedDate":"2022-10-24"},{"lineNumber":53,"author":{"gitId":"Samsation"},"content":"                MESSAGE_INVALID_FORMAT); // invalid phone","lastModifiedDate":"2022-10-24"},{"lineNumber":54,"author":{"gitId":"Samsation"},"content":"        assertParseFailure(parser, \" \" + INVALID_EMAIL_DESC,","lastModifiedDate":"2022-10-24"},{"lineNumber":55,"author":{"gitId":"Samsation"},"content":"                MESSAGE_INVALID_FORMAT); // invalid email","lastModifiedDate":"2022-10-24"},{"lineNumber":56,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":57,"author":{"gitId":"Samsation"},"content":"}","lastModifiedDate":"2022-10-24"}],"authorContributionMap":{"Samsation":47,"TanWenCong":10}},{"path":"src/test/java/seedu/boba/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.logic.parser;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Email;","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Name;","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Phone;","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Reward;","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.tag.Tag;","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"Samsation"},"content":"    private static final String INVALID_REWARD \u003d \" \";","lastModifiedDate":"2022-10-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"Samsation"},"content":"    private static final String VALID_PHONE \u003d \"12345678\";","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"Samsation"},"content":"    private static final String VALID_REWARD \u003d \"6900\";","lastModifiedDate":"2022-10-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"Samsation"},"content":"    public void parseReward_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-08"},{"lineNumber":107,"author":{"gitId":"Samsation"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseReward((String) null));","lastModifiedDate":"2022-10-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"Samsation"},"content":"    public void parseReward_invalidValue_throwsParseException() {","lastModifiedDate":"2022-10-08"},{"lineNumber":112,"author":{"gitId":"Samsation"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseReward(INVALID_REWARD));","lastModifiedDate":"2022-10-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"Samsation"},"content":"    public void parseReward_validValueWithoutWhitespace_returnsReward() throws Exception {","lastModifiedDate":"2022-10-08"},{"lineNumber":117,"author":{"gitId":"Samsation"},"content":"        Reward expectedReward \u003d new Reward(VALID_REWARD);","lastModifiedDate":"2022-10-08"},{"lineNumber":118,"author":{"gitId":"Samsation"},"content":"        assertEquals(expectedReward, ParserUtil.parseReward(VALID_REWARD));","lastModifiedDate":"2022-10-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"Samsation"},"content":"    public void parseReward_validValueWithWhitespace_returnsTrimmedReward() throws Exception {","lastModifiedDate":"2022-10-08"},{"lineNumber":123,"author":{"gitId":"Samsation"},"content":"        String rewardWithWhitespace \u003d WHITESPACE + VALID_REWARD + WHITESPACE;","lastModifiedDate":"2022-10-08"},{"lineNumber":124,"author":{"gitId":"Samsation"},"content":"        Reward expectedReward \u003d new Reward(VALID_REWARD);","lastModifiedDate":"2022-10-08"},{"lineNumber":125,"author":{"gitId":"Samsation"},"content":"        assertEquals(expectedReward, ParserUtil.parseReward(rewardWithWhitespace));","lastModifiedDate":"2022-10-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"Samsation":14,"TanWenCong":10,"-":172}},{"path":"src/test/java/seedu/boba/model/BobaBotModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.model;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"albertZhangTJ"},"content":"import static seedu.boba.model.BobaBotModel.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-10-31"},{"lineNumber":7,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.testutil.TypicalCustomers.ALICE;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.testutil.TypicalCustomers.BENSON;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-10-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":17,"author":{"gitId":"albertZhangTJ"},"content":"import seedu.boba.commons.core.GuiSettings;","lastModifiedDate":"2022-10-31"},{"lineNumber":18,"author":{"gitId":"albertZhangTJ"},"content":"import seedu.boba.model.customer.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-31"},{"lineNumber":19,"author":{"gitId":"albertZhangTJ"},"content":"import seedu.boba.testutil.BobaBotBuilder;","lastModifiedDate":"2022-10-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":21,"author":{"gitId":"albertZhangTJ"},"content":"public class BobaBotModelManagerTest {","lastModifiedDate":"2022-10-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"albertZhangTJ"},"content":"    private BobaBotModelManager modelManager \u003d new BobaBotModelManager();","lastModifiedDate":"2022-10-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"TanWenCong"},"content":"        assertEquals(new BobaBot(), new BobaBot(modelManager.getBobaBot()));","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"TanWenCong"},"content":"        userPrefs.setBobaBotFilePath(Paths.get(\"boba/bot/file/path\"));","lastModifiedDate":"2022-10-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"TanWenCong"},"content":"        userPrefs.setBobaBotFilePath(Paths.get(\"new/boba/bot/file/path\"));","lastModifiedDate":"2022-10-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"TanWenCong"},"content":"    public void setBobaBotFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2022-10-27"},{"lineNumber":65,"author":{"gitId":"TanWenCong"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setBobaBotFilePath(null));","lastModifiedDate":"2022-10-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"TanWenCong"},"content":"    public void setBobaBotFilePath_validPath_setsBobaBotFilePath() {","lastModifiedDate":"2022-10-27"},{"lineNumber":70,"author":{"gitId":"TanWenCong"},"content":"        Path path \u003d Paths.get(\"boba/bot/file/path\");","lastModifiedDate":"2022-10-27"},{"lineNumber":71,"author":{"gitId":"TanWenCong"},"content":"        modelManager.setBobaBotFilePath(path);","lastModifiedDate":"2022-10-27"},{"lineNumber":72,"author":{"gitId":"TanWenCong"},"content":"        assertEquals(path, modelManager.getBobaBotFilePath());","lastModifiedDate":"2022-10-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"TanWenCong"},"content":"    public void hasPerson_personNotInBobaBot_returnsFalse() {","lastModifiedDate":"2022-10-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"TanWenCong"},"content":"    public void hasPerson_personInBobaBot_returnsTrue() {","lastModifiedDate":"2022-10-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"TanWenCong"},"content":"        BobaBot bobaBot \u003d new BobaBotBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2022-10-27"},{"lineNumber":99,"author":{"gitId":"TanWenCong"},"content":"        BobaBot differentBobaBot \u003d new BobaBot();","lastModifiedDate":"2022-10-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"albertZhangTJ"},"content":"        modelManager \u003d new BobaBotModelManager(bobaBot, userPrefs);","lastModifiedDate":"2022-10-31"},{"lineNumber":104,"author":{"gitId":"albertZhangTJ"},"content":"        BobaBotModelManager modelManagerCopy \u003d new BobaBotModelManager(bobaBot, userPrefs);","lastModifiedDate":"2022-10-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"TanWenCong"},"content":"        // different bobaBot -\u003e returns false","lastModifiedDate":"2022-10-27"},{"lineNumber":117,"author":{"gitId":"albertZhangTJ"},"content":"        assertFalse(modelManager.equals(new BobaBotModelManager(differentBobaBot, userPrefs)));","lastModifiedDate":"2022-10-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":122,"author":{"gitId":"albertZhangTJ"},"content":"        assertFalse(modelManager.equals(new BobaBotModelManager(bobaBot, userPrefs)));","lastModifiedDate":"2022-10-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"TanWenCong"},"content":"        differentUserPrefs.setBobaBotFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2022-10-27"},{"lineNumber":130,"author":{"gitId":"albertZhangTJ"},"content":"        assertFalse(modelManager.equals(new BobaBotModelManager(bobaBot, differentUserPrefs)));","lastModifiedDate":"2022-10-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"TanWenCong":19,"albertZhangTJ":11,"-":102}},{"path":"src/test/java/seedu/boba/model/BobaBotTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.model;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"TanWenCong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"TanWenCong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"TanWenCong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.VALID_REWARD_BOB;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.VALID_TAG_GOLD;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.testutil.TypicalCustomers.ALICE;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.testutil.TypicalCustomers.getTypicalBobaBot;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"TanWenCong"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"TanWenCong"},"content":"import java.util.Collection;","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"TanWenCong"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"TanWenCong"},"content":"import java.util.List;","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"TanWenCong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"TanWenCong"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"TanWenCong"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Customer;","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.exceptions.DuplicatePersonException;","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.testutil.CustomerBuilder;","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"TanWenCong"},"content":"public class BobaBotTest {","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"TanWenCong"},"content":"    private final BobaBot bobaBot \u003d new BobaBot();","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"TanWenCong"},"content":"    @Test","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"TanWenCong"},"content":"    public void constructor() {","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"TanWenCong"},"content":"        assertEquals(Collections.emptyList(), bobaBot.getPersonList());","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"TanWenCong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":34,"author":{"gitId":"TanWenCong"},"content":"    @Test","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"TanWenCong"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-27"},{"lineNumber":36,"author":{"gitId":"TanWenCong"},"content":"        assertThrows(NullPointerException.class, () -\u003e bobaBot.resetData(null));","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"TanWenCong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":38,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"TanWenCong"},"content":"    @Test","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"TanWenCong"},"content":"    public void resetData_withValidReadOnlyBobaBot_replacesData() {","lastModifiedDate":"2022-10-27"},{"lineNumber":41,"author":{"gitId":"TanWenCong"},"content":"        BobaBot newData \u003d getTypicalBobaBot();","lastModifiedDate":"2022-10-27"},{"lineNumber":42,"author":{"gitId":"TanWenCong"},"content":"        bobaBot.resetData(newData);","lastModifiedDate":"2022-10-27"},{"lineNumber":43,"author":{"gitId":"TanWenCong"},"content":"        assertEquals(newData, bobaBot);","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"TanWenCong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":46,"author":{"gitId":"TanWenCong"},"content":"    @Test","lastModifiedDate":"2022-10-27"},{"lineNumber":47,"author":{"gitId":"TanWenCong"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2022-10-27"},{"lineNumber":48,"author":{"gitId":"TanWenCong"},"content":"        // Two customers with the same identity fields","lastModifiedDate":"2022-10-27"},{"lineNumber":49,"author":{"gitId":"TanWenCong"},"content":"        Customer editedAlice \u003d new CustomerBuilder(ALICE).withReward(VALID_REWARD_BOB).withTags(VALID_TAG_GOLD)","lastModifiedDate":"2022-10-27"},{"lineNumber":50,"author":{"gitId":"TanWenCong"},"content":"                .build();","lastModifiedDate":"2022-10-27"},{"lineNumber":51,"author":{"gitId":"TanWenCong"},"content":"        List\u003cCustomer\u003e newCustomers \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2022-10-27"},{"lineNumber":52,"author":{"gitId":"TanWenCong"},"content":"        BobaBotStub newData \u003d new BobaBotStub(newCustomers);","lastModifiedDate":"2022-10-27"},{"lineNumber":53,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":54,"author":{"gitId":"TanWenCong"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e bobaBot.resetData(newData));","lastModifiedDate":"2022-10-27"},{"lineNumber":55,"author":{"gitId":"TanWenCong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":56,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":57,"author":{"gitId":"TanWenCong"},"content":"    @Test","lastModifiedDate":"2022-10-27"},{"lineNumber":58,"author":{"gitId":"TanWenCong"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2022-10-27"},{"lineNumber":59,"author":{"gitId":"TanWenCong"},"content":"        assertThrows(NullPointerException.class, () -\u003e bobaBot.hasPerson(null));","lastModifiedDate":"2022-10-27"},{"lineNumber":60,"author":{"gitId":"TanWenCong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":61,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":62,"author":{"gitId":"TanWenCong"},"content":"    @Test","lastModifiedDate":"2022-10-27"},{"lineNumber":63,"author":{"gitId":"TanWenCong"},"content":"    public void hasPerson_personNotInBobaBot_returnsFalse() {","lastModifiedDate":"2022-10-27"},{"lineNumber":64,"author":{"gitId":"TanWenCong"},"content":"        assertFalse(bobaBot.hasPerson(ALICE));","lastModifiedDate":"2022-10-27"},{"lineNumber":65,"author":{"gitId":"TanWenCong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":66,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":67,"author":{"gitId":"TanWenCong"},"content":"    @Test","lastModifiedDate":"2022-10-27"},{"lineNumber":68,"author":{"gitId":"TanWenCong"},"content":"    public void hasPerson_personInBobaBot_returnsTrue() {","lastModifiedDate":"2022-10-27"},{"lineNumber":69,"author":{"gitId":"TanWenCong"},"content":"        bobaBot.addPerson(ALICE);","lastModifiedDate":"2022-10-27"},{"lineNumber":70,"author":{"gitId":"TanWenCong"},"content":"        assertTrue(bobaBot.hasPerson(ALICE));","lastModifiedDate":"2022-10-27"},{"lineNumber":71,"author":{"gitId":"TanWenCong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":72,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":73,"author":{"gitId":"TanWenCong"},"content":"    @Test","lastModifiedDate":"2022-10-27"},{"lineNumber":74,"author":{"gitId":"TanWenCong"},"content":"    public void hasPerson_personWithSameIdentityFieldsInBobaBot_returnsTrue() {","lastModifiedDate":"2022-10-27"},{"lineNumber":75,"author":{"gitId":"TanWenCong"},"content":"        bobaBot.addPerson(ALICE);","lastModifiedDate":"2022-10-27"},{"lineNumber":76,"author":{"gitId":"TanWenCong"},"content":"        Customer editedAlice \u003d new CustomerBuilder(ALICE).withReward(VALID_REWARD_BOB).withTags(VALID_TAG_GOLD)","lastModifiedDate":"2022-10-27"},{"lineNumber":77,"author":{"gitId":"TanWenCong"},"content":"                .build();","lastModifiedDate":"2022-10-27"},{"lineNumber":78,"author":{"gitId":"TanWenCong"},"content":"        assertTrue(bobaBot.hasPerson(editedAlice));","lastModifiedDate":"2022-10-27"},{"lineNumber":79,"author":{"gitId":"TanWenCong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":80,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":81,"author":{"gitId":"TanWenCong"},"content":"    @Test","lastModifiedDate":"2022-10-27"},{"lineNumber":82,"author":{"gitId":"TanWenCong"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-27"},{"lineNumber":83,"author":{"gitId":"TanWenCong"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e bobaBot.getPersonList().remove(0));","lastModifiedDate":"2022-10-27"},{"lineNumber":84,"author":{"gitId":"TanWenCong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":85,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":86,"author":{"gitId":"TanWenCong"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":87,"author":{"gitId":"TanWenCong"},"content":"     * A stub ReadOnlyBobaBot whose customers list can violate interface constraints.","lastModifiedDate":"2022-10-27"},{"lineNumber":88,"author":{"gitId":"TanWenCong"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":89,"author":{"gitId":"TanWenCong"},"content":"    private static class BobaBotStub implements ReadOnlyBobaBot {","lastModifiedDate":"2022-10-27"},{"lineNumber":90,"author":{"gitId":"TanWenCong"},"content":"        private final ObservableList\u003cCustomer\u003e customers \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-27"},{"lineNumber":91,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":92,"author":{"gitId":"TanWenCong"},"content":"        BobaBotStub(Collection\u003cCustomer\u003e customers) {","lastModifiedDate":"2022-10-27"},{"lineNumber":93,"author":{"gitId":"TanWenCong"},"content":"            this.customers.setAll(customers);","lastModifiedDate":"2022-10-27"},{"lineNumber":94,"author":{"gitId":"TanWenCong"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":95,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":96,"author":{"gitId":"TanWenCong"},"content":"        @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":97,"author":{"gitId":"TanWenCong"},"content":"        public ObservableList\u003cCustomer\u003e getPersonList() {","lastModifiedDate":"2022-10-27"},{"lineNumber":98,"author":{"gitId":"TanWenCong"},"content":"            return customers;","lastModifiedDate":"2022-10-27"},{"lineNumber":99,"author":{"gitId":"TanWenCong"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":100,"author":{"gitId":"TanWenCong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":101,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":102,"author":{"gitId":"TanWenCong"},"content":"}","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"TanWenCong":102}},{"path":"src/test/java/seedu/boba/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.model;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"TanWenCong"},"content":"    public void setBobaBotFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"TanWenCong"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setBobaBotFilePath(null));","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"TanWenCong":4,"-":17}},{"path":"src/test/java/seedu/boba/model/VersionedBobaBotTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"albertZhangTJ"},"content":"package seedu.boba.model;","lastModifiedDate":"2022-10-30"},{"lineNumber":2,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":3,"author":{"gitId":"albertZhangTJ"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-30"},{"lineNumber":4,"author":{"gitId":"albertZhangTJ"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-10-30"},{"lineNumber":5,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":6,"author":{"gitId":"albertZhangTJ"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-30"},{"lineNumber":7,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":8,"author":{"gitId":"albertZhangTJ"},"content":"public class VersionedBobaBotTest {","lastModifiedDate":"2022-10-30"},{"lineNumber":9,"author":{"gitId":"albertZhangTJ"},"content":"    private static BobaBot bbt \u003d new BobaBot();","lastModifiedDate":"2022-11-01"},{"lineNumber":10,"author":{"gitId":"albertZhangTJ"},"content":"    @Test","lastModifiedDate":"2022-10-30"},{"lineNumber":11,"author":{"gitId":"albertZhangTJ"},"content":"    public void constructor() {","lastModifiedDate":"2022-10-30"},{"lineNumber":12,"author":{"gitId":"albertZhangTJ"},"content":"        assertEquals(new VersionedBobaBot(bbt), new VersionedBobaBot(bbt, 20));","lastModifiedDate":"2022-11-01"},{"lineNumber":13,"author":{"gitId":"albertZhangTJ"},"content":"        assertNotEquals(new VersionedBobaBot(bbt), new VersionedBobaBot(bbt, 25));","lastModifiedDate":"2022-11-01"},{"lineNumber":14,"author":{"gitId":"albertZhangTJ"},"content":"    }","lastModifiedDate":"2022-10-30"},{"lineNumber":15,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":16,"author":{"gitId":"albertZhangTJ"},"content":"    @Test","lastModifiedDate":"2022-10-30"},{"lineNumber":17,"author":{"gitId":"albertZhangTJ"},"content":"    public void are_equals() {","lastModifiedDate":"2022-10-30"},{"lineNumber":18,"author":{"gitId":"albertZhangTJ"},"content":"        VersionedBobaBot bbbt \u003d new VersionedBobaBot(bbt, 20);","lastModifiedDate":"2022-11-01"},{"lineNumber":19,"author":{"gitId":"albertZhangTJ"},"content":"        assertEquals(bbbt, bbbt);","lastModifiedDate":"2022-10-30"},{"lineNumber":20,"author":{"gitId":"albertZhangTJ"},"content":"        assertEquals(bbbt, new VersionedBobaBot(bbt));","lastModifiedDate":"2022-11-01"},{"lineNumber":21,"author":{"gitId":"albertZhangTJ"},"content":"    }","lastModifiedDate":"2022-10-30"},{"lineNumber":22,"author":{"gitId":"albertZhangTJ"},"content":"}","lastModifiedDate":"2022-10-30"}],"authorContributionMap":{"albertZhangTJ":22}},{"path":"src/test/java/seedu/boba/model/customer/BirthdayMonthTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.model.customer;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":3,"author":{"gitId":"TanWenCong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-24"},{"lineNumber":4,"author":{"gitId":"TanWenCong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-24"},{"lineNumber":5,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":7,"author":{"gitId":"TanWenCong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-24"},{"lineNumber":8,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":9,"author":{"gitId":"TanWenCong"},"content":"public class BirthdayMonthTest {","lastModifiedDate":"2022-10-24"},{"lineNumber":10,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":11,"author":{"gitId":"TanWenCong"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":12,"author":{"gitId":"TanWenCong"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-24"},{"lineNumber":13,"author":{"gitId":"TanWenCong"},"content":"        assertThrows(NullPointerException.class, () -\u003e new BirthdayMonth(null));","lastModifiedDate":"2022-10-24"},{"lineNumber":14,"author":{"gitId":"TanWenCong"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":15,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":16,"author":{"gitId":"TanWenCong"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":17,"author":{"gitId":"TanWenCong"},"content":"    public void constructor_invalidBirthdayMonth_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-24"},{"lineNumber":18,"author":{"gitId":"TanWenCong"},"content":"        String invalidBirthdayMonth \u003d \"\";","lastModifiedDate":"2022-10-24"},{"lineNumber":19,"author":{"gitId":"TanWenCong"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new BirthdayMonth(invalidBirthdayMonth));","lastModifiedDate":"2022-10-24"},{"lineNumber":20,"author":{"gitId":"TanWenCong"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":21,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":22,"author":{"gitId":"TanWenCong"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":23,"author":{"gitId":"TanWenCong"},"content":"    public void isValidBirthdayMonth() {","lastModifiedDate":"2022-10-24"},{"lineNumber":24,"author":{"gitId":"TanWenCong"},"content":"        // null birthdayMonth","lastModifiedDate":"2022-10-24"},{"lineNumber":25,"author":{"gitId":"TanWenCong"},"content":"        assertThrows(NullPointerException.class, () -\u003eBirthdayMonth.isValidBirthdayMonth(null));","lastModifiedDate":"2022-10-24"},{"lineNumber":26,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":27,"author":{"gitId":"TanWenCong"},"content":"        // invalid birthdayMonth","lastModifiedDate":"2022-10-24"},{"lineNumber":28,"author":{"gitId":"TanWenCong"},"content":"        assertFalse(BirthdayMonth.isValidBirthdayMonth(\"\")); // empty string","lastModifiedDate":"2022-10-24"},{"lineNumber":29,"author":{"gitId":"TanWenCong"},"content":"        assertFalse(BirthdayMonth.isValidBirthdayMonth(\" \")); // spaces only","lastModifiedDate":"2022-10-24"},{"lineNumber":30,"author":{"gitId":"TanWenCong"},"content":"        assertFalse(BirthdayMonth.isValidBirthdayMonth(\"0\")); // no month 0","lastModifiedDate":"2022-10-24"},{"lineNumber":31,"author":{"gitId":"TanWenCong"},"content":"        assertFalse(BirthdayMonth.isValidBirthdayMonth(\"13\")); // no month 13","lastModifiedDate":"2022-10-24"},{"lineNumber":32,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":33,"author":{"gitId":"TanWenCong"},"content":"        // valid birthdayMonth","lastModifiedDate":"2022-10-24"},{"lineNumber":34,"author":{"gitId":"TanWenCong"},"content":"        assertTrue(BirthdayMonth.isValidBirthdayMonth(\"1\")); // first month","lastModifiedDate":"2022-10-24"},{"lineNumber":35,"author":{"gitId":"TanWenCong"},"content":"        assertTrue(BirthdayMonth.isValidBirthdayMonth(\"12\")); // last month","lastModifiedDate":"2022-10-24"},{"lineNumber":36,"author":{"gitId":"TanWenCong"},"content":"        assertTrue(BirthdayMonth.isValidBirthdayMonth(\"6\")); // middle month","lastModifiedDate":"2022-10-24"},{"lineNumber":37,"author":{"gitId":"TanWenCong"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":38,"author":{"gitId":"TanWenCong"},"content":"}","lastModifiedDate":"2022-10-24"}],"authorContributionMap":{"TanWenCong":38}},{"path":"src/test/java/seedu/boba/model/customer/CustomerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.model.customer;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"TanWenCong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"TanWenCong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.VALID_BIRTHDAY_MONTH_BOB;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.VALID_REWARD_BOB;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.VALID_TAG_GOLD;","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.testutil.TypicalCustomers.ALICE;","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.testutil.TypicalCustomers.AMY;","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.testutil.TypicalCustomers.BOB;","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"TanWenCong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.testutil.CustomerBuilder;","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"Samsation"},"content":"public class CustomerTest {","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"TanWenCong"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"TanWenCong"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"Samsation"},"content":"        Customer customer \u003d new CustomerBuilder().build();","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"Samsation"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e customer.getTags().remove(0));","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"TanWenCong"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"TanWenCong"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"TanWenCong"},"content":"    public void isSamePerson() {","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"TanWenCong"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"TanWenCong"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"TanWenCong"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"TanWenCong"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"TanWenCong"},"content":"        // same name, all other attributes different -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"Samsation"},"content":"        Customer editedCustomer \u003d new CustomerBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"TanWenCong"},"content":"                .withReward(VALID_REWARD_BOB).withTags(VALID_TAG_GOLD).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"Samsation"},"content":"        assertFalse(ALICE.isSamePerson(editedCustomer));","lastModifiedDate":"2022-10-26"},{"lineNumber":42,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"TanWenCong"},"content":"        // different name, all other attributes same -\u003e returns true","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"Samsation"},"content":"        editedCustomer \u003d new CustomerBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-26"},{"lineNumber":45,"author":{"gitId":"Samsation"},"content":"        assertTrue(ALICE.isSamePerson(editedCustomer));","lastModifiedDate":"2022-10-26"},{"lineNumber":46,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"TanWenCong"},"content":"        // same phone number, all other attributes different -\u003e return true","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"Samsation"},"content":"        editedCustomer \u003d new CustomerBuilder(AMY).withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2022-10-26"},{"lineNumber":49,"author":{"gitId":"TanWenCong"},"content":"                .withReward(VALID_REWARD_BOB).withTags(VALID_TAG_GOLD).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"Samsation"},"content":"        assertTrue(AMY.isSamePerson(editedCustomer));","lastModifiedDate":"2022-10-26"},{"lineNumber":51,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"TanWenCong"},"content":"        // same email address, all other attributes different -\u003e return true","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"Samsation"},"content":"        editedCustomer \u003d new CustomerBuilder(AMY).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2022-10-26"},{"lineNumber":54,"author":{"gitId":"TanWenCong"},"content":"                .withReward(VALID_REWARD_BOB).withTags(VALID_TAG_GOLD).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"Samsation"},"content":"        assertTrue(AMY.isSamePerson(editedCustomer));","lastModifiedDate":"2022-10-26"},{"lineNumber":56,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"TanWenCong"},"content":"        // name differs in case, all other attributes same -\u003e returns true","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"Samsation"},"content":"        Customer editedBob \u003d new CustomerBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2022-10-26"},{"lineNumber":59,"author":{"gitId":"TanWenCong"},"content":"        assertTrue(BOB.isSamePerson(editedBob));","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"TanWenCong"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns true","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"TanWenCong"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"Samsation"},"content":"        editedBob \u003d new CustomerBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2022-10-26"},{"lineNumber":64,"author":{"gitId":"TanWenCong"},"content":"        assertTrue(BOB.isSamePerson(editedBob));","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"TanWenCong"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"TanWenCong"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"TanWenCong"},"content":"    public void equals() {","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"TanWenCong"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"Samsation"},"content":"        Customer aliceCopy \u003d new CustomerBuilder(ALICE).build();","lastModifiedDate":"2022-10-26"},{"lineNumber":71,"author":{"gitId":"TanWenCong"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"TanWenCong"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"TanWenCong"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"TanWenCong"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"TanWenCong"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"TanWenCong"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"TanWenCong"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"Samsation"},"content":"        // different customer -\u003e returns false","lastModifiedDate":"2022-10-26"},{"lineNumber":83,"author":{"gitId":"TanWenCong"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"TanWenCong"},"content":"        // different name -\u003e returns true","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"Samsation"},"content":"        Customer editedAlice \u003d new CustomerBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-26"},{"lineNumber":87,"author":{"gitId":"TanWenCong"},"content":"        assertTrue(ALICE.equals(editedAlice));","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"TanWenCong"},"content":"        // different phone, same email -\u003e returns true","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"Samsation"},"content":"        editedAlice \u003d new CustomerBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-10-26"},{"lineNumber":91,"author":{"gitId":"TanWenCong"},"content":"        assertTrue(ALICE.equals(editedAlice));","lastModifiedDate":"2022-10-10"},{"lineNumber":92,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"TanWenCong"},"content":"        // different email, same phone -\u003e returns true","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"Samsation"},"content":"        editedAlice \u003d new CustomerBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2022-10-26"},{"lineNumber":95,"author":{"gitId":"TanWenCong"},"content":"        assertTrue(ALICE.equals(editedAlice));","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"TanWenCong"},"content":"        // different email, different phone -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":98,"author":{"gitId":"Samsation"},"content":"        editedAlice \u003d new CustomerBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2022-10-26"},{"lineNumber":99,"author":{"gitId":"TanWenCong"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2022-10-10"},{"lineNumber":100,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"TanWenCong"},"content":"        // different birthdayMonth -\u003e returns true","lastModifiedDate":"2022-10-24"},{"lineNumber":102,"author":{"gitId":"Samsation"},"content":"        editedAlice \u003d new CustomerBuilder(ALICE).withBirthdayMonth(VALID_BIRTHDAY_MONTH_BOB).build();","lastModifiedDate":"2022-10-26"},{"lineNumber":103,"author":{"gitId":"TanWenCong"},"content":"        assertTrue(ALICE.equals(editedAlice));","lastModifiedDate":"2022-10-24"},{"lineNumber":104,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":105,"author":{"gitId":"TanWenCong"},"content":"        // different reward -\u003e returns true","lastModifiedDate":"2022-10-24"},{"lineNumber":106,"author":{"gitId":"Samsation"},"content":"        editedAlice \u003d new CustomerBuilder(ALICE).withReward(VALID_REWARD_BOB).build();","lastModifiedDate":"2022-10-26"},{"lineNumber":107,"author":{"gitId":"TanWenCong"},"content":"        assertTrue(ALICE.equals(editedAlice));","lastModifiedDate":"2022-10-10"},{"lineNumber":108,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":109,"author":{"gitId":"TanWenCong"},"content":"        // different tags -\u003e returns true","lastModifiedDate":"2022-10-10"},{"lineNumber":110,"author":{"gitId":"Samsation"},"content":"        editedAlice \u003d new CustomerBuilder(ALICE).withTags(VALID_TAG_GOLD).build();","lastModifiedDate":"2022-10-26"},{"lineNumber":111,"author":{"gitId":"TanWenCong"},"content":"        assertTrue(ALICE.equals(editedAlice));","lastModifiedDate":"2022-10-10"},{"lineNumber":112,"author":{"gitId":"TanWenCong"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":113,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":114,"author":{"gitId":"albertZhangTJ"},"content":"    @Test","lastModifiedDate":"2022-10-28"},{"lineNumber":115,"author":{"gitId":"albertZhangTJ"},"content":"    public void strictlyEquals() {","lastModifiedDate":"2022-10-28"},{"lineNumber":116,"author":{"gitId":"albertZhangTJ"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-28"},{"lineNumber":117,"author":{"gitId":"albertZhangTJ"},"content":"        Customer aliceCopy \u003d new CustomerBuilder(ALICE).build();","lastModifiedDate":"2022-10-28"},{"lineNumber":118,"author":{"gitId":"albertZhangTJ"},"content":"        assertTrue(ALICE.strictlyEquals(aliceCopy));","lastModifiedDate":"2022-10-28"},{"lineNumber":119,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":120,"author":{"gitId":"albertZhangTJ"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-28"},{"lineNumber":121,"author":{"gitId":"albertZhangTJ"},"content":"        assertTrue(ALICE.strictlyEquals(ALICE));","lastModifiedDate":"2022-10-28"},{"lineNumber":122,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":123,"author":{"gitId":"albertZhangTJ"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-28"},{"lineNumber":124,"author":{"gitId":"albertZhangTJ"},"content":"        assertFalse(ALICE.strictlyEquals(null));","lastModifiedDate":"2022-10-28"},{"lineNumber":125,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":126,"author":{"gitId":"albertZhangTJ"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2022-10-28"},{"lineNumber":127,"author":{"gitId":"albertZhangTJ"},"content":"        assertFalse(ALICE.strictlyEquals(5));","lastModifiedDate":"2022-10-28"},{"lineNumber":128,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":129,"author":{"gitId":"albertZhangTJ"},"content":"        // different customer -\u003e returns false","lastModifiedDate":"2022-10-28"},{"lineNumber":130,"author":{"gitId":"albertZhangTJ"},"content":"        assertFalse(ALICE.strictlyEquals(BOB));","lastModifiedDate":"2022-10-28"},{"lineNumber":131,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":132,"author":{"gitId":"albertZhangTJ"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2022-10-28"},{"lineNumber":133,"author":{"gitId":"albertZhangTJ"},"content":"        Customer editedAlice \u003d new CustomerBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-28"},{"lineNumber":134,"author":{"gitId":"albertZhangTJ"},"content":"        assertFalse(ALICE.strictlyEquals(editedAlice));","lastModifiedDate":"2022-10-28"},{"lineNumber":135,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":136,"author":{"gitId":"albertZhangTJ"},"content":"        // different phone, same email -\u003e returns false","lastModifiedDate":"2022-10-28"},{"lineNumber":137,"author":{"gitId":"albertZhangTJ"},"content":"        editedAlice \u003d new CustomerBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-10-28"},{"lineNumber":138,"author":{"gitId":"albertZhangTJ"},"content":"        assertFalse(ALICE.strictlyEquals(editedAlice));","lastModifiedDate":"2022-10-28"},{"lineNumber":139,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":140,"author":{"gitId":"albertZhangTJ"},"content":"        // different email, same phone -\u003e returns false","lastModifiedDate":"2022-10-28"},{"lineNumber":141,"author":{"gitId":"albertZhangTJ"},"content":"        editedAlice \u003d new CustomerBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2022-10-28"},{"lineNumber":142,"author":{"gitId":"albertZhangTJ"},"content":"        assertFalse(ALICE.strictlyEquals(editedAlice));","lastModifiedDate":"2022-10-28"},{"lineNumber":143,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":144,"author":{"gitId":"albertZhangTJ"},"content":"        // different email, different phone -\u003e returns false","lastModifiedDate":"2022-10-28"},{"lineNumber":145,"author":{"gitId":"albertZhangTJ"},"content":"        editedAlice \u003d new CustomerBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2022-10-28"},{"lineNumber":146,"author":{"gitId":"albertZhangTJ"},"content":"        assertFalse(ALICE.strictlyEquals(editedAlice));","lastModifiedDate":"2022-10-28"},{"lineNumber":147,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":148,"author":{"gitId":"albertZhangTJ"},"content":"        // different birthdayMonth -\u003e returns false","lastModifiedDate":"2022-10-28"},{"lineNumber":149,"author":{"gitId":"albertZhangTJ"},"content":"        editedAlice \u003d new CustomerBuilder(ALICE).withBirthdayMonth(VALID_BIRTHDAY_MONTH_BOB).build();","lastModifiedDate":"2022-10-28"},{"lineNumber":150,"author":{"gitId":"albertZhangTJ"},"content":"        assertFalse(ALICE.strictlyEquals(editedAlice));","lastModifiedDate":"2022-10-28"},{"lineNumber":151,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":152,"author":{"gitId":"albertZhangTJ"},"content":"        // different reward -\u003e returns true","lastModifiedDate":"2022-10-28"},{"lineNumber":153,"author":{"gitId":"albertZhangTJ"},"content":"        editedAlice \u003d new CustomerBuilder(ALICE).withReward(VALID_REWARD_BOB).build();","lastModifiedDate":"2022-10-28"},{"lineNumber":154,"author":{"gitId":"albertZhangTJ"},"content":"        assertFalse(ALICE.strictlyEquals(editedAlice));","lastModifiedDate":"2022-10-28"},{"lineNumber":155,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":156,"author":{"gitId":"albertZhangTJ"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2022-10-28"},{"lineNumber":157,"author":{"gitId":"albertZhangTJ"},"content":"        editedAlice \u003d new CustomerBuilder(ALICE).withTags(VALID_TAG_GOLD).build();","lastModifiedDate":"2022-10-28"},{"lineNumber":158,"author":{"gitId":"albertZhangTJ"},"content":"        assertFalse(ALICE.strictlyEquals(editedAlice));","lastModifiedDate":"2022-10-28"},{"lineNumber":159,"author":{"gitId":"albertZhangTJ"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":160,"author":{"gitId":"TanWenCong"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"Samsation":22,"TanWenCong":91,"albertZhangTJ":47}},{"path":"src/test/java/seedu/boba/model/customer/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.model.customer;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"TanWenCong":2,"-":66}},{"path":"src/test/java/seedu/boba/model/customer/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.model.customer;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.testutil.CustomerBuilder;","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"Samsation"},"content":"        // different customer -\u003e returns false","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"Samsation"},"content":"        assertTrue(predicate.test(new CustomerBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-10-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"Samsation"},"content":"        assertTrue(predicate.test(new CustomerBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-10-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"Samsation"},"content":"        assertTrue(predicate.test(new CustomerBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2022-10-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"Samsation"},"content":"        assertTrue(predicate.test(new CustomerBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-10-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"Samsation"},"content":"        assertFalse(predicate.test(new CustomerBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2022-10-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"Samsation"},"content":"        assertFalse(predicate.test(new CustomerBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-10-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"Samsation"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345678\", \"alice@email.com\", \"420\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":72,"author":{"gitId":"Samsation"},"content":"        assertFalse(predicate.test(new CustomerBuilder().withName(\"Alice\").withPhone(\"12345678\")","lastModifiedDate":"2022-10-26"},{"lineNumber":73,"author":{"gitId":"Samsation"},"content":"                .withEmail(\"alice@email.com\").withReward(\"420\").build()));","lastModifiedDate":"2022-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Samsation":10,"TanWenCong":2,"-":63}},{"path":"src/test/java/seedu/boba/model/customer/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.model.customer;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"TanWenCong":2,"-":38}},{"path":"src/test/java/seedu/boba/model/customer/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.model.customer;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"Samsation"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 8 numbers","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"TanWenCong"},"content":"        assertFalse(Phone.isValidPhone(\"93121534911\")); // more than 8 numbers","lastModifiedDate":"2022-10-30"},{"lineNumber":35,"author":{"gitId":"TanWenCong"},"content":"        assertFalse(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2022-10-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"Samsation"},"content":"        assertTrue(Phone.isValidPhone(\"91122334\")); // exactly 8 numbers","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"Samsation":2,"TanWenCong":4,"-":34}},{"path":"src/test/java/seedu/boba/model/customer/RewardTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.model.customer;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"Samsation"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"Samsation"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"Samsation"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"Samsation"},"content":"public class RewardTest {","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"Samsation"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"Samsation"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"Samsation"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Reward(null));","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"Samsation"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"Samsation"},"content":"    public void constructor_invalidReward_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"Samsation"},"content":"        String invalidReward \u003d \"\";","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"Samsation"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Reward(invalidReward));","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"Samsation"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"Samsation"},"content":"    public void isValidReward() {","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"Samsation"},"content":"        // null reward","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"Samsation"},"content":"        assertThrows(NullPointerException.class, () -\u003eReward.isValidReward(null));","lastModifiedDate":"2022-10-14"},{"lineNumber":26,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"Samsation"},"content":"        // invalid rewards","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"Samsation"},"content":"        assertFalse(Reward.isValidReward(\"\")); // empty string","lastModifiedDate":"2022-10-14"},{"lineNumber":29,"author":{"gitId":"Samsation"},"content":"        assertFalse(Reward.isValidReward(\" \")); // spaces only","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":31,"author":{"gitId":"Samsation"},"content":"        // valid rewards","lastModifiedDate":"2022-10-14"},{"lineNumber":32,"author":{"gitId":"Samsation"},"content":"        assertTrue(Reward.isValidReward(\"4000\"));","lastModifiedDate":"2022-10-14"},{"lineNumber":33,"author":{"gitId":"Samsation"},"content":"        assertTrue(Reward.isValidReward(\"0\")); // one character","lastModifiedDate":"2022-10-14"},{"lineNumber":34,"author":{"gitId":"Samsation"},"content":"        assertTrue(Reward.isValidReward(\"000069\")); // trailing zeroes","lastModifiedDate":"2022-10-14"},{"lineNumber":35,"author":{"gitId":"Samsation"},"content":"        assertTrue(Reward.isValidReward(\"99999999999999999999\")); // long reward","lastModifiedDate":"2022-10-14"},{"lineNumber":36,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":37,"author":{"gitId":"Samsation"},"content":"}","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"Samsation":35,"TanWenCong":2}},{"path":"src/test/java/seedu/boba/model/customer/UniqueCustomerListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.model.customer;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":3,"author":{"gitId":"Samsation"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"Samsation"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"Samsation"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.VALID_REWARD_BOB;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.VALID_TAG_GOLD;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.testutil.TypicalCustomers.ALICE;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.testutil.TypicalCustomers.BOB;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"Samsation"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"Samsation"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"Samsation"},"content":"import java.util.List;","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"Samsation"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.exceptions.DuplicatePersonException;","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.exceptions.PersonNotFoundException;","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.testutil.CustomerBuilder;","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"Samsation"},"content":"public class UniqueCustomerListTest {","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"Samsation"},"content":"    private final UniqueCustomerList uniqueCustomerList \u003d new UniqueCustomerList();","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"Samsation"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"Samsation"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"Samsation"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueCustomerList.contains(null));","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"Samsation"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"Samsation"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2022-10-26"},{"lineNumber":33,"author":{"gitId":"Samsation"},"content":"        assertFalse(uniqueCustomerList.contains(ALICE));","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":36,"author":{"gitId":"Samsation"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":37,"author":{"gitId":"Samsation"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"Samsation"},"content":"        uniqueCustomerList.add(ALICE);","lastModifiedDate":"2022-10-26"},{"lineNumber":39,"author":{"gitId":"Samsation"},"content":"        assertTrue(uniqueCustomerList.contains(ALICE));","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":41,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":42,"author":{"gitId":"Samsation"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":43,"author":{"gitId":"Samsation"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2022-10-26"},{"lineNumber":44,"author":{"gitId":"Samsation"},"content":"        uniqueCustomerList.add(ALICE);","lastModifiedDate":"2022-10-26"},{"lineNumber":45,"author":{"gitId":"Samsation"},"content":"        Customer editedAlice \u003d new CustomerBuilder(ALICE).withReward(VALID_REWARD_BOB).withTags(VALID_TAG_GOLD)","lastModifiedDate":"2022-10-26"},{"lineNumber":46,"author":{"gitId":"Samsation"},"content":"                .build();","lastModifiedDate":"2022-10-26"},{"lineNumber":47,"author":{"gitId":"Samsation"},"content":"        assertTrue(uniqueCustomerList.contains(editedAlice));","lastModifiedDate":"2022-10-26"},{"lineNumber":48,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":49,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":50,"author":{"gitId":"Samsation"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":51,"author":{"gitId":"Samsation"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2022-10-26"},{"lineNumber":52,"author":{"gitId":"Samsation"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueCustomerList.add(null));","lastModifiedDate":"2022-10-26"},{"lineNumber":53,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":54,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":55,"author":{"gitId":"Samsation"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":56,"author":{"gitId":"Samsation"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2022-10-26"},{"lineNumber":57,"author":{"gitId":"Samsation"},"content":"        uniqueCustomerList.add(ALICE);","lastModifiedDate":"2022-10-26"},{"lineNumber":58,"author":{"gitId":"Samsation"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniqueCustomerList.add(ALICE));","lastModifiedDate":"2022-10-26"},{"lineNumber":59,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":60,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":61,"author":{"gitId":"Samsation"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":62,"author":{"gitId":"Samsation"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2022-10-26"},{"lineNumber":63,"author":{"gitId":"Samsation"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueCustomerList.setPerson(null, ALICE));","lastModifiedDate":"2022-10-26"},{"lineNumber":64,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":65,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":66,"author":{"gitId":"Samsation"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":67,"author":{"gitId":"Samsation"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2022-10-26"},{"lineNumber":68,"author":{"gitId":"Samsation"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueCustomerList.setPerson(ALICE, null));","lastModifiedDate":"2022-10-26"},{"lineNumber":69,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":70,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":71,"author":{"gitId":"Samsation"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":72,"author":{"gitId":"Samsation"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2022-10-26"},{"lineNumber":73,"author":{"gitId":"Samsation"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniqueCustomerList.setPerson(ALICE, ALICE));","lastModifiedDate":"2022-10-26"},{"lineNumber":74,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":75,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":76,"author":{"gitId":"Samsation"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":77,"author":{"gitId":"Samsation"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2022-10-26"},{"lineNumber":78,"author":{"gitId":"Samsation"},"content":"        uniqueCustomerList.add(ALICE);","lastModifiedDate":"2022-10-26"},{"lineNumber":79,"author":{"gitId":"Samsation"},"content":"        uniqueCustomerList.setPerson(ALICE, ALICE);","lastModifiedDate":"2022-10-26"},{"lineNumber":80,"author":{"gitId":"Samsation"},"content":"        UniqueCustomerList expectedUniqueCustomerList \u003d new UniqueCustomerList();","lastModifiedDate":"2022-10-26"},{"lineNumber":81,"author":{"gitId":"Samsation"},"content":"        expectedUniqueCustomerList.add(ALICE);","lastModifiedDate":"2022-10-26"},{"lineNumber":82,"author":{"gitId":"Samsation"},"content":"        assertEquals(expectedUniqueCustomerList, uniqueCustomerList);","lastModifiedDate":"2022-10-26"},{"lineNumber":83,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":84,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":85,"author":{"gitId":"Samsation"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":86,"author":{"gitId":"Samsation"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2022-10-26"},{"lineNumber":87,"author":{"gitId":"Samsation"},"content":"        uniqueCustomerList.add(ALICE);","lastModifiedDate":"2022-10-26"},{"lineNumber":88,"author":{"gitId":"Samsation"},"content":"        Customer editedAlice \u003d new CustomerBuilder(ALICE).withReward(VALID_REWARD_BOB).withTags(VALID_TAG_GOLD)","lastModifiedDate":"2022-10-26"},{"lineNumber":89,"author":{"gitId":"Samsation"},"content":"                .build();","lastModifiedDate":"2022-10-26"},{"lineNumber":90,"author":{"gitId":"Samsation"},"content":"        uniqueCustomerList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2022-10-26"},{"lineNumber":91,"author":{"gitId":"Samsation"},"content":"        UniqueCustomerList expectedUniqueCustomerList \u003d new UniqueCustomerList();","lastModifiedDate":"2022-10-26"},{"lineNumber":92,"author":{"gitId":"Samsation"},"content":"        expectedUniqueCustomerList.add(editedAlice);","lastModifiedDate":"2022-10-26"},{"lineNumber":93,"author":{"gitId":"Samsation"},"content":"        assertEquals(expectedUniqueCustomerList, uniqueCustomerList);","lastModifiedDate":"2022-10-26"},{"lineNumber":94,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":95,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":96,"author":{"gitId":"Samsation"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":97,"author":{"gitId":"Samsation"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2022-10-26"},{"lineNumber":98,"author":{"gitId":"Samsation"},"content":"        uniqueCustomerList.add(ALICE);","lastModifiedDate":"2022-10-26"},{"lineNumber":99,"author":{"gitId":"Samsation"},"content":"        uniqueCustomerList.setPerson(ALICE, BOB);","lastModifiedDate":"2022-10-26"},{"lineNumber":100,"author":{"gitId":"Samsation"},"content":"        UniqueCustomerList expectedUniqueCustomerList \u003d new UniqueCustomerList();","lastModifiedDate":"2022-10-26"},{"lineNumber":101,"author":{"gitId":"Samsation"},"content":"        expectedUniqueCustomerList.add(BOB);","lastModifiedDate":"2022-10-26"},{"lineNumber":102,"author":{"gitId":"Samsation"},"content":"        assertEquals(expectedUniqueCustomerList, uniqueCustomerList);","lastModifiedDate":"2022-10-26"},{"lineNumber":103,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":104,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":105,"author":{"gitId":"Samsation"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":106,"author":{"gitId":"Samsation"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2022-10-26"},{"lineNumber":107,"author":{"gitId":"Samsation"},"content":"        uniqueCustomerList.add(ALICE);","lastModifiedDate":"2022-10-26"},{"lineNumber":108,"author":{"gitId":"Samsation"},"content":"        uniqueCustomerList.add(BOB);","lastModifiedDate":"2022-10-26"},{"lineNumber":109,"author":{"gitId":"Samsation"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniqueCustomerList.setPerson(ALICE, BOB));","lastModifiedDate":"2022-10-26"},{"lineNumber":110,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":111,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":112,"author":{"gitId":"Samsation"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":113,"author":{"gitId":"Samsation"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2022-10-26"},{"lineNumber":114,"author":{"gitId":"Samsation"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueCustomerList.remove(null));","lastModifiedDate":"2022-10-26"},{"lineNumber":115,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":116,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":117,"author":{"gitId":"Samsation"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":118,"author":{"gitId":"Samsation"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2022-10-26"},{"lineNumber":119,"author":{"gitId":"Samsation"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniqueCustomerList.remove(ALICE));","lastModifiedDate":"2022-10-26"},{"lineNumber":120,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":121,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":122,"author":{"gitId":"Samsation"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":123,"author":{"gitId":"Samsation"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2022-10-26"},{"lineNumber":124,"author":{"gitId":"Samsation"},"content":"        uniqueCustomerList.add(ALICE);","lastModifiedDate":"2022-10-26"},{"lineNumber":125,"author":{"gitId":"Samsation"},"content":"        uniqueCustomerList.remove(ALICE);","lastModifiedDate":"2022-10-26"},{"lineNumber":126,"author":{"gitId":"Samsation"},"content":"        UniqueCustomerList expectedUniqueCustomerList \u003d new UniqueCustomerList();","lastModifiedDate":"2022-10-26"},{"lineNumber":127,"author":{"gitId":"Samsation"},"content":"        assertEquals(expectedUniqueCustomerList, uniqueCustomerList);","lastModifiedDate":"2022-10-26"},{"lineNumber":128,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":129,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":130,"author":{"gitId":"Samsation"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":131,"author":{"gitId":"Samsation"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2022-10-26"},{"lineNumber":132,"author":{"gitId":"Samsation"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueCustomerList.setPersons((UniqueCustomerList) null));","lastModifiedDate":"2022-10-26"},{"lineNumber":133,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":134,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":135,"author":{"gitId":"Samsation"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":136,"author":{"gitId":"Samsation"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2022-10-26"},{"lineNumber":137,"author":{"gitId":"Samsation"},"content":"        uniqueCustomerList.add(ALICE);","lastModifiedDate":"2022-10-26"},{"lineNumber":138,"author":{"gitId":"Samsation"},"content":"        UniqueCustomerList expectedUniqueCustomerList \u003d new UniqueCustomerList();","lastModifiedDate":"2022-10-26"},{"lineNumber":139,"author":{"gitId":"Samsation"},"content":"        expectedUniqueCustomerList.add(BOB);","lastModifiedDate":"2022-10-26"},{"lineNumber":140,"author":{"gitId":"Samsation"},"content":"        uniqueCustomerList.setPersons(expectedUniqueCustomerList);","lastModifiedDate":"2022-10-26"},{"lineNumber":141,"author":{"gitId":"Samsation"},"content":"        assertEquals(expectedUniqueCustomerList, uniqueCustomerList);","lastModifiedDate":"2022-10-26"},{"lineNumber":142,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":143,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":144,"author":{"gitId":"Samsation"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":145,"author":{"gitId":"Samsation"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2022-10-26"},{"lineNumber":146,"author":{"gitId":"Samsation"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueCustomerList.setPersons((List\u003cCustomer\u003e) null));","lastModifiedDate":"2022-10-26"},{"lineNumber":147,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":148,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":149,"author":{"gitId":"Samsation"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":150,"author":{"gitId":"Samsation"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2022-10-26"},{"lineNumber":151,"author":{"gitId":"Samsation"},"content":"        uniqueCustomerList.add(ALICE);","lastModifiedDate":"2022-10-26"},{"lineNumber":152,"author":{"gitId":"Samsation"},"content":"        List\u003cCustomer\u003e customerList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2022-10-26"},{"lineNumber":153,"author":{"gitId":"Samsation"},"content":"        uniqueCustomerList.setPersons(customerList);","lastModifiedDate":"2022-10-26"},{"lineNumber":154,"author":{"gitId":"Samsation"},"content":"        UniqueCustomerList expectedUniqueCustomerList \u003d new UniqueCustomerList();","lastModifiedDate":"2022-10-26"},{"lineNumber":155,"author":{"gitId":"Samsation"},"content":"        expectedUniqueCustomerList.add(BOB);","lastModifiedDate":"2022-10-26"},{"lineNumber":156,"author":{"gitId":"Samsation"},"content":"        assertEquals(expectedUniqueCustomerList, uniqueCustomerList);","lastModifiedDate":"2022-10-26"},{"lineNumber":157,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":158,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":159,"author":{"gitId":"Samsation"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":160,"author":{"gitId":"Samsation"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2022-10-26"},{"lineNumber":161,"author":{"gitId":"Samsation"},"content":"        List\u003cCustomer\u003e listWithDuplicateCustomers \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2022-10-26"},{"lineNumber":162,"author":{"gitId":"Samsation"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniqueCustomerList.setPersons(listWithDuplicateCustomers));","lastModifiedDate":"2022-10-26"},{"lineNumber":163,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":164,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":165,"author":{"gitId":"Samsation"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":166,"author":{"gitId":"Samsation"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-26"},{"lineNumber":167,"author":{"gitId":"Samsation"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2022-10-26"},{"lineNumber":168,"author":{"gitId":"Samsation"},"content":"                -\u003e uniqueCustomerList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2022-10-26"},{"lineNumber":169,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":170,"author":{"gitId":"Samsation"},"content":"}","lastModifiedDate":"2022-10-26"}],"authorContributionMap":{"Samsation":161,"TanWenCong":9}},{"path":"src/test/java/seedu/boba/model/tag/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.model.tag;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":3,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class TagTest {","lastModifiedDate":"2017-12-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));","lastModifiedDate":"2019-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2017-12-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2017-12-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-12-04"}],"authorContributionMap":{"TanWenCong":2,"-":24}},{"path":"src/test/java/seedu/boba/storage/JsonAdaptedCustomerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.storage;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.storage.JsonAdaptedCustomer.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.testutil.TypicalCustomers.BENSON;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.BirthdayMonth;","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Email;","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Name;","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Phone;","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Reward;","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"Samsation"},"content":"public class JsonAdaptedCustomerTest {","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"TanWenCong"},"content":"    private static final String INVALID_BIRTHDAY_MONTH \u003d \"two\";","lastModifiedDate":"2022-10-24"},{"lineNumber":25,"author":{"gitId":"Samsation"},"content":"    private static final String INVALID_REWARD \u003d \" \";","lastModifiedDate":"2022-10-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"TanWenCong"},"content":"    private static final String VALID_BIRTHDAY_MONTH \u003d BENSON.getBirthdayMonth().toString();","lastModifiedDate":"2022-10-24"},{"lineNumber":33,"author":{"gitId":"Samsation"},"content":"    private static final String VALID_REWARD \u003d BENSON.getReward().toString();","lastModifiedDate":"2022-10-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"Samsation"},"content":"        JsonAdaptedCustomer person \u003d new JsonAdaptedCustomer(BENSON);","lastModifiedDate":"2022-10-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"Samsation"},"content":"        JsonAdaptedCustomer person \u003d","lastModifiedDate":"2022-10-26"},{"lineNumber":47,"author":{"gitId":"Samsation"},"content":"                new JsonAdaptedCustomer(INVALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2022-10-26"},{"lineNumber":48,"author":{"gitId":"TanWenCong"},"content":"                    VALID_BIRTHDAY_MONTH, VALID_REWARD, VALID_TAGS);","lastModifiedDate":"2022-10-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"Samsation"},"content":"        JsonAdaptedCustomer person \u003d new JsonAdaptedCustomer(null, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2022-10-26"},{"lineNumber":56,"author":{"gitId":"TanWenCong"},"content":"            VALID_BIRTHDAY_MONTH, VALID_REWARD, VALID_TAGS);","lastModifiedDate":"2022-10-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"Samsation"},"content":"        JsonAdaptedCustomer person \u003d","lastModifiedDate":"2022-10-26"},{"lineNumber":64,"author":{"gitId":"Samsation"},"content":"                new JsonAdaptedCustomer(VALID_NAME, INVALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2022-10-26"},{"lineNumber":65,"author":{"gitId":"TanWenCong"},"content":"                    VALID_BIRTHDAY_MONTH, VALID_REWARD, VALID_TAGS);","lastModifiedDate":"2022-10-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"Samsation"},"content":"        JsonAdaptedCustomer person \u003d new JsonAdaptedCustomer(VALID_NAME, null, VALID_EMAIL,","lastModifiedDate":"2022-10-26"},{"lineNumber":73,"author":{"gitId":"TanWenCong"},"content":"            VALID_BIRTHDAY_MONTH, VALID_REWARD, VALID_TAGS);","lastModifiedDate":"2022-10-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"Samsation"},"content":"        JsonAdaptedCustomer person \u003d","lastModifiedDate":"2022-10-26"},{"lineNumber":81,"author":{"gitId":"Samsation"},"content":"                new JsonAdaptedCustomer(VALID_NAME, VALID_PHONE, INVALID_EMAIL,","lastModifiedDate":"2022-10-26"},{"lineNumber":82,"author":{"gitId":"TanWenCong"},"content":"                    VALID_BIRTHDAY_MONTH, VALID_REWARD, VALID_TAGS);","lastModifiedDate":"2022-10-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"Samsation"},"content":"        JsonAdaptedCustomer person \u003d new JsonAdaptedCustomer(VALID_NAME, VALID_PHONE, null,","lastModifiedDate":"2022-10-26"},{"lineNumber":90,"author":{"gitId":"TanWenCong"},"content":"            VALID_BIRTHDAY_MONTH, VALID_REWARD, VALID_TAGS);","lastModifiedDate":"2022-10-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"TanWenCong"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":96,"author":{"gitId":"TanWenCong"},"content":"    public void toModelType_invalidBirthdayMonth_throwsIllegalValueException() {","lastModifiedDate":"2022-10-24"},{"lineNumber":97,"author":{"gitId":"Samsation"},"content":"        JsonAdaptedCustomer person \u003d new JsonAdaptedCustomer(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2022-10-26"},{"lineNumber":98,"author":{"gitId":"TanWenCong"},"content":"            INVALID_BIRTHDAY_MONTH, VALID_REWARD, VALID_TAGS);","lastModifiedDate":"2022-10-24"},{"lineNumber":99,"author":{"gitId":"TanWenCong"},"content":"        String expectedMessage \u003d BirthdayMonth.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-10-24"},{"lineNumber":100,"author":{"gitId":"TanWenCong"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-10-24"},{"lineNumber":101,"author":{"gitId":"TanWenCong"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":102,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":103,"author":{"gitId":"TanWenCong"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":104,"author":{"gitId":"TanWenCong"},"content":"    public void toModelType_nullBirthdayMonth_throwsIllegalValueException() {","lastModifiedDate":"2022-10-24"},{"lineNumber":105,"author":{"gitId":"Samsation"},"content":"        JsonAdaptedCustomer person \u003d new JsonAdaptedCustomer(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2022-10-26"},{"lineNumber":106,"author":{"gitId":"TanWenCong"},"content":"            null, VALID_REWARD, VALID_TAGS);","lastModifiedDate":"2022-10-24"},{"lineNumber":107,"author":{"gitId":"TanWenCong"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, BirthdayMonth.class.getSimpleName());","lastModifiedDate":"2022-10-24"},{"lineNumber":108,"author":{"gitId":"TanWenCong"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-10-24"},{"lineNumber":109,"author":{"gitId":"TanWenCong"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":110,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"Samsation"},"content":"    public void toModelType_invalidReward_throwsIllegalValueException() {","lastModifiedDate":"2022-10-08"},{"lineNumber":113,"author":{"gitId":"Samsation"},"content":"        JsonAdaptedCustomer person \u003d","lastModifiedDate":"2022-10-26"},{"lineNumber":114,"author":{"gitId":"Samsation"},"content":"                new JsonAdaptedCustomer(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2022-10-26"},{"lineNumber":115,"author":{"gitId":"TanWenCong"},"content":"                    VALID_BIRTHDAY_MONTH, INVALID_REWARD, VALID_TAGS);","lastModifiedDate":"2022-10-24"},{"lineNumber":116,"author":{"gitId":"Samsation"},"content":"        String expectedMessage \u003d Reward.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-10-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"Samsation"},"content":"    public void toModelType_nullReward_throwsIllegalValueException() {","lastModifiedDate":"2022-10-08"},{"lineNumber":122,"author":{"gitId":"Samsation"},"content":"        JsonAdaptedCustomer person \u003d new JsonAdaptedCustomer(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2022-10-26"},{"lineNumber":123,"author":{"gitId":"TanWenCong"},"content":"            VALID_BIRTHDAY_MONTH, null, VALID_TAGS);","lastModifiedDate":"2022-10-24"},{"lineNumber":124,"author":{"gitId":"Samsation"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Reward.class.getSimpleName());","lastModifiedDate":"2022-10-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"Samsation"},"content":"        JsonAdaptedCustomer person \u003d","lastModifiedDate":"2022-10-26"},{"lineNumber":133,"author":{"gitId":"Samsation"},"content":"                new JsonAdaptedCustomer(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2022-10-26"},{"lineNumber":134,"author":{"gitId":"TanWenCong"},"content":"                    VALID_BIRTHDAY_MONTH, VALID_REWARD, invalidTags);","lastModifiedDate":"2022-10-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Samsation":24,"TanWenCong":35,"-":79}},{"path":"src/test/java/seedu/boba/storage/JsonBobaBotStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.storage;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"TanWenCong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"TanWenCong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.testutil.TypicalCustomers.ALICE;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.testutil.TypicalCustomers.HOON;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.testutil.TypicalCustomers.IDA;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.testutil.TypicalCustomers.getTypicalBobaBot;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"TanWenCong"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"TanWenCong"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"TanWenCong"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"TanWenCong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"TanWenCong"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.BobaBot;","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.ReadOnlyBobaBot;","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"TanWenCong"},"content":"public class JsonBobaBotStorageTest {","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"TanWenCong"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonBobaBotStorageTest\");","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"TanWenCong"},"content":"    @TempDir","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"TanWenCong"},"content":"    public Path testFolder;","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"TanWenCong"},"content":"    @Test","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"TanWenCong"},"content":"    public void readBobaBot_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"TanWenCong"},"content":"        assertThrows(NullPointerException.class, () -\u003e readBobaBot(null));","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"TanWenCong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"TanWenCong"},"content":"    private java.util.Optional\u003cReadOnlyBobaBot\u003e readBobaBot(String filePath) throws Exception {","lastModifiedDate":"2022-10-27"},{"lineNumber":34,"author":{"gitId":"TanWenCong"},"content":"        return new JsonBobaBotStorage(Paths.get(filePath)).readBobaBot(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"TanWenCong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":36,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"TanWenCong"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2022-10-27"},{"lineNumber":38,"author":{"gitId":"TanWenCong"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"TanWenCong"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"TanWenCong"},"content":"                : null;","lastModifiedDate":"2022-10-27"},{"lineNumber":41,"author":{"gitId":"TanWenCong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":42,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":43,"author":{"gitId":"TanWenCong"},"content":"    @Test","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"TanWenCong"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"TanWenCong"},"content":"        assertFalse(readBobaBot(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2022-10-27"},{"lineNumber":46,"author":{"gitId":"TanWenCong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":47,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":48,"author":{"gitId":"TanWenCong"},"content":"    @Test","lastModifiedDate":"2022-10-27"},{"lineNumber":49,"author":{"gitId":"TanWenCong"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2022-10-27"},{"lineNumber":50,"author":{"gitId":"TanWenCong"},"content":"        assertThrows(DataConversionException.class, () -\u003e readBobaBot(\"notJsonFormatBobaBot.json\"));","lastModifiedDate":"2022-10-27"},{"lineNumber":51,"author":{"gitId":"TanWenCong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":52,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":53,"author":{"gitId":"TanWenCong"},"content":"    @Test","lastModifiedDate":"2022-10-27"},{"lineNumber":54,"author":{"gitId":"TanWenCong"},"content":"    public void readBobaBot_invalidPersonBobaBot_throwDataConversionException() {","lastModifiedDate":"2022-10-27"},{"lineNumber":55,"author":{"gitId":"TanWenCong"},"content":"        assertThrows(DataConversionException.class, () -\u003e readBobaBot(\"invalidCustomerBobaBot.json\"));","lastModifiedDate":"2022-10-27"},{"lineNumber":56,"author":{"gitId":"TanWenCong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":57,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":58,"author":{"gitId":"TanWenCong"},"content":"    @Test","lastModifiedDate":"2022-10-27"},{"lineNumber":59,"author":{"gitId":"TanWenCong"},"content":"    public void readBobaBot_invalidAndValidPersonBobaBot_throwDataConversionException() {","lastModifiedDate":"2022-10-27"},{"lineNumber":60,"author":{"gitId":"TanWenCong"},"content":"        assertThrows(DataConversionException.class, () -\u003e readBobaBot(\"invalidAndValidCustomerBobaBot.json\"));","lastModifiedDate":"2022-10-27"},{"lineNumber":61,"author":{"gitId":"TanWenCong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":62,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":63,"author":{"gitId":"TanWenCong"},"content":"    @Test","lastModifiedDate":"2022-10-27"},{"lineNumber":64,"author":{"gitId":"TanWenCong"},"content":"    public void readAndSaveBobaBot_allInOrder_success() throws Exception {","lastModifiedDate":"2022-10-27"},{"lineNumber":65,"author":{"gitId":"TanWenCong"},"content":"        Path filePath \u003d testFolder.resolve(\"TempBobaBot.json\");","lastModifiedDate":"2022-10-27"},{"lineNumber":66,"author":{"gitId":"TanWenCong"},"content":"        BobaBot original \u003d getTypicalBobaBot();","lastModifiedDate":"2022-10-27"},{"lineNumber":67,"author":{"gitId":"TanWenCong"},"content":"        JsonBobaBotStorage jsonBobaBotStorage \u003d new JsonBobaBotStorage(filePath);","lastModifiedDate":"2022-10-27"},{"lineNumber":68,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":69,"author":{"gitId":"TanWenCong"},"content":"        // Save in new file and read back","lastModifiedDate":"2022-10-27"},{"lineNumber":70,"author":{"gitId":"TanWenCong"},"content":"        jsonBobaBotStorage.saveBobaBot(original, filePath);","lastModifiedDate":"2022-10-27"},{"lineNumber":71,"author":{"gitId":"TanWenCong"},"content":"        ReadOnlyBobaBot readBack \u003d jsonBobaBotStorage.readBobaBot(filePath).get();","lastModifiedDate":"2022-10-27"},{"lineNumber":72,"author":{"gitId":"TanWenCong"},"content":"        assertEquals(original, new BobaBot(readBack));","lastModifiedDate":"2022-10-27"},{"lineNumber":73,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":74,"author":{"gitId":"TanWenCong"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2022-10-27"},{"lineNumber":75,"author":{"gitId":"TanWenCong"},"content":"        original.addPerson(HOON);","lastModifiedDate":"2022-10-27"},{"lineNumber":76,"author":{"gitId":"TanWenCong"},"content":"        original.removePerson(ALICE);","lastModifiedDate":"2022-10-27"},{"lineNumber":77,"author":{"gitId":"TanWenCong"},"content":"        jsonBobaBotStorage.saveBobaBot(original, filePath);","lastModifiedDate":"2022-10-27"},{"lineNumber":78,"author":{"gitId":"TanWenCong"},"content":"        readBack \u003d jsonBobaBotStorage.readBobaBot(filePath).get();","lastModifiedDate":"2022-10-27"},{"lineNumber":79,"author":{"gitId":"TanWenCong"},"content":"        assertEquals(original, new BobaBot(readBack));","lastModifiedDate":"2022-10-27"},{"lineNumber":80,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":81,"author":{"gitId":"TanWenCong"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2022-10-27"},{"lineNumber":82,"author":{"gitId":"TanWenCong"},"content":"        original.addPerson(IDA);","lastModifiedDate":"2022-10-27"},{"lineNumber":83,"author":{"gitId":"TanWenCong"},"content":"        jsonBobaBotStorage.saveBobaBot(original); // file path not specified","lastModifiedDate":"2022-10-27"},{"lineNumber":84,"author":{"gitId":"TanWenCong"},"content":"        readBack \u003d jsonBobaBotStorage.readBobaBot().get(); // file path not specified","lastModifiedDate":"2022-10-27"},{"lineNumber":85,"author":{"gitId":"TanWenCong"},"content":"        assertEquals(original, new BobaBot(readBack));","lastModifiedDate":"2022-10-27"},{"lineNumber":86,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":87,"author":{"gitId":"TanWenCong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":88,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":89,"author":{"gitId":"TanWenCong"},"content":"    @Test","lastModifiedDate":"2022-10-27"},{"lineNumber":90,"author":{"gitId":"TanWenCong"},"content":"    public void saveBobaBot_nullBobaBot_throwsNullPointerException() {","lastModifiedDate":"2022-10-27"},{"lineNumber":91,"author":{"gitId":"TanWenCong"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveBobaBot(null, \"SomeFile.json\"));","lastModifiedDate":"2022-10-27"},{"lineNumber":92,"author":{"gitId":"TanWenCong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":93,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":94,"author":{"gitId":"TanWenCong"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":95,"author":{"gitId":"TanWenCong"},"content":"     * Saves {@code bobaBot} at the specified {@code filePath}.","lastModifiedDate":"2022-10-27"},{"lineNumber":96,"author":{"gitId":"TanWenCong"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":97,"author":{"gitId":"TanWenCong"},"content":"    private void saveBobaBot(ReadOnlyBobaBot bobaBot, String filePath) {","lastModifiedDate":"2022-10-27"},{"lineNumber":98,"author":{"gitId":"TanWenCong"},"content":"        try {","lastModifiedDate":"2022-10-27"},{"lineNumber":99,"author":{"gitId":"TanWenCong"},"content":"            new JsonBobaBotStorage(Paths.get(filePath))","lastModifiedDate":"2022-10-27"},{"lineNumber":100,"author":{"gitId":"TanWenCong"},"content":"                    .saveBobaBot(bobaBot, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2022-10-27"},{"lineNumber":101,"author":{"gitId":"TanWenCong"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2022-10-27"},{"lineNumber":102,"author":{"gitId":"TanWenCong"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2022-10-27"},{"lineNumber":103,"author":{"gitId":"TanWenCong"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":104,"author":{"gitId":"TanWenCong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":105,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":106,"author":{"gitId":"TanWenCong"},"content":"    @Test","lastModifiedDate":"2022-10-27"},{"lineNumber":107,"author":{"gitId":"TanWenCong"},"content":"    public void saveBobaBot_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2022-10-27"},{"lineNumber":108,"author":{"gitId":"TanWenCong"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveBobaBot(new BobaBot(), null));","lastModifiedDate":"2022-10-27"},{"lineNumber":109,"author":{"gitId":"TanWenCong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":110,"author":{"gitId":"TanWenCong"},"content":"}","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"TanWenCong":110}},{"path":"src/test/java/seedu/boba/storage/JsonSerializableBobaBotTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.storage;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"TanWenCong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"TanWenCong"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"TanWenCong"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"TanWenCong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.commons.util.JsonUtil;","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.BobaBot;","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.testutil.TypicalCustomers;","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"TanWenCong"},"content":"public class JsonSerializableBobaBotTest {","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"TanWenCong"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableBobaBotTest\");","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"TanWenCong"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalCustomersBobaBot.json\");","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"TanWenCong"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidCustomerBobaBot.json\");","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"TanWenCong"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateCustomerBobaBot.json\");","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"TanWenCong"},"content":"    @Test","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"TanWenCong"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"TanWenCong"},"content":"        JsonSerializableBobaBot dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"TanWenCong"},"content":"                JsonSerializableBobaBot.class).get();","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"TanWenCong"},"content":"        BobaBot bobaBotFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"TanWenCong"},"content":"        BobaBot typicalPersonsBobaBot \u003d TypicalCustomers.getTypicalBobaBot();","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"TanWenCong"},"content":"        assertEquals(bobaBotFromFile, typicalPersonsBobaBot);","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"TanWenCong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"TanWenCong"},"content":"    @Test","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"TanWenCong"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2022-10-27"},{"lineNumber":34,"author":{"gitId":"TanWenCong"},"content":"        JsonSerializableBobaBot dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"TanWenCong"},"content":"                JsonSerializableBobaBot.class).get();","lastModifiedDate":"2022-10-27"},{"lineNumber":36,"author":{"gitId":"TanWenCong"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"TanWenCong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":38,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"TanWenCong"},"content":"    @Test","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"TanWenCong"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2022-10-27"},{"lineNumber":41,"author":{"gitId":"TanWenCong"},"content":"        JsonSerializableBobaBot dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2022-10-27"},{"lineNumber":42,"author":{"gitId":"TanWenCong"},"content":"                JsonSerializableBobaBot.class).get();","lastModifiedDate":"2022-10-27"},{"lineNumber":43,"author":{"gitId":"TanWenCong"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableBobaBot.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"TanWenCong"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"TanWenCong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":46,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":47,"author":{"gitId":"TanWenCong"},"content":"}","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"TanWenCong":47}},{"path":"src/test/java/seedu/boba/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.storage;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.commons.core.GuiSettings;","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.UserPrefs;","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"TanWenCong"},"content":"        userPrefs.setBobaBotFilePath(Paths.get(\"data/bobabot.json\"));","lastModifiedDate":"2022-10-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"TanWenCong":6,"-":117}},{"path":"src/test/java/seedu/boba/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.storage;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.testutil.TypicalCustomers.getTypicalBobaBot;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.commons.core.GuiSettings;","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.BobaBot;","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.ReadOnlyBobaBot;","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.UserPrefs;","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"TanWenCong"},"content":"        JsonBobaBotStorage bobaBotStorage \u003d new JsonBobaBotStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"TanWenCong"},"content":"        storageManager \u003d new StorageManager(bobaBotStorage, userPrefsStorage);","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"TanWenCong"},"content":"    public void bobaBotReadSave() throws Exception {","lastModifiedDate":"2022-10-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"TanWenCong"},"content":"         * {@link JsonBobaBotStorage} class.","lastModifiedDate":"2022-10-27"},{"lineNumber":55,"author":{"gitId":"TanWenCong"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonBobaBotStorageTest} class.","lastModifiedDate":"2022-10-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"TanWenCong"},"content":"        BobaBot original \u003d getTypicalBobaBot();","lastModifiedDate":"2022-10-27"},{"lineNumber":58,"author":{"gitId":"TanWenCong"},"content":"        storageManager.saveBobaBot(original);","lastModifiedDate":"2022-10-27"},{"lineNumber":59,"author":{"gitId":"TanWenCong"},"content":"        ReadOnlyBobaBot retrieved \u003d storageManager.readBobaBot().get();","lastModifiedDate":"2022-10-27"},{"lineNumber":60,"author":{"gitId":"TanWenCong"},"content":"        assertEquals(original, new BobaBot(retrieved));","lastModifiedDate":"2022-10-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"TanWenCong"},"content":"    public void getBobaBotFilePath() {","lastModifiedDate":"2022-10-27"},{"lineNumber":65,"author":{"gitId":"TanWenCong"},"content":"        assertNotNull(storageManager.getBobaBotFilePath());","lastModifiedDate":"2022-10-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"TanWenCong":17,"-":51}},{"path":"src/test/java/seedu/boba/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.testutil;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2019-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2019-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2017-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Assert {","lastModifiedDate":"2017-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2019-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency","lastModifiedDate":"2019-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2019-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2019-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2019-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2019-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2019-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2019-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2019-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2019-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-17"}],"authorContributionMap":{"TanWenCong":1,"-":33}},{"path":"src/test/java/seedu/boba/testutil/BobaBotBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.testutil;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.BobaBot;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Customer;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"TanWenCong"},"content":"/**","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"TanWenCong"},"content":" * A utility class to help with building BobaBot objects.","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"TanWenCong"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"TanWenCong"},"content":" *     {@code BobaBot ab \u003d new BobaBotBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"TanWenCong"},"content":" */","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"TanWenCong"},"content":"public class BobaBotBuilder {","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"TanWenCong"},"content":"    private BobaBot bobaBot;","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"TanWenCong"},"content":"    public BobaBotBuilder() {","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"TanWenCong"},"content":"        bobaBot \u003d new BobaBot();","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"TanWenCong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"TanWenCong"},"content":"    public BobaBotBuilder(BobaBot bobaBot) {","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"TanWenCong"},"content":"        this.bobaBot \u003d bobaBot;","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"TanWenCong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"TanWenCong"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"TanWenCong"},"content":"     * Adds a new {@code Customer} to the {@code BobaBot} that we are building.","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"TanWenCong"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"TanWenCong"},"content":"    public BobaBotBuilder withPerson(Customer customer) {","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"TanWenCong"},"content":"        bobaBot.addPerson(customer);","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"TanWenCong"},"content":"        return this;","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"TanWenCong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"TanWenCong"},"content":"    public BobaBot build() {","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"TanWenCong"},"content":"        return bobaBot;","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"TanWenCong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":34,"author":{"gitId":"TanWenCong"},"content":"}","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"TanWenCong":34}},{"path":"src/test/java/seedu/boba/testutil/CustomerBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.testutil;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.BirthdayMonth;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Customer;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Email;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Name;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Phone;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Reward;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.tag.Tag;","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.util.SampleDataUtil;","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":16,"author":{"gitId":"Samsation"},"content":" * A utility class to help with building Customer objects.","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"Samsation"},"content":"public class CustomerBuilder {","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":23,"author":{"gitId":"TanWenCong"},"content":"    public static final String DEFAULT_BIRTHDAY_MONTH \u003d \"1\";","lastModifiedDate":"2022-10-24"},{"lineNumber":24,"author":{"gitId":"Samsation"},"content":"    public static final String DEFAULT_REWARD \u003d \"6900\";","lastModifiedDate":"2022-10-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"TanWenCong"},"content":"    private BirthdayMonth birthdayMonth;","lastModifiedDate":"2022-10-24"},{"lineNumber":30,"author":{"gitId":"Samsation"},"content":"    private Reward reward;","lastModifiedDate":"2022-10-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"Samsation"},"content":"     * Creates a {@code CustomerBuilder} with the default details.","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"Samsation"},"content":"    public CustomerBuilder() {","lastModifiedDate":"2022-10-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"TanWenCong"},"content":"        birthdayMonth \u003d new BirthdayMonth(DEFAULT_BIRTHDAY_MONTH);","lastModifiedDate":"2022-10-24"},{"lineNumber":41,"author":{"gitId":"Samsation"},"content":"        reward \u003d new Reward(DEFAULT_REWARD);","lastModifiedDate":"2022-10-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":46,"author":{"gitId":"Samsation"},"content":"     * Initializes the CustomerBuilder with the data of {@code customerToCopy}.","lastModifiedDate":"2022-10-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":48,"author":{"gitId":"Samsation"},"content":"    public CustomerBuilder(Customer customerToCopy) {","lastModifiedDate":"2022-10-26"},{"lineNumber":49,"author":{"gitId":"Samsation"},"content":"        name \u003d customerToCopy.getName();","lastModifiedDate":"2022-10-26"},{"lineNumber":50,"author":{"gitId":"Samsation"},"content":"        phone \u003d customerToCopy.getPhone();","lastModifiedDate":"2022-10-26"},{"lineNumber":51,"author":{"gitId":"Samsation"},"content":"        email \u003d customerToCopy.getEmail();","lastModifiedDate":"2022-10-26"},{"lineNumber":52,"author":{"gitId":"Samsation"},"content":"        birthdayMonth \u003d customerToCopy.getBirthdayMonth();","lastModifiedDate":"2022-10-26"},{"lineNumber":53,"author":{"gitId":"Samsation"},"content":"        reward \u003d customerToCopy.getReward();","lastModifiedDate":"2022-10-26"},{"lineNumber":54,"author":{"gitId":"Samsation"},"content":"        tags \u003d new HashSet\u003c\u003e(customerToCopy.getTags());","lastModifiedDate":"2022-10-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":58,"author":{"gitId":"Samsation"},"content":"     * Sets the {@code Name} of the {@code Customer} that we are building.","lastModifiedDate":"2022-10-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"Samsation"},"content":"    public CustomerBuilder withName(String name) {","lastModifiedDate":"2022-10-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"Samsation"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Customer} that we are building.","lastModifiedDate":"2022-10-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"Samsation"},"content":"    public CustomerBuilder withTags(String ... tags) {","lastModifiedDate":"2022-10-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":74,"author":{"gitId":"Samsation"},"content":"     * Sets the {@code Reward} of the {@code Customer} that we are building.","lastModifiedDate":"2022-10-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"Samsation"},"content":"    public CustomerBuilder withReward(String reward) {","lastModifiedDate":"2022-10-26"},{"lineNumber":77,"author":{"gitId":"Samsation"},"content":"        this.reward \u003d new Reward(reward);","lastModifiedDate":"2022-10-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":81,"author":{"gitId":"TanWenCong"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":82,"author":{"gitId":"Samsation"},"content":"     * Sets the {@code BirthdayMonth} of the {@code Customer} that we are building.","lastModifiedDate":"2022-10-26"},{"lineNumber":83,"author":{"gitId":"TanWenCong"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":84,"author":{"gitId":"Samsation"},"content":"    public CustomerBuilder withBirthdayMonth(String birthdayMonth) {","lastModifiedDate":"2022-10-26"},{"lineNumber":85,"author":{"gitId":"TanWenCong"},"content":"        this.birthdayMonth \u003d new BirthdayMonth(birthdayMonth);","lastModifiedDate":"2022-10-24"},{"lineNumber":86,"author":{"gitId":"TanWenCong"},"content":"        return this;","lastModifiedDate":"2022-10-24"},{"lineNumber":87,"author":{"gitId":"TanWenCong"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":88,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":90,"author":{"gitId":"Samsation"},"content":"     * Sets the {@code Phone} of the {@code Customer} that we are building.","lastModifiedDate":"2022-10-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":92,"author":{"gitId":"Samsation"},"content":"    public CustomerBuilder withPhone(String phone) {","lastModifiedDate":"2022-10-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":98,"author":{"gitId":"Samsation"},"content":"     * Sets the {@code Email} of the {@code Customer} that we are building.","lastModifiedDate":"2022-10-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":100,"author":{"gitId":"Samsation"},"content":"    public CustomerBuilder withEmail(String email) {","lastModifiedDate":"2022-10-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":105,"author":{"gitId":"Samsation"},"content":"    public Customer build() {","lastModifiedDate":"2022-10-26"},{"lineNumber":106,"author":{"gitId":"Samsation"},"content":"        return new Customer(name, phone, email, birthdayMonth, reward, tags);","lastModifiedDate":"2022-10-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"Samsation":30,"TanWenCong":18,"-":61}},{"path":"src/test/java/seedu/boba/testutil/CustomerUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.testutil;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.parser.CliSyntax.PREFIX_BIRTHDAY_MONTH;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.parser.CliSyntax.PREFIX_REWARD;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":12,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.logic.commands.AddCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Customer;","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.tag.Tag;","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"Samsation"},"content":" * A utility class for Customer.","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"Samsation"},"content":"public class CustomerUtil {","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"Samsation"},"content":"     * Returns an add command string for adding the {@code customer}.","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"Samsation"},"content":"    public static String getAddCommand(Customer customer) {","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"Samsation"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(customer);","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"Samsation"},"content":"     * Returns the part of command string for the given {@code customer}\u0027s details.","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"Samsation"},"content":"    public static String getPersonDetails(Customer customer) {","lastModifiedDate":"2022-10-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"Samsation"},"content":"        sb.append(PREFIX_NAME + customer.getName().fullName + \" \");","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"Samsation"},"content":"        sb.append(PREFIX_PHONE + customer.getPhone().value + \" \");","lastModifiedDate":"2022-10-26"},{"lineNumber":36,"author":{"gitId":"Samsation"},"content":"        sb.append(PREFIX_EMAIL + customer.getEmail().value + \" \");","lastModifiedDate":"2022-10-26"},{"lineNumber":37,"author":{"gitId":"Samsation"},"content":"        sb.append(PREFIX_BIRTHDAY_MONTH + customer.getBirthdayMonth().value + \" \");","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"Samsation"},"content":"        sb.append(PREFIX_REWARD + customer.getReward().value + \" \");","lastModifiedDate":"2022-10-26"},{"lineNumber":39,"author":{"gitId":"Samsation"},"content":"        customer.getTags().stream().forEach(","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"TanWenCong"},"content":"        descriptor.getBirthdayMonth().ifPresent(","lastModifiedDate":"2022-10-24"},{"lineNumber":54,"author":{"gitId":"TanWenCong"},"content":"            birthdayMonth -\u003e sb.append(PREFIX_BIRTHDAY_MONTH).append(birthdayMonth.value).append(\" \"));","lastModifiedDate":"2022-10-24"},{"lineNumber":55,"author":{"gitId":"Samsation"},"content":"        descriptor.getReward().ifPresent(reward -\u003e sb.append(PREFIX_REWARD).append(reward.value).append(\" \"));","lastModifiedDate":"2022-10-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"Samsation":14,"TanWenCong":13,"-":39}},{"path":"src/test/java/seedu/boba/testutil/EditCustomerDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.testutil;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.BirthdayMonth;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Customer;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Email;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Name;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Phone;","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Reward;","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.tag.Tag;","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"Samsation"},"content":"public class EditCustomerDescriptorBuilder {","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"Samsation"},"content":"    public EditCustomerDescriptorBuilder() {","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"Samsation"},"content":"    public EditCustomerDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"Samsation"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code customer}\u0027s details","lastModifiedDate":"2022-10-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"Samsation"},"content":"    public EditCustomerDescriptorBuilder(Customer customer) {","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"Samsation"},"content":"        descriptor.setName(customer.getName());","lastModifiedDate":"2022-10-26"},{"lineNumber":37,"author":{"gitId":"Samsation"},"content":"        descriptor.setPhone(customer.getPhone());","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"Samsation"},"content":"        descriptor.setEmail(customer.getEmail());","lastModifiedDate":"2022-10-26"},{"lineNumber":39,"author":{"gitId":"Samsation"},"content":"        descriptor.setReward(customer.getReward());","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"Samsation"},"content":"        descriptor.setTags(customer.getTags());","lastModifiedDate":"2022-10-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":46,"author":{"gitId":"Samsation"},"content":"    public EditCustomerDescriptorBuilder withName(String name) {","lastModifiedDate":"2022-10-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":54,"author":{"gitId":"Samsation"},"content":"    public EditCustomerDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2022-10-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"Samsation"},"content":"    public EditCustomerDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2022-10-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"TanWenCong"},"content":"     * Sets the {@code BirthdayMonth} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2022-10-24"},{"lineNumber":69,"author":{"gitId":"TanWenCong"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":70,"author":{"gitId":"Samsation"},"content":"    public EditCustomerDescriptorBuilder withBirthdayMonth(String birthdayMonth) {","lastModifiedDate":"2022-10-26"},{"lineNumber":71,"author":{"gitId":"TanWenCong"},"content":"        descriptor.setBirthdayMonth(new BirthdayMonth(birthdayMonth));","lastModifiedDate":"2022-10-24"},{"lineNumber":72,"author":{"gitId":"TanWenCong"},"content":"        return this;","lastModifiedDate":"2022-10-24"},{"lineNumber":73,"author":{"gitId":"TanWenCong"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":74,"author":{"gitId":"TanWenCong"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":75,"author":{"gitId":"TanWenCong"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":76,"author":{"gitId":"TanWenCong"},"content":"     * Sets the {@code Reward} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2022-10-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"Samsation"},"content":"    public EditCustomerDescriptorBuilder withReward(String address) {","lastModifiedDate":"2022-10-26"},{"lineNumber":79,"author":{"gitId":"Samsation"},"content":"        descriptor.setReward(new Reward(address));","lastModifiedDate":"2022-10-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"Samsation"},"content":"    public EditCustomerDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2022-10-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"Samsation":17,"TanWenCong":17,"-":62}},{"path":"src/test/java/seedu/boba/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.testutil;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A class used to test serialization and deserialization","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SerializableTestClass {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2016-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"  }%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"}\");","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String name;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getNameTestValue() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return NAME_TEST_VALUE;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d getNameTestValue();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"TanWenCong":1,"-":71}},{"path":"src/test/java/seedu/boba/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.testutil;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"albertZhangTJ"},"content":"import seedu.boba.commons.core.index.Index;","lastModifiedDate":"2022-10-31"},{"lineNumber":9,"author":{"gitId":"albertZhangTJ"},"content":"import seedu.boba.model.BobaBotModel;","lastModifiedDate":"2022-10-31"},{"lineNumber":10,"author":{"gitId":"albertZhangTJ"},"content":"import seedu.boba.model.customer.Customer;","lastModifiedDate":"2022-10-31"},{"lineNumber":11,"author":{"gitId":"albertZhangTJ"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"albertZhangTJ"},"content":"     * Returns the middle index of the customer in the {@code bobaBotModel}\u0027s customer list.","lastModifiedDate":"2022-10-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"albertZhangTJ"},"content":"    public static Index getMidIndex(BobaBotModel bobaBotModel) {","lastModifiedDate":"2022-10-31"},{"lineNumber":39,"author":{"gitId":"albertZhangTJ"},"content":"        return Index.fromOneBased(bobaBotModel.getFilteredPersonList().size() / 2);","lastModifiedDate":"2022-10-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"albertZhangTJ"},"content":"     * Returns the last index of the customer in the {@code bobaBotModel}\u0027s customer list.","lastModifiedDate":"2022-10-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"albertZhangTJ"},"content":"    public static Index getLastIndex(BobaBotModel bobaBotModel) {","lastModifiedDate":"2022-10-31"},{"lineNumber":46,"author":{"gitId":"albertZhangTJ"},"content":"        return Index.fromOneBased(bobaBotModel.getFilteredPersonList().size());","lastModifiedDate":"2022-10-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"albertZhangTJ"},"content":"     * Returns the customer in the {@code bobaBotModel}\u0027s customer list at {@code index}.","lastModifiedDate":"2022-10-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"albertZhangTJ"},"content":"    public static Customer getPerson(BobaBotModel bobaBotModel, Index index) {","lastModifiedDate":"2022-10-31"},{"lineNumber":53,"author":{"gitId":"albertZhangTJ"},"content":"        return bobaBotModel.getFilteredPersonList().get(index.getZeroBased());","lastModifiedDate":"2022-10-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"TanWenCong":1,"albertZhangTJ":13,"-":41}},{"path":"src/test/java/seedu/boba/testutil/TypicalCustomers.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.testutil;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.VALID_BIRTHDAY_MONTH_AMY;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.VALID_BIRTHDAY_MONTH_BOB;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.VALID_REWARD_AMY;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.VALID_REWARD_BOB;","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.VALID_TAG_GOLD;","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.logic.commands.CommandTestUtil.VALID_TAG_MEMBER;","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":20,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.BobaBot;","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Customer;","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"Samsation"},"content":" * A utility class containing a list of {@code Customer} objects to be used in tests.","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"Samsation"},"content":"public class TypicalCustomers {","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":28,"author":{"gitId":"Samsation"},"content":"    public static final Customer ALICE \u003d new CustomerBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"TanWenCong"},"content":"            .withBirthdayMonth(\"1\").withReward(\"123\").withEmail(\"alice@example.com\")","lastModifiedDate":"2022-10-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":32,"author":{"gitId":"Samsation"},"content":"    public static final Customer ALICE_INCREMENT \u003d new CustomerBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2022-10-26"},{"lineNumber":33,"author":{"gitId":"Samsation"},"content":"            .withReward(\"223\").withEmail(\"alice@example.com\")","lastModifiedDate":"2022-10-24"},{"lineNumber":34,"author":{"gitId":"Samsation"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2022-10-24"},{"lineNumber":35,"author":{"gitId":"Samsation"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2022-10-24"},{"lineNumber":36,"author":{"gitId":"Samsation"},"content":"    public static final Customer ALICE_DECREMENT \u003d new CustomerBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2022-10-26"},{"lineNumber":37,"author":{"gitId":"Samsation"},"content":"            .withReward(\"23\").withEmail(\"alice@example.com\")","lastModifiedDate":"2022-10-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":40,"author":{"gitId":"Samsation"},"content":"    public static final Customer BENSON \u003d new CustomerBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2022-10-26"},{"lineNumber":41,"author":{"gitId":"TanWenCong"},"content":"            .withBirthdayMonth(\"2\").withReward(\"456\")","lastModifiedDate":"2022-10-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":44,"author":{"gitId":"Samsation"},"content":"    public static final Customer CARL \u003d new CustomerBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2022-10-26"},{"lineNumber":45,"author":{"gitId":"TanWenCong"},"content":"            .withEmail(\"heinz@example.com\").withBirthdayMonth(\"3\").withReward(\"789\").build();","lastModifiedDate":"2022-10-24"},{"lineNumber":46,"author":{"gitId":"Samsation"},"content":"    public static final Customer DANIEL \u003d new CustomerBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2022-10-26"},{"lineNumber":47,"author":{"gitId":"TanWenCong"},"content":"            .withEmail(\"cornelia@example.com\").withBirthdayMonth(\"4\").withReward(\"101112\").withTags(\"friends\").build();","lastModifiedDate":"2022-10-24"},{"lineNumber":48,"author":{"gitId":"Samsation"},"content":"    public static final Customer ELLE \u003d new CustomerBuilder().withName(\"Elle Meyer\").withPhone(\"94822241\")","lastModifiedDate":"2022-10-26"},{"lineNumber":49,"author":{"gitId":"TanWenCong"},"content":"            .withEmail(\"werner@example.com\").withBirthdayMonth(\"5\").withReward(\"131415\").build();","lastModifiedDate":"2022-10-24"},{"lineNumber":50,"author":{"gitId":"Samsation"},"content":"    public static final Customer FIONA \u003d new CustomerBuilder().withName(\"Fiona Kunz\").withPhone(\"94824271\")","lastModifiedDate":"2022-10-26"},{"lineNumber":51,"author":{"gitId":"TanWenCong"},"content":"            .withEmail(\"lydia@example.com\").withBirthdayMonth(\"6\").withReward(\"161718\").build();","lastModifiedDate":"2022-10-24"},{"lineNumber":52,"author":{"gitId":"Samsation"},"content":"    public static final Customer GEORGE \u003d new CustomerBuilder().withName(\"George Best\").withPhone(\"94824421\")","lastModifiedDate":"2022-10-26"},{"lineNumber":53,"author":{"gitId":"TanWenCong"},"content":"            .withEmail(\"anna@example.com\").withBirthdayMonth(\"7\").withReward(\"192021\").build();","lastModifiedDate":"2022-10-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":56,"author":{"gitId":"Samsation"},"content":"    public static final Customer HOON \u003d new CustomerBuilder().withName(\"Hoon Meier\").withPhone(\"84824241\")","lastModifiedDate":"2022-10-26"},{"lineNumber":57,"author":{"gitId":"TanWenCong"},"content":"            .withEmail(\"stefan@example.com\").withBirthdayMonth(\"8\").withReward(\"222324\").build();","lastModifiedDate":"2022-10-24"},{"lineNumber":58,"author":{"gitId":"Samsation"},"content":"    public static final Customer IDA \u003d new CustomerBuilder().withName(\"Ida Mueller\").withPhone(\"84821311\")","lastModifiedDate":"2022-10-26"},{"lineNumber":59,"author":{"gitId":"TanWenCong"},"content":"            .withEmail(\"hans@example.com\").withBirthdayMonth(\"9\").withReward(\"252627\").build();","lastModifiedDate":"2022-10-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":61,"author":{"gitId":"Samsation"},"content":"    // Manually added - Customer\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2022-10-26"},{"lineNumber":62,"author":{"gitId":"Samsation"},"content":"    public static final Customer AMY \u003d new CustomerBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2022-10-26"},{"lineNumber":63,"author":{"gitId":"TanWenCong"},"content":"            .withEmail(VALID_EMAIL_AMY).withBirthdayMonth(VALID_BIRTHDAY_MONTH_AMY)","lastModifiedDate":"2022-10-24"},{"lineNumber":64,"author":{"gitId":"TanWenCong"},"content":"            .withReward(VALID_REWARD_AMY).withTags(VALID_TAG_MEMBER).build();","lastModifiedDate":"2022-10-24"},{"lineNumber":65,"author":{"gitId":"Samsation"},"content":"    public static final Customer BOB \u003d new CustomerBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-10-26"},{"lineNumber":66,"author":{"gitId":"TanWenCong"},"content":"            .withEmail(VALID_EMAIL_BOB).withBirthdayMonth(VALID_BIRTHDAY_MONTH_BOB)","lastModifiedDate":"2022-10-24"},{"lineNumber":67,"author":{"gitId":"TanWenCong"},"content":"            .withReward(VALID_REWARD_BOB).withTags(VALID_TAG_GOLD, VALID_TAG_MEMBER).build();","lastModifiedDate":"2022-10-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":71,"author":{"gitId":"Samsation"},"content":"    private TypicalCustomers() {} // prevents instantiation","lastModifiedDate":"2022-10-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":74,"author":{"gitId":"TanWenCong"},"content":"     * Returns an {@code BobaBot} with all the typical persons.","lastModifiedDate":"2022-10-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"TanWenCong"},"content":"    public static BobaBot getTypicalBobaBot() {","lastModifiedDate":"2022-10-27"},{"lineNumber":77,"author":{"gitId":"TanWenCong"},"content":"        BobaBot ab \u003d new BobaBot();","lastModifiedDate":"2022-10-27"},{"lineNumber":78,"author":{"gitId":"Samsation"},"content":"        for (Customer customer : getTypicalPersons()) {","lastModifiedDate":"2022-10-26"},{"lineNumber":79,"author":{"gitId":"Samsation"},"content":"            ab.addPerson(customer);","lastModifiedDate":"2022-10-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":84,"author":{"gitId":"Samsation"},"content":"    public static List\u003cCustomer\u003e getTypicalPersons() {","lastModifiedDate":"2022-10-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"Samsation":24,"TanWenCong":31,"-":32}},{"path":"src/test/java/seedu/boba/testutil/TypicalEmails.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.testutil;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Email;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"Samsation"},"content":"/**","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"Samsation"},"content":" * A utility class containing a list of {@code Email} objects to be used in tests.","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"Samsation"},"content":" */","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"Samsation"},"content":"public class TypicalEmails {","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"Samsation"},"content":"    public static final Email EMAIL_FIRST_PERSON \u003d new Email(\"alice@example.com\");","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"Samsation"},"content":"    public static final Email EMAIL_SECOND_PERSON \u003d new Email(\"johnd@example.com\");","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"Samsation"},"content":"    public static final Email EMAIL_THIRD_PERSON \u003d new Email(\"heinz@example.com\");","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"Samsation"},"content":"}","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"Samsation":10,"TanWenCong":2}},{"path":"src/test/java/seedu/boba/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.testutil;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.commons.core.index.Index;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"TanWenCong":2,"-":10}},{"path":"src/test/java/seedu/boba/testutil/TypicalPhones.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.testutil;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.model.customer.Phone;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"Samsation"},"content":"/**","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"Samsation"},"content":" * A utility class containing a list of {@code Phone} objects to be used in tests.","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"Samsation"},"content":" */","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"Samsation"},"content":"public class TypicalPhones {","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"Samsation"},"content":"    public static final Phone PHONE_FIRST_PERSON \u003d new Phone(\"94351253\");","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"Samsation"},"content":"    public static final Phone PHONE_SECOND_PERSON \u003d new Phone(\"98765432\");","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"Samsation"},"content":"    public static final Phone PHONE_THIRD_PERSON \u003d new Phone(\"95352563\");","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"Samsation"},"content":"}","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"Samsation":10,"TanWenCong":2}},{"path":"src/test/java/seedu/boba/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.ui;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.beans.DefaultProperty;","lastModifiedDate":"2016-12-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A test object which can be constructed via an FXML file.","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@DefaultProperty(\"text\")","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class TestFxmlObject {","lastModifiedDate":"2016-12-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private String text;","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public TestFxmlObject() {}","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public TestFxmlObject(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        setText(text);","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return text;","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setText(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.text \u003d text;","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-04-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                || (other instanceof TestFxmlObject // instanceof handles nulls","lastModifiedDate":"2017-04-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                        \u0026\u0026 text.equals(((TestFxmlObject) other).getText()));","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"TanWenCong":1,"-":34}},{"path":"src/test/java/seedu/boba/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TanWenCong"},"content":"package seedu.boba.ui;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"TanWenCong"},"content":"import static seedu.boba.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"TanWenCong"},"content":"import seedu.boba.MainApp;","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UiPartTest {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2016-12-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2016-12-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2016-12-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2016-12-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2019-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return testFileUrl;","lastModifiedDate":"2016-12-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * UiPart used for testing.","lastModifiedDate":"2016-12-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * It should only be used with invalid FXML files or the valid file located at {@link VALID_FILE_PATH}.","lastModifiedDate":"2016-12-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @FXML","lastModifiedDate":"2016-12-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2016-12-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2016-12-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","lastModifiedDate":"2016-12-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"TanWenCong":3,"-":111}},{"path":"src/test/resources/view/UiPartTest/validFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"TanWenCong"},"content":"\u003c?import seedu.boba.ui.TestFxmlObject?\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"TanWenCong":1,"-":3}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":3,"author":{"gitId":"TanWenCong"},"content":"\u003cfx:root type\u003d\"seedu.boba.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx\"","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"TanWenCong":1,"-":5}}]
