[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"highorbit25"},"content":"[![CI Status](https://github.com/AY2223S1-CS2103T-W13-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S1-CS2103T-W13-1/tp/actions)","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":3,"author":{"gitId":"highorbit25"},"content":"StudMap (SM) is a desktop app for managing your students, optimized for use via a Command Line Interface (CLI)","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"dr-arrgghh"},"content":"while still having the benefits of a Graphical User Interface (GUI). If you can type fast, SM can get your student","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"dr-arrgghh"},"content":"management tasks done faster than traditional GUI apps.","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2022-11-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"highorbit25"},"content":"## Site Map","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"lpohsien"},"content":"* [About Us](https://ay2223s1-cs2103t-w13-1.github.io/tp/AboutUs.html)","lastModifiedDate":"2022-11-01"},{"lineNumber":12,"author":{"gitId":"lpohsien"},"content":"* [User Guide](https://ay2223s1-cs2103t-w13-1.github.io/tp/UserGuide.html)","lastModifiedDate":"2022-11-01"},{"lineNumber":13,"author":{"gitId":"lpohsien"},"content":"* [Developer Guide](https://ay2223s1-cs2103t-w13-1.github.io/tp/DeveloperGuide.html)","lastModifiedDate":"2022-11-01"},{"lineNumber":14,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":15,"author":{"gitId":"highorbit25"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2022-09-29"}],"authorContributionMap":{"highorbit25":6,"dr-arrgghh":3,"-":3,"lpohsien":3}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"comicalromance"},"content":"mainClassName \u003d \u0027seedu.studmap.Main\u0027","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"Piyotato"},"content":"run {","lastModifiedDate":"2022-10-20"},{"lineNumber":69,"author":{"gitId":"Piyotato"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-10-20"},{"lineNumber":70,"author":{"gitId":"Piyotato"},"content":"}","lastModifiedDate":"2022-10-20"},{"lineNumber":71,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":73,"author":{"gitId":"comicalromance"},"content":"    archiveFileName \u003d \u0027studmap.jar\u0027","lastModifiedDate":"2022-10-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Piyotato":4,"-":70,"comicalromance":2}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"comicalromance"},"content":"You can reach us at the email `e0773695@u.nus.edu`","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"comicalromance"},"content":"### Sheyuan Yeo","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"Piyotato"},"content":"\u003cimg src\u003d\"images/team-photos/piyotato.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"comicalromance"},"content":"[[github](https://github.com/Piyotato)]","lastModifiedDate":"2022-09-28"},{"lineNumber":17,"author":{"gitId":"comicalromance"},"content":"[[portfolio](team/piyotato.md)]","lastModifiedDate":"2022-11-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"comicalromance"},"content":"* Role: Developer","lastModifiedDate":"2022-09-28"},{"lineNumber":20,"author":{"gitId":"comicalromance"},"content":"* Responsibilities: Code Quality, Testing, Design expert","lastModifiedDate":"2022-11-07"},{"lineNumber":21,"author":{"gitId":"Piyotato"},"content":"* In Charge of: `EditStudentCommand`, `EditStudentCommandParser`, `IndexCommandParser`, `MultiStateAttribute`","lastModifiedDate":"2022-11-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"comicalromance"},"content":"### Silas Yeo Shuen Yu","lastModifiedDate":"2022-11-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"Piyotato"},"content":"\u003cimg src\u003d\"images/team-photos/comicalromance.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"comicalromance"},"content":"[[github](http://github.com/comicalromance)]","lastModifiedDate":"2022-09-28"},{"lineNumber":28,"author":{"gitId":"comicalromance"},"content":"[[portfolio](team/comicalromance.md)]","lastModifiedDate":"2022-11-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"comicalromance"},"content":"* Role: Developer","lastModifiedDate":"2022-09-28"},{"lineNumber":31,"author":{"gitId":"comicalromance"},"content":"* Responsibilities: JavaFX integration, Scheduling and Tracking","lastModifiedDate":"2022-11-07"},{"lineNumber":32,"author":{"gitId":"Piyotato"},"content":"* In Charge of: `Import`, `Mark`, `Module`","lastModifiedDate":"2022-11-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"comicalromance"},"content":"### Li, Po-Hsien","lastModifiedDate":"2022-11-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"Piyotato"},"content":"\u003cimg src\u003d\"images/team-photos/lpohsien.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"comicalromance"},"content":"[[github](http://github.com/lpohsien)]","lastModifiedDate":"2022-09-28"},{"lineNumber":39,"author":{"gitId":"comicalromance"},"content":"[[portfolio](team/lpohsien.md)]","lastModifiedDate":"2022-11-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"comicalromance"},"content":"* Responsibilities: Code Quality, Testing","lastModifiedDate":"2022-11-07"},{"lineNumber":43,"author":{"gitId":"Piyotato"},"content":"* In Charge of: `Tag`, `Grade`","lastModifiedDate":"2022-11-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"comicalromance"},"content":"### Lin Zizheng","lastModifiedDate":"2022-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"Piyotato"},"content":"\u003cimg src\u003d\"images/team-photos/dr-arrgghh.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"comicalromance"},"content":"[[github](http://github.com/dr-arrgghh)]","lastModifiedDate":"2022-09-28"},{"lineNumber":50,"author":{"gitId":"comicalromance"},"content":"[[portfolio](team/dr-arrgghh.md)]","lastModifiedDate":"2022-11-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"comicalromance"},"content":"* Responsibilities: Deliverables and deadlines, Scheduling and tracking","lastModifiedDate":"2022-11-07"},{"lineNumber":54,"author":{"gitId":"Piyotato"},"content":"* In Charge of: `Filter`","lastModifiedDate":"2022-11-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"comicalromance"},"content":"### Pang Bao Bin","lastModifiedDate":"2022-09-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"Piyotato"},"content":"\u003cimg src\u003d\"images/team-photos/highorbit25.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"comicalromance"},"content":"[[github](http://github.com/highorbit25)]","lastModifiedDate":"2022-09-28"},{"lineNumber":61,"author":{"gitId":"comicalromance"},"content":"[[portfolio](team/highorbit25.md)]","lastModifiedDate":"2022-11-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"comicalromance"},"content":"* Responsibilities: Integration, Code Quality","lastModifiedDate":"2022-11-07"},{"lineNumber":65,"author":{"gitId":"Piyotato"},"content":"* In Charge of: `Sort`, `Participate`","lastModifiedDate":"2022-11-07"}],"authorContributionMap":{"Piyotato":10,"-":32,"comicalromance":23}},{"path":"docs/DevOps.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: DevOps guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2022-11-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Build automation","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"Piyotato"},"content":"This project uses Gradle for **build automation and dependency management**. **You are recommended to","lastModifiedDate":"2022-11-07"},{"lineNumber":14,"author":{"gitId":"Piyotato"},"content":"read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html)**.","lastModifiedDate":"2022-11-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Given below are how to use Gradle for some important project tasks.","lastModifiedDate":"2020-05-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":18,"author":{"gitId":"Piyotato"},"content":"* **`clean`**: Deletes the files created during the previous build tasks (e.g. files in the `build` folder).\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":19,"author":{"gitId":"Piyotato"},"content":"  e.g. `./gradlew clean`\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":21,"author":{"gitId":"Piyotato"},"content":"* **`shadowJar`**: Uses the ShadowJar plugin to create a fat JAR file in the `build/lib` folder, *if the current file is","lastModifiedDate":"2022-11-07"},{"lineNumber":22,"author":{"gitId":"Piyotato"},"content":"  outdated*.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":23,"author":{"gitId":"Piyotato"},"content":"  e.g. `./gradlew shadowJar`\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* **`run`**: Builds and runs the application.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":26,"author":{"gitId":"Piyotato"},"content":"  **`runShadow`**: Builds the application as a fat JAR, and then runs it.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"* **`checkstyleMain`**: Runs the code style check for the main code base.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":29,"author":{"gitId":"Piyotato"},"content":"  **`checkstyleTest`**: Runs the code style check for the test code base.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":31,"author":{"gitId":"Piyotato"},"content":"* **`test`**: Runs all tests.","lastModifiedDate":"2022-11-07"},{"lineNumber":32,"author":{"gitId":"Piyotato"},"content":"    * `./gradlew test`— Runs all tests","lastModifiedDate":"2022-11-07"},{"lineNumber":33,"author":{"gitId":"Piyotato"},"content":"    * `./gradlew clean test`— Cleans the project and runs tests","lastModifiedDate":"2022-11-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"## Continuous integration (CI)","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"Piyotato"},"content":"This project uses GitHub Actions for CI. The project comes with the necessary GitHub Actions configurations files (in","lastModifiedDate":"2022-11-07"},{"lineNumber":40,"author":{"gitId":"Piyotato"},"content":"the `.github/workflows` folder). No further setting up required.","lastModifiedDate":"2022-11-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"### Code coverage","lastModifiedDate":"2020-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":44,"author":{"gitId":"Piyotato"},"content":"As part of CI, this project uses Codecov to generate coverage reports. When CI runs, it will generate code coverage","lastModifiedDate":"2022-11-07"},{"lineNumber":45,"author":{"gitId":"Piyotato"},"content":"data (based on the tests run by CI) and upload that data to the CodeCov website, which in turn can provide you more info","lastModifiedDate":"2022-11-07"},{"lineNumber":46,"author":{"gitId":"Piyotato"},"content":"about the coverage of your testes. Here are the steps to set up CodeCov for a fork of this repository.","lastModifiedDate":"2022-11-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Sign up with Codecov using your GitHub account [here](https://codecov.io/signup).","lastModifiedDate":"2020-08-07"},{"lineNumber":49,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":50,"author":{"gitId":"Piyotato"},"content":"2. Once you are inside Codecov web app, add your org (that contains the fork) to CodeCov.","lastModifiedDate":"2022-11-07"},{"lineNumber":51,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":52,"author":{"gitId":"Piyotato"},"content":"3. Wait for the next run of CI in your fork (or push a dummy commit to it to trigger CI) to confirm CI is able to upload","lastModifiedDate":"2022-11-07"},{"lineNumber":53,"author":{"gitId":"Piyotato"},"content":"   generated coverage data to CodeCov. If CodeCov is not set up correctly, the CI run will fail with an error message","lastModifiedDate":"2022-11-07"},{"lineNumber":54,"author":{"gitId":"Piyotato"},"content":"   that mentions CodeCov.","lastModifiedDate":"2022-11-07"},{"lineNumber":55,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":56,"author":{"gitId":"Piyotato"},"content":"4. Get the Markdown code for the Codecov badge provided in `Settings \u003e Badges` and update the `docs/index.md` of your","lastModifiedDate":"2022-11-07"},{"lineNumber":57,"author":{"gitId":"Piyotato"},"content":"   repo with it so that the","lastModifiedDate":"2022-11-07"},{"lineNumber":58,"author":{"gitId":"Piyotato"},"content":"   badge [![codecov](https://codecov.io/gh/AY2223S1-CS2103T-W13-1/tp/branch/master/graph/badge.svg?token\u003dOWNSY6SWHW)](https://codecov.io/gh/AY2223S1-CS2103T-W13-1/tp)","lastModifiedDate":"2022-11-07"},{"lineNumber":59,"author":{"gitId":"Piyotato"},"content":"   in that page reflects the coverage of your project.","lastModifiedDate":"2022-11-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"### Repository-wide checks","lastModifiedDate":"2020-07-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":63,"author":{"gitId":"Piyotato"},"content":"In addition to running Gradle checks, CI includes some repository-wide checks. Unlike the Gradle checks which only cover","lastModifiedDate":"2022-11-07"},{"lineNumber":64,"author":{"gitId":"Piyotato"},"content":"files used in the build process, these repository-wide checks cover all files in the repository. They check for","lastModifiedDate":"2022-11-07"},{"lineNumber":65,"author":{"gitId":"Piyotato"},"content":"repository rules which are hard to enforce on development machines such as line ending requirements.","lastModifiedDate":"2022-11-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":67,"author":{"gitId":"Piyotato"},"content":"These checks are implemented as POSIX shell scripts, and thus can only be run on POSIX-compliant operating systems such","lastModifiedDate":"2022-11-07"},{"lineNumber":68,"author":{"gitId":"Piyotato"},"content":"as macOS and Linux. To run all checks locally on these operating systems, execute the following in the repository root","lastModifiedDate":"2022-11-07"},{"lineNumber":69,"author":{"gitId":"Piyotato"},"content":"directory:","lastModifiedDate":"2022-11-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":71,"author":{"gitId":"-"},"content":"`./config/travis/run-checks.sh`","lastModifiedDate":"2020-07-28"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"Any warnings or errors will be printed out to the console.","lastModifiedDate":"2020-07-28"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":75,"author":{"gitId":"-"},"content":"**If adding new checks:**","lastModifiedDate":"2020-07-28"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":77,"author":{"gitId":"Piyotato"},"content":"* Checks are implemented as executable `check-*` scripts within the `.github` directory. The `run-checks.sh` script will","lastModifiedDate":"2022-11-07"},{"lineNumber":78,"author":{"gitId":"Piyotato"},"content":"  automatically pick up and run files named as such. That is, you can add more such files if you need and the CI will do","lastModifiedDate":"2022-11-07"},{"lineNumber":79,"author":{"gitId":"Piyotato"},"content":"  the rest.","lastModifiedDate":"2022-11-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":81,"author":{"gitId":"Piyotato"},"content":"* Check scripts should print out errors in the format `SEVERITY:FILENAME:LINE: MESSAGE`.","lastModifiedDate":"2022-11-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    * SEVERITY is either ERROR or WARN.","lastModifiedDate":"2020-07-28"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    * FILENAME is the path to the file relative to the current directory.","lastModifiedDate":"2020-07-28"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    * LINE is the line of the file where the error occurred and MESSAGE is the message explaining the error.","lastModifiedDate":"2020-07-28"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":86,"author":{"gitId":"-"},"content":"* Check scripts must exit with a non-zero exit code if any errors occur.","lastModifiedDate":"2020-07-28"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":88,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"## Making a release","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"Here are the steps to create a new release.","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"Piyotato"},"content":"1. Update the version number","lastModifiedDate":"2022-11-07"},{"lineNumber":95,"author":{"gitId":"Piyotato"},"content":"   in [`MainApp.java`](https://github.com/AY2223S1-CS2103T-W13-1/tp/blob/master/src/main/java/seedu/studmap/MainApp.java)","lastModifiedDate":"2022-11-07"},{"lineNumber":96,"author":{"gitId":"Piyotato"},"content":"   .","lastModifiedDate":"2022-11-07"},{"lineNumber":97,"author":{"gitId":"Piyotato"},"content":"2. Generate a fat JAR file using Gradle (i.e., `gradlew shadowJar`).","lastModifiedDate":"2022-11-07"},{"lineNumber":98,"author":{"gitId":"Piyotato"},"content":"3. Tag the repo with the version number. e.g. `v0.1`.","lastModifiedDate":"2022-11-07"},{"lineNumber":99,"author":{"gitId":"Piyotato"},"content":"4. [Create a new release using GitHub](https://help.github.com/articles/creating-releases/). Upload the JAR file you","lastModifiedDate":"2022-11-07"},{"lineNumber":100,"author":{"gitId":"Piyotato"},"content":"   created.","lastModifiedDate":"2022-11-07"}],"authorContributionMap":{"Piyotato":45,"-":55}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2022-11-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2022-11-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2022-11-07"},{"lineNumber":5,"author":{"gitId":"Piyotato"},"content":"{:logo: height\u003d\"200px\" width\u003d\"200px\" style\u003d\"display:block; margin-left:auto; margin-right:auto;\"}","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"Piyotato"},"content":"{:diagram: style\u003d\"display:block; margin-left:auto; margin-right:auto;\"}","lastModifiedDate":"2022-11-07"},{"lineNumber":7,"author":{"gitId":"Piyotato"},"content":"![StudMapLogo](images/studmap/studmap_hd.png){: logo}","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"Piyotato"},"content":"# Overview","lastModifiedDate":"2022-11-07"},{"lineNumber":10,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":11,"author":{"gitId":"Piyotato"},"content":"StudMap is a lightweight desktop app for managing your students and organizing your teaching assistant (TA)","lastModifiedDate":"2022-11-07"},{"lineNumber":12,"author":{"gitId":"Piyotato"},"content":"responsibilities. It’s optimized for use via a Command Line Interface (CLI), meaning that you give instructions to","lastModifiedDate":"2022-11-07"},{"lineNumber":13,"author":{"gitId":"Piyotato"},"content":"StudMap through a text box, and StudMap just does it for you — it’s like magic. Yet, it has all the benefits of a","lastModifiedDate":"2022-11-07"},{"lineNumber":14,"author":{"gitId":"Piyotato"},"content":"traditional application with a graphical interface: you can still see, at a glance, a neat overview of what you need to","lastModifiedDate":"2022-11-07"},{"lineNumber":15,"author":{"gitId":"Piyotato"},"content":"see. If you type fast, StudMap can get your student management tasks done faster than anything else.","lastModifiedDate":"2022-11-07"},{"lineNumber":16,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":17,"author":{"gitId":"Piyotato"},"content":"This Developer Guide aims to acquaint you with the architecture of StudMap, in case you are interested in contributing","lastModifiedDate":"2022-11-07"},{"lineNumber":18,"author":{"gitId":"Piyotato"},"content":"to the project. You can also use this as a reference, if you are interested in developing something similar.","lastModifiedDate":"2022-11-07"},{"lineNumber":19,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2022-11-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2022-11-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"Piyotato"},"content":"---","lastModifiedDate":"2022-11-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":27,"author":{"gitId":"Piyotato"},"content":"# Acknowledgements","lastModifiedDate":"2022-11-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":29,"author":{"gitId":"Piyotato"},"content":"* [JavaFX](https://openjfx.io/) for providing the API for rendering GUI.","lastModifiedDate":"2022-11-07"},{"lineNumber":30,"author":{"gitId":"Piyotato"},"content":"* [Jackson](https://github.com/FasterXML/jackson) for providing the API for parsing JSON files.","lastModifiedDate":"2022-11-07"},{"lineNumber":31,"author":{"gitId":"Piyotato"},"content":"* [JUnit](https://junit.org/junit5/) for providing a unit testing framework.","lastModifiedDate":"2022-11-07"},{"lineNumber":32,"author":{"gitId":"Piyotato"},"content":"* StudMap\u0027s Developer Guide is adapted","lastModifiedDate":"2022-11-07"},{"lineNumber":33,"author":{"gitId":"Piyotato"},"content":"  from [AB3\u0027s Developer Guide](https://se-education.org/addressbook-level3/DeveloperGuide.html).","lastModifiedDate":"2022-11-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":35,"author":{"gitId":"Piyotato"},"content":"---","lastModifiedDate":"2022-11-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"Piyotato"},"content":"# Setting Up and Getting Started","lastModifiedDate":"2022-11-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"Piyotato"},"content":"---","lastModifiedDate":"2022-11-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"Piyotato"},"content":"# Design","lastModifiedDate":"2022-11-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"Piyotato"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"dr-arrgghh"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"lpohsien"},"content":"the [diagrams](https://github.com/AY2223S1-CS2103T-W13-1/tp/tree/master/docs/diagrams) folder. Refer to the [_PlantUML","lastModifiedDate":"2022-10-27"},{"lineNumber":50,"author":{"gitId":"Piyotato"},"content":"TAial_ at se-edu/guides](https://se-education.org/guides/teaching assistantials/plantUml.html) to learn how to create","lastModifiedDate":"2022-11-07"},{"lineNumber":51,"author":{"gitId":"Piyotato"},"content":"and edit diagrams.","lastModifiedDate":"2022-11-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"Piyotato"},"content":"## Architecture","lastModifiedDate":"2022-11-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"Piyotato"},"content":"Given below is an **Architecture Diagram**. It explains the high-level design of StudMap. Below the diagram is a quick","lastModifiedDate":"2022-11-07"},{"lineNumber":57,"author":{"gitId":"Piyotato"},"content":"overview of main components and how they interact with each other.","lastModifiedDate":"2022-11-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"Piyotato"},"content":"![Architecture](images/diagrams/ArchitectureDiagram.png){: diagram}","lastModifiedDate":"2022-11-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"Piyotato"},"content":"### Main Components of the Architecture","lastModifiedDate":"2022-11-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"dr-arrgghh"},"content":"**`Main`** has two classes","lastModifiedDate":"2022-10-09"},{"lineNumber":64,"author":{"gitId":"lpohsien"},"content":"called [`Main`](https://github.com/AY2223S1-CS2103T-W13-1/tp/tree/master/src/main/java/seedu/studmap/Main.java)","lastModifiedDate":"2022-10-27"},{"lineNumber":65,"author":{"gitId":"lpohsien"},"content":"and [`MainApp`](https://github.com/AY2223S1-CS2103T-W13-1/tp/tree/master/src/main/java/seedu/studmap/MainApp.java). It","lastModifiedDate":"2022-10-27"},{"lineNumber":66,"author":{"gitId":"Piyotato"},"content":"performs the following tasks:","lastModifiedDate":"2022-11-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":68,"author":{"gitId":"Piyotato"},"content":"* At app launch: `Main` initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2022-11-07"},{"lineNumber":69,"author":{"gitId":"Piyotato"},"content":"* At shut down: `Main` shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2022-11-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"Piyotato"},"content":"The rest of StudMap consists of four components.","lastModifiedDate":"2022-11-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"Piyotato"},"content":"* [**`Model`**](#model-component): Holds the data of StudMap in memory.","lastModifiedDate":"2022-11-07"},{"lineNumber":78,"author":{"gitId":"Piyotato"},"content":"* [**`Storage`**](#storage-component): Reads data from and writes data to the hard disk.","lastModifiedDate":"2022-11-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"Piyotato"},"content":"### How Architecture Components Interact","lastModifiedDate":"2022-11-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"dr-arrgghh"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues","lastModifiedDate":"2022-10-09"},{"lineNumber":83,"author":{"gitId":"dr-arrgghh"},"content":"the command `delete 1`.","lastModifiedDate":"2022-10-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"Piyotato"},"content":"![Sequence Diagram](images/diagrams/ArchitectureSequenceDiagram.png){: diagram}","lastModifiedDate":"2022-11-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"Piyotato"},"content":"Each of the four main components (also shown in the diagram above)","lastModifiedDate":"2022-11-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":89,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"dr-arrgghh"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding","lastModifiedDate":"2022-10-09"},{"lineNumber":91,"author":{"gitId":"dr-arrgghh"},"content":"  API `interface` mentioned in the previous point.","lastModifiedDate":"2022-10-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"dr-arrgghh"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using","lastModifiedDate":"2022-10-09"},{"lineNumber":94,"author":{"gitId":"dr-arrgghh"},"content":"the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component","lastModifiedDate":"2022-10-09"},{"lineNumber":95,"author":{"gitId":"dr-arrgghh"},"content":"through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the","lastModifiedDate":"2022-10-09"},{"lineNumber":96,"author":{"gitId":"dr-arrgghh"},"content":"implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2022-10-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"lpohsien"},"content":"![Component Managers](images/diagrams/ComponentManagers.png){: diagram}","lastModifiedDate":"2022-11-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"Piyotato"},"content":"## UI component","lastModifiedDate":"2022-11-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"dr-arrgghh"},"content":"The **API** of this component is specified","lastModifiedDate":"2022-10-09"},{"lineNumber":105,"author":{"gitId":"Piyotato"},"content":"in [`Ui.java`](https://github.com/AY2223S1-CS2103T-W13-1/tp/tree/master/src/main/java/seedu/studmap/ui/Ui.java).","lastModifiedDate":"2022-11-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"Piyotato"},"content":"![Structure of the UI Component](images/diagrams/UiClassDiagram.png){: diagram}","lastModifiedDate":"2022-11-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"lpohsien"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `StudentListPanel`","lastModifiedDate":"2022-10-27"},{"lineNumber":110,"author":{"gitId":"dr-arrgghh"},"content":", `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures","lastModifiedDate":"2022-10-09"},{"lineNumber":111,"author":{"gitId":"dr-arrgghh"},"content":"the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2022-10-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"dr-arrgghh"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that","lastModifiedDate":"2022-10-09"},{"lineNumber":114,"author":{"gitId":"dr-arrgghh"},"content":"are in the `src/main/resources/view` folder. For example, the layout of","lastModifiedDate":"2022-10-09"},{"lineNumber":115,"author":{"gitId":"lpohsien"},"content":"the [`MainWindow`](https://github.com/AY2223S1-CS2103T-W13-1/tp/tree/master/src/main/java/seedu/studmap/ui/MainWindow.java)","lastModifiedDate":"2022-10-27"},{"lineNumber":116,"author":{"gitId":"dr-arrgghh"},"content":"is specified","lastModifiedDate":"2022-10-09"},{"lineNumber":117,"author":{"gitId":"lpohsien"},"content":"in [`MainWindow.fxml`](https://github.com/AY2223S1-CS2103T-W13-1/tp/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2022-10-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"Piyotato"},"content":"The `UI` component","lastModifiedDate":"2022-11-07"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":124,"author":{"gitId":"lpohsien"},"content":"* depends on some classes in the `Model` component, as it displays `Student` object residing in the `Model`.","lastModifiedDate":"2022-10-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"Piyotato"},"content":"## Logic Component","lastModifiedDate":"2022-11-07"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"Piyotato"},"content":"**API:**","lastModifiedDate":"2022-11-07"},{"lineNumber":129,"author":{"gitId":"Piyotato"},"content":"[`Logic.java`](https://github.com/AY2223S1-CS2103T-W13-1/tp/tree/master/src/main/java/seedu/studmap/logic/Logic.java)","lastModifiedDate":"2022-11-07"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"Piyotato"},"content":"![Logic Class Diagram](images/diagrams/LogicClassDiagram.png){: diagram}","lastModifiedDate":"2022-11-07"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":137,"author":{"gitId":"lpohsien"},"content":"1. When `Logic` is called upon to execute a command, it uses the `StudMapParser` class to parse the user command.","lastModifiedDate":"2022-10-27"},{"lineNumber":138,"author":{"gitId":"Piyotato"},"content":"2. This results in a `Command` object (more precisely, an object of one of its subclasses e.g. `AddCommand`) which is","lastModifiedDate":"2022-11-07"},{"lineNumber":139,"author":{"gitId":"dr-arrgghh"},"content":"   executed by the `LogicManager`.","lastModifiedDate":"2022-10-09"},{"lineNumber":140,"author":{"gitId":"Piyotato"},"content":"3. The command can communicate with the `Model` when it is executed (e.g. to add a student).","lastModifiedDate":"2022-11-07"},{"lineNumber":141,"author":{"gitId":"Piyotato"},"content":"4. The result of the command execution is encapsulated as a `CommandResult` object which is returned from `Logic`.","lastModifiedDate":"2022-11-07"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"dr-arrgghh"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API","lastModifiedDate":"2022-10-09"},{"lineNumber":144,"author":{"gitId":"dr-arrgghh"},"content":"call.","lastModifiedDate":"2022-10-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"Piyotato"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/diagrams/DeleteSequenceDiagram.png){:","lastModifiedDate":"2022-11-07"},{"lineNumber":147,"author":{"gitId":"Piyotato"},"content":"diagram}","lastModifiedDate":"2022-11-07"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"highorbit25"},"content":"![Parser Class](images/diagrams/ParserClasses.png)","lastModifiedDate":"2022-11-07"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":159,"author":{"gitId":"lpohsien"},"content":"* When called upon to parse a user command, the `StudMapParser` class creates an `XYZCommandParser` (`XYZ` is a","lastModifiedDate":"2022-10-27"},{"lineNumber":160,"author":{"gitId":"highorbit25"},"content":"  placeholder for the specific command name e.g. `AddCommandParser`) which uses the other classes shown above to parse","lastModifiedDate":"2022-11-06"},{"lineNumber":161,"author":{"gitId":"highorbit25"},"content":"  the user command and create a `XYZCommand` object (e.g. `AddCommand`) which the `StudMapParser` returns back as","lastModifiedDate":"2022-11-06"},{"lineNumber":162,"author":{"gitId":"dr-arrgghh"},"content":"  a `Command` object.","lastModifiedDate":"2022-10-09"},{"lineNumber":163,"author":{"gitId":"highorbit25"},"content":"* All `XYZCommandParser` classes (e.g. `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser`","lastModifiedDate":"2022-11-06"},{"lineNumber":164,"author":{"gitId":"dr-arrgghh"},"content":"  interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2022-10-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"Piyotato"},"content":"## Model Component","lastModifiedDate":"2022-11-07"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":168,"author":{"gitId":"Piyotato"},"content":"**API:**","lastModifiedDate":"2022-11-07"},{"lineNumber":169,"author":{"gitId":"Piyotato"},"content":"[`Model.java`](https://github.com/AY2223S1-CS2103T-W13-1/tp/tree/master/src/main/java/seedu/studmap/model/Model.java)","lastModifiedDate":"2022-11-07"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"Piyotato"},"content":"![Model Class Diagram](images/diagrams/ModelClassDiagram.png){: diagram}","lastModifiedDate":"2022-11-07"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"Piyotato"},"content":"The `Model` component","lastModifiedDate":"2022-11-07"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"lpohsien"},"content":"* stores the student map data i.e., all `Student` objects (which are contained in a `UniqueStudentList` object).","lastModifiedDate":"2022-10-27"},{"lineNumber":176,"author":{"gitId":"highorbit25"},"content":"* stores the currently \u0027selected\u0027 `Student` objects (e.g. results of a search query) as a separate _filtered_ list which","lastModifiedDate":"2022-11-06"},{"lineNumber":177,"author":{"gitId":"Piyotato"},"content":"  is exposed to outsiders as an unmodifiable `ObservableList\u003cStudent\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound","lastModifiedDate":"2022-11-07"},{"lineNumber":178,"author":{"gitId":"Piyotato"},"content":"  to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2022-11-07"},{"lineNumber":179,"author":{"gitId":"dr-arrgghh"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as","lastModifiedDate":"2022-10-09"},{"lineNumber":180,"author":{"gitId":"dr-arrgghh"},"content":"  a `ReadOnlyUserPref` objects.","lastModifiedDate":"2022-10-09"},{"lineNumber":181,"author":{"gitId":"dr-arrgghh"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they","lastModifiedDate":"2022-10-09"},{"lineNumber":182,"author":{"gitId":"dr-arrgghh"},"content":"  should make sense on their own without depending on other components)","lastModifiedDate":"2022-10-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":184,"author":{"gitId":"lpohsien"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `StudMap`, which `Student` references. This allows `StudMap` to only require one `Tag` object per unique tag, instead of each `Student` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"Piyotato"},"content":"![More OOP Model](images/diagrams/BetterModelClassDiagram.png)","lastModifiedDate":"2022-11-07"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"Piyotato"},"content":"## Storage Component","lastModifiedDate":"2022-11-07"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"Piyotato"},"content":"**API:**","lastModifiedDate":"2022-11-07"},{"lineNumber":193,"author":{"gitId":"Piyotato"},"content":"[`Storage.java`](https://github.com/AY2223S1-CS2103T-W13-1/tp/tree/master/src/main/java/seedu/studmap/storage/Storage.java)","lastModifiedDate":"2022-11-07"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"Piyotato"},"content":"![Storage Class Diagram](images/diagrams/StorageClassDiagram.png){: diagram}","lastModifiedDate":"2022-11-07"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":197,"author":{"gitId":"Piyotato"},"content":"The `Storage` component","lastModifiedDate":"2022-11-07"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":199,"author":{"gitId":"lpohsien"},"content":"* can save both student map data and user preference data in json format, and read them back into corresponding","lastModifiedDate":"2022-10-27"},{"lineNumber":200,"author":{"gitId":"dr-arrgghh"},"content":"  objects.","lastModifiedDate":"2022-10-09"},{"lineNumber":201,"author":{"gitId":"lpohsien"},"content":"* inherits from both `StudMapStorage` and `UserPrefStorage`, which means it can be treated as either one (if only","lastModifiedDate":"2022-10-27"},{"lineNumber":202,"author":{"gitId":"dr-arrgghh"},"content":"  the functionality of only one is needed).","lastModifiedDate":"2022-10-09"},{"lineNumber":203,"author":{"gitId":"dr-arrgghh"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects","lastModifiedDate":"2022-10-09"},{"lineNumber":204,"author":{"gitId":"dr-arrgghh"},"content":"  that belong to the `Model`)","lastModifiedDate":"2022-10-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"Piyotato"},"content":"## Common Classes","lastModifiedDate":"2022-11-07"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"lpohsien"},"content":"Classes used by multiple components are in the `seedu.studmap.commons` package.","lastModifiedDate":"2022-10-27"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"Piyotato"},"content":"---","lastModifiedDate":"2022-11-07"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"Piyotato"},"content":"# Implementation","lastModifiedDate":"2022-11-07"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"Piyotato"},"content":"## Filter","lastModifiedDate":"2022-11-07"},{"lineNumber":217,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":218,"author":{"gitId":"Piyotato"},"content":"### Current Implementation","lastModifiedDate":"2022-11-07"},{"lineNumber":219,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":220,"author":{"gitId":"dr-arrgghh"},"content":"The `filter` feature is implemented by the `FilterCommand` class which extends its parent `Command` class. The implementation","lastModifiedDate":"2022-11-07"},{"lineNumber":221,"author":{"gitId":"Piyotato"},"content":"of the `filter` feature can be summarized via the sequence diagram shown below.","lastModifiedDate":"2022-11-07"},{"lineNumber":222,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":223,"author":{"gitId":"Piyotato"},"content":"![Filter Sequence Diagram](images/diagrams/FilterCommandSequenceDiagram.png){: diagram}","lastModifiedDate":"2022-11-07"},{"lineNumber":224,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":225,"author":{"gitId":"dr-arrgghh"},"content":"The implementation of the `execute` method in filter is done within the class `FilterCommand#execute()`.","lastModifiedDate":"2022-11-07"},{"lineNumber":226,"author":{"gitId":"dr-arrgghh"},"content":"The `execute` method will in turn call the `filterPersonListWithPredicate` method of the corresponding","lastModifiedDate":"2022-11-07"},{"lineNumber":227,"author":{"gitId":"dr-arrgghh"},"content":"`ModelManager`. A brief summary of the class structure is illustrated in the class diagram below, using","lastModifiedDate":"2022-11-07"},{"lineNumber":228,"author":{"gitId":"dr-arrgghh"},"content":"`FilterCommand` as an example. ","lastModifiedDate":"2022-11-07"},{"lineNumber":229,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":230,"author":{"gitId":"dr-arrgghh"},"content":"![Filter Class Diagram](images/diagrams/FilterCommandClassDiagram.png){: diagram}","lastModifiedDate":"2022-11-07"},{"lineNumber":231,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":232,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":233,"author":{"gitId":"dr-arrgghh"},"content":"This method is implemented to support the feature of filtering students by the attributes that are assigned to them.","lastModifiedDate":"2022-11-07"},{"lineNumber":234,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":235,"author":{"gitId":"Piyotato"},"content":"The `FilterCommand` supports one operation:","lastModifiedDate":"2022-11-07"},{"lineNumber":236,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":237,"author":{"gitId":"Piyotato"},"content":"- `FilterCommand#execute()` - Overrides the `execute()` method of its parent\u0027s `Command` class and is the default","lastModifiedDate":"2022-11-07"},{"lineNumber":238,"author":{"gitId":"dr-arrgghh"},"content":"  operation to be executed. This will update the filtered list in the dashboard shown to the user based on the tag set","lastModifiedDate":"2022-10-20"},{"lineNumber":239,"author":{"gitId":"dr-arrgghh"},"content":"  by the user","lastModifiedDate":"2022-10-20"},{"lineNumber":240,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":241,"author":{"gitId":"Piyotato"},"content":"### General Flow for `FilterCommand`","lastModifiedDate":"2022-11-07"},{"lineNumber":242,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":243,"author":{"gitId":"Piyotato"},"content":"The flow for `FilterCommand#execute` is as such:","lastModifiedDate":"2022-11-07"},{"lineNumber":244,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":245,"author":{"gitId":"dr-arrgghh"},"content":"1. The attributes to be used for filtering is retrieved from the user input","lastModifiedDate":"2022-11-07"},{"lineNumber":246,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":247,"author":{"gitId":"dr-arrgghh"},"content":"2. The attribute input will then be parsed into the filter parser which will then return a new Filter Command","lastModifiedDate":"2022-11-07"},{"lineNumber":248,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":249,"author":{"gitId":"Piyotato"},"content":"3. The filter command will then be immediately executed to filter the current list of students via their assigned","lastModifiedDate":"2022-11-07"},{"lineNumber":250,"author":{"gitId":"dr-arrgghh"},"content":"   attributes","lastModifiedDate":"2022-11-07"},{"lineNumber":251,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":252,"author":{"gitId":"Piyotato"},"content":"4. The result list of students will then be shown back to the user via the dashboard","lastModifiedDate":"2022-11-07"},{"lineNumber":253,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":254,"author":{"gitId":"dr-arrgghh"},"content":"###Design Consideration","lastModifiedDate":"2022-11-07"},{"lineNumber":255,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":256,"author":{"gitId":"dr-arrgghh"},"content":"**Common Behaviours**","lastModifiedDate":"2022-11-07"},{"lineNumber":257,"author":{"gitId":"dr-arrgghh"},"content":"1. Parse certain attribute to filter","lastModifiedDate":"2022-11-07"},{"lineNumber":258,"author":{"gitId":"dr-arrgghh"},"content":"2. Parse certain keyword to filter","lastModifiedDate":"2022-11-07"},{"lineNumber":259,"author":{"gitId":"dr-arrgghh"},"content":"3. Return immediately if attribute is valid and list ","lastModifiedDate":"2022-11-07"},{"lineNumber":260,"author":{"gitId":"dr-arrgghh"},"content":"do not contain keyword","lastModifiedDate":"2022-11-07"},{"lineNumber":261,"author":{"gitId":"dr-arrgghh"},"content":"4. Return immediately if attribute is valid and list","lastModifiedDate":"2022-11-07"},{"lineNumber":262,"author":{"gitId":"dr-arrgghh"},"content":"contain keyword","lastModifiedDate":"2022-11-07"},{"lineNumber":263,"author":{"gitId":"dr-arrgghh"},"content":"5. Exception thrown immediately if attribute is invalid","lastModifiedDate":"2022-11-07"},{"lineNumber":264,"author":{"gitId":"dr-arrgghh"},"content":"    ","lastModifiedDate":"2022-11-07"},{"lineNumber":265,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":266,"author":{"gitId":"dr-arrgghh"},"content":"**Aspect: How filter executes:**","lastModifiedDate":"2022-11-07"},{"lineNumber":267,"author":{"gitId":"dr-arrgghh"},"content":"* **Alternative 1 (current choice):** Update the list of students using ModelManager","lastModifiedDate":"2022-11-07"},{"lineNumber":268,"author":{"gitId":"dr-arrgghh"},"content":"  * Pros: Extension to more classes allowing the program to be conducted with ","lastModifiedDate":"2022-11-07"},{"lineNumber":269,"author":{"gitId":"dr-arrgghh"},"content":"  more OOP hence providing a more stable structure","lastModifiedDate":"2022-11-07"},{"lineNumber":270,"author":{"gitId":"dr-arrgghh"},"content":"  * Cons: It can be a hassle for users to read the code as they will have to take into","lastModifiedDate":"2022-11-07"},{"lineNumber":271,"author":{"gitId":"dr-arrgghh"},"content":"  account multiple classes that contributes to the function","lastModifiedDate":"2022-11-07"},{"lineNumber":272,"author":{"gitId":"dr-arrgghh"},"content":"* **Alternative 2:** Update the list of students within FilterCommand","lastModifiedDate":"2022-11-07"},{"lineNumber":273,"author":{"gitId":"dr-arrgghh"},"content":"  * Pros: Increase code readability for users ","lastModifiedDate":"2022-11-07"},{"lineNumber":274,"author":{"gitId":"dr-arrgghh"},"content":"  * Cons: Increase code duplication due to lesser OOP.","lastModifiedDate":"2022-11-07"},{"lineNumber":275,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":276,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":277,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":278,"author":{"gitId":"Piyotato"},"content":"## Student Editing","lastModifiedDate":"2022-11-07"},{"lineNumber":279,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":280,"author":{"gitId":"Piyotato"},"content":"This is a set of features with similar implementations that allows user to modify the `Student` object. Currently, the","lastModifiedDate":"2022-11-07"},{"lineNumber":281,"author":{"gitId":"Piyotato"},"content":"features supported are:","lastModifiedDate":"2022-11-07"},{"lineNumber":282,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":283,"author":{"gitId":"lpohsien"},"content":"1. `edit` :  `EditCommand`","lastModifiedDate":"2022-10-28"},{"lineNumber":284,"author":{"gitId":"lpohsien"},"content":"   \u003cbr\u003eEdit basic attributes of a student (E.g. Name, Phone, etc)","lastModifiedDate":"2022-10-28"},{"lineNumber":285,"author":{"gitId":"lpohsien"},"content":"2. `tag` : `TagCommand` and `untag` : `UntagCommand`","lastModifiedDate":"2022-10-28"},{"lineNumber":286,"author":{"gitId":"lpohsien"},"content":"   \u003cbr\u003eAdd and removing tags for a student","lastModifiedDate":"2022-10-28"},{"lineNumber":287,"author":{"gitId":"lpohsien"},"content":"3. `mark` : `MarkCommand` and `unmark` : `UnmarkCommand` :","lastModifiedDate":"2022-10-28"},{"lineNumber":288,"author":{"gitId":"lpohsien"},"content":"   \u003cbr\u003e Add, modify and remove attendance status of a student","lastModifiedDate":"2022-10-28"},{"lineNumber":289,"author":{"gitId":"lpohsien"},"content":"4. `grade` : `GradeCommand` and `ungrade` : `UngradeCommand`","lastModifiedDate":"2022-10-28"},{"lineNumber":290,"author":{"gitId":"lpohsien"},"content":"   \u003cbr\u003e Add, modify and remove assignment grading status of a student.","lastModifiedDate":"2022-10-28"},{"lineNumber":291,"author":{"gitId":"highorbit25"},"content":"5. `participate` : `ParticipateCommand` and `unparticipate` : `UnparticipateCommand`","lastModifiedDate":"2022-11-06"},{"lineNumber":292,"author":{"gitId":"highorbit25"},"content":"   \u003cbr\u003e Add, modify and remove participation records of a student.","lastModifiedDate":"2022-11-06"},{"lineNumber":293,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":294,"author":{"gitId":"Piyotato"},"content":"Each of these features are implemented through the corresponding commands which extends the generic `EditStudentCommand`","lastModifiedDate":"2022-11-07"},{"lineNumber":295,"author":{"gitId":"Piyotato"},"content":"abstract class.","lastModifiedDate":"2022-11-07"},{"lineNumber":296,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":297,"author":{"gitId":"Piyotato"},"content":"The implementation of the `execute` method is contained in the parent class `EditStudentCommand#execute()`.","lastModifiedDate":"2022-11-07"},{"lineNumber":298,"author":{"gitId":"Piyotato"},"content":"The `execute` method which the respective concrete implementations of `EditStudentCommand` will in turn call","lastModifiedDate":"2022-11-07"},{"lineNumber":299,"author":{"gitId":"Piyotato"},"content":"the `editStudent` method of the corresponding `StudentEditor` (e.g. `MarkCommand.MarkStudentEditor#editStudent()`). A","lastModifiedDate":"2022-11-07"},{"lineNumber":300,"author":{"gitId":"Piyotato"},"content":"brief summary of the class structure is illustrated in the class diagram below, using `MarkCommand` as the example.","lastModifiedDate":"2022-11-07"},{"lineNumber":301,"author":{"gitId":"Piyotato"},"content":"Since all concrete implementations of the `EditStudentCommand` share the same class structure, the example","lastModifiedDate":"2022-11-07"},{"lineNumber":302,"author":{"gitId":"Piyotato"},"content":"of `MarkCommand` will also be used to explain the implementation details.","lastModifiedDate":"2022-11-07"},{"lineNumber":303,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":304,"author":{"gitId":"Piyotato"},"content":"![MarkCommandClassDiagram](images/diagrams/MarkCommandClassDiagram.png){: diagram}","lastModifiedDate":"2022-11-07"},{"lineNumber":305,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":306,"author":{"gitId":"comicalromance"},"content":"`IndexListGenerator` is an abstract class representing the list of indexes to modify.","lastModifiedDate":"2022-10-20"},{"lineNumber":307,"author":{"gitId":"comicalromance"},"content":"The instance of `IndexListGenerator` can be either","lastModifiedDate":"2022-10-20"},{"lineNumber":308,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":309,"author":{"gitId":"comicalromance"},"content":"* `AllIndexGenerator`, which corresponds to all indexes of the filtered list (meaning all listed students are modified)","lastModifiedDate":"2022-10-20"},{"lineNumber":310,"author":{"gitId":"comicalromance"},"content":"* `SingleIndexGenerator`, which corresponds to a single index (meaning one selected student is modified)","lastModifiedDate":"2022-10-20"},{"lineNumber":311,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":312,"author":{"gitId":"Piyotato"},"content":"`StudentEditor` is an abstract class which contains all the logic for modifying the student. Concrete implementations","lastModifiedDate":"2022-11-07"},{"lineNumber":313,"author":{"gitId":"Piyotato"},"content":"of `EditStudentCommand` such as the `MarkCommand` also contains an implementation of its corresponding `StudentEditor` (","lastModifiedDate":"2022-11-07"},{"lineNumber":314,"author":{"gitId":"Piyotato"},"content":"E.g. `MarkCommandStudentEditor` in the case of `MarkCommand`).","lastModifiedDate":"2022-11-07"},{"lineNumber":315,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":316,"author":{"gitId":"Piyotato"},"content":"The corresponding `EditCommandParser` instantiates both its `IndexListGenerator` and the `StudentEditor` based on inputs","lastModifiedDate":"2022-11-07"},{"lineNumber":317,"author":{"gitId":"Piyotato"},"content":"and passed them to the constructor of the respective command (`MarkCommand` in this case). The example class structure","lastModifiedDate":"2022-11-07"},{"lineNumber":318,"author":{"gitId":"Piyotato"},"content":"using `MarkCommandParser` is illustrated in the class diagram","lastModifiedDate":"2022-11-07"},{"lineNumber":319,"author":{"gitId":"comicalromance"},"content":"below.","lastModifiedDate":"2022-10-20"},{"lineNumber":320,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":321,"author":{"gitId":"Piyotato"},"content":"![MarkCommandParserClassDiagram](images/diagrams/MarkCommandParserClassDiagram.png){: diagram}","lastModifiedDate":"2022-11-07"},{"lineNumber":322,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":323,"author":{"gitId":"Piyotato"},"content":"### General flow for `EditStudentCommand`","lastModifiedDate":"2022-11-07"},{"lineNumber":324,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":325,"author":{"gitId":"highorbit25"},"content":"Given below is the typical flow for `EditStudentCommand` such as the  `MarkCommand#execute()`.","lastModifiedDate":"2022-11-06"},{"lineNumber":326,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":327,"author":{"gitId":"Piyotato"},"content":"1. The command loops through the list of indexes to be modified, as indicated in the `IndexListGenerator`.","lastModifiedDate":"2022-11-07"},{"lineNumber":328,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":329,"author":{"gitId":"Piyotato"},"content":"2. Here we have `editedStudent` replacing the old student in the `Model` of through `Model#setStudent()`.","lastModifiedDate":"2022-11-07"},{"lineNumber":330,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":331,"author":{"gitId":"lpohsien"},"content":"Below is a more detailed sequence diagram for the execution of the command using the same example of `MarkCommand`.","lastModifiedDate":"2022-10-28"},{"lineNumber":332,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":333,"author":{"gitId":"Piyotato"},"content":"![MarkCommandSequenceDiagram](images/diagrams/MarkCommandSequenceDiagram.png){: diagram}","lastModifiedDate":"2022-11-07"},{"lineNumber":334,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":335,"author":{"gitId":"highorbit25"},"content":"The following activity diagram summarizes what happens when a user executes a mark command:","lastModifiedDate":"2022-11-07"},{"lineNumber":336,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":337,"author":{"gitId":"highorbit25"},"content":"![MarkActivityDiagram](images/diagrams/MarkActivityDiagram.png){: diagram}","lastModifiedDate":"2022-11-07"},{"lineNumber":338,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":339,"author":{"gitId":"Piyotato"},"content":"### Additional Notes","lastModifiedDate":"2022-11-07"},{"lineNumber":340,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":341,"author":{"gitId":"Piyotato"},"content":"#### Stateless Attributes","lastModifiedDate":"2022-11-07"},{"lineNumber":342,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":343,"author":{"gitId":"Piyotato"},"content":"`tag`/`untag` : This command adds/modifies/removes tags that are represented by the `Tag` class and does not include any","lastModifiedDate":"2022-11-07"},{"lineNumber":344,"author":{"gitId":"Piyotato"},"content":"status.","lastModifiedDate":"2022-11-07"},{"lineNumber":345,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":346,"author":{"gitId":"Piyotato"},"content":"#### Multi-State Attributes","lastModifiedDate":"2022-11-07"},{"lineNumber":347,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":348,"author":{"gitId":"Piyotato"},"content":"Some attributes of a `Student` can have multiple states and can be represented by an identifier. This is encapsulated by","lastModifiedDate":"2022-11-07"},{"lineNumber":349,"author":{"gitId":"Piyotato"},"content":"the `MultiStateAttribute\u003cS, T\u003e` generic class, where `S` is the type of the identifier (e.g. `String`), while `T` is the type","lastModifiedDate":"2022-11-07"},{"lineNumber":350,"author":{"gitId":"Piyotato"},"content":"of the state, typically some `enum`.","lastModifiedDate":"2022-11-07"},{"lineNumber":351,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":352,"author":{"gitId":"Piyotato"},"content":"1. `mark` /`unmark` : This command adds/modifies/removes a student\u0027s attendances that are represented by","lastModifiedDate":"2022-11-07"},{"lineNumber":353,"author":{"gitId":"Piyotato"},"content":"   the `Attendance`","lastModifiedDate":"2022-11-07"},{"lineNumber":354,"author":{"gitId":"Piyotato"},"content":"   class. `Attendance` is a `MultiStateAttribute\u003cString, Attendance.Status\u003e` which includes a `Status` enumeration","lastModifiedDate":"2022-11-07"},{"lineNumber":355,"author":{"gitId":"Piyotato"},"content":"   containing `ATTENDED` and `NOT_ATTENDED`.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":356,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":357,"author":{"gitId":"Piyotato"},"content":"2. `grade` /`ungrade` : This command adds/modifies/removes a student\u0027s assignment grading record that are represented by","lastModifiedDate":"2022-11-07"},{"lineNumber":358,"author":{"gitId":"Piyotato"},"content":"   the `Assigment` class. `Assignment` is a `MultiStateAttribute\u003cString, Assignment.Status\u003e` which includes a `Status`","lastModifiedDate":"2022-11-07"},{"lineNumber":359,"author":{"gitId":"Piyotato"},"content":"   enumeration containing `NEW`, `RECEIVED`, and `MARKED`.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":360,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":361,"author":{"gitId":"Piyotato"},"content":"3. `participate` /`unparticipate` : This command adds/modifies/removes a student\u0027s participation record that are","lastModifiedDate":"2022-11-07"},{"lineNumber":362,"author":{"gitId":"Piyotato"},"content":"   represented by the `Participation` class. `Participation` is a `MultiStateAttribute\u003cString, Participation.Status\u003e`","lastModifiedDate":"2022-11-07"},{"lineNumber":363,"author":{"gitId":"Piyotato"},"content":"   which includes a `Status` enumeration containing `PARTICIPATED` and `NOT_PARTICIPATED`.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":364,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":365,"author":{"gitId":"Piyotato"},"content":"### Design Considerations:","lastModifiedDate":"2022-11-07"},{"lineNumber":366,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":367,"author":{"gitId":"Piyotato"},"content":"**Aspect: Abstraction of the generic `EditStudentCommand`:**","lastModifiedDate":"2022-11-07"},{"lineNumber":368,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":369,"author":{"gitId":"Piyotato"},"content":"* **Common behaviours**","lastModifiedDate":"2022-11-07"},{"lineNumber":370,"author":{"gitId":"Piyotato"},"content":"    1. Parse some indices of students to mutate in some way","lastModifiedDate":"2022-11-07"},{"lineNumber":371,"author":{"gitId":"Piyotato"},"content":"    2. Parse some potential mutations to students","lastModifiedDate":"2022-11-07"},{"lineNumber":372,"author":{"gitId":"Piyotato"},"content":"    3. Return immediately if no mutations are parsed","lastModifiedDate":"2022-11-07"},{"lineNumber":373,"author":{"gitId":"Piyotato"},"content":"    4. Perform mutation on students","lastModifiedDate":"2022-11-07"},{"lineNumber":374,"author":{"gitId":"Piyotato"},"content":"    5. Replace original students in StudMap","lastModifiedDate":"2022-11-07"},{"lineNumber":375,"author":{"gitId":"Piyotato"},"content":"    6. Phrase command result in terms of the edits that were made","lastModifiedDate":"2022-11-07"},{"lineNumber":376,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":377,"author":{"gitId":"Piyotato"},"content":"These behaviours have been abstracted into `IndexCommandParser`, `EditStudentCommandParser` and `EditStudentCommand`.","lastModifiedDate":"2022-11-07"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":379,"author":{"gitId":"Piyotato"},"content":"**Aspect: Abstraction of the generic `MultiStateAttribute`:**","lastModifiedDate":"2022-11-07"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":381,"author":{"gitId":"Piyotato"},"content":"* **Common behaviours**","lastModifiedDate":"2022-11-07"},{"lineNumber":382,"author":{"gitId":"Piyotato"},"content":"    1. Have a field for identifying it (`identifier`) and also a value (`status`).","lastModifiedDate":"2022-11-07"},{"lineNumber":383,"author":{"gitId":"Piyotato"},"content":"    2. Need equality defined by `identifier` but not `status` since they are used in a `HashMap`","lastModifiedDate":"2022-11-07"},{"lineNumber":384,"author":{"gitId":"Piyotato"},"content":"    3. Need strong equality sometimes desired where `identifier` and `status` must both be equal, such as when","lastModifiedDate":"2022-11-07"},{"lineNumber":385,"author":{"gitId":"Piyotato"},"content":"       determining","lastModifiedDate":"2022-11-07"},{"lineNumber":386,"author":{"gitId":"Piyotato"},"content":"       whether a `Student` has been edited.","lastModifiedDate":"2022-11-07"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":388,"author":{"gitId":"Piyotato"},"content":"These behaviours have been abstracted into `MultiStateAttribute`. Due to the way it is implemented as a generic class,","lastModifiedDate":"2022-11-07"},{"lineNumber":389,"author":{"gitId":"Piyotato"},"content":"you can reasonably extend it to create attributes that use non-string identifiers and non-enum states (e.g. `Integer`).","lastModifiedDate":"2022-11-07"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":391,"author":{"gitId":"Piyotato"},"content":"**Aspect: How command executes:**","lastModifiedDate":"2022-11-07"},{"lineNumber":392,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":393,"author":{"gitId":"comicalromance"},"content":"* **Alternative 1 (current choice):** Update the students using StudentEditor.","lastModifiedDate":"2022-10-20"},{"lineNumber":394,"author":{"gitId":"comicalromance"},"content":"    * Pros: Easy to extend functionality to other classes, more OOP-oriented","lastModifiedDate":"2022-10-20"},{"lineNumber":395,"author":{"gitId":"comicalromance"},"content":"    * Cons: May decrease readability for new users due to many classes involved","lastModifiedDate":"2022-10-20"},{"lineNumber":396,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":397,"author":{"gitId":"comicalromance"},"content":"* **Alternative 2:** Update the students in MarkCommand itself","lastModifiedDate":"2022-10-20"},{"lineNumber":398,"author":{"gitId":"comicalromance"},"content":"    * Pros: More intuitive and easy to understand","lastModifiedDate":"2022-10-20"},{"lineNumber":399,"author":{"gitId":"comicalromance"},"content":"    * Cons: Makes code harder to maintain, more code duplication.","lastModifiedDate":"2022-10-20"},{"lineNumber":400,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":401,"author":{"gitId":"Piyotato"},"content":"## Sort","lastModifiedDate":"2022-11-07"},{"lineNumber":402,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":403,"author":{"gitId":"Piyotato"},"content":"### Implementation","lastModifiedDate":"2022-11-07"},{"lineNumber":404,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":405,"author":{"gitId":"Piyotato"},"content":"The sort feature is implemented by `SortCommand` which extends the abstract `Command` class. Since sorting is done","lastModifiedDate":"2022-11-07"},{"lineNumber":406,"author":{"gitId":"Piyotato"},"content":"according to the specified attribute, the abstract `Attribute` class is used to handle the input attribute and provide","lastModifiedDate":"2022-11-07"},{"lineNumber":407,"author":{"gitId":"Piyotato"},"content":"the corresponding `Comparator` to sort the student list.","lastModifiedDate":"2022-11-07"},{"lineNumber":408,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":409,"author":{"gitId":"highorbit25"},"content":"`SortCommand` supports the following operation:","lastModifiedDate":"2022-10-21"},{"lineNumber":410,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":411,"author":{"gitId":"highorbit25"},"content":"* `SortCommand#execute()` — Sorts the current working list by the specified comparator and order in the `SortCommand`.","lastModifiedDate":"2022-10-21"},{"lineNumber":412,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":413,"author":{"gitId":"highorbit25"},"content":"This operation is exposed in the `Model` interface as `sortFilteredStudentList()`.","lastModifiedDate":"2022-10-21"},{"lineNumber":414,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":415,"author":{"gitId":"highorbit25"},"content":"The following sequence diagram shows how the sort operation works:","lastModifiedDate":"2022-10-24"},{"lineNumber":416,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":417,"author":{"gitId":"Piyotato"},"content":"![SortSequenceDiagram](images/diagrams/SortCommandSequenceDiagram.png){: diagram}","lastModifiedDate":"2022-11-07"},{"lineNumber":418,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":419,"author":{"gitId":"highorbit25"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `SortCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2022-11-06"},{"lineNumber":420,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":421,"author":{"gitId":"highorbit25"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-11-06"},{"lineNumber":422,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":423,"author":{"gitId":"Piyotato"},"content":"### General Flow for `SortCommand`","lastModifiedDate":"2022-11-07"},{"lineNumber":424,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":425,"author":{"gitId":"highorbit25"},"content":"Given below is an example usage scenario and how the sort mechanism behaves at each step.","lastModifiedDate":"2022-10-21"},{"lineNumber":426,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":427,"author":{"gitId":"Piyotato"},"content":"1. The user executes `sort asc a/name` to sort the students in the student map by their names in ascending order.","lastModifiedDate":"2022-11-07"},{"lineNumber":428,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":429,"author":{"gitId":"Piyotato"},"content":"2. `SortCommandParser` handles the parsing of user input to ensure a valid `attributeType` and `sortingOrder` is","lastModifiedDate":"2022-11-07"},{"lineNumber":430,"author":{"gitId":"Piyotato"},"content":"   supplied. The checks are done by `Attribute#isValidAttributeType()` and `Order#isValidOrderName()` respectively. For","lastModifiedDate":"2022-11-07"},{"lineNumber":431,"author":{"gitId":"Piyotato"},"content":"   valid attributes and order, the `Comparator` and `Order` will be supplied by `Attribute#getAttributeComparator()`","lastModifiedDate":"2022-11-07"},{"lineNumber":432,"author":{"gitId":"Piyotato"},"content":"   and `ParserUtil#parseOrder()` to create a `SortCommand`.","lastModifiedDate":"2022-11-07"},{"lineNumber":433,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":434,"author":{"gitId":"Piyotato"},"content":"3. `SortCommand` calls `Model#sortFilteredStudentList()` with the `Comparator` for sorting names and the","lastModifiedDate":"2022-11-07"},{"lineNumber":435,"author":{"gitId":"Piyotato"},"content":"   ascending `Order` required.","lastModifiedDate":"2022-11-07"},{"lineNumber":436,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":437,"author":{"gitId":"Piyotato"},"content":"4. The ModelManager containing the `studMap` passes on the `Comparator` and `Order` to `StudMap#sort()`.","lastModifiedDate":"2022-11-07"},{"lineNumber":438,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":439,"author":{"gitId":"Piyotato"},"content":"5. Note that StudMap stores the student list in a `UniqueStudentList`. `UniqueStudentList#sort()` is called with","lastModifiedDate":"2022-11-07"},{"lineNumber":440,"author":{"gitId":"Piyotato"},"content":"   the `Comparator` and the boolean value of `false` for `isDescending` according to the ascending `Order` specified.","lastModifiedDate":"2022-11-07"},{"lineNumber":441,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":442,"author":{"gitId":"Piyotato"},"content":"6. The `internalList` stored in the `UniqueStudentList` is an `FXCollections.observableArrayList` which will then","lastModifiedDate":"2022-11-07"},{"lineNumber":443,"author":{"gitId":"Piyotato"},"content":"   be sorted using the `Comparator`. The ordering of the list is reversed using `FXCollections#reverse()`","lastModifiedDate":"2022-11-07"},{"lineNumber":444,"author":{"gitId":"Piyotato"},"content":"   if `isDescending`","lastModifiedDate":"2022-11-07"},{"lineNumber":445,"author":{"gitId":"Piyotato"},"content":"   is true.","lastModifiedDate":"2022-11-07"},{"lineNumber":446,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":447,"author":{"gitId":"Piyotato"},"content":"7. The sorted list is displayed to the user.","lastModifiedDate":"2022-11-07"},{"lineNumber":448,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":449,"author":{"gitId":"highorbit25"},"content":"The following activity diagram summarizes what happens when a user executes a sort command:","lastModifiedDate":"2022-11-07"},{"lineNumber":450,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":451,"author":{"gitId":"highorbit25"},"content":"![SortActivityDiagram](images/diagrams/SortActivityDiagram.png){: diagram}","lastModifiedDate":"2022-11-07"},{"lineNumber":452,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":453,"author":{"gitId":"Piyotato"},"content":"### Design Considerations","lastModifiedDate":"2022-11-07"},{"lineNumber":454,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":455,"author":{"gitId":"highorbit25"},"content":"**Aspect: How sort executes:**","lastModifiedDate":"2022-10-21"},{"lineNumber":456,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":457,"author":{"gitId":"Piyotato"},"content":"* **Alternative 1 (current choice):** Valid attributes to sort are specified in the enum class `AttributeType` and the","lastModifiedDate":"2022-11-07"},{"lineNumber":458,"author":{"gitId":"Piyotato"},"content":"  corresponding `Comparator` is contained within the abstract `Attribute` class.","lastModifiedDate":"2022-11-07"},{"lineNumber":459,"author":{"gitId":"Piyotato"},"content":"    * Pros: Easy to implement. Any new attributes to be enabled for sorting could be specified in the `AttributeType`","lastModifiedDate":"2022-11-07"},{"lineNumber":460,"author":{"gitId":"Piyotato"},"content":"      enum class and the `Comparator` within the `Attribute` class.","lastModifiedDate":"2022-11-07"},{"lineNumber":461,"author":{"gitId":"Piyotato"},"content":"    * Cons: May not be appropriate to specify the `Comparator` for different attributes within the `Attribute` class","lastModifiedDate":"2022-11-07"},{"lineNumber":462,"author":{"gitId":"Piyotato"},"content":"      instead of their own respective class.","lastModifiedDate":"2022-11-07"},{"lineNumber":463,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":464,"author":{"gitId":"Piyotato"},"content":"* **Alternative 2:** `Attribute` as a superclass inherited by each respective attribute. Each attribute specifies its","lastModifiedDate":"2022-11-07"},{"lineNumber":465,"author":{"gitId":"Piyotato"},"content":"  own `Comparator` to be used for sorting and can be retrieved using `getAttributeComparator()`","lastModifiedDate":"2022-11-07"},{"lineNumber":466,"author":{"gitId":"Piyotato"},"content":"    * Pros: Aligns more to OOP where the corresponding `Comparator` is contained within each attribute. Make use of","lastModifiedDate":"2022-11-07"},{"lineNumber":467,"author":{"gitId":"Piyotato"},"content":"      polymorphism to call the correct `getAttributeComparator()` for different attributes.","lastModifiedDate":"2022-11-07"},{"lineNumber":468,"author":{"gitId":"Piyotato"},"content":"    * Cons: Attribute subclasses must be instantiated possibly through a factory method just to get the `Comparator`","lastModifiedDate":"2022-11-07"},{"lineNumber":469,"author":{"gitId":"Piyotato"},"content":"      used in sorting.","lastModifiedDate":"2022-11-07"},{"lineNumber":470,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":471,"author":{"gitId":"comicalromance"},"content":"## Import","lastModifiedDate":"2022-11-07"},{"lineNumber":472,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":473,"author":{"gitId":"comicalromance"},"content":"### Implementation","lastModifiedDate":"2022-11-07"},{"lineNumber":474,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":475,"author":{"gitId":"comicalromance"},"content":"The implemented feature is implemented by `ImportCommand` which extends the abstract `Command` class. As our design","lastModifiedDate":"2022-11-07"},{"lineNumber":476,"author":{"gitId":"comicalromance"},"content":"of import opens a GUI file browser for the user to select a file, it uses the `FileChooser` object provided by","lastModifiedDate":"2022-11-07"},{"lineNumber":477,"author":{"gitId":"comicalromance"},"content":"JavaFX for its functionality. As `FileChooser` requires a JavaFX stage to work, `ImportCommand` has to be hooked","lastModifiedDate":"2022-11-07"},{"lineNumber":478,"author":{"gitId":"comicalromance"},"content":"and executed partially by `MainWindow` as well. To facilitate communication between `ImportCommand` and `MainWindow`,","lastModifiedDate":"2022-11-07"},{"lineNumber":479,"author":{"gitId":"comicalromance"},"content":"an additional flag `chooseFile` has been hooked to `CommandResult`. This dynamic will be illustrated by a sequence diagram,","lastModifiedDate":"2022-11-07"},{"lineNumber":480,"author":{"gitId":"comicalromance"},"content":"which has been split into two parts.","lastModifiedDate":"2022-11-07"},{"lineNumber":481,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":482,"author":{"gitId":"comicalromance"},"content":"![ImportCommandSequenceDiagram1](images/diagrams/ImportCommandSequenceDiagram1.png){: diagram}","lastModifiedDate":"2022-11-07"},{"lineNumber":483,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":484,"author":{"gitId":"comicalromance"},"content":"After the command is passed to `LogicManager`, command processing occurs as per typical commands in StudMap. However,","lastModifiedDate":"2022-11-07"},{"lineNumber":485,"author":{"gitId":"comicalromance"},"content":"`ImportCommand` does not handle any file processing (as no file has been selected yet), and instead returns a `CommandResult`","lastModifiedDate":"2022-11-07"},{"lineNumber":486,"author":{"gitId":"comicalromance"},"content":"with the flag `chooseFile \u003d\u003d true`.","lastModifiedDate":"2022-11-07"},{"lineNumber":487,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":488,"author":{"gitId":"comicalromance"},"content":"![ImportCommandSequenceDiagram2](images/diagrams/ImportCommandSequenceDiagram2.png){: diagram}","lastModifiedDate":"2022-11-07"},{"lineNumber":489,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":490,"author":{"gitId":"comicalromance"},"content":"After receiving the `CommandResult` with the flag, `MainWindow` will handle chooseFile execution, opening the file browser","lastModifiedDate":"2022-11-07"},{"lineNumber":491,"author":{"gitId":"comicalromance"},"content":"for the user. After a file has been selected, the file will be passed to `LogicManager`, which is then passed to `ImportCsv`","lastModifiedDate":"2022-11-07"},{"lineNumber":492,"author":{"gitId":"comicalromance"},"content":"for processing and insertion into the model.","lastModifiedDate":"2022-11-07"},{"lineNumber":493,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":494,"author":{"gitId":"comicalromance"},"content":"### General Flow for `ImportCommand`","lastModifiedDate":"2022-11-07"},{"lineNumber":495,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":496,"author":{"gitId":"comicalromance"},"content":"Given below is an example usage scenario and how the import mechanism behaves at each step.","lastModifiedDate":"2022-11-07"},{"lineNumber":497,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":498,"author":{"gitId":"comicalromance"},"content":"1. `import` is received from user input, and after a chain of execution from `LogicManager` to `ImportCommand`,","lastModifiedDate":"2022-11-07"},{"lineNumber":499,"author":{"gitId":"comicalromance"},"content":"    indicates to `MainWindow` that `import` has been called.","lastModifiedDate":"2022-11-07"},{"lineNumber":500,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":501,"author":{"gitId":"comicalromance"},"content":"2. `MainWindow` opens a file browser through the `FileChooser` object for the user to select a CSV file.","lastModifiedDate":"2022-11-07"},{"lineNumber":502,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":503,"author":{"gitId":"comicalromance"},"content":"3. The file is passed to `ImportCsv`, which then reads each row of CSV data line by line.","lastModifiedDate":"2022-11-07"},{"lineNumber":504,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":505,"author":{"gitId":"comicalromance"},"content":"4. If the data in the CSV row follows the required input format, it creates a student populated with the data, and","lastModifiedDate":"2022-11-07"},{"lineNumber":506,"author":{"gitId":"comicalromance"},"content":"   populates the model with that student.","lastModifiedDate":"2022-11-07"},{"lineNumber":507,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":508,"author":{"gitId":"comicalromance"},"content":"5. This process is repeated until the CSV file has no more rows left to read.","lastModifiedDate":"2022-11-07"},{"lineNumber":509,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":510,"author":{"gitId":"comicalromance"},"content":"6. The updated student list populated with new students is displayed to the user.","lastModifiedDate":"2022-11-07"},{"lineNumber":511,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":512,"author":{"gitId":"comicalromance"},"content":"The following activity diagram summarizes the execution of import.","lastModifiedDate":"2022-11-07"},{"lineNumber":513,"author":{"gitId":"comicalromance"},"content":"![ImportActivityDiagram](images/diagrams/ImportActivityDiagram.png){: diagram}","lastModifiedDate":"2022-11-07"},{"lineNumber":514,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":515,"author":{"gitId":"comicalromance"},"content":"### Design Considerations","lastModifiedDate":"2022-11-07"},{"lineNumber":516,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":517,"author":{"gitId":"comicalromance"},"content":"**Aspect: How the user selects a file:**","lastModifiedDate":"2022-11-07"},{"lineNumber":518,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":519,"author":{"gitId":"comicalromance"},"content":"* **Alternative 1:** User specifies the path to the file as a parameter for the `import` command.","lastModifiedDate":"2022-11-07"},{"lineNumber":520,"author":{"gitId":"comicalromance"},"content":"    * Pros: Easy to implement. Avoids interfacing with the JavaFX FileChooser object, containing all processes","lastModifiedDate":"2022-11-07"},{"lineNumber":521,"author":{"gitId":"comicalromance"},"content":"      within the `ImportCommand`","lastModifiedDate":"2022-11-07"},{"lineNumber":522,"author":{"gitId":"comicalromance"},"content":"    * Cons: May lead to complications involving paths and directories. Will also be time consuming and less intuitive","lastModifiedDate":"2022-11-07"},{"lineNumber":523,"author":{"gitId":"comicalromance"},"content":"      for the user.","lastModifiedDate":"2022-11-07"},{"lineNumber":524,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":525,"author":{"gitId":"comicalromance"},"content":"* **Alternative 2 (current choice):** `import` command opens a file browser for the user to choose the file.","lastModifiedDate":"2022-11-07"},{"lineNumber":526,"author":{"gitId":"comicalromance"},"content":"  * Pros: Intuitive and efficient for the user to navigate. Avoids many of the complications involving paths","lastModifiedDate":"2022-11-07"},{"lineNumber":527,"author":{"gitId":"comicalromance"},"content":"    (e.g. relative / absolute paths) and processing input","lastModifiedDate":"2022-11-07"},{"lineNumber":528,"author":{"gitId":"comicalromance"},"content":"  * Cons: May lead to unnecessary communication between `Logic` and `UI`, and also increases code coupling. More difficult","lastModifiedDate":"2022-11-07"},{"lineNumber":529,"author":{"gitId":"comicalromance"},"content":"    to implement.","lastModifiedDate":"2022-11-07"},{"lineNumber":530,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":531,"author":{"gitId":"Piyotato"},"content":"## \\[Proposed\\] Undo/Redo","lastModifiedDate":"2022-11-07"},{"lineNumber":532,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":533,"author":{"gitId":"Piyotato"},"content":"### Proposed Implementation","lastModifiedDate":"2022-11-07"},{"lineNumber":534,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":535,"author":{"gitId":"lpohsien"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedStudMap`. It extends `StudMap` with an undo/redo","lastModifiedDate":"2022-10-27"},{"lineNumber":536,"author":{"gitId":"lpohsien"},"content":"history, stored internally as an `studMapStateList` and `currentStatePointer`. Additionally, it implements the","lastModifiedDate":"2022-10-27"},{"lineNumber":537,"author":{"gitId":"dr-arrgghh"},"content":"following operations:","lastModifiedDate":"2022-10-09"},{"lineNumber":538,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":539,"author":{"gitId":"lpohsien"},"content":"* `VersionedStudMap#commit()` — Saves the current student map state in its history.","lastModifiedDate":"2022-10-27"},{"lineNumber":540,"author":{"gitId":"lpohsien"},"content":"* `VersionedStudMap#undo()` — Restores the previous student map state from its history.","lastModifiedDate":"2022-10-27"},{"lineNumber":541,"author":{"gitId":"lpohsien"},"content":"* `VersionedStudMap#redo()` — Restores a previously undone student map state from its history.","lastModifiedDate":"2022-10-27"},{"lineNumber":542,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":543,"author":{"gitId":"lpohsien"},"content":"These operations are exposed in the `Model` interface as `Model#commitStudMap()`, `Model#undoStudMap()`","lastModifiedDate":"2022-10-27"},{"lineNumber":544,"author":{"gitId":"lpohsien"},"content":"and `Model#redoStudMap()` respectively.","lastModifiedDate":"2022-10-27"},{"lineNumber":545,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":546,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":547,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":548,"author":{"gitId":"lpohsien"},"content":"Step 1. The user launches the application for the first time. The `VersionedStudMap` will be initialized with the","lastModifiedDate":"2022-10-27"},{"lineNumber":549,"author":{"gitId":"lpohsien"},"content":"initial student map state, and the `currentStatePointer` pointing to that single student map state.","lastModifiedDate":"2022-10-27"},{"lineNumber":550,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":551,"author":{"gitId":"Piyotato"},"content":"![UndoRedoState0](images/diagrams/undo-redo/UndoRedoState0.png){: diagram}","lastModifiedDate":"2022-11-07"},{"lineNumber":552,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":553,"author":{"gitId":"lpohsien"},"content":"Step 2. The user executes `delete 5` command to delete the 5th student in the student map. The `delete` command","lastModifiedDate":"2022-10-27"},{"lineNumber":554,"author":{"gitId":"lpohsien"},"content":"calls `Model#commitStudMap()`, causing the modified state of the student map after the `delete 5` command executes","lastModifiedDate":"2022-10-27"},{"lineNumber":555,"author":{"gitId":"lpohsien"},"content":"to be saved in the `studMapStateList`, and the `currentStatePointer` is shifted to the newly inserted student map","lastModifiedDate":"2022-10-27"},{"lineNumber":556,"author":{"gitId":"dr-arrgghh"},"content":"state.","lastModifiedDate":"2022-10-09"},{"lineNumber":557,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":558,"author":{"gitId":"Piyotato"},"content":"![UndoRedoState1](images/diagrams/undo-redo/UndoRedoState1.png){: diagram}","lastModifiedDate":"2022-11-07"},{"lineNumber":559,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":560,"author":{"gitId":"lpohsien"},"content":"Step 3. The user executes `add n/David …​` to add a new student. The `add` command also calls `Model#commitStudMap()`","lastModifiedDate":"2022-10-27"},{"lineNumber":561,"author":{"gitId":"lpohsien"},"content":", causing another modified student map state to be saved into the `studMapStateList`.","lastModifiedDate":"2022-10-27"},{"lineNumber":562,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":563,"author":{"gitId":"Piyotato"},"content":"![UndoRedoState2](images/diagrams/undo-redo/UndoRedoState2.png){: diagram}","lastModifiedDate":"2022-11-07"},{"lineNumber":564,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":565,"author":{"gitId":"lpohsien"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitStudMap()`, so the student map state will not be saved into the `studMapStateList`.","lastModifiedDate":"2022-10-27"},{"lineNumber":566,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":567,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":568,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":569,"author":{"gitId":"comicalromance"},"content":"Step 4. The user now decides that adding the student was a mistake, and decides to undo that action by executing","lastModifiedDate":"2022-10-15"},{"lineNumber":570,"author":{"gitId":"lpohsien"},"content":"the `undo` command. The `undo` command will call `Model#undoStudMap()`, which will shift the `currentStatePointer`","lastModifiedDate":"2022-10-27"},{"lineNumber":571,"author":{"gitId":"lpohsien"},"content":"once to the left, pointing it to the previous student map state, and restores the student map to that state.","lastModifiedDate":"2022-10-27"},{"lineNumber":572,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":573,"author":{"gitId":"Piyotato"},"content":"![UndoRedoState3](images/diagrams/undo-redo/UndoRedoState3.png){: diagram}","lastModifiedDate":"2022-11-07"},{"lineNumber":574,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":575,"author":{"gitId":"lpohsien"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial StudMap state, then there are no previous StudMap states to restore. The `undo` command uses `Model#canUndoStudMap()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2022-10-27"},{"lineNumber":576,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":577,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":578,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":579,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":580,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":581,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":582,"author":{"gitId":"Piyotato"},"content":"![UndoSequenceDiagram](images/diagrams/undo-redo/UndoSequenceDiagram.png){: diagram}","lastModifiedDate":"2022-11-07"},{"lineNumber":583,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":584,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":585,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":586,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":587,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":588,"author":{"gitId":"lpohsien"},"content":"The `redo` command does the opposite — it calls `Model#redoStudMap()`, which shifts the `currentStatePointer` once","lastModifiedDate":"2022-10-27"},{"lineNumber":589,"author":{"gitId":"lpohsien"},"content":"to the right, pointing to the previously undone state, and restores the student map to that state.","lastModifiedDate":"2022-10-27"},{"lineNumber":590,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":591,"author":{"gitId":"lpohsien"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `studMapStateList.size() - 1`, pointing to the latest student map state, then there are no undone StudMap states to restore. The `redo` command uses `Model#canRedoStudMap()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2022-10-27"},{"lineNumber":592,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":593,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":594,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":595,"author":{"gitId":"lpohsien"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the student map, such","lastModifiedDate":"2022-10-27"},{"lineNumber":596,"author":{"gitId":"lpohsien"},"content":"as `list`, will usually not call `Model#commitStudMap()`, `Model#undoStudMap()` or `Model#redoStudMap()`.","lastModifiedDate":"2022-10-27"},{"lineNumber":597,"author":{"gitId":"lpohsien"},"content":"Thus, the `studMapStateList` remains unchanged.","lastModifiedDate":"2022-10-27"},{"lineNumber":598,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":599,"author":{"gitId":"Piyotato"},"content":"![UndoRedoState4](images/diagrams/undo-redo/UndoRedoState4.png){: diagram}","lastModifiedDate":"2022-11-07"},{"lineNumber":600,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":601,"author":{"gitId":"lpohsien"},"content":"Step 6. The user executes `clear`, which calls `Model#commitStudMap()`. Since the `currentStatePointer` is not","lastModifiedDate":"2022-10-27"},{"lineNumber":602,"author":{"gitId":"lpohsien"},"content":"pointing at the end of the `studMapStateList`, all student map states after the `currentStatePointer` will be","lastModifiedDate":"2022-10-27"},{"lineNumber":603,"author":{"gitId":"dr-arrgghh"},"content":"purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern","lastModifiedDate":"2022-10-09"},{"lineNumber":604,"author":{"gitId":"dr-arrgghh"},"content":"desktop applications follow.","lastModifiedDate":"2022-10-09"},{"lineNumber":605,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":606,"author":{"gitId":"Piyotato"},"content":"![UndoRedoState5](images/diagrams/undo-redo/UndoRedoState5.png){: diagram}","lastModifiedDate":"2022-11-07"},{"lineNumber":607,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":608,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":609,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":610,"author":{"gitId":"Piyotato"},"content":"![CommitActivityDiagram](images/diagrams/undo-redo/CommitActivityDiagram.png){: diagram}","lastModifiedDate":"2022-11-07"},{"lineNumber":611,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":612,"author":{"gitId":"Piyotato"},"content":"### Design Considerations","lastModifiedDate":"2022-11-07"},{"lineNumber":613,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":614,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":615,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":616,"author":{"gitId":"lpohsien"},"content":"* **Alternative 1 (current choice):** Saves the entire student map.","lastModifiedDate":"2022-10-27"},{"lineNumber":617,"author":{"gitId":"-"},"content":"    * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":618,"author":{"gitId":"-"},"content":"    * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":619,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":620,"author":{"gitId":"dr-arrgghh"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by itself.","lastModifiedDate":"2022-10-09"},{"lineNumber":621,"author":{"gitId":"comicalromance"},"content":"    * Pros: Will use less memory (e.g. for `delete`, just save the student being deleted).","lastModifiedDate":"2022-10-15"},{"lineNumber":622,"author":{"gitId":"-"},"content":"    * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":623,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":624,"author":{"gitId":"Piyotato"},"content":"# \\[Proposed\\] Better Index Parsing","lastModifiedDate":"2022-11-07"},{"lineNumber":625,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":626,"author":{"gitId":"Piyotato"},"content":"## Proposed Implementation","lastModifiedDate":"2022-11-07"},{"lineNumber":627,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":628,"author":{"gitId":"Piyotato"},"content":"Necessary generic classes have already been created for this purpose. In `IndexCommandParser`, you can attempt to parse","lastModifiedDate":"2022-11-07"},{"lineNumber":629,"author":{"gitId":"Piyotato"},"content":"the given `preamble` in more detail, such as by identifying other common indexing syntax (e.g. `2..5`) to represent","lastModifiedDate":"2022-11-07"},{"lineNumber":630,"author":{"gitId":"Piyotato"},"content":"indices between `2` and `5` inclusive. After parsing, you can then write a `IndexListGenerator`, which is a","lastModifiedDate":"2022-11-07"},{"lineNumber":631,"author":{"gitId":"Piyotato"},"content":"functional interface that produces a list of `Index` for StudMap to perform operations on.","lastModifiedDate":"2022-11-07"},{"lineNumber":632,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":633,"author":{"gitId":"Piyotato"},"content":"Due to the OOP design of StudMap, you only need to implement it correctly once. All parsers that inherit","lastModifiedDate":"2022-11-07"},{"lineNumber":634,"author":{"gitId":"Piyotato"},"content":"from `IndexCommandParser`, including","lastModifiedDate":"2022-11-07"},{"lineNumber":635,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":636,"author":{"gitId":"Piyotato"},"content":"* `EditCommandParser`","lastModifiedDate":"2022-11-07"},{"lineNumber":637,"author":{"gitId":"Piyotato"},"content":"* `MarkCommandParser`","lastModifiedDate":"2022-11-07"},{"lineNumber":638,"author":{"gitId":"Piyotato"},"content":"* `UnmarkCommandParser`","lastModifiedDate":"2022-11-07"},{"lineNumber":639,"author":{"gitId":"Piyotato"},"content":"* `GradeCommandParser`","lastModifiedDate":"2022-11-07"},{"lineNumber":640,"author":{"gitId":"Piyotato"},"content":"* `UngradeCommandParser`","lastModifiedDate":"2022-11-07"},{"lineNumber":641,"author":{"gitId":"Piyotato"},"content":"* `ParticipateCommandParser`","lastModifiedDate":"2022-11-07"},{"lineNumber":642,"author":{"gitId":"Piyotato"},"content":"* `UnparticipateCommandParser`","lastModifiedDate":"2022-11-07"},{"lineNumber":643,"author":{"gitId":"Piyotato"},"content":"* `TagCommandParser`","lastModifiedDate":"2022-11-07"},{"lineNumber":644,"author":{"gitId":"Piyotato"},"content":"* `UntagCommandParser`","lastModifiedDate":"2022-11-07"},{"lineNumber":645,"author":{"gitId":"Piyotato"},"content":"* `DeleteCommandParser`","lastModifiedDate":"2022-11-07"},{"lineNumber":646,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":647,"author":{"gitId":"Piyotato"},"content":"will immediately work with the new syntax.","lastModifiedDate":"2022-11-07"},{"lineNumber":648,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":649,"author":{"gitId":"Piyotato"},"content":"---","lastModifiedDate":"2022-11-07"},{"lineNumber":650,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":651,"author":{"gitId":"Piyotato"},"content":"# Documentation, logging, testing, configuration, dev-ops","lastModifiedDate":"2022-11-07"},{"lineNumber":652,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":653,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":654,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":655,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":656,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":657,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":658,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":659,"author":{"gitId":"Piyotato"},"content":"---","lastModifiedDate":"2022-11-07"},{"lineNumber":660,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":661,"author":{"gitId":"Piyotato"},"content":"# Appendix: Requirements","lastModifiedDate":"2022-11-07"},{"lineNumber":662,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":663,"author":{"gitId":"Piyotato"},"content":"## Product scope","lastModifiedDate":"2022-11-07"},{"lineNumber":664,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":665,"author":{"gitId":"Piyotato"},"content":"**Target user profile:**","lastModifiedDate":"2022-11-07"},{"lineNumber":666,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":667,"author":{"gitId":"Piyotato"},"content":"* is a teaching assistant","lastModifiedDate":"2022-11-07"},{"lineNumber":668,"author":{"gitId":"Piyotato"},"content":"* has a need to manage a significant number of students","lastModifiedDate":"2022-09-29"},{"lineNumber":669,"author":{"gitId":"Piyotato"},"content":"* wants to organise their class in multiple ways","lastModifiedDate":"2022-09-29"},{"lineNumber":670,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":671,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":672,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":673,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":674,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":675,"author":{"gitId":"Piyotato"},"content":"**Value proposition:** help teaching assistants better keep track of their students’ progress in their assigned module.","lastModifiedDate":"2022-11-07"},{"lineNumber":676,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":677,"author":{"gitId":"Piyotato"},"content":"## User stories","lastModifiedDate":"2022-11-07"},{"lineNumber":678,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":679,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":680,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":681,"author":{"gitId":"-"},"content":"| Priority | As a …​                                          | I want to …​                                         | So that I can…​                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":682,"author":{"gitId":"Piyotato"},"content":"|----------|--------------------------------------------------|------------------------------------------------------|------------------------------------------------------------------------|","lastModifiedDate":"2022-11-07"},{"lineNumber":683,"author":{"gitId":"lpohsien"},"content":"| `* * *`  | new user                                         | import existing data for students                    | do not need to enter their details one by one manually               |","lastModifiedDate":"2022-11-07"},{"lineNumber":684,"author":{"gitId":"Piyotato"},"content":"| `* * *`  | teaching assistant                               | add a new student                                    |                                                                        |","lastModifiedDate":"2022-11-07"},{"lineNumber":685,"author":{"gitId":"Piyotato"},"content":"| `* * *`  | teaching assistant                               | delete a student                                     | remove entries that I no longer need                                   |","lastModifiedDate":"2022-11-07"},{"lineNumber":686,"author":{"gitId":"Piyotato"},"content":"| `* * *`  | teaching assistant                               | mark students who are present and absent from class  | keep track of attendance using this application                        |","lastModifiedDate":"2022-11-07"},{"lineNumber":687,"author":{"gitId":"Piyotato"},"content":"| `* * *`  | teaching assistant                               | find a student by name                               | locate details of students without having to go through the entire list |","lastModifiedDate":"2022-11-07"},{"lineNumber":688,"author":{"gitId":"Piyotato"},"content":"| `* *`    | teaching assistant with many students in StudMap | sort students by name                                | locate a student easily                                                |","lastModifiedDate":"2022-11-07"},{"lineNumber":689,"author":{"gitId":"Piyotato"},"content":"| `* *`    | teaching assistant                               | filter the students by attribute                     | locate a student easily                                                |","lastModifiedDate":"2022-11-07"},{"lineNumber":690,"author":{"gitId":"Piyotato"},"content":"| `* *`    | teaching assistant                               | create new labels to tag my students with            | better differentiate the students                                      |","lastModifiedDate":"2022-11-07"},{"lineNumber":691,"author":{"gitId":"lpohsien"},"content":"| `* *`    | teaching assistant                               | change the grading status of my student\u0027s assignments            | better keep track of assignments that I have received or marked                                      |","lastModifiedDate":"2022-11-07"},{"lineNumber":692,"author":{"gitId":"lpohsien"},"content":"| `* *`    | teaching assistant                               | update participation status for my students            | better keep track of the different participation components of my students                                      |","lastModifiedDate":"2022-11-07"},{"lineNumber":693,"author":{"gitId":"lpohsien"},"content":"| `*`  | new user                                         | see usage instructions                               | refer to instructions when I forget how to use the App                                     |","lastModifiedDate":"2022-11-07"},{"lineNumber":694,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":695,"author":{"gitId":"Piyotato"},"content":"## Use cases","lastModifiedDate":"2022-11-07"},{"lineNumber":696,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":697,"author":{"gitId":"Piyotato"},"content":"(For all use cases below, the **System** is the `StudMap` and the **Actor** is the `TA`, unless specified otherwise)","lastModifiedDate":"2022-11-07"},{"lineNumber":698,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":699,"author":{"gitId":"comicalromance"},"content":"**Use case: Delete a Student**","lastModifiedDate":"2022-09-30"},{"lineNumber":700,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":701,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":702,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":703,"author":{"gitId":"Piyotato"},"content":"1. TA requests to list students","lastModifiedDate":"2022-11-07"},{"lineNumber":704,"author":{"gitId":"comicalromance"},"content":"2. StudMap shows a list of students","lastModifiedDate":"2022-09-30"},{"lineNumber":705,"author":{"gitId":"Piyotato"},"content":"3. TA requests to delete a specific student in the list","lastModifiedDate":"2022-11-07"},{"lineNumber":706,"author":{"gitId":"comicalromance"},"content":"4. StudMap deletes the student","lastModifiedDate":"2022-09-30"},{"lineNumber":707,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":708,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":709,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":710,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":711,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":712,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":713,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":714,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":715,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":716,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":717,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":718,"author":{"gitId":"comicalromance"},"content":"    * 3a1. StudMap shows an error message.","lastModifiedDate":"2022-09-30"},{"lineNumber":719,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":720,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":721,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":722,"author":{"gitId":"comicalromance"},"content":"**Use case: Add a Student**","lastModifiedDate":"2022-09-30"},{"lineNumber":723,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":724,"author":{"gitId":"comicalromance"},"content":"**MSS**","lastModifiedDate":"2022-09-30"},{"lineNumber":725,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":726,"author":{"gitId":"Piyotato"},"content":"1. TA requests to add a student","lastModifiedDate":"2022-11-07"},{"lineNumber":727,"author":{"gitId":"comicalromance"},"content":"2. StudMap adds the student","lastModifiedDate":"2022-09-30"},{"lineNumber":728,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":729,"author":{"gitId":"comicalromance"},"content":"   Use case ends.","lastModifiedDate":"2022-09-30"},{"lineNumber":730,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":731,"author":{"gitId":"comicalromance"},"content":"**Extensions**","lastModifiedDate":"2022-09-30"},{"lineNumber":732,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":733,"author":{"gitId":"comicalromance"},"content":"* 1a. The given format for users is invalid","lastModifiedDate":"2022-09-30"},{"lineNumber":734,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":735,"author":{"gitId":"comicalromance"},"content":"    * 1a1. StudMap shows an error message.","lastModifiedDate":"2022-09-30"},{"lineNumber":736,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":737,"author":{"gitId":"comicalromance"},"content":"      Use case ends.","lastModifiedDate":"2022-09-30"},{"lineNumber":738,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":739,"author":{"gitId":"highorbit25"},"content":"**Use case: Sort StudMap**","lastModifiedDate":"2022-11-07"},{"lineNumber":740,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":741,"author":{"gitId":"highorbit25"},"content":"**MSS**","lastModifiedDate":"2022-11-07"},{"lineNumber":742,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":743,"author":{"gitId":"highorbit25"},"content":"1. TA requests to sort list by specified Attribute and Order","lastModifiedDate":"2022-11-07"},{"lineNumber":744,"author":{"gitId":"highorbit25"},"content":"2. StudMap sorts list","lastModifiedDate":"2022-11-07"},{"lineNumber":745,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":746,"author":{"gitId":"highorbit25"},"content":"   Use case ends.","lastModifiedDate":"2022-11-07"},{"lineNumber":747,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":748,"author":{"gitId":"highorbit25"},"content":"**Extensions**","lastModifiedDate":"2022-11-07"},{"lineNumber":749,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":750,"author":{"gitId":"highorbit25"},"content":"* 1a. The given Attribute is invalid","lastModifiedDate":"2022-11-07"},{"lineNumber":751,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":752,"author":{"gitId":"highorbit25"},"content":"    * 1a1. StudMap shows an error message.","lastModifiedDate":"2022-11-07"},{"lineNumber":753,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":754,"author":{"gitId":"highorbit25"},"content":"      Use case ends.","lastModifiedDate":"2022-11-07"},{"lineNumber":755,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":756,"author":{"gitId":"highorbit25"},"content":"* 1b. The given Order is invalid","lastModifiedDate":"2022-11-07"},{"lineNumber":757,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":758,"author":{"gitId":"highorbit25"},"content":"    * 1b1. StudMap shows an error message.","lastModifiedDate":"2022-11-07"},{"lineNumber":759,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":760,"author":{"gitId":"highorbit25"},"content":"      Use case ends.","lastModifiedDate":"2022-11-07"},{"lineNumber":761,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":762,"author":{"gitId":"highorbit25"},"content":"**Use case: Record participation of a student**","lastModifiedDate":"2022-11-07"},{"lineNumber":763,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":764,"author":{"gitId":"highorbit25"},"content":"**MSS**","lastModifiedDate":"2022-11-07"},{"lineNumber":765,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":766,"author":{"gitId":"highorbit25"},"content":"1. TA requests to record participation component for Student X","lastModifiedDate":"2022-11-07"},{"lineNumber":767,"author":{"gitId":"highorbit25"},"content":"2. StudMap adds participation component for Student X","lastModifiedDate":"2022-11-07"},{"lineNumber":768,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":769,"author":{"gitId":"highorbit25"},"content":"   Use case ends.","lastModifiedDate":"2022-11-07"},{"lineNumber":770,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":771,"author":{"gitId":"highorbit25"},"content":"**Extensions**","lastModifiedDate":"2022-11-07"},{"lineNumber":772,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":773,"author":{"gitId":"highorbit25"},"content":"* 1a. The given participation component is invalid","lastModifiedDate":"2022-11-07"},{"lineNumber":774,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":775,"author":{"gitId":"highorbit25"},"content":"    * 1a1. StudMap shows an error message.","lastModifiedDate":"2022-11-07"},{"lineNumber":776,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":777,"author":{"gitId":"highorbit25"},"content":"      Use case ends.","lastModifiedDate":"2022-11-07"},{"lineNumber":778,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":779,"author":{"gitId":"highorbit25"},"content":"* 1b. The given index is invalid","lastModifiedDate":"2022-11-07"},{"lineNumber":780,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":781,"author":{"gitId":"highorbit25"},"content":"    * 1b1. StudMap shows an error message.","lastModifiedDate":"2022-11-07"},{"lineNumber":782,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":783,"author":{"gitId":"highorbit25"},"content":"      Use case ends.","lastModifiedDate":"2022-11-07"},{"lineNumber":784,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":785,"author":{"gitId":"highorbit25"},"content":"**Use case: Remove participation of a student**","lastModifiedDate":"2022-11-07"},{"lineNumber":786,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":787,"author":{"gitId":"highorbit25"},"content":"**MSS**","lastModifiedDate":"2022-11-07"},{"lineNumber":788,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":789,"author":{"gitId":"highorbit25"},"content":"1. TA requests to remove a participation component for Student X","lastModifiedDate":"2022-11-07"},{"lineNumber":790,"author":{"gitId":"highorbit25"},"content":"2. StudMap removes specified participation component for Student X","lastModifiedDate":"2022-11-07"},{"lineNumber":791,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":792,"author":{"gitId":"highorbit25"},"content":"   Use case ends.","lastModifiedDate":"2022-11-07"},{"lineNumber":793,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":794,"author":{"gitId":"highorbit25"},"content":"**Extensions**","lastModifiedDate":"2022-11-07"},{"lineNumber":795,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":796,"author":{"gitId":"highorbit25"},"content":"* 1a. The given participation component is invalid","lastModifiedDate":"2022-11-07"},{"lineNumber":797,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":798,"author":{"gitId":"highorbit25"},"content":"    * 1a1. StudMap shows an error message.","lastModifiedDate":"2022-11-07"},{"lineNumber":799,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":800,"author":{"gitId":"highorbit25"},"content":"      Use case ends.","lastModifiedDate":"2022-11-07"},{"lineNumber":801,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":802,"author":{"gitId":"highorbit25"},"content":"* 1b. The given index is invalid","lastModifiedDate":"2022-11-07"},{"lineNumber":803,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":804,"author":{"gitId":"highorbit25"},"content":"    * 1b1. StudMap shows an error message.","lastModifiedDate":"2022-11-07"},{"lineNumber":805,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":806,"author":{"gitId":"highorbit25"},"content":"      Use case ends.","lastModifiedDate":"2022-11-07"},{"lineNumber":807,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":808,"author":{"gitId":"highorbit25"},"content":"* 1c. The student at given index does not have records of the given participation component","lastModifiedDate":"2022-11-07"},{"lineNumber":809,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":810,"author":{"gitId":"highorbit25"},"content":"    * 1c1. StudMap shows an error message.","lastModifiedDate":"2022-11-07"},{"lineNumber":811,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":812,"author":{"gitId":"highorbit25"},"content":"      Use case ends.","lastModifiedDate":"2022-11-07"},{"lineNumber":813,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":814,"author":{"gitId":"Piyotato"},"content":"## Non-Functional Requirements","lastModifiedDate":"2022-11-07"},{"lineNumber":815,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":816,"author":{"gitId":"Piyotato"},"content":"1. The software should work on any [**mainstream OS**](#mainstream-os) as long as it has **Java 11** or above installed.","lastModifiedDate":"2022-11-07"},{"lineNumber":817,"author":{"gitId":"comicalromance"},"content":"2. The software should be able to hold up to 1000 students without a noticeable sluggishness in performance for typical","lastModifiedDate":"2022-10-15"},{"lineNumber":818,"author":{"gitId":"dr-arrgghh"},"content":"   usage.","lastModifiedDate":"2022-10-09"},{"lineNumber":819,"author":{"gitId":"Piyotato"},"content":"3. The software should be able to start up in 30 seconds.","lastModifiedDate":"2022-09-29"},{"lineNumber":820,"author":{"gitId":"dr-arrgghh"},"content":"4. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be","lastModifiedDate":"2022-10-09"},{"lineNumber":821,"author":{"gitId":"dr-arrgghh"},"content":"   able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2022-10-09"},{"lineNumber":822,"author":{"gitId":"Piyotato"},"content":"5. The software should be able to be used without an installer.","lastModifiedDate":"2022-09-29"},{"lineNumber":823,"author":{"gitId":"Piyotato"},"content":"6. The software should not depend on a remote server.","lastModifiedDate":"2022-09-29"},{"lineNumber":824,"author":{"gitId":"Piyotato"},"content":"7. If the software crashes or becomes unresponsive, the student records should not be lost.","lastModifiedDate":"2022-09-29"},{"lineNumber":825,"author":{"gitId":"dr-arrgghh"},"content":"8. The GUI should work well (i.e., should not cause any resolution-related inconveniences to the user) for standard","lastModifiedDate":"2022-10-09"},{"lineNumber":826,"author":{"gitId":"dr-arrgghh"},"content":"   screen resolutions 1920x1080 and higher and for screen scales 100% and 125%.","lastModifiedDate":"2022-10-09"},{"lineNumber":827,"author":{"gitId":"dr-arrgghh"},"content":"9. The GUI should be usable (i.e., all functions can be used even if the user experience is not optimal) for resolutions","lastModifiedDate":"2022-10-09"},{"lineNumber":828,"author":{"gitId":"dr-arrgghh"},"content":"   1280x720 and higher and for screen scales 150%.","lastModifiedDate":"2022-10-09"},{"lineNumber":829,"author":{"gitId":"Piyotato"},"content":"10. The software should be packaged into a single JAR file.","lastModifiedDate":"2022-09-29"},{"lineNumber":830,"author":{"gitId":"Piyotato"},"content":"11. The software should not exceed 100MB in size.","lastModifiedDate":"2022-09-29"},{"lineNumber":831,"author":{"gitId":"Piyotato"},"content":"12. The documentation should not exceed 15MB per file.","lastModifiedDate":"2022-09-29"},{"lineNumber":832,"author":{"gitId":"Piyotato"},"content":"13. The software and documentation should be accessible for users who have a basic command of the English language.","lastModifiedDate":"2022-09-29"},{"lineNumber":833,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":834,"author":{"gitId":"Piyotato"},"content":"---","lastModifiedDate":"2022-11-07"},{"lineNumber":835,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":836,"author":{"gitId":"Piyotato"},"content":"# Appendix: Instructions for manual testing","lastModifiedDate":"2022-11-07"},{"lineNumber":837,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":838,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":839,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":840,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":841,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":842,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":843,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":844,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":845,"author":{"gitId":"Piyotato"},"content":"## Launch and shutdown","lastModifiedDate":"2022-11-07"},{"lineNumber":846,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":847,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":848,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":849,"author":{"gitId":"Piyotato"},"content":"   a. Download the jar file and copy into an empty folder","lastModifiedDate":"2022-11-07"},{"lineNumber":850,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":851,"author":{"gitId":"Piyotato"},"content":"   b. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be","lastModifiedDate":"2022-11-07"},{"lineNumber":852,"author":{"gitId":"dr-arrgghh"},"content":"   optimum.","lastModifiedDate":"2022-10-09"},{"lineNumber":853,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":854,"author":{"gitId":"Piyotato"},"content":"2. Saving window preferences","lastModifiedDate":"2022-11-07"},{"lineNumber":855,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":856,"author":{"gitId":"Piyotato"},"content":"   a. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2022-11-07"},{"lineNumber":857,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":858,"author":{"gitId":"Piyotato"},"content":"   b. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":859,"author":{"gitId":"-"},"content":"   Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":860,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":861,"author":{"gitId":"highorbit25"},"content":"## Adding a student","lastModifiedDate":"2022-11-07"},{"lineNumber":862,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":863,"author":{"gitId":"highorbit25"},"content":"1. Adding a Student","lastModifiedDate":"2022-11-07"},{"lineNumber":864,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":865,"author":{"gitId":"highorbit25"},"content":"   a. Prerequisites: None\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":866,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":867,"author":{"gitId":"highorbit25"},"content":"   b. Test case: `add n/John Doe m/CS2103T id/E1234567`\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":868,"author":{"gitId":"highorbit25"},"content":"   Expected: Student named John Doe with student ID `E1234567` added into StudMap. Details of the added contact shown in the status message.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":869,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":870,"author":{"gitId":"highorbit25"},"content":"   c. Test case: `add n/John Doe m/CS2103T id/E1234567 e/johndow@gmail.com`\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":871,"author":{"gitId":"highorbit25"},"content":"    Suppose this is run after Test case in (b) above, where student named John Doe with student ID already exists in the StudMap.","lastModifiedDate":"2022-11-07"},{"lineNumber":872,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":873,"author":{"gitId":"highorbit25"},"content":"   Expected: No student is added. Error message for \"duplicate student\" shown in the status message.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":874,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":875,"author":{"gitId":"Piyotato"},"content":"## Deleting a student","lastModifiedDate":"2022-11-07"},{"lineNumber":876,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":877,"author":{"gitId":"Piyotato"},"content":"1. Deleting a student while all students are being shown.","lastModifiedDate":"2022-11-07"},{"lineNumber":878,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":879,"author":{"gitId":"Piyotato"},"content":"   a. Prerequisites: List all students using the `list` command. Multiple students in the list.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":880,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":881,"author":{"gitId":"Piyotato"},"content":"   b. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":882,"author":{"gitId":"comicalromance"},"content":"   Expected: First student is deleted from the list. Details of the deleted student shown in the status message.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":883,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":884,"author":{"gitId":"Piyotato"},"content":"   c. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":885,"author":{"gitId":"highorbit25"},"content":"   Expected: No student is deleted. Error details shown in the status message.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":886,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":887,"author":{"gitId":"Piyotato"},"content":"   d. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":888,"author":{"gitId":"Piyotato"},"content":"   Expected: Similar to previous.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":889,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":890,"author":{"gitId":"highorbit25"},"content":"## Sorting student list","lastModifiedDate":"2022-11-07"},{"lineNumber":891,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":892,"author":{"gitId":"highorbit25"},"content":"1. Sorting the student list.","lastModifiedDate":"2022-11-07"},{"lineNumber":893,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":894,"author":{"gitId":"highorbit25"},"content":"   a. Prerequisites: List all students using the `list` command. Multiple students in the list.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":895,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":896,"author":{"gitId":"highorbit25"},"content":"   b. Test case: `sort asc a/name`\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":897,"author":{"gitId":"highorbit25"},"content":"   Expected: Student list sorted by name in ascending alphabetical order. Details of the sort done shown in the status message.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":898,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":899,"author":{"gitId":"highorbit25"},"content":"   c. Test case: `sort asc a/participation`\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":900,"author":{"gitId":"highorbit25"},"content":"   Expected: Student list sorted by participation rate in ascending order. Details of the sort done shown in the status message.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":901,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":902,"author":{"gitId":"highorbit25"},"content":"   d. Test case: `sort asc`\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":903,"author":{"gitId":"highorbit25"},"content":"   Expected: An error message for \"No attribute specified\" shown in the status message.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":904,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":905,"author":{"gitId":"highorbit25"},"content":"   e. Test case: `sort asc a/gender`\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":906,"author":{"gitId":"highorbit25"},"content":"   Expected: An error message for \"Invalid attribute\" shown in the status message.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":907,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":908,"author":{"gitId":"highorbit25"},"content":"## Recording participation for a student","lastModifiedDate":"2022-11-07"},{"lineNumber":909,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":910,"author":{"gitId":"highorbit25"},"content":"1. Recording the participation of a student.","lastModifiedDate":"2022-11-07"},{"lineNumber":911,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":912,"author":{"gitId":"highorbit25"},"content":"   a. Prerequisites: At least one student in the list.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":913,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":914,"author":{"gitId":"highorbit25"},"content":"   b. Test case: `participate 1 yes p/P01`\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":915,"author":{"gitId":"highorbit25"},"content":"   Expected: Record student at index 1 as having participated for participation component `P01`. Details of the participation recorded shown in the status message.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":916,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":917,"author":{"gitId":"highorbit25"},"content":"   c. Test case: `participate 3 yes p/P01`\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":918,"author":{"gitId":"highorbit25"},"content":"    Suppose that there is no student in index 3","lastModifiedDate":"2022-11-07"},{"lineNumber":919,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":920,"author":{"gitId":"highorbit25"},"content":"   Expected: An error message for \"Invalid student index\" shown in the status message.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":921,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":922,"author":{"gitId":"highorbit25"},"content":"   d. Test case: `participate 1 yes p/$01`\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":923,"author":{"gitId":"highorbit25"},"content":"   Expected: An error message for detailing the constraint for naming of participation component shown in the status message.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":924,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":925,"author":{"gitId":"highorbit25"},"content":"## Removing participation for a student","lastModifiedDate":"2022-11-07"},{"lineNumber":926,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":927,"author":{"gitId":"highorbit25"},"content":"1. Removing the participation of a student.","lastModifiedDate":"2022-11-07"},{"lineNumber":928,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":929,"author":{"gitId":"highorbit25"},"content":"   a. Prerequisites: At least one student in the list.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":930,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":931,"author":{"gitId":"highorbit25"},"content":"   b. Test case: `unparticipate 1 p/P01`\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":932,"author":{"gitId":"highorbit25"},"content":"   Expected: Remove participation component `P01` for student at index 1. Details of the participation removed shown in the status message.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":933,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":934,"author":{"gitId":"highorbit25"},"content":"   c. Test case: `unparticipate 3 p/P01`\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":935,"author":{"gitId":"highorbit25"},"content":"   Suppose that there is no student in index 3","lastModifiedDate":"2022-11-07"},{"lineNumber":936,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":937,"author":{"gitId":"highorbit25"},"content":"   Expected: An error message for \"Invalid student index\" shown in the status message.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":938,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":939,"author":{"gitId":"highorbit25"},"content":"   d. Test case: `unparticipate 1 p/P10`\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":940,"author":{"gitId":"highorbit25"},"content":"   Suppose that there is no participation component `P10` for student in index 1","lastModifiedDate":"2022-11-07"},{"lineNumber":941,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":942,"author":{"gitId":"highorbit25"},"content":"   Expected: An error message for \"Participation component P10 not found\" shown in the status message.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":943,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":944,"author":{"gitId":"comicalromance"},"content":"## Marking Attendance","lastModifiedDate":"2022-11-07"},{"lineNumber":945,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":946,"author":{"gitId":"comicalromance"},"content":"1. Marking a student\u0027s attendance","lastModifiedDate":"2022-11-07"},{"lineNumber":947,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":948,"author":{"gitId":"comicalromance"},"content":"   a. Prerequisites: List all students using the `list` command. Multiple students in the list.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":949,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":950,"author":{"gitId":"comicalromance"},"content":"   b. Test case: `mark 1 present c/T05`\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":951,"author":{"gitId":"comicalromance"},"content":"   Expected: First student has attendance marked as present. Details of the updated student shown in the status message.","lastModifiedDate":"2022-11-07"},{"lineNumber":952,"author":{"gitId":"comicalromance"},"content":"   Student Card of the first student is updated with new green label containing \"T05\" in the attendances list.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":953,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":954,"author":{"gitId":"comicalromance"},"content":"   c. Test case: `mark 2 absent c/T03`\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":955,"author":{"gitId":"comicalromance"},"content":"   Suppose there are at least two students in the list. \u003cbr/\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":956,"author":{"gitId":"comicalromance"},"content":"   Expected: Second student has attendance marked as absent. Details of the updated student shown in the status message.","lastModifiedDate":"2022-11-07"},{"lineNumber":957,"author":{"gitId":"comicalromance"},"content":"   Student Card of the second student is updated with new red label containing \"T03\" in the attendances list.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":958,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":959,"author":{"gitId":"comicalromance"},"content":"   d. Test case: `mark all present c/T01`\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":960,"author":{"gitId":"comicalromance"},"content":"   Expected: All students have attendance marked as present. Details of the updated students shown in the status message.","lastModifiedDate":"2022-11-07"},{"lineNumber":961,"author":{"gitId":"comicalromance"},"content":"   Student Cards of all students are updated with new green label containing \"T01\" in the attendances list.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":962,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":963,"author":{"gitId":"comicalromance"},"content":"## Unmarking Attendance","lastModifiedDate":"2022-11-07"},{"lineNumber":964,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":965,"author":{"gitId":"comicalromance"},"content":"1. Unmarking a student\u0027s attendance","lastModifiedDate":"2022-11-07"},{"lineNumber":966,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":967,"author":{"gitId":"comicalromance"},"content":"   a. Prerequisites: List all students using the `list` command. Multiple students in the list.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":968,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":969,"author":{"gitId":"comicalromance"},"content":"   b. Test case: `unmark 1 c/T05`\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":970,"author":{"gitId":"comicalromance"},"content":"   Suppose the first student has class `T05` recorded. \u003cbr/\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":971,"author":{"gitId":"comicalromance"},"content":"   Expected: First student has attendance record for class `T05` removed. Details of the updated student shown in the status message.","lastModifiedDate":"2022-11-07"},{"lineNumber":972,"author":{"gitId":"comicalromance"},"content":"   Student Card of the first student is updated.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":973,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":974,"author":{"gitId":"comicalromance"},"content":"   c. Test case: `unmark 2 c/T05`\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":975,"author":{"gitId":"comicalromance"},"content":"   Suppose the second student does not have class `T05` recorded. \u003cbr/\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":976,"author":{"gitId":"comicalromance"},"content":"   Expected: Nothing is changed. Message that second student does not have class `T05` is shown in the status message.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":977,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":978,"author":{"gitId":"comicalromance"},"content":"## Importing File","lastModifiedDate":"2022-11-07"},{"lineNumber":979,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":980,"author":{"gitId":"comicalromance"},"content":"1. Importing a student\u0027s attendance","lastModifiedDate":"2022-11-07"},{"lineNumber":981,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":982,"author":{"gitId":"comicalromance"},"content":"   a. Prerequisites: A valid CSV file is available [here](files/example_template.csv), an invalid CSV ","lastModifiedDate":"2022-11-07"},{"lineNumber":983,"author":{"gitId":"comicalromance"},"content":"   file is available [here](files/header_size_6.csv), and a partially working CSV file is available [here](files/example_template_errors.csv)","lastModifiedDate":"2022-11-07"},{"lineNumber":984,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":985,"author":{"gitId":"comicalromance"},"content":"   b. Test case: `import`\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":986,"author":{"gitId":"comicalromance"},"content":"   Suppose a valid CSV file with properly formatted users is selected. \u003cbr/\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":987,"author":{"gitId":"comicalromance"},"content":"   Expected: All students are successfully imported into StudMap, and displayed in the student list, ","lastModifiedDate":"2022-11-07"},{"lineNumber":988,"author":{"gitId":"comicalromance"},"content":"   barring duplicates.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":989,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":990,"author":{"gitId":"comicalromance"},"content":"   c. Test case: `import`\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":991,"author":{"gitId":"comicalromance"},"content":"   Suppose a CSV file with improperly formatted users is selected. \u003cbr/\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":992,"author":{"gitId":"comicalromance"},"content":"   Expected: Students with proper data are successfully imported into StudMap, and displayed in the student list.","lastModifiedDate":"2022-11-07"},{"lineNumber":993,"author":{"gitId":"comicalromance"},"content":"   Students with invalid data are not imported, with details about the specific issues displayed in the status message.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":994,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":995,"author":{"gitId":"comicalromance"},"content":"   d. Test case: `import`\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":996,"author":{"gitId":"comicalromance"},"content":"   Suppose a CSV file with improper format is selected. \u003cbr/\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":997,"author":{"gitId":"comicalromance"},"content":"   Expected: Nothing happens. StudMap displays an error in the status message.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":998,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":999,"author":{"gitId":"comicalromance"},"content":"## Tagging Students","lastModifiedDate":"2022-11-07"},{"lineNumber":1000,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":1001,"author":{"gitId":"comicalromance"},"content":"1. Tagging a student","lastModifiedDate":"2022-11-07"},{"lineNumber":1002,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":1003,"author":{"gitId":"comicalromance"},"content":"   a. Prerequisites: List all students using the `list` command. Multiple students in the list.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":1004,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":1005,"author":{"gitId":"comicalromance"},"content":"   b. Test case: `tag 1 t/friend`\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":1006,"author":{"gitId":"comicalromance"},"content":"   Expected: First student has new tag `friend` added. Details of the updated student shown in the status message.","lastModifiedDate":"2022-11-07"},{"lineNumber":1007,"author":{"gitId":"comicalromance"},"content":"   Student Card of the first student is updated.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":1008,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":1009,"author":{"gitId":"comicalromance"},"content":"   c. Test case: `tag all t/hello`\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":1010,"author":{"gitId":"comicalromance"},"content":"   Expected: All students have new tag `hello` added. Details of the updated students shown in the status message.","lastModifiedDate":"2022-11-07"},{"lineNumber":1011,"author":{"gitId":"comicalromance"},"content":"   Student Cards of all students are updated.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":1012,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":1013,"author":{"gitId":"comicalromance"},"content":"## Untagging Students","lastModifiedDate":"2022-11-07"},{"lineNumber":1014,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":1015,"author":{"gitId":"comicalromance"},"content":"1. Removing tags from student","lastModifiedDate":"2022-11-07"},{"lineNumber":1016,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":1017,"author":{"gitId":"comicalromance"},"content":"   a. Prerequisites: List all students using the `list` command. Multiple students in the list.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":1018,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":1019,"author":{"gitId":"comicalromance"},"content":"   b. Test case: `untag 1 t/friend`\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":1020,"author":{"gitId":"comicalromance"},"content":"   Suppose first student has tag `friend`. \u003cbr/\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":1021,"author":{"gitId":"comicalromance"},"content":"   Expected: First student has tag `friend` removed. Details of the updated student shown in the status message.","lastModifiedDate":"2022-11-07"},{"lineNumber":1022,"author":{"gitId":"comicalromance"},"content":"   Student Card of the first student is updated.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":1023,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":1024,"author":{"gitId":"comicalromance"},"content":"   c. Test case: `untag 2 t/man`\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":1025,"author":{"gitId":"comicalromance"},"content":"   Suppose second student does not have tag `man` \u003cbr/\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":1026,"author":{"gitId":"comicalromance"},"content":"   Expected: Nothing is changed. Message that second student does not have tag man `man` is shown in the status message.\u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":1027,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":1028,"author":{"gitId":"comicalromance"},"content":"## Filtering","lastModifiedDate":"2022-11-07"},{"lineNumber":1029,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":1030,"author":{"gitId":"comicalromance"},"content":"1. Filtering student list by attributes","lastModifiedDate":"2022-11-07"},{"lineNumber":1031,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":1032,"author":{"gitId":"comicalromance"},"content":"   a. Prerequisites: List all students using the `list` command. Multiple students in the list.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":1033,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":1034,"author":{"gitId":"comicalromance"},"content":"   b. Test case: `filter t/friend`\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":1035,"author":{"gitId":"comicalromance"},"content":"   Suppose there are students with tag `friend` \u003cbr/\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":1036,"author":{"gitId":"comicalromance"},"content":"   Expected: All students with tag `friend` are displayed in the student list.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":1037,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":1038,"author":{"gitId":"comicalromance"},"content":"   c. Test case: `filter a/A02`\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":1039,"author":{"gitId":"comicalromance"},"content":"   Suppose there are students with assignment `A02` \u003cbr/\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":1040,"author":{"gitId":"comicalromance"},"content":"   Expected: All students with assignment `A02` are displayed in the student list.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":1041,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":1042,"author":{"gitId":"Piyotato"},"content":"---","lastModifiedDate":"2022-11-07"},{"lineNumber":1043,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":1044,"author":{"gitId":"Piyotato"},"content":"# Appendix: Effort","lastModifiedDate":"2022-11-07"},{"lineNumber":1045,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":1046,"author":{"gitId":"Piyotato"},"content":"StudMap was an interesting experience in a Brownfield software development environment.","lastModifiedDate":"2022-11-07"},{"lineNumber":1047,"author":{"gitId":"Piyotato"},"content":"To many of us, it was our first endeavor, which meant lots of trial and error to get things right.","lastModifiedDate":"2022-11-07"},{"lineNumber":1048,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":1049,"author":{"gitId":"Piyotato"},"content":"## Keeping StudMap extensible","lastModifiedDate":"2022-11-07"},{"lineNumber":1050,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":1051,"author":{"gitId":"Piyotato"},"content":"Diving into AB3, we quickly ran into problems stemming from its rigid structure. Here are some fundamental changes","lastModifiedDate":"2022-11-07"},{"lineNumber":1052,"author":{"gitId":"Piyotato"},"content":"we made to keep things streamlined and extendable.","lastModifiedDate":"2022-11-07"},{"lineNumber":1053,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":1054,"author":{"gitId":"Piyotato"},"content":"### Student Parameter Object","lastModifiedDate":"2022-11-07"},{"lineNumber":1055,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":1056,"author":{"gitId":"Piyotato"},"content":"AB3 came with rigid constructors for its `Person` class, which meant that any extension introduced ugly overloading","lastModifiedDate":"2022-11-07"},{"lineNumber":1057,"author":{"gitId":"Piyotato"},"content":"of constructors. We made use of a parameter object for the `Student` constructor to overcome this issue. With this,","lastModifiedDate":"2022-11-07"},{"lineNumber":1058,"author":{"gitId":"Piyotato"},"content":"we could easily add multiple attributes, including `Attendances`, `Assignments`, `Participations` without hassle.","lastModifiedDate":"2022-11-07"},{"lineNumber":1059,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":1060,"author":{"gitId":"Piyotato"},"content":"### Abstraction of Commands","lastModifiedDate":"2022-11-07"},{"lineNumber":1061,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":1062,"author":{"gitId":"Piyotato"},"content":"AB3 started off with a few commands with a lot of duplicated code. Naive extension of AB3 would have resulted in this","lastModifiedDate":"2022-11-07"},{"lineNumber":1063,"author":{"gitId":"Piyotato"},"content":"code being duplicated many more times, a danger to code quality. As such, one of the earlier efforts was to abstract","lastModifiedDate":"2022-11-07"},{"lineNumber":1064,"author":{"gitId":"Piyotato"},"content":"out the idea of command parsers which required certain syntax (e.g. `Index`), as well as commands that mutated `Student`.","lastModifiedDate":"2022-11-07"},{"lineNumber":1065,"author":{"gitId":"Piyotato"},"content":"This allowed StudMap to be flexible and extendable so that future features were easy to implement.","lastModifiedDate":"2022-11-07"},{"lineNumber":1066,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":1067,"author":{"gitId":"Piyotato"},"content":"## Conclusion","lastModifiedDate":"2022-11-07"},{"lineNumber":1068,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":1069,"author":{"gitId":"Piyotato"},"content":"Overall, this project was fulfilling for many of us, and certainly a fun journey. StudMap gave us the opportunity to","lastModifiedDate":"2022-11-07"},{"lineNumber":1070,"author":{"gitId":"Piyotato"},"content":"experiment with and learn about non-trivial design patterns.","lastModifiedDate":"2022-11-07"},{"lineNumber":1071,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":1072,"author":{"gitId":"Piyotato"},"content":"We cannot understate the effort that we have invested in this project - from midnight meetings for discussing","lastModifiedDate":"2022-11-07"},{"lineNumber":1073,"author":{"gitId":"Piyotato"},"content":"implementation details to the hours spent upgrading the documentation for this project.","lastModifiedDate":"2022-11-07"},{"lineNumber":1074,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":1075,"author":{"gitId":"Piyotato"},"content":"We hope that this Developer Guide has helped you in understanding the architecture of StudMap. If you are a Software Engineering","lastModifiedDate":"2022-11-07"},{"lineNumber":1076,"author":{"gitId":"Piyotato"},"content":"student, we strongly encourage you to try to extend it - hopefully you will learn as much as we did.","lastModifiedDate":"2022-11-07"},{"lineNumber":1077,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":1078,"author":{"gitId":"Piyotato"},"content":"---","lastModifiedDate":"2022-11-07"},{"lineNumber":1079,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":1080,"author":{"gitId":"Piyotato"},"content":"# Glossary","lastModifiedDate":"2022-11-07"},{"lineNumber":1081,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":1082,"author":{"gitId":"Piyotato"},"content":"### TA","lastModifiedDate":"2022-11-07"},{"lineNumber":1083,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":1084,"author":{"gitId":"Piyotato"},"content":"Teaching assistant for a module.","lastModifiedDate":"2022-11-07"},{"lineNumber":1085,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":1086,"author":{"gitId":"Piyotato"},"content":"### Student","lastModifiedDate":"2022-11-07"},{"lineNumber":1087,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":1088,"author":{"gitId":"Piyotato"},"content":"A person that is partaking in a module.","lastModifiedDate":"2022-11-07"},{"lineNumber":1089,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":1090,"author":{"gitId":"Piyotato"},"content":"### Module","lastModifiedDate":"2022-11-07"},{"lineNumber":1091,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":1092,"author":{"gitId":"Piyotato"},"content":"The university class that the student is enrolled in, encoded by a unique module code consisting of a 2-3","lastModifiedDate":"2022-11-07"},{"lineNumber":1093,"author":{"gitId":"Piyotato"},"content":"letter prefix that generally denotes the discipline, and 4 digits at the back, the first of which indicates the level","lastModifiedDate":"2022-11-07"},{"lineNumber":1094,"author":{"gitId":"Piyotato"},"content":"of the module.","lastModifiedDate":"2022-11-07"},{"lineNumber":1095,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":1096,"author":{"gitId":"Piyotato"},"content":"### JAR file","lastModifiedDate":"2022-11-07"},{"lineNumber":1097,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":1098,"author":{"gitId":"Piyotato"},"content":"package file format typically used to aggregate many Java class files and associated metadata and","lastModifiedDate":"2022-11-07"},{"lineNumber":1099,"author":{"gitId":"Piyotato"},"content":"resources into one file for distribution.","lastModifiedDate":"2022-11-07"},{"lineNumber":1100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":1101,"author":{"gitId":"Piyotato"},"content":"### GUI","lastModifiedDate":"2022-11-07"},{"lineNumber":1102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":1103,"author":{"gitId":"Piyotato"},"content":"main interface that the user interacts with to input commands and view results.","lastModifiedDate":"2022-11-07"},{"lineNumber":1104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":1105,"author":{"gitId":"Piyotato"},"content":"### Mainstream OS","lastModifiedDate":"2022-11-07"},{"lineNumber":1106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":1107,"author":{"gitId":"Piyotato"},"content":"Windows, Linux, Unix, OS-X","lastModifiedDate":"2022-11-07"},{"lineNumber":1108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":1109,"author":{"gitId":"Piyotato"},"content":"### Tag","lastModifiedDate":"2022-11-07"},{"lineNumber":1110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":1111,"author":{"gitId":"Piyotato"},"content":"A label for students defined by the user, possibly shared by multiple students.","lastModifiedDate":"2022-11-07"},{"lineNumber":1112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":1113,"author":{"gitId":"Piyotato"},"content":"### Attribute","lastModifiedDate":"2022-11-07"},{"lineNumber":1114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":1115,"author":{"gitId":"Piyotato"},"content":"Characteristics of students that all students have.","lastModifiedDate":"2022-11-07"}],"authorContributionMap":{"highorbit25":188,"dr-arrgghh":94,"Piyotato":328,"-":240,"lpohsien":58,"comicalromance":207}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Setting up and getting started","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2020-06-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.\u003cbr\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"lpohsien"},"content":"   1. Run the `seedu.studmap.Main` and try a few commands.","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"lpohsien"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [StudMap’s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2022-10-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","lastModifiedDate":"2020-06-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   * [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   * [Adding a new command](tutorials/AddRemark.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   * [Removing fields](tutorials/RemovingFields.md)","lastModifiedDate":"2021-08-01"}],"authorContributionMap":{"-":53,"lpohsien":2}},{"path":"docs/Testing.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Testing guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2022-11-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Running tests","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"There are two ways to run tests.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"* **Method 1: Using IntelliJ JUnit test runner**","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    * To run all tests, right-click on the `src/test/java` folder and choose `Run \u0027All Tests\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    * To run a subset of tests, you can right-click on a test package,","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"Piyotato"},"content":"      test class, or a test and choose `Run \u0027ABC\u0027`\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **Method 2: Using Gradle**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"Piyotato"},"content":"    * Open a console and run the command `gradlew clean test` (Mac/Linux: `./gradlew clean test`)\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-secondary\"\u003e:link: **Link**: Read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html) to learn more about using Gradle.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"## Types of tests","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"This project has three types of tests:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"Piyotato"},"content":"1. *Unit tests* targeting the lowest level methods/classes.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":32,"author":{"gitId":"Piyotato"},"content":"   e.g. `seedu.studmap.commons.StringUtilTest`\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":33,"author":{"gitId":"Piyotato"},"content":"2. *Integration tests* that are checking the integration of multiple code units (those code units are assumed to be","lastModifiedDate":"2022-11-07"},{"lineNumber":34,"author":{"gitId":"Piyotato"},"content":"   working).\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":35,"author":{"gitId":"Piyotato"},"content":"   e.g. `seedu.studmap.storage.StorageManagerTest`\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":36,"author":{"gitId":"Piyotato"},"content":"3. Hybrids of unit and integration tests. These test are checking multiple code units as well as how the are connected","lastModifiedDate":"2022-11-07"},{"lineNumber":37,"author":{"gitId":"Piyotato"},"content":"   together.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":38,"author":{"gitId":"Piyotato"},"content":"   e.g. `seedu.studmap.logic.LogicManagerTest`\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-11-07"}],"authorContributionMap":{"Piyotato":10,"-":28}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2022-11-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2022-11-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"comicalromance"},"content":"{::options toc_levels\u003d\"1..2\" /}","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"comicalromance"},"content":"{:logo: height\u003d\"200px\" width\u003d\"200px\" style\u003d\"display:block; margin-left:auto; margin-right:auto;\"}","lastModifiedDate":"2022-11-06"},{"lineNumber":7,"author":{"gitId":"comicalromance"},"content":"![StudMap Logo](images/studmap/studmap_hd.png){: logo}","lastModifiedDate":"2022-11-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":9,"author":{"gitId":"comicalromance"},"content":"# 1. Overview","lastModifiedDate":"2022-11-06"},{"lineNumber":10,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":11,"author":{"gitId":"Piyotato"},"content":"StudMap is a lightweight desktop app for managing your students and organizing your teaching assistant (TA)","lastModifiedDate":"2022-11-06"},{"lineNumber":12,"author":{"gitId":"Piyotato"},"content":"responsibilities. It’s optimized for use via a Command Line Interface (CLI), meaning that you give instructions to","lastModifiedDate":"2022-11-06"},{"lineNumber":13,"author":{"gitId":"Piyotato"},"content":"StudMap through a text box, and StudMap just does it for you — it’s like magic. Yet, it has all the benefits of a","lastModifiedDate":"2022-11-06"},{"lineNumber":14,"author":{"gitId":"Piyotato"},"content":"traditional application with a graphical interface: you can still see, at a glance, a neat overview of what you need to","lastModifiedDate":"2022-11-06"},{"lineNumber":15,"author":{"gitId":"Piyotato"},"content":"see. If you type fast, StudMap can get your student management tasks done faster than anything else.","lastModifiedDate":"2022-11-06"},{"lineNumber":16,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":17,"author":{"gitId":"Piyotato"},"content":"StudMap comes with powerful sort, filter, and mass operations features, as well as built-in attendance and participation","lastModifiedDate":"2022-11-07"},{"lineNumber":18,"author":{"gitId":"Piyotato"},"content":"tracking. If you are a TA for a computing [module](#module), StudMap is built just for you. This user guide aims to help","lastModifiedDate":"2022-11-07"},{"lineNumber":19,"author":{"gitId":"Piyotato"},"content":"you understand StudMap, so that you can make the best use of our features. Read on to find out more!","lastModifiedDate":"2022-11-07"},{"lineNumber":20,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":21,"author":{"gitId":"Piyotato"},"content":"---","lastModifiedDate":"2022-11-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2022-11-06"},{"lineNumber":24,"author":{"gitId":"comicalromance"},"content":"  {:toc}","lastModifiedDate":"2022-11-06"},{"lineNumber":25,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":26,"author":{"gitId":"comicalromance"},"content":"# 2. Why StudMap?","lastModifiedDate":"2022-11-06"},{"lineNumber":27,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":28,"author":{"gitId":"Piyotato"},"content":"Let’s face it — nobody loves keeping track of administrative details. It’s not the most interesting part of any job. If","lastModifiedDate":"2022-11-06"},{"lineNumber":29,"author":{"gitId":"Piyotato"},"content":"you are a TA for a computing [module](#module), you probably didn’t sign up out of your love for admin work. Sadly,","lastModifiedDate":"2022-11-06"},{"lineNumber":30,"author":{"gitId":"Piyotato"},"content":"administrative work is a necessary evil for TAs, so the best you can do is to make conquering it more efficient.","lastModifiedDate":"2022-11-06"},{"lineNumber":31,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":32,"author":{"gitId":"comicalromance"},"content":"## 2.1 What do TAs do?","lastModifiedDate":"2022-11-06"},{"lineNumber":33,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":34,"author":{"gitId":"Piyotato"},"content":"As a TA, you will find yourself juggling various tasks:","lastModifiedDate":"2022-11-06"},{"lineNumber":35,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":36,"author":{"gitId":"Piyotato"},"content":"1. Grading of assignments, and managing this grading process","lastModifiedDate":"2022-11-06"},{"lineNumber":37,"author":{"gitId":"Piyotato"},"content":"2. Tracking attendance of students for various classes","lastModifiedDate":"2022-11-06"},{"lineNumber":38,"author":{"gitId":"Piyotato"},"content":"3. Managing your students’ progress","lastModifiedDate":"2022-11-06"},{"lineNumber":39,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":40,"author":{"gitId":"Piyotato"},"content":"Managing these may be initially easy, but they can quickly pile up and become more tedious if not handled properly,","lastModifiedDate":"2022-11-06"},{"lineNumber":41,"author":{"gitId":"Piyotato"},"content":"especially with the tools available.","lastModifiedDate":"2022-11-06"},{"lineNumber":42,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":43,"author":{"gitId":"Piyotato"},"content":"## 2.2 What tools do TAs currently use?","lastModifiedDate":"2022-11-07"},{"lineNumber":44,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":45,"author":{"gitId":"Piyotato"},"content":"### Spreadsheets","lastModifiedDate":"2022-11-06"},{"lineNumber":46,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":47,"author":{"gitId":"Piyotato"},"content":"One of the tools you may commonly encounter is spreadsheets, such","lastModifiedDate":"2022-11-06"},{"lineNumber":48,"author":{"gitId":"Piyotato"},"content":"as [Microsoft Excel](https://www.microsoft.com/en-us/microsoft-365/excel)","lastModifiedDate":"2022-11-06"},{"lineNumber":49,"author":{"gitId":"Piyotato"},"content":"or [Google Sheets](https://www.google.com/sheets/about/), often provided by","lastModifiedDate":"2022-11-06"},{"lineNumber":50,"author":{"gitId":"Piyotato"},"content":"the head teaching assistant. However, when using these tools, you may notice that there are a lot of redundant features","lastModifiedDate":"2022-11-06"},{"lineNumber":51,"author":{"gitId":"Piyotato"},"content":"which you don’t use, but clutter up your screen. Some tools you actually want to use are instead hidden in the","lastModifiedDate":"2022-11-06"},{"lineNumber":52,"author":{"gitId":"Piyotato"},"content":"stash of icons and menus that you need to painstakingly sieve through.","lastModifiedDate":"2022-11-06"},{"lineNumber":53,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":54,"author":{"gitId":"Piyotato"},"content":"That’s not even the worst part! The module you’re teaching might demand separate Excel sheets to keep track of different","lastModifiedDate":"2022-11-06"},{"lineNumber":55,"author":{"gitId":"Piyotato"},"content":"items such as assignments and attendance which can be a huge hassle. Indeed, during our research, this is a point","lastModifiedDate":"2022-11-06"},{"lineNumber":56,"author":{"gitId":"Piyotato"},"content":"brought up by multiple TAs.","lastModifiedDate":"2022-11-06"},{"lineNumber":57,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":58,"author":{"gitId":"Piyotato"},"content":"### Note-Taking Applications","lastModifiedDate":"2022-11-06"},{"lineNumber":59,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":60,"author":{"gitId":"Piyotato"},"content":"After being annoyed by all the Excel sheets, some TAs fall back to personal note-taking applications, such as Apple","lastModifiedDate":"2022-11-06"},{"lineNumber":61,"author":{"gitId":"Piyotato"},"content":"Notes, Microsoft OneNote, or Notepad. If you use these, however, you realize that formatting is often difficult to do.","lastModifiedDate":"2022-11-06"},{"lineNumber":62,"author":{"gitId":"Piyotato"},"content":"Useful functionalities like sorting and filtering are also difficult to access, if not non-existent.","lastModifiedDate":"2022-11-06"},{"lineNumber":63,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":64,"author":{"gitId":"comicalromance"},"content":"## 2.3 The Lament of TAs","lastModifiedDate":"2022-11-06"},{"lineNumber":65,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":66,"author":{"gitId":"Piyotato"},"content":"After trying all of these tools, you may start wondering: why am I wasting time on admin work when it can be better","lastModifiedDate":"2022-11-06"},{"lineNumber":67,"author":{"gitId":"Piyotato"},"content":"spent doing more productive tasks for myself or my students? You’re tired, and you just want to catch up on your sleep","lastModifiedDate":"2022-11-06"},{"lineNumber":68,"author":{"gitId":"Piyotato"},"content":"schedule!","lastModifiedDate":"2022-11-06"},{"lineNumber":69,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":70,"author":{"gitId":"Piyotato"},"content":"Be assured that you are not alone in this endeavor. According to","lastModifiedDate":"2022-11-07"},{"lineNumber":71,"author":{"gitId":"Piyotato"},"content":"an [analysis](https://johnjerrim.files.wordpress.com/2020/11/working_paper_workload_wellbeing_november_2020.pdf) done by","lastModifiedDate":"2022-11-07"},{"lineNumber":72,"author":{"gitId":"Piyotato"},"content":"University College London on the Teaching and Learning International Survey, a significant portion of teachers consider","lastModifiedDate":"2022-11-07"},{"lineNumber":73,"author":{"gitId":"Piyotato"},"content":"too much admin work as a source of their workload stress, which can in turn affect their mental well-being. You wouldn’t","lastModifiedDate":"2022-11-07"},{"lineNumber":74,"author":{"gitId":"Piyotato"},"content":"want this to happen to you!","lastModifiedDate":"2022-11-07"},{"lineNumber":75,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":76,"author":{"gitId":"comicalromance"},"content":"## 2.4 Our Solution","lastModifiedDate":"2022-11-06"},{"lineNumber":77,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":78,"author":{"gitId":"Piyotato"},"content":"StudMap is our solution for you. It is a lightweight desktop app that addresses your needs as a TA. With a set of","lastModifiedDate":"2022-11-06"},{"lineNumber":79,"author":{"gitId":"Piyotato"},"content":"essential yet easy-to-use features, we aim to fill the void between Excel spreadsheets and traditional note-taking apps,","lastModifiedDate":"2022-11-06"},{"lineNumber":80,"author":{"gitId":"Piyotato"},"content":"to provide you with the necessary tool to perform record keeping effectively. This user guide is a reference for you, so","lastModifiedDate":"2022-11-07"},{"lineNumber":81,"author":{"gitId":"Piyotato"},"content":"that you know how to make the most out of StudMap.","lastModifiedDate":"2022-11-07"},{"lineNumber":82,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":83,"author":{"gitId":"Piyotato"},"content":"---","lastModifiedDate":"2022-11-06"},{"lineNumber":84,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":85,"author":{"gitId":"comicalromance"},"content":"# 3. How to use this User Guide","lastModifiedDate":"2022-11-06"},{"lineNumber":86,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":87,"author":{"gitId":"Piyotato"},"content":"Thank you for choosing StudMap! This user guide will help you navigate our beloved software.","lastModifiedDate":"2022-11-06"},{"lineNumber":88,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":89,"author":{"gitId":"comicalromance"},"content":"1. You can head off to [Section 4: Quick Start](#4-quick-start) section for a quick tutorial.","lastModifiedDate":"2022-11-06"},{"lineNumber":90,"author":{"gitId":"Piyotato"},"content":"2. If you’re already using StudMap, check out [Section 5: Features](#5-features) section to get in-depth information","lastModifiedDate":"2022-11-06"},{"lineNumber":91,"author":{"gitId":"Piyotato"},"content":"   about each command you can give StudMap.","lastModifiedDate":"2022-11-07"},{"lineNumber":92,"author":{"gitId":"Piyotato"},"content":"3. For advanced users, check out [Section 7: Command Summary](#7-command-summary) for an easy all-in-one record for all","lastModifiedDate":"2022-11-06"},{"lineNumber":93,"author":{"gitId":"Piyotato"},"content":"   the commands.","lastModifiedDate":"2022-11-07"},{"lineNumber":94,"author":{"gitId":"comicalromance"},"content":"4. If you see any unfamiliar terms, check out the [Section 8: Glossary](#8-glossary) for more information.","lastModifiedDate":"2022-11-06"},{"lineNumber":95,"author":{"gitId":"Piyotato"},"content":"5. If you still have any other questions regarding StudMap and its usage, check","lastModifiedDate":"2022-11-06"},{"lineNumber":96,"author":{"gitId":"Piyotato"},"content":"   out [Section 6: FAQ](#6-frequently-asked-questions) for answers to some frequently asked questions.","lastModifiedDate":"2022-11-07"},{"lineNumber":97,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":98,"author":{"gitId":"comicalromance"},"content":"# 3.1 User Guide Notation Overview","lastModifiedDate":"2022-11-07"},{"lineNumber":99,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":100,"author":{"gitId":"comicalromance"},"content":"Throughout the guide, various types of notation are used to convey important information about its usage.","lastModifiedDate":"2022-11-07"},{"lineNumber":101,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":102,"author":{"gitId":"comicalromance"},"content":"Here are some of the symbols and syntax to look out for:","lastModifiedDate":"2022-11-07"},{"lineNumber":103,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":104,"author":{"gitId":"comicalromance"},"content":"| Symbol / Syntax      | Meaning                                                                    |","lastModifiedDate":"2022-11-07"},{"lineNumber":105,"author":{"gitId":"comicalromance"},"content":"|----------------------|----------------------------------------------------------------------------|","lastModifiedDate":"2022-11-07"},{"lineNumber":106,"author":{"gitId":"comicalromance"},"content":"| :information_source: | Information about commands or formats that you should be aware of          |","lastModifiedDate":"2022-11-07"},{"lineNumber":107,"author":{"gitId":"comicalromance"},"content":"| :exclamation:        | Warning of potential user scenarios you might face that can lead to errors |","lastModifiedDate":"2022-11-07"},{"lineNumber":108,"author":{"gitId":"comicalromance"},"content":"| :bulb:               | Tips that can help you save time using StudMap                             |","lastModifiedDate":"2022-11-07"},{"lineNumber":109,"author":{"gitId":"comicalromance"},"content":"| `code`               | Indicates command or parameter that can be inputted into StudMap           |","lastModifiedDate":"2022-11-07"},{"lineNumber":110,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":111,"author":{"gitId":"Piyotato"},"content":"---","lastModifiedDate":"2022-11-06"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"comicalromance"},"content":"# 4. Quick Start","lastModifiedDate":"2022-11-06"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"Piyotato"},"content":"If you’re new to StudMap, this is the tutorial for you! Here are the steps for you to get started:","lastModifiedDate":"2022-11-06"},{"lineNumber":116,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":117,"author":{"gitId":"comicalromance"},"content":"## 4.1 Installation","lastModifiedDate":"2022-11-07"},{"lineNumber":118,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":119,"author":{"gitId":"Piyotato"},"content":"1. Ensure you have Java 11 or above installed in your computer. See","lastModifiedDate":"2022-11-07"},{"lineNumber":120,"author":{"gitId":"Piyotato"},"content":"   [here](https://docs.oracle.com/en/java/javase/11/install/overview-jdk-installation.html) for more detailed","lastModifiedDate":"2022-11-07"},{"lineNumber":121,"author":{"gitId":"Piyotato"},"content":"   installation instructions for Java.","lastModifiedDate":"2022-11-07"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"highorbit25"},"content":"2. Download the latest `studmap.jar` [here](https://github.com/AY2223S1-CS2103T-W13-1/tp/releases).","lastModifiedDate":"2022-11-06"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"Piyotato"},"content":"3. Create a folder where you want to use StudMap, and copy `studmap.jar` into it. This will be the home folder","lastModifiedDate":"2022-11-07"},{"lineNumber":126,"author":{"gitId":"Piyotato"},"content":"   for StudMap.","lastModifiedDate":"2022-11-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"Piyotato"},"content":"4. Double click on `studmap.jar` to start the app. In a few seconds, you should see a new window detailed in the next","lastModifiedDate":"2022-11-07"},{"lineNumber":129,"author":{"gitId":"Piyotato"},"content":"   section.","lastModifiedDate":"2022-11-07"},{"lineNumber":130,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":131,"author":{"gitId":"comicalromance"},"content":"## 4.2 Understanding the User Interface","lastModifiedDate":"2022-11-07"},{"lineNumber":132,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":133,"author":{"gitId":"Piyotato"},"content":"When you first load StudMap, you will likely be greeted with a display similar to the one below, containing some sample","lastModifiedDate":"2022-11-07"},{"lineNumber":134,"author":{"gitId":"Piyotato"},"content":"data.","lastModifiedDate":"2022-11-07"},{"lineNumber":135,"author":{"gitId":"Piyotato"},"content":"**Don\u0027t be overwhelmed!** While there may be many fields and objects to take in at first, let\u0027s go through the User","lastModifiedDate":"2022-11-07"},{"lineNumber":136,"author":{"gitId":"Piyotato"},"content":"Interface and","lastModifiedDate":"2022-11-07"},{"lineNumber":137,"author":{"gitId":"comicalromance"},"content":"explore each element one by one.","lastModifiedDate":"2022-11-07"},{"lineNumber":138,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":139,"author":{"gitId":"Piyotato"},"content":"![UI Overview](images/ui/ui-getting-started.png)","lastModifiedDate":"2022-11-07"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"comicalromance"},"content":"Take note of the three main elements of the interface:","lastModifiedDate":"2022-11-07"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"comicalromance"},"content":"| Element      | Purpose                                                                                                                                                    |","lastModifiedDate":"2022-11-07"},{"lineNumber":144,"author":{"gitId":"comicalromance"},"content":"|--------------|------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-11-07"},{"lineNumber":145,"author":{"gitId":"comicalromance"},"content":"| Command Box  | This is where you give instructions to StudMap, telling StudMap what you want to do. These instructions are called [Commands](#43-understanding-commands). |","lastModifiedDate":"2022-11-07"},{"lineNumber":146,"author":{"gitId":"comicalromance"},"content":"| Reply Box    | This is where StudMap replies with any useful feedback, for example after running a command.                                                               |","lastModifiedDate":"2022-11-07"},{"lineNumber":147,"author":{"gitId":"Piyotato"},"content":"| Student List | This is where StudMap displays the list of students, with information about each student organized into individual **student cards**.                      |","lastModifiedDate":"2022-11-07"},{"lineNumber":148,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":149,"author":{"gitId":"comicalromance"},"content":"### Student Cards","lastModifiedDate":"2022-11-07"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"Piyotato"},"content":"As a student management tool, the core of StudMap is naturally your students. StudMap can store information about your","lastModifiedDate":"2022-11-07"},{"lineNumber":152,"author":{"gitId":"Piyotato"},"content":"student,","lastModifiedDate":"2022-11-07"},{"lineNumber":153,"author":{"gitId":"Piyotato"},"content":"such as personal particulars or module-related progress, and represents it in a single rectangular panel called a **","lastModifiedDate":"2022-11-07"},{"lineNumber":154,"author":{"gitId":"Piyotato"},"content":"student card**.","lastModifiedDate":"2022-11-07"},{"lineNumber":155,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":156,"author":{"gitId":"comicalromance"},"content":"The **left half** of each student card contains the student\u0027s particulars. Let\u0027s zoom in and find out more:","lastModifiedDate":"2022-11-07"},{"lineNumber":157,"author":{"gitId":"Piyotato"},"content":"![Student Info UI](images/ui/ui-student-info.png)","lastModifiedDate":"2022-11-07"},{"lineNumber":158,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":159,"author":{"gitId":"comicalromance"},"content":"| Element         | Purpose                                                                                                  |","lastModifiedDate":"2022-11-07"},{"lineNumber":160,"author":{"gitId":"comicalromance"},"content":"|-----------------|----------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-11-07"},{"lineNumber":161,"author":{"gitId":"comicalromance"},"content":"| Index           | Order of the student in the list. Used to indicate which student card you want to target with a command. |","lastModifiedDate":"2022-11-07"},{"lineNumber":162,"author":{"gitId":"Piyotato"},"content":"| Student Name    | Name of your student. **Is Compulsory!**                                                                 |","lastModifiedDate":"2022-11-07"},{"lineNumber":163,"author":{"gitId":"Piyotato"},"content":"| Student ID      | Student ID of your student, usually beginning with E. **Is Compulsory!**                                 |","lastModifiedDate":"2022-11-07"},{"lineNumber":164,"author":{"gitId":"comicalromance"},"content":"| Phone Number    | Phone number of your student, if available.                                                              |","lastModifiedDate":"2022-11-07"},{"lineNumber":165,"author":{"gitId":"comicalromance"},"content":"| Email           | Email address of your student, if available.                                                             |","lastModifiedDate":"2022-11-07"},{"lineNumber":166,"author":{"gitId":"comicalromance"},"content":"| GitHub Username | GitHub username of your student, if available.                                                           |","lastModifiedDate":"2022-11-07"},{"lineNumber":167,"author":{"gitId":"comicalromance"},"content":"| Telegram Handle | Telegram handle of your student, if available.                                                           |","lastModifiedDate":"2022-11-07"},{"lineNumber":168,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":169,"author":{"gitId":"comicalromance"},"content":"The **right half** of each student card contains module information related to your TA responsibilities:","lastModifiedDate":"2022-11-07"},{"lineNumber":170,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":171,"author":{"gitId":"Piyotato"},"content":"![TA Info UI](images/ui/ui-ta-info.png)","lastModifiedDate":"2022-11-07"},{"lineNumber":172,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":173,"author":{"gitId":"comicalromance"},"content":"| Element                  | Purpose                                                                                                                                                                                                                                                                                                               |","lastModifiedDate":"2022-11-07"},{"lineNumber":174,"author":{"gitId":"comicalromance"},"content":"|--------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-11-07"},{"lineNumber":175,"author":{"gitId":"Piyotato"},"content":"| Module                   | Module you are teaching your student. **Is Compulsory!**                                                                                                                                                                                                                                                              |","lastModifiedDate":"2022-11-07"},{"lineNumber":176,"author":{"gitId":"comicalromance"},"content":"| Attendance Percentage    | Percentage of classes that your student has been marked present.                                                                                                                                                                                                                                                      |","lastModifiedDate":"2022-11-07"},{"lineNumber":177,"author":{"gitId":"comicalromance"},"content":"| Classes                  | {::nomarkdown} Detailed record of classes for your student. Each box represents one class: \u003cul\u003e\u003cli\u003ethe text in the box indicates the name of the class\u003c/li\u003e\u003cli\u003ethe colour indicates attendance status (Green for present, Red for absent)\u003c/li\u003e\u003c/ul\u003e{:/}                                                               |","lastModifiedDate":"2022-11-07"},{"lineNumber":178,"author":{"gitId":"comicalromance"},"content":"| Participation Percentage | Percentage of participation components that your student has qualified for.                                                                                                                                                                                                                                           |","lastModifiedDate":"2022-11-07"},{"lineNumber":179,"author":{"gitId":"comicalromance"},"content":"| Participation Components | {::nomarkdown} Detailed record of participation for your student. Each box represents one component: \u003cul\u003e\u003cli\u003ethe text in the box indicates the name of the component\u003c/li\u003e\u003cli\u003ethe colour indicates participation status (Green for yes, Red for no)\u003c/li\u003e\u003c/ul\u003e{:/}                                                      |","lastModifiedDate":"2022-11-07"},{"lineNumber":180,"author":{"gitId":"Piyotato"},"content":"| Ungraded Assignments     | Number of ungraded assignments (assignments marked as **received**) that you yet to have graded.                                                                                                                                                                                                                      |","lastModifiedDate":"2022-11-07"},{"lineNumber":181,"author":{"gitId":"comicalromance"},"content":"| Assignment Status        | {::nomarkdown} Detailed record of assignments for your student. Each box represents one assignment: \u003cul\u003e\u003cli\u003ethe text in the box indicates the name of the assignment\u003c/li\u003e\u003cli\u003ethe colour indicates assignment status (There are 3 assignment status: Green for graded, Red for received, Yellow for new)\u003c/li\u003e\u003c/ul\u003e{:/} |","lastModifiedDate":"2022-11-07"},{"lineNumber":182,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":183,"author":{"gitId":"comicalromance"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":184,"author":{"gitId":"comicalromance"},"content":":information_source: **Note 1:** Each student is uniquely identified by their **name, student ID and module** combined.","lastModifiedDate":"2022-11-07"},{"lineNumber":185,"author":{"gitId":"comicalromance"},"content":"This means that two students with the same name and module are considered **distinct** if they have different student IDs.","lastModifiedDate":"2022-11-07"},{"lineNumber":186,"author":{"gitId":"comicalromance"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":187,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":188,"author":{"gitId":"comicalromance"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":189,"author":{"gitId":"comicalromance"},"content":":information_source: **Note 2:** Each student in StudMap can only be attached to **one module**. If you are tutoring a student","lastModifiedDate":"2022-11-07"},{"lineNumber":190,"author":{"gitId":"comicalromance"},"content":"for more than one module, you will have to create separate entries for that student, each with a different module. This ensures","lastModifiedDate":"2022-11-07"},{"lineNumber":191,"author":{"gitId":"Piyotato"},"content":"that data from one module (e.g. Attendance for CS2103T) **will not be mixed** with that from another module (e.g. Attendance for CS2040).","lastModifiedDate":"2022-11-07"},{"lineNumber":192,"author":{"gitId":"comicalromance"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":193,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":194,"author":{"gitId":"comicalromance"},"content":"## 4.3 Understanding Commands","lastModifiedDate":"2022-11-07"},{"lineNumber":195,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":196,"author":{"gitId":"comicalromance"},"content":"Now that you understand the User Interface of StudMap, what can you do to interact with it?","lastModifiedDate":"2022-11-07"},{"lineNumber":197,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":198,"author":{"gitId":"Piyotato"},"content":"StudMap is designed around the use of a Command Line Interface (CLI). This means that accessing or modifying data on","lastModifiedDate":"2022-11-07"},{"lineNumber":199,"author":{"gitId":"Piyotato"},"content":"StudMap","lastModifiedDate":"2022-11-07"},{"lineNumber":200,"author":{"gitId":"comicalromance"},"content":"has to be done by typing instructions, or `commands`, that StudMap can understand and execute.","lastModifiedDate":"2022-11-07"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"comicalromance"},"content":"### Command Word","lastModifiedDate":"2022-11-07"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":204,"author":{"gitId":"Piyotato"},"content":"The format of any command is standard. The command is first identified by its **command word**, which usually describes","lastModifiedDate":"2022-11-07"},{"lineNumber":205,"author":{"gitId":"Piyotato"},"content":"its","lastModifiedDate":"2022-11-07"},{"lineNumber":206,"author":{"gitId":"comicalromance"},"content":"main functionality. Examples of some useful commands are:","lastModifiedDate":"2022-11-07"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":208,"author":{"gitId":"comicalromance"},"content":"* `list`, which **lists** the entire student list on StudMap","lastModifiedDate":"2022-11-07"},{"lineNumber":209,"author":{"gitId":"comicalromance"},"content":"* `sort`, which **sorts** the student list in a certain order","lastModifiedDate":"2022-11-07"},{"lineNumber":210,"author":{"gitId":"comicalromance"},"content":"* `grade`, which adds information about an assignment you have **graded** for a student","lastModifiedDate":"2022-11-07"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":212,"author":{"gitId":"comicalromance"},"content":"### Parameters","lastModifiedDate":"2022-11-07"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":214,"author":{"gitId":"Piyotato"},"content":"Sometimes, you may need to include extra details about your instruction to perform a certain task (e.g. what way do you","lastModifiedDate":"2022-11-07"},{"lineNumber":215,"author":{"gitId":"Piyotato"},"content":"want to","lastModifiedDate":"2022-11-07"},{"lineNumber":216,"author":{"gitId":"Piyotato"},"content":"`sort` the list?). You can do this by adding **parameters**, or extra options, behind the command word to specify","lastModifiedDate":"2022-11-07"},{"lineNumber":217,"author":{"gitId":"Piyotato"},"content":"further instructions","lastModifiedDate":"2022-11-07"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":219,"author":{"gitId":"comicalromance"},"content":"Here\u0027s an example of how parameters can be used:","lastModifiedDate":"2022-11-07"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":221,"author":{"gitId":"comicalromance"},"content":"* You wish to change the name of the second student to \"Salad\".","lastModifiedDate":"2022-11-07"},{"lineNumber":222,"author":{"gitId":"comicalromance"},"content":"* You can type the `edit` command word, which will indicate to StudMap you want to edit a student","lastModifiedDate":"2022-11-07"},{"lineNumber":223,"author":{"gitId":"Piyotato"},"content":"* You can then provide two parameters: `2`, which is the index of the student to be edited, and `n/Salad`, which is the","lastModifiedDate":"2022-11-07"},{"lineNumber":224,"author":{"gitId":"Piyotato"},"content":"  name","lastModifiedDate":"2022-11-07"},{"lineNumber":225,"author":{"gitId":"comicalromance"},"content":"  you want","lastModifiedDate":"2022-11-07"},{"lineNumber":226,"author":{"gitId":"comicalromance"},"content":"* The final command will look like this: `edit 2 n/Salad`!","lastModifiedDate":"2022-11-07"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":228,"author":{"gitId":"comicalromance"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":229,"author":{"gitId":"comicalromance"},"content":":bulb: **Tip:** Confused about which commands use what parameters? Do not fret! Keying in the command word into the command box ","lastModifiedDate":"2022-11-07"},{"lineNumber":230,"author":{"gitId":"comicalromance"},"content":"and pressing enter will give you all the information about the command: what it does, what parameters it takes and so on!","lastModifiedDate":"2022-11-07"},{"lineNumber":231,"author":{"gitId":"comicalromance"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":232,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":233,"author":{"gitId":"comicalromance"},"content":"To learn more about parameters, do check out the section on [Parameters](#52-information-about-parameters)!","lastModifiedDate":"2022-11-07"},{"lineNumber":234,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":235,"author":{"gitId":"comicalromance"},"content":"### Example Commands","lastModifiedDate":"2022-11-07"},{"lineNumber":236,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":237,"author":{"gitId":"Piyotato"},"content":"With the power of commands, you can now truly wield StudMap to organize your students and accomplish your TA","lastModifiedDate":"2022-11-07"},{"lineNumber":238,"author":{"gitId":"Piyotato"},"content":"responsibilities.","lastModifiedDate":"2022-11-07"},{"lineNumber":239,"author":{"gitId":"Piyotato"},"content":"Commands will allow you to add new students to the list, append assignments to be graded or attendances that have been","lastModifiedDate":"2022-11-07"},{"lineNumber":240,"author":{"gitId":"Piyotato"},"content":"marked, and so much more!","lastModifiedDate":"2022-11-07"},{"lineNumber":241,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":242,"author":{"gitId":"comicalromance"},"content":"Let’s try out some commands! Type or copy a command into the Command Box and press Enter to execute it.","lastModifiedDate":"2022-11-07"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"Piyotato"},"content":"* `list`","lastModifiedDate":"2022-11-06"},{"lineNumber":245,"author":{"gitId":"Piyotato"},"content":"    * This updates the Student List with all the students you have.","lastModifiedDate":"2022-11-06"},{"lineNumber":246,"author":{"gitId":"comicalromance"},"content":"* `add n/John Doe m/CS2103T id/E1234567`","lastModifiedDate":"2022-11-07"},{"lineNumber":247,"author":{"gitId":"Piyotato"},"content":"    * This adds a student named John Doe with student ID `E1234567` into StudMap, who is taking the module `CS2103T`","lastModifiedDate":"2022-11-06"},{"lineNumber":248,"author":{"gitId":"Piyotato"},"content":"      .","lastModifiedDate":"2022-11-06"},{"lineNumber":249,"author":{"gitId":"Piyotato"},"content":"      This is one of the ways you can add a new student into StudMap.","lastModifiedDate":"2022-11-06"},{"lineNumber":250,"author":{"gitId":"comicalromance"},"content":"* `mark 1 present c/Tut5`","lastModifiedDate":"2022-11-07"},{"lineNumber":251,"author":{"gitId":"comicalromance"},"content":"    * This marks the 1st student currently shown in the Student List as present for the class \"Tut5\".","lastModifiedDate":"2022-11-07"},{"lineNumber":252,"author":{"gitId":"Piyotato"},"content":"* `delete 3`","lastModifiedDate":"2022-11-06"},{"lineNumber":253,"author":{"gitId":"Piyotato"},"content":"    * This deletes the 3rd student currently shown in the Student List.","lastModifiedDate":"2022-11-06"},{"lineNumber":254,"author":{"gitId":"Piyotato"},"content":"* `clear`","lastModifiedDate":"2022-11-06"},{"lineNumber":255,"author":{"gitId":"Piyotato"},"content":"    * This deletes all the students, so you can start with a clean slate!","lastModifiedDate":"2022-11-06"},{"lineNumber":256,"author":{"gitId":"Piyotato"},"content":"      \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"comicalromance"},"content":"This is just a short preview of the features that StudMap has to offer. The [Features](#5-features) section","lastModifiedDate":"2022-11-07"},{"lineNumber":259,"author":{"gitId":"comicalromance"},"content":"will guide you through all available commands in greater detail!","lastModifiedDate":"2022-11-07"},{"lineNumber":260,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":261,"author":{"gitId":"comicalromance"},"content":"## 4.4 Migrating to StudMap","lastModifiedDate":"2022-11-07"},{"lineNumber":262,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":263,"author":{"gitId":"comicalromance"},"content":"You may be concerned: you’re probably already using some Excel sheet of sorts for keeping track of student data –","lastModifiedDate":"2022-11-07"},{"lineNumber":264,"author":{"gitId":"comicalromance"},"content":"and you certainly don’t want to transfer all this data manually to StudMap! We’ve got you covered.","lastModifiedDate":"2022-11-07"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"Piyotato"},"content":"Download this [Student Information Template](files/import_template.csv). If you want a sample of how to use it, check","lastModifiedDate":"2022-11-06"},{"lineNumber":267,"author":{"gitId":"Piyotato"},"content":"out this [Example Template](files/example_template.csv), or check out","lastModifiedDate":"2022-11-06"},{"lineNumber":268,"author":{"gitId":"comicalromance"},"content":"[Import Command](#534-importing-students-from-csv-file-import) for more details.","lastModifiedDate":"2022-11-06"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"comicalromance"},"content":"\u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":271,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":272,"author":{"gitId":"Piyotato"},"content":"That’s all for the tutorial! Check out the [Features](#5-features) section for more detailed information about each","lastModifiedDate":"2022-11-07"},{"lineNumber":273,"author":{"gitId":"Piyotato"},"content":"command. We hope you enjoy using StudMap!","lastModifiedDate":"2022-11-07"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"Piyotato"},"content":"---","lastModifiedDate":"2022-11-06"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"comicalromance"},"content":"# 5. Features","lastModifiedDate":"2022-11-06"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":279,"author":{"gitId":"comicalromance"},"content":"## 5.1 Introduction","lastModifiedDate":"2022-11-06"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":281,"author":{"gitId":"Piyotato"},"content":"Welcome to the Features section of StudMap. We have three categories of","lastModifiedDate":"2022-11-06"},{"lineNumber":282,"author":{"gitId":"Piyotato"},"content":"features:","lastModifiedDate":"2022-11-07"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":284,"author":{"gitId":"Piyotato"},"content":"* [5.3 Student List Management](#53-student-list-management)","lastModifiedDate":"2022-11-07"},{"lineNumber":285,"author":{"gitId":"Piyotato"},"content":"* [5.4 Student Updating](#54-student-updating)","lastModifiedDate":"2022-11-07"},{"lineNumber":286,"author":{"gitId":"Piyotato"},"content":"* [5.5 Miscellaneous](#55-miscellaneous)","lastModifiedDate":"2022-11-07"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":288,"author":{"gitId":"Piyotato"},"content":"Read on to learn in detail about the plethora of features that StudMap has in store for you! Worried about the learning","lastModifiedDate":"2022-11-06"},{"lineNumber":289,"author":{"gitId":"Piyotato"},"content":"curve? StudMap is designed to be extremely intuitive, with in-built help messages guiding you every step of the way!","lastModifiedDate":"2022-11-06"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":291,"author":{"gitId":"Piyotato"},"content":"Follow the guide below, and you would be on track to mastering all the necessary commands in no time.","lastModifiedDate":"2022-11-06"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":293,"author":{"gitId":"comicalromance"},"content":"## 5.2 Information about Parameters","lastModifiedDate":"2022-11-07"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":295,"author":{"gitId":"Piyotato"},"content":"Before we start looking at each feature in detail, let’s take note of some conventions that we will use in this guide.","lastModifiedDate":"2022-11-06"},{"lineNumber":296,"author":{"gitId":"Piyotato"},"content":"This will help you understand the guide better!","lastModifiedDate":"2022-11-06"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"highorbit25"},"content":"**:information_source: Understanding the command format:**\u003cbr\u003e","lastModifiedDate":"2022-11-06"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"Piyotato"},"content":"* Words in `UPPER_CASE` are the **parameters** to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2022-11-06"},{"lineNumber":303,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"Piyotato"},"content":"* Items in square brackets are **optional**.\u003cbr\u003e","lastModifiedDate":"2022-11-06"},{"lineNumber":306,"author":{"gitId":"Piyotato"},"content":"  e.g. `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2022-11-06"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"Piyotato"},"content":"* Items with `…`​ after them can be used **multiple times** including zero times.\u003cbr\u003e","lastModifiedDate":"2022-11-06"},{"lineNumber":309,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"Piyotato"},"content":"* Parameters can be in **any order**.\u003cbr\u003e","lastModifiedDate":"2022-11-06"},{"lineNumber":312,"author":{"gitId":"comicalromance"},"content":"  e.g. if the command specifies `n/NAME p/PHONE`, `p/PHONE n/NAME` is also acceptable.","lastModifiedDate":"2022-11-03"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"Piyotato"},"content":"* If a parameter is expected only once in the command, but you specified it multiple times, only the **last occurrence**","lastModifiedDate":"2022-11-06"},{"lineNumber":315,"author":{"gitId":"Piyotato"},"content":"  of","lastModifiedDate":"2022-11-06"},{"lineNumber":316,"author":{"gitId":"dr-arrgghh"},"content":"  the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":317,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":319,"author":{"gitId":"Piyotato"},"content":"* Extra parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be","lastModifiedDate":"2022-11-06"},{"lineNumber":320,"author":{"gitId":"Piyotato"},"content":"  **ignored**.\u003cbr\u003e","lastModifiedDate":"2022-11-06"},{"lineNumber":321,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":323,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"Piyotato"},"content":"Throughout this section, you will see numerous parameters being used by different commands. Here is a consolidated","lastModifiedDate":"2022-11-07"},{"lineNumber":326,"author":{"gitId":"Piyotato"},"content":"summary of","lastModifiedDate":"2022-11-07"},{"lineNumber":327,"author":{"gitId":"comicalromance"},"content":"the parameters and any remarks (e.g. **constraints**) that might be of relevance.","lastModifiedDate":"2022-11-07"},{"lineNumber":328,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":329,"author":{"gitId":"comicalromance"},"content":"| Parameter    | Remarks                                                                                                                                                              |","lastModifiedDate":"2022-11-07"},{"lineNumber":330,"author":{"gitId":"comicalromance"},"content":"|--------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-11-07"},{"lineNumber":331,"author":{"gitId":"comicalromance"},"content":"| INDEX        | Number used to specify the student you wish to target. Can be replaced with ALL to target all students in displayed list                                             |","lastModifiedDate":"2022-11-07"},{"lineNumber":332,"author":{"gitId":"comicalromance"},"content":"| KEYWORD      | Used in [`filter`](#538-filtering-the-students-filter)                                                                                                               |","lastModifiedDate":"2022-11-07"},{"lineNumber":333,"author":{"gitId":"comicalromance"},"content":"| ORDER        | Used in [`sort`](#537-sorting-the-students-sort), can take two values: asc or dsc                                                                                    |","lastModifiedDate":"2022-11-07"},{"lineNumber":334,"author":{"gitId":"comicalromance"},"content":"| STATUS       | Used to represent status of assignments (new/received/marked), attendance (present/absent) and participation (yes/no)                                                |","lastModifiedDate":"2022-11-07"},{"lineNumber":335,"author":{"gitId":"Piyotato"},"content":"| a/ASSIGNMENT | Assignment to be recorded for your student. \u003cbr/\u003e**Constraint:** Must consist of [alphanumerics](#alphanumeric), spaces, dashes and underscores only                 |","lastModifiedDate":"2022-11-07"},{"lineNumber":336,"author":{"gitId":"comicalromance"},"content":"| a/ATTRIBUTE  | Attribute to be used for [`sorting`](#537-sorting-the-students-sort)                                                                                                 |","lastModifiedDate":"2022-11-07"},{"lineNumber":337,"author":{"gitId":"Piyotato"},"content":"| c/CLASS      | Class to be recorded for your student \u003cbr/\u003e**Constraint:** Must consist of [alphanumerics](#alphanumeric), spaces, dashes and underscores only                       |","lastModifiedDate":"2022-11-07"},{"lineNumber":338,"author":{"gitId":"Piyotato"},"content":"| e/EMAIL      | Email for your student. \u003cbr/\u003e**Constraint:** Must be of the format local-part@domain                                                                                 |","lastModifiedDate":"2022-11-07"},{"lineNumber":339,"author":{"gitId":"comicalromance"},"content":"| g/GITNAME    | GitHub Username for your student                                                                                                                                     |","lastModifiedDate":"2022-11-07"},{"lineNumber":340,"author":{"gitId":"Piyotato"},"content":"| h/TELEHANDLE | Telegram Handle for your student. \u003cbr/\u003e**Constraint:** Must have `@` before the handle e.g. @handle                                                                  |","lastModifiedDate":"2022-11-07"},{"lineNumber":341,"author":{"gitId":"comicalromance"},"content":"| id/ID        | Student ID for your student                                                                                                                                          |","lastModifiedDate":"2022-11-07"},{"lineNumber":342,"author":{"gitId":"Piyotato"},"content":"| m/MODULE     | Module for your student. \u003cbr/\u003e**Constraint:** Must follow NUS Module naming convention: letters, then 4 digits, and finally an optional letter suffix (i.e. CS2103T) |","lastModifiedDate":"2022-11-07"},{"lineNumber":343,"author":{"gitId":"comicalromance"},"content":"| n/NAME       | Name for your student                                                                                                                                                |","lastModifiedDate":"2022-11-07"},{"lineNumber":344,"author":{"gitId":"Piyotato"},"content":"| p/COMPONENT  | Participation component to be recorded for your student. \u003cbr/\u003e**Constraint:** Must consist of [alphanumerics](#alphanumeric), spaces, dashes and underscores only    |","lastModifiedDate":"2022-11-07"},{"lineNumber":345,"author":{"gitId":"Piyotato"},"content":"| p/PHONE      | Phone number for your student. \u003cbr/\u003e**Constraint:** Must consist of only numbers, and an optional `+` at the beginning. Must have at least 3 digits                  |","lastModifiedDate":"2022-11-07"},{"lineNumber":346,"author":{"gitId":"Piyotato"},"content":"| t/TAG        | Tag for your student \u003cbr/\u003e**Constraint:** Must be only [alphanumeric](#alphanumeric)                                                                                 |","lastModifiedDate":"2022-11-07"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":348,"author":{"gitId":"comicalromance"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":349,"author":{"gitId":"comicalromance"},"content":":information_source: Here are some explanations about the format constraints for certain parameters that you may ","lastModifiedDate":"2022-11-07"},{"lineNumber":350,"author":{"gitId":"comicalromance"},"content":"find too restrictive.","lastModifiedDate":"2022-11-07"},{"lineNumber":351,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":352,"author":{"gitId":"comicalromance"},"content":"* **PHONE:** StudMap currently only allows you to record one phone number for each student, as supporting multiple","lastModifiedDate":"2022-11-07"},{"lineNumber":353,"author":{"gitId":"comicalromance"},"content":"  numbers (i.e. Home number) for your student is considered Out of Scope.","lastModifiedDate":"2022-11-07"},{"lineNumber":354,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":355,"author":{"gitId":"comicalromance"},"content":"* **MODULE:** StudMap is designed as a tool for NUS TAs, and thus StudMap currently only supports the code format","lastModifiedDate":"2022-11-07"},{"lineNumber":356,"author":{"gitId":"comicalromance"},"content":"  for NUS modules. Future plans for StudMap include expanding this format to more universities.","lastModifiedDate":"2022-11-07"},{"lineNumber":357,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":358,"author":{"gitId":"comicalromance"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":360,"author":{"gitId":"comicalromance"},"content":"## 5.3 Student List Management","lastModifiedDate":"2022-11-06"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"Piyotato"},"content":"* [5.3.1 Adding a student: `add`](#531-adding-a-student-add)","lastModifiedDate":"2022-11-07"},{"lineNumber":363,"author":{"gitId":"Piyotato"},"content":"* [5.3.2 Deleting a student: `delete`](#532-deleting-a-student-delete)","lastModifiedDate":"2022-11-07"},{"lineNumber":364,"author":{"gitId":"Piyotato"},"content":"* [5.3.3 Clearing all entries: `clear`](#533-clearing-all-entries-clear)","lastModifiedDate":"2022-11-07"},{"lineNumber":365,"author":{"gitId":"Piyotato"},"content":"* [5.3.4 Importing students from CSV file: `import`](#534-importing-students-from-csv-file-import)","lastModifiedDate":"2022-11-07"},{"lineNumber":366,"author":{"gitId":"Piyotato"},"content":"* [5.3.5 Listing all students: `list`](#535-listing-all-students-list)","lastModifiedDate":"2022-11-07"},{"lineNumber":367,"author":{"gitId":"Piyotato"},"content":"* [5.3.6 Locating students by name: `find`](#536-locating-students-by-name-find)","lastModifiedDate":"2022-11-07"},{"lineNumber":368,"author":{"gitId":"Piyotato"},"content":"* [5.3.7 Sorting the students: `sort`](#537-sorting-the-students-sort)","lastModifiedDate":"2022-11-07"},{"lineNumber":369,"author":{"gitId":"Piyotato"},"content":"* [5.3.8 Filtering the students: `filter`](#538-filtering-the-students-filter)","lastModifiedDate":"2022-11-07"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":371,"author":{"gitId":"comicalromance"},"content":"### 5.3.1 Adding a student: `add`","lastModifiedDate":"2022-11-06"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"Piyotato"},"content":"**Function:** Adds a student to StudMap.","lastModifiedDate":"2022-11-06"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":375,"author":{"gitId":"Piyotato"},"content":"New student attending your class? Add them into StudMap to start managing their records! This is one of the ways you can","lastModifiedDate":"2022-11-06"},{"lineNumber":376,"author":{"gitId":"Piyotato"},"content":"add a student into StudMap.","lastModifiedDate":"2022-11-06"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":378,"author":{"gitId":"comicalromance"},"content":"**Format:** `add n/NAME m/MODULE id/ID [p/PHONE] [e/EMAIL] [g/GITNAME] [h/TELEHANDLE] [t/TAG]…​`","lastModifiedDate":"2022-11-07"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":380,"author":{"gitId":"Piyotato"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: \u003cb\u003eTip:\u003c/b\u003e","lastModifiedDate":"2022-11-06"},{"lineNumber":381,"author":{"gitId":"lpohsien"},"content":"A student can have any number of tags (including 0)","lastModifiedDate":"2022-09-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"comicalromance"},"content":"**Examples:**","lastModifiedDate":"2022-11-06"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":386,"author":{"gitId":"highorbit25"},"content":"* `add n/John Doe m/CS2103T id/E1234567` adds student named `John Doe` taking `CS2103T` with student id `E1234567`.","lastModifiedDate":"2022-11-06"},{"lineNumber":387,"author":{"gitId":"Piyotato"},"content":"* `add n/Betsy Crowe t/PotentialTA e/betsycrowe@example.com id/E3141592 m/CS2101 p/1234567` adds student","lastModifiedDate":"2022-11-06"},{"lineNumber":388,"author":{"gitId":"Piyotato"},"content":"  named `Betsy Crowe` taking `CS2101` with student id `E3141592`, email `betsycrowe@example.com`, phone number `1234567`","lastModifiedDate":"2022-11-06"},{"lineNumber":389,"author":{"gitId":"Piyotato"},"content":"  and tagged as `PotentialTA`.","lastModifiedDate":"2022-11-06"},{"lineNumber":390,"author":{"gitId":"Piyotato"},"content":"* `add n/Silos Yao t/StrongStudent g/silosyao id/E1234567 m/MA5203` adds student named `Silos Yao` taking `MA5203` with","lastModifiedDate":"2022-11-06"},{"lineNumber":391,"author":{"gitId":"Piyotato"},"content":"  student id `E1234567` and tagged as `StrongStudent`.","lastModifiedDate":"2022-11-06"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"Piyotato"},"content":"**See Also:**","lastModifiedDate":"2022-11-06"},{"lineNumber":394,"author":{"gitId":"Piyotato"},"content":"[`import`](#534-importing-students-from-csv-file-import)","lastModifiedDate":"2022-11-06"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":396,"author":{"gitId":"comicalromance"},"content":"### 5.3.2 Deleting a student: `delete`","lastModifiedDate":"2022-11-06"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"Piyotato"},"content":"**Function:** Deletes the specified student from the StudMap.","lastModifiedDate":"2022-11-06"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"Piyotato"},"content":"Did your student withdraw from the module midway through the semester? You can remove them from so that your StudMap","lastModifiedDate":"2022-11-06"},{"lineNumber":401,"author":{"gitId":"Piyotato"},"content":"remains clutter-free!","lastModifiedDate":"2022-11-06"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"Piyotato"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2022-11-06"},{"lineNumber":404,"author":{"gitId":"Piyotato"},"content":":bulb: \u003cb\u003eTip:\u003c/b\u003e","lastModifiedDate":"2022-11-06"},{"lineNumber":405,"author":{"gitId":"comicalromance"},"content":"You can use [`find`](#536-locating-students-by-name-find) to help locate the student you wish to delete first. \u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":406,"author":{"gitId":"Piyotato"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-11-06"},{"lineNumber":407,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"comicalromance"},"content":"**Format:** `delete INDEX/ALL`","lastModifiedDate":"2022-11-07"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"comicalromance"},"content":"* `INDEX`: You can specify the index of the student you want to delete. The index refers to the","lastModifiedDate":"2022-11-07"},{"lineNumber":411,"author":{"gitId":"comicalromance"},"content":"  index number shown in the displayed student list.","lastModifiedDate":"2022-11-07"},{"lineNumber":412,"author":{"gitId":"comicalromance"},"content":"  The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-11-07"},{"lineNumber":413,"author":{"gitId":"comicalromance"},"content":"* `ALL`: You can delete all the students currently displayed.","lastModifiedDate":"2022-11-07"},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"comicalromance"},"content":"**Examples:**","lastModifiedDate":"2022-11-06"},{"lineNumber":416,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":417,"author":{"gitId":"Piyotato"},"content":"* `list` followed by `delete 2` deletes the 2nd student in the StudMap.","lastModifiedDate":"2022-11-06"},{"lineNumber":418,"author":{"gitId":"Piyotato"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st student in the results of the `find` command.","lastModifiedDate":"2022-11-06"},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"Piyotato"},"content":"**See Also:**","lastModifiedDate":"2022-11-06"},{"lineNumber":421,"author":{"gitId":"Piyotato"},"content":"[`clear`](#533-clearing-all-entries-clear)","lastModifiedDate":"2022-11-06"},{"lineNumber":422,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":423,"author":{"gitId":"comicalromance"},"content":"### 5.3.3 Clearing all entries: `clear`","lastModifiedDate":"2022-11-06"},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"Piyotato"},"content":"**Function:** Clears all entries from the StudMap.","lastModifiedDate":"2022-11-06"},{"lineNumber":426,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":427,"author":{"gitId":"Piyotato"},"content":"Need to start afresh? Delete all the entries from StudMap with this command.","lastModifiedDate":"2022-11-06"},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":429,"author":{"gitId":"Piyotato"},"content":"**Format:** `clear`","lastModifiedDate":"2022-11-06"},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":431,"author":{"gitId":"Piyotato"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2022-11-06"},{"lineNumber":432,"author":{"gitId":"Piyotato"},"content":":exclamation: \u003cb\u003eCaution:\u003c/b\u003e","lastModifiedDate":"2022-11-06"},{"lineNumber":433,"author":{"gitId":"Piyotato"},"content":"This can be dangerous! Make sure you back up your data before executing this command.","lastModifiedDate":"2022-11-06"},{"lineNumber":434,"author":{"gitId":"Piyotato"},"content":"See \u003ca href\u003d\"#553-backing-up-data\"\u003ehere\u003c/a\u003e for more instructions.\u003cbr\u003e","lastModifiedDate":"2022-11-06"},{"lineNumber":435,"author":{"gitId":"Piyotato"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-11-06"},{"lineNumber":436,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":437,"author":{"gitId":"Piyotato"},"content":"**See Also:**","lastModifiedDate":"2022-11-06"},{"lineNumber":438,"author":{"gitId":"Piyotato"},"content":"[`delete`](#532-deleting-a-student-delete)","lastModifiedDate":"2022-11-06"},{"lineNumber":439,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"comicalromance"},"content":"### 5.3.4 Importing students from CSV file: `import`","lastModifiedDate":"2022-11-06"},{"lineNumber":441,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":442,"author":{"gitId":"Piyotato"},"content":"**Function:** Imports student data from a [CSV (Comma-separated Values) file](#csv-comma-separated-values-file) stored","lastModifiedDate":"2022-11-07"},{"lineNumber":443,"author":{"gitId":"Piyotato"},"content":"on your computer.","lastModifiedDate":"2022-11-07"},{"lineNumber":444,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":445,"author":{"gitId":"Piyotato"},"content":"Just starting out with StudMap? Simply copy and paste in the necessary details into a template, and StudMap will handle","lastModifiedDate":"2022-11-06"},{"lineNumber":446,"author":{"gitId":"Piyotato"},"content":"the rest — it\u0027s like magic. For your convenience, you can find the import template","lastModifiedDate":"2022-11-06"},{"lineNumber":447,"author":{"gitId":"Piyotato"},"content":"[here](files/import_template.csv).","lastModifiedDate":"2022-11-06"},{"lineNumber":448,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":449,"author":{"gitId":"comicalromance"},"content":"**Format:** `import`","lastModifiedDate":"2022-11-06"},{"lineNumber":450,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":451,"author":{"gitId":"Piyotato"},"content":"* Importing student data will add students to the existing student list, and will not clear any existing students","lastModifiedDate":"2022-11-06"},{"lineNumber":452,"author":{"gitId":"Piyotato"},"content":"* Running the command will open a file browser for you to select the CSV file to import","lastModifiedDate":"2022-11-06"},{"lineNumber":453,"author":{"gitId":"Piyotato"},"content":"* The CSV format accepted by StudMap is strict! Please use the template provided.","lastModifiedDate":"2022-11-06"},{"lineNumber":454,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":455,"author":{"gitId":"Piyotato"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2022-11-06"},{"lineNumber":456,"author":{"gitId":"Piyotato"},"content":":exclamation: \u003cb\u003eCaution:\u003c/b\u003e","lastModifiedDate":"2022-11-06"},{"lineNumber":457,"author":{"gitId":"Piyotato"},"content":"StudMap currently does not support any commas in any data field (cell) when importing a CSV file. Please avoid inputting any data","lastModifiedDate":"2022-11-06"},{"lineNumber":458,"author":{"gitId":"Piyotato"},"content":"that has commas in the CSV.","lastModifiedDate":"2022-11-06"},{"lineNumber":459,"author":{"gitId":"highorbit25"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-11-06"},{"lineNumber":460,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":461,"author":{"gitId":"comicalromance"},"content":"**Example Use Case:** Importing a fresh batch of students as a new StudMap user","lastModifiedDate":"2022-11-06"},{"lineNumber":462,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"Piyotato"},"content":"1. Remove the default list of students by typing `clear`","lastModifiedDate":"2022-11-06"},{"lineNumber":464,"author":{"gitId":"Piyotato"},"content":"2. Modify the import template using the CSV editor of your choice (e.g. Excel, Notepad)\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":465,"author":{"gitId":"Piyotato"},"content":"   ![Example CSV](images/misc/exampleCSV.png)","lastModifiedDate":"2022-11-07"},{"lineNumber":466,"author":{"gitId":"Piyotato"},"content":"   \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":467,"author":{"gitId":"Piyotato"},"content":"   _Example of a properly edited import template which you can download here: [example csv](files/example_template.csv)_","lastModifiedDate":"2022-11-07"},{"lineNumber":468,"author":{"gitId":"Piyotato"},"content":"   \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":469,"author":{"gitId":"Piyotato"},"content":"3. Type the `import` command and select the CSV file you have modified","lastModifiedDate":"2022-11-06"},{"lineNumber":470,"author":{"gitId":"Piyotato"},"content":"4. If done correctly, StudMap will create the new students using the data from the CSV file uploaded","lastModifiedDate":"2022-11-06"},{"lineNumber":471,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"Piyotato"},"content":"**See Also:**","lastModifiedDate":"2022-11-06"},{"lineNumber":473,"author":{"gitId":"Piyotato"},"content":"[`add`](#531-adding-a-student-add)","lastModifiedDate":"2022-11-06"},{"lineNumber":474,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":475,"author":{"gitId":"comicalromance"},"content":"### 5.3.5 Listing all students: `list`","lastModifiedDate":"2022-11-06"},{"lineNumber":476,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":477,"author":{"gitId":"Piyotato"},"content":"**Function:** Shows a list of all students in the StudMap.","lastModifiedDate":"2022-11-06"},{"lineNumber":478,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":479,"author":{"gitId":"Piyotato"},"content":"Want to take a look at all your students? This is the command you\u0027re looking for.","lastModifiedDate":"2022-11-06"},{"lineNumber":480,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":481,"author":{"gitId":"comicalromance"},"content":"**Format:** `list`","lastModifiedDate":"2022-11-06"},{"lineNumber":482,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":483,"author":{"gitId":"comicalromance"},"content":"### 5.3.6 Locating students by name: `find`","lastModifiedDate":"2022-11-06"},{"lineNumber":484,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":485,"author":{"gitId":"Piyotato"},"content":"**Function:** Finds students whose names contain any of the given keywords.","lastModifiedDate":"2022-11-06"},{"lineNumber":486,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":487,"author":{"gitId":"Piyotato"},"content":"If you\u0027re searching for a student by name, this is a fast shortcut for you. If you\u0027re looking for more specific","lastModifiedDate":"2022-11-06"},{"lineNumber":488,"author":{"gitId":"Piyotato"},"content":"filtering, such as by their module, see [`filter`](#538-filtering-the-students-filter).","lastModifiedDate":"2022-11-06"},{"lineNumber":489,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":490,"author":{"gitId":"comicalromance"},"content":"**Format:** `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2022-11-06"},{"lineNumber":491,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":492,"author":{"gitId":"Piyotato"},"content":"* The search is case-insensitive. e.g. `hans` will match `Hans`","lastModifiedDate":"2022-11-06"},{"lineNumber":493,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2022-11-06"},{"lineNumber":494,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2022-11-06"},{"lineNumber":495,"author":{"gitId":"Piyotato"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`.","lastModifiedDate":"2022-11-06"},{"lineNumber":496,"author":{"gitId":"Piyotato"},"content":"* Students with name matching at least one keyword will be returned (i.e. `OR` search). e.g. `Hans Bo` will","lastModifiedDate":"2022-11-06"},{"lineNumber":497,"author":{"gitId":"Piyotato"},"content":"  return `Hans Gruber`, `Bo Yang`.","lastModifiedDate":"2022-11-06"},{"lineNumber":498,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":499,"author":{"gitId":"comicalromance"},"content":"**Examples:**","lastModifiedDate":"2022-11-06"},{"lineNumber":500,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":501,"author":{"gitId":"Piyotato"},"content":"* `find tom` returns `Tom Aito`","lastModifiedDate":"2022-11-07"},{"lineNumber":502,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":503,"author":{"gitId":"Piyotato"},"content":"  ![Find Command](images/ui/ui-find.png)","lastModifiedDate":"2022-11-07"},{"lineNumber":504,"author":{"gitId":"Piyotato"},"content":"  \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":505,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":506,"author":{"gitId":"-"},"content":"* `find John` returns `john` and `John Doe`","lastModifiedDate":"2022-11-06"},{"lineNumber":507,"author":{"gitId":"Piyotato"},"content":"* `find alex david` returns `Alex Yeoh`, `David Li`","lastModifiedDate":"2022-11-07"},{"lineNumber":508,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":509,"author":{"gitId":"Piyotato"},"content":"**See Also:**","lastModifiedDate":"2022-11-06"},{"lineNumber":510,"author":{"gitId":"Piyotato"},"content":"[`filter`](#538-filtering-the-students-filter)","lastModifiedDate":"2022-11-06"},{"lineNumber":511,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":512,"author":{"gitId":"comicalromance"},"content":"### 5.3.7 Sorting the students: `sort`","lastModifiedDate":"2022-11-06"},{"lineNumber":513,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":514,"author":{"gitId":"Piyotato"},"content":"**Function:** Sorts the list by the specified attribute in the specified order.","lastModifiedDate":"2022-11-06"},{"lineNumber":515,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":516,"author":{"gitId":"Piyotato"},"content":"When managing your students, you might want to focus on a certain aspect of the module to track. For instance, you may","lastModifiedDate":"2022-11-06"},{"lineNumber":517,"author":{"gitId":"Piyotato"},"content":"wish to clamp down on absenteeism and identify students who are constantly missing from class. To achieve this, you can","lastModifiedDate":"2022-11-06"},{"lineNumber":518,"author":{"gitId":"Piyotato"},"content":"sort the StudMap by `ATTENDANCE`.","lastModifiedDate":"2022-11-06"},{"lineNumber":519,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":520,"author":{"gitId":"comicalromance"},"content":"**Format:** `sort ORDER a/ATTRIBUTE`","lastModifiedDate":"2022-11-06"},{"lineNumber":521,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":522,"author":{"gitId":"highorbit25"},"content":"- `ORDER`: You can specify the order you wish to sort your StudMap.","lastModifiedDate":"2022-11-03"},{"lineNumber":523,"author":{"gitId":"highorbit25"},"content":"    - `asc`: Sort in ascending order.","lastModifiedDate":"2022-11-03"},{"lineNumber":524,"author":{"gitId":"highorbit25"},"content":"    - `dsc`: Sort in descending order.","lastModifiedDate":"2022-11-03"},{"lineNumber":525,"author":{"gitId":"Piyotato"},"content":"- `ATTRIBUTE`: You can specify the attribute which you want to sort the StudMap by. Currently, the following attributes","lastModifiedDate":"2022-11-06"},{"lineNumber":526,"author":{"gitId":"Piyotato"},"content":"  are supported:","lastModifiedDate":"2022-11-06"},{"lineNumber":527,"author":{"gitId":"highorbit25"},"content":"    - `NAME`","lastModifiedDate":"2022-10-28"},{"lineNumber":528,"author":{"gitId":"highorbit25"},"content":"    - `MODULE`","lastModifiedDate":"2022-10-28"},{"lineNumber":529,"author":{"gitId":"highorbit25"},"content":"    - `PHONE`","lastModifiedDate":"2022-10-28"},{"lineNumber":530,"author":{"gitId":"highorbit25"},"content":"    - `ID`","lastModifiedDate":"2022-10-28"},{"lineNumber":531,"author":{"gitId":"highorbit25"},"content":"    - `GIT`","lastModifiedDate":"2022-10-28"},{"lineNumber":532,"author":{"gitId":"highorbit25"},"content":"    - `HANDLE`","lastModifiedDate":"2022-10-28"},{"lineNumber":533,"author":{"gitId":"highorbit25"},"content":"    - `EMAIL`","lastModifiedDate":"2022-10-28"},{"lineNumber":534,"author":{"gitId":"highorbit25"},"content":"    - `ATTENDANCE`","lastModifiedDate":"2022-10-28"},{"lineNumber":535,"author":{"gitId":"highorbit25"},"content":"    - `ASSIGNMENT`","lastModifiedDate":"2022-10-28"},{"lineNumber":536,"author":{"gitId":"highorbit25"},"content":"    - `PARTICIPATION`","lastModifiedDate":"2022-10-28"},{"lineNumber":537,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":538,"author":{"gitId":"highorbit25"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2022-11-03"},{"lineNumber":539,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":540,"author":{"gitId":"Piyotato"},"content":"**:information_source: Note 1:** If student has no records for the specified sorting attribute, they will be sorted to","lastModifiedDate":"2022-11-06"},{"lineNumber":541,"author":{"gitId":"Piyotato"},"content":"the end of the StudMap. \u003cbr\u003e","lastModifiedDate":"2022-11-06"},{"lineNumber":542,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":543,"author":{"gitId":"highorbit25"},"content":"**:information_source: Note 2:** When sorting by `ASSIGNMENT`, we are actually sorting by number of marked assignments.","lastModifiedDate":"2022-11-03"},{"lineNumber":544,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":545,"author":{"gitId":"Piyotato"},"content":"**:information_source: Note 3:** When sorting by `ATTENDANCE` and `PARTICIPATION`, we are sorting","lastModifiedDate":"2022-11-06"},{"lineNumber":546,"author":{"gitId":"Piyotato"},"content":"by `% of classes attended` and `% of components participated` correspondingly. \u003cbr\u003e","lastModifiedDate":"2022-11-06"},{"lineNumber":547,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":548,"author":{"gitId":"highorbit25"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-11-03"},{"lineNumber":549,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":550,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-10-28"},{"lineNumber":551,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":552,"author":{"gitId":"highorbit25"},"content":"* `sort asc a/attendance` sorts list by `ATTENDANCE` in **ascending** order","lastModifiedDate":"2022-11-06"},{"lineNumber":553,"author":{"gitId":"highorbit25"},"content":"* `sort asc a/name` sorts list by `NAME` in **ascending** order","lastModifiedDate":"2022-11-06"},{"lineNumber":554,"author":{"gitId":"highorbit25"},"content":"* `sort dsc a/phone` sorts list by `PHONE` in **descending** order","lastModifiedDate":"2022-11-06"},{"lineNumber":555,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":556,"author":{"gitId":"comicalromance"},"content":"### 5.3.8 Filtering the students: `filter`","lastModifiedDate":"2022-11-06"},{"lineNumber":557,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":558,"author":{"gitId":"Piyotato"},"content":"**Function:** Filters students from the StudMap based on different categories.","lastModifiedDate":"2022-11-06"},{"lineNumber":559,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":560,"author":{"gitId":"Piyotato"},"content":"If you want to check on the progress of weaker students you tagged as `NeedsMoreHelp`, for example, you can filter by","lastModifiedDate":"2022-11-06"},{"lineNumber":561,"author":{"gitId":"Piyotato"},"content":"tag to focus on them. If you\u0027re teaching multiple modules at once, you can filter by module to focus on the module","lastModifiedDate":"2022-11-06"},{"lineNumber":562,"author":{"gitId":"Piyotato"},"content":"you\u0027re currently interested in. If you want to find those assignment submissions you have yet to grade, you can filter","lastModifiedDate":"2022-11-06"},{"lineNumber":563,"author":{"gitId":"Piyotato"},"content":"by assignment.","lastModifiedDate":"2022-11-06"},{"lineNumber":564,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":565,"author":{"gitId":"Piyotato"},"content":"**Formats:**","lastModifiedDate":"2022-11-06"},{"lineNumber":566,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":567,"author":{"gitId":"highorbit25"},"content":"- `filter t/Keyword [MORE_KEYWORDS]`","lastModifiedDate":"2022-11-06"},{"lineNumber":568,"author":{"gitId":"highorbit25"},"content":"    * Filters students specific to the category \"tag\" represented with the prefix `t/`","lastModifiedDate":"2022-11-06"},{"lineNumber":569,"author":{"gitId":"highorbit25"},"content":"- `filter m/Keyword [MORE_KEYWORDS]`","lastModifiedDate":"2022-11-06"},{"lineNumber":570,"author":{"gitId":"highorbit25"},"content":"    * Filters students specific to the category \"module\" represented with the prefix `m/`","lastModifiedDate":"2022-11-06"},{"lineNumber":571,"author":{"gitId":"highorbit25"},"content":"- `filter a/Keyword [MORE_KEYWORDS]`","lastModifiedDate":"2022-11-06"},{"lineNumber":572,"author":{"gitId":"highorbit25"},"content":"    * Filters students specific to the category \"assignment\" represented with the prefix `a/`","lastModifiedDate":"2022-11-06"},{"lineNumber":573,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":574,"author":{"gitId":"comicalromance"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":575,"author":{"gitId":"comicalromance"},"content":"**:information_source: Note:** The filter command only successfully filters if there is an exact match between the category and","lastModifiedDate":"2022-11-07"},{"lineNumber":576,"author":{"gitId":"comicalromance"},"content":"the keyword provided. \u003cbr/\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":577,"author":{"gitId":"comicalromance"},"content":"Example: `filter t/friends` will filter students who have the tag `friends`, but `filter t/fri` will not. ","lastModifiedDate":"2022-11-07"},{"lineNumber":578,"author":{"gitId":"comicalromance"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":579,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":580,"author":{"gitId":"Piyotato"},"content":"**Example:**","lastModifiedDate":"2022-11-06"},{"lineNumber":581,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":582,"author":{"gitId":"dr-arrgghh"},"content":"* `filter t/ friends` will return a filtered list of students","lastModifiedDate":"2022-10-28"},{"lineNumber":583,"author":{"gitId":"dr-arrgghh"},"content":"  that are tagged as friends","lastModifiedDate":"2022-10-28"},{"lineNumber":584,"author":{"gitId":"dr-arrgghh"},"content":"* `filter m/ cs2103t` will return a filtered list of students","lastModifiedDate":"2022-10-28"},{"lineNumber":585,"author":{"gitId":"Piyotato"},"content":"  that are enrolled in the module `CS2103T`.","lastModifiedDate":"2022-11-06"},{"lineNumber":586,"author":{"gitId":"dr-arrgghh"},"content":"* `filter a/ a01` will return a filtered list of students","lastModifiedDate":"2022-10-28"},{"lineNumber":587,"author":{"gitId":"Piyotato"},"content":"  that are working on assignment `A01`.","lastModifiedDate":"2022-11-06"},{"lineNumber":588,"author":{"gitId":"Piyotato"},"content":"* `filter t/PotentialTA StrongStudent` will return a filtered list of","lastModifiedDate":"2022-11-06"},{"lineNumber":589,"author":{"gitId":"Piyotato"},"content":"  students that are tagged as potential teaching assistants, strong students, or both.","lastModifiedDate":"2022-11-06"},{"lineNumber":590,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":591,"author":{"gitId":"Piyotato"},"content":"**See Also:**","lastModifiedDate":"2022-11-06"},{"lineNumber":592,"author":{"gitId":"Piyotato"},"content":"[`find`](#536-locating-students-by-name-find)","lastModifiedDate":"2022-11-06"},{"lineNumber":593,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":594,"author":{"gitId":"comicalromance"},"content":"## 5.4 Student Updating","lastModifiedDate":"2022-11-06"},{"lineNumber":595,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":596,"author":{"gitId":"Piyotato"},"content":"* [5.4.1 Editing a student: `edit`](#541-editing-a-student-edit)","lastModifiedDate":"2022-11-07"},{"lineNumber":597,"author":{"gitId":"Piyotato"},"content":"* [5.4.2 Marking attendance of student: `mark`](#542-marking-attendance-of-student-mark)","lastModifiedDate":"2022-11-07"},{"lineNumber":598,"author":{"gitId":"Piyotato"},"content":"* [5.4.3 Unmarking attendance of student: `unmark`](#543-unmarking-attendance-of-student-unmark)","lastModifiedDate":"2022-11-07"},{"lineNumber":599,"author":{"gitId":"Piyotato"},"content":"* [5.4.4 Grading assignment for student: `grade`](#544-grading-assignment-for-student-grade)","lastModifiedDate":"2022-11-07"},{"lineNumber":600,"author":{"gitId":"Piyotato"},"content":"* [5.4.5 Removing assignment from student: `ungrade`](#545-removing-assignment-from-student-ungrade)","lastModifiedDate":"2022-11-07"},{"lineNumber":601,"author":{"gitId":"Piyotato"},"content":"* [5.4.6 Recording participation of student: `participate`](#546-recording-participation-of-student-participate)","lastModifiedDate":"2022-11-07"},{"lineNumber":602,"author":{"gitId":"Piyotato"},"content":"* [5.4.7 Removing participation of student: `unparticipate`](#547-removing-participation-of-student-unparticipate)","lastModifiedDate":"2022-11-07"},{"lineNumber":603,"author":{"gitId":"Piyotato"},"content":"* [5.4.8 Adding tag to student: `tag`](#548-adding-tag-to-student-tag)","lastModifiedDate":"2022-11-07"},{"lineNumber":604,"author":{"gitId":"Piyotato"},"content":"* [5.4.9 Removing tag from student: `untag`](#549-removing-tag-from-student-untag)","lastModifiedDate":"2022-11-07"},{"lineNumber":605,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":606,"author":{"gitId":"comicalromance"},"content":"### 5.4.1 Editing a student: `edit`","lastModifiedDate":"2022-11-06"},{"lineNumber":607,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":608,"author":{"gitId":"Piyotato"},"content":"**Function:** Edits an existing student in the StudMap.","lastModifiedDate":"2022-11-06"},{"lineNumber":609,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":610,"author":{"gitId":"Piyotato"},"content":"Need to update outdated student details? You can easily edit that field without deleting and re-adding the student.","lastModifiedDate":"2022-11-06"},{"lineNumber":611,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":612,"author":{"gitId":"Piyotato"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: \u003cb\u003eTip:\u003c/b\u003e","lastModifiedDate":"2022-11-06"},{"lineNumber":613,"author":{"gitId":"comicalromance"},"content":" You can use [`find`](#536-locating-students-by-name-find) to help locate the student you wish to edit first. \u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":614,"author":{"gitId":"Piyotato"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-11-06"},{"lineNumber":615,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":616,"author":{"gitId":"comicalromance"},"content":"**Format:** `edit INDEX/ALL [n/NAME] [p/PHONE] [e/EMAIL] [m/MODULE] [id/ID] [g/GITNAME] [h/TELEHANDLE] [t/TAG]…​`","lastModifiedDate":"2022-11-07"},{"lineNumber":617,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":618,"author":{"gitId":"Piyotato"},"content":"* `INDEX`: You can specify the index of the student you want to edit. The index refers to the index number shown in the","lastModifiedDate":"2022-11-07"},{"lineNumber":619,"author":{"gitId":"Piyotato"},"content":"  displayed student list.","lastModifiedDate":"2022-11-07"},{"lineNumber":620,"author":{"gitId":"comicalromance"},"content":"  The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-11-07"},{"lineNumber":621,"author":{"gitId":"comicalromance"},"content":"* `ALL`: You can edit all students currently displayed.","lastModifiedDate":"2022-11-07"},{"lineNumber":622,"author":{"gitId":"Piyotato"},"content":"* **At least one of the optional fields** must be provided.","lastModifiedDate":"2022-11-06"},{"lineNumber":623,"author":{"gitId":"Piyotato"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2022-11-06"},{"lineNumber":624,"author":{"gitId":"Piyotato"},"content":"* When editing tags, the existing tags of the student will be removed i.e. adding of tags is not cumulative.","lastModifiedDate":"2022-11-06"},{"lineNumber":625,"author":{"gitId":"Piyotato"},"content":"* You can remove all the student\u0027s tags by typing `t/` without specifying any tags after it.","lastModifiedDate":"2022-11-06"},{"lineNumber":626,"author":{"gitId":"Piyotato"},"content":"* You can remove the student\u0027s phone, email, GitName, TeleHandle by typing `p/`, `e/`, `g/`, `h/` respectively.","lastModifiedDate":"2022-11-06"},{"lineNumber":627,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":628,"author":{"gitId":"comicalromance"},"content":"**Examples:**","lastModifiedDate":"2022-11-06"},{"lineNumber":629,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":630,"author":{"gitId":"Piyotato"},"content":"* `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st student to be `91234567`","lastModifiedDate":"2022-11-06"},{"lineNumber":631,"author":{"gitId":"Piyotato"},"content":"  and `johndoe@example.com` respectively.","lastModifiedDate":"2022-11-06"},{"lineNumber":632,"author":{"gitId":"Piyotato"},"content":"* `edit 2 n/Betsy Crower t/` Edits the name of the 2nd student to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2022-11-06"},{"lineNumber":633,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":634,"author":{"gitId":"comicalromance"},"content":"### 5.4.2 Marking attendance of student: `mark`","lastModifiedDate":"2022-11-06"},{"lineNumber":635,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":636,"author":{"gitId":"Piyotato"},"content":"**Function:** Mark students as present or absent for a specified class.","lastModifiedDate":"2022-11-06"},{"lineNumber":637,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":638,"author":{"gitId":"comicalromance"},"content":"**Format:** `mark INDEX/ALL STATUS c/CLASS`","lastModifiedDate":"2022-11-07"},{"lineNumber":639,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":640,"author":{"gitId":"Piyotato"},"content":"* `INDEX`: You can specify the index of the student you want to mark attendance for. The index refers to the index","lastModifiedDate":"2022-11-07"},{"lineNumber":641,"author":{"gitId":"Piyotato"},"content":"  number shown in the displayed student list.","lastModifiedDate":"2022-11-07"},{"lineNumber":642,"author":{"gitId":"highorbit25"},"content":"  The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-11-06"},{"lineNumber":643,"author":{"gitId":"highorbit25"},"content":"* `ALL`: You can mark attendance for all students currently displayed.","lastModifiedDate":"2022-11-06"},{"lineNumber":644,"author":{"gitId":"comicalromance"},"content":"* Status accepts two values only: `present` and `absent`","lastModifiedDate":"2022-11-07"},{"lineNumber":645,"author":{"gitId":"highorbit25"},"content":"* Marking an **existing class** as either `present` or `absent` will **overwrite** the existing record","lastModifiedDate":"2022-11-06"},{"lineNumber":646,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":647,"author":{"gitId":"comicalromance"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":648,"author":{"gitId":"comicalromance"},"content":":exclamation: **Caution:** Class names should only consist of [alphanumerics](#alphanumeric), spaces, dashes and underscores! Using any other","lastModifiedDate":"2022-11-07"},{"lineNumber":649,"author":{"gitId":"comicalromance"},"content":"  character will lead to your class name being **rejected**","lastModifiedDate":"2022-11-07"},{"lineNumber":650,"author":{"gitId":"comicalromance"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":651,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":652,"author":{"gitId":"comicalromance"},"content":"**Examples:**","lastModifiedDate":"2022-11-06"},{"lineNumber":653,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":654,"author":{"gitId":"Piyotato"},"content":"* `mark all present c/T01` marks all students in the list as present for class `T01`.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":655,"author":{"gitId":"Piyotato"},"content":"  ![Mark Command](images/ui/ui-mark.png)","lastModifiedDate":"2022-11-07"},{"lineNumber":656,"author":{"gitId":"Piyotato"},"content":"  \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":657,"author":{"gitId":"Piyotato"},"content":"* `mark 1 present c/T03` marks the first student as present for class `T03`.","lastModifiedDate":"2022-11-07"},{"lineNumber":658,"author":{"gitId":"Piyotato"},"content":"* `mark all absent c/T04` marks all students in the list as absent for class `T04`.","lastModifiedDate":"2022-11-07"},{"lineNumber":659,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":660,"author":{"gitId":"Piyotato"},"content":"**See Also:**","lastModifiedDate":"2022-11-06"},{"lineNumber":661,"author":{"gitId":"Piyotato"},"content":"[`unmark`](#543-unmarking-attendance-of-student-unmark)","lastModifiedDate":"2022-11-06"},{"lineNumber":662,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":663,"author":{"gitId":"comicalromance"},"content":"### 5.4.3 Unmarking attendance of student: `unmark`","lastModifiedDate":"2022-11-06"},{"lineNumber":664,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":665,"author":{"gitId":"Piyotato"},"content":"**Function:** Removes the attendance record of a specific class from students.","lastModifiedDate":"2022-11-06"},{"lineNumber":666,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":667,"author":{"gitId":"comicalromance"},"content":"**Format:** `unmark INDEX/ALL c/CLASS`","lastModifiedDate":"2022-11-06"},{"lineNumber":668,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":669,"author":{"gitId":"Piyotato"},"content":"* `INDEX`: You can specify the index of the student you want to remove attendance record for. The index refers to the","lastModifiedDate":"2022-11-06"},{"lineNumber":670,"author":{"gitId":"Piyotato"},"content":"  index number shown in the displayed student list.","lastModifiedDate":"2022-11-06"},{"lineNumber":671,"author":{"gitId":"highorbit25"},"content":"  The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-11-06"},{"lineNumber":672,"author":{"gitId":"highorbit25"},"content":"* `ALL`: You can remove attendance record for all students currently displayed.","lastModifiedDate":"2022-11-06"},{"lineNumber":673,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":674,"author":{"gitId":"comicalromance"},"content":"* StudMap allows for attendances to be removed even if the student never had any record for that class","lastModifiedDate":"2022-10-28"},{"lineNumber":675,"author":{"gitId":"comicalromance"},"content":"  (i.e. StudMap will inform you that the student has not been modified)","lastModifiedDate":"2022-11-07"},{"lineNumber":676,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":677,"author":{"gitId":"comicalromance"},"content":"**Examples:**","lastModifiedDate":"2022-11-06"},{"lineNumber":678,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":679,"author":{"gitId":"Piyotato"},"content":"* `unmark all c/wrongclass` removes the attendance record for class `wrongclass` from all students in the list who have","lastModifiedDate":"2022-11-07"},{"lineNumber":680,"author":{"gitId":"Piyotato"},"content":"  such a record. In this case, all 7 students have the record.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":681,"author":{"gitId":"Piyotato"},"content":"  ![Unmark Command](images/ui/ui-unmark.png)","lastModifiedDate":"2022-11-07"},{"lineNumber":682,"author":{"gitId":"Piyotato"},"content":"  \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":683,"author":{"gitId":"Piyotato"},"content":"* `unmark 1 c/T01` removes the attendance record for class `T01` from the first student.","lastModifiedDate":"2022-11-07"},{"lineNumber":684,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":685,"author":{"gitId":"Piyotato"},"content":"**See Also:**","lastModifiedDate":"2022-11-06"},{"lineNumber":686,"author":{"gitId":"Piyotato"},"content":"[`mark`](#542-marking-attendance-of-student-mark)","lastModifiedDate":"2022-11-06"},{"lineNumber":687,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":688,"author":{"gitId":"comicalromance"},"content":"### 5.4.4 Grading assignment for student: `grade`","lastModifiedDate":"2022-11-06"},{"lineNumber":689,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":690,"author":{"gitId":"Piyotato"},"content":"**Function:** Changes the grading status for a specific assignment for students.","lastModifiedDate":"2022-11-06"},{"lineNumber":691,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":692,"author":{"gitId":"Piyotato"},"content":"You can change the grading status for the assignments using this command. If the record of the assignment does not yet","lastModifiedDate":"2022-11-06"},{"lineNumber":693,"author":{"gitId":"Piyotato"},"content":"exist for the specified student, a new entry for the assignment will be automatically created for the student. This can","lastModifiedDate":"2022-11-06"},{"lineNumber":694,"author":{"gitId":"Piyotato"},"content":"help you to better keep track of assignments that you have graded or received.","lastModifiedDate":"2022-11-06"},{"lineNumber":695,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":696,"author":{"gitId":"lpohsien"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2022-11-01"},{"lineNumber":697,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":698,"author":{"gitId":"comicalromance"},"content":"**:information_source: Note:** The name of assignments should contain only numbers and letters (all upper case). If","lastModifiedDate":"2022-11-07"},{"lineNumber":699,"author":{"gitId":"Piyotato"},"content":"you include any lower case in the assignment name, it will be automatically converted to upper case.","lastModifiedDate":"2022-11-06"},{"lineNumber":700,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":701,"author":{"gitId":"lpohsien"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-11-01"},{"lineNumber":702,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":703,"author":{"gitId":"comicalromance"},"content":"**Format:** `grade INDEX/ALL STATUS a/ASSIGNMENT`","lastModifiedDate":"2022-11-06"},{"lineNumber":704,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":705,"author":{"gitId":"Piyotato"},"content":"- `INDEX`: You can specify the index of the student you want to change the assignment grading status for. The index **","lastModifiedDate":"2022-11-06"},{"lineNumber":706,"author":{"gitId":"Piyotato"},"content":"  must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-11-06"},{"lineNumber":707,"author":{"gitId":"highorbit25"},"content":"- `ALL`: You can modify the assignment grading status for every student in the currently displayed list.","lastModifiedDate":"2022-11-06"},{"lineNumber":708,"author":{"gitId":"lpohsien"},"content":"- `STATUS`: You can specify the grading status for the assignment. Currently, following three statuses are supported:","lastModifiedDate":"2022-11-01"},{"lineNumber":709,"author":{"gitId":"lpohsien"},"content":"    - `new`: The assignment has just been assigned to the student and hence it has not been submitted nor marked yet.","lastModifiedDate":"2022-11-01"},{"lineNumber":710,"author":{"gitId":"highorbit25"},"content":"    - `received`: You have received the assignment submission from the student, but you have not graded it yet.","lastModifiedDate":"2022-11-06"},{"lineNumber":711,"author":{"gitId":"lpohsien"},"content":"    - `marked`: You have received and graded the assignment.","lastModifiedDate":"2022-11-01"},{"lineNumber":712,"author":{"gitId":"lpohsien"},"content":"- `ASSIGNEMNT`: You can specify the assignment which you want to change the grading status for.","lastModifiedDate":"2022-11-01"},{"lineNumber":713,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":714,"author":{"gitId":"comicalromance"},"content":"**Examples:**","lastModifiedDate":"2022-11-06"},{"lineNumber":715,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":716,"author":{"gitId":"Piyotato"},"content":"* `grade 1 marked a/A02` changes the assignment grading status for assignment `A02` of the first student in the list","lastModifiedDate":"2022-11-07"},{"lineNumber":717,"author":{"gitId":"Piyotato"},"content":"  to `marked`. Add an entry of `A02` into the first student\u0027s record if it does not exist yet. In this case, it already","lastModifiedDate":"2022-11-07"},{"lineNumber":718,"author":{"gitId":"Piyotato"},"content":"  exists.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":719,"author":{"gitId":"Piyotato"},"content":"  ![Grade Command](images/ui/ui-grade.png)","lastModifiedDate":"2022-11-07"},{"lineNumber":720,"author":{"gitId":"Piyotato"},"content":"  \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":721,"author":{"gitId":"Piyotato"},"content":"* `grade all marked a/A02` changes the assignment grading status for assignment `A02` of every student in the list","lastModifiedDate":"2022-11-06"},{"lineNumber":722,"author":{"gitId":"Piyotato"},"content":"  to `marked`.","lastModifiedDate":"2022-11-06"},{"lineNumber":723,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":724,"author":{"gitId":"Piyotato"},"content":"**See Also:**","lastModifiedDate":"2022-11-06"},{"lineNumber":725,"author":{"gitId":"Piyotato"},"content":"[`ungrade`](#545-removing-assignment-from-student-ungrade)","lastModifiedDate":"2022-11-06"},{"lineNumber":726,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":727,"author":{"gitId":"comicalromance"},"content":"### 5.4.5 Removing assignment from student: `ungrade`","lastModifiedDate":"2022-11-06"},{"lineNumber":728,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":729,"author":{"gitId":"Piyotato"},"content":"**Function:** Remove the specified assignment from the student\u0027s record.","lastModifiedDate":"2022-11-06"},{"lineNumber":730,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":731,"author":{"gitId":"comicalromance"},"content":"**Format:** `ungrade INDEX/ALL a/ASSIGNMENT`","lastModifiedDate":"2022-11-06"},{"lineNumber":732,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":733,"author":{"gitId":"Piyotato"},"content":"- `INDEX`: You can specify index of the student remove the assignment from. The index **must be a positive integer** 1,","lastModifiedDate":"2022-11-06"},{"lineNumber":734,"author":{"gitId":"Piyotato"},"content":"  2, 3, …​","lastModifiedDate":"2022-11-06"},{"lineNumber":735,"author":{"gitId":"highorbit25"},"content":"- `ALL`: You can remove the assignment for all students in the currently displayed list.","lastModifiedDate":"2022-11-06"},{"lineNumber":736,"author":{"gitId":"lpohsien"},"content":"- `ASSIGNMENT`: You can specify the record of the assignment to be removed.","lastModifiedDate":"2022-11-01"},{"lineNumber":737,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":738,"author":{"gitId":"comicalromance"},"content":"**Examples:**","lastModifiedDate":"2022-11-06"},{"lineNumber":739,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":740,"author":{"gitId":"Piyotato"},"content":"* `ungrade all a/A03` removes assignment `A03` from all students in the currently displayed list, if they have it. In","lastModifiedDate":"2022-11-07"},{"lineNumber":741,"author":{"gitId":"Piyotato"},"content":"  this case, only 2 students have such a record.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":742,"author":{"gitId":"Piyotato"},"content":"  ![Ungrade Command](images/ui/ui-ungrade.png)","lastModifiedDate":"2022-11-07"},{"lineNumber":743,"author":{"gitId":"Piyotato"},"content":"  \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":744,"author":{"gitId":"highorbit25"},"content":"* `ungrade 1 a/A01` removes assignment `A01` from the first student.","lastModifiedDate":"2022-11-06"},{"lineNumber":745,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":746,"author":{"gitId":"Piyotato"},"content":"**See Also:**","lastModifiedDate":"2022-11-06"},{"lineNumber":747,"author":{"gitId":"Piyotato"},"content":"[`grade`](#544-grading-assignment-for-student-grade)","lastModifiedDate":"2022-11-06"},{"lineNumber":748,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":749,"author":{"gitId":"comicalromance"},"content":"### 5.4.6 Recording participation of student: `participate`","lastModifiedDate":"2022-11-06"},{"lineNumber":750,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":751,"author":{"gitId":"Piyotato"},"content":"**Function:** Records the participation of students in a given participation component.","lastModifiedDate":"2022-11-06"},{"lineNumber":752,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":753,"author":{"gitId":"comicalromance"},"content":"**Format:** `participate INDEX/ALL STATUS p/COMPONENT`","lastModifiedDate":"2022-11-06"},{"lineNumber":754,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":755,"author":{"gitId":"Piyotato"},"content":"- `INDEX` could be specified or use `ALL` to record the participation component for all students in the list. The","lastModifiedDate":"2022-11-06"},{"lineNumber":756,"author":{"gitId":"Piyotato"},"content":"  index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-11-06"},{"lineNumber":757,"author":{"gitId":"highorbit25"},"content":"- `ALL`: You can record the participation component for all students in the currently displayed list.","lastModifiedDate":"2022-11-06"},{"lineNumber":758,"author":{"gitId":"highorbit25"},"content":"- `STATUS` is either `yes` for participated or `no` for not participated","lastModifiedDate":"2022-10-28"},{"lineNumber":759,"author":{"gitId":"highorbit25"},"content":"- `COMPONENT` is the participation component","lastModifiedDate":"2022-10-28"},{"lineNumber":760,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":761,"author":{"gitId":"comicalromance"},"content":"**Examples:**","lastModifiedDate":"2022-11-06"},{"lineNumber":762,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":763,"author":{"gitId":"Piyotato"},"content":"* `participate 2 yes p/T05-Sharing` records the second student in the list as having **participated** for participation","lastModifiedDate":"2022-11-07"},{"lineNumber":764,"author":{"gitId":"Piyotato"},"content":"  component `T05-Sharing`. If the student does not have a record for the component yet, it is added. In this case, it","lastModifiedDate":"2022-11-07"},{"lineNumber":765,"author":{"gitId":"Piyotato"},"content":"  already exists.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":766,"author":{"gitId":"Piyotato"},"content":"  ![Participate Command](images/ui/ui-participate.png)","lastModifiedDate":"2022-11-07"},{"lineNumber":767,"author":{"gitId":"Piyotato"},"content":"  \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":768,"author":{"gitId":"Piyotato"},"content":"* `participate 1 yes p/P01` records the first student in the list as having **participated** for participation","lastModifiedDate":"2022-11-07"},{"lineNumber":769,"author":{"gitId":"Piyotato"},"content":"  component `P01`.","lastModifiedDate":"2022-11-07"},{"lineNumber":770,"author":{"gitId":"Piyotato"},"content":"* `participate 1 no p/P02` records the second student in the list as having **not participated** for participation","lastModifiedDate":"2022-11-07"},{"lineNumber":771,"author":{"gitId":"Piyotato"},"content":"  component `P01`.","lastModifiedDate":"2022-11-07"},{"lineNumber":772,"author":{"gitId":"Piyotato"},"content":"* `participate all yes p/P03` records all students in the list as having **participated** for participation","lastModifiedDate":"2022-11-07"},{"lineNumber":773,"author":{"gitId":"Piyotato"},"content":"  component `P03`.","lastModifiedDate":"2022-11-07"},{"lineNumber":774,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":775,"author":{"gitId":"Piyotato"},"content":"**See Also:**","lastModifiedDate":"2022-11-06"},{"lineNumber":776,"author":{"gitId":"Piyotato"},"content":"[`unparticipate`](#547-removing-participation-of-student-unparticipate)","lastModifiedDate":"2022-11-06"},{"lineNumber":777,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":778,"author":{"gitId":"comicalromance"},"content":"### 5.4.7 Removing participation of student: `unparticipate`","lastModifiedDate":"2022-11-06"},{"lineNumber":779,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":780,"author":{"gitId":"Piyotato"},"content":"**Function:** Removes the record of participation for students in the given participation component.","lastModifiedDate":"2022-11-06"},{"lineNumber":781,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":782,"author":{"gitId":"comicalromance"},"content":"**Format:** `unparticipate INDEX/ALL p/COMPONENT`","lastModifiedDate":"2022-11-06"},{"lineNumber":783,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":784,"author":{"gitId":"Piyotato"},"content":"- `INDEX` could be specified or use `ALL` to remove specified participation component for all students in the list. The","lastModifiedDate":"2022-11-06"},{"lineNumber":785,"author":{"gitId":"Piyotato"},"content":"  index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-11-06"},{"lineNumber":786,"author":{"gitId":"highorbit25"},"content":"- `ALL`: You can remove the participation component for all students in the currently displayed list.","lastModifiedDate":"2022-11-06"},{"lineNumber":787,"author":{"gitId":"highorbit25"},"content":"- `COMPONENT` is the participation component","lastModifiedDate":"2022-10-28"},{"lineNumber":788,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":789,"author":{"gitId":"comicalromance"},"content":"**Examples:**","lastModifiedDate":"2022-11-06"},{"lineNumber":790,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":791,"author":{"gitId":"Piyotato"},"content":"* `unparticipate all p/wrongcomponent` removes participation component `wrongcomponent` from all students in the","lastModifiedDate":"2022-11-07"},{"lineNumber":792,"author":{"gitId":"Piyotato"},"content":"  currently displayed list. In this case, 5 students have such a record.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":793,"author":{"gitId":"Piyotato"},"content":"  ![Unparticipate Command](images/ui/ui-unparticipate.png)","lastModifiedDate":"2022-11-07"},{"lineNumber":794,"author":{"gitId":"Piyotato"},"content":"  \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":795,"author":{"gitId":"Piyotato"},"content":"* `unparticipate 1 p/P01` removes participation component `P01` from the first student in the currently displayed list.","lastModifiedDate":"2022-11-07"},{"lineNumber":796,"author":{"gitId":"Piyotato"},"content":"* `unparticipate all p/P03` removes participation component `P03` from all students in the currently displayed list.","lastModifiedDate":"2022-11-07"},{"lineNumber":797,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":798,"author":{"gitId":"Piyotato"},"content":"**See Also:**","lastModifiedDate":"2022-11-06"},{"lineNumber":799,"author":{"gitId":"Piyotato"},"content":"[`participate`](#546-recording-participation-of-student-participate)","lastModifiedDate":"2022-11-06"},{"lineNumber":800,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":801,"author":{"gitId":"comicalromance"},"content":"### 5.4.8 Adding tag to student: `tag`","lastModifiedDate":"2022-11-06"},{"lineNumber":802,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":803,"author":{"gitId":"Piyotato"},"content":"**Function:** Adds one or more text labels to students.","lastModifiedDate":"2022-11-06"},{"lineNumber":804,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":805,"author":{"gitId":"Piyotato"},"content":"With this feature, you can keep small tidbits about your students on their entry.","lastModifiedDate":"2022-11-06"},{"lineNumber":806,"author":{"gitId":"Piyotato"},"content":"This can help you to better identify and keep track of them.","lastModifiedDate":"2022-11-06"},{"lineNumber":807,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":808,"author":{"gitId":"Piyotato"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2022-11-06"},{"lineNumber":809,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":810,"author":{"gitId":"Piyotato"},"content":"**:information_source: Note 1:** The tag should be short and limited to only letters and/or numbers (i.e. no spaces)","lastModifiedDate":"2022-11-06"},{"lineNumber":811,"author":{"gitId":"Piyotato"},"content":". \u003cbr\u003e","lastModifiedDate":"2022-11-06"},{"lineNumber":812,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":813,"author":{"gitId":"Piyotato"},"content":"**:information_source: Note 2:** The tags are case-sensitive. For example, `goodStudent` and `goodstudent` will","lastModifiedDate":"2022-11-06"},{"lineNumber":814,"author":{"gitId":"Piyotato"},"content":"be recognised as different labels.","lastModifiedDate":"2022-11-06"},{"lineNumber":815,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":816,"author":{"gitId":"Piyotato"},"content":"**:information_source: Note 3:** The tagging command is cumulative, that is, new tags are simply added to the student(s)","lastModifiedDate":"2022-11-06"},{"lineNumber":817,"author":{"gitId":"Piyotato"},"content":"and","lastModifiedDate":"2022-11-06"},{"lineNumber":818,"author":{"gitId":"Piyotato"},"content":"do not replace their previous tags. To remove tags from the student(s),","lastModifiedDate":"2022-11-06"},{"lineNumber":819,"author":{"gitId":"Piyotato"},"content":"see [untag](#549-removing-tag-from-student-untag)","lastModifiedDate":"2022-11-06"},{"lineNumber":820,"author":{"gitId":"Piyotato"},"content":"below. \u003cbr\u003e","lastModifiedDate":"2022-11-06"},{"lineNumber":821,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":822,"author":{"gitId":"comicalromance"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-11-03"},{"lineNumber":823,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":824,"author":{"gitId":"comicalromance"},"content":"**Format:** `tag INDEX/ALL t/TAG [t/OTHER]`","lastModifiedDate":"2022-11-06"},{"lineNumber":825,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":826,"author":{"gitId":"Piyotato"},"content":"- `INDEX`: You can specify the index of the student you want to add the tag to. The index refers to the index number","lastModifiedDate":"2022-11-06"},{"lineNumber":827,"author":{"gitId":"Piyotato"},"content":"  shown in the displayed student list.","lastModifiedDate":"2022-11-06"},{"lineNumber":828,"author":{"gitId":"Piyotato"},"content":"  The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-11-06"},{"lineNumber":829,"author":{"gitId":"Piyotato"},"content":"- `ALL`: You can add tag(s) to all students currently displayed.","lastModifiedDate":"2022-11-06"},{"lineNumber":830,"author":{"gitId":"Piyotato"},"content":"- `TAG`: You can specify the label to be added to the student. At least one label should be specified when you use this","lastModifiedDate":"2022-11-06"},{"lineNumber":831,"author":{"gitId":"Piyotato"},"content":"  command","lastModifiedDate":"2022-11-06"},{"lineNumber":832,"author":{"gitId":"Piyotato"},"content":"- `OTHER`: You can also specify other tags that you might also want to add to your student(s).","lastModifiedDate":"2022-11-06"},{"lineNumber":833,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":834,"author":{"gitId":"comicalromance"},"content":"**Examples:**","lastModifiedDate":"2022-11-06"},{"lineNumber":835,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":836,"author":{"gitId":"Piyotato"},"content":"* `tag 1 t/goodStudent` adds the tag of \"goodStudent\" to the first student in the current list.","lastModifiedDate":"2022-11-06"},{"lineNumber":837,"author":{"gitId":"Piyotato"},"content":"* `tag all t/goodstudent t/potentialTA` add both `goodStudent` and `potentialTA` tag to the all student in the current","lastModifiedDate":"2022-11-06"},{"lineNumber":838,"author":{"gitId":"Piyotato"},"content":"  list.","lastModifiedDate":"2022-11-06"},{"lineNumber":839,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":840,"author":{"gitId":"Piyotato"},"content":"**See Also:**","lastModifiedDate":"2022-11-06"},{"lineNumber":841,"author":{"gitId":"Piyotato"},"content":"[`untag`](#549-removing-tag-from-student-untag)","lastModifiedDate":"2022-11-06"},{"lineNumber":842,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":843,"author":{"gitId":"comicalromance"},"content":"### 5.4.9 Removing tag from student: `untag`","lastModifiedDate":"2022-11-06"},{"lineNumber":844,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":845,"author":{"gitId":"Piyotato"},"content":"**Function:** Removes the specified tag(s) from the student(s).","lastModifiedDate":"2022-11-06"},{"lineNumber":846,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":847,"author":{"gitId":"Piyotato"},"content":"Accidentally tagged a student wrongly, or simply don\u0027t want it there anymore? This is the command for the job.","lastModifiedDate":"2022-11-06"},{"lineNumber":848,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":849,"author":{"gitId":"comicalromance"},"content":"**Format:** `untag INDEX/ALL t/TAG [t/OTHER]`","lastModifiedDate":"2022-11-06"},{"lineNumber":850,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":851,"author":{"gitId":"Piyotato"},"content":"- `INDEX`: You can specify index of the student to remove the tag from. The index refers to the index number shown in","lastModifiedDate":"2022-11-06"},{"lineNumber":852,"author":{"gitId":"Piyotato"},"content":"  the displayed student list.","lastModifiedDate":"2022-11-06"},{"lineNumber":853,"author":{"gitId":"Piyotato"},"content":"  The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-11-06"},{"lineNumber":854,"author":{"gitId":"Piyotato"},"content":"- `ALL`: You can remove the tag for all students in the currently displayed list.","lastModifiedDate":"2022-11-06"},{"lineNumber":855,"author":{"gitId":"Piyotato"},"content":"- `TAG`: You can specify the `TAG` to remove.There should be at least one label to be removed when you use this command.","lastModifiedDate":"2022-11-06"},{"lineNumber":856,"author":{"gitId":"comicalromance"},"content":"  For the restrictions on the format of a `TAG`, see Note 1 for [Add tag to student](#548-adding-tag-to-student-tag).","lastModifiedDate":"2022-11-06"},{"lineNumber":857,"author":{"gitId":"Piyotato"},"content":"- `OTHER`: You can also include multiple tags to be removed from your student(s).","lastModifiedDate":"2022-11-06"},{"lineNumber":858,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":859,"author":{"gitId":"comicalromance"},"content":"**Examples:**","lastModifiedDate":"2022-11-06"},{"lineNumber":860,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":861,"author":{"gitId":"Piyotato"},"content":"* `untag 1 t/needMoreTime` removes the tag of `needMoreTime `from the first student in the current list.","lastModifiedDate":"2022-11-06"},{"lineNumber":862,"author":{"gitId":"Piyotato"},"content":"* `untag all t/needMoreTime t/late` removes the tag of `needMoreTime` and `late` from all students in the current list.","lastModifiedDate":"2022-11-06"},{"lineNumber":863,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":864,"author":{"gitId":"Piyotato"},"content":"**See Also:**","lastModifiedDate":"2022-11-06"},{"lineNumber":865,"author":{"gitId":"Piyotato"},"content":"[`tag`](#548-adding-tag-to-student-tag)","lastModifiedDate":"2022-11-06"},{"lineNumber":866,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":867,"author":{"gitId":"comicalromance"},"content":"## 5.5 Miscellaneous","lastModifiedDate":"2022-11-06"},{"lineNumber":868,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":869,"author":{"gitId":"Piyotato"},"content":"* [5.5.1 Exiting the program: `exit`](#551-exiting-the-program-exit)","lastModifiedDate":"2022-11-07"},{"lineNumber":870,"author":{"gitId":"Piyotato"},"content":"* [5.5.2 Saving the data](#552-saving-the-data)","lastModifiedDate":"2022-11-07"},{"lineNumber":871,"author":{"gitId":"Piyotato"},"content":"* [5.5.3 Backing up data](#553-backing-up-data)","lastModifiedDate":"2022-11-07"},{"lineNumber":872,"author":{"gitId":"Piyotato"},"content":"* [5.5.4 Editing the data file](#554-editing-the-data-file)","lastModifiedDate":"2022-11-07"},{"lineNumber":873,"author":{"gitId":"Piyotato"},"content":"* [5.5.5 Viewing help: `help`](#555-viewing-help-help)","lastModifiedDate":"2022-11-07"},{"lineNumber":874,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":875,"author":{"gitId":"comicalromance"},"content":"### 5.5.1 Exiting the program: `exit`","lastModifiedDate":"2022-11-06"},{"lineNumber":876,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":877,"author":{"gitId":"Piyotato"},"content":"**Function:** Exits the program.","lastModifiedDate":"2022-11-06"},{"lineNumber":878,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":879,"author":{"gitId":"comicalromance"},"content":"**Format:** `exit`","lastModifiedDate":"2022-11-06"},{"lineNumber":880,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":881,"author":{"gitId":"comicalromance"},"content":"### 5.5.2 Saving the data","lastModifiedDate":"2022-11-06"},{"lineNumber":882,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":883,"author":{"gitId":"highorbit25"},"content":"StudMap data are saved in the hard disk automatically after any command that changes the data. There is no need to save","lastModifiedDate":"2022-11-06"},{"lineNumber":884,"author":{"gitId":"highorbit25"},"content":"manually.","lastModifiedDate":"2022-11-06"},{"lineNumber":885,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":886,"author":{"gitId":"Piyotato"},"content":"### 5.5.3 Backing up data","lastModifiedDate":"2022-11-06"},{"lineNumber":887,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":888,"author":{"gitId":"Piyotato"},"content":"StudMap data are saved as a [JSON file](#json-file) `[JAR file location]/data/studmap.json`. You can make a copy of this","lastModifiedDate":"2022-11-07"},{"lineNumber":889,"author":{"gitId":"Piyotato"},"content":"file if you","lastModifiedDate":"2022-11-07"},{"lineNumber":890,"author":{"gitId":"Piyotato"},"content":"want to back up your data.","lastModifiedDate":"2022-11-06"},{"lineNumber":891,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":892,"author":{"gitId":"Piyotato"},"content":"### 5.5.4 Editing the data file","lastModifiedDate":"2022-11-06"},{"lineNumber":893,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":894,"author":{"gitId":"Piyotato"},"content":"As mentioned above, your StudMap data are saved as a JSON file `[JAR file location]/data/studmap.json`. Advanced users","lastModifiedDate":"2022-11-06"},{"lineNumber":895,"author":{"gitId":"Piyotato"},"content":"are welcome to update data directly by editing that data file.","lastModifiedDate":"2022-11-06"},{"lineNumber":896,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":897,"author":{"gitId":"highorbit25"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: \u003cb\u003eCaution:\u003c/b\u003e","lastModifiedDate":"2022-11-06"},{"lineNumber":898,"author":{"gitId":"highorbit25"},"content":"If your changes to the data file makes its format invalid, StudMap will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2022-11-06"},{"lineNumber":899,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-11-06"},{"lineNumber":900,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":901,"author":{"gitId":"Piyotato"},"content":"### 5.5.5 Viewing help: `help`","lastModifiedDate":"2022-11-06"},{"lineNumber":902,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":903,"author":{"gitId":"Piyotato"},"content":"**Function:** Shows a message linking to the online User Guide.","lastModifiedDate":"2022-11-06"},{"lineNumber":904,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":905,"author":{"gitId":"Piyotato"},"content":"Confused about the usage of a certain feature? Don\u0027t worry, self-help is available on the comprehensive online User","lastModifiedDate":"2022-11-06"},{"lineNumber":906,"author":{"gitId":"Piyotato"},"content":"Guide.","lastModifiedDate":"2022-11-06"},{"lineNumber":907,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":908,"author":{"gitId":"Piyotato"},"content":"![Help Message](images/misc/helpMessage.png)","lastModifiedDate":"2022-11-07"},{"lineNumber":909,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":910,"author":{"gitId":"comicalromance"},"content":"**Format:** `help`","lastModifiedDate":"2022-11-06"},{"lineNumber":911,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":912,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":913,"author":{"gitId":"Piyotato"},"content":"---","lastModifiedDate":"2022-11-06"},{"lineNumber":914,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":915,"author":{"gitId":"comicalromance"},"content":"# 6. Frequently Asked Questions","lastModifiedDate":"2022-11-06"},{"lineNumber":916,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":917,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":918,"author":{"gitId":"Piyotato"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains","lastModifiedDate":"2022-11-06"},{"lineNumber":919,"author":{"gitId":"Piyotato"},"content":"the data of your previous StudMap home folder. See how to back up your data [here](#553-backing-up-data).","lastModifiedDate":"2022-11-06"},{"lineNumber":920,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":921,"author":{"gitId":"Piyotato"},"content":"**Q**: How can I transfer my data from an existing spreadsheet to StudMap?\u003cbr\u003e","lastModifiedDate":"2022-11-06"},{"lineNumber":922,"author":{"gitId":"Piyotato"},"content":"**A**: You can use the [`import`](#534-importing-students-from-csv-file-import) command.","lastModifiedDate":"2022-11-06"},{"lineNumber":923,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":924,"author":{"gitId":"Piyotato"},"content":"---","lastModifiedDate":"2022-11-06"},{"lineNumber":925,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":926,"author":{"gitId":"comicalromance"},"content":"# 7. Command Summary","lastModifiedDate":"2022-11-06"},{"lineNumber":927,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":928,"author":{"gitId":"Piyotato"},"content":"| Action                                                                           | Format, Examples                                                                                                                                                                                             |","lastModifiedDate":"2022-11-06"},{"lineNumber":929,"author":{"gitId":"comicalromance"},"content":"|----------------------------------------------------------------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-11-07"},{"lineNumber":930,"author":{"gitId":"comicalromance"},"content":"| **[Add](#531-adding-a-student-add)**                                             | `add n/NAME m/MODULE id/ID [p/PHONE] [e/EMAIL] [g/GITNAME] [h/TELEHANDLE] [t/TAG]…​` \u003cbr\u003e e.g., `add n/John Doe p/98765432 e/johnd@example.com m/CS2103T id/E1234567 g/user1 h/@user1 t/friends t/owesMoney` |","lastModifiedDate":"2022-11-07"},{"lineNumber":931,"author":{"gitId":"comicalromance"},"content":"| **[Delete](#532-deleting-a-student-delete)**                                     | `delete INDEX/ALL`\u003cbr\u003e e.g., `delete 3`                                                                                                                                                                      |","lastModifiedDate":"2022-11-07"},{"lineNumber":932,"author":{"gitId":"comicalromance"},"content":"| **[Clear](#533-clearing-all-entries-clear)**                                     | `clear`                                                                                                                                                                                                      |","lastModifiedDate":"2022-11-06"},{"lineNumber":933,"author":{"gitId":"comicalromance"},"content":"| **[Import CSV](#534-importing-students-from-csv-file-import)**                   | `import`                                                                                                                                                                                                     |","lastModifiedDate":"2022-11-06"},{"lineNumber":934,"author":{"gitId":"comicalromance"},"content":"| **[List](#535-listing-all-students-list)**                                       | `list`                                                                                                                                                                                                       |","lastModifiedDate":"2022-11-06"},{"lineNumber":935,"author":{"gitId":"comicalromance"},"content":"| **[Find](#536-locating-students-by-name-find)**                                  | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find James Jake`                                                                                                                                                   |","lastModifiedDate":"2022-11-06"},{"lineNumber":936,"author":{"gitId":"comicalromance"},"content":"| **[Sort](#537-sorting-the-students-sort)**                                       | `sort ORDER a/ATTRIBUTE` \u003cbr\u003e e.g., `sort asc a/name`                                                                                                                                                        |","lastModifiedDate":"2022-11-06"},{"lineNumber":937,"author":{"gitId":"comicalromance"},"content":"| **[Filter](#538-filtering-the-students-filter)**                                 | `filter`                                                                                                                                                                                                     |","lastModifiedDate":"2022-11-06"},{"lineNumber":938,"author":{"gitId":"comicalromance"},"content":"| **[Edit](#541-editing-a-student-edit)**                                          | `edit INDEX/ALL [n/NAME] [p/PHONE] [e/EMAIL] [m/MODULE] [id/ID] [g/GITNAME] [h/TELEHANDLE] [t/TAG]…​` \u003cbr\u003e e.g.,`edit 1 p/91234567 e/johndoe@example.com`                                                    |","lastModifiedDate":"2022-11-07"},{"lineNumber":939,"author":{"gitId":"comicalromance"},"content":"| **[Mark attendance](#542-marking-attendance-of-student-mark)**                   | `mark INDEX/ALL STATUS c/CLASS` \u003cbr\u003e e.g., `mark 1 present c/T01`                                                                                                                                            |","lastModifiedDate":"2022-11-07"},{"lineNumber":940,"author":{"gitId":"comicalromance"},"content":"| **[Unmark attendance](#543-unmarking-attendance-of-student-unmark)**             | `unmark INDEX/ALL c/CLASS` \u003cbr\u003e e.g., `mark 1 c/T01`                                                                                                                                                         |","lastModifiedDate":"2022-11-06"},{"lineNumber":941,"author":{"gitId":"comicalromance"},"content":"| **[Grade assignment](#544-grading-assignment-for-student-grade)**                | `grade INDEX/ALL STATUS a/ASSIGNMENT` \u003cbr\u003e e.g., `grade 1 new a/A01`                                                                                                                                         |","lastModifiedDate":"2022-11-06"},{"lineNumber":942,"author":{"gitId":"comicalromance"},"content":"| **[Remove assignment](#545-removing-assignment-from-student-ungrade)**           | `ungrade INDEX/ALL a/ASSIGNMENT` \u003cbr\u003e e.g., `ungrade 1 a/A01`                                                                                                                                                |","lastModifiedDate":"2022-11-06"},{"lineNumber":943,"author":{"gitId":"comicalromance"},"content":"| **[Record participation](#546-recording-participation-of-student-participate)**  | `participate INDEX/ALL STATUS p/COMPONENT` \u003cbr\u003e e.g., `participate 2 yes p/C01`                                                                                                                              |","lastModifiedDate":"2022-11-06"},{"lineNumber":944,"author":{"gitId":"comicalromance"},"content":"| **[Remove participation](#547-removing-participation-of-student-unparticipate)** | `unparticipate INDEX/ALL p/COMPONENT` \u003cbr\u003e e.g., `unparticipate 2 p/C01`                                                                                                                                     |","lastModifiedDate":"2022-11-06"},{"lineNumber":945,"author":{"gitId":"comicalromance"},"content":"| **[Add tag](#548-adding-tag-to-student-tag)**                                    | `tag INDEX/ALL t/TAG [t/OTHER]` \u003cbr\u003e e.g., `tag 2 t/goodStudent`                                                                                                                                             |","lastModifiedDate":"2022-11-06"},{"lineNumber":946,"author":{"gitId":"comicalromance"},"content":"| **[Remove tag](#549-removing-tag-from-student-untag)**                           | `untag INDEX/ALL t/TAG [t/OTHER]` \u003cbr\u003e e.g., `untag 2 t/goodStudent`                                                                                                                                         |","lastModifiedDate":"2022-11-06"},{"lineNumber":947,"author":{"gitId":"comicalromance"},"content":"| **[Exit](#551-exiting-the-program-exit)**                                        | `exit`                                                                                                                                                                                                       |","lastModifiedDate":"2022-11-06"},{"lineNumber":948,"author":{"gitId":"Piyotato"},"content":"| **[Help](#555-viewing-help-help)**                                               | `help`                                                                                                                                                                                                       |","lastModifiedDate":"2022-11-06"},{"lineNumber":949,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":950,"author":{"gitId":"Piyotato"},"content":"---","lastModifiedDate":"2022-11-06"},{"lineNumber":951,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":952,"author":{"gitId":"comicalromance"},"content":"# 8. Glossary","lastModifiedDate":"2022-11-06"},{"lineNumber":953,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":954,"author":{"gitId":"Piyotato"},"content":"### Command","lastModifiedDate":"2022-11-07"},{"lineNumber":955,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":956,"author":{"gitId":"Piyotato"},"content":"A command is an instruction for StudMap, and the main way to interact with it! Check out the [Features](#5-features)","lastModifiedDate":"2022-11-07"},{"lineNumber":957,"author":{"gitId":"Piyotato"},"content":"section","lastModifiedDate":"2022-11-06"},{"lineNumber":958,"author":{"gitId":"Piyotato"},"content":"to see what commands are available.","lastModifiedDate":"2022-11-06"},{"lineNumber":959,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":960,"author":{"gitId":"Piyotato"},"content":"### CSV (Comma-separated Values) file","lastModifiedDate":"2022-11-07"},{"lineNumber":961,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":962,"author":{"gitId":"Piyotato"},"content":"This is a file type that many applications use for importing and exporting data. That\u0027s why we\u0027re using it for import!","lastModifiedDate":"2022-11-07"},{"lineNumber":963,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":964,"author":{"gitId":"Piyotato"},"content":"### JSON file","lastModifiedDate":"2022-11-07"},{"lineNumber":965,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":966,"author":{"gitId":"Piyotato"},"content":"This is a file type that many applications use for storing data in a human-readable format. We\u0027re also using it, so that","lastModifiedDate":"2022-11-07"},{"lineNumber":967,"author":{"gitId":"Piyotato"},"content":"advanced users can edit their student data easily if they wish.","lastModifiedDate":"2022-11-07"},{"lineNumber":968,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":969,"author":{"gitId":"Piyotato"},"content":"### Module","lastModifiedDate":"2022-11-06"},{"lineNumber":970,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":971,"author":{"gitId":"Piyotato"},"content":"Each module of study has a unique module code consisting of a two- or three-letter prefix that generally denotes the","lastModifiedDate":"2022-11-06"},{"lineNumber":972,"author":{"gitId":"Piyotato"},"content":"discipline, and four digits, and sometimes a suffix. e.g. `CS2101`, `CS2103T`.","lastModifiedDate":"2022-11-06"},{"lineNumber":973,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":974,"author":{"gitId":"comicalromance"},"content":"### Alphanumeric","lastModifiedDate":"2022-11-07"},{"lineNumber":975,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":976,"author":{"gitId":"Piyotato"},"content":"An alphanumeric character is one that is either a number (0-9) or a letter (any letter of the alphabet, lower or upper","lastModifiedDate":"2022-11-07"},{"lineNumber":977,"author":{"gitId":"Piyotato"},"content":"case). An input described as alphanumeric means that all the characters of the input must follow these constraints (i.e.","lastModifiedDate":"2022-11-07"},{"lineNumber":978,"author":{"gitId":"comicalromance"},"content":"composed only of letters and/or numbers)","lastModifiedDate":"2022-11-07"}],"authorContributionMap":{"highorbit25":70,"dr-arrgghh":13,"Piyotato":500,"-":122,"comicalromance":247,"lpohsien":26}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"comicalromance"},"content":"    content: \"StudMap\";","lastModifiedDate":"2022-11-07"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"-":294,"comicalromance":1}},{"path":"docs/diagrams/AddTagActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"lpohsien"},"content":"@startuml","lastModifiedDate":"2022-10-19"},{"lineNumber":2,"author":{"gitId":"lpohsien"},"content":"start","lastModifiedDate":"2022-10-19"},{"lineNumber":3,"author":{"gitId":"lpohsien"},"content":":User executes tag command;","lastModifiedDate":"2022-10-28"},{"lineNumber":4,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":5,"author":{"gitId":"lpohsien"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2022-10-19"},{"lineNumber":6,"author":{"gitId":"lpohsien"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2022-10-19"},{"lineNumber":7,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":8,"author":{"gitId":"lpohsien"},"content":"if () then ([single INDEX])","lastModifiedDate":"2022-10-19"},{"lineNumber":9,"author":{"gitId":"lpohsien"},"content":"    :Retrieve existing tags;","lastModifiedDate":"2022-10-19"},{"lineNumber":10,"author":{"gitId":"lpohsien"},"content":"    :Concatenate new tags;","lastModifiedDate":"2022-10-19"},{"lineNumber":11,"author":{"gitId":"lpohsien"},"content":"    :Set student to have the concatenated tag set;","lastModifiedDate":"2022-10-19"},{"lineNumber":12,"author":{"gitId":"lpohsien"},"content":"else ([INDEX is \"all\"])","lastModifiedDate":"2022-10-19"},{"lineNumber":13,"author":{"gitId":"lpohsien"},"content":"repeat","lastModifiedDate":"2022-10-19"},{"lineNumber":14,"author":{"gitId":"lpohsien"},"content":"    :Retrieve existing tags;","lastModifiedDate":"2022-10-19"},{"lineNumber":15,"author":{"gitId":"lpohsien"},"content":"    :Concatenate new tags;","lastModifiedDate":"2022-10-19"},{"lineNumber":16,"author":{"gitId":"lpohsien"},"content":"    :Update the student to have the","lastModifiedDate":"2022-10-19"},{"lineNumber":17,"author":{"gitId":"lpohsien"},"content":"    concatenated tag set;","lastModifiedDate":"2022-10-19"},{"lineNumber":18,"author":{"gitId":"lpohsien"},"content":"repeat while () is ([Not every student updated]) not ([else]);","lastModifiedDate":"2022-10-19"},{"lineNumber":19,"author":{"gitId":"lpohsien"},"content":"endif","lastModifiedDate":"2022-10-19"},{"lineNumber":20,"author":{"gitId":"lpohsien"},"content":"stop","lastModifiedDate":"2022-10-19"},{"lineNumber":21,"author":{"gitId":"lpohsien"},"content":"@enduml","lastModifiedDate":"2022-10-19"}],"authorContributionMap":{"lpohsien":21}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"user -[USER_COLOR]\u003e ui : \"delete 1\"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"lpohsien"},"content":"logic -[LOGIC_COLOR]\u003e model : deleteStudent(p)","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"lpohsien"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveStudMap(studMap)","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":36,"lpohsien":2}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"lpohsien"},"content":"StudMap *-down-\u003e \"1\" UniqueStudentList","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"lpohsien"},"content":"StudMap *-down-\u003e \"1\" UniqueTagList","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"lpohsien"},"content":"StudMap *-down-\u003e \"1\" UniqueAttendanceList","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"lpohsien"},"content":"StudMap *-down-\u003e \"1\" UniqueAssignmentList","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"highorbit25"},"content":"StudMap *-down-\u003e \"1\" UniqueParticipationList","lastModifiedDate":"2022-11-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"lpohsien"},"content":"UniqueStudentList -down-\u003e Student","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"lpohsien"},"content":"UniqueTagList *-down-\u003e \"*\" Tag","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"lpohsien"},"content":"UniqueAttendanceList *-down-\u003e \"*\" Attendance","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"lpohsien"},"content":"UniqueAssignmentList *-down-\u003e \"*\" Assignment","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"highorbit25"},"content":"UniqueParticipationList *-down-\u003e \"*\" Participation","lastModifiedDate":"2022-11-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"lpohsien"},"content":"Student -up-\u003e \"*\" Tag","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"lpohsien"},"content":"Student -up-\u003e \"*\" Attendance","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"lpohsien"},"content":"Student -up-\u003e \"*\" Assignment","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"highorbit25"},"content":"Student -up-\u003e \"*\" Participation","lastModifiedDate":"2022-11-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"lpohsien"},"content":"Student *--\u003e \"1\" Name","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"lpohsien"},"content":"Student *--\u003e \"1\" StudentID","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"lpohsien"},"content":"Student *--\u003e \"1\" Module","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"lpohsien"},"content":"Student *--\u003e Phone","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"lpohsien"},"content":"Student *--\u003e Email","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"lpohsien"},"content":"Student *--\u003e GitName","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"lpohsien"},"content":"Student *--\u003e TeleHandle","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"highorbit25":3,"-":10,"lpohsien":18}},{"path":"docs/diagrams/CommitActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"start","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":":User executes command;","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"lpohsien"},"content":"if () then ([command commits StudMap])","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    :Purge redundant states;","lastModifiedDate":"2020-12-12"},{"lineNumber":10,"author":{"gitId":"lpohsien"},"content":"    :Save StudMap to","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"lpohsien"},"content":"    studMapStateList;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"else ([else])","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"endif","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"stop","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":12,"lpohsien":3}},{"path":"docs/diagrams/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"lpohsien"},"content":"participant \":StudMapParser\" as StudMapParser LOGIC_COLOR","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \":DeleteCommandParser\" as DeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"participant \"d:DeleteCommand\" as DeleteCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"[-\u003e LogicManager : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"lpohsien"},"content":"LogicManager -\u003e StudMapParser : parseCommand(\"delete 1\")","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"lpohsien"},"content":"activate StudMapParser","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"create DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"lpohsien"},"content":"StudMapParser -\u003e DeleteCommandParser","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"lpohsien"},"content":"DeleteCommandParser --\u003e StudMapParser","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"lpohsien"},"content":"StudMapParser -\u003e DeleteCommandParser : parse(\"1\")","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"create DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"DeleteCommandParser -\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e DeleteCommandParser : d","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"lpohsien"},"content":"DeleteCommandParser --\u003e StudMapParser : d","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"lpohsien"},"content":"DeleteCommandParser -[hidden]-\u003e StudMapParser","lastModifiedDate":"2022-10-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"destroy DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"lpohsien"},"content":"StudMapParser --\u003e LogicManager : d","lastModifiedDate":"2022-10-27"},{"lineNumber":46,"author":{"gitId":"lpohsien"},"content":"deactivate StudMapParser","lastModifiedDate":"2022-10-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"LogicManager -\u003e DeleteCommand : execute()","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"lpohsien"},"content":"DeleteCommand -\u003e Model : deleteStudent(1)","lastModifiedDate":"2022-10-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"Model --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"create CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"activate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"CommandResult --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"deactivate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":58,"lpohsien":11}},{"path":"docs/diagrams/FilterCommandClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"dr-arrgghh"},"content":"@startuml","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":3,"author":{"gitId":"dr-arrgghh"},"content":"show members","lastModifiedDate":"2022-11-07"},{"lineNumber":4,"author":{"gitId":"dr-arrgghh"},"content":"hide empty members","lastModifiedDate":"2022-11-07"},{"lineNumber":5,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"dr-arrgghh"},"content":"Package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2022-11-07"},{"lineNumber":7,"author":{"gitId":"dr-arrgghh"},"content":"Class FilterCommand {","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"dr-arrgghh"},"content":"    CommandResult execute(Model)","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"dr-arrgghh"},"content":"}","lastModifiedDate":"2022-11-07"},{"lineNumber":10,"author":{"gitId":"dr-arrgghh"},"content":"Class ModelManager","lastModifiedDate":"2022-11-07"},{"lineNumber":11,"author":{"gitId":"dr-arrgghh"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nPredicate\" as Predicate","lastModifiedDate":"2022-11-07"},{"lineNumber":12,"author":{"gitId":"dr-arrgghh"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2022-11-07"},{"lineNumber":13,"author":{"gitId":"dr-arrgghh"},"content":"Class CommandResult","lastModifiedDate":"2022-11-07"},{"lineNumber":14,"author":{"gitId":"dr-arrgghh"},"content":"}","lastModifiedDate":"2022-11-07"},{"lineNumber":15,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":16,"author":{"gitId":"dr-arrgghh"},"content":"Package Model \u003c\u003cModel\u003e\u003e {","lastModifiedDate":"2022-11-07"},{"lineNumber":17,"author":{"gitId":"dr-arrgghh"},"content":"Class Model {","lastModifiedDate":"2022-11-07"},{"lineNumber":18,"author":{"gitId":"dr-arrgghh"},"content":"    void filterPersonListWithPredicate(predicate)","lastModifiedDate":"2022-11-07"},{"lineNumber":19,"author":{"gitId":"dr-arrgghh"},"content":"}","lastModifiedDate":"2022-11-07"},{"lineNumber":20,"author":{"gitId":"dr-arrgghh"},"content":"}","lastModifiedDate":"2022-11-07"},{"lineNumber":21,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":22,"author":{"gitId":"dr-arrgghh"},"content":"FilterCommand -up-\u003e \"has\" Predicate","lastModifiedDate":"2022-11-07"},{"lineNumber":23,"author":{"gitId":"dr-arrgghh"},"content":"FilterCommand -left-|\u003e Command","lastModifiedDate":"2022-11-07"},{"lineNumber":24,"author":{"gitId":"dr-arrgghh"},"content":"FilterCommand .right.\u003e CommandResult","lastModifiedDate":"2022-11-07"},{"lineNumber":25,"author":{"gitId":"dr-arrgghh"},"content":"ModelManager -right-|\u003e Predicate","lastModifiedDate":"2022-11-07"},{"lineNumber":26,"author":{"gitId":"dr-arrgghh"},"content":"FilterCommand .down.\u003e Model","lastModifiedDate":"2022-11-07"},{"lineNumber":27,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":28,"author":{"gitId":"dr-arrgghh"},"content":"@enduml","lastModifiedDate":"2022-11-07"}],"authorContributionMap":{"dr-arrgghh":28}},{"path":"docs/diagrams/FilterCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"dr-arrgghh"},"content":"@startuml","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"dr-arrgghh"},"content":"skinparam style strictuml","lastModifiedDate":"2022-11-07"},{"lineNumber":3,"author":{"gitId":"dr-arrgghh"},"content":"box \"Logic\" #LightBlue","lastModifiedDate":"2022-11-07"},{"lineNumber":4,"author":{"gitId":"dr-arrgghh"},"content":"participant \":LogicManager\" as LM","lastModifiedDate":"2022-11-07"},{"lineNumber":5,"author":{"gitId":"dr-arrgghh"},"content":"participant \":AddressBookParser\" as ABParser","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"dr-arrgghh"},"content":"participant \":FilterParser\" as FParser","lastModifiedDate":"2022-11-07"},{"lineNumber":7,"author":{"gitId":"dr-arrgghh"},"content":"participant \":FilterCommand\" as FilterCommand","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"dr-arrgghh"},"content":"end box","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"dr-arrgghh"},"content":"box \"Model\" #Pink","lastModifiedDate":"2022-11-07"},{"lineNumber":11,"author":{"gitId":"dr-arrgghh"},"content":"participant \":Model\" as Model","lastModifiedDate":"2022-11-07"},{"lineNumber":12,"author":{"gitId":"dr-arrgghh"},"content":"participant \":FilteredList\" as FL","lastModifiedDate":"2022-11-07"},{"lineNumber":13,"author":{"gitId":"dr-arrgghh"},"content":"end box","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"dr-arrgghh"},"content":"[-\u003e LM : execute(filter)","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"dr-arrgghh"},"content":"activate LM","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"dr-arrgghh"},"content":"LM -\u003e ABParser : parseCommand(filter)","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"dr-arrgghh"},"content":"activate ABParser","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"dr-arrgghh"},"content":"ABParser -\u003e FParser ** : parse(args)","lastModifiedDate":"2022-10-21"},{"lineNumber":22,"author":{"gitId":"dr-arrgghh"},"content":"activate FParser","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"dr-arrgghh"},"content":"FParser -\u003e FilterCommand **","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"dr-arrgghh"},"content":"activate FilterCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"dr-arrgghh"},"content":"FilterCommand --\u003e FParser","lastModifiedDate":"2022-10-21"},{"lineNumber":28,"author":{"gitId":"dr-arrgghh"},"content":"deactivate FilterCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"dr-arrgghh"},"content":"FParser --\u003e ABParser","lastModifiedDate":"2022-10-21"},{"lineNumber":31,"author":{"gitId":"dr-arrgghh"},"content":"deactivate FParser","lastModifiedDate":"2022-10-21"},{"lineNumber":32,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":33,"author":{"gitId":"dr-arrgghh"},"content":"ABParser --\u003e LM","lastModifiedDate":"2022-10-21"},{"lineNumber":34,"author":{"gitId":"dr-arrgghh"},"content":"deactivate ABParser","lastModifiedDate":"2022-10-21"},{"lineNumber":35,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":36,"author":{"gitId":"dr-arrgghh"},"content":"LM -\u003e FilterCommand : execute(args)","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"dr-arrgghh"},"content":"activate FilterCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"dr-arrgghh"},"content":"FilterCommand -\u003e Model : filterPersonListWithPredicate(predicate)","lastModifiedDate":"2022-11-07"},{"lineNumber":40,"author":{"gitId":"dr-arrgghh"},"content":"activate Model","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"dr-arrgghh"},"content":"Model -\u003e FL : setPredicate(predicate)","lastModifiedDate":"2022-10-21"},{"lineNumber":43,"author":{"gitId":"dr-arrgghh"},"content":"activate FL","lastModifiedDate":"2022-10-21"},{"lineNumber":44,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"dr-arrgghh"},"content":"FL --\u003e Model","lastModifiedDate":"2022-10-21"},{"lineNumber":46,"author":{"gitId":"dr-arrgghh"},"content":"deactivate FL","lastModifiedDate":"2022-10-21"},{"lineNumber":47,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":48,"author":{"gitId":"dr-arrgghh"},"content":"Model --\u003e FilterCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":49,"author":{"gitId":"dr-arrgghh"},"content":"deactivate Model","lastModifiedDate":"2022-10-20"},{"lineNumber":50,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":51,"author":{"gitId":"dr-arrgghh"},"content":"FilterCommand --\u003e LM : Result","lastModifiedDate":"2022-11-07"},{"lineNumber":52,"author":{"gitId":"dr-arrgghh"},"content":"deactivate FilterCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":53,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":54,"author":{"gitId":"dr-arrgghh"},"content":"[\u003c--LM","lastModifiedDate":"2022-10-21"},{"lineNumber":55,"author":{"gitId":"dr-arrgghh"},"content":"deactivate LM","lastModifiedDate":"2022-10-21"},{"lineNumber":56,"author":{"gitId":"dr-arrgghh"},"content":"@enduml","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"dr-arrgghh":56}},{"path":"docs/diagrams/ImportActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"@startuml","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"comicalromance"},"content":"start","lastModifiedDate":"2022-11-07"},{"lineNumber":3,"author":{"gitId":"comicalromance"},"content":":User executes import command;","lastModifiedDate":"2022-11-07"},{"lineNumber":4,"author":{"gitId":"comicalromance"},"content":":Open browser to select file;","lastModifiedDate":"2022-11-07"},{"lineNumber":5,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"comicalromance"},"content":"repeat","lastModifiedDate":"2022-11-07"},{"lineNumber":7,"author":{"gitId":"comicalromance"},"content":"    :Read row of CSV;","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"comicalromance"},"content":"    if () then ([CSV data valid])","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"comicalromance"},"content":"    :Create student populated by CSV data;","lastModifiedDate":"2022-11-07"},{"lineNumber":10,"author":{"gitId":"comicalromance"},"content":"    :Populate model with student;","lastModifiedDate":"2022-11-07"},{"lineNumber":11,"author":{"gitId":"comicalromance"},"content":"    else ([CSV data invalid])","lastModifiedDate":"2022-11-07"},{"lineNumber":12,"author":{"gitId":"comicalromance"},"content":"    endif","lastModifiedDate":"2022-11-07"},{"lineNumber":13,"author":{"gitId":"comicalromance"},"content":"repeat while () is ([CSV has rows left]) not ([else]);","lastModifiedDate":"2022-11-07"},{"lineNumber":14,"author":{"gitId":"comicalromance"},"content":"stop","lastModifiedDate":"2022-11-07"},{"lineNumber":15,"author":{"gitId":"comicalromance"},"content":"@enduml","lastModifiedDate":"2022-11-07"}],"authorContributionMap":{"comicalromance":15}},{"path":"docs/diagrams/ImportCommandSequenceDiagram1.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"@startuml","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"comicalromance"},"content":"!include style.puml","lastModifiedDate":"2022-11-07"},{"lineNumber":3,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":4,"author":{"gitId":"comicalromance"},"content":"box UI UI_COLOR_T1","lastModifiedDate":"2022-11-07"},{"lineNumber":5,"author":{"gitId":"comicalromance"},"content":"participant \":MainWindow\" as MainWindow UI_COLOR","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"comicalromance"},"content":"end box","lastModifiedDate":"2022-11-07"},{"lineNumber":7,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"comicalromance"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"comicalromance"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-11-07"},{"lineNumber":10,"author":{"gitId":"comicalromance"},"content":"participant \":StudMapParser\" as StudMapParser LOGIC_COLOR","lastModifiedDate":"2022-11-07"},{"lineNumber":11,"author":{"gitId":"comicalromance"},"content":"participant \"i:ImportCommand\" as ImportCommand LOGIC_COLOR","lastModifiedDate":"2022-11-07"},{"lineNumber":12,"author":{"gitId":"comicalromance"},"content":"participant \"importResult:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-11-07"},{"lineNumber":13,"author":{"gitId":"comicalromance"},"content":"end box","lastModifiedDate":"2022-11-07"},{"lineNumber":14,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":15,"author":{"gitId":"comicalromance"},"content":"[-\u003e MainWindow : executeCommand(\"import\")","lastModifiedDate":"2022-11-07"},{"lineNumber":16,"author":{"gitId":"comicalromance"},"content":"activate MainWindow","lastModifiedDate":"2022-11-07"},{"lineNumber":17,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":18,"author":{"gitId":"comicalromance"},"content":"MainWindow -\u003e LogicManager : execute(\"import\")","lastModifiedDate":"2022-11-07"},{"lineNumber":19,"author":{"gitId":"comicalromance"},"content":"activate LogicManager","lastModifiedDate":"2022-11-07"},{"lineNumber":20,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":21,"author":{"gitId":"comicalromance"},"content":"LogicManager -\u003e StudMapParser : parseCommand(\"import\")","lastModifiedDate":"2022-11-07"},{"lineNumber":22,"author":{"gitId":"comicalromance"},"content":"activate StudMapParser","lastModifiedDate":"2022-11-07"},{"lineNumber":23,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":24,"author":{"gitId":"comicalromance"},"content":"StudMapParser -\u003e ImportCommand **","lastModifiedDate":"2022-11-07"},{"lineNumber":25,"author":{"gitId":"comicalromance"},"content":"activate ImportCommand","lastModifiedDate":"2022-11-07"},{"lineNumber":26,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":27,"author":{"gitId":"comicalromance"},"content":"ImportCommand --\u003e StudMapParser : i","lastModifiedDate":"2022-11-07"},{"lineNumber":28,"author":{"gitId":"comicalromance"},"content":"deactivate ImportCommand","lastModifiedDate":"2022-11-07"},{"lineNumber":29,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":30,"author":{"gitId":"comicalromance"},"content":"StudMapParser --\u003e LogicManager : i","lastModifiedDate":"2022-11-07"},{"lineNumber":31,"author":{"gitId":"comicalromance"},"content":"deactivate StudMapParser","lastModifiedDate":"2022-11-07"},{"lineNumber":32,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":33,"author":{"gitId":"comicalromance"},"content":"LogicManager -\u003e ImportCommand : execute()","lastModifiedDate":"2022-11-07"},{"lineNumber":34,"author":{"gitId":"comicalromance"},"content":"activate ImportCommand","lastModifiedDate":"2022-11-07"},{"lineNumber":35,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":36,"author":{"gitId":"comicalromance"},"content":"ImportCommand -\u003e CommandResult **","lastModifiedDate":"2022-11-07"},{"lineNumber":37,"author":{"gitId":"comicalromance"},"content":"activate CommandResult","lastModifiedDate":"2022-11-07"},{"lineNumber":38,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":39,"author":{"gitId":"comicalromance"},"content":"CommandResult --\u003e ImportCommand : importResult","lastModifiedDate":"2022-11-07"},{"lineNumber":40,"author":{"gitId":"comicalromance"},"content":"deactivate CommandResult","lastModifiedDate":"2022-11-07"},{"lineNumber":41,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":42,"author":{"gitId":"comicalromance"},"content":"ImportCommand --\u003e LogicManager : importResult","lastModifiedDate":"2022-11-07"},{"lineNumber":43,"author":{"gitId":"comicalromance"},"content":"deactivate ImportCommand","lastModifiedDate":"2022-11-07"},{"lineNumber":44,"author":{"gitId":"comicalromance"},"content":"LogicManager --\u003e MainWindow : importResult","lastModifiedDate":"2022-11-07"},{"lineNumber":45,"author":{"gitId":"comicalromance"},"content":"deactivate LogicManager","lastModifiedDate":"2022-11-07"},{"lineNumber":46,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":47,"author":{"gitId":"comicalromance"},"content":"@enduml","lastModifiedDate":"2022-11-07"}],"authorContributionMap":{"comicalromance":47}},{"path":"docs/diagrams/ImportCommandSequenceDiagram2.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"@startuml","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"comicalromance"},"content":"!include style.puml","lastModifiedDate":"2022-11-07"},{"lineNumber":3,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":4,"author":{"gitId":"comicalromance"},"content":"box UI UI_COLOR_T1","lastModifiedDate":"2022-11-07"},{"lineNumber":5,"author":{"gitId":"comicalromance"},"content":"participant \":MainWindow\" as MainWindow UI_COLOR","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"comicalromance"},"content":"end box","lastModifiedDate":"2022-11-07"},{"lineNumber":7,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"comicalromance"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"comicalromance"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-11-07"},{"lineNumber":10,"author":{"gitId":"comicalromance"},"content":"participant \":ImportCsv\" as ImportCsv LOGIC_COLOR","lastModifiedDate":"2022-11-07"},{"lineNumber":11,"author":{"gitId":"comicalromance"},"content":"participant \"sc:Scanner\" as Scanner LOGIC_COLOR","lastModifiedDate":"2022-11-07"},{"lineNumber":12,"author":{"gitId":"comicalromance"},"content":"participant \"sd:StudentData\" as StudentData LOGIC_COLOR","lastModifiedDate":"2022-11-07"},{"lineNumber":13,"author":{"gitId":"comicalromance"},"content":"participant \"student:Student\" as Student LOGIC_COLOR","lastModifiedDate":"2022-11-07"},{"lineNumber":14,"author":{"gitId":"comicalromance"},"content":"end box","lastModifiedDate":"2022-11-07"},{"lineNumber":15,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":16,"author":{"gitId":"comicalromance"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-11-07"},{"lineNumber":17,"author":{"gitId":"comicalromance"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-11-07"},{"lineNumber":18,"author":{"gitId":"comicalromance"},"content":"end box","lastModifiedDate":"2022-11-07"},{"lineNumber":19,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":20,"author":{"gitId":"comicalromance"},"content":"activate MainWindow","lastModifiedDate":"2022-11-07"},{"lineNumber":21,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":22,"author":{"gitId":"comicalromance"},"content":"MainWindow -\u003e MainWindow : handleChooseFile()","lastModifiedDate":"2022-11-07"},{"lineNumber":23,"author":{"gitId":"comicalromance"},"content":"activate MainWindow","lastModifiedDate":"2022-11-07"},{"lineNumber":24,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":25,"author":{"gitId":"comicalromance"},"content":"MainWindow -\u003e LogicManager : importFile(csvFile)","lastModifiedDate":"2022-11-07"},{"lineNumber":26,"author":{"gitId":"comicalromance"},"content":"activate LogicManager","lastModifiedDate":"2022-11-07"},{"lineNumber":27,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":28,"author":{"gitId":"comicalromance"},"content":"LogicManager -\u003e ImportCsv : execute(csvFile)","lastModifiedDate":"2022-11-07"},{"lineNumber":29,"author":{"gitId":"comicalromance"},"content":"activate ImportCsv","lastModifiedDate":"2022-11-07"},{"lineNumber":30,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":31,"author":{"gitId":"comicalromance"},"content":"ImportCsv -\u003e Scanner ** : Scanner(csvFile)","lastModifiedDate":"2022-11-07"},{"lineNumber":32,"author":{"gitId":"comicalromance"},"content":"activate Scanner","lastModifiedDate":"2022-11-07"},{"lineNumber":33,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":34,"author":{"gitId":"comicalromance"},"content":"Scanner --\u003e ImportCsv : sc","lastModifiedDate":"2022-11-07"},{"lineNumber":35,"author":{"gitId":"comicalromance"},"content":"deactivate Scanner","lastModifiedDate":"2022-11-07"},{"lineNumber":36,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":37,"author":{"gitId":"comicalromance"},"content":"loop until sc has no next line","lastModifiedDate":"2022-11-07"},{"lineNumber":38,"author":{"gitId":"comicalromance"},"content":"    ImportCsv -\u003e ImportCsv : processLine(sc.nextLine())","lastModifiedDate":"2022-11-07"},{"lineNumber":39,"author":{"gitId":"comicalromance"},"content":"    activate ImportCsv","lastModifiedDate":"2022-11-07"},{"lineNumber":40,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":41,"author":{"gitId":"comicalromance"},"content":"    ImportCsv -\u003e StudentData ** : StudentData()","lastModifiedDate":"2022-11-07"},{"lineNumber":42,"author":{"gitId":"comicalromance"},"content":"    activate StudentData","lastModifiedDate":"2022-11-07"},{"lineNumber":43,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":44,"author":{"gitId":"comicalromance"},"content":"    StudentData --\u003e ImportCsv : sd","lastModifiedDate":"2022-11-07"},{"lineNumber":45,"author":{"gitId":"comicalromance"},"content":"    deactivate StudentData","lastModifiedDate":"2022-11-07"},{"lineNumber":46,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":47,"author":{"gitId":"comicalromance"},"content":"    ImportCsv -\u003e StudentData : sd.setAttributes()","lastModifiedDate":"2022-11-07"},{"lineNumber":48,"author":{"gitId":"comicalromance"},"content":"    activate StudentData","lastModifiedDate":"2022-11-07"},{"lineNumber":49,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":50,"author":{"gitId":"comicalromance"},"content":"    StudentData --\u003e ImportCsv : sd","lastModifiedDate":"2022-11-07"},{"lineNumber":51,"author":{"gitId":"comicalromance"},"content":"    deactivate StudentData","lastModifiedDate":"2022-11-07"},{"lineNumber":52,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":53,"author":{"gitId":"comicalromance"},"content":"    ImportCsv -\u003e Student ** : Student(sd)","lastModifiedDate":"2022-11-07"},{"lineNumber":54,"author":{"gitId":"comicalromance"},"content":"    activate Student","lastModifiedDate":"2022-11-07"},{"lineNumber":55,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":56,"author":{"gitId":"comicalromance"},"content":"    Student --\u003e ImportCsv : student","lastModifiedDate":"2022-11-07"},{"lineNumber":57,"author":{"gitId":"comicalromance"},"content":"    deactivate Student","lastModifiedDate":"2022-11-07"},{"lineNumber":58,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":59,"author":{"gitId":"comicalromance"},"content":"    ImportCsv -\u003e Model : addStudent(student)","lastModifiedDate":"2022-11-07"},{"lineNumber":60,"author":{"gitId":"comicalromance"},"content":"    activate Model","lastModifiedDate":"2022-11-07"},{"lineNumber":61,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":62,"author":{"gitId":"comicalromance"},"content":"    Model --\u003e ImportCsv","lastModifiedDate":"2022-11-07"},{"lineNumber":63,"author":{"gitId":"comicalromance"},"content":"    deactivate Model","lastModifiedDate":"2022-11-07"},{"lineNumber":64,"author":{"gitId":"comicalromance"},"content":"end","lastModifiedDate":"2022-11-07"},{"lineNumber":65,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":66,"author":{"gitId":"comicalromance"},"content":"ImportCsv --\u003e LogicManager","lastModifiedDate":"2022-11-07"},{"lineNumber":67,"author":{"gitId":"comicalromance"},"content":"deactivate ImportCsv","lastModifiedDate":"2022-11-07"},{"lineNumber":68,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":69,"author":{"gitId":"comicalromance"},"content":"LogicManager --\u003e MainWindow","lastModifiedDate":"2022-11-07"},{"lineNumber":70,"author":{"gitId":"comicalromance"},"content":"deactivate MainWindow","lastModifiedDate":"2022-11-07"},{"lineNumber":71,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":72,"author":{"gitId":"comicalromance"},"content":"@enduml","lastModifiedDate":"2022-11-07"},{"lineNumber":73,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"}],"authorContributionMap":{"comicalromance":73}},{"path":"docs/diagrams/LogicClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Logic {","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"lpohsien"},"content":"Class StudMapParser","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nLogic\" as Logic","lastModifiedDate":"2022-01-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"package Model{","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"LogicManager .right.|\u003e Logic","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"lpohsien"},"content":"LogicManager -right-\u003e\"1\" StudMapParser","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"lpohsien"},"content":"StudMapParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"LogicManager .left.\u003e Command : executes \u003e","lastModifiedDate":"2019-07-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"LogicManager --\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"LogicManager --\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"Storage --[hidden] Model","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Command .[hidden]up.\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Command .right.\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"note right of XYZCommand: XYZCommand \u003d AddCommand, \\nFindCommand, etc","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Logic ..\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"LogicManager .down.\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Command .up.\u003e CommandResult : produces \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":43,"lpohsien":3}},{"path":"docs/diagrams/MarkActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"highorbit25"},"content":"@startuml","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"highorbit25"},"content":"start","lastModifiedDate":"2022-11-07"},{"lineNumber":3,"author":{"gitId":"highorbit25"},"content":":User executes mark command;","lastModifiedDate":"2022-11-07"},{"lineNumber":4,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":5,"author":{"gitId":"highorbit25"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"highorbit25"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2022-11-07"},{"lineNumber":7,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"highorbit25"},"content":"if () then ([single INDEX])","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"highorbit25"},"content":"    :Retrieve student at INDEX;","lastModifiedDate":"2022-11-07"},{"lineNumber":10,"author":{"gitId":"highorbit25"},"content":"    :Retrieve existing attendance;","lastModifiedDate":"2022-11-07"},{"lineNumber":11,"author":{"gitId":"highorbit25"},"content":"    :Concatenate new attendance;","lastModifiedDate":"2022-11-07"},{"lineNumber":12,"author":{"gitId":"highorbit25"},"content":"    :Set student to have the concatenated attendance set;","lastModifiedDate":"2022-11-07"},{"lineNumber":13,"author":{"gitId":"highorbit25"},"content":"else ([INDEX is \"all\"])","lastModifiedDate":"2022-11-07"},{"lineNumber":14,"author":{"gitId":"highorbit25"},"content":"    :Retrieve all indexes to be modified;","lastModifiedDate":"2022-11-07"},{"lineNumber":15,"author":{"gitId":"highorbit25"},"content":"repeat","lastModifiedDate":"2022-11-07"},{"lineNumber":16,"author":{"gitId":"highorbit25"},"content":"    :Retrieve student at current INDEX;","lastModifiedDate":"2022-11-07"},{"lineNumber":17,"author":{"gitId":"highorbit25"},"content":"    :Retrieve existing attendance;","lastModifiedDate":"2022-11-07"},{"lineNumber":18,"author":{"gitId":"highorbit25"},"content":"    :Concatenate new attendance;","lastModifiedDate":"2022-11-07"},{"lineNumber":19,"author":{"gitId":"highorbit25"},"content":"    :Update the student to have the","lastModifiedDate":"2022-11-07"},{"lineNumber":20,"author":{"gitId":"highorbit25"},"content":"    concatenated attendance set;","lastModifiedDate":"2022-11-07"},{"lineNumber":21,"author":{"gitId":"highorbit25"},"content":"repeat while () is ([Not every student updated]) not ([else]);","lastModifiedDate":"2022-11-07"},{"lineNumber":22,"author":{"gitId":"highorbit25"},"content":"endif","lastModifiedDate":"2022-11-07"},{"lineNumber":23,"author":{"gitId":"highorbit25"},"content":"stop","lastModifiedDate":"2022-11-07"},{"lineNumber":24,"author":{"gitId":"highorbit25"},"content":"@enduml","lastModifiedDate":"2022-11-07"}],"authorContributionMap":{"highorbit25":24}},{"path":"docs/diagrams/MarkCommandClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"@startuml","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"comicalromance"},"content":"!include style.puml","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"comicalromance"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"comicalromance"},"content":"skinparam arrowColor LOGIC_COLOR","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"comicalromance"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"comicalromance"},"content":"show members","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"comicalromance"},"content":"hide empty members","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"comicalromance"},"content":"Package Logic \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"comicalromance"},"content":"Class MarkCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"comicalromance"},"content":"Class \"{abstract}\\nEditStudentCommand\" as EditStudentCommand {","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"comicalromance"},"content":"    studentEditor : StudentEditor","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"comicalromance"},"content":"    indicesToEdit : IndexListGenerator","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"comicalromance"},"content":"    CommandResult execute(Model)","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"comicalromance"},"content":"}","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"comicalromance"},"content":"Class CommandResult","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"comicalromance"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"comicalromance"},"content":"Class MarkCommandStudentEditor {","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"comicalromance"},"content":"    Student editStudent(Student)","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"comicalromance"},"content":"}","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"comicalromance"},"content":"Class \"{abstract}\\nIndexListGenerator\" as IndexListGenerator","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"comicalromance"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nStudentEditor\" as StudentEditor","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"comicalromance"},"content":"Class Student","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"comicalromance"},"content":"Class AllIndexGenerator","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"comicalromance"},"content":"Class SingleIndexGenerator","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"comicalromance"},"content":"}","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"comicalromance"},"content":"Package Model \u003c\u003cModel\u003e\u003e {","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"comicalromance"},"content":"Class Model MODEL_COLOR","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"comicalromance"},"content":"}","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"comicalromance"},"content":"MarkCommand -right-\u003e \"has\" MarkCommandStudentEditor","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"comicalromance"},"content":"MarkCommand -right-\u003e \"has\" IndexListGenerator","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"comicalromance"},"content":"MarkCommandStudentEditor -up-|\u003e StudentEditor","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"comicalromance"},"content":"MarkCommandStudentEditor .right.\u003e Student","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"comicalromance"},"content":"AllIndexGenerator -up-|\u003e IndexListGenerator","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"comicalromance"},"content":"SingleIndexGenerator -up-|\u003e IndexListGenerator","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":44,"author":{"gitId":"comicalromance"},"content":"MarkCommand -down-|\u003e EditStudentCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"comicalromance"},"content":"EditStudentCommand .down.\u003e Model","lastModifiedDate":"2022-10-20"},{"lineNumber":46,"author":{"gitId":"comicalromance"},"content":"EditStudentCommand -down-|\u003e Command","lastModifiedDate":"2022-10-20"},{"lineNumber":47,"author":{"gitId":"comicalromance"},"content":"EditStudentCommand .left.\u003e CommandResult","lastModifiedDate":"2022-10-20"},{"lineNumber":48,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":49,"author":{"gitId":"comicalromance"},"content":"@enduml","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"comicalromance":49}},{"path":"docs/diagrams/MarkCommandParserClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"@startuml","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"comicalromance"},"content":"!include style.puml","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"comicalromance"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"comicalromance"},"content":"skinparam arrowColor LOGIC_COLOR","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"comicalromance"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"comicalromance"},"content":"show members","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"comicalromance"},"content":"hide empty members","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"comicalromance"},"content":"Package Logic \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"comicalromance"},"content":"Class MarkCommandParser","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"comicalromance"},"content":"Class \"{abstract}\\nEditStudentCommandParser\" as EditStudentCommandParser","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"comicalromance"},"content":"Class \"{abstract}\\nIndexCommandParser\" as IndexCommandParser","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"comicalromance"},"content":"Class \"{abstract}\\nIndexListGenerator\" as IndexListGenerator","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"comicalromance"},"content":"Class AllIndexGenerator","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"comicalromance"},"content":"Class SingleIndexGenerator","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"comicalromance"},"content":"}","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"comicalromance"},"content":"AllIndexGenerator -up-|\u003e IndexListGenerator","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"comicalromance"},"content":"SingleIndexGenerator -up-|\u003e IndexListGenerator","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"comicalromance"},"content":"MarkCommandParser .right.|\u003e IndexListGenerator","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"comicalromance"},"content":"MarkCommandParser -down-|\u003e EditStudentCommandParser","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"comicalromance"},"content":"EditStudentCommandParser -down-|\u003e IndexCommandParser","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"comicalromance"},"content":"@enduml","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"comicalromance":26}},{"path":"docs/diagrams/MarkCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"@startuml","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"comicalromance"},"content":"!include style.puml","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"comicalromance"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"comicalromance"},"content":"participant \":MarkCommand\" as MarkCommand LOGIC_COLOR","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"comicalromance"},"content":"participant \":MarkCommandStudentEditor\" as StudentEditor LOGIC_COLOR","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"comicalromance"},"content":"participant \":StudentData\" as StudentData LOGIC_COLOR","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"comicalromance"},"content":"end box","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"comicalromance"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"comicalromance"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"comicalromance"},"content":"end box","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"comicalromance"},"content":"[-\u003e MarkCommand : execute(\"mark 1 present\")","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"comicalromance"},"content":"activate MarkCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"comicalromance"},"content":"MarkCommand -\u003e MarkCommand : executeNoRefresh()","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"comicalromance"},"content":"activate MarkCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"comicalromance"},"content":"loop until end of indexes","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"comicalromance"},"content":"    MarkCommand -\u003e StudentEditor : editStudent(studentToEdit)","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"comicalromance"},"content":"    activate StudentEditor","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"comicalromance"},"content":"    create StudentData","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"comicalromance"},"content":"    StudentEditor -\u003e StudentData : studentToEdit.getStudentData()","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"comicalromance"},"content":"    activate StudentData","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"comicalromance"},"content":"    StudentData --\u003e StudentEditor","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"comicalromance"},"content":"    deactivate StudentData","lastModifiedDate":"2022-11-07"},{"lineNumber":31,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"comicalromance"},"content":"    StudentEditor -\u003e StudentData : setAttendances(newAttendances)","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"comicalromance"},"content":"    activate StudentData","lastModifiedDate":"2022-11-07"},{"lineNumber":34,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"comicalromance"},"content":"    StudentData --\u003e StudentEditor","lastModifiedDate":"2022-10-27"},{"lineNumber":36,"author":{"gitId":"comicalromance"},"content":"    deactivate StudentData","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"comicalromance"},"content":"    StudentEditor --\u003e MarkCommand : editedStudent","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"comicalromance"},"content":"    deactivate StudentEditor","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"comicalromance"},"content":"    MarkCommand -\u003e Model : setStudent(studentToEdit, editedStudent)","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"comicalromance"},"content":"    activate Model","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"comicalromance"},"content":"    Model --\u003e MarkCommand","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"comicalromance"},"content":"    deactivate Model","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"comicalromance"},"content":"end","lastModifiedDate":"2022-10-20"},{"lineNumber":46,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":47,"author":{"gitId":"comicalromance"},"content":"deactivate MarkCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":48,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":49,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":50,"author":{"gitId":"comicalromance"},"content":"[\u003c--MarkCommand: CommandResult","lastModifiedDate":"2022-10-20"},{"lineNumber":51,"author":{"gitId":"comicalromance"},"content":"deactivate MarkCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":52,"author":{"gitId":"comicalromance"},"content":"@enduml","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"highorbit25":1,"comicalromance":51}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"lpohsien"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyStudMap\" as ReadOnlyStudMap","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"lpohsien"},"content":"Class StudMap","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"lpohsien"},"content":"Class UniqueStudentList","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"lpohsien"},"content":"Class Student","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"lpohsien"},"content":"Class StudentID","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"lpohsien"},"content":"Class Module","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"lpohsien"},"content":"Class Email","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"lpohsien"},"content":"Class GitName","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"lpohsien"},"content":"Class TeleHandle","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"lpohsien"},"content":"Class Attendance","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"lpohsien"},"content":"Class Assignment","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"highorbit25"},"content":"Class Participation","lastModifiedDate":"2022-11-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"lpohsien"},"content":"StudMap .up.|\u003e ReadOnlyStudMap","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"lpohsien"},"content":"Model .left.\u003e ReadOnlyStudMap","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"lpohsien"},"content":"ModelManager -left-\u003e \"1\" StudMap","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"lpohsien"},"content":"StudMap *--\u003e \"1\" UniqueStudentList","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"lpohsien"},"content":"UniqueStudentList --\u003e \"~* all\" Student","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"lpohsien"},"content":"Student *--\u003e \"1\" Name","lastModifiedDate":"2022-10-27"},{"lineNumber":47,"author":{"gitId":"lpohsien"},"content":"Student *--\u003e \"1\" StudentID","lastModifiedDate":"2022-10-27"},{"lineNumber":48,"author":{"gitId":"lpohsien"},"content":"Student *--\u003e \"1\" Module","lastModifiedDate":"2022-10-27"},{"lineNumber":49,"author":{"gitId":"lpohsien"},"content":"Student *--\u003e \"0..1\" Phone","lastModifiedDate":"2022-10-27"},{"lineNumber":50,"author":{"gitId":"lpohsien"},"content":"Student *--\u003e \"0..1\" Email","lastModifiedDate":"2022-10-27"},{"lineNumber":51,"author":{"gitId":"lpohsien"},"content":"Student *--\u003e \"0..1\" GitName","lastModifiedDate":"2022-10-27"},{"lineNumber":52,"author":{"gitId":"lpohsien"},"content":"Student *--\u003e \"0..1\" TeleHandle","lastModifiedDate":"2022-10-27"},{"lineNumber":53,"author":{"gitId":"lpohsien"},"content":"Student *--\u003e \"*\" Tag","lastModifiedDate":"2022-10-27"},{"lineNumber":54,"author":{"gitId":"lpohsien"},"content":"Student *--\u003e \"*\" Attendance","lastModifiedDate":"2022-10-27"},{"lineNumber":55,"author":{"gitId":"lpohsien"},"content":"Student *--\u003e \"*\" Assignment","lastModifiedDate":"2022-10-27"},{"lineNumber":56,"author":{"gitId":"highorbit25"},"content":"Student *--\u003e \"*\" Participation","lastModifiedDate":"2022-11-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"lpohsien"},"content":"ModelManager --\u003e\"~* filtered\" Student","lastModifiedDate":"2022-10-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"highorbit25":2,"-":30,"lpohsien":27}},{"path":"docs/diagrams/ParserClasses.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2021-07-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2021-07-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-07-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2021-07-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2021-07-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"package \"Parser classes\"{","lastModifiedDate":"2021-07-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nParser\" as Parser","lastModifiedDate":"2022-01-03"},{"lineNumber":12,"author":{"gitId":"lpohsien"},"content":"Class StudMapParser","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class XYZCommandParser","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"lpohsien"},"content":"HiddenOutside ..\u003e StudMapParser","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"lpohsien"},"content":"StudMapParser .down.\u003e XYZCommandParser: creates \u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"lpohsien"},"content":"StudMapParser ..\u003e Command : returns \u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"XYZCommandParser .up.|\u003e Parser","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"ArgumentTokenizer .left.\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"CliSyntax ..\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"ParserUtil .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ArgumentTokenizer .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2021-07-31"}],"authorContributionMap":{"-":34,"lpohsien":4}},{"path":"docs/diagrams/SortActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"highorbit25"},"content":"@startuml","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"highorbit25"},"content":"start","lastModifiedDate":"2022-11-07"},{"lineNumber":3,"author":{"gitId":"highorbit25"},"content":":User executes sort command;","lastModifiedDate":"2022-11-07"},{"lineNumber":4,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":5,"author":{"gitId":"highorbit25"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"highorbit25"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2022-11-07"},{"lineNumber":7,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"highorbit25"},"content":"if () then ([ORDER is \"asc\"])","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"highorbit25"},"content":"    :Retrieve Comparator for given Attribute;","lastModifiedDate":"2022-11-07"},{"lineNumber":10,"author":{"gitId":"highorbit25"},"content":"    :Sort list using Comparator;","lastModifiedDate":"2022-11-07"},{"lineNumber":11,"author":{"gitId":"highorbit25"},"content":"else ([ORDER is \"dsc\"])","lastModifiedDate":"2022-11-07"},{"lineNumber":12,"author":{"gitId":"highorbit25"},"content":"    :Retrieve Comparator for given Attribute;","lastModifiedDate":"2022-11-07"},{"lineNumber":13,"author":{"gitId":"highorbit25"},"content":"    :Sort list using Comparator;","lastModifiedDate":"2022-11-07"},{"lineNumber":14,"author":{"gitId":"highorbit25"},"content":"    :Reverse list;","lastModifiedDate":"2022-11-07"},{"lineNumber":15,"author":{"gitId":"highorbit25"},"content":"endif","lastModifiedDate":"2022-11-07"},{"lineNumber":16,"author":{"gitId":"highorbit25"},"content":"stop","lastModifiedDate":"2022-11-07"},{"lineNumber":17,"author":{"gitId":"highorbit25"},"content":"@enduml","lastModifiedDate":"2022-11-07"}],"authorContributionMap":{"highorbit25":17}},{"path":"docs/diagrams/SortCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"highorbit25"},"content":"@startuml","lastModifiedDate":"2022-10-24"},{"lineNumber":2,"author":{"gitId":"highorbit25"},"content":"!include style.puml","lastModifiedDate":"2022-10-24"},{"lineNumber":3,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":4,"author":{"gitId":"highorbit25"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-10-24"},{"lineNumber":5,"author":{"gitId":"highorbit25"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-10-24"},{"lineNumber":6,"author":{"gitId":"highorbit25"},"content":"participant \":StudMapParser\" as StudMapParser LOGIC_COLOR","lastModifiedDate":"2022-10-24"},{"lineNumber":7,"author":{"gitId":"highorbit25"},"content":"participant \":SortCommandParser\" as SortCommandParser LOGIC_COLOR","lastModifiedDate":"2022-10-24"},{"lineNumber":8,"author":{"gitId":"highorbit25"},"content":"participant \":SortCommand\" as SortCommand LOGIC_COLOR","lastModifiedDate":"2022-10-24"},{"lineNumber":9,"author":{"gitId":"highorbit25"},"content":"end box","lastModifiedDate":"2022-10-24"},{"lineNumber":10,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":11,"author":{"gitId":"highorbit25"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-10-24"},{"lineNumber":12,"author":{"gitId":"highorbit25"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-10-24"},{"lineNumber":13,"author":{"gitId":"highorbit25"},"content":"end box","lastModifiedDate":"2022-10-24"},{"lineNumber":14,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":15,"author":{"gitId":"highorbit25"},"content":"[-\u003e LogicManager : execute(\"sort asc a/name\")","lastModifiedDate":"2022-10-24"},{"lineNumber":16,"author":{"gitId":"highorbit25"},"content":"activate LogicManager","lastModifiedDate":"2022-10-24"},{"lineNumber":17,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":18,"author":{"gitId":"highorbit25"},"content":"LogicManager -\u003e StudMapParser : parseCommand(\"sort asc a/name\")","lastModifiedDate":"2022-10-24"},{"lineNumber":19,"author":{"gitId":"highorbit25"},"content":"activate StudMapParser","lastModifiedDate":"2022-10-24"},{"lineNumber":20,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":21,"author":{"gitId":"highorbit25"},"content":"StudMapParser -\u003e SortCommandParser ** : parse(args)","lastModifiedDate":"2022-10-24"},{"lineNumber":22,"author":{"gitId":"highorbit25"},"content":"activate SortCommandParser","lastModifiedDate":"2022-10-24"},{"lineNumber":23,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":24,"author":{"gitId":"highorbit25"},"content":"SortCommandParser -\u003e SortCommand **","lastModifiedDate":"2022-10-24"},{"lineNumber":25,"author":{"gitId":"highorbit25"},"content":"activate SortCommand","lastModifiedDate":"2022-10-24"},{"lineNumber":26,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":27,"author":{"gitId":"highorbit25"},"content":"SortCommand --\u003e SortCommandParser","lastModifiedDate":"2022-10-24"},{"lineNumber":28,"author":{"gitId":"highorbit25"},"content":"deactivate SortCommand","lastModifiedDate":"2022-10-24"},{"lineNumber":29,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":30,"author":{"gitId":"highorbit25"},"content":"SortCommandParser --\u003e StudMapParser","lastModifiedDate":"2022-10-24"},{"lineNumber":31,"author":{"gitId":"highorbit25"},"content":"deactivate SortCommandParser","lastModifiedDate":"2022-10-24"},{"lineNumber":32,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":33,"author":{"gitId":"highorbit25"},"content":"StudMapParser --\u003e LogicManager","lastModifiedDate":"2022-10-24"},{"lineNumber":34,"author":{"gitId":"highorbit25"},"content":"deactivate StudMapParser","lastModifiedDate":"2022-10-24"},{"lineNumber":35,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":36,"author":{"gitId":"highorbit25"},"content":"LogicManager -\u003e SortCommand : execute(model)","lastModifiedDate":"2022-10-24"},{"lineNumber":37,"author":{"gitId":"highorbit25"},"content":"activate SortCommand","lastModifiedDate":"2022-10-24"},{"lineNumber":38,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":39,"author":{"gitId":"highorbit25"},"content":"SortCommand -\u003e Model : sortFilteredStudentList(comparator, sortOrder)","lastModifiedDate":"2022-10-24"},{"lineNumber":40,"author":{"gitId":"highorbit25"},"content":"activate Model","lastModifiedDate":"2022-10-24"},{"lineNumber":41,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":42,"author":{"gitId":"highorbit25"},"content":"Model --\u003e SortCommand","lastModifiedDate":"2022-10-24"},{"lineNumber":43,"author":{"gitId":"highorbit25"},"content":"deactivate Model","lastModifiedDate":"2022-10-24"},{"lineNumber":44,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":45,"author":{"gitId":"highorbit25"},"content":"SortCommand --\u003e LogicManager : result","lastModifiedDate":"2022-11-06"},{"lineNumber":46,"author":{"gitId":"highorbit25"},"content":"deactivate SortCommand","lastModifiedDate":"2022-10-24"},{"lineNumber":47,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":48,"author":{"gitId":"highorbit25"},"content":"SortCommand -[hidden]-\u003e LogicManager : result","lastModifiedDate":"2022-11-06"},{"lineNumber":49,"author":{"gitId":"highorbit25"},"content":"destroy SortCommand","lastModifiedDate":"2022-11-06"},{"lineNumber":50,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":51,"author":{"gitId":"highorbit25"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-10-24"},{"lineNumber":52,"author":{"gitId":"highorbit25"},"content":"deactivate LogicManager","lastModifiedDate":"2022-10-24"},{"lineNumber":53,"author":{"gitId":"highorbit25"},"content":"@enduml","lastModifiedDate":"2022-10-24"}],"authorContributionMap":{"highorbit25":53}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUserPrefsStorage\" as UserPrefsStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nStorage\" as Storage","lastModifiedDate":"2022-01-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"lpohsien"},"content":"package \"StudMap Storage\" #F4F6F6{","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"lpohsien"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nStudMapStorage\" as StudMapStorage","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"lpohsien"},"content":"Class JsonStudMapStorage","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"lpohsien"},"content":"Class JsonSerializableStudMap","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"lpohsien"},"content":"Class JsonAdaptedStudent","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"lpohsien"},"content":"StorageManager -up-\u003e \"1\" StudMapStorage","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Storage -left-|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"lpohsien"},"content":"Storage -right-|\u003e StudMapStorage","lastModifiedDate":"2022-10-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"lpohsien"},"content":"JsonStudMapStorage .up.|\u003e StudMapStorage","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"lpohsien"},"content":"JsonStudMapStorage ..\u003e JsonSerializableStudMap","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"lpohsien"},"content":"JsonSerializableStudMap --\u003e \"*\" JsonAdaptedStudent","lastModifiedDate":"2022-10-27"},{"lineNumber":41,"author":{"gitId":"lpohsien"},"content":"JsonAdaptedStudent --\u003e \"*\" JsonAdaptedTag","lastModifiedDate":"2022-10-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":32,"lpohsien":11}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUi\" as Ui","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"lpohsien"},"content":"Class StudentListPanel","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"lpohsien"},"content":"Class StudentCard","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"lpohsien"},"content":"MainWindow *-down-\u003e \"1\" StudentListPanel","lastModifiedDate":"2022-10-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"lpohsien"},"content":"StudentListPanel -down-\u003e \"*\" StudentCard","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"lpohsien"},"content":"StudentListPanel --|\u003e UiPart","lastModifiedDate":"2022-10-27"},{"lineNumber":46,"author":{"gitId":"lpohsien"},"content":"StudentCard --|\u003e UiPart","lastModifiedDate":"2022-10-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"lpohsien"},"content":"StudentCard ..\u003e Model","lastModifiedDate":"2022-10-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"lpohsien"},"content":"StudentListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2022-10-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":52,"lpohsien":8}},{"path":"docs/diagrams/UndoRedoState0.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title Initial state","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"lpohsien"},"content":"    class State1 as \"__ab0:StudMap__\"","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"lpohsien"},"content":"    class State2 as \"__ab1:StudMap__\"","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"lpohsien"},"content":"    class State3 as \"__ab2:StudMap__\"","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"hide State2","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"hide State3","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"lpohsien"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State1","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":16,"lpohsien":4}},{"path":"docs/diagrams/UndoRedoState1.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"delete 5\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"lpohsien"},"content":"    class State1 as \"__ab0:StudMap__\"","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"lpohsien"},"content":"    class State2 as \"__ab1:StudMap__\"","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"lpohsien"},"content":"    class State3 as \"__ab2:StudMap__\"","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"hide State3","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"lpohsien"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":18,"lpohsien":4}},{"path":"docs/diagrams/UndoRedoState2.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"add n/David\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"lpohsien"},"content":"    class State1 as \"__ab0:StudMap__\"","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"lpohsien"},"content":"    class State2 as \"__ab1:StudMap__\"","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"lpohsien"},"content":"    class State3 as \"__ab2:StudMap__\"","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"lpohsien"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":16,"lpohsien":4}},{"path":"docs/diagrams/UndoRedoState3.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"undo\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"lpohsien"},"content":"    class State1 as \"__ab0:StudMap__\"","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"lpohsien"},"content":"    class State2 as \"__ab1:StudMap__\"","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"lpohsien"},"content":"    class State3 as \"__ab2:StudMap__\"","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"lpohsien"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":16,"lpohsien":4}},{"path":"docs/diagrams/UndoRedoState4.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"list\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"lpohsien"},"content":"    class State1 as \"__ab0:StudMap__\"","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"lpohsien"},"content":"    class State2 as \"__ab1:StudMap__\"","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"lpohsien"},"content":"    class State3 as \"__ab2:StudMap__\"","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"lpohsien"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":16,"lpohsien":4}},{"path":"docs/diagrams/UndoRedoState5.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"clear\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"lpohsien"},"content":"    class State1 as \"__ab0:StudMap__\"","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"lpohsien"},"content":"    class State2 as \"__ab1:StudMap__\"","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"lpohsien"},"content":"    class State3 as \"__ab3:StudMap__\"","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"lpohsien"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"note right on link: State ab2 deleted.","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":17,"lpohsien":4}},{"path":"docs/diagrams/UndoSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"lpohsien"},"content":"participant \":StudMapParser\" as StudMapParser LOGIC_COLOR","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \"u:UndoCommand\" as UndoCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"lpohsien"},"content":"participant \":VersionedStudMap\" as VersionedStudMap MODEL_COLOR","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"[-\u003e LogicManager : execute(undo)","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"lpohsien"},"content":"LogicManager -\u003e StudMapParser : parseCommand(undo)","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"lpohsien"},"content":"activate StudMapParser","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"create UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"lpohsien"},"content":"StudMapParser -\u003e UndoCommand","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"activate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"lpohsien"},"content":"UndoCommand --\u003e StudMapParser","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"deactivate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"lpohsien"},"content":"StudMapParser --\u003e LogicManager : u","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"lpohsien"},"content":"deactivate StudMapParser","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"LogicManager -\u003e UndoCommand : execute()","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"activate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"lpohsien"},"content":"UndoCommand -\u003e Model : undoStudMap()","lastModifiedDate":"2022-10-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"lpohsien"},"content":"Model -\u003e VersionedStudMap : undo()","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"lpohsien"},"content":"activate VersionedStudMap","lastModifiedDate":"2022-10-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"lpohsien"},"content":"VersionedStudMap -\u003e VersionedStudMap :resetData(ReadOnlyStudMap)","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"lpohsien"},"content":"VersionedStudMap --\u003e Model :","lastModifiedDate":"2022-10-27"},{"lineNumber":41,"author":{"gitId":"lpohsien"},"content":"deactivate VersionedStudMap","lastModifiedDate":"2022-10-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Model --\u003e UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"UndoCommand --\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"deactivate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"UndoCommand -[hidden]-\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"destroy UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":39,"lpohsien":14}},{"path":"docs/diagrams/tracing/LogicSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-06-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include ../style.puml","lastModifiedDate":"2019-06-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Participant \":LogicManager\" as logic LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":5,"author":{"gitId":"lpohsien"},"content":"Participant \":StudMapParser\" as abp LOGIC_COLOR","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":EditCommandParser\" as ecp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \"command:EditCommand\" as ec LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"[-\u003e logic : execute","lastModifiedDate":"2019-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"activate logic","lastModifiedDate":"2019-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"logic -\u003e abp ++: parseCommand(commandText)","lastModifiedDate":"2019-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"create ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"abp -\u003e ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"abp -\u003e ecp ++: parse(arguments)","lastModifiedDate":"2019-06-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"create ec","lastModifiedDate":"2019-06-17"},{"lineNumber":16,"author":{"gitId":"lpohsien"},"content":"ecp -\u003e ec ++: index, editStudentDescriptor","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"ec --\u003e ecp --","lastModifiedDate":"2019-06-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"ecp --\u003e abp --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"abp --\u003e logic --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-06-17"}],"authorContributionMap":{"-":19,"lpohsien":2}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"comicalromance"},"content":"title: StudMap","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"comicalromance"},"content":"[![CI Status](https://github.com/AY2223S1-CS2103T-W13-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S1-CS2103T-W13-1/tp/actions)","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2223S1-CS2103T-W13-1/tp/branch/master/graph/badge.svg?token\u003dOWNSY6SWHW)](https://codecov.io/gh/AY2223S1-CS2103T-W13-1/tp)","lastModifiedDate":"2022-09-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"Piyotato"},"content":"![Ui](images/ui/ui-daily-usage.png)","lastModifiedDate":"2022-11-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"comicalromance"},"content":"**StudMap (SM) is a desktop app for managing your students, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI).** If you can type fast, SM can get your student management tasks done faster than traditional GUI apps.","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"comicalromance"},"content":"* If you are interested in using StudMap, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"comicalromance"},"content":"* If you are interested about developing StudMap, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Piyotato":1,"-":13,"comicalromance":5}},{"path":"docs/team/comicalromance.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":2,"author":{"gitId":"comicalromance"},"content":"layout: page","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"comicalromance"},"content":"title: Silas\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"comicalromance"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"comicalromance"},"content":"### Project: StudMap","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"comicalromance"},"content":"StudMap is a lightweight desktop application that addresses your needs of managing the student ","lastModifiedDate":"2022-11-04"},{"lineNumber":9,"author":{"gitId":"comicalromance"},"content":"records across multiple spreadsheets. Using a CLI (Command Line Interface) approach, we mitigate","lastModifiedDate":"2022-11-04"},{"lineNumber":10,"author":{"gitId":"comicalromance"},"content":"the need for teaching assistants to navigate through convoluted menus and buttons when keeping ","lastModifiedDate":"2022-11-04"},{"lineNumber":11,"author":{"gitId":"comicalromance"},"content":"track of the administrative details for the students. It is written in Java with the GUI implemented ","lastModifiedDate":"2022-11-04"},{"lineNumber":12,"author":{"gitId":"comicalromance"},"content":"using JavaFX. \u003cbr\u003e","lastModifiedDate":"2022-11-04"},{"lineNumber":13,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":14,"author":{"gitId":"comicalromance"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dcomicalromance)","lastModifiedDate":"2022-11-04"},{"lineNumber":15,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":16,"author":{"gitId":"comicalromance"},"content":"* **New Features**: ","lastModifiedDate":"2022-11-07"},{"lineNumber":17,"author":{"gitId":"comicalromance"},"content":"  * `mark` and `unmark`\u003cbr/\u003e","lastModifiedDate":"2022-11-04"},{"lineNumber":18,"author":{"gitId":"comicalromance"},"content":"  Added `mark` and `unmark`, core features for our product usecase, allowing users to manage attendance","lastModifiedDate":"2022-11-04"},{"lineNumber":19,"author":{"gitId":"comicalromance"},"content":"  records for their students. This included updating the Jackson serialization to allow pseudo key-pair","lastModifiedDate":"2022-11-04"},{"lineNumber":20,"author":{"gitId":"comicalromance"},"content":"  relationships to be stored in the JSON file.","lastModifiedDate":"2022-11-04"},{"lineNumber":21,"author":{"gitId":"comicalromance"},"content":"  * `module` \u003cbr/\u003e","lastModifiedDate":"2022-11-04"},{"lineNumber":22,"author":{"gitId":"comicalromance"},"content":"  Added `module` field to students, allowing users to indicate the module that the student is being tutored","lastModifiedDate":"2022-11-04"},{"lineNumber":23,"author":{"gitId":"comicalromance"},"content":"  for","lastModifiedDate":"2022-11-04"},{"lineNumber":24,"author":{"gitId":"comicalromance"},"content":"  * `import`\u003cbr/\u003e","lastModifiedDate":"2022-11-04"},{"lineNumber":25,"author":{"gitId":"comicalromance"},"content":"  Added `import` functionality, allowing users to import student data by uploading a CSV file containing","lastModifiedDate":"2022-11-04"},{"lineNumber":26,"author":{"gitId":"comicalromance"},"content":"  student details","lastModifiedDate":"2022-11-04"},{"lineNumber":27,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":28,"author":{"gitId":"comicalromance"},"content":"* **Project management**:","lastModifiedDate":"2022-09-28"},{"lineNumber":29,"author":{"gitId":"comicalromance"},"content":"  * Managed PE-D Triaging of Bugs","lastModifiedDate":"2022-11-07"},{"lineNumber":30,"author":{"gitId":"comicalromance"},"content":"  * Helped with managing of About Us page, profile pictures and skeletal PPPs","lastModifiedDate":"2022-11-04"},{"lineNumber":31,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":32,"author":{"gitId":"comicalromance"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-28"},{"lineNumber":33,"author":{"gitId":"comicalromance"},"content":"  * Updated UI to reflect mock UI design, implementing additional fields for attendance, participation","lastModifiedDate":"2022-11-04"},{"lineNumber":34,"author":{"gitId":"comicalromance"},"content":"  and grading of assignments, as well as resizing certain UI elements to increase usability for the user","lastModifiedDate":"2022-11-04"},{"lineNumber":35,"author":{"gitId":"comicalromance"},"content":"  * Refactored most instances of AddressBook to StudMap, and Person to Student","lastModifiedDate":"2022-11-04"},{"lineNumber":36,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":37,"author":{"gitId":"comicalromance"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-28"},{"lineNumber":38,"author":{"gitId":"comicalromance"},"content":"  * Added documentation for the `mark` command in the DG, including PlantUML sequence diagrams and class","lastModifiedDate":"2022-11-04"},{"lineNumber":39,"author":{"gitId":"comicalromance"},"content":"  diagrams to reflect the `EditStudent` command structure","lastModifiedDate":"2022-11-04"},{"lineNumber":40,"author":{"gitId":"comicalromance"},"content":"  * Added documentation for the `import` command in the DG, including activity and sequence diagrams","lastModifiedDate":"2022-11-07"},{"lineNumber":41,"author":{"gitId":"comicalromance"},"content":"  * Added documentation for `mark`, `unmark` and `import` in the UG, and polished Section 4: Quick Start","lastModifiedDate":"2022-11-07"},{"lineNumber":42,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":43,"author":{"gitId":"comicalromance"},"content":"* **Community**:","lastModifiedDate":"2022-09-28"},{"lineNumber":44,"author":{"gitId":"comicalromance"},"content":"  * Helped review several of teammates\u0027 PRs","lastModifiedDate":"2022-11-07"},{"lineNumber":45,"author":{"gitId":"comicalromance"},"content":"  ","lastModifiedDate":"2022-09-28"},{"lineNumber":46,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":47,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"comicalromance":47}},{"path":"docs/team/dr-arrgghh.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":2,"author":{"gitId":"comicalromance"},"content":"layout: page","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"comicalromance"},"content":"title: Zizheng\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"comicalromance"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"comicalromance"},"content":"### Project: StudMap","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"dr-arrgghh"},"content":"StudMap is a lightweight desktop application that addresses your needs of managing the student","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"dr-arrgghh"},"content":"records across multiple spreadsheets. Using a CLI (Command Line Interface) approach, we mitigate","lastModifiedDate":"2022-11-07"},{"lineNumber":10,"author":{"gitId":"dr-arrgghh"},"content":"the need for teaching assistants to navigate through convoluted menus and buttons when keeping","lastModifiedDate":"2022-11-07"},{"lineNumber":11,"author":{"gitId":"dr-arrgghh"},"content":"track of the administrative details for the students. It is written in Java with the GUI implemented","lastModifiedDate":"2022-11-07"},{"lineNumber":12,"author":{"gitId":"dr-arrgghh"},"content":"using JavaFX. \u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":13,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":14,"author":{"gitId":"dr-arrgghh"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-11-07"},{"lineNumber":15,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":16,"author":{"gitId":"dr-arrgghh"},"content":"* **Code contributed:** [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003ddr-arrgghh)","lastModifiedDate":"2022-11-07"},{"lineNumber":17,"author":{"gitId":"dr-arrgghh"},"content":"  ","lastModifiedDate":"2022-11-07"},{"lineNumber":18,"author":{"gitId":"dr-arrgghh"},"content":"* **New Feature**: `filter`","lastModifiedDate":"2022-11-07"},{"lineNumber":19,"author":{"gitId":"dr-arrgghh"},"content":"  - What it does: The `filter` feature allow users to filter Studmap by the specified attribute","lastModifiedDate":"2022-11-07"},{"lineNumber":20,"author":{"gitId":"dr-arrgghh"},"content":"  with the given keywords","lastModifiedDate":"2022-11-07"},{"lineNumber":21,"author":{"gitId":"dr-arrgghh"},"content":"  - Justification: The user (teaching assistants) might want to single out students from a specific","lastModifiedDate":"2022-11-07"},{"lineNumber":22,"author":{"gitId":"dr-arrgghh"},"content":"  module or take note of students that have/have not complete their assignments. The users may also be ","lastModifiedDate":"2022-11-07"},{"lineNumber":23,"author":{"gitId":"dr-arrgghh"},"content":"  interested in the specific students that are tagged to track their progress. By allowing the users to ","lastModifiedDate":"2022-11-07"},{"lineNumber":24,"author":{"gitId":"dr-arrgghh"},"content":"  filter via `tags`, `module` and `assignments`, it will provide a seamless user experience as the user ","lastModifiedDate":"2022-11-07"},{"lineNumber":25,"author":{"gitId":"dr-arrgghh"},"content":"  no longer need to manually search the list for the student of their focus.","lastModifiedDate":"2022-11-07"},{"lineNumber":26,"author":{"gitId":"dr-arrgghh"},"content":"  - Highlights: In the original addressbook, there were no filter feature. With a large number of students in","lastModifiedDate":"2022-11-07"},{"lineNumber":27,"author":{"gitId":"dr-arrgghh"},"content":"  the current Studmap, it can get really troublesome for the users to search through the entire huge list of students","lastModifiedDate":"2022-11-07"},{"lineNumber":28,"author":{"gitId":"dr-arrgghh"},"content":"  just to find that particular student. Using the `filter` feature, it provides a more user-friendly system where they","lastModifiedDate":"2022-11-07"},{"lineNumber":29,"author":{"gitId":"dr-arrgghh"},"content":"  can quickly search up list of students categorised by the same `tags`, `modules` or `assignments`.","lastModifiedDate":"2022-11-07"},{"lineNumber":30,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":31,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":32,"author":{"gitId":"comicalromance"},"content":"* **Project management**:","lastModifiedDate":"2022-09-28"},{"lineNumber":33,"author":{"gitId":"dr-arrgghh"},"content":"  * Review and merge functional PRs or v1.3","lastModifiedDate":"2022-11-07"},{"lineNumber":34,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":35,"author":{"gitId":"comicalromance"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-28"},{"lineNumber":36,"author":{"gitId":"dr-arrgghh"},"content":"  * Able to filter students via tags, module\u003cbr\u003e","lastModifiedDate":"2022-11-04"},{"lineNumber":37,"author":{"gitId":"dr-arrgghh"},"content":"    and modules","lastModifiedDate":"2022-11-04"},{"lineNumber":38,"author":{"gitId":"dr-arrgghh"},"content":"  * Added new fields for students for better\u003cbr\u003e","lastModifiedDate":"2022-11-04"},{"lineNumber":39,"author":{"gitId":"dr-arrgghh"},"content":"    enhanced identification","lastModifiedDate":"2022-11-04"},{"lineNumber":40,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":41,"author":{"gitId":"comicalromance"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-28"},{"lineNumber":42,"author":{"gitId":"dr-arrgghh"},"content":"  * Provided documentation for `filter` feature for both User Guide and Developer Guide with UML diagrams.","lastModifiedDate":"2022-11-07"},{"lineNumber":43,"author":{"gitId":"comicalromance"},"content":"  ","lastModifiedDate":"2022-09-28"},{"lineNumber":44,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":45,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"dr-arrgghh":28,"comicalromance":17}},{"path":"docs/team/highorbit25.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":2,"author":{"gitId":"comicalromance"},"content":"layout: page","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"comicalromance"},"content":"title: Bao Bin\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"comicalromance"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"comicalromance"},"content":"### Project: StudMap","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"highorbit25"},"content":"StudMap is a lightweight desktop application that addresses your needs of managing the student records across multiple spreadsheets. Using a CLI (Command Line Interface) approach, we mitigate the need for teaching assistants to navigate through convoluted menus and buttons when keeping track of the administrative details for the students. It is written in Java with the GUI implemented using JavaFX. \u003cbr\u003e","lastModifiedDate":"2022-11-04"},{"lineNumber":9,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":10,"author":{"gitId":"highorbit25"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-11-04"},{"lineNumber":11,"author":{"gitId":"highorbit25"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dhighorbit25)","lastModifiedDate":"2022-11-04"},{"lineNumber":12,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"highorbit25"},"content":"* **New Feature**: `sort`","lastModifiedDate":"2022-11-04"},{"lineNumber":14,"author":{"gitId":"highorbit25"},"content":"  - _What it does_: The `sort` features allow users to sort the StudMap by the specified attribute in the specified order.","lastModifiedDate":"2022-11-04"},{"lineNumber":15,"author":{"gitId":"highorbit25"},"content":"  - _Justification_: The user (teaching assistants) might want to organise and sort the data stored on StudMap according to attributes. The user might wish to focus on certain aspect of the module to track. For instance, the user may wish to clamp down on absenteeism and identify students who are constantly missing from class. To achieve this, he can sort the StudMap by `ATTENDANCE`. Similarly, to get a better sense of participation rates in his class, the user can sort the StudMap by `PARTICIPATION` to identify those students who are lacking participation and prompt them to participate more in class.","lastModifiedDate":"2022-11-04"},{"lineNumber":16,"author":{"gitId":"highorbit25"},"content":"  - _Highlights_: In the original addressbook, there were no sorting feature. After adding in new contacts into the addressbook, the whole list of contacts can get rather messy as the contacts were unsorted and displayed in the order of when they were added into the list. Having a `sort` feature can help the user to better organise the data available on the list such as sorting by `Name` to get a neater list whereby the list is sorted by `Name` in alphabetical order. Sorting is also useful to narrow down on specific `Attribute` the user is interested in and make better sense of it through sorting it in either `Ascending` or `Descending` order. To implement the feature, I have also created the `Attribute` class. Any new attributes to be enabled for sorting could be specified in the `AttributeType` enum class and the `Comparator` to be used for sorting within the `Attribute` class.","lastModifiedDate":"2022-11-04"},{"lineNumber":17,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":18,"author":{"gitId":"highorbit25"},"content":"* **New Feature**: `participate` and `unparticipate`","lastModifiedDate":"2022-11-04"},{"lineNumber":19,"author":{"gitId":"highorbit25"},"content":"  - _What it does_: By using the `participate`, the user (teaching assistants) can create records of participation for the student and toggle between the supported status for participation. The user can also use the `unparticipate` command to remove records of the participation components completely.","lastModifiedDate":"2022-11-04"},{"lineNumber":20,"author":{"gitId":"highorbit25"},"content":"  - _Justification_: The user may wish to keep track of the participation of students in class. By introducing this feature, the user can record down the participation requirements for the module and keep track of which components students have participated in. This will help the user to view participation rates in class to identify students who lack participation as well as to determine the participation grade for students.","lastModifiedDate":"2022-11-04"},{"lineNumber":21,"author":{"gitId":"highorbit25"},"content":"  - _Highlights_: `participate` and `unparticipate` works well with the `all` command to do mass recording of participation efficiently. Participation rates derived from the participation records works well with `sort` to give a StudMap sorted by participation rates.","lastModifiedDate":"2022-11-04"},{"lineNumber":22,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":23,"author":{"gitId":"comicalromance"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-28"},{"lineNumber":24,"author":{"gitId":"highorbit25"},"content":"  - Provided the necessary documentation for the `sort`, `participate`, `unparticipate` features for both the User Guide and Developer Guide with UML Diagrams.[#108](https://github.com/AY2223S1-CS2103T-W13-1/tp/pull/108)","lastModifiedDate":"2022-11-06"},{"lineNumber":25,"author":{"gitId":"highorbit25"},"content":"  - ![](../images/diagrams/MarkActivityDiagram.png)","lastModifiedDate":"2022-11-07"},{"lineNumber":26,"author":{"gitId":"highorbit25"},"content":"  - ![](../images/diagrams/SortCommandSequenceDiagram.png)","lastModifiedDate":"2022-11-07"},{"lineNumber":27,"author":{"gitId":"highorbit25"},"content":"  - ![](../images/diagrams/SortActivityDiagram.png)","lastModifiedDate":"2022-11-07"},{"lineNumber":28,"author":{"gitId":"highorbit25"},"content":"  - Updated use cases for `sort`, `participate`, `unparticipate`.","lastModifiedDate":"2022-11-07"},{"lineNumber":29,"author":{"gitId":"highorbit25"},"content":"  - Updated manual testing instructions for `add`, `sort`, `participate`, `unparticipate`.","lastModifiedDate":"2022-11-07"},{"lineNumber":30,"author":{"gitId":"highorbit25"},"content":"  - Reviewed User Guide and Developer Guide as a whole for final submission","lastModifiedDate":"2022-11-06"},{"lineNumber":31,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":32,"author":{"gitId":"highorbit25"},"content":"* **Project management**:","lastModifiedDate":"2022-11-04"},{"lineNumber":33,"author":{"gitId":"highorbit25"},"content":"  * Review and merge functional PRs for `v1.3` and `v1.4`","lastModifiedDate":"2022-11-07"}],"authorContributionMap":{"highorbit25":20,"comicalromance":13}},{"path":"docs/team/lpohsien.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":2,"author":{"gitId":"comicalromance"},"content":"layout: page","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"comicalromance"},"content":"title: Po Hsien\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"comicalromance"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"comicalromance"},"content":"### Project: StudMap","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"lpohsien"},"content":"StudMap is a lightweight desktop application that addresses your needs of managing the student records across multiple spreadsheets. Using a CLI (Command Line Interface) approach, we mitigates the need for teaching assistants to navigate throught convoluted menus and buttons when keeping track of the administrative details for the students. It is written in Java with the GUI implemented using JavaFX. \u003cbr\u003e","lastModifiedDate":"2022-11-01"},{"lineNumber":9,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":10,"author":{"gitId":"lpohsien"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-11-01"},{"lineNumber":11,"author":{"gitId":"lpohsien"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dlpohsien)","lastModifiedDate":"2022-11-01"},{"lineNumber":12,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"lpohsien"},"content":"* **New Feature**: `tag` and `untag`","lastModifiedDate":"2022-11-01"},{"lineNumber":14,"author":{"gitId":"lpohsien"},"content":"  - _What it does_: The `tag` features allow users to append tags to the student, while the `untag` commands allows the user to remove specific tags from the students","lastModifiedDate":"2022-11-01"},{"lineNumber":15,"author":{"gitId":"lpohsien"},"content":"  - _Justification_: The user (teaching assistants) might be required to keep track of the students, as such, he or she might want to differentiate the students using tags. However, some might require multiple tags to track different aspects of the student. For example, one might want to tag a student as required to attend 2 separate remedial classes. In this case, the two tags might not be added or remove at the same time. With the `tag` and `untag` commands, this provide the user with more fine-grained control over the taggin process of the student.","lastModifiedDate":"2022-11-01"},{"lineNumber":16,"author":{"gitId":"lpohsien"},"content":"  - _Highlights_: In the original addressbook, the tagging features is combined with the `edit` feature for modifying the records of a student. Appending tags was troublesome as the `edit` command overwrites pre-existing tags. Hence, I have built upon the existing `tag` attribute to create the `tag` features that allows cumulative addition for the tags. I have also introduced the mass operation feature for adding the tags. This mass operations was further improved by Sheyuan to be more general and extensible to other features as wel.","lastModifiedDate":"2022-11-01"},{"lineNumber":17,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":18,"author":{"gitId":"comicalromance"},"content":"* **New Feature**: `grade` and `ungrade`","lastModifiedDate":"2022-11-07"},{"lineNumber":19,"author":{"gitId":"lpohsien"},"content":"  - _What it does_: By using the `grade`, the user (teaching assistants) can create records of  assignment for the student and toggle between the supported status for assignment grading. The user can also use the `ungrade` command to remove records of the assignments completely.","lastModifiedDate":"2022-11-01"},{"lineNumber":20,"author":{"gitId":"lpohsien"},"content":"  - _Justification_: The user may have several assignments to mark from various students which he or she needs to keep track of. By introducing this feature, the user can record down the grading status for the assignments which serves to remind the user on which assignments he or she has not yet graded, allowing them to have a clearer view for their assignment grading process.","lastModifiedDate":"2022-11-01"},{"lineNumber":21,"author":{"gitId":"lpohsien"},"content":"  - _Highlights_: To implement the feature, I have also created the `Assignment` attribute for students. By using the `grade`, the teaching assistants can create records of assignment for the student and toggle between the supported status for assignment grading. The teaching assitant can also remove entries of the assignment using the `ungrade` command.","lastModifiedDate":"2022-11-01"},{"lineNumber":22,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":23,"author":{"gitId":"comicalromance"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-28"},{"lineNumber":24,"author":{"gitId":"lpohsien"},"content":"  - Provided the necessary documentation for the `tag`, `untag`, `grade` and `ungrade` feaatures for both the User Guide and","lastModifiedDate":"2022-11-01"},{"lineNumber":25,"author":{"gitId":"lpohsien"},"content":"  Developer Guide.[#165](https://github.com/AY2223S1-CS2103T-W13-1/tp/pull/165)","lastModifiedDate":"2022-11-01"},{"lineNumber":26,"author":{"gitId":"lpohsien"},"content":"  - Refactored the Developer Guide for the `edit`, `tag`, `mark`, `grade` such that they are grouped under the `EditStudent` features. These commands all servers similar purpose of editing specific attributes of the student. They also have very similar code structure as they are inheriting from the `EditStudentCommand` interface. By grouping these features together, it makes the documentation of implementation details for these commands to be more concise and readible. [#102](https://github.com/AY2223S1-CS2103T-W13-1/tp/pull/102)","lastModifiedDate":"2022-11-01"},{"lineNumber":27,"author":{"gitId":"lpohsien"},"content":"  -  Refactored develop guide to reflect the change from addressbook to studmap. Update the various UML diagrams to reference StudMap and modify class diagrams for the `model` component based on current implementation. [#99](https://github.com/AY2223S1-CS2103T-W13-1/tp/pull/99)","lastModifiedDate":"2022-11-01"},{"lineNumber":28,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":29,"author":{"gitId":"lpohsien"},"content":"* **Project management**:","lastModifiedDate":"2022-11-01"},{"lineNumber":30,"author":{"gitId":"lpohsien"},"content":"  * Review functional PRs for `v1.3`","lastModifiedDate":"2022-11-01"},{"lineNumber":31,"author":{"gitId":"lpohsien"},"content":"  * Updating demo screenshot on project notes for `v1.3`","lastModifiedDate":"2022-11-01"},{"lineNumber":32,"author":{"gitId":"lpohsien"},"content":"  * Review and merge various documentation PRs for `v1.4`","lastModifiedDate":"2022-11-01"},{"lineNumber":33,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":34,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":35,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"comicalromance":17,"lpohsien":18}},{"path":"docs/team/piyotato.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":2,"author":{"gitId":"comicalromance"},"content":"layout: page","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"comicalromance"},"content":"title: Sheyuan\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"comicalromance"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"comicalromance"},"content":"### Project: StudMap","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"Piyotato"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dpiyotato)","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":10,"author":{"gitId":"comicalromance"},"content":"* **Project management**:","lastModifiedDate":"2022-09-28"},{"lineNumber":11,"author":{"gitId":"Piyotato"},"content":"  * Helped to coordinate multiple team meetings","lastModifiedDate":"2022-11-04"},{"lineNumber":12,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"comicalromance"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-28"},{"lineNumber":14,"author":{"gitId":"Piyotato"},"content":"  * Proposed and implemented `StudentData` parameter object for easy extension of `Student` class so that features can be more easily implemented.","lastModifiedDate":"2022-11-04"},{"lineNumber":15,"author":{"gitId":"Piyotato"},"content":"    * Features hinging on this infrastructure include attendance/participation/assignment tracking, and new fields added to `Student`, including Telegram Handle, GitHub username.","lastModifiedDate":"2022-11-04"},{"lineNumber":16,"author":{"gitId":"Piyotato"},"content":"    * This infrastructure also eased the deletion of unneeded features, such as the `Address` field in `Student`.","lastModifiedDate":"2022-11-04"},{"lineNumber":17,"author":{"gitId":"Piyotato"},"content":"  * Planned and wrote the abstraction of student editing via multiple abstract classes, including `IndexCommand`, `EditStudentCommand`, and `StudentEditor` in order to unify behaviour. ","lastModifiedDate":"2022-11-04"},{"lineNumber":18,"author":{"gitId":"Piyotato"},"content":"    * Features hinging on this infrastructure include the commands `edit`, `mark`, `unmark`, `grade`, `ungrade`, `participate`, `unparticipate`, `delete`.","lastModifiedDate":"2022-11-07"},{"lineNumber":19,"author":{"gitId":"Piyotato"},"content":"  * Abstracted the idea of commands that require parsing an `index` in `IndexCommand`, so that all index-related behaviour can be changed in one place.","lastModifiedDate":"2022-11-04"},{"lineNumber":20,"author":{"gitId":"Piyotato"},"content":"    * This allowed the syntax of `all` to be used in all such commands, including those mentioned above.","lastModifiedDate":"2022-11-04"},{"lineNumber":21,"author":{"gitId":"Piyotato"},"content":"    * This improved the extensibility of the code to possibly support more sophisticated syntax for specifying `index` in commands without major refactors.","lastModifiedDate":"2022-11-04"},{"lineNumber":22,"author":{"gitId":"Piyotato"},"content":"  * Added the ability for some fields in `Student` such as `Email` and `Phone` to be left optional.","lastModifiedDate":"2022-11-04"},{"lineNumber":23,"author":{"gitId":"Piyotato"},"content":"  * Added `MultiStateAttribute` to abstract the commonalities betweeen `Attendance`, `Assignment`, and `Participation`.","lastModifiedDate":"2022-11-07"},{"lineNumber":24,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":25,"author":{"gitId":"comicalromance"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-28"},{"lineNumber":26,"author":{"gitId":"Piyotato"},"content":"  * Wrote the preface for User Guide","lastModifiedDate":"2022-11-07"},{"lineNumber":27,"author":{"gitId":"Piyotato"},"content":"  * Planned and organized the User Guide.","lastModifiedDate":"2022-11-07"},{"lineNumber":28,"author":{"gitId":"Piyotato"},"content":"  * Prepared the UI screenshots for the User Guide.","lastModifiedDate":"2022-11-07"},{"lineNumber":29,"author":{"gitId":"Piyotato"},"content":"  * Did general formatting of both User Guide and Developer Guide.","lastModifiedDate":"2022-11-07"},{"lineNumber":30,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":31,"author":{"gitId":"comicalromance"},"content":"* **Community**:","lastModifiedDate":"2022-09-28"},{"lineNumber":32,"author":{"gitId":"Piyotato"},"content":"  * Reviewed most functional pull requests from team members.","lastModifiedDate":"2022-11-07"},{"lineNumber":33,"author":{"gitId":"Piyotato"},"content":"  * Ensured good code quality by suggesting appropriate implementation strategies.","lastModifiedDate":"2022-11-07"},{"lineNumber":34,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"Piyotato":18,"comicalromance":16}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2020-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2020-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2020-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"Piyotato"},"content":"![Output displayed](../images/diagrams/add-remark/RemarkHello.png)","lastModifiedDate":"2022-11-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"Piyotato"},"content":"![The relationship between RemarkCommand and Command](../images/diagrams/add-remark/CommandInterface.png)","lastModifiedDate":"2022-11-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2021-08-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2020-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"Create a `RemarkCommandParser` class in the `seedu.address.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2020-07-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"Piyotato"},"content":"![The relationship between Parser and RemarkCommandParser](../images/diagrams/add-remark/ParserInterface.png)","lastModifiedDate":"2022-11-07"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"comicalromance"},"content":"Create a new `Remark` in `seedu.address.model.student`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2022-10-15"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":235,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"-"},"content":"Simply add the following to [`seedu.address.ui.PersonCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2022-01-02"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-01-02"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"Piyotato"},"content":"![$remark shows up in each entry](../images/diagrams/add-remark/$Remark.png)","lastModifiedDate":"2022-11-07"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"Piyotato"},"content":"![The remark label is bound properly!](../images/diagrams/add-remark/RemarkBound.png)","lastModifiedDate":"2022-11-07"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-08-01"},{"lineNumber":348,"author":{"gitId":"-"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-08-01"},{"lineNumber":349,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"Piyotato"},"content":"![Congratulations!](../images/diagrams/add-remark/RemarkComplete.png)","lastModifiedDate":"2022-11-07"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":378,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"Piyotato"},"content":"![Using the context menu to jump to tests](../images/diagrams/add-remark/ContextMenu.png)","lastModifiedDate":"2022-11-07"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"Piyotato"},"content":"![Creating a test for `execute`.](../images/diagrams/add-remark/CreateTest.png)","lastModifiedDate":"2022-11-07"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"Piyotato":8,"-":392,"comicalromance":1}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Person` class.","lastModifiedDate":"2021-08-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"comicalromance"},"content":"The `address` field in `Person` is actually an instance of the `seedu.address.model.student.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2022-10-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2021-08-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Let’s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"1. Safe delete the field `address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**`invalidPersonAddressBook.json`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":111,"comicalromance":1}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"Piyotato"},"content":"![ArchitectureDiagram](../images/diagrams/ArchitectureDiagram.png)","lastModifiedDate":"2022-11-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `seedu.address.logic.Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"A quick look at the `seedu.address.logic.Logic` (an extract given below) confirms that this indeed might be what we’re looking for.","lastModifiedDate":"2021-07-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `AddressBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"lpohsien"},"content":"   \u003cimg src\u003d\"../images/diagrams/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"       Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"       Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"       if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"       model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"   * it uses the `setPerson()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the person data.","lastModifiedDate":"2021-07-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"   * it uses the `updateFilteredPersonList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ persons.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     FYI, The \u0027filtered list\u0027 is the list of persons resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the persons so that the user can see the edited person along with all other persons. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of persons is being tracked.","lastModifiedDate":"2021-07-31"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     \u003cimg src\u003d\"../images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"../images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** When trying to step into a statement such as `storage.saveAddressBook(model.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"1.  As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonAddressBook#saveAddressBook()` method which calls the `JsonSerializableAddressBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook` constructor:**","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        persons.addAll(","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                  .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    5.  Add a new field to `Person`","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Piyotato":1,"-":299,"lpohsien":1}},{"path":"src/main/java/seedu/studmap/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.commons.core.LogsCenter;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.commons.util.FileUtil;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AppParameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return appParameters;","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Objects.equals(getConfigPath(), otherAppParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return configPath.hashCode();","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"-":61,"comicalromance":3}},{"path":"src/main/java/seedu/studmap/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"-":24,"comicalromance":1}},{"path":"src/main/java/seedu/studmap/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.commons.core.Config;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.commons.core.LogsCenter;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.commons.core.Version;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.commons.util.ConfigUtil;","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.commons.util.StringUtil;","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.logic.Logic;","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.logic.LogicManager;","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.Model;","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.ModelManager;","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.ReadOnlyStudMap;","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.StudMap;","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.UserPrefs;","lastModifiedDate":"2022-10-15"},{"lineNumber":24,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.util.SampleDataUtil;","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.storage.JsonStudMapStorage;","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.storage.JsonUserPrefsStorage;","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.storage.Storage;","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.storage.StorageManager;","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.storage.StudMapStorage;","lastModifiedDate":"2022-10-15"},{"lineNumber":30,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.storage.UserPrefsStorage;","lastModifiedDate":"2022-10-15"},{"lineNumber":31,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.ui.Ui;","lastModifiedDate":"2022-10-15"},{"lineNumber":32,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.ui.UiManager;","lastModifiedDate":"2022-10-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 0, true);","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"comicalromance"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing StudMap ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-10-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"comicalromance"},"content":"        StudMapStorage studMapStorage \u003d new JsonStudMapStorage(userPrefs.getStudMapFilePath());","lastModifiedDate":"2022-10-15"},{"lineNumber":60,"author":{"gitId":"comicalromance"},"content":"        storage \u003d new StorageManager(studMapStorage, userPrefsStorage);","lastModifiedDate":"2022-10-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"comicalromance"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s student map and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2022-10-15"},{"lineNumber":73,"author":{"gitId":"comicalromance"},"content":"     * The data from the sample student map will be used instead if {@code storage}\u0027s student map is not found,","lastModifiedDate":"2022-10-15"},{"lineNumber":74,"author":{"gitId":"comicalromance"},"content":"     * or an empty student map will be used instead if errors occur when reading {@code storage}\u0027s student map.","lastModifiedDate":"2022-10-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":77,"author":{"gitId":"comicalromance"},"content":"        Optional\u003cReadOnlyStudMap\u003e studMapOptional;","lastModifiedDate":"2022-10-15"},{"lineNumber":78,"author":{"gitId":"comicalromance"},"content":"        ReadOnlyStudMap initialData;","lastModifiedDate":"2022-10-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"comicalromance"},"content":"            studMapOptional \u003d storage.readStudMap();","lastModifiedDate":"2022-10-15"},{"lineNumber":81,"author":{"gitId":"comicalromance"},"content":"            if (!studMapOptional.isPresent()) {","lastModifiedDate":"2022-10-15"},{"lineNumber":82,"author":{"gitId":"comicalromance"},"content":"                logger.info(\"Data file not found. Will be starting with a sample StudMap\");","lastModifiedDate":"2022-10-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"comicalromance"},"content":"            initialData \u003d studMapOptional.orElseGet(SampleDataUtil::getSampleStudMap);","lastModifiedDate":"2022-10-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"comicalromance"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty StudMap\");","lastModifiedDate":"2022-10-15"},{"lineNumber":87,"author":{"gitId":"comicalromance"},"content":"            initialData \u003d new StudMap();","lastModifiedDate":"2022-10-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":89,"author":{"gitId":"comicalromance"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty StudMap\");","lastModifiedDate":"2022-10-15"},{"lineNumber":90,"author":{"gitId":"comicalromance"},"content":"            initialData \u003d new StudMap();","lastModifiedDate":"2022-10-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"comicalromance"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty StudMap\");","lastModifiedDate":"2022-10-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"comicalromance"},"content":"        logger.info(\"Starting StudMap \" + MainApp.VERSION);","lastModifiedDate":"2022-10-15"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"comicalromance"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Student Map ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-10-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":140,"comicalromance":43}},{"path":"src/main/java/seedu/studmap/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.commons.core;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config o \u003d (Config) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, o.logLevel)","lastModifiedDate":"2018-12-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, o.userPrefsFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2018-12-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        sb.append(\"Current log level : \" + logLevel);","lastModifiedDate":"2018-12-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        sb.append(\"\\nPreference file Location : \" + userPrefsFilePath);","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":62,"comicalromance":1}},{"path":"src/main/java/seedu/studmap/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.commons.core;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"comicalromance"},"content":"    private static final double DEFAULT_HEIGHT \u003d 660;","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"comicalromance"},"content":"    private static final double DEFAULT_WIDTH \u003d 810;","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings o \u003d (GuiSettings) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d o.windowWidth","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d o.windowHeight","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        sb.append(\"Width : \" + windowWidth + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        sb.append(\"Height : \" + windowHeight + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        sb.append(\"Position : \" + windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":76,"comicalromance":3}},{"path":"src/main/java/seedu/studmap/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.commons.core;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"comicalromance"},"content":"    private static final String LOG_FILE \u003d \"studmap.log\";","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":110,"comicalromance":2}},{"path":"src/main/java/seedu/studmap/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.commons.core;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"comicalromance"},"content":"    public static final String MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX \u003d \"The student index provided is invalid\";","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"comicalromance"},"content":"    public static final String MESSAGE_STUDENTS_LISTED_OVERVIEW \u003d \"%1$d students listed!\";","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"Piyotato"},"content":"    public static final String MESSAGE_DUPLICATE_STUDENT \u003d \"Student already exists!\";","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Piyotato":1,"-":10,"comicalromance":3}},{"path":"src/main/java/seedu/studmap/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.commons.core;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Version)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Version other \u003d (Version) obj;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return compareTo(other) \u003d\u003d 0;","lastModifiedDate":"2018-08-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":115,"comicalromance":1}},{"path":"src/main/java/seedu/studmap/commons/core/index/AllIndexGenerator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Piyotato"},"content":"package seedu.studmap.commons.core.index;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"Piyotato"},"content":"import java.util.List;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"Piyotato"},"content":"import seedu.studmap.model.Model;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"Piyotato"},"content":"/**","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"Piyotato"},"content":" * An IndexListGenerator that generates all the indices of filtered students.","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"Piyotato"},"content":" */","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"Piyotato"},"content":"public class AllIndexGenerator extends IndexListGenerator {","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"Piyotato"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"Piyotato"},"content":"    public List\u003cIndex\u003e apply(Model model) {","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"Piyotato"},"content":"        return model.getFilteredStudentIndices();","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"Piyotato"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"Piyotato"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"Piyotato"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"Piyotato"},"content":"            return true;","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"Piyotato"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"Piyotato"},"content":"        if (other \u003d\u003d null) {","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"Piyotato"},"content":"            return false;","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"Piyotato"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"Piyotato"},"content":"        if (!(other instanceof AllIndexGenerator)) {","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"Piyotato"},"content":"            return false;","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"Piyotato"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"Piyotato"},"content":"        return true;","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"Piyotato"},"content":"}","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"Piyotato":34}},{"path":"src/main/java/seedu/studmap/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.commons.core.index;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof Index // instanceof handles nulls","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"-":53,"comicalromance":1}},{"path":"src/main/java/seedu/studmap/commons/core/index/IndexListGenerator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Piyotato"},"content":"package seedu.studmap.commons.core.index;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"Piyotato"},"content":"import java.util.List;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"Piyotato"},"content":"import java.util.function.Function;","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"Piyotato"},"content":"import seedu.studmap.model.Model;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"Piyotato"},"content":"/**","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"Piyotato"},"content":" * An abstract class for a functional interface that generates indices.","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"Piyotato"},"content":" */","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"Piyotato"},"content":"public abstract class IndexListGenerator implements Function\u003cModel, List\u003cIndex\u003e\u003e {","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"Piyotato"},"content":"}","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"Piyotato":12}},{"path":"src/main/java/seedu/studmap/commons/core/index/SingleIndexGenerator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Piyotato"},"content":"package seedu.studmap.commons.core.index;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"Piyotato"},"content":"import java.util.List;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"Piyotato"},"content":"import seedu.studmap.model.Model;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"Piyotato"},"content":"/**","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"Piyotato"},"content":" * An IndexListGenerator that generates a list containing a single index.","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"Piyotato"},"content":" */","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"Piyotato"},"content":"public class SingleIndexGenerator extends IndexListGenerator {","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"Piyotato"},"content":"    private Index index;","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"Piyotato"},"content":"    public SingleIndexGenerator(Index index) {","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"Piyotato"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"Piyotato"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"Piyotato"},"content":"    public List\u003cIndex\u003e apply(Model model) {","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"Piyotato"},"content":"        return List.of(index);","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"Piyotato"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"Piyotato"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"Piyotato"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"Piyotato"},"content":"            return true;","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"Piyotato"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"Piyotato"},"content":"        if (other \u003d\u003d null) {","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"Piyotato"},"content":"            return false;","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"Piyotato"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"Piyotato"},"content":"        if (!(other instanceof SingleIndexGenerator)) {","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"Piyotato"},"content":"            return false;","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"Piyotato"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"Piyotato"},"content":"        SingleIndexGenerator e \u003d (SingleIndexGenerator) other;","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"Piyotato"},"content":"        return this.index.equals(e.index);","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"Piyotato"},"content":"}","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"Piyotato":40}},{"path":"src/main/java/seedu/studmap/commons/exceptions/DataConversionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.commons.exceptions;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error during conversion of data from one format to another","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class DataConversionException extends Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public DataConversionException(Exception cause) {","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(cause);","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":10,"comicalromance":1}},{"path":"src/main/java/seedu/studmap/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.commons.exceptions;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param cause of the main exception","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":20,"comicalromance":1}},{"path":"src/main/java/seedu/studmap/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.commons.util;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.MainApp;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A container for App specific utility functions","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2020-05-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":40,"comicalromance":2}},{"path":"src/main/java/seedu/studmap/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.commons.util;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":8,"author":{"gitId":"lpohsien"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /** @see #requireAllNonNull(Collection) */","lastModifiedDate":"2017-05-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":37,"author":{"gitId":"lpohsien"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":38,"author":{"gitId":"lpohsien"},"content":"     * Formats the collection to be more a user-friendly string by ommiting the brackets","lastModifiedDate":"2022-10-24"},{"lineNumber":39,"author":{"gitId":"lpohsien"},"content":"     * at the end. The individual element of {@code items} is formatted using their","lastModifiedDate":"2022-10-24"},{"lineNumber":40,"author":{"gitId":"lpohsien"},"content":"     * respective {@code toString()}.","lastModifiedDate":"2022-10-24"},{"lineNumber":41,"author":{"gitId":"lpohsien"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":42,"author":{"gitId":"lpohsien"},"content":"    public static String collectionToString(Collection\u003c?\u003e items) {","lastModifiedDate":"2022-10-24"},{"lineNumber":43,"author":{"gitId":"lpohsien"},"content":"        String res \u003d items.stream().map(item -\u003e item.toString() + \", \").collect(Collectors.joining());","lastModifiedDate":"2022-10-24"},{"lineNumber":44,"author":{"gitId":"lpohsien"},"content":"        return res.substring(0, res.length() - 2);","lastModifiedDate":"2022-10-24"},{"lineNumber":45,"author":{"gitId":"lpohsien"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":34,"comicalromance":1,"lpohsien":11}},{"path":"src/main/java/seedu/studmap/commons/util/ConfigUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.commons.util;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.commons.core.Config;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A class for accessing the Config File.","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ConfigUtil {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(configFilePath, Config.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void saveConfig(Config config, Path configFilePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(config, configFilePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"-":20,"comicalromance":3}},{"path":"src/main/java/seedu/studmap/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.commons.util;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":82,"comicalromance":1}},{"path":"src/main/java/seedu/studmap/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.commons.util;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.commons.core.LogsCenter;","lastModifiedDate":"2022-10-15"},{"lineNumber":24,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the Json object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2016-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid json file.","lastModifiedDate":"2016-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize Json file has to correspond to the structure in the class given here.","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            logger.info(\"Json file \" + filePath + \" not found\");","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new DataConversionException(e);","lastModifiedDate":"2016-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":140,"comicalromance":3}},{"path":"src/main/java/seedu/studmap/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.commons.util;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":66,"comicalromance":2}},{"path":"src/main/java/seedu/studmap/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.logic;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"comicalromance"},"content":"import java.io.File;","lastModifiedDate":"2022-10-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.commons.core.GuiSettings;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.logic.commands.CommandResult;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.logic.imports.exceptions.ImportException;","lastModifiedDate":"2022-10-28"},{"lineNumber":11,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.ReadOnlyStudMap;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.student.Student;","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"comicalromance"},"content":"     * Returns the StudMap.","lastModifiedDate":"2022-10-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"comicalromance"},"content":"     * @see seedu.studmap.model.Model#getStudMap()","lastModifiedDate":"2022-10-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"comicalromance"},"content":"    ReadOnlyStudMap getStudMap();","lastModifiedDate":"2022-10-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":35,"author":{"gitId":"comicalromance"},"content":"    /** Returns an unmodifiable view of the filtered list of students */","lastModifiedDate":"2022-10-15"},{"lineNumber":36,"author":{"gitId":"comicalromance"},"content":"    ObservableList\u003cStudent\u003e getFilteredStudentList();","lastModifiedDate":"2022-10-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"comicalromance"},"content":"     * Returns the user prefs\u0027 student map file path.","lastModifiedDate":"2022-10-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"comicalromance"},"content":"    Path getStudMapFilePath();","lastModifiedDate":"2022-10-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":53,"author":{"gitId":"comicalromance"},"content":"    String importFile(File file) throws ImportException;","lastModifiedDate":"2022-10-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"-":36,"comicalromance":18}},{"path":"src/main/java/seedu/studmap/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.logic;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"comicalromance"},"content":"import java.io.File;","lastModifiedDate":"2022-10-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.commons.core.GuiSettings;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.commons.core.LogsCenter;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.logic.commands.Command;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.logic.commands.CommandResult;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.logic.imports.ImportCsv;","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.logic.imports.exceptions.ImportException;","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.logic.parser.StudMapParser;","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.Model;","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.ReadOnlyStudMap;","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.student.Student;","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.storage.Storage;","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"comicalromance"},"content":"    private final StudMapParser studMapParser;","lastModifiedDate":"2022-10-15"},{"lineNumber":33,"author":{"gitId":"comicalromance"},"content":"    private final ImportCsv importer;","lastModifiedDate":"2022-10-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"comicalromance"},"content":"        studMapParser \u003d new StudMapParser();","lastModifiedDate":"2022-10-15"},{"lineNumber":42,"author":{"gitId":"comicalromance"},"content":"        importer \u003d new ImportCsv();","lastModifiedDate":"2022-10-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"comicalromance"},"content":"        Command command \u003d studMapParser.parseCommand(commandText);","lastModifiedDate":"2022-10-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"comicalromance"},"content":"            storage.saveStudMap(model.getStudMap());","lastModifiedDate":"2022-10-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":63,"author":{"gitId":"comicalromance"},"content":"    public ReadOnlyStudMap getStudMap() {","lastModifiedDate":"2022-10-15"},{"lineNumber":64,"author":{"gitId":"comicalromance"},"content":"        return model.getStudMap();","lastModifiedDate":"2022-10-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":68,"author":{"gitId":"comicalromance"},"content":"    public ObservableList\u003cStudent\u003e getFilteredStudentList() {","lastModifiedDate":"2022-10-15"},{"lineNumber":69,"author":{"gitId":"comicalromance"},"content":"        return model.getFilteredStudentList();","lastModifiedDate":"2022-10-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"comicalromance"},"content":"    public Path getStudMapFilePath() {","lastModifiedDate":"2022-10-15"},{"lineNumber":74,"author":{"gitId":"comicalromance"},"content":"        return model.getStudMapFilePath();","lastModifiedDate":"2022-10-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":87,"author":{"gitId":"comicalromance"},"content":"    @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":88,"author":{"gitId":"comicalromance"},"content":"    public String importFile(File file) throws ImportException {","lastModifiedDate":"2022-10-28"},{"lineNumber":89,"author":{"gitId":"comicalromance"},"content":"        return importer.execute(model, file);","lastModifiedDate":"2022-10-28"},{"lineNumber":90,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"-":59,"comicalromance":32}},{"path":"src/main/java/seedu/studmap/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.logic.commands;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"dr-arrgghh"},"content":"import static seedu.studmap.logic.parser.CliSyntax.PREFIX_GIT;","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"dr-arrgghh"},"content":"import static seedu.studmap.logic.parser.CliSyntax.PREFIX_HANDLE;","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"dr-arrgghh"},"content":"import static seedu.studmap.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.Model;","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.student.Student;","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"comicalromance"},"content":" * Adds a student to the student map.","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"comicalromance"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a student to the student map. \"","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":27,"author":{"gitId":"comicalromance"},"content":"            + PREFIX_MODULE + \"MODULE \"","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"dr-arrgghh"},"content":"            + PREFIX_ID + \"ID \"","lastModifiedDate":"2022-10-25"},{"lineNumber":29,"author":{"gitId":"Piyotato"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"Piyotato"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"Piyotato"},"content":"            + \"[\" + PREFIX_GIT + \"GITNAME] \"","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"Piyotato"},"content":"            + \"[\" + PREFIX_HANDLE + \"HANDLE] \"","lastModifiedDate":"2022-10-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"comicalromance"},"content":"            + PREFIX_MODULE + \"CS2103T \"","lastModifiedDate":"2022-10-26"},{"lineNumber":39,"author":{"gitId":"dr-arrgghh"},"content":"            + PREFIX_ID + \"E1234567 \"","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"dr-arrgghh"},"content":"            + PREFIX_GIT + \"user1 \"","lastModifiedDate":"2022-10-25"},{"lineNumber":41,"author":{"gitId":"dr-arrgghh"},"content":"            + PREFIX_HANDLE + \"@user1 \"","lastModifiedDate":"2022-10-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"comicalromance"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New student added: %1$s\";","lastModifiedDate":"2022-10-15"},{"lineNumber":46,"author":{"gitId":"comicalromance"},"content":"    public static final String MESSAGE_DUPLICATE_STUDENT \u003d \"This student already exists in the student map\";","lastModifiedDate":"2022-10-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"comicalromance"},"content":"    private final Student toAdd;","lastModifiedDate":"2022-10-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"comicalromance"},"content":"     * Creates an AddCommand to add the specified {@code Student}","lastModifiedDate":"2022-10-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"comicalromance"},"content":"    public AddCommand(Student student) {","lastModifiedDate":"2022-10-15"},{"lineNumber":54,"author":{"gitId":"comicalromance"},"content":"        requireNonNull(student);","lastModifiedDate":"2022-10-15"},{"lineNumber":55,"author":{"gitId":"comicalromance"},"content":"        toAdd \u003d student;","lastModifiedDate":"2022-10-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"comicalromance"},"content":"        if (model.hasStudent(toAdd)) {","lastModifiedDate":"2022-10-15"},{"lineNumber":63,"author":{"gitId":"comicalromance"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_STUDENT);","lastModifiedDate":"2022-10-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"comicalromance"},"content":"        model.addStudent(toAdd);","lastModifiedDate":"2022-10-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"dr-arrgghh":7,"Piyotato":4,"-":42,"comicalromance":23}},{"path":"src/main/java/seedu/studmap/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.logic.commands;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.Model;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.StudMap;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"comicalromance"},"content":" * Clears the student map.","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"comicalromance"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"StudMap has been cleared!\";","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"comicalromance"},"content":"        model.setStudMap(new StudMap());","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":17,"comicalromance":6}},{"path":"src/main/java/seedu/studmap/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.logic.commands;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.Model;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":17,"comicalromance":3}},{"path":"src/main/java/seedu/studmap/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.logic.commands;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"comicalromance"},"content":"    /** File browser should be shown to the user. */","lastModifiedDate":"2022-10-28"},{"lineNumber":18,"author":{"gitId":"comicalromance"},"content":"    private final boolean chooseFile;","lastModifiedDate":"2022-10-28"},{"lineNumber":19,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"comicalromance"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean chooseFile, boolean exit) {","lastModifiedDate":"2022-10-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"comicalromance"},"content":"        this.chooseFile \u003d chooseFile;","lastModifiedDate":"2022-10-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"comicalromance"},"content":"        this(feedbackToUser, false, false, false);","lastModifiedDate":"2022-10-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"comicalromance"},"content":"    public boolean isChooseFile() {","lastModifiedDate":"2022-10-28"},{"lineNumber":54,"author":{"gitId":"comicalromance"},"content":"        return chooseFile;","lastModifiedDate":"2022-10-28"},{"lineNumber":55,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":56,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"Piyotato"},"content":"    @Override","lastModifiedDate":"2022-11-06"},{"lineNumber":80,"author":{"gitId":"Piyotato"},"content":"    public String toString() {","lastModifiedDate":"2022-11-06"},{"lineNumber":81,"author":{"gitId":"Piyotato"},"content":"        return feedbackToUser;","lastModifiedDate":"2022-11-06"},{"lineNumber":82,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":83,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Piyotato":5,"-":68,"comicalromance":11}},{"path":"src/main/java/seedu/studmap/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.logic.commands;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"comicalromance"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.commons.core.Messages;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.commons.core.index.Index;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.commons.core.index.IndexListGenerator;","lastModifiedDate":"2022-11-07"},{"lineNumber":11,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.Model;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.student.Student;","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"comicalromance"},"content":" * Deletes a student identified using its displayed index from the student map.","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"comicalromance"},"content":"            + \": Deletes the student identified by the index number used in the displayed student list.\\n\"","lastModifiedDate":"2022-10-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"comicalromance"},"content":"    public static final String MESSAGE_DELETE_SINGLE_STUDENT_SUCCESS \u003d \"Deleted Student: %1$s\";","lastModifiedDate":"2022-11-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"comicalromance"},"content":"    public static final String MESSAGE_DELETE_MULTI_STUDENT_SUCCESS \u003d \"Deleted %1$s students\";","lastModifiedDate":"2022-11-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"comicalromance"},"content":"    private final IndexListGenerator indicesToEdit;","lastModifiedDate":"2022-11-07"},{"lineNumber":32,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":33,"author":{"gitId":"comicalromance"},"content":"    public DeleteCommand(IndexListGenerator indicesToEdit) {","lastModifiedDate":"2022-11-07"},{"lineNumber":34,"author":{"gitId":"comicalromance"},"content":"        this.indicesToEdit \u003d indicesToEdit;","lastModifiedDate":"2022-11-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"comicalromance"},"content":"        List\u003cStudent\u003e lastShownList \u003d model.getFilteredStudentList();","lastModifiedDate":"2022-10-15"},{"lineNumber":42,"author":{"gitId":"comicalromance"},"content":"        List\u003cStudent\u003e studentsToDelete \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-11-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"comicalromance"},"content":"        for (Index index : indicesToEdit.apply(model)) {","lastModifiedDate":"2022-11-07"},{"lineNumber":45,"author":{"gitId":"comicalromance"},"content":"            if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-11-07"},{"lineNumber":46,"author":{"gitId":"comicalromance"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"comicalromance"},"content":"            studentsToDelete.add(lastShownList.get(index.getZeroBased()));","lastModifiedDate":"2022-11-07"},{"lineNumber":49,"author":{"gitId":"comicalromance"},"content":"        }","lastModifiedDate":"2022-11-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"comicalromance"},"content":"        studentsToDelete.forEach(model::deleteStudent);","lastModifiedDate":"2022-11-07"},{"lineNumber":52,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":53,"author":{"gitId":"comicalromance"},"content":"        if (studentsToDelete.size() \u003d\u003d 1) {","lastModifiedDate":"2022-11-07"},{"lineNumber":54,"author":{"gitId":"comicalromance"},"content":"            return new CommandResult(String.format(MESSAGE_DELETE_SINGLE_STUDENT_SUCCESS, studentsToDelete.get(0)));","lastModifiedDate":"2022-11-07"},{"lineNumber":55,"author":{"gitId":"comicalromance"},"content":"        } else {","lastModifiedDate":"2022-11-07"},{"lineNumber":56,"author":{"gitId":"comicalromance"},"content":"            return new CommandResult(String.format(MESSAGE_DELETE_MULTI_STUDENT_SUCCESS, studentsToDelete.size()));","lastModifiedDate":"2022-11-07"},{"lineNumber":57,"author":{"gitId":"comicalromance"},"content":"        }","lastModifiedDate":"2022-11-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"comicalromance"},"content":"                \u0026\u0026 indicesToEdit.equals(((DeleteCommand) other).indicesToEdit)); // indexListGenerator check","lastModifiedDate":"2022-11-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":34,"comicalromance":32}},{"path":"src/main/java/seedu/studmap/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.logic.commands;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"dr-arrgghh"},"content":"import static seedu.studmap.logic.parser.CliSyntax.PREFIX_GIT;","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"dr-arrgghh"},"content":"import static seedu.studmap.logic.parser.CliSyntax.PREFIX_HANDLE;","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"dr-arrgghh"},"content":"import static seedu.studmap.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"Piyotato"},"content":"import seedu.studmap.commons.core.index.IndexListGenerator;","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.commons.util.CollectionUtil;","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"Piyotato"},"content":"import seedu.studmap.logic.commands.commons.StudentEditor;","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.Model;","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.student.Email;","lastModifiedDate":"2022-10-15"},{"lineNumber":24,"author":{"gitId":"dr-arrgghh"},"content":"import seedu.studmap.model.student.GitName;","lastModifiedDate":"2022-10-25"},{"lineNumber":25,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.student.Module;","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.student.Name;","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.student.Phone;","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.student.Student;","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.student.StudentData;","lastModifiedDate":"2022-10-15"},{"lineNumber":30,"author":{"gitId":"dr-arrgghh"},"content":"import seedu.studmap.model.student.StudentID;","lastModifiedDate":"2022-10-25"},{"lineNumber":31,"author":{"gitId":"dr-arrgghh"},"content":"import seedu.studmap.model.student.TeleHandle;","lastModifiedDate":"2022-10-25"},{"lineNumber":32,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.tag.Tag;","lastModifiedDate":"2022-10-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"comicalromance"},"content":" * Edits the details of an existing student in the student map.","lastModifiedDate":"2022-10-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"Piyotato"},"content":"public class EditCommand extends EditStudentCommand\u003cEditCommand.EditCommandStudentEditor\u003e {","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"comicalromance"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the student identified \"","lastModifiedDate":"2022-10-15"},{"lineNumber":42,"author":{"gitId":"comicalromance"},"content":"            + \"by the index number used in the displayed student list. \"","lastModifiedDate":"2022-10-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"comicalromance"},"content":"            + \"[\" + PREFIX_MODULE + \"MODULE] \"","lastModifiedDate":"2022-10-26"},{"lineNumber":49,"author":{"gitId":"dr-arrgghh"},"content":"            + \"[\" + PREFIX_ID + \"ID] \"","lastModifiedDate":"2022-10-25"},{"lineNumber":50,"author":{"gitId":"comicalromance"},"content":"            + \"[\" + PREFIX_GIT + \"GITNAME] \"","lastModifiedDate":"2022-11-03"},{"lineNumber":51,"author":{"gitId":"dr-arrgghh"},"content":"            + \"[\" + PREFIX_HANDLE + \"TELEHANDLE] \"","lastModifiedDate":"2022-10-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"comicalromance"},"content":"    public static final String MESSAGE_EDIT_STUDENT_SUCCESS \u003d \"Edited Student: %1$s\";","lastModifiedDate":"2022-10-15"},{"lineNumber":58,"author":{"gitId":"Piyotato"},"content":"    public static final String MESSAGE_EDIT_MULTIPLE_STUDENTS_SUCCESS \u003d \"Edited %1$d students.\";","lastModifiedDate":"2022-10-20"},{"lineNumber":59,"author":{"gitId":"Piyotato"},"content":"    public static final String MESSAGE_UNEDITED_STUDENT \u003d \"Student not edited: %1$s\";","lastModifiedDate":"2022-11-06"},{"lineNumber":60,"author":{"gitId":"Piyotato"},"content":"    public static final String MESSAGE_UNEDITED_MULTIPLE_STUDENTS \u003d \"%1$d students not edited.\";","lastModifiedDate":"2022-11-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"Piyotato"},"content":"    public EditCommand(IndexListGenerator indexListGenerator, EditCommandStudentEditor studentEditor) {","lastModifiedDate":"2022-10-20"},{"lineNumber":64,"author":{"gitId":"Piyotato"},"content":"        super(indexListGenerator, studentEditor);","lastModifiedDate":"2022-10-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"Piyotato"},"content":"    public String getSingleEditSuccessMessage(Student editedStudent) {","lastModifiedDate":"2022-10-20"},{"lineNumber":69,"author":{"gitId":"Piyotato"},"content":"        return String.format(MESSAGE_EDIT_STUDENT_SUCCESS, editedStudent);","lastModifiedDate":"2022-10-20"},{"lineNumber":70,"author":{"gitId":"lpohsien"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":71,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":72,"author":{"gitId":"Piyotato"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":73,"author":{"gitId":"Piyotato"},"content":"    public String getMultiEditSuccessMessage(List\u003cStudent\u003e editedStudents) {","lastModifiedDate":"2022-10-20"},{"lineNumber":74,"author":{"gitId":"Piyotato"},"content":"        return String.format(MESSAGE_EDIT_MULTIPLE_STUDENTS_SUCCESS, editedStudents.size());","lastModifiedDate":"2022-10-20"},{"lineNumber":75,"author":{"gitId":"lpohsien"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":76,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":77,"author":{"gitId":"Piyotato"},"content":"    @Override","lastModifiedDate":"2022-11-06"},{"lineNumber":78,"author":{"gitId":"Piyotato"},"content":"    public String getSingleUneditedMessage(Student uneditedStudent) {","lastModifiedDate":"2022-11-06"},{"lineNumber":79,"author":{"gitId":"Piyotato"},"content":"        return String.format(MESSAGE_UNEDITED_STUDENT, uneditedStudent);","lastModifiedDate":"2022-11-06"},{"lineNumber":80,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":81,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":82,"author":{"gitId":"Piyotato"},"content":"    @Override","lastModifiedDate":"2022-11-06"},{"lineNumber":83,"author":{"gitId":"Piyotato"},"content":"    public String getMultiUneditedMessage(List\u003cStudent\u003e uneditedStudents) {","lastModifiedDate":"2022-11-06"},{"lineNumber":84,"author":{"gitId":"Piyotato"},"content":"        return String.format(MESSAGE_UNEDITED_MULTIPLE_STUDENTS, uneditedStudents.size());","lastModifiedDate":"2022-11-06"},{"lineNumber":85,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":86,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":87,"author":{"gitId":"Piyotato"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":88,"author":{"gitId":"Piyotato"},"content":"    public String getNoEditMessage() {","lastModifiedDate":"2022-10-20"},{"lineNumber":89,"author":{"gitId":"Piyotato"},"content":"        return MESSAGE_NOT_EDITED;","lastModifiedDate":"2022-10-20"},{"lineNumber":90,"author":{"gitId":"lpohsien"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":91,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":92,"author":{"gitId":"Piyotato"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":93,"author":{"gitId":"Piyotato"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-20"},{"lineNumber":94,"author":{"gitId":"comicalromance"},"content":"        return executeNoRefresh(model);","lastModifiedDate":"2022-11-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":111,"author":{"gitId":"Piyotato"},"content":"        return indicesToEdit.equals(e.indicesToEdit)","lastModifiedDate":"2022-10-20"},{"lineNumber":112,"author":{"gitId":"Piyotato"},"content":"                \u0026\u0026 studentEditor.equals(e.studentEditor);","lastModifiedDate":"2022-10-20"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":116,"author":{"gitId":"comicalromance"},"content":"     * Stores the details to edit the student with. Each non-empty field value will replace the","lastModifiedDate":"2022-10-15"},{"lineNumber":117,"author":{"gitId":"comicalromance"},"content":"     * corresponding field value of the student.","lastModifiedDate":"2022-10-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":119,"author":{"gitId":"Piyotato"},"content":"    public static class EditCommandStudentEditor implements StudentEditor {","lastModifiedDate":"2022-10-20"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":123,"author":{"gitId":"comicalromance"},"content":"        private Module module;","lastModifiedDate":"2022-10-26"},{"lineNumber":124,"author":{"gitId":"dr-arrgghh"},"content":"        private StudentID id;","lastModifiedDate":"2022-10-25"},{"lineNumber":125,"author":{"gitId":"dr-arrgghh"},"content":"        private GitName gitName;","lastModifiedDate":"2022-10-25"},{"lineNumber":126,"author":{"gitId":"dr-arrgghh"},"content":"        private TeleHandle handle;","lastModifiedDate":"2022-10-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":129,"author":{"gitId":"Piyotato"},"content":"        public EditCommandStudentEditor() {","lastModifiedDate":"2022-10-20"},{"lineNumber":130,"author":{"gitId":"Piyotato"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":136,"author":{"gitId":"Piyotato"},"content":"        public EditCommandStudentEditor(EditCommandStudentEditor toCopy) {","lastModifiedDate":"2022-10-20"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":140,"author":{"gitId":"comicalromance"},"content":"            setModule(toCopy.module);","lastModifiedDate":"2022-10-26"},{"lineNumber":141,"author":{"gitId":"dr-arrgghh"},"content":"            setId(toCopy.id);","lastModifiedDate":"2022-10-25"},{"lineNumber":142,"author":{"gitId":"dr-arrgghh"},"content":"            setGitName(toCopy.gitName);","lastModifiedDate":"2022-10-25"},{"lineNumber":143,"author":{"gitId":"dr-arrgghh"},"content":"            setHandle(toCopy.handle);","lastModifiedDate":"2022-10-25"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"comicalromance"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, module,","lastModifiedDate":"2022-10-26"},{"lineNumber":152,"author":{"gitId":"comicalromance"},"content":"                    id, gitName, handle, tags);","lastModifiedDate":"2022-10-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"Piyotato"},"content":"        public void setName(Name name) {","lastModifiedDate":"2022-10-20"},{"lineNumber":160,"author":{"gitId":"Piyotato"},"content":"            this.name \u003d name;","lastModifiedDate":"2022-10-20"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"Piyotato"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2022-10-20"},{"lineNumber":168,"author":{"gitId":"Piyotato"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2022-10-20"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"Piyotato"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2022-10-20"},{"lineNumber":176,"author":{"gitId":"Piyotato"},"content":"            this.email \u003d email;","lastModifiedDate":"2022-10-20"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"comicalromance"},"content":"        public void setModule(Module module) {","lastModifiedDate":"2022-10-26"},{"lineNumber":180,"author":{"gitId":"comicalromance"},"content":"            this.module \u003d module;","lastModifiedDate":"2022-10-26"},{"lineNumber":181,"author":{"gitId":"comicalromance"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":182,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":183,"author":{"gitId":"comicalromance"},"content":"        public Optional\u003cModule\u003e getModule() {","lastModifiedDate":"2022-10-26"},{"lineNumber":184,"author":{"gitId":"comicalromance"},"content":"            return Optional.ofNullable(module);","lastModifiedDate":"2022-10-26"},{"lineNumber":185,"author":{"gitId":"comicalromance"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":186,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":187,"author":{"gitId":"dr-arrgghh"},"content":"        public void setId(StudentID id) {","lastModifiedDate":"2022-10-25"},{"lineNumber":188,"author":{"gitId":"dr-arrgghh"},"content":"            this.id \u003d id;","lastModifiedDate":"2022-10-25"},{"lineNumber":189,"author":{"gitId":"dr-arrgghh"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":190,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":191,"author":{"gitId":"dr-arrgghh"},"content":"        public Optional\u003cStudentID\u003e getId() {","lastModifiedDate":"2022-10-25"},{"lineNumber":192,"author":{"gitId":"dr-arrgghh"},"content":"            return Optional.ofNullable(id);","lastModifiedDate":"2022-10-25"},{"lineNumber":193,"author":{"gitId":"dr-arrgghh"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":194,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":195,"author":{"gitId":"dr-arrgghh"},"content":"        public void setHandle(TeleHandle handle) {","lastModifiedDate":"2022-10-25"},{"lineNumber":196,"author":{"gitId":"dr-arrgghh"},"content":"            this.handle \u003d handle;","lastModifiedDate":"2022-10-25"},{"lineNumber":197,"author":{"gitId":"dr-arrgghh"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":198,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":199,"author":{"gitId":"dr-arrgghh"},"content":"        public Optional\u003cTeleHandle\u003e getHandle() {","lastModifiedDate":"2022-10-25"},{"lineNumber":200,"author":{"gitId":"dr-arrgghh"},"content":"            return Optional.ofNullable(handle);","lastModifiedDate":"2022-10-25"},{"lineNumber":201,"author":{"gitId":"dr-arrgghh"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":202,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":203,"author":{"gitId":"dr-arrgghh"},"content":"        public void setGitName(GitName name) {","lastModifiedDate":"2022-10-25"},{"lineNumber":204,"author":{"gitId":"dr-arrgghh"},"content":"            this.gitName \u003d name;","lastModifiedDate":"2022-10-25"},{"lineNumber":205,"author":{"gitId":"dr-arrgghh"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":206,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":207,"author":{"gitId":"dr-arrgghh"},"content":"        public Optional\u003cGitName\u003e getGitName() {","lastModifiedDate":"2022-10-25"},{"lineNumber":208,"author":{"gitId":"dr-arrgghh"},"content":"            return Optional.ofNullable(gitName);","lastModifiedDate":"2022-10-25"},{"lineNumber":209,"author":{"gitId":"dr-arrgghh"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":210,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":212,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":213,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":214,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":215,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":220,"author":{"gitId":"Piyotato"},"content":"        /**","lastModifiedDate":"2022-10-20"},{"lineNumber":221,"author":{"gitId":"Piyotato"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2022-10-20"},{"lineNumber":222,"author":{"gitId":"Piyotato"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2022-10-20"},{"lineNumber":223,"author":{"gitId":"Piyotato"},"content":"         */","lastModifiedDate":"2022-10-20"},{"lineNumber":224,"author":{"gitId":"Piyotato"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-10-20"},{"lineNumber":225,"author":{"gitId":"Piyotato"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2022-10-20"},{"lineNumber":226,"author":{"gitId":"Piyotato"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":227,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":232,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":236,"author":{"gitId":"Piyotato"},"content":"            if (!(other instanceof EditCommandStudentEditor)) {","lastModifiedDate":"2022-10-20"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":238,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":240,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":241,"author":{"gitId":"Piyotato"},"content":"            EditCommandStudentEditor e \u003d (EditCommandStudentEditor) other;","lastModifiedDate":"2022-10-20"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":243,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":244,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":245,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":246,"author":{"gitId":"comicalromance"},"content":"                    \u0026\u0026 getModule().equals(e.getModule())","lastModifiedDate":"2022-10-26"},{"lineNumber":247,"author":{"gitId":"dr-arrgghh"},"content":"                    \u0026\u0026 getId().equals(e.getId())","lastModifiedDate":"2022-10-26"},{"lineNumber":248,"author":{"gitId":"dr-arrgghh"},"content":"                    \u0026\u0026 getGitName().equals(e.getGitName())","lastModifiedDate":"2022-10-26"},{"lineNumber":249,"author":{"gitId":"dr-arrgghh"},"content":"                    \u0026\u0026 getHandle().equals(e.getHandle())","lastModifiedDate":"2022-10-26"},{"lineNumber":250,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":252,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":253,"author":{"gitId":"Piyotato"},"content":"        @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":254,"author":{"gitId":"Piyotato"},"content":"        public EditResult editStudent(Student studentToEdit) {","lastModifiedDate":"2022-11-06"},{"lineNumber":255,"author":{"gitId":"Piyotato"},"content":"            assert studentToEdit !\u003d null;","lastModifiedDate":"2022-10-20"},{"lineNumber":256,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":257,"author":{"gitId":"Piyotato"},"content":"            StudentData studentData \u003d studentToEdit.getStudentData();","lastModifiedDate":"2022-10-20"},{"lineNumber":258,"author":{"gitId":"Piyotato"},"content":"            studentData.setName(getName().orElse(studentToEdit.getName()));","lastModifiedDate":"2022-10-20"},{"lineNumber":259,"author":{"gitId":"Piyotato"},"content":"            studentData.setPhone(getPhone().orElse(studentToEdit.getPhone()));","lastModifiedDate":"2022-10-20"},{"lineNumber":260,"author":{"gitId":"Piyotato"},"content":"            studentData.setEmail(getEmail().orElse(studentToEdit.getEmail()));","lastModifiedDate":"2022-10-20"},{"lineNumber":261,"author":{"gitId":"comicalromance"},"content":"            studentData.setModule(getModule().orElse(studentToEdit.getModule()));","lastModifiedDate":"2022-10-26"},{"lineNumber":262,"author":{"gitId":"dr-arrgghh"},"content":"            studentData.setId(getId().orElse(studentToEdit.getId()));","lastModifiedDate":"2022-10-26"},{"lineNumber":263,"author":{"gitId":"dr-arrgghh"},"content":"            studentData.setGitUser(getGitName().orElse(studentToEdit.getGitName()));","lastModifiedDate":"2022-10-26"},{"lineNumber":264,"author":{"gitId":"dr-arrgghh"},"content":"            studentData.setTeleHandle(getHandle().orElse(studentToEdit.getTeleHandle()));","lastModifiedDate":"2022-10-26"},{"lineNumber":265,"author":{"gitId":"Piyotato"},"content":"            studentData.setTags(getTags().orElse(studentToEdit.getTags()));","lastModifiedDate":"2022-10-20"},{"lineNumber":266,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":267,"author":{"gitId":"Piyotato"},"content":"            return new EditResult(new Student(studentData), !studentData.equals(studentToEdit.getStudentData()));","lastModifiedDate":"2022-11-06"},{"lineNumber":268,"author":{"gitId":"Piyotato"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":269,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":270,"author":{"gitId":"Piyotato"},"content":"        @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":271,"author":{"gitId":"Piyotato"},"content":"        public boolean hasEdits() {","lastModifiedDate":"2022-10-20"},{"lineNumber":272,"author":{"gitId":"comicalromance"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, module,","lastModifiedDate":"2022-10-26"},{"lineNumber":273,"author":{"gitId":"comicalromance"},"content":"                    id, gitName, handle, tags);","lastModifiedDate":"2022-10-26"},{"lineNumber":274,"author":{"gitId":"Piyotato"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":276,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"dr-arrgghh":44,"Piyotato":67,"-":118,"comicalromance":41,"lpohsien":6}},{"path":"src/main/java/seedu/studmap/logic/commands/EditStudentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Piyotato"},"content":"package seedu.studmap.logic.commands;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"Piyotato"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"Piyotato"},"content":"import static seedu.studmap.commons.core.Messages.MESSAGE_DUPLICATE_STUDENT;","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"Piyotato"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"Piyotato"},"content":"import java.util.List;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"Piyotato"},"content":"import java.util.function.Function;","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"Piyotato"},"content":"import seedu.studmap.commons.core.Messages;","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"Piyotato"},"content":"import seedu.studmap.commons.core.index.Index;","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"Piyotato"},"content":"import seedu.studmap.commons.core.index.IndexListGenerator;","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"Piyotato"},"content":"import seedu.studmap.logic.commands.commons.StudentEditor;","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"Piyotato"},"content":"import seedu.studmap.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"Piyotato"},"content":"import seedu.studmap.model.Model;","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"Piyotato"},"content":"import seedu.studmap.model.student.Student;","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"Piyotato"},"content":"/**","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"Piyotato"},"content":" * Abstract class for any command that wants to edit student fields. Provides some basic abstractions to reduce","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"Piyotato"},"content":" * duplicated code, such as the main execution of the command (retrieval of StudentData etc.)","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"Piyotato"},"content":" *","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"Piyotato"},"content":" * @param \u003cT\u003e StudentEditor that this command uses to edit each specified Student.","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"Piyotato"},"content":" */","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"Piyotato"},"content":"public abstract class EditStudentCommand\u003cT extends StudentEditor\u003e extends Command {","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"Piyotato"},"content":"    protected T studentEditor;","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"Piyotato"},"content":"    protected Function\u003cModel, List\u003cIndex\u003e\u003e indicesToEdit;","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"Piyotato"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"Piyotato"},"content":"     * @param indexListGenerator Function that produces list of indices of students","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"Piyotato"},"content":"     *                           in the filtered student list to edit","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"Piyotato"},"content":"     * @param studentEditor      details to edit the student(s) with","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"Piyotato"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"Piyotato"},"content":"    protected EditStudentCommand(IndexListGenerator indexListGenerator, T studentEditor) {","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"Piyotato"},"content":"        this.indicesToEdit \u003d indexListGenerator;","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"Piyotato"},"content":"        this.studentEditor \u003d studentEditor;","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"Piyotato"},"content":"    public abstract String getSingleEditSuccessMessage(Student editedStudent);","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"Piyotato"},"content":"    public abstract String getMultiEditSuccessMessage(List\u003cStudent\u003e editedStudents);","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"Piyotato"},"content":"    public abstract String getSingleUneditedMessage(Student uneditedStudent);","lastModifiedDate":"2022-11-06"},{"lineNumber":44,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":45,"author":{"gitId":"Piyotato"},"content":"    public abstract String getMultiUneditedMessage(List\u003cStudent\u003e uneditedStudents);","lastModifiedDate":"2022-11-06"},{"lineNumber":46,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":47,"author":{"gitId":"Piyotato"},"content":"    public abstract String getNoEditMessage();","lastModifiedDate":"2022-10-20"},{"lineNumber":48,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":49,"author":{"gitId":"Piyotato"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":50,"author":{"gitId":"Piyotato"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-20"},{"lineNumber":51,"author":{"gitId":"comicalromance"},"content":"        return executeNoRefresh(model);","lastModifiedDate":"2022-11-03"},{"lineNumber":52,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":54,"author":{"gitId":"Piyotato"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":55,"author":{"gitId":"Piyotato"},"content":"     * Edits the student without returning to the full students list.","lastModifiedDate":"2022-10-20"},{"lineNumber":56,"author":{"gitId":"Piyotato"},"content":"     *","lastModifiedDate":"2022-10-20"},{"lineNumber":57,"author":{"gitId":"Piyotato"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2022-10-20"},{"lineNumber":58,"author":{"gitId":"Piyotato"},"content":"     * @return feedback message of the operation result for display.","lastModifiedDate":"2022-10-20"},{"lineNumber":59,"author":{"gitId":"Piyotato"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2022-10-20"},{"lineNumber":60,"author":{"gitId":"Piyotato"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":61,"author":{"gitId":"Piyotato"},"content":"    public CommandResult executeNoRefresh(Model model) throws CommandException {","lastModifiedDate":"2022-10-20"},{"lineNumber":62,"author":{"gitId":"Piyotato"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-20"},{"lineNumber":63,"author":{"gitId":"Piyotato"},"content":"        List\u003cStudent\u003e lastShownList \u003d model.getFilteredStudentList();","lastModifiedDate":"2022-10-20"},{"lineNumber":64,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":65,"author":{"gitId":"Piyotato"},"content":"        ArrayList\u003cStudent\u003e studentsToEdit \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-11-07"},{"lineNumber":66,"author":{"gitId":"Piyotato"},"content":"        ArrayList\u003cStudent\u003e editedStudents \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-20"},{"lineNumber":67,"author":{"gitId":"Piyotato"},"content":"        ArrayList\u003cStudent\u003e uneditedStudents \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-11-06"},{"lineNumber":68,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":69,"author":{"gitId":"Piyotato"},"content":"        if (!studentEditor.hasEdits()) {","lastModifiedDate":"2022-11-06"},{"lineNumber":70,"author":{"gitId":"Piyotato"},"content":"            return new CommandResult(getNoEditMessage());","lastModifiedDate":"2022-11-06"},{"lineNumber":71,"author":{"gitId":"Piyotato"},"content":"        }","lastModifiedDate":"2022-11-06"},{"lineNumber":72,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":73,"author":{"gitId":"Piyotato"},"content":"        for (Index index : indicesToEdit.apply(model)) {","lastModifiedDate":"2022-10-20"},{"lineNumber":74,"author":{"gitId":"Piyotato"},"content":"            if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-20"},{"lineNumber":75,"author":{"gitId":"Piyotato"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-20"},{"lineNumber":76,"author":{"gitId":"Piyotato"},"content":"            }","lastModifiedDate":"2022-10-20"},{"lineNumber":77,"author":{"gitId":"Piyotato"},"content":"            studentsToEdit.add(lastShownList.get(index.getZeroBased()));","lastModifiedDate":"2022-11-07"},{"lineNumber":78,"author":{"gitId":"Piyotato"},"content":"        }","lastModifiedDate":"2022-11-07"},{"lineNumber":79,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":80,"author":{"gitId":"Piyotato"},"content":"        for (Student studentToEdit : studentsToEdit) {","lastModifiedDate":"2022-11-07"},{"lineNumber":81,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":82,"author":{"gitId":"Piyotato"},"content":"            StudentEditor.EditResult editResult \u003d studentEditor.editStudent(studentToEdit);","lastModifiedDate":"2022-11-06"},{"lineNumber":83,"author":{"gitId":"Piyotato"},"content":"            Student editedStudent \u003d editResult.editedStudent;","lastModifiedDate":"2022-11-06"},{"lineNumber":84,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":85,"author":{"gitId":"Piyotato"},"content":"            if (!studentToEdit.isSameStudent(editedStudent) \u0026\u0026 model.hasStudent(editedStudent)) {","lastModifiedDate":"2022-10-20"},{"lineNumber":86,"author":{"gitId":"Piyotato"},"content":"                throw new CommandException(MESSAGE_DUPLICATE_STUDENT);","lastModifiedDate":"2022-10-20"},{"lineNumber":87,"author":{"gitId":"Piyotato"},"content":"            }","lastModifiedDate":"2022-10-20"},{"lineNumber":88,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":89,"author":{"gitId":"Piyotato"},"content":"            if (editResult.isEdited) {","lastModifiedDate":"2022-11-06"},{"lineNumber":90,"author":{"gitId":"Piyotato"},"content":"                editedStudents.add(editedStudent);","lastModifiedDate":"2022-10-20"},{"lineNumber":91,"author":{"gitId":"Piyotato"},"content":"                model.setStudent(studentToEdit, editedStudent);","lastModifiedDate":"2022-11-06"},{"lineNumber":92,"author":{"gitId":"Piyotato"},"content":"            } else {","lastModifiedDate":"2022-11-06"},{"lineNumber":93,"author":{"gitId":"Piyotato"},"content":"                uneditedStudents.add(studentToEdit);","lastModifiedDate":"2022-11-06"},{"lineNumber":94,"author":{"gitId":"Piyotato"},"content":"            }","lastModifiedDate":"2022-10-20"},{"lineNumber":95,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":96,"author":{"gitId":"Piyotato"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":97,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":98,"author":{"gitId":"Piyotato"},"content":"        StringBuilder commandOutput \u003d new StringBuilder();","lastModifiedDate":"2022-11-06"},{"lineNumber":99,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":100,"author":{"gitId":"Piyotato"},"content":"        if (editedStudents.size() \u003d\u003d 1) {","lastModifiedDate":"2022-11-06"},{"lineNumber":101,"author":{"gitId":"Piyotato"},"content":"            commandOutput.append(getSingleEditSuccessMessage(editedStudents.get(0)));","lastModifiedDate":"2022-11-06"},{"lineNumber":102,"author":{"gitId":"Piyotato"},"content":"        } else if (editedStudents.size() \u003e 1) {","lastModifiedDate":"2022-11-06"},{"lineNumber":103,"author":{"gitId":"Piyotato"},"content":"            commandOutput.append(getMultiEditSuccessMessage(editedStudents));","lastModifiedDate":"2022-11-06"},{"lineNumber":104,"author":{"gitId":"Piyotato"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":105,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":106,"author":{"gitId":"Piyotato"},"content":"        if (uneditedStudents.size() \u003d\u003d 1) {","lastModifiedDate":"2022-11-06"},{"lineNumber":107,"author":{"gitId":"Piyotato"},"content":"            commandOutput.append(\"\\n\").append(getSingleUneditedMessage(uneditedStudents.get(0)));","lastModifiedDate":"2022-11-06"},{"lineNumber":108,"author":{"gitId":"Piyotato"},"content":"        } else if (uneditedStudents.size() \u003e 1) {","lastModifiedDate":"2022-11-06"},{"lineNumber":109,"author":{"gitId":"Piyotato"},"content":"            commandOutput.append(\"\\n\").append(getMultiUneditedMessage(uneditedStudents));","lastModifiedDate":"2022-11-06"},{"lineNumber":110,"author":{"gitId":"Piyotato"},"content":"        }","lastModifiedDate":"2022-11-06"},{"lineNumber":111,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":112,"author":{"gitId":"Piyotato"},"content":"        return new CommandResult(commandOutput.toString().trim());","lastModifiedDate":"2022-11-06"},{"lineNumber":113,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":114,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":115,"author":{"gitId":"Piyotato"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":116,"author":{"gitId":"Piyotato"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-20"},{"lineNumber":117,"author":{"gitId":"Piyotato"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-20"},{"lineNumber":118,"author":{"gitId":"Piyotato"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-20"},{"lineNumber":119,"author":{"gitId":"Piyotato"},"content":"            return true;","lastModifiedDate":"2022-10-20"},{"lineNumber":120,"author":{"gitId":"Piyotato"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":121,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":122,"author":{"gitId":"Piyotato"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-20"},{"lineNumber":123,"author":{"gitId":"Piyotato"},"content":"        if (!(other instanceof EditStudentCommand)) {","lastModifiedDate":"2022-10-20"},{"lineNumber":124,"author":{"gitId":"Piyotato"},"content":"            return false;","lastModifiedDate":"2022-10-20"},{"lineNumber":125,"author":{"gitId":"Piyotato"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":126,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":127,"author":{"gitId":"Piyotato"},"content":"        // state check","lastModifiedDate":"2022-10-20"},{"lineNumber":128,"author":{"gitId":"lpohsien"},"content":"        EditStudentCommand\u003c?\u003e e \u003d (EditStudentCommand\u003c?\u003e) other;","lastModifiedDate":"2022-11-01"},{"lineNumber":129,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":130,"author":{"gitId":"Piyotato"},"content":"        return indicesToEdit.equals(e.indicesToEdit) \u0026\u0026 studentEditor.equals(e.studentEditor);","lastModifiedDate":"2022-10-20"},{"lineNumber":131,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":132,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":133,"author":{"gitId":"Piyotato"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":134,"author":{"gitId":"Piyotato"},"content":"     * Returns true if this command will make edits when executed.","lastModifiedDate":"2022-10-20"},{"lineNumber":135,"author":{"gitId":"Piyotato"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":136,"author":{"gitId":"Piyotato"},"content":"    public boolean hasEdits() {","lastModifiedDate":"2022-10-20"},{"lineNumber":137,"author":{"gitId":"Piyotato"},"content":"        return studentEditor.hasEdits();","lastModifiedDate":"2022-10-20"},{"lineNumber":138,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":139,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":140,"author":{"gitId":"Piyotato"},"content":"}","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"Piyotato":138,"comicalromance":1,"lpohsien":1}},{"path":"src/main/java/seedu/studmap/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.logic.commands;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.Model;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"comicalromance"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting StudMap as requested ...\";","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"comicalromance"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, false, true);","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"-":15,"comicalromance":4}},{"path":"src/main/java/seedu/studmap/logic/commands/FilterCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.logic.commands;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"dr-arrgghh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.parser.CliSyntax.PREFIX_ASSIGNMENT;","lastModifiedDate":"2022-10-28"},{"lineNumber":5,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2022-10-28"},{"lineNumber":6,"author":{"gitId":"dr-arrgghh"},"content":"import static seedu.studmap.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"dr-arrgghh"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.commons.core.Messages;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.Model;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"dr-arrgghh"},"content":"import seedu.studmap.model.student.Student;","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"dr-arrgghh"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"comicalromance"},"content":" * Filters and list all students in the student map","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"dr-arrgghh"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"dr-arrgghh"},"content":"public class FilterCommand extends Command {","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"dr-arrgghh"},"content":"    public static final String COMMAND_WORD \u003d \"filter\";","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"comicalromance"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Filters all students with either tag, \"","lastModifiedDate":"2022-10-28"},{"lineNumber":24,"author":{"gitId":"comicalromance"},"content":"            + \"module or assignment (one only!) that contain any of \"","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"dr-arrgghh"},"content":"            + \"the specified alphabets (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"comicalromance"},"content":"            + \"Parameters: [\" + PREFIX_TAG + \"KEYWORD [MORE_KEYWORDS]...] \"","lastModifiedDate":"2022-10-28"},{"lineNumber":27,"author":{"gitId":"comicalromance"},"content":"            + \"[\" + PREFIX_MODULE + \"KEYWORD [MORE_KEYWORDS]...] \"","lastModifiedDate":"2022-10-28"},{"lineNumber":28,"author":{"gitId":"comicalromance"},"content":"            + \"[\" + PREFIX_ASSIGNMENT + \"KEYWORD [MORE_KEYWORDS]...]\\n\"","lastModifiedDate":"2022-10-28"},{"lineNumber":29,"author":{"gitId":"comicalromance"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_TAG + \"friends family\";","lastModifiedDate":"2022-10-28"},{"lineNumber":30,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"dr-arrgghh"},"content":"    private final Predicate\u003cStudent\u003e predicate;","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"dr-arrgghh"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":34,"author":{"gitId":"dr-arrgghh"},"content":"     * Constructor for FilterCommand","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"dr-arrgghh"},"content":"     * @param predicate","lastModifiedDate":"2022-10-27"},{"lineNumber":36,"author":{"gitId":"dr-arrgghh"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"dr-arrgghh"},"content":"    public FilterCommand(Predicate\u003cStudent\u003e predicate) {","lastModifiedDate":"2022-10-27"},{"lineNumber":38,"author":{"gitId":"dr-arrgghh"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"dr-arrgghh"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"dr-arrgghh"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"dr-arrgghh"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"dr-arrgghh"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"dr-arrgghh"},"content":"        model.filterStudentListWithPredicate(predicate);","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"dr-arrgghh"},"content":"        return new CommandResult(","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"comicalromance"},"content":"                String.format(Messages.MESSAGE_STUDENTS_LISTED_OVERVIEW, model.getFilteredStudentList().size()));","lastModifiedDate":"2022-10-15"},{"lineNumber":47,"author":{"gitId":"dr-arrgghh"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"dr-arrgghh"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"dr-arrgghh":35,"comicalromance":13}},{"path":"src/main/java/seedu/studmap/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.logic.commands;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.commons.core.Messages;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.Model;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.student.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"comicalromance"},"content":" * Finds and lists all students in student map whose name contains any of the argument keywords.","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"comicalromance"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all students whose names contain any of \"","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"comicalromance"},"content":"        model.updateFilteredStudentList(predicate);","lastModifiedDate":"2022-10-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":33,"author":{"gitId":"comicalromance"},"content":"                String.format(Messages.MESSAGE_STUDENTS_LISTED_OVERVIEW, model.getFilteredStudentList().size()));","lastModifiedDate":"2022-10-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"-":34,"comicalromance":8}},{"path":"src/main/java/seedu/studmap/logic/commands/GradeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lpohsien"},"content":"package seedu.studmap.logic.commands;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"lpohsien"},"content":"import static seedu.studmap.logic.parser.CliSyntax.PREFIX_ASSIGNMENT;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"lpohsien"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"lpohsien"},"content":"import java.util.List;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"lpohsien"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"lpohsien"},"content":"import seedu.studmap.commons.core.index.IndexListGenerator;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"lpohsien"},"content":"import seedu.studmap.logic.commands.commons.StudentEditor;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"lpohsien"},"content":"import seedu.studmap.model.student.Assignment;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"lpohsien"},"content":"import seedu.studmap.model.student.Student;","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"lpohsien"},"content":"import seedu.studmap.model.student.StudentData;","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"lpohsien"},"content":"/**","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"lpohsien"},"content":" * Specifies the state of assignment for a student.","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"lpohsien"},"content":" */","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"lpohsien"},"content":"public class GradeCommand extends EditStudentCommand\u003cGradeCommand.GradeCommandStudentEditor\u003e {","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"lpohsien"},"content":"    public static final String COMMAND_WORD \u003d \"grade\";","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"lpohsien"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"lpohsien"},"content":"            + \": Specifies the assignment status for a student identified by the index number used in the displayed\"","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"comicalromance"},"content":"            + \" student list.\\nThis commands creates a new assignment for the student if it does not exist.\\n\"","lastModifiedDate":"2022-11-03"},{"lineNumber":25,"author":{"gitId":"comicalromance"},"content":"            + \"Grades the status for the assignment specified in the parameter.\\n\"","lastModifiedDate":"2022-11-03"},{"lineNumber":26,"author":{"gitId":"lpohsien"},"content":"            + \"Parameters: INDEX (must be positive integer or use \\\"all\\\" to mark everyone currently displayed)\"","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"comicalromance"},"content":"            + \" STATUS (must be marked/received/new where \u0027new\u0027\"","lastModifiedDate":"2022-11-07"},{"lineNumber":28,"author":{"gitId":"lpohsien"},"content":"            + \" also represents a new assignment that is not yet received) \"","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"comicalromance"},"content":"            + PREFIX_ASSIGNMENT + \"ASSIGNMENT\\n\"","lastModifiedDate":"2022-11-03"},{"lineNumber":30,"author":{"gitId":"lpohsien"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 new \" + PREFIX_ASSIGNMENT + \"A01\\n\"","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"comicalromance"},"content":"            + \"Example: \" + COMMAND_WORD + \" all marked \" + PREFIX_ASSIGNMENT + \"A07\";","lastModifiedDate":"2022-11-03"},{"lineNumber":32,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"lpohsien"},"content":"    public static final String MESSAGE_GRADE_SINGLE_SUCCESS_ASSIGNMENT \u003d","lastModifiedDate":"2022-10-27"},{"lineNumber":34,"author":{"gitId":"Piyotato"},"content":"            \"Set assignment %1$s for student %2$s as %3$s\";","lastModifiedDate":"2022-11-07"},{"lineNumber":35,"author":{"gitId":"lpohsien"},"content":"    public static final String MESSAGE_GRADE_MULTI_SUCCESS_ASSIGNMENT \u003d","lastModifiedDate":"2022-10-27"},{"lineNumber":36,"author":{"gitId":"Piyotato"},"content":"            \"Set assignment %1$s as %2$s for %3$s students\";","lastModifiedDate":"2022-11-07"},{"lineNumber":37,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":38,"author":{"gitId":"Piyotato"},"content":"    public static final String MESSAGE_GRADE_SINGLE_UNEDITED_ASSIGNMENT \u003d","lastModifiedDate":"2022-11-06"},{"lineNumber":39,"author":{"gitId":"Piyotato"},"content":"            \"Assignment %1$s already set as %2$s for %3$s\";","lastModifiedDate":"2022-11-07"},{"lineNumber":40,"author":{"gitId":"Piyotato"},"content":"    public static final String MESSAGE_GRADE_MULTI_UNEDITED_ASSIGNMENT \u003d","lastModifiedDate":"2022-11-06"},{"lineNumber":41,"author":{"gitId":"Piyotato"},"content":"            \"Assignment %1$s already set as %2$s for %3$s students\";","lastModifiedDate":"2022-11-07"},{"lineNumber":42,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":43,"author":{"gitId":"lpohsien"},"content":"    public static final String MESSAGE_NO_EDIT \u003d \"Assignment must be provided.\";","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"lpohsien"},"content":"    public GradeCommand(IndexListGenerator indexListGenerator, GradeCommandStudentEditor studentEditor) {","lastModifiedDate":"2022-10-27"},{"lineNumber":46,"author":{"gitId":"lpohsien"},"content":"        super(indexListGenerator, studentEditor);","lastModifiedDate":"2022-10-27"},{"lineNumber":47,"author":{"gitId":"lpohsien"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":48,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":49,"author":{"gitId":"lpohsien"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":50,"author":{"gitId":"lpohsien"},"content":"    public String getSingleEditSuccessMessage(Student editedStudent) {","lastModifiedDate":"2022-10-27"},{"lineNumber":51,"author":{"gitId":"lpohsien"},"content":"        Assignment assignment \u003d studentEditor.getAssignment();","lastModifiedDate":"2022-10-27"},{"lineNumber":52,"author":{"gitId":"lpohsien"},"content":"        return String.format(MESSAGE_GRADE_SINGLE_SUCCESS_ASSIGNMENT,","lastModifiedDate":"2022-10-27"},{"lineNumber":53,"author":{"gitId":"Piyotato"},"content":"                assignment.getAttributeName(),","lastModifiedDate":"2022-11-06"},{"lineNumber":54,"author":{"gitId":"lpohsien"},"content":"                editedStudent.getName(),","lastModifiedDate":"2022-10-27"},{"lineNumber":55,"author":{"gitId":"Piyotato"},"content":"                assignment.state);","lastModifiedDate":"2022-11-07"},{"lineNumber":56,"author":{"gitId":"lpohsien"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":57,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":58,"author":{"gitId":"lpohsien"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":59,"author":{"gitId":"lpohsien"},"content":"    public String getMultiEditSuccessMessage(List\u003cStudent\u003e editedStudents) {","lastModifiedDate":"2022-10-27"},{"lineNumber":60,"author":{"gitId":"lpohsien"},"content":"        Assignment assignment \u003d studentEditor.getAssignment();","lastModifiedDate":"2022-10-27"},{"lineNumber":61,"author":{"gitId":"lpohsien"},"content":"        return String.format(MESSAGE_GRADE_MULTI_SUCCESS_ASSIGNMENT,","lastModifiedDate":"2022-10-27"},{"lineNumber":62,"author":{"gitId":"Piyotato"},"content":"                assignment.getAttributeName(),","lastModifiedDate":"2022-11-06"},{"lineNumber":63,"author":{"gitId":"Piyotato"},"content":"                assignment.state,","lastModifiedDate":"2022-11-06"},{"lineNumber":64,"author":{"gitId":"lpohsien"},"content":"                editedStudents.size());","lastModifiedDate":"2022-10-27"},{"lineNumber":65,"author":{"gitId":"lpohsien"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":66,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":67,"author":{"gitId":"Piyotato"},"content":"    @Override","lastModifiedDate":"2022-11-06"},{"lineNumber":68,"author":{"gitId":"Piyotato"},"content":"    public String getSingleUneditedMessage(Student uneditedStudent) {","lastModifiedDate":"2022-11-06"},{"lineNumber":69,"author":{"gitId":"Piyotato"},"content":"        Assignment assignment \u003d studentEditor.getAssignment();","lastModifiedDate":"2022-11-06"},{"lineNumber":70,"author":{"gitId":"Piyotato"},"content":"        return String.format(MESSAGE_GRADE_SINGLE_UNEDITED_ASSIGNMENT,","lastModifiedDate":"2022-11-06"},{"lineNumber":71,"author":{"gitId":"Piyotato"},"content":"                assignment.getAttributeName(),","lastModifiedDate":"2022-11-06"},{"lineNumber":72,"author":{"gitId":"Piyotato"},"content":"                assignment.state,","lastModifiedDate":"2022-11-06"},{"lineNumber":73,"author":{"gitId":"Piyotato"},"content":"                uneditedStudent.getName());","lastModifiedDate":"2022-11-07"},{"lineNumber":74,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":75,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":76,"author":{"gitId":"Piyotato"},"content":"    @Override","lastModifiedDate":"2022-11-06"},{"lineNumber":77,"author":{"gitId":"Piyotato"},"content":"    public String getMultiUneditedMessage(List\u003cStudent\u003e uneditedStudents) {","lastModifiedDate":"2022-11-06"},{"lineNumber":78,"author":{"gitId":"Piyotato"},"content":"        Assignment assignment \u003d studentEditor.getAssignment();","lastModifiedDate":"2022-11-06"},{"lineNumber":79,"author":{"gitId":"Piyotato"},"content":"        return String.format(MESSAGE_GRADE_MULTI_UNEDITED_ASSIGNMENT,","lastModifiedDate":"2022-11-06"},{"lineNumber":80,"author":{"gitId":"Piyotato"},"content":"                assignment.getAttributeName(),","lastModifiedDate":"2022-11-06"},{"lineNumber":81,"author":{"gitId":"Piyotato"},"content":"                assignment.state,","lastModifiedDate":"2022-11-06"},{"lineNumber":82,"author":{"gitId":"Piyotato"},"content":"                uneditedStudents.size());","lastModifiedDate":"2022-11-06"},{"lineNumber":83,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":84,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":85,"author":{"gitId":"lpohsien"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":86,"author":{"gitId":"lpohsien"},"content":"    public String getNoEditMessage() {","lastModifiedDate":"2022-10-27"},{"lineNumber":87,"author":{"gitId":"lpohsien"},"content":"        return MESSAGE_NO_EDIT;","lastModifiedDate":"2022-10-27"},{"lineNumber":88,"author":{"gitId":"lpohsien"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":89,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":90,"author":{"gitId":"lpohsien"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":91,"author":{"gitId":"lpohsien"},"content":"     * A static StudentEditor that adjusts Assignment for a given Student.","lastModifiedDate":"2022-10-27"},{"lineNumber":92,"author":{"gitId":"lpohsien"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":93,"author":{"gitId":"lpohsien"},"content":"    public static class GradeCommandStudentEditor implements StudentEditor {","lastModifiedDate":"2022-10-27"},{"lineNumber":94,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":95,"author":{"gitId":"lpohsien"},"content":"        private final Assignment assignment;","lastModifiedDate":"2022-10-27"},{"lineNumber":96,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":97,"author":{"gitId":"lpohsien"},"content":"        /**","lastModifiedDate":"2022-10-27"},{"lineNumber":98,"author":{"gitId":"lpohsien"},"content":"         * Constructor using Assignment.","lastModifiedDate":"2022-10-27"},{"lineNumber":99,"author":{"gitId":"lpohsien"},"content":"         *","lastModifiedDate":"2022-10-27"},{"lineNumber":100,"author":{"gitId":"lpohsien"},"content":"         * @param assignment Assignment to edit the student with.","lastModifiedDate":"2022-10-27"},{"lineNumber":101,"author":{"gitId":"lpohsien"},"content":"         */","lastModifiedDate":"2022-10-27"},{"lineNumber":102,"author":{"gitId":"lpohsien"},"content":"        public GradeCommandStudentEditor(Assignment assignment) {","lastModifiedDate":"2022-10-27"},{"lineNumber":103,"author":{"gitId":"lpohsien"},"content":"            this.assignment \u003d assignment;","lastModifiedDate":"2022-10-27"},{"lineNumber":104,"author":{"gitId":"lpohsien"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":105,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":106,"author":{"gitId":"lpohsien"},"content":"        public Assignment getAssignment() {","lastModifiedDate":"2022-10-27"},{"lineNumber":107,"author":{"gitId":"lpohsien"},"content":"            return assignment;","lastModifiedDate":"2022-10-27"},{"lineNumber":108,"author":{"gitId":"lpohsien"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":109,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":110,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":111,"author":{"gitId":"lpohsien"},"content":"        @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":112,"author":{"gitId":"Piyotato"},"content":"        public EditResult editStudent(Student studentToEdit) {","lastModifiedDate":"2022-11-06"},{"lineNumber":113,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":114,"author":{"gitId":"lpohsien"},"content":"            StudentData studentData \u003d studentToEdit.getStudentData();","lastModifiedDate":"2022-10-27"},{"lineNumber":115,"author":{"gitId":"lpohsien"},"content":"            Set\u003cAssignment\u003e newAssignments \u003d new HashSet\u003c\u003e(studentToEdit.getAssignments());","lastModifiedDate":"2022-10-27"},{"lineNumber":116,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":117,"author":{"gitId":"Piyotato"},"content":"            if (newAssignments.stream().anyMatch(x -\u003e x.strongEquals(assignment))) {","lastModifiedDate":"2022-11-06"},{"lineNumber":118,"author":{"gitId":"Piyotato"},"content":"                return new EditResult(studentToEdit, false);","lastModifiedDate":"2022-11-06"},{"lineNumber":119,"author":{"gitId":"Piyotato"},"content":"            }","lastModifiedDate":"2022-11-06"},{"lineNumber":120,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":121,"author":{"gitId":"lpohsien"},"content":"            newAssignments.remove(assignment);","lastModifiedDate":"2022-10-27"},{"lineNumber":122,"author":{"gitId":"lpohsien"},"content":"            newAssignments.add(assignment);","lastModifiedDate":"2022-10-27"},{"lineNumber":123,"author":{"gitId":"lpohsien"},"content":"            studentData.setAssignments(newAssignments);","lastModifiedDate":"2022-10-27"},{"lineNumber":124,"author":{"gitId":"Piyotato"},"content":"            return new EditResult(new Student(studentData), true);","lastModifiedDate":"2022-11-06"},{"lineNumber":125,"author":{"gitId":"lpohsien"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":126,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":127,"author":{"gitId":"lpohsien"},"content":"        @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":128,"author":{"gitId":"lpohsien"},"content":"        public boolean hasEdits() {","lastModifiedDate":"2022-10-27"},{"lineNumber":129,"author":{"gitId":"lpohsien"},"content":"            return assignment !\u003d null;","lastModifiedDate":"2022-10-27"},{"lineNumber":130,"author":{"gitId":"lpohsien"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":131,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":132,"author":{"gitId":"lpohsien"},"content":"        @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":133,"author":{"gitId":"lpohsien"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2022-10-27"},{"lineNumber":134,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":135,"author":{"gitId":"lpohsien"},"content":"            // short circuit if same object","lastModifiedDate":"2022-10-27"},{"lineNumber":136,"author":{"gitId":"lpohsien"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-27"},{"lineNumber":137,"author":{"gitId":"lpohsien"},"content":"                return true;","lastModifiedDate":"2022-10-27"},{"lineNumber":138,"author":{"gitId":"lpohsien"},"content":"            }","lastModifiedDate":"2022-10-27"},{"lineNumber":139,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":140,"author":{"gitId":"lpohsien"},"content":"            // instanceof handles nulls","lastModifiedDate":"2022-10-27"},{"lineNumber":141,"author":{"gitId":"lpohsien"},"content":"            if (!(other instanceof GradeCommand.GradeCommandStudentEditor)) {","lastModifiedDate":"2022-10-27"},{"lineNumber":142,"author":{"gitId":"lpohsien"},"content":"                return false;","lastModifiedDate":"2022-10-27"},{"lineNumber":143,"author":{"gitId":"lpohsien"},"content":"            }","lastModifiedDate":"2022-10-27"},{"lineNumber":144,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":145,"author":{"gitId":"lpohsien"},"content":"            // state check","lastModifiedDate":"2022-10-27"},{"lineNumber":146,"author":{"gitId":"lpohsien"},"content":"            GradeCommand.GradeCommandStudentEditor e \u003d (GradeCommand.GradeCommandStudentEditor) other;","lastModifiedDate":"2022-10-27"},{"lineNumber":147,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":148,"author":{"gitId":"lpohsien"},"content":"            if (getAssignment() \u003d\u003d null \u0026\u0026 e.getAssignment() !\u003d null) {","lastModifiedDate":"2022-10-27"},{"lineNumber":149,"author":{"gitId":"lpohsien"},"content":"                return false;","lastModifiedDate":"2022-10-27"},{"lineNumber":150,"author":{"gitId":"lpohsien"},"content":"            } else if (getAssignment() \u003d\u003d null \u0026\u0026 e.getAssignment() \u003d\u003d null) {","lastModifiedDate":"2022-10-27"},{"lineNumber":151,"author":{"gitId":"lpohsien"},"content":"                return true;","lastModifiedDate":"2022-10-27"},{"lineNumber":152,"author":{"gitId":"lpohsien"},"content":"            }","lastModifiedDate":"2022-10-27"},{"lineNumber":153,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":154,"author":{"gitId":"lpohsien"},"content":"            return getAssignment().equals(e.getAssignment());","lastModifiedDate":"2022-10-27"},{"lineNumber":155,"author":{"gitId":"lpohsien"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":156,"author":{"gitId":"lpohsien"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":157,"author":{"gitId":"lpohsien"},"content":"}","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"Piyotato":37,"lpohsien":115,"comicalromance":5}},{"path":"src/main/java/seedu/studmap/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.logic.commands;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.Model;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"comicalromance"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false, false);","lastModifiedDate":"2022-10-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":18,"comicalromance":3}},{"path":"src/main/java/seedu/studmap/logic/commands/ImportCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.logic.commands;","lastModifiedDate":"2022-10-28"},{"lineNumber":2,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":3,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.Model;","lastModifiedDate":"2022-10-28"},{"lineNumber":4,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":5,"author":{"gitId":"comicalromance"},"content":"/**","lastModifiedDate":"2022-10-28"},{"lineNumber":6,"author":{"gitId":"comicalromance"},"content":" * Imports file using browser.","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"comicalromance"},"content":" */","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"comicalromance"},"content":"public class ImportCommand extends Command {","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":10,"author":{"gitId":"comicalromance"},"content":"    public static final String COMMAND_WORD \u003d \"import\";","lastModifiedDate":"2022-10-28"},{"lineNumber":11,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":12,"author":{"gitId":"comicalromance"},"content":"    public static final String MESSAGE_USAGE \u003d \"Opening Browser...\";","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"comicalromance"},"content":"    @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"comicalromance"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"comicalromance"},"content":"        return new CommandResult(MESSAGE_USAGE, false, true, false);","lastModifiedDate":"2022-10-28"},{"lineNumber":18,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":19,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":20,"author":{"gitId":"comicalromance"},"content":"}","lastModifiedDate":"2022-10-28"}],"authorContributionMap":{"comicalromance":20}},{"path":"src/main/java/seedu/studmap/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.logic.commands;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.model.Model.PREDICATE_SHOW_ALL_STUDENTS;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.Model;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"comicalromance"},"content":" * Lists all students in the student map to the user.","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"comicalromance"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all students\";","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"comicalromance"},"content":"        model.updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":17,"comicalromance":6}},{"path":"src/main/java/seedu/studmap/logic/commands/MarkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.logic.commands;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"lpohsien"},"content":"import static seedu.studmap.logic.parser.CliSyntax.PREFIX_CLASS;","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"comicalromance"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"comicalromance"},"content":"import java.util.List;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"comicalromance"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"Piyotato"},"content":"import seedu.studmap.commons.core.index.IndexListGenerator;","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"Piyotato"},"content":"import seedu.studmap.logic.commands.commons.StudentEditor;","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.student.Attendance;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.student.Student;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.student.StudentData;","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"comicalromance"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"comicalromance"},"content":" * Marks a student identified using its displayed index from the student map as having attended a class or tutorial.","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"comicalromance"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"Piyotato"},"content":"public class MarkCommand extends EditStudentCommand\u003cMarkCommand.MarkCommandStudentEditor\u003e {","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"comicalromance"},"content":"    public static final String COMMAND_WORD \u003d \"mark\";","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"comicalromance"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"lpohsien"},"content":"            + \": Marks the attendance for a student identified by the index number used in the displayed\"","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"comicalromance"},"content":"            + \" student list.\\n\"","lastModifiedDate":"2022-11-03"},{"lineNumber":25,"author":{"gitId":"comicalromance"},"content":"            + \"Marks attendance for the class or tutorial specified in the parameter.\\n\"","lastModifiedDate":"2022-11-03"},{"lineNumber":26,"author":{"gitId":"comicalromance"},"content":"            + \"Parameters: INDEX (must be positive integer or use \\\"all\\\" to mark everyone currently displayed)\"","lastModifiedDate":"2022-11-03"},{"lineNumber":27,"author":{"gitId":"comicalromance"},"content":"            + \" STATUS (must be absent/present) \" + PREFIX_CLASS + \"CLASS\\n\"","lastModifiedDate":"2022-11-07"},{"lineNumber":28,"author":{"gitId":"comicalromance"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 present \" + PREFIX_CLASS + \"T01\\n\"","lastModifiedDate":"2022-11-03"},{"lineNumber":29,"author":{"gitId":"comicalromance"},"content":"            + \"Example: \" + COMMAND_WORD + \" all present \" + PREFIX_CLASS + \"T07\";","lastModifiedDate":"2022-11-03"},{"lineNumber":30,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"Piyotato"},"content":"    public static final String MESSAGE_MARK_SINGLE_SUCCESS_ATTENDANCE \u003d \"Marked Student as %1$s\";","lastModifiedDate":"2022-11-07"},{"lineNumber":32,"author":{"gitId":"comicalromance"},"content":"    public static final String MESSAGE_MARK_MULTI_SUCCESS_ATTENDANCE \u003d \"Marked %1$s students as %2$s\";","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"Piyotato"},"content":"    public static final String MESSAGE_MARK_SINGLE_UNEDITED_ATTENDANCE \u003d \"Student already marked as %1$s\";","lastModifiedDate":"2022-11-07"},{"lineNumber":35,"author":{"gitId":"Piyotato"},"content":"    public static final String MESSAGE_MARK_MULTI_UNEDITED_ATTENDANCE \u003d \"%1$s students are already marked as %2$s\";","lastModifiedDate":"2022-11-06"},{"lineNumber":36,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":37,"author":{"gitId":"lpohsien"},"content":"    public static final String MESSAGE_NO_EDIT \u003d \"Attendance must be provided.\";","lastModifiedDate":"2022-10-27"},{"lineNumber":38,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"Piyotato"},"content":"    public MarkCommand(IndexListGenerator indexListGenerator, MarkCommandStudentEditor studentEditor) {","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"Piyotato"},"content":"        super(indexListGenerator, studentEditor);","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"Piyotato"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":44,"author":{"gitId":"Piyotato"},"content":"    public String getSingleEditSuccessMessage(Student editedStudent) {","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"comicalromance"},"content":"        return String.format(MESSAGE_MARK_SINGLE_SUCCESS_ATTENDANCE,","lastModifiedDate":"2022-10-27"},{"lineNumber":46,"author":{"gitId":"Piyotato"},"content":"                studentEditor.getAttendance().getString());","lastModifiedDate":"2022-11-07"},{"lineNumber":47,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":48,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":49,"author":{"gitId":"Piyotato"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":50,"author":{"gitId":"Piyotato"},"content":"    public String getMultiEditSuccessMessage(List\u003cStudent\u003e editedStudents) {","lastModifiedDate":"2022-10-20"},{"lineNumber":51,"author":{"gitId":"comicalromance"},"content":"        return String.format(MESSAGE_MARK_MULTI_SUCCESS_ATTENDANCE,","lastModifiedDate":"2022-10-27"},{"lineNumber":52,"author":{"gitId":"Piyotato"},"content":"                editedStudents.size(), studentEditor.getAttendance().getString());","lastModifiedDate":"2022-11-07"},{"lineNumber":53,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":54,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":55,"author":{"gitId":"Piyotato"},"content":"    @Override","lastModifiedDate":"2022-11-06"},{"lineNumber":56,"author":{"gitId":"Piyotato"},"content":"    public String getSingleUneditedMessage(Student uneditedStudent) {","lastModifiedDate":"2022-11-06"},{"lineNumber":57,"author":{"gitId":"Piyotato"},"content":"        return String.format(MESSAGE_MARK_SINGLE_UNEDITED_ATTENDANCE,","lastModifiedDate":"2022-11-06"},{"lineNumber":58,"author":{"gitId":"Piyotato"},"content":"                studentEditor.getAttendance().getString());","lastModifiedDate":"2022-11-07"},{"lineNumber":59,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":60,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":61,"author":{"gitId":"Piyotato"},"content":"    @Override","lastModifiedDate":"2022-11-06"},{"lineNumber":62,"author":{"gitId":"Piyotato"},"content":"    public String getMultiUneditedMessage(List\u003cStudent\u003e uneditedStudents) {","lastModifiedDate":"2022-11-06"},{"lineNumber":63,"author":{"gitId":"Piyotato"},"content":"        return String.format(MESSAGE_MARK_MULTI_UNEDITED_ATTENDANCE,","lastModifiedDate":"2022-11-06"},{"lineNumber":64,"author":{"gitId":"Piyotato"},"content":"                uneditedStudents.size(), studentEditor.getAttendance().getString());","lastModifiedDate":"2022-11-07"},{"lineNumber":65,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":66,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":67,"author":{"gitId":"Piyotato"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":68,"author":{"gitId":"Piyotato"},"content":"    public String getNoEditMessage() {","lastModifiedDate":"2022-10-20"},{"lineNumber":69,"author":{"gitId":"Piyotato"},"content":"        return MESSAGE_NO_EDIT;","lastModifiedDate":"2022-10-20"},{"lineNumber":70,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":71,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":72,"author":{"gitId":"Piyotato"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":73,"author":{"gitId":"lpohsien"},"content":"     * A static StudentEditor that adjusts Attendance for a given Student.","lastModifiedDate":"2022-10-27"},{"lineNumber":74,"author":{"gitId":"Piyotato"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":75,"author":{"gitId":"Piyotato"},"content":"    public static class MarkCommandStudentEditor implements StudentEditor {","lastModifiedDate":"2022-10-20"},{"lineNumber":76,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":77,"author":{"gitId":"comicalromance"},"content":"        private final Attendance attendance;","lastModifiedDate":"2022-10-09"},{"lineNumber":78,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":79,"author":{"gitId":"comicalromance"},"content":"        /**","lastModifiedDate":"2022-10-09"},{"lineNumber":80,"author":{"gitId":"Piyotato"},"content":"         * Constructor using Attendance.","lastModifiedDate":"2022-10-20"},{"lineNumber":81,"author":{"gitId":"Piyotato"},"content":"         *","lastModifiedDate":"2022-10-20"},{"lineNumber":82,"author":{"gitId":"Piyotato"},"content":"         * @param attendance Attendance to edit the student with.","lastModifiedDate":"2022-10-20"},{"lineNumber":83,"author":{"gitId":"comicalromance"},"content":"         */","lastModifiedDate":"2022-10-09"},{"lineNumber":84,"author":{"gitId":"Piyotato"},"content":"        public MarkCommandStudentEditor(Attendance attendance) {","lastModifiedDate":"2022-10-20"},{"lineNumber":85,"author":{"gitId":"comicalromance"},"content":"            this.attendance \u003d attendance;","lastModifiedDate":"2022-10-09"},{"lineNumber":86,"author":{"gitId":"comicalromance"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":87,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":88,"author":{"gitId":"Piyotato"},"content":"        public Attendance getAttendance() {","lastModifiedDate":"2022-10-20"},{"lineNumber":89,"author":{"gitId":"Piyotato"},"content":"            return attendance;","lastModifiedDate":"2022-10-20"},{"lineNumber":90,"author":{"gitId":"comicalromance"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":91,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":92,"author":{"gitId":"Piyotato"},"content":"        @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":93,"author":{"gitId":"Piyotato"},"content":"        public EditResult editStudent(Student studentToEdit) {","lastModifiedDate":"2022-11-06"},{"lineNumber":94,"author":{"gitId":"comicalromance"},"content":"            StudentData studentData \u003d studentToEdit.getStudentData();","lastModifiedDate":"2022-10-15"},{"lineNumber":95,"author":{"gitId":"Piyotato"},"content":"            Set\u003cAttendance\u003e newAttendances \u003d new HashSet\u003c\u003e(studentToEdit.getAttendances());","lastModifiedDate":"2022-11-06"},{"lineNumber":96,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":97,"author":{"gitId":"Piyotato"},"content":"            if (newAttendances.stream().anyMatch(x -\u003e x.strongEquals(attendance))) {","lastModifiedDate":"2022-11-06"},{"lineNumber":98,"author":{"gitId":"Piyotato"},"content":"                return new EditResult(studentToEdit, false);","lastModifiedDate":"2022-11-06"},{"lineNumber":99,"author":{"gitId":"Piyotato"},"content":"            }","lastModifiedDate":"2022-11-06"},{"lineNumber":100,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":101,"author":{"gitId":"Piyotato"},"content":"            newAttendances.remove(attendance);","lastModifiedDate":"2022-11-06"},{"lineNumber":102,"author":{"gitId":"Piyotato"},"content":"            newAttendances.add(attendance);","lastModifiedDate":"2022-11-06"},{"lineNumber":103,"author":{"gitId":"Piyotato"},"content":"            studentData.setAttendances(newAttendances);","lastModifiedDate":"2022-11-06"},{"lineNumber":104,"author":{"gitId":"Piyotato"},"content":"            return new EditResult(new Student(studentData), true);","lastModifiedDate":"2022-11-06"},{"lineNumber":105,"author":{"gitId":"Piyotato"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":106,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":107,"author":{"gitId":"Piyotato"},"content":"        @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":108,"author":{"gitId":"Piyotato"},"content":"        public boolean hasEdits() {","lastModifiedDate":"2022-10-20"},{"lineNumber":109,"author":{"gitId":"lpohsien"},"content":"            return attendance !\u003d null;","lastModifiedDate":"2022-10-27"},{"lineNumber":110,"author":{"gitId":"comicalromance"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":111,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":112,"author":{"gitId":"comicalromance"},"content":"        @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":113,"author":{"gitId":"comicalromance"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2022-10-09"},{"lineNumber":114,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":115,"author":{"gitId":"comicalromance"},"content":"            // short circuit if same object","lastModifiedDate":"2022-10-09"},{"lineNumber":116,"author":{"gitId":"comicalromance"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-09"},{"lineNumber":117,"author":{"gitId":"comicalromance"},"content":"                return true;","lastModifiedDate":"2022-10-09"},{"lineNumber":118,"author":{"gitId":"comicalromance"},"content":"            }","lastModifiedDate":"2022-10-09"},{"lineNumber":119,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":120,"author":{"gitId":"comicalromance"},"content":"            // instanceof handles nulls","lastModifiedDate":"2022-10-09"},{"lineNumber":121,"author":{"gitId":"Piyotato"},"content":"            if (!(other instanceof MarkCommand.MarkCommandStudentEditor)) {","lastModifiedDate":"2022-10-20"},{"lineNumber":122,"author":{"gitId":"comicalromance"},"content":"                return false;","lastModifiedDate":"2022-10-09"},{"lineNumber":123,"author":{"gitId":"comicalromance"},"content":"            }","lastModifiedDate":"2022-10-09"},{"lineNumber":124,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":125,"author":{"gitId":"comicalromance"},"content":"            // state check","lastModifiedDate":"2022-10-09"},{"lineNumber":126,"author":{"gitId":"Piyotato"},"content":"            MarkCommand.MarkCommandStudentEditor e \u003d (MarkCommand.MarkCommandStudentEditor) other;","lastModifiedDate":"2022-10-20"},{"lineNumber":127,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":128,"author":{"gitId":"lpohsien"},"content":"            if (getAttendance() \u003d\u003d null \u0026\u0026 e.getAttendance() !\u003d null) {","lastModifiedDate":"2022-10-23"},{"lineNumber":129,"author":{"gitId":"lpohsien"},"content":"                return false;","lastModifiedDate":"2022-10-23"},{"lineNumber":130,"author":{"gitId":"lpohsien"},"content":"            } else if (getAttendance() \u003d\u003d null \u0026\u0026 e.getAttendance() \u003d\u003d null) {","lastModifiedDate":"2022-10-23"},{"lineNumber":131,"author":{"gitId":"lpohsien"},"content":"                return true;","lastModifiedDate":"2022-10-23"},{"lineNumber":132,"author":{"gitId":"lpohsien"},"content":"            }","lastModifiedDate":"2022-10-23"},{"lineNumber":133,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":134,"author":{"gitId":"lpohsien"},"content":"            return getAttendance().equals(e.getAttendance());","lastModifiedDate":"2022-10-27"},{"lineNumber":135,"author":{"gitId":"Piyotato"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":136,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":137,"author":{"gitId":"comicalromance"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"Piyotato":67,"comicalromance":57,"lpohsien":13}},{"path":"src/main/java/seedu/studmap/logic/commands/ParticipateCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"highorbit25"},"content":"package seedu.studmap.logic.commands;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"highorbit25"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"highorbit25"},"content":"import static seedu.studmap.logic.parser.CliSyntax.PREFIX_PARTICIPATION;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"highorbit25"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"highorbit25"},"content":"import java.util.List;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"highorbit25"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"highorbit25"},"content":"import seedu.studmap.commons.core.index.IndexListGenerator;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"highorbit25"},"content":"import seedu.studmap.logic.commands.commons.StudentEditor;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"highorbit25"},"content":"import seedu.studmap.model.student.Participation;","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"highorbit25"},"content":"import seedu.studmap.model.student.Student;","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"highorbit25"},"content":"import seedu.studmap.model.student.StudentData;","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"highorbit25"},"content":"/**","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"highorbit25"},"content":" * Records class participation for a student identified using its displayed index from the student map.","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"highorbit25"},"content":" */","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"highorbit25"},"content":"public class ParticipateCommand extends EditStudentCommand\u003cParticipateCommand.ParticipateCommandStudentEditor\u003e {","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"highorbit25"},"content":"    public static final String COMMAND_WORD \u003d \"participate\";","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"highorbit25"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"highorbit25"},"content":"            + \": Record the participation for a student identified by the index number used in the displayed\"","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"comicalromance"},"content":"            + \" student list.\"","lastModifiedDate":"2022-11-03"},{"lineNumber":26,"author":{"gitId":"highorbit25"},"content":"            + \"\\nRecord participation for the participation component specified in the parameter.\"","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"highorbit25"},"content":"            + \"\\nParameters: INDEX (must be positive integer or use \\\"all\\\" to record everyone currently displayed)\"","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"comicalromance"},"content":"            + \" STATUS (must be yes/no) \"","lastModifiedDate":"2022-11-07"},{"lineNumber":29,"author":{"gitId":"comicalromance"},"content":"            + PREFIX_PARTICIPATION + \"COMPONENT\"","lastModifiedDate":"2022-11-03"},{"lineNumber":30,"author":{"gitId":"highorbit25"},"content":"            + \"\\nExample: \" + COMMAND_WORD + \" 1 yes \" + PREFIX_PARTICIPATION + \"P01\"","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"highorbit25"},"content":"            + \"\\nExample: \" + COMMAND_WORD + \" all yes \" + PREFIX_PARTICIPATION + \"P02\";","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"Piyotato"},"content":"    public static final String MESSAGE_MARK_SINGLE_SUCCESS_PARTICIPATION \u003d \"Recorded Student as %1$s\";","lastModifiedDate":"2022-11-07"},{"lineNumber":34,"author":{"gitId":"highorbit25"},"content":"    public static final String MESSAGE_MARK_MULTI_SUCCESS_PARTICIPATION \u003d \"Recorded %1$s students as %2$s\";","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":36,"author":{"gitId":"Piyotato"},"content":"    public static final String MESSAGE_MARK_SINGLE_UNEDITED_PARTICIPATION \u003d \"Student is already recorded as %1$s\";","lastModifiedDate":"2022-11-07"},{"lineNumber":37,"author":{"gitId":"Piyotato"},"content":"    public static final String MESSAGE_GRADE_MULTI_UNEDITED_ASSIGNMENT \u003d","lastModifiedDate":"2022-11-06"},{"lineNumber":38,"author":{"gitId":"Piyotato"},"content":"            \"%1$s students are already recorded as %2$s\";","lastModifiedDate":"2022-11-06"},{"lineNumber":39,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":40,"author":{"gitId":"highorbit25"},"content":"    public static final String MESSAGE_NO_EDIT \u003d \"Participation component must be provided.\";","lastModifiedDate":"2022-10-27"},{"lineNumber":41,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":42,"author":{"gitId":"highorbit25"},"content":"    public ParticipateCommand(IndexListGenerator indexListGenerator, ParticipateCommandStudentEditor studentEditor) {","lastModifiedDate":"2022-10-27"},{"lineNumber":43,"author":{"gitId":"highorbit25"},"content":"        super(indexListGenerator, studentEditor);","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"highorbit25"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":46,"author":{"gitId":"highorbit25"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":47,"author":{"gitId":"highorbit25"},"content":"    public String getSingleEditSuccessMessage(Student editedStudent) {","lastModifiedDate":"2022-10-27"},{"lineNumber":48,"author":{"gitId":"highorbit25"},"content":"        requireNonNull(studentEditor.getParticipation());","lastModifiedDate":"2022-10-27"},{"lineNumber":49,"author":{"gitId":"highorbit25"},"content":"        return String.format(MESSAGE_MARK_SINGLE_SUCCESS_PARTICIPATION,","lastModifiedDate":"2022-10-27"},{"lineNumber":50,"author":{"gitId":"Piyotato"},"content":"                studentEditor.getParticipation().getString());","lastModifiedDate":"2022-11-07"},{"lineNumber":51,"author":{"gitId":"highorbit25"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":52,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":53,"author":{"gitId":"highorbit25"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":54,"author":{"gitId":"highorbit25"},"content":"    public String getMultiEditSuccessMessage(List\u003cStudent\u003e editedStudents) {","lastModifiedDate":"2022-10-27"},{"lineNumber":55,"author":{"gitId":"highorbit25"},"content":"        requireNonNull(studentEditor.getParticipation());","lastModifiedDate":"2022-10-27"},{"lineNumber":56,"author":{"gitId":"highorbit25"},"content":"        return String.format(MESSAGE_MARK_MULTI_SUCCESS_PARTICIPATION,","lastModifiedDate":"2022-10-27"},{"lineNumber":57,"author":{"gitId":"Piyotato"},"content":"                editedStudents.size(), studentEditor.getParticipation().getString());","lastModifiedDate":"2022-11-07"},{"lineNumber":58,"author":{"gitId":"highorbit25"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":59,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":60,"author":{"gitId":"Piyotato"},"content":"    @Override","lastModifiedDate":"2022-11-06"},{"lineNumber":61,"author":{"gitId":"Piyotato"},"content":"    public String getSingleUneditedMessage(Student uneditedStudent) {","lastModifiedDate":"2022-11-06"},{"lineNumber":62,"author":{"gitId":"Piyotato"},"content":"        requireNonNull(studentEditor.getParticipation());","lastModifiedDate":"2022-11-06"},{"lineNumber":63,"author":{"gitId":"Piyotato"},"content":"        return String.format(MESSAGE_MARK_SINGLE_UNEDITED_PARTICIPATION,","lastModifiedDate":"2022-11-06"},{"lineNumber":64,"author":{"gitId":"Piyotato"},"content":"                studentEditor.getParticipation().getString());","lastModifiedDate":"2022-11-07"},{"lineNumber":65,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":66,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":67,"author":{"gitId":"Piyotato"},"content":"    @Override","lastModifiedDate":"2022-11-06"},{"lineNumber":68,"author":{"gitId":"Piyotato"},"content":"    public String getMultiUneditedMessage(List\u003cStudent\u003e uneditedStudents) {","lastModifiedDate":"2022-11-06"},{"lineNumber":69,"author":{"gitId":"Piyotato"},"content":"        requireNonNull(studentEditor.getParticipation());","lastModifiedDate":"2022-11-06"},{"lineNumber":70,"author":{"gitId":"Piyotato"},"content":"        return String.format(MESSAGE_GRADE_MULTI_UNEDITED_ASSIGNMENT,","lastModifiedDate":"2022-11-06"},{"lineNumber":71,"author":{"gitId":"Piyotato"},"content":"                uneditedStudents.size(), studentEditor.getParticipation().getString());","lastModifiedDate":"2022-11-07"},{"lineNumber":72,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":73,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":74,"author":{"gitId":"highorbit25"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":75,"author":{"gitId":"highorbit25"},"content":"    public String getNoEditMessage() {","lastModifiedDate":"2022-10-27"},{"lineNumber":76,"author":{"gitId":"highorbit25"},"content":"        return MESSAGE_NO_EDIT;","lastModifiedDate":"2022-10-27"},{"lineNumber":77,"author":{"gitId":"highorbit25"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":78,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":79,"author":{"gitId":"highorbit25"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":80,"author":{"gitId":"highorbit25"},"content":"     * A static StudentEditor that adjusts Participation for a given Student.","lastModifiedDate":"2022-10-27"},{"lineNumber":81,"author":{"gitId":"highorbit25"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":82,"author":{"gitId":"highorbit25"},"content":"    public static class ParticipateCommandStudentEditor implements StudentEditor {","lastModifiedDate":"2022-10-27"},{"lineNumber":83,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":84,"author":{"gitId":"highorbit25"},"content":"        private final Participation participation;","lastModifiedDate":"2022-10-27"},{"lineNumber":85,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":86,"author":{"gitId":"highorbit25"},"content":"        /**","lastModifiedDate":"2022-10-27"},{"lineNumber":87,"author":{"gitId":"highorbit25"},"content":"         * Constructor using Participation.","lastModifiedDate":"2022-10-27"},{"lineNumber":88,"author":{"gitId":"highorbit25"},"content":"         *","lastModifiedDate":"2022-10-27"},{"lineNumber":89,"author":{"gitId":"highorbit25"},"content":"         * @param participation Participation to edit the student with.","lastModifiedDate":"2022-10-27"},{"lineNumber":90,"author":{"gitId":"highorbit25"},"content":"         */","lastModifiedDate":"2022-10-27"},{"lineNumber":91,"author":{"gitId":"highorbit25"},"content":"        public ParticipateCommandStudentEditor(Participation participation) {","lastModifiedDate":"2022-10-27"},{"lineNumber":92,"author":{"gitId":"highorbit25"},"content":"            this.participation \u003d participation;","lastModifiedDate":"2022-10-27"},{"lineNumber":93,"author":{"gitId":"highorbit25"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":94,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":95,"author":{"gitId":"highorbit25"},"content":"        public Participation getParticipation() {","lastModifiedDate":"2022-10-27"},{"lineNumber":96,"author":{"gitId":"highorbit25"},"content":"            return participation;","lastModifiedDate":"2022-10-27"},{"lineNumber":97,"author":{"gitId":"highorbit25"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":98,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":99,"author":{"gitId":"highorbit25"},"content":"        @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":100,"author":{"gitId":"Piyotato"},"content":"        public EditResult editStudent(Student studentToEdit) {","lastModifiedDate":"2022-11-06"},{"lineNumber":101,"author":{"gitId":"highorbit25"},"content":"            StudentData studentData \u003d studentToEdit.getStudentData();","lastModifiedDate":"2022-10-27"},{"lineNumber":102,"author":{"gitId":"Piyotato"},"content":"            Set\u003cParticipation\u003e newParticipations \u003d new HashSet\u003c\u003e(studentToEdit.getParticipations());","lastModifiedDate":"2022-11-06"},{"lineNumber":103,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":104,"author":{"gitId":"Piyotato"},"content":"            if (newParticipations.stream().anyMatch(x -\u003e x.strongEquals(participation))) {","lastModifiedDate":"2022-11-06"},{"lineNumber":105,"author":{"gitId":"Piyotato"},"content":"                return new EditResult(studentToEdit, false);","lastModifiedDate":"2022-11-06"},{"lineNumber":106,"author":{"gitId":"highorbit25"},"content":"            }","lastModifiedDate":"2022-10-27"},{"lineNumber":107,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":108,"author":{"gitId":"Piyotato"},"content":"            newParticipations.remove(participation);","lastModifiedDate":"2022-11-06"},{"lineNumber":109,"author":{"gitId":"Piyotato"},"content":"            newParticipations.add(participation);","lastModifiedDate":"2022-11-06"},{"lineNumber":110,"author":{"gitId":"Piyotato"},"content":"            studentData.setParticipations(newParticipations);","lastModifiedDate":"2022-11-06"},{"lineNumber":111,"author":{"gitId":"Piyotato"},"content":"            return new EditResult(new Student(studentData), true);","lastModifiedDate":"2022-11-06"},{"lineNumber":112,"author":{"gitId":"highorbit25"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":113,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":114,"author":{"gitId":"highorbit25"},"content":"        @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":115,"author":{"gitId":"highorbit25"},"content":"        public boolean hasEdits() {","lastModifiedDate":"2022-10-27"},{"lineNumber":116,"author":{"gitId":"highorbit25"},"content":"            return participation !\u003d null;","lastModifiedDate":"2022-10-27"},{"lineNumber":117,"author":{"gitId":"highorbit25"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":118,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":119,"author":{"gitId":"highorbit25"},"content":"        @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":120,"author":{"gitId":"highorbit25"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2022-10-27"},{"lineNumber":121,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":122,"author":{"gitId":"highorbit25"},"content":"            // short circuit if same object","lastModifiedDate":"2022-10-27"},{"lineNumber":123,"author":{"gitId":"highorbit25"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-27"},{"lineNumber":124,"author":{"gitId":"highorbit25"},"content":"                return true;","lastModifiedDate":"2022-10-27"},{"lineNumber":125,"author":{"gitId":"highorbit25"},"content":"            }","lastModifiedDate":"2022-10-27"},{"lineNumber":126,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":127,"author":{"gitId":"highorbit25"},"content":"            // instanceof handles nulls","lastModifiedDate":"2022-10-27"},{"lineNumber":128,"author":{"gitId":"highorbit25"},"content":"            if (!(other instanceof ParticipateCommand.ParticipateCommandStudentEditor)) {","lastModifiedDate":"2022-10-27"},{"lineNumber":129,"author":{"gitId":"highorbit25"},"content":"                return false;","lastModifiedDate":"2022-10-27"},{"lineNumber":130,"author":{"gitId":"highorbit25"},"content":"            }","lastModifiedDate":"2022-10-27"},{"lineNumber":131,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":132,"author":{"gitId":"highorbit25"},"content":"            // state check","lastModifiedDate":"2022-10-27"},{"lineNumber":133,"author":{"gitId":"highorbit25"},"content":"            ParticipateCommand.ParticipateCommandStudentEditor e \u003d","lastModifiedDate":"2022-10-27"},{"lineNumber":134,"author":{"gitId":"highorbit25"},"content":"                    (ParticipateCommand.ParticipateCommandStudentEditor) other;","lastModifiedDate":"2022-10-27"},{"lineNumber":135,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":136,"author":{"gitId":"highorbit25"},"content":"            if (getParticipation() \u003d\u003d null \u0026\u0026 e.getParticipation() !\u003d null) {","lastModifiedDate":"2022-10-27"},{"lineNumber":137,"author":{"gitId":"highorbit25"},"content":"                return false;","lastModifiedDate":"2022-10-27"},{"lineNumber":138,"author":{"gitId":"highorbit25"},"content":"            } else if (getParticipation() \u003d\u003d null \u0026\u0026 e.getParticipation() \u003d\u003d null) {","lastModifiedDate":"2022-10-27"},{"lineNumber":139,"author":{"gitId":"highorbit25"},"content":"                return true;","lastModifiedDate":"2022-10-27"},{"lineNumber":140,"author":{"gitId":"highorbit25"},"content":"            }","lastModifiedDate":"2022-10-27"},{"lineNumber":141,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":142,"author":{"gitId":"highorbit25"},"content":"            return getParticipation().equals(e.getParticipation());","lastModifiedDate":"2022-10-27"},{"lineNumber":143,"author":{"gitId":"highorbit25"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":144,"author":{"gitId":"highorbit25"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":145,"author":{"gitId":"highorbit25"},"content":"}","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"highorbit25":113,"Piyotato":29,"comicalromance":3}},{"path":"src/main/java/seedu/studmap/logic/commands/SortCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.logic.commands;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"highorbit25"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.parser.CliSyntax.PREFIX_ATTRIBUTE;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"highorbit25"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.Model;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.order.Order;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"highorbit25"},"content":"import seedu.studmap.model.student.Student;","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"highorbit25"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"highorbit25"},"content":" * Sorts the student map by specified attribute in specified order.","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"highorbit25"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"highorbit25"},"content":"public class SortCommand extends Command {","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"highorbit25"},"content":"    public static final String COMMAND_WORD \u003d \"sort\";","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"highorbit25"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Sort the list \"","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"highorbit25"},"content":"            + \"by the attribute specified. \\n\"","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"highorbit25"},"content":"            + \"Parameters: ORDER(asc or dsc) \"","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"comicalromance"},"content":"            + \"\" + PREFIX_ATTRIBUTE + \"ATTRIBUTE\\n\"","lastModifiedDate":"2022-11-03"},{"lineNumber":23,"author":{"gitId":"highorbit25"},"content":"            + \"Example: \" + COMMAND_WORD + \" asc \"","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"highorbit25"},"content":"            + PREFIX_ATTRIBUTE + \"name\\n\"","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"highorbit25"},"content":"            + \"Supported attributes: name, module, phone, id, git, handle, email, attendance, participation, \"","lastModifiedDate":"2022-11-03"},{"lineNumber":26,"author":{"gitId":"highorbit25"},"content":"            + \"assignment\";","lastModifiedDate":"2022-11-03"},{"lineNumber":27,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"comicalromance"},"content":"    public static final String MESSAGE_SORT_SUCCESS \u003d \"StudMap has been sorted by %1$s in %2$s order!\";","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"highorbit25"},"content":"    private final Comparator\u003cStudent\u003e comparator;","lastModifiedDate":"2022-10-21"},{"lineNumber":31,"author":{"gitId":"highorbit25"},"content":"    private final Order sortOrder;","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"highorbit25"},"content":"    private final String attributeType;","lastModifiedDate":"2022-10-21"},{"lineNumber":33,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"highorbit25"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":35,"author":{"gitId":"highorbit25"},"content":"     * Sorts the working list by the comparator in ascending or descending order.","lastModifiedDate":"2022-10-21"},{"lineNumber":36,"author":{"gitId":"highorbit25"},"content":"     *","lastModifiedDate":"2022-10-21"},{"lineNumber":37,"author":{"gitId":"highorbit25"},"content":"     * @param comparator The comparator to sort the list by","lastModifiedDate":"2022-10-21"},{"lineNumber":38,"author":{"gitId":"highorbit25"},"content":"     * @param sortOrder Order to sort the list in","lastModifiedDate":"2022-10-15"},{"lineNumber":39,"author":{"gitId":"highorbit25"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":40,"author":{"gitId":"highorbit25"},"content":"    public SortCommand(Comparator\u003cStudent\u003e comparator, String attributeType, Order sortOrder) {","lastModifiedDate":"2022-10-21"},{"lineNumber":41,"author":{"gitId":"highorbit25"},"content":"        this.comparator \u003d comparator;","lastModifiedDate":"2022-10-21"},{"lineNumber":42,"author":{"gitId":"highorbit25"},"content":"        this.attributeType \u003d attributeType.toLowerCase();","lastModifiedDate":"2022-11-03"},{"lineNumber":43,"author":{"gitId":"highorbit25"},"content":"        this.sortOrder \u003d sortOrder;","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"highorbit25"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"highorbit25"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"highorbit25"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"highorbit25"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"highorbit25"},"content":"        model.sortFilteredStudentList(comparator, sortOrder);","lastModifiedDate":"2022-10-21"},{"lineNumber":50,"author":{"gitId":"highorbit25"},"content":"        return new CommandResult(String.format(MESSAGE_SORT_SUCCESS, attributeType, sortOrder.toString()));","lastModifiedDate":"2022-10-21"},{"lineNumber":51,"author":{"gitId":"highorbit25"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"highorbit25"},"content":"    @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":54,"author":{"gitId":"highorbit25"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-15"},{"lineNumber":55,"author":{"gitId":"highorbit25"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-15"},{"lineNumber":56,"author":{"gitId":"highorbit25"},"content":"                || (other instanceof SortCommand // instanceof handles nulls","lastModifiedDate":"2022-10-15"},{"lineNumber":57,"author":{"gitId":"highorbit25"},"content":"                \u0026\u0026 attributeType.equals(((SortCommand) other).attributeType) // state check","lastModifiedDate":"2022-10-21"},{"lineNumber":58,"author":{"gitId":"highorbit25"},"content":"                \u0026\u0026 sortOrder.equals(((SortCommand) other).sortOrder)); // state check","lastModifiedDate":"2022-10-15"},{"lineNumber":59,"author":{"gitId":"highorbit25"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":60,"author":{"gitId":"highorbit25"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"highorbit25":54,"comicalromance":6}},{"path":"src/main/java/seedu/studmap/logic/commands/TagCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.logic.commands;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":3,"author":{"gitId":"lpohsien"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-08"},{"lineNumber":4,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":6,"author":{"gitId":"lpohsien"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"lpohsien"},"content":"import java.util.List;","lastModifiedDate":"2022-10-08"},{"lineNumber":8,"author":{"gitId":"Piyotato"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"lpohsien"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-08"},{"lineNumber":10,"author":{"gitId":"lpohsien"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-08"},{"lineNumber":11,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":12,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.commons.core.LogsCenter;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"Piyotato"},"content":"import seedu.studmap.commons.core.index.IndexListGenerator;","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"lpohsien"},"content":"import seedu.studmap.commons.util.CollectionUtil;","lastModifiedDate":"2022-10-24"},{"lineNumber":15,"author":{"gitId":"Piyotato"},"content":"import seedu.studmap.logic.commands.commons.StudentEditor;","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.student.Student;","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"Piyotato"},"content":"import seedu.studmap.model.student.StudentData;","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.tag.Tag;","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":20,"author":{"gitId":"lpohsien"},"content":"/**","lastModifiedDate":"2022-10-08"},{"lineNumber":21,"author":{"gitId":"comicalromance"},"content":" * Add tag for an existing student in the student map.","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"lpohsien"},"content":" */","lastModifiedDate":"2022-10-08"},{"lineNumber":23,"author":{"gitId":"lpohsien"},"content":"public class TagCommand extends EditStudentCommand\u003cTagCommand.TagCommandStudentEditor\u003e {","lastModifiedDate":"2022-10-28"},{"lineNumber":24,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":25,"author":{"gitId":"lpohsien"},"content":"    public static final Logger LOGGER \u003d LogsCenter.getLogger(TagCommand.class);","lastModifiedDate":"2022-10-28"},{"lineNumber":26,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":27,"author":{"gitId":"lpohsien"},"content":"    public static final String COMMAND_WORD \u003d \"tag\";","lastModifiedDate":"2022-10-28"},{"lineNumber":28,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":29,"author":{"gitId":"lpohsien"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$s, new tag: %2$s\";","lastModifiedDate":"2022-10-08"},{"lineNumber":30,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":31,"author":{"gitId":"comicalromance"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Add tags for a student in the student map.\\n\"","lastModifiedDate":"2022-10-15"},{"lineNumber":32,"author":{"gitId":"comicalromance"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-11-03"},{"lineNumber":33,"author":{"gitId":"comicalromance"},"content":"            + \"INDEX (must be a positive integer or use \\\"all\\\" to add tags for everyone in the list)\"","lastModifiedDate":"2022-11-03"},{"lineNumber":34,"author":{"gitId":"lpohsien"},"content":"            + \" [\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2022-10-08"},{"lineNumber":35,"author":{"gitId":"comicalromance"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2022-11-03"},{"lineNumber":36,"author":{"gitId":"lpohsien"},"content":"            + PREFIX_TAG + \"lab \"","lastModifiedDate":"2022-10-08"},{"lineNumber":37,"author":{"gitId":"comicalromance"},"content":"            + PREFIX_TAG + \"goodProgress\\n\"","lastModifiedDate":"2022-11-03"},{"lineNumber":38,"author":{"gitId":"comicalromance"},"content":"            + \"Example: \" + COMMAND_WORD + \" all \"","lastModifiedDate":"2022-11-03"},{"lineNumber":39,"author":{"gitId":"lpohsien"},"content":"            + PREFIX_TAG + \"tutorial \"","lastModifiedDate":"2022-10-08"},{"lineNumber":40,"author":{"gitId":"lpohsien"},"content":"            + PREFIX_TAG + \"needRemedial\";","lastModifiedDate":"2022-10-08"},{"lineNumber":41,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":42,"author":{"gitId":"comicalromance"},"content":"    public static final String MESSAGE_SINGLE_ADD_TAGS_SUCCESS \u003d \"Added tags %1$s Student: %2$s\";","lastModifiedDate":"2022-10-15"},{"lineNumber":43,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":44,"author":{"gitId":"comicalromance"},"content":"    public static final String MESSAGE_MULTI_ADD_TAGS_SUCCESS \u003d \"Added tags %1$s for %2$d students\";","lastModifiedDate":"2022-10-15"},{"lineNumber":45,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":46,"author":{"gitId":"Piyotato"},"content":"    public static final String MESSAGE_SINGLE_UNEDITED \u003d \"Tags not added to Student: %1$s\";","lastModifiedDate":"2022-11-06"},{"lineNumber":47,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":48,"author":{"gitId":"Piyotato"},"content":"    public static final String MESSAGE_MULTI_UNEDITED \u003d \"Tags not added to %1$d students\";","lastModifiedDate":"2022-11-06"},{"lineNumber":49,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":50,"author":{"gitId":"lpohsien"},"content":"    public static final String MESSAGE_TAGS_NOT_ADDED \u003d \"At least one tag must be added\";","lastModifiedDate":"2022-10-08"},{"lineNumber":51,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":52,"author":{"gitId":"lpohsien"},"content":"    public TagCommand(IndexListGenerator indexListGenerator, TagCommandStudentEditor editor) {","lastModifiedDate":"2022-10-28"},{"lineNumber":53,"author":{"gitId":"Piyotato"},"content":"        super(indexListGenerator, editor);","lastModifiedDate":"2022-10-20"},{"lineNumber":54,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":55,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":56,"author":{"gitId":"Piyotato"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":57,"author":{"gitId":"Piyotato"},"content":"    public String getSingleEditSuccessMessage(Student editedStudent) {","lastModifiedDate":"2022-10-20"},{"lineNumber":58,"author":{"gitId":"lpohsien"},"content":"        return String.format(MESSAGE_SINGLE_ADD_TAGS_SUCCESS, CollectionUtil.collectionToString(studentEditor.tags),","lastModifiedDate":"2022-10-24"},{"lineNumber":59,"author":{"gitId":"Piyotato"},"content":"                editedStudent.getName());","lastModifiedDate":"2022-10-20"},{"lineNumber":60,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":61,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":62,"author":{"gitId":"Piyotato"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":63,"author":{"gitId":"Piyotato"},"content":"    public String getMultiEditSuccessMessage(List\u003cStudent\u003e editedStudents) {","lastModifiedDate":"2022-10-20"},{"lineNumber":64,"author":{"gitId":"lpohsien"},"content":"        return String.format(MESSAGE_MULTI_ADD_TAGS_SUCCESS,","lastModifiedDate":"2022-10-24"},{"lineNumber":65,"author":{"gitId":"lpohsien"},"content":"                CollectionUtil.collectionToString(studentEditor.tags),","lastModifiedDate":"2022-10-24"},{"lineNumber":66,"author":{"gitId":"lpohsien"},"content":"                editedStudents.size());","lastModifiedDate":"2022-10-24"},{"lineNumber":67,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":68,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":69,"author":{"gitId":"Piyotato"},"content":"    @Override","lastModifiedDate":"2022-11-06"},{"lineNumber":70,"author":{"gitId":"Piyotato"},"content":"    public String getSingleUneditedMessage(Student uneditedStudent) {","lastModifiedDate":"2022-11-06"},{"lineNumber":71,"author":{"gitId":"Piyotato"},"content":"        return String.format(MESSAGE_SINGLE_UNEDITED,","lastModifiedDate":"2022-11-06"},{"lineNumber":72,"author":{"gitId":"Piyotato"},"content":"                uneditedStudent.getName());","lastModifiedDate":"2022-11-06"},{"lineNumber":73,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":74,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":75,"author":{"gitId":"Piyotato"},"content":"    @Override","lastModifiedDate":"2022-11-06"},{"lineNumber":76,"author":{"gitId":"Piyotato"},"content":"    public String getMultiUneditedMessage(List\u003cStudent\u003e uneditedStudents) {","lastModifiedDate":"2022-11-06"},{"lineNumber":77,"author":{"gitId":"Piyotato"},"content":"        return String.format(MESSAGE_MULTI_UNEDITED,","lastModifiedDate":"2022-11-06"},{"lineNumber":78,"author":{"gitId":"Piyotato"},"content":"                uneditedStudents.size());","lastModifiedDate":"2022-11-06"},{"lineNumber":79,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":80,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":81,"author":{"gitId":"Piyotato"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":82,"author":{"gitId":"Piyotato"},"content":"    public String getNoEditMessage() {","lastModifiedDate":"2022-10-20"},{"lineNumber":83,"author":{"gitId":"Piyotato"},"content":"        return MESSAGE_TAGS_NOT_ADDED;","lastModifiedDate":"2022-10-20"},{"lineNumber":84,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":85,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":86,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":87,"author":{"gitId":"lpohsien"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":88,"author":{"gitId":"Piyotato"},"content":"     * A static StudentEditor that adds tags to a given Student.","lastModifiedDate":"2022-10-20"},{"lineNumber":89,"author":{"gitId":"lpohsien"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":90,"author":{"gitId":"lpohsien"},"content":"    public static class TagCommandStudentEditor implements StudentEditor {","lastModifiedDate":"2022-10-28"},{"lineNumber":91,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":92,"author":{"gitId":"Piyotato"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2022-10-20"},{"lineNumber":93,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":94,"author":{"gitId":"Piyotato"},"content":"        /**","lastModifiedDate":"2022-10-20"},{"lineNumber":95,"author":{"gitId":"Piyotato"},"content":"         * Parameterless constructor.","lastModifiedDate":"2022-10-20"},{"lineNumber":96,"author":{"gitId":"Piyotato"},"content":"         */","lastModifiedDate":"2022-10-20"},{"lineNumber":97,"author":{"gitId":"lpohsien"},"content":"        public TagCommandStudentEditor() {","lastModifiedDate":"2022-10-28"},{"lineNumber":98,"author":{"gitId":"lpohsien"},"content":"        }","lastModifiedDate":"2022-10-08"},{"lineNumber":99,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":100,"author":{"gitId":"lpohsien"},"content":"        /**","lastModifiedDate":"2022-10-08"},{"lineNumber":101,"author":{"gitId":"Piyotato"},"content":"         * Constructor with tags.","lastModifiedDate":"2022-10-20"},{"lineNumber":102,"author":{"gitId":"Piyotato"},"content":"         *","lastModifiedDate":"2022-10-20"},{"lineNumber":103,"author":{"gitId":"Piyotato"},"content":"         * @param tags Tags that this editor will add to a given Student.","lastModifiedDate":"2022-10-20"},{"lineNumber":104,"author":{"gitId":"lpohsien"},"content":"         */","lastModifiedDate":"2022-10-08"},{"lineNumber":105,"author":{"gitId":"lpohsien"},"content":"        public TagCommandStudentEditor(Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-10-28"},{"lineNumber":106,"author":{"gitId":"lpohsien"},"content":"            requireNonNull(tags);","lastModifiedDate":"2022-10-08"},{"lineNumber":107,"author":{"gitId":"Piyotato"},"content":"            setTags(tags);","lastModifiedDate":"2022-10-20"},{"lineNumber":108,"author":{"gitId":"lpohsien"},"content":"        }","lastModifiedDate":"2022-10-08"},{"lineNumber":109,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":110,"author":{"gitId":"Piyotato"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2022-10-20"},{"lineNumber":111,"author":{"gitId":"Piyotato"},"content":"            return Optional.ofNullable(tags);","lastModifiedDate":"2022-10-20"},{"lineNumber":112,"author":{"gitId":"lpohsien"},"content":"        }","lastModifiedDate":"2022-10-08"},{"lineNumber":113,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":114,"author":{"gitId":"Piyotato"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-10-20"},{"lineNumber":115,"author":{"gitId":"Piyotato"},"content":"            requireNonNull(tags);","lastModifiedDate":"2022-10-20"},{"lineNumber":116,"author":{"gitId":"Piyotato"},"content":"            this.tags \u003d new HashSet\u003c\u003e(tags);","lastModifiedDate":"2022-10-20"},{"lineNumber":117,"author":{"gitId":"lpohsien"},"content":"        }","lastModifiedDate":"2022-10-08"},{"lineNumber":118,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":119,"author":{"gitId":"Piyotato"},"content":"        @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":120,"author":{"gitId":"Piyotato"},"content":"        public EditResult editStudent(Student studentToEdit) {","lastModifiedDate":"2022-11-06"},{"lineNumber":121,"author":{"gitId":"Piyotato"},"content":"            assert studentToEdit !\u003d null;","lastModifiedDate":"2022-10-20"},{"lineNumber":122,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":123,"author":{"gitId":"Piyotato"},"content":"            StudentData studentData \u003d studentToEdit.getStudentData();","lastModifiedDate":"2022-10-20"},{"lineNumber":124,"author":{"gitId":"Piyotato"},"content":"            Set\u003cTag\u003e newTags \u003d studentData.getTags();","lastModifiedDate":"2022-10-20"},{"lineNumber":125,"author":{"gitId":"Piyotato"},"content":"            boolean isEdited \u003d newTags.addAll(tags);","lastModifiedDate":"2022-11-06"},{"lineNumber":126,"author":{"gitId":"Piyotato"},"content":"            studentData.setTags(newTags);","lastModifiedDate":"2022-10-20"},{"lineNumber":127,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":128,"author":{"gitId":"Piyotato"},"content":"            return new EditResult(new Student(studentData), isEdited);","lastModifiedDate":"2022-11-06"},{"lineNumber":129,"author":{"gitId":"lpohsien"},"content":"        }","lastModifiedDate":"2022-10-08"},{"lineNumber":130,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":131,"author":{"gitId":"Piyotato"},"content":"        @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":132,"author":{"gitId":"Piyotato"},"content":"        public boolean hasEdits() {","lastModifiedDate":"2022-10-20"},{"lineNumber":133,"author":{"gitId":"Piyotato"},"content":"            return tags !\u003d null \u0026\u0026 tags.size() \u003e 0;","lastModifiedDate":"2022-10-20"},{"lineNumber":134,"author":{"gitId":"lpohsien"},"content":"        }","lastModifiedDate":"2022-10-08"},{"lineNumber":135,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":136,"author":{"gitId":"lpohsien"},"content":"        @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":137,"author":{"gitId":"lpohsien"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2022-10-08"},{"lineNumber":138,"author":{"gitId":"lpohsien"},"content":"            // short circuit if same object","lastModifiedDate":"2022-10-08"},{"lineNumber":139,"author":{"gitId":"lpohsien"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-08"},{"lineNumber":140,"author":{"gitId":"lpohsien"},"content":"                return true;","lastModifiedDate":"2022-10-08"},{"lineNumber":141,"author":{"gitId":"lpohsien"},"content":"            }","lastModifiedDate":"2022-10-08"},{"lineNumber":142,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":143,"author":{"gitId":"lpohsien"},"content":"            // instanceof handles nulls","lastModifiedDate":"2022-10-08"},{"lineNumber":144,"author":{"gitId":"Piyotato"},"content":"            if (!(other instanceof EditCommand.EditCommandStudentEditor)) {","lastModifiedDate":"2022-10-20"},{"lineNumber":145,"author":{"gitId":"lpohsien"},"content":"                return false;","lastModifiedDate":"2022-10-08"},{"lineNumber":146,"author":{"gitId":"lpohsien"},"content":"            }","lastModifiedDate":"2022-10-08"},{"lineNumber":147,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":148,"author":{"gitId":"lpohsien"},"content":"            // state check","lastModifiedDate":"2022-10-08"},{"lineNumber":149,"author":{"gitId":"Piyotato"},"content":"            EditCommand.EditCommandStudentEditor e \u003d (EditCommand.EditCommandStudentEditor) other;","lastModifiedDate":"2022-10-20"},{"lineNumber":150,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":151,"author":{"gitId":"Piyotato"},"content":"            return getTags().equals(e.getTags());","lastModifiedDate":"2022-10-20"},{"lineNumber":152,"author":{"gitId":"Piyotato"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":153,"author":{"gitId":"lpohsien"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":154,"author":{"gitId":"lpohsien"},"content":"}","lastModifiedDate":"2022-10-08"}],"authorContributionMap":{"Piyotato":65,"comicalromance":14,"lpohsien":75}},{"path":"src/main/java/seedu/studmap/logic/commands/UngradeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lpohsien"},"content":"package seedu.studmap.logic.commands;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"lpohsien"},"content":"import static seedu.studmap.logic.parser.CliSyntax.PREFIX_ASSIGNMENT;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"lpohsien"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"lpohsien"},"content":"import java.util.List;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"lpohsien"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"lpohsien"},"content":"import seedu.studmap.commons.core.index.IndexListGenerator;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"lpohsien"},"content":"import seedu.studmap.logic.commands.commons.StudentEditor;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"lpohsien"},"content":"import seedu.studmap.model.student.Assignment;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"lpohsien"},"content":"import seedu.studmap.model.student.Student;","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"lpohsien"},"content":"import seedu.studmap.model.student.StudentData;","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"lpohsien"},"content":"/**","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"lpohsien"},"content":" * Remove the specified assignment from the student identified using its displayed index.","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"lpohsien"},"content":" */","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"lpohsien"},"content":"public class UngradeCommand extends EditStudentCommand\u003cUngradeCommand.UngradeCommandStudentEditor\u003e {","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"lpohsien"},"content":"    public static final String COMMAND_WORD \u003d \"ungrade\";","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"lpohsien"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"lpohsien"},"content":"            + \": Remove the assignment for student identified by the index number used in the displayed student list.\"","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"lpohsien"},"content":"            + \"\\nRemoves the specified assignment.\\n\"","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"lpohsien"},"content":"            + \"Parameters: INDEX (must be positive integer) \"","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"comicalromance"},"content":"            + PREFIX_ASSIGNMENT + \"ASSIGNMENT\"","lastModifiedDate":"2022-11-03"},{"lineNumber":27,"author":{"gitId":"lpohsien"},"content":"            + \"\\nExample: \" + COMMAND_WORD + \" 1 \" + PREFIX_ASSIGNMENT + \" A01\"","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"lpohsien"},"content":"            + \"\\nExample: \" + COMMAND_WORD + \" all \" + PREFIX_ASSIGNMENT + \" A02\";","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"lpohsien"},"content":"    public static final String MESSAGE_UNGRADE_SINGLE_ASSIGNMENT_SUCCESS \u003d \"Removed Assignment %1$s from Student: %2$s\";","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"lpohsien"},"content":"    public static final String MESSAGE_UNGRADE_MULTI_ASSIGNMENT_SUCCESS \u003d \"Removed Assignment %1$s from %2$s Students\";","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":34,"author":{"gitId":"Piyotato"},"content":"    public static final String MESSAGE_UNMARK_SINGLE_ASSIGNMENT_UNEDITED \u003d \"Assignment %1$s not found in Student: %2$s\";","lastModifiedDate":"2022-11-06"},{"lineNumber":35,"author":{"gitId":"Piyotato"},"content":"    public static final String MESSAGE_UNMARK_MULTI_ASSIGNMENT_UNEDITED \u003d \"Assignment %1$s not found in %2$s students\";","lastModifiedDate":"2022-11-06"},{"lineNumber":36,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"lpohsien"},"content":"    public static final String MESSAGE_NO_EDIT \u003d \"Assignment must be provided.\";","lastModifiedDate":"2022-10-27"},{"lineNumber":38,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"lpohsien"},"content":"    public UngradeCommand(IndexListGenerator indexListGenerator, UngradeCommandStudentEditor studentEditor) {","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"lpohsien"},"content":"        super(indexListGenerator, studentEditor);","lastModifiedDate":"2022-10-27"},{"lineNumber":41,"author":{"gitId":"lpohsien"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":42,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":43,"author":{"gitId":"lpohsien"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"lpohsien"},"content":"    public String getSingleEditSuccessMessage(Student editedStudent) {","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"lpohsien"},"content":"        Assignment assignment \u003d studentEditor.getAssignment();","lastModifiedDate":"2022-10-27"},{"lineNumber":46,"author":{"gitId":"lpohsien"},"content":"        return String.format(MESSAGE_UNGRADE_SINGLE_ASSIGNMENT_SUCCESS,","lastModifiedDate":"2022-10-27"},{"lineNumber":47,"author":{"gitId":"Piyotato"},"content":"                assignment.getAttributeName(),","lastModifiedDate":"2022-11-06"},{"lineNumber":48,"author":{"gitId":"lpohsien"},"content":"                editedStudent);","lastModifiedDate":"2022-10-27"},{"lineNumber":49,"author":{"gitId":"lpohsien"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":50,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":51,"author":{"gitId":"lpohsien"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":52,"author":{"gitId":"lpohsien"},"content":"    public String getMultiEditSuccessMessage(List\u003cStudent\u003e editedStudents) {","lastModifiedDate":"2022-10-27"},{"lineNumber":53,"author":{"gitId":"lpohsien"},"content":"        Assignment assignment \u003d studentEditor.getAssignment();","lastModifiedDate":"2022-10-27"},{"lineNumber":54,"author":{"gitId":"lpohsien"},"content":"        return String.format(MESSAGE_UNGRADE_MULTI_ASSIGNMENT_SUCCESS,","lastModifiedDate":"2022-10-27"},{"lineNumber":55,"author":{"gitId":"Piyotato"},"content":"                assignment.getAttributeName(),","lastModifiedDate":"2022-11-06"},{"lineNumber":56,"author":{"gitId":"lpohsien"},"content":"                editedStudents.size());","lastModifiedDate":"2022-10-27"},{"lineNumber":57,"author":{"gitId":"lpohsien"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":58,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":59,"author":{"gitId":"Piyotato"},"content":"    @Override","lastModifiedDate":"2022-11-06"},{"lineNumber":60,"author":{"gitId":"Piyotato"},"content":"    public String getSingleUneditedMessage(Student uneditedStudent) {","lastModifiedDate":"2022-11-06"},{"lineNumber":61,"author":{"gitId":"Piyotato"},"content":"        Assignment assignment \u003d studentEditor.getAssignment();","lastModifiedDate":"2022-11-06"},{"lineNumber":62,"author":{"gitId":"Piyotato"},"content":"        return String.format(MESSAGE_UNMARK_SINGLE_ASSIGNMENT_UNEDITED,","lastModifiedDate":"2022-11-06"},{"lineNumber":63,"author":{"gitId":"Piyotato"},"content":"                assignment.getAttributeName(),","lastModifiedDate":"2022-11-06"},{"lineNumber":64,"author":{"gitId":"Piyotato"},"content":"                uneditedStudent);","lastModifiedDate":"2022-11-06"},{"lineNumber":65,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":66,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":67,"author":{"gitId":"Piyotato"},"content":"    @Override","lastModifiedDate":"2022-11-06"},{"lineNumber":68,"author":{"gitId":"Piyotato"},"content":"    public String getMultiUneditedMessage(List\u003cStudent\u003e uneditedStudents) {","lastModifiedDate":"2022-11-06"},{"lineNumber":69,"author":{"gitId":"Piyotato"},"content":"        Assignment assignment \u003d studentEditor.getAssignment();","lastModifiedDate":"2022-11-06"},{"lineNumber":70,"author":{"gitId":"Piyotato"},"content":"        return String.format(MESSAGE_UNMARK_MULTI_ASSIGNMENT_UNEDITED,","lastModifiedDate":"2022-11-06"},{"lineNumber":71,"author":{"gitId":"Piyotato"},"content":"                assignment.getAttributeName(),","lastModifiedDate":"2022-11-06"},{"lineNumber":72,"author":{"gitId":"Piyotato"},"content":"                uneditedStudents.size());","lastModifiedDate":"2022-11-06"},{"lineNumber":73,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":74,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":75,"author":{"gitId":"lpohsien"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":76,"author":{"gitId":"lpohsien"},"content":"    public String getNoEditMessage() {","lastModifiedDate":"2022-10-27"},{"lineNumber":77,"author":{"gitId":"lpohsien"},"content":"        return MESSAGE_NO_EDIT;","lastModifiedDate":"2022-10-27"},{"lineNumber":78,"author":{"gitId":"lpohsien"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":79,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":80,"author":{"gitId":"lpohsien"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":81,"author":{"gitId":"lpohsien"},"content":"     * A static StudentEditor that adjusts Assignment for a given Student.","lastModifiedDate":"2022-10-27"},{"lineNumber":82,"author":{"gitId":"lpohsien"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":83,"author":{"gitId":"lpohsien"},"content":"    public static class UngradeCommandStudentEditor implements StudentEditor {","lastModifiedDate":"2022-10-27"},{"lineNumber":84,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":85,"author":{"gitId":"lpohsien"},"content":"        private final Assignment assignment;","lastModifiedDate":"2022-10-27"},{"lineNumber":86,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":87,"author":{"gitId":"lpohsien"},"content":"        /**","lastModifiedDate":"2022-10-27"},{"lineNumber":88,"author":{"gitId":"lpohsien"},"content":"         * Constructor using Assignment.","lastModifiedDate":"2022-10-27"},{"lineNumber":89,"author":{"gitId":"lpohsien"},"content":"         *","lastModifiedDate":"2022-10-27"},{"lineNumber":90,"author":{"gitId":"lpohsien"},"content":"         * @param assignment Assignment to edit the student with.","lastModifiedDate":"2022-10-27"},{"lineNumber":91,"author":{"gitId":"lpohsien"},"content":"         */","lastModifiedDate":"2022-10-27"},{"lineNumber":92,"author":{"gitId":"lpohsien"},"content":"        public UngradeCommandStudentEditor(Assignment assignment) {","lastModifiedDate":"2022-10-27"},{"lineNumber":93,"author":{"gitId":"lpohsien"},"content":"            this.assignment \u003d assignment;","lastModifiedDate":"2022-10-27"},{"lineNumber":94,"author":{"gitId":"lpohsien"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":95,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":96,"author":{"gitId":"lpohsien"},"content":"        public Assignment getAssignment() {","lastModifiedDate":"2022-10-27"},{"lineNumber":97,"author":{"gitId":"lpohsien"},"content":"            return assignment;","lastModifiedDate":"2022-10-27"},{"lineNumber":98,"author":{"gitId":"lpohsien"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":99,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":100,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":101,"author":{"gitId":"lpohsien"},"content":"        @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":102,"author":{"gitId":"Piyotato"},"content":"        public EditResult editStudent(Student studentToEdit) {","lastModifiedDate":"2022-11-06"},{"lineNumber":103,"author":{"gitId":"lpohsien"},"content":"            StudentData studentData \u003d studentToEdit.getStudentData();","lastModifiedDate":"2022-10-27"},{"lineNumber":104,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":105,"author":{"gitId":"lpohsien"},"content":"            Set\u003cAssignment\u003e newAssignments \u003d new HashSet\u003c\u003e(studentToEdit.getAssignments());","lastModifiedDate":"2022-10-27"},{"lineNumber":106,"author":{"gitId":"Piyotato"},"content":"            boolean isEdited \u003d newAssignments.remove(assignment);","lastModifiedDate":"2022-11-06"},{"lineNumber":107,"author":{"gitId":"lpohsien"},"content":"            studentData.setAssignments(newAssignments);","lastModifiedDate":"2022-10-27"},{"lineNumber":108,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":109,"author":{"gitId":"Piyotato"},"content":"            return new EditResult(new Student(studentData), isEdited);","lastModifiedDate":"2022-11-06"},{"lineNumber":110,"author":{"gitId":"lpohsien"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":111,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":112,"author":{"gitId":"lpohsien"},"content":"        @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":113,"author":{"gitId":"lpohsien"},"content":"        public boolean hasEdits() {","lastModifiedDate":"2022-10-27"},{"lineNumber":114,"author":{"gitId":"lpohsien"},"content":"            return assignment !\u003d null;","lastModifiedDate":"2022-10-27"},{"lineNumber":115,"author":{"gitId":"lpohsien"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":116,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":117,"author":{"gitId":"lpohsien"},"content":"        @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":118,"author":{"gitId":"lpohsien"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2022-10-27"},{"lineNumber":119,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":120,"author":{"gitId":"lpohsien"},"content":"            // short circuit if same object","lastModifiedDate":"2022-10-27"},{"lineNumber":121,"author":{"gitId":"lpohsien"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-27"},{"lineNumber":122,"author":{"gitId":"lpohsien"},"content":"                return true;","lastModifiedDate":"2022-10-27"},{"lineNumber":123,"author":{"gitId":"lpohsien"},"content":"            }","lastModifiedDate":"2022-10-27"},{"lineNumber":124,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":125,"author":{"gitId":"lpohsien"},"content":"            // instanceof handles nulls","lastModifiedDate":"2022-10-27"},{"lineNumber":126,"author":{"gitId":"lpohsien"},"content":"            if (!(other instanceof UngradeCommand.UngradeCommandStudentEditor)) {","lastModifiedDate":"2022-10-27"},{"lineNumber":127,"author":{"gitId":"lpohsien"},"content":"                return false;","lastModifiedDate":"2022-10-27"},{"lineNumber":128,"author":{"gitId":"lpohsien"},"content":"            }","lastModifiedDate":"2022-10-27"},{"lineNumber":129,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":130,"author":{"gitId":"lpohsien"},"content":"            // state check","lastModifiedDate":"2022-10-27"},{"lineNumber":131,"author":{"gitId":"lpohsien"},"content":"            UngradeCommand.UngradeCommandStudentEditor e \u003d (UngradeCommand.UngradeCommandStudentEditor) other;","lastModifiedDate":"2022-10-27"},{"lineNumber":132,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":133,"author":{"gitId":"lpohsien"},"content":"            if (getAssignment() \u003d\u003d null \u0026\u0026 e.getAssignment() !\u003d null) {","lastModifiedDate":"2022-10-27"},{"lineNumber":134,"author":{"gitId":"lpohsien"},"content":"                return false;","lastModifiedDate":"2022-10-27"},{"lineNumber":135,"author":{"gitId":"lpohsien"},"content":"            } else if (getAssignment() \u003d\u003d null \u0026\u0026 e.getAssignment() \u003d\u003d null) {","lastModifiedDate":"2022-10-27"},{"lineNumber":136,"author":{"gitId":"lpohsien"},"content":"                return true;","lastModifiedDate":"2022-10-27"},{"lineNumber":137,"author":{"gitId":"lpohsien"},"content":"            }","lastModifiedDate":"2022-10-27"},{"lineNumber":138,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":139,"author":{"gitId":"lpohsien"},"content":"            return getAssignment().equals(e.getAssignment());","lastModifiedDate":"2022-10-27"},{"lineNumber":140,"author":{"gitId":"lpohsien"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":141,"author":{"gitId":"lpohsien"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":142,"author":{"gitId":"lpohsien"},"content":"}","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"Piyotato":23,"lpohsien":118,"comicalromance":1}},{"path":"src/main/java/seedu/studmap/logic/commands/UnmarkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.logic.commands;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.parser.CliSyntax.PREFIX_CLASS;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"comicalromance"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"comicalromance"},"content":"import java.util.List;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"comicalromance"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"lpohsien"},"content":"import seedu.studmap.commons.core.index.IndexListGenerator;","lastModifiedDate":"2022-10-24"},{"lineNumber":10,"author":{"gitId":"lpohsien"},"content":"import seedu.studmap.logic.commands.commons.StudentEditor;","lastModifiedDate":"2022-10-24"},{"lineNumber":11,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.student.Attendance;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.student.Student;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.student.StudentData;","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"comicalromance"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"comicalromance"},"content":" * Unmarks the specified attendance record from the student identified using its displayed index.","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"comicalromance"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"lpohsien"},"content":"public class UnmarkCommand extends EditStudentCommand\u003cUnmarkCommand.UnmarkCommandStudentEditor\u003e {","lastModifiedDate":"2022-10-24"},{"lineNumber":19,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"comicalromance"},"content":"    public static final String COMMAND_WORD \u003d \"unmark\";","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"comicalromance"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"lpohsien"},"content":"            + \": Unmarks the attendance for student identified by the index number used in the displayed student list.\"","lastModifiedDate":"2022-10-23"},{"lineNumber":24,"author":{"gitId":"lpohsien"},"content":"            + \"\\nRemoves attendance record for the class or tutorial specified in the parameter.\\n\"","lastModifiedDate":"2022-10-23"},{"lineNumber":25,"author":{"gitId":"comicalromance"},"content":"            + \"Parameters: INDEX (must be positive integer) \"","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"comicalromance"},"content":"            + PREFIX_CLASS + \"CLASS\\n\"","lastModifiedDate":"2022-11-03"},{"lineNumber":27,"author":{"gitId":"comicalromance"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \" + PREFIX_CLASS + \" T01\\n\"","lastModifiedDate":"2022-11-03"},{"lineNumber":28,"author":{"gitId":"lpohsien"},"content":"            + \"Example: \" + COMMAND_WORD + \" all \" + PREFIX_CLASS + \" T02\";","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":30,"author":{"gitId":"lpohsien"},"content":"    public static final String MESSAGE_UNMARK_SINGLE_ATTENDANCE_SUCCESS \u003d \"Removed Class %1$s from Student: %2$s\";","lastModifiedDate":"2022-10-24"},{"lineNumber":31,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":32,"author":{"gitId":"lpohsien"},"content":"    public static final String MESSAGE_UNMARK_MULTI_ATTENDANCE_SUCCESS \u003d \"Removed Class %1$s from %2$s students\";","lastModifiedDate":"2022-10-24"},{"lineNumber":33,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":34,"author":{"gitId":"Piyotato"},"content":"    public static final String MESSAGE_UNMARK_SINGLE_ATTENDANCE_UNEDITED \u003d \"Class %1$s not found in Student: %2$s\";","lastModifiedDate":"2022-11-06"},{"lineNumber":35,"author":{"gitId":"Piyotato"},"content":"    public static final String MESSAGE_UNMARK_MULTI_ATTENDANCE_UNEDITED \u003d \"Class %1$s not found in %2$s students\";","lastModifiedDate":"2022-11-06"},{"lineNumber":36,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"lpohsien"},"content":"    public static final String MESSAGE_NO_EDIT \u003d \"Attendance must be provided.\";","lastModifiedDate":"2022-10-27"},{"lineNumber":38,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"lpohsien"},"content":"    public UnmarkCommand(IndexListGenerator indexListGenerator, UnmarkCommandStudentEditor studentEditor) {","lastModifiedDate":"2022-10-24"},{"lineNumber":40,"author":{"gitId":"lpohsien"},"content":"        super(indexListGenerator, studentEditor);","lastModifiedDate":"2022-10-24"},{"lineNumber":41,"author":{"gitId":"lpohsien"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":42,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":43,"author":{"gitId":"lpohsien"},"content":"    @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":44,"author":{"gitId":"lpohsien"},"content":"    public String getSingleEditSuccessMessage(Student editedStudent) {","lastModifiedDate":"2022-10-24"},{"lineNumber":45,"author":{"gitId":"lpohsien"},"content":"        return String.format(MESSAGE_UNMARK_SINGLE_ATTENDANCE_SUCCESS,","lastModifiedDate":"2022-10-24"},{"lineNumber":46,"author":{"gitId":"Piyotato"},"content":"                studentEditor.getAttendance().identifier,","lastModifiedDate":"2022-11-06"},{"lineNumber":47,"author":{"gitId":"lpohsien"},"content":"                editedStudent);","lastModifiedDate":"2022-10-24"},{"lineNumber":48,"author":{"gitId":"lpohsien"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":49,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":50,"author":{"gitId":"lpohsien"},"content":"    @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":51,"author":{"gitId":"lpohsien"},"content":"    public String getMultiEditSuccessMessage(List\u003cStudent\u003e editedStudents) {","lastModifiedDate":"2022-10-24"},{"lineNumber":52,"author":{"gitId":"lpohsien"},"content":"        return String.format(MESSAGE_UNMARK_MULTI_ATTENDANCE_SUCCESS,","lastModifiedDate":"2022-10-24"},{"lineNumber":53,"author":{"gitId":"Piyotato"},"content":"                studentEditor.getAttendance().identifier,","lastModifiedDate":"2022-11-06"},{"lineNumber":54,"author":{"gitId":"lpohsien"},"content":"                editedStudents.size());","lastModifiedDate":"2022-10-24"},{"lineNumber":55,"author":{"gitId":"lpohsien"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":56,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":57,"author":{"gitId":"Piyotato"},"content":"    @Override","lastModifiedDate":"2022-11-06"},{"lineNumber":58,"author":{"gitId":"Piyotato"},"content":"    public String getSingleUneditedMessage(Student uneditedStudent) {","lastModifiedDate":"2022-11-06"},{"lineNumber":59,"author":{"gitId":"Piyotato"},"content":"        return String.format(MESSAGE_UNMARK_SINGLE_ATTENDANCE_UNEDITED,","lastModifiedDate":"2022-11-06"},{"lineNumber":60,"author":{"gitId":"Piyotato"},"content":"                studentEditor.getAttendance().identifier,","lastModifiedDate":"2022-11-06"},{"lineNumber":61,"author":{"gitId":"Piyotato"},"content":"                uneditedStudent);","lastModifiedDate":"2022-11-06"},{"lineNumber":62,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":63,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":64,"author":{"gitId":"Piyotato"},"content":"    @Override","lastModifiedDate":"2022-11-06"},{"lineNumber":65,"author":{"gitId":"Piyotato"},"content":"    public String getMultiUneditedMessage(List\u003cStudent\u003e uneditedStudents) {","lastModifiedDate":"2022-11-06"},{"lineNumber":66,"author":{"gitId":"Piyotato"},"content":"        return String.format(MESSAGE_UNMARK_MULTI_ATTENDANCE_UNEDITED,","lastModifiedDate":"2022-11-06"},{"lineNumber":67,"author":{"gitId":"Piyotato"},"content":"                studentEditor.getAttendance().identifier,","lastModifiedDate":"2022-11-06"},{"lineNumber":68,"author":{"gitId":"Piyotato"},"content":"                uneditedStudents.size());","lastModifiedDate":"2022-11-06"},{"lineNumber":69,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":70,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":71,"author":{"gitId":"lpohsien"},"content":"    @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":72,"author":{"gitId":"lpohsien"},"content":"    public String getNoEditMessage() {","lastModifiedDate":"2022-10-24"},{"lineNumber":73,"author":{"gitId":"lpohsien"},"content":"        return MESSAGE_NO_EDIT;","lastModifiedDate":"2022-10-24"},{"lineNumber":74,"author":{"gitId":"lpohsien"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":75,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":76,"author":{"gitId":"lpohsien"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":77,"author":{"gitId":"lpohsien"},"content":"     * A static StudentEditor that adjusts Attendance for a given Student.","lastModifiedDate":"2022-10-27"},{"lineNumber":78,"author":{"gitId":"lpohsien"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":79,"author":{"gitId":"lpohsien"},"content":"    public static class UnmarkCommandStudentEditor implements StudentEditor {","lastModifiedDate":"2022-10-24"},{"lineNumber":80,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":81,"author":{"gitId":"comicalromance"},"content":"        private final Attendance attendance;","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"comicalromance"},"content":"        /**","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"lpohsien"},"content":"         * Constructor using Attendance.","lastModifiedDate":"2022-10-24"},{"lineNumber":85,"author":{"gitId":"lpohsien"},"content":"         *","lastModifiedDate":"2022-10-24"},{"lineNumber":86,"author":{"gitId":"lpohsien"},"content":"         * @param attendance Attendance to edit the student with.","lastModifiedDate":"2022-10-24"},{"lineNumber":87,"author":{"gitId":"comicalromance"},"content":"         */","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"lpohsien"},"content":"        public UnmarkCommandStudentEditor(Attendance attendance) {","lastModifiedDate":"2022-10-24"},{"lineNumber":89,"author":{"gitId":"lpohsien"},"content":"            this.attendance \u003d attendance;","lastModifiedDate":"2022-10-24"},{"lineNumber":90,"author":{"gitId":"lpohsien"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":91,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":92,"author":{"gitId":"lpohsien"},"content":"        public Attendance getAttendance() {","lastModifiedDate":"2022-10-24"},{"lineNumber":93,"author":{"gitId":"lpohsien"},"content":"            return attendance;","lastModifiedDate":"2022-10-24"},{"lineNumber":94,"author":{"gitId":"lpohsien"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":95,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":96,"author":{"gitId":"lpohsien"},"content":"        @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":97,"author":{"gitId":"Piyotato"},"content":"        public EditResult editStudent(Student studentToEdit) {","lastModifiedDate":"2022-11-06"},{"lineNumber":98,"author":{"gitId":"comicalromance"},"content":"            StudentData studentData \u003d studentToEdit.getStudentData();","lastModifiedDate":"2022-10-15"},{"lineNumber":99,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":100,"author":{"gitId":"comicalromance"},"content":"            Set\u003cAttendance\u003e newAttendance \u003d new HashSet\u003c\u003e(studentToEdit.getAttendances());","lastModifiedDate":"2022-10-15"},{"lineNumber":101,"author":{"gitId":"Piyotato"},"content":"            boolean isEdited \u003d newAttendance.remove(attendance);","lastModifiedDate":"2022-11-06"},{"lineNumber":102,"author":{"gitId":"comicalromance"},"content":"            studentData.setAttendances(newAttendance);","lastModifiedDate":"2022-10-15"},{"lineNumber":103,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":104,"author":{"gitId":"Piyotato"},"content":"            return new EditResult(new Student(studentData), isEdited);","lastModifiedDate":"2022-11-06"},{"lineNumber":105,"author":{"gitId":"lpohsien"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":106,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":107,"author":{"gitId":"lpohsien"},"content":"        @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":108,"author":{"gitId":"lpohsien"},"content":"        public boolean hasEdits() {","lastModifiedDate":"2022-10-24"},{"lineNumber":109,"author":{"gitId":"lpohsien"},"content":"            return attendance !\u003d null;","lastModifiedDate":"2022-10-27"},{"lineNumber":110,"author":{"gitId":"comicalromance"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":111,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":112,"author":{"gitId":"comicalromance"},"content":"        @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":113,"author":{"gitId":"comicalromance"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2022-10-10"},{"lineNumber":114,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":115,"author":{"gitId":"comicalromance"},"content":"            // short circuit if same object","lastModifiedDate":"2022-10-10"},{"lineNumber":116,"author":{"gitId":"comicalromance"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-10"},{"lineNumber":117,"author":{"gitId":"comicalromance"},"content":"                return true;","lastModifiedDate":"2022-10-10"},{"lineNumber":118,"author":{"gitId":"comicalromance"},"content":"            }","lastModifiedDate":"2022-10-10"},{"lineNumber":119,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":120,"author":{"gitId":"comicalromance"},"content":"            // instanceof handles nulls","lastModifiedDate":"2022-10-10"},{"lineNumber":121,"author":{"gitId":"lpohsien"},"content":"            if (!(other instanceof UnmarkCommand.UnmarkCommandStudentEditor)) {","lastModifiedDate":"2022-10-24"},{"lineNumber":122,"author":{"gitId":"comicalromance"},"content":"                return false;","lastModifiedDate":"2022-10-10"},{"lineNumber":123,"author":{"gitId":"comicalromance"},"content":"            }","lastModifiedDate":"2022-10-10"},{"lineNumber":124,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":125,"author":{"gitId":"comicalromance"},"content":"            // state check","lastModifiedDate":"2022-10-10"},{"lineNumber":126,"author":{"gitId":"lpohsien"},"content":"            UnmarkCommand.UnmarkCommandStudentEditor e \u003d (UnmarkCommand.UnmarkCommandStudentEditor) other;","lastModifiedDate":"2022-10-24"},{"lineNumber":127,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":128,"author":{"gitId":"lpohsien"},"content":"            if (getAttendance() \u003d\u003d null \u0026\u0026 e.getAttendance() !\u003d null) {","lastModifiedDate":"2022-10-24"},{"lineNumber":129,"author":{"gitId":"lpohsien"},"content":"                return false;","lastModifiedDate":"2022-10-24"},{"lineNumber":130,"author":{"gitId":"lpohsien"},"content":"            } else if (getAttendance() \u003d\u003d null \u0026\u0026 e.getAttendance() \u003d\u003d null) {","lastModifiedDate":"2022-10-24"},{"lineNumber":131,"author":{"gitId":"lpohsien"},"content":"                return true;","lastModifiedDate":"2022-10-24"},{"lineNumber":132,"author":{"gitId":"lpohsien"},"content":"            }","lastModifiedDate":"2022-10-24"},{"lineNumber":133,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":134,"author":{"gitId":"lpohsien"},"content":"            return getAttendance().equals(e.getAttendance());","lastModifiedDate":"2022-10-27"},{"lineNumber":135,"author":{"gitId":"lpohsien"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":136,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":137,"author":{"gitId":"comicalromance"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"Piyotato":21,"comicalromance":48,"lpohsien":68}},{"path":"src/main/java/seedu/studmap/logic/commands/UnparticipateCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"highorbit25"},"content":"package seedu.studmap.logic.commands;","lastModifiedDate":"2022-10-28"},{"lineNumber":2,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":3,"author":{"gitId":"highorbit25"},"content":"import static seedu.studmap.logic.parser.CliSyntax.PREFIX_PARTICIPATION;","lastModifiedDate":"2022-10-28"},{"lineNumber":4,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":5,"author":{"gitId":"highorbit25"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-28"},{"lineNumber":6,"author":{"gitId":"highorbit25"},"content":"import java.util.List;","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"highorbit25"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"highorbit25"},"content":"import seedu.studmap.commons.core.index.IndexListGenerator;","lastModifiedDate":"2022-10-28"},{"lineNumber":10,"author":{"gitId":"highorbit25"},"content":"import seedu.studmap.logic.commands.commons.StudentEditor;","lastModifiedDate":"2022-10-28"},{"lineNumber":11,"author":{"gitId":"highorbit25"},"content":"import seedu.studmap.model.student.Participation;","lastModifiedDate":"2022-10-28"},{"lineNumber":12,"author":{"gitId":"highorbit25"},"content":"import seedu.studmap.model.student.Student;","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"highorbit25"},"content":"import seedu.studmap.model.student.StudentData;","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"highorbit25"},"content":"/**","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"highorbit25"},"content":" * Unmarks the specified participation record from the student identified using its displayed index.","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"highorbit25"},"content":" */","lastModifiedDate":"2022-10-28"},{"lineNumber":18,"author":{"gitId":"highorbit25"},"content":"public class UnparticipateCommand extends EditStudentCommand\u003cUnparticipateCommand.UnparticipateCommandStudentEditor\u003e {","lastModifiedDate":"2022-10-28"},{"lineNumber":19,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":20,"author":{"gitId":"highorbit25"},"content":"    public static final String COMMAND_WORD \u003d \"unparticipate\";","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":22,"author":{"gitId":"highorbit25"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-28"},{"lineNumber":23,"author":{"gitId":"highorbit25"},"content":"            + \": Remove the participation component for student identified by the index number used in the displayed \"","lastModifiedDate":"2022-10-28"},{"lineNumber":24,"author":{"gitId":"comicalromance"},"content":"            + \"student list.\\n\"","lastModifiedDate":"2022-11-03"},{"lineNumber":25,"author":{"gitId":"comicalromance"},"content":"            + \"Removes participation record for the participation component specified in the parameter.\\n\"","lastModifiedDate":"2022-11-03"},{"lineNumber":26,"author":{"gitId":"highorbit25"},"content":"            + \"Parameters: INDEX (must be positive integer) \"","lastModifiedDate":"2022-10-28"},{"lineNumber":27,"author":{"gitId":"comicalromance"},"content":"            + PREFIX_PARTICIPATION + \"COMPONENT\\n\"","lastModifiedDate":"2022-11-03"},{"lineNumber":28,"author":{"gitId":"comicalromance"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \" + PREFIX_PARTICIPATION + \"P01\\n\"","lastModifiedDate":"2022-11-03"},{"lineNumber":29,"author":{"gitId":"comicalromance"},"content":"            + \"Example: \" + COMMAND_WORD + \" all \" + PREFIX_PARTICIPATION + \"P02\";","lastModifiedDate":"2022-11-03"},{"lineNumber":30,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":31,"author":{"gitId":"highorbit25"},"content":"    public static final String MESSAGE_UNMARK_SINGLE_PARTICIPATION_SUCCESS \u003d \"Removed Participation component %1$s \"","lastModifiedDate":"2022-10-28"},{"lineNumber":32,"author":{"gitId":"highorbit25"},"content":"            + \"from Student: %2$s\";","lastModifiedDate":"2022-10-28"},{"lineNumber":33,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":34,"author":{"gitId":"highorbit25"},"content":"    public static final String MESSAGE_UNMARK_MULTI_PARTICIPATION_SUCCESS \u003d \"Removed Participation component %1$s from \"","lastModifiedDate":"2022-10-28"},{"lineNumber":35,"author":{"gitId":"highorbit25"},"content":"            + \"%2$s students\";","lastModifiedDate":"2022-10-28"},{"lineNumber":36,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":37,"author":{"gitId":"Piyotato"},"content":"    public static final String MESSAGE_UNMARK_SINGLE_PARTICIPATION_UNEDITED \u003d \"Participation component %1$s not found \"","lastModifiedDate":"2022-11-06"},{"lineNumber":38,"author":{"gitId":"Piyotato"},"content":"            + \"in Student: %2$s\";","lastModifiedDate":"2022-11-06"},{"lineNumber":39,"author":{"gitId":"Piyotato"},"content":"    public static final String MESSAGE_UNMARK_MULTI_PARTICIPATION_UNEDITED \u003d \"Participation component %1$s not found \"","lastModifiedDate":"2022-11-06"},{"lineNumber":40,"author":{"gitId":"Piyotato"},"content":"            + \"in %2$s students\";","lastModifiedDate":"2022-11-06"},{"lineNumber":41,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":42,"author":{"gitId":"highorbit25"},"content":"    public static final String MESSAGE_NO_EDIT \u003d \"Participation component must be provided.\";","lastModifiedDate":"2022-10-28"},{"lineNumber":43,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":44,"author":{"gitId":"highorbit25"},"content":"    public UnparticipateCommand(IndexListGenerator indexListGenerator,","lastModifiedDate":"2022-10-28"},{"lineNumber":45,"author":{"gitId":"highorbit25"},"content":"                                UnparticipateCommandStudentEditor studentEditor) {","lastModifiedDate":"2022-10-28"},{"lineNumber":46,"author":{"gitId":"highorbit25"},"content":"        super(indexListGenerator, studentEditor);","lastModifiedDate":"2022-10-28"},{"lineNumber":47,"author":{"gitId":"highorbit25"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":48,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":49,"author":{"gitId":"highorbit25"},"content":"    @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":50,"author":{"gitId":"highorbit25"},"content":"    public String getSingleEditSuccessMessage(Student editedStudent) {","lastModifiedDate":"2022-10-28"},{"lineNumber":51,"author":{"gitId":"highorbit25"},"content":"        return String.format(MESSAGE_UNMARK_SINGLE_PARTICIPATION_SUCCESS,","lastModifiedDate":"2022-10-28"},{"lineNumber":52,"author":{"gitId":"Piyotato"},"content":"                studentEditor.getParticipation().identifier,","lastModifiedDate":"2022-11-06"},{"lineNumber":53,"author":{"gitId":"highorbit25"},"content":"                editedStudent);","lastModifiedDate":"2022-10-28"},{"lineNumber":54,"author":{"gitId":"highorbit25"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":55,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":56,"author":{"gitId":"highorbit25"},"content":"    @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":57,"author":{"gitId":"highorbit25"},"content":"    public String getMultiEditSuccessMessage(List\u003cStudent\u003e editedStudents) {","lastModifiedDate":"2022-10-28"},{"lineNumber":58,"author":{"gitId":"highorbit25"},"content":"        return String.format(MESSAGE_UNMARK_MULTI_PARTICIPATION_SUCCESS,","lastModifiedDate":"2022-10-28"},{"lineNumber":59,"author":{"gitId":"Piyotato"},"content":"                studentEditor.getParticipation().identifier,","lastModifiedDate":"2022-11-06"},{"lineNumber":60,"author":{"gitId":"highorbit25"},"content":"                editedStudents.size());","lastModifiedDate":"2022-10-28"},{"lineNumber":61,"author":{"gitId":"highorbit25"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":62,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":63,"author":{"gitId":"Piyotato"},"content":"    @Override","lastModifiedDate":"2022-11-06"},{"lineNumber":64,"author":{"gitId":"Piyotato"},"content":"    public String getSingleUneditedMessage(Student uneditedStudent) {","lastModifiedDate":"2022-11-06"},{"lineNumber":65,"author":{"gitId":"Piyotato"},"content":"        return String.format(MESSAGE_UNMARK_SINGLE_PARTICIPATION_UNEDITED,","lastModifiedDate":"2022-11-06"},{"lineNumber":66,"author":{"gitId":"Piyotato"},"content":"                studentEditor.getParticipation().identifier,","lastModifiedDate":"2022-11-06"},{"lineNumber":67,"author":{"gitId":"Piyotato"},"content":"                uneditedStudent);","lastModifiedDate":"2022-11-06"},{"lineNumber":68,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":69,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":70,"author":{"gitId":"Piyotato"},"content":"    @Override","lastModifiedDate":"2022-11-06"},{"lineNumber":71,"author":{"gitId":"Piyotato"},"content":"    public String getMultiUneditedMessage(List\u003cStudent\u003e uneditedStudents) {","lastModifiedDate":"2022-11-06"},{"lineNumber":72,"author":{"gitId":"Piyotato"},"content":"        return String.format(MESSAGE_UNMARK_MULTI_PARTICIPATION_UNEDITED,","lastModifiedDate":"2022-11-06"},{"lineNumber":73,"author":{"gitId":"Piyotato"},"content":"                studentEditor.getParticipation().identifier,","lastModifiedDate":"2022-11-06"},{"lineNumber":74,"author":{"gitId":"Piyotato"},"content":"                uneditedStudents.size());","lastModifiedDate":"2022-11-06"},{"lineNumber":75,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":76,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":77,"author":{"gitId":"highorbit25"},"content":"    @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":78,"author":{"gitId":"highorbit25"},"content":"    public String getNoEditMessage() {","lastModifiedDate":"2022-10-28"},{"lineNumber":79,"author":{"gitId":"highorbit25"},"content":"        return MESSAGE_NO_EDIT;","lastModifiedDate":"2022-10-28"},{"lineNumber":80,"author":{"gitId":"highorbit25"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":81,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":82,"author":{"gitId":"highorbit25"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":83,"author":{"gitId":"highorbit25"},"content":"     * A static StudentEditor that adjusts Participation for a given Student.","lastModifiedDate":"2022-10-28"},{"lineNumber":84,"author":{"gitId":"highorbit25"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":85,"author":{"gitId":"highorbit25"},"content":"    public static class UnparticipateCommandStudentEditor implements StudentEditor {","lastModifiedDate":"2022-10-28"},{"lineNumber":86,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":87,"author":{"gitId":"highorbit25"},"content":"        private final Participation participation;","lastModifiedDate":"2022-10-28"},{"lineNumber":88,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":89,"author":{"gitId":"highorbit25"},"content":"        /**","lastModifiedDate":"2022-10-28"},{"lineNumber":90,"author":{"gitId":"highorbit25"},"content":"         * Constructor using Participation.","lastModifiedDate":"2022-10-28"},{"lineNumber":91,"author":{"gitId":"highorbit25"},"content":"         *","lastModifiedDate":"2022-10-28"},{"lineNumber":92,"author":{"gitId":"highorbit25"},"content":"         * @param participation Participation to edit the student with.","lastModifiedDate":"2022-10-28"},{"lineNumber":93,"author":{"gitId":"highorbit25"},"content":"         */","lastModifiedDate":"2022-10-28"},{"lineNumber":94,"author":{"gitId":"highorbit25"},"content":"        public UnparticipateCommandStudentEditor(Participation participation) {","lastModifiedDate":"2022-10-28"},{"lineNumber":95,"author":{"gitId":"highorbit25"},"content":"            this.participation \u003d participation;","lastModifiedDate":"2022-10-28"},{"lineNumber":96,"author":{"gitId":"highorbit25"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":97,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":98,"author":{"gitId":"highorbit25"},"content":"        public Participation getParticipation() {","lastModifiedDate":"2022-10-28"},{"lineNumber":99,"author":{"gitId":"highorbit25"},"content":"            return participation;","lastModifiedDate":"2022-10-28"},{"lineNumber":100,"author":{"gitId":"highorbit25"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":101,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":102,"author":{"gitId":"highorbit25"},"content":"        @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":103,"author":{"gitId":"Piyotato"},"content":"        public EditResult editStudent(Student studentToEdit) {","lastModifiedDate":"2022-11-06"},{"lineNumber":104,"author":{"gitId":"highorbit25"},"content":"            StudentData studentData \u003d studentToEdit.getStudentData();","lastModifiedDate":"2022-10-28"},{"lineNumber":105,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":106,"author":{"gitId":"Piyotato"},"content":"            Set\u003cParticipation\u003e newParticipations \u003d new HashSet\u003c\u003e(studentToEdit.getParticipations());","lastModifiedDate":"2022-11-06"},{"lineNumber":107,"author":{"gitId":"Piyotato"},"content":"            boolean isEdited \u003d newParticipations.remove(participation);","lastModifiedDate":"2022-11-06"},{"lineNumber":108,"author":{"gitId":"Piyotato"},"content":"            studentData.setParticipations(newParticipations);","lastModifiedDate":"2022-11-06"},{"lineNumber":109,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":110,"author":{"gitId":"Piyotato"},"content":"            return new EditResult(new Student(studentData), isEdited);","lastModifiedDate":"2022-11-06"},{"lineNumber":111,"author":{"gitId":"highorbit25"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":112,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":113,"author":{"gitId":"highorbit25"},"content":"        @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":114,"author":{"gitId":"highorbit25"},"content":"        public boolean hasEdits() {","lastModifiedDate":"2022-10-28"},{"lineNumber":115,"author":{"gitId":"highorbit25"},"content":"            return participation !\u003d null;","lastModifiedDate":"2022-10-28"},{"lineNumber":116,"author":{"gitId":"highorbit25"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":117,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":118,"author":{"gitId":"highorbit25"},"content":"        @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":119,"author":{"gitId":"highorbit25"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2022-10-28"},{"lineNumber":120,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":121,"author":{"gitId":"highorbit25"},"content":"            // short circuit if same object","lastModifiedDate":"2022-10-28"},{"lineNumber":122,"author":{"gitId":"highorbit25"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-28"},{"lineNumber":123,"author":{"gitId":"highorbit25"},"content":"                return true;","lastModifiedDate":"2022-10-28"},{"lineNumber":124,"author":{"gitId":"highorbit25"},"content":"            }","lastModifiedDate":"2022-10-28"},{"lineNumber":125,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":126,"author":{"gitId":"highorbit25"},"content":"            // instanceof handles nulls","lastModifiedDate":"2022-10-28"},{"lineNumber":127,"author":{"gitId":"highorbit25"},"content":"            if (!(other instanceof UnparticipateCommand.UnparticipateCommandStudentEditor)) {","lastModifiedDate":"2022-10-28"},{"lineNumber":128,"author":{"gitId":"highorbit25"},"content":"                return false;","lastModifiedDate":"2022-10-28"},{"lineNumber":129,"author":{"gitId":"highorbit25"},"content":"            }","lastModifiedDate":"2022-10-28"},{"lineNumber":130,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":131,"author":{"gitId":"highorbit25"},"content":"            // state check","lastModifiedDate":"2022-10-28"},{"lineNumber":132,"author":{"gitId":"highorbit25"},"content":"            UnparticipateCommand.UnparticipateCommandStudentEditor e \u003d","lastModifiedDate":"2022-10-28"},{"lineNumber":133,"author":{"gitId":"highorbit25"},"content":"                    (UnparticipateCommand.UnparticipateCommandStudentEditor) other;","lastModifiedDate":"2022-10-28"},{"lineNumber":134,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":135,"author":{"gitId":"highorbit25"},"content":"            if (getParticipation() \u003d\u003d null \u0026\u0026 e.getParticipation() !\u003d null) {","lastModifiedDate":"2022-10-28"},{"lineNumber":136,"author":{"gitId":"highorbit25"},"content":"                return false;","lastModifiedDate":"2022-10-28"},{"lineNumber":137,"author":{"gitId":"highorbit25"},"content":"            } else if (getParticipation() \u003d\u003d null \u0026\u0026 e.getParticipation() \u003d\u003d null) {","lastModifiedDate":"2022-10-28"},{"lineNumber":138,"author":{"gitId":"highorbit25"},"content":"                return true;","lastModifiedDate":"2022-10-28"},{"lineNumber":139,"author":{"gitId":"highorbit25"},"content":"            }","lastModifiedDate":"2022-10-28"},{"lineNumber":140,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":141,"author":{"gitId":"highorbit25"},"content":"            return getParticipation().equals(e.getParticipation());","lastModifiedDate":"2022-10-28"},{"lineNumber":142,"author":{"gitId":"highorbit25"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":143,"author":{"gitId":"highorbit25"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":144,"author":{"gitId":"highorbit25"},"content":"}","lastModifiedDate":"2022-10-28"}],"authorContributionMap":{"highorbit25":114,"Piyotato":25,"comicalromance":5}},{"path":"src/main/java/seedu/studmap/logic/commands/UntagCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lpohsien"},"content":"package seedu.studmap.logic.commands;","lastModifiedDate":"2022-10-23"},{"lineNumber":2,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":3,"author":{"gitId":"lpohsien"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"lpohsien"},"content":"import static seedu.studmap.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-23"},{"lineNumber":5,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":6,"author":{"gitId":"lpohsien"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-23"},{"lineNumber":7,"author":{"gitId":"lpohsien"},"content":"import java.util.List;","lastModifiedDate":"2022-10-23"},{"lineNumber":8,"author":{"gitId":"lpohsien"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-23"},{"lineNumber":9,"author":{"gitId":"lpohsien"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-23"},{"lineNumber":10,"author":{"gitId":"lpohsien"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-23"},{"lineNumber":11,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":12,"author":{"gitId":"lpohsien"},"content":"import seedu.studmap.MainApp;","lastModifiedDate":"2022-10-23"},{"lineNumber":13,"author":{"gitId":"lpohsien"},"content":"import seedu.studmap.commons.core.LogsCenter;","lastModifiedDate":"2022-10-23"},{"lineNumber":14,"author":{"gitId":"lpohsien"},"content":"import seedu.studmap.commons.core.index.IndexListGenerator;","lastModifiedDate":"2022-10-23"},{"lineNumber":15,"author":{"gitId":"lpohsien"},"content":"import seedu.studmap.commons.util.CollectionUtil;","lastModifiedDate":"2022-10-24"},{"lineNumber":16,"author":{"gitId":"lpohsien"},"content":"import seedu.studmap.logic.commands.commons.StudentEditor;","lastModifiedDate":"2022-10-23"},{"lineNumber":17,"author":{"gitId":"lpohsien"},"content":"import seedu.studmap.model.student.Student;","lastModifiedDate":"2022-10-23"},{"lineNumber":18,"author":{"gitId":"lpohsien"},"content":"import seedu.studmap.model.student.StudentData;","lastModifiedDate":"2022-10-23"},{"lineNumber":19,"author":{"gitId":"lpohsien"},"content":"import seedu.studmap.model.tag.Tag;","lastModifiedDate":"2022-10-23"},{"lineNumber":20,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":21,"author":{"gitId":"lpohsien"},"content":"/**","lastModifiedDate":"2022-10-23"},{"lineNumber":22,"author":{"gitId":"lpohsien"},"content":" * Deletes tag for an existing student in the student map.","lastModifiedDate":"2022-10-23"},{"lineNumber":23,"author":{"gitId":"lpohsien"},"content":" */","lastModifiedDate":"2022-10-23"},{"lineNumber":24,"author":{"gitId":"lpohsien"},"content":"public class UntagCommand extends EditStudentCommand\u003cUntagCommand.UntagCommandStudentEditor\u003e {","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":26,"author":{"gitId":"lpohsien"},"content":"    public static final Logger LOGGER \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2022-10-23"},{"lineNumber":27,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":28,"author":{"gitId":"lpohsien"},"content":"    public static final String COMMAND_WORD \u003d \"untag\";","lastModifiedDate":"2022-10-28"},{"lineNumber":29,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":30,"author":{"gitId":"lpohsien"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$s, new tag: %2$s\";","lastModifiedDate":"2022-10-23"},{"lineNumber":31,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":32,"author":{"gitId":"lpohsien"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": deletes tags from a student in the student map.\\n\"","lastModifiedDate":"2022-10-23"},{"lineNumber":33,"author":{"gitId":"comicalromance"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-11-03"},{"lineNumber":34,"author":{"gitId":"comicalromance"},"content":"            + \"INDEX (must be a positive integer or use \\\"all\\\" to delete tags from everyone in the list) \"","lastModifiedDate":"2022-11-03"},{"lineNumber":35,"author":{"gitId":"lpohsien"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2022-10-23"},{"lineNumber":36,"author":{"gitId":"comicalromance"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2022-11-03"},{"lineNumber":37,"author":{"gitId":"lpohsien"},"content":"            + PREFIX_TAG + \"lab \"","lastModifiedDate":"2022-10-23"},{"lineNumber":38,"author":{"gitId":"comicalromance"},"content":"            + PREFIX_TAG + \"goodProgress\\n\"","lastModifiedDate":"2022-11-03"},{"lineNumber":39,"author":{"gitId":"comicalromance"},"content":"            + \"Example: \" + COMMAND_WORD + \" all \"","lastModifiedDate":"2022-11-03"},{"lineNumber":40,"author":{"gitId":"lpohsien"},"content":"            + PREFIX_TAG + \"tutorial \"","lastModifiedDate":"2022-10-23"},{"lineNumber":41,"author":{"gitId":"lpohsien"},"content":"            + PREFIX_TAG + \"needRemedial\";","lastModifiedDate":"2022-10-23"},{"lineNumber":42,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":43,"author":{"gitId":"lpohsien"},"content":"    public static final String MESSAGE_SINGLE_DEL_TAGS_SUCCESS \u003d \"Deleted tags %1$s Student: %2$s\";","lastModifiedDate":"2022-10-25"},{"lineNumber":44,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":45,"author":{"gitId":"lpohsien"},"content":"    public static final String MESSAGE_MULTI_DEL_TAGS_SUCCESS \u003d \"Deleted tags %1$s for %2$d students\";","lastModifiedDate":"2022-10-25"},{"lineNumber":46,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":47,"author":{"gitId":"Piyotato"},"content":"    public static final String MESSAGE_SINGLE_UNEDITED \u003d \"Tags %1$s not found on Student: %2$s\";","lastModifiedDate":"2022-11-06"},{"lineNumber":48,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":49,"author":{"gitId":"Piyotato"},"content":"    public static final String MESSAGE_MULTI_UNEDITED \u003d \"Tags %1$s not found on %2$d students\";","lastModifiedDate":"2022-11-06"},{"lineNumber":50,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":51,"author":{"gitId":"lpohsien"},"content":"    public static final String MESSAGE_TAGS_NOT_DELETED \u003d \"At least one tag must be deleted\";","lastModifiedDate":"2022-10-23"},{"lineNumber":52,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":53,"author":{"gitId":"lpohsien"},"content":"    public UntagCommand(IndexListGenerator indexListGenerator, UntagCommandStudentEditor editor) {","lastModifiedDate":"2022-10-28"},{"lineNumber":54,"author":{"gitId":"lpohsien"},"content":"        super(indexListGenerator, editor);","lastModifiedDate":"2022-10-23"},{"lineNumber":55,"author":{"gitId":"lpohsien"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":56,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":57,"author":{"gitId":"lpohsien"},"content":"    @Override","lastModifiedDate":"2022-10-23"},{"lineNumber":58,"author":{"gitId":"lpohsien"},"content":"    public String getSingleEditSuccessMessage(Student editedStudent) {","lastModifiedDate":"2022-10-23"},{"lineNumber":59,"author":{"gitId":"lpohsien"},"content":"        return String.format(MESSAGE_SINGLE_DEL_TAGS_SUCCESS, CollectionUtil.collectionToString(studentEditor.tags),","lastModifiedDate":"2022-10-24"},{"lineNumber":60,"author":{"gitId":"lpohsien"},"content":"                editedStudent.getName());","lastModifiedDate":"2022-10-23"},{"lineNumber":61,"author":{"gitId":"lpohsien"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":62,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":63,"author":{"gitId":"lpohsien"},"content":"    @Override","lastModifiedDate":"2022-10-23"},{"lineNumber":64,"author":{"gitId":"lpohsien"},"content":"    public String getMultiEditSuccessMessage(List\u003cStudent\u003e editedStudents) {","lastModifiedDate":"2022-10-23"},{"lineNumber":65,"author":{"gitId":"lpohsien"},"content":"        return String.format(MESSAGE_MULTI_DEL_TAGS_SUCCESS,","lastModifiedDate":"2022-10-24"},{"lineNumber":66,"author":{"gitId":"lpohsien"},"content":"                CollectionUtil.collectionToString(studentEditor.tags),","lastModifiedDate":"2022-10-24"},{"lineNumber":67,"author":{"gitId":"lpohsien"},"content":"                editedStudents.size());","lastModifiedDate":"2022-10-24"},{"lineNumber":68,"author":{"gitId":"lpohsien"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":69,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":70,"author":{"gitId":"Piyotato"},"content":"    @Override","lastModifiedDate":"2022-11-06"},{"lineNumber":71,"author":{"gitId":"Piyotato"},"content":"    public String getSingleUneditedMessage(Student uneditedStudent) {","lastModifiedDate":"2022-11-06"},{"lineNumber":72,"author":{"gitId":"Piyotato"},"content":"        return String.format(MESSAGE_SINGLE_UNEDITED, CollectionUtil.collectionToString(studentEditor.tags),","lastModifiedDate":"2022-11-06"},{"lineNumber":73,"author":{"gitId":"Piyotato"},"content":"                uneditedStudent.getName());","lastModifiedDate":"2022-11-06"},{"lineNumber":74,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":75,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":76,"author":{"gitId":"Piyotato"},"content":"    @Override","lastModifiedDate":"2022-11-06"},{"lineNumber":77,"author":{"gitId":"Piyotato"},"content":"    public String getMultiUneditedMessage(List\u003cStudent\u003e uneditedStudents) {","lastModifiedDate":"2022-11-06"},{"lineNumber":78,"author":{"gitId":"Piyotato"},"content":"        return String.format(MESSAGE_MULTI_UNEDITED,","lastModifiedDate":"2022-11-06"},{"lineNumber":79,"author":{"gitId":"Piyotato"},"content":"                CollectionUtil.collectionToString(studentEditor.tags),","lastModifiedDate":"2022-11-06"},{"lineNumber":80,"author":{"gitId":"Piyotato"},"content":"                uneditedStudents.size());","lastModifiedDate":"2022-11-06"},{"lineNumber":81,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":82,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":83,"author":{"gitId":"lpohsien"},"content":"    @Override","lastModifiedDate":"2022-10-23"},{"lineNumber":84,"author":{"gitId":"lpohsien"},"content":"    public String getNoEditMessage() {","lastModifiedDate":"2022-10-23"},{"lineNumber":85,"author":{"gitId":"lpohsien"},"content":"        return MESSAGE_TAGS_NOT_DELETED;","lastModifiedDate":"2022-10-23"},{"lineNumber":86,"author":{"gitId":"lpohsien"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":87,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":88,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":89,"author":{"gitId":"lpohsien"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":90,"author":{"gitId":"lpohsien"},"content":"     * A static StudentEditor that deletes tags to a given Student.","lastModifiedDate":"2022-10-23"},{"lineNumber":91,"author":{"gitId":"lpohsien"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":92,"author":{"gitId":"lpohsien"},"content":"    public static class UntagCommandStudentEditor implements StudentEditor {","lastModifiedDate":"2022-10-28"},{"lineNumber":93,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":94,"author":{"gitId":"lpohsien"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2022-10-23"},{"lineNumber":95,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":96,"author":{"gitId":"lpohsien"},"content":"        /**","lastModifiedDate":"2022-10-23"},{"lineNumber":97,"author":{"gitId":"lpohsien"},"content":"         * Parameterless constructor.","lastModifiedDate":"2022-10-23"},{"lineNumber":98,"author":{"gitId":"lpohsien"},"content":"         */","lastModifiedDate":"2022-10-23"},{"lineNumber":99,"author":{"gitId":"lpohsien"},"content":"        public UntagCommandStudentEditor() {","lastModifiedDate":"2022-10-28"},{"lineNumber":100,"author":{"gitId":"lpohsien"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":101,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":102,"author":{"gitId":"lpohsien"},"content":"        /**","lastModifiedDate":"2022-10-23"},{"lineNumber":103,"author":{"gitId":"lpohsien"},"content":"         * Constructor with tags.","lastModifiedDate":"2022-10-23"},{"lineNumber":104,"author":{"gitId":"lpohsien"},"content":"         *","lastModifiedDate":"2022-10-23"},{"lineNumber":105,"author":{"gitId":"lpohsien"},"content":"         * @param tags Tags that this editor will delete from a given Student.","lastModifiedDate":"2022-10-23"},{"lineNumber":106,"author":{"gitId":"lpohsien"},"content":"         */","lastModifiedDate":"2022-10-23"},{"lineNumber":107,"author":{"gitId":"lpohsien"},"content":"        public UntagCommandStudentEditor(Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-10-28"},{"lineNumber":108,"author":{"gitId":"lpohsien"},"content":"            requireNonNull(tags);","lastModifiedDate":"2022-10-23"},{"lineNumber":109,"author":{"gitId":"lpohsien"},"content":"            setTags(tags);","lastModifiedDate":"2022-10-23"},{"lineNumber":110,"author":{"gitId":"lpohsien"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":111,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":112,"author":{"gitId":"lpohsien"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2022-10-23"},{"lineNumber":113,"author":{"gitId":"lpohsien"},"content":"            return Optional.ofNullable(tags);","lastModifiedDate":"2022-10-23"},{"lineNumber":114,"author":{"gitId":"lpohsien"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":115,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":116,"author":{"gitId":"lpohsien"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-10-23"},{"lineNumber":117,"author":{"gitId":"lpohsien"},"content":"            requireNonNull(tags);","lastModifiedDate":"2022-10-23"},{"lineNumber":118,"author":{"gitId":"lpohsien"},"content":"            this.tags \u003d new HashSet\u003c\u003e(tags);","lastModifiedDate":"2022-10-23"},{"lineNumber":119,"author":{"gitId":"lpohsien"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":120,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":121,"author":{"gitId":"lpohsien"},"content":"        @Override","lastModifiedDate":"2022-10-23"},{"lineNumber":122,"author":{"gitId":"Piyotato"},"content":"        public EditResult editStudent(Student studentToEdit) {","lastModifiedDate":"2022-11-06"},{"lineNumber":123,"author":{"gitId":"lpohsien"},"content":"            assert studentToEdit !\u003d null;","lastModifiedDate":"2022-10-23"},{"lineNumber":124,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":125,"author":{"gitId":"lpohsien"},"content":"            StudentData studentData \u003d studentToEdit.getStudentData();","lastModifiedDate":"2022-10-23"},{"lineNumber":126,"author":{"gitId":"lpohsien"},"content":"            Set\u003cTag\u003e newTags \u003d studentData.getTags();","lastModifiedDate":"2022-10-23"},{"lineNumber":127,"author":{"gitId":"Piyotato"},"content":"            boolean isEdited \u003d newTags.removeAll(tags);","lastModifiedDate":"2022-11-06"},{"lineNumber":128,"author":{"gitId":"lpohsien"},"content":"            studentData.setTags(newTags);","lastModifiedDate":"2022-10-23"},{"lineNumber":129,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":130,"author":{"gitId":"Piyotato"},"content":"            return new EditResult(new Student(studentData), isEdited);","lastModifiedDate":"2022-11-06"},{"lineNumber":131,"author":{"gitId":"lpohsien"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":132,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":133,"author":{"gitId":"lpohsien"},"content":"        @Override","lastModifiedDate":"2022-10-23"},{"lineNumber":134,"author":{"gitId":"lpohsien"},"content":"        public boolean hasEdits() {","lastModifiedDate":"2022-10-23"},{"lineNumber":135,"author":{"gitId":"lpohsien"},"content":"            return tags !\u003d null \u0026\u0026 tags.size() \u003e 0;","lastModifiedDate":"2022-10-23"},{"lineNumber":136,"author":{"gitId":"lpohsien"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":137,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":138,"author":{"gitId":"lpohsien"},"content":"        @Override","lastModifiedDate":"2022-10-23"},{"lineNumber":139,"author":{"gitId":"lpohsien"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2022-10-23"},{"lineNumber":140,"author":{"gitId":"lpohsien"},"content":"            // short circuit if same object","lastModifiedDate":"2022-10-23"},{"lineNumber":141,"author":{"gitId":"lpohsien"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-23"},{"lineNumber":142,"author":{"gitId":"lpohsien"},"content":"                return true;","lastModifiedDate":"2022-10-23"},{"lineNumber":143,"author":{"gitId":"lpohsien"},"content":"            }","lastModifiedDate":"2022-10-23"},{"lineNumber":144,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":145,"author":{"gitId":"lpohsien"},"content":"            // instanceof handles nulls","lastModifiedDate":"2022-10-23"},{"lineNumber":146,"author":{"gitId":"lpohsien"},"content":"            if (!(other instanceof EditCommand.EditCommandStudentEditor)) {","lastModifiedDate":"2022-10-23"},{"lineNumber":147,"author":{"gitId":"lpohsien"},"content":"                return false;","lastModifiedDate":"2022-10-23"},{"lineNumber":148,"author":{"gitId":"lpohsien"},"content":"            }","lastModifiedDate":"2022-10-23"},{"lineNumber":149,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":150,"author":{"gitId":"lpohsien"},"content":"            // state check","lastModifiedDate":"2022-10-23"},{"lineNumber":151,"author":{"gitId":"lpohsien"},"content":"            EditCommand.EditCommandStudentEditor e \u003d (EditCommand.EditCommandStudentEditor) other;","lastModifiedDate":"2022-10-23"},{"lineNumber":152,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":153,"author":{"gitId":"lpohsien"},"content":"            return getTags().equals(e.getTags());","lastModifiedDate":"2022-10-23"},{"lineNumber":154,"author":{"gitId":"lpohsien"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":155,"author":{"gitId":"lpohsien"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":156,"author":{"gitId":"lpohsien"},"content":"}","lastModifiedDate":"2022-10-23"}],"authorContributionMap":{"Piyotato":20,"lpohsien":131,"comicalromance":5}},{"path":"src/main/java/seedu/studmap/logic/commands/commons/StudentEditor.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Piyotato"},"content":"package seedu.studmap.logic.commands.commons;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"Piyotato"},"content":"import seedu.studmap.model.student.Student;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"Piyotato"},"content":"/**","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"Piyotato"},"content":" * An abstract class that encapsulates the manner in which a student may be edited.","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"Piyotato"},"content":" */","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"Piyotato"},"content":"public interface StudentEditor {","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"Piyotato"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"Piyotato"},"content":"     * Creates a new student by editing a given student.","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"Piyotato"},"content":"     * Editing behaviour is to be defined in the inherited class.","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"Piyotato"},"content":"     *","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"Piyotato"},"content":"     * @param studentToEdit Student to be edited","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"Piyotato"},"content":"     * @return New edited student","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"Piyotato"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"Piyotato"},"content":"    EditResult editStudent(Student studentToEdit);","lastModifiedDate":"2022-11-06"},{"lineNumber":18,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"Piyotato"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"Piyotato"},"content":"     * Returns true if this editor will make edits when used.","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"Piyotato"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"Piyotato"},"content":"    boolean hasEdits();","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":24,"author":{"gitId":"Piyotato"},"content":"    /**","lastModifiedDate":"2022-11-06"},{"lineNumber":25,"author":{"gitId":"Piyotato"},"content":"     * A class that encapsulates the edit result of an editStudent operation.","lastModifiedDate":"2022-11-06"},{"lineNumber":26,"author":{"gitId":"Piyotato"},"content":"     */","lastModifiedDate":"2022-11-06"},{"lineNumber":27,"author":{"gitId":"Piyotato"},"content":"    final class EditResult {","lastModifiedDate":"2022-11-06"},{"lineNumber":28,"author":{"gitId":"Piyotato"},"content":"        public final Student editedStudent;","lastModifiedDate":"2022-11-06"},{"lineNumber":29,"author":{"gitId":"Piyotato"},"content":"        public final boolean isEdited;","lastModifiedDate":"2022-11-06"},{"lineNumber":30,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":31,"author":{"gitId":"Piyotato"},"content":"        /**","lastModifiedDate":"2022-11-06"},{"lineNumber":32,"author":{"gitId":"Piyotato"},"content":"         * Constructor for EditResult.","lastModifiedDate":"2022-11-06"},{"lineNumber":33,"author":{"gitId":"Piyotato"},"content":"         *","lastModifiedDate":"2022-11-06"},{"lineNumber":34,"author":{"gitId":"Piyotato"},"content":"         * @param editedStudent Student that has been edited.","lastModifiedDate":"2022-11-06"},{"lineNumber":35,"author":{"gitId":"Piyotato"},"content":"         * @param isEdited      Whether there is an edit.","lastModifiedDate":"2022-11-06"},{"lineNumber":36,"author":{"gitId":"Piyotato"},"content":"         */","lastModifiedDate":"2022-11-06"},{"lineNumber":37,"author":{"gitId":"Piyotato"},"content":"        public EditResult(Student editedStudent, boolean isEdited) {","lastModifiedDate":"2022-11-06"},{"lineNumber":38,"author":{"gitId":"Piyotato"},"content":"            this.editedStudent \u003d editedStudent;","lastModifiedDate":"2022-11-06"},{"lineNumber":39,"author":{"gitId":"Piyotato"},"content":"            this.isEdited \u003d isEdited;","lastModifiedDate":"2022-11-06"},{"lineNumber":40,"author":{"gitId":"Piyotato"},"content":"        }","lastModifiedDate":"2022-11-06"},{"lineNumber":41,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":42,"author":{"gitId":"Piyotato"},"content":"}","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"Piyotato":42}},{"path":"src/main/java/seedu/studmap/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.logic.commands.exceptions;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"-":16,"comicalromance":1}},{"path":"src/main/java/seedu/studmap/logic/imports/ImportCsv.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.logic.imports;","lastModifiedDate":"2022-10-28"},{"lineNumber":2,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":3,"author":{"gitId":"comicalromance"},"content":"import java.io.File;","lastModifiedDate":"2022-10-28"},{"lineNumber":4,"author":{"gitId":"comicalromance"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-10-28"},{"lineNumber":5,"author":{"gitId":"comicalromance"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-10-28"},{"lineNumber":6,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.logic.imports.exceptions.ImportException;","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.logic.parser.ParserUtil;","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-28"},{"lineNumber":10,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.Model;","lastModifiedDate":"2022-10-28"},{"lineNumber":11,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.student.Student;","lastModifiedDate":"2022-10-28"},{"lineNumber":12,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.student.StudentData;","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"comicalromance"},"content":"/**","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"comicalromance"},"content":" * Parses CSV file and loads it into the model.","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"comicalromance"},"content":" */","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"comicalromance"},"content":"public class ImportCsv {","lastModifiedDate":"2022-10-28"},{"lineNumber":18,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":19,"author":{"gitId":"Piyotato"},"content":"    public static final String FILE_IS_NULL \u003d \"File is null!\";","lastModifiedDate":"2022-11-07"},{"lineNumber":20,"author":{"gitId":"comicalromance"},"content":"    public static final String FILE_DOES_NOT_EXIST \u003d \"File does not exist!\";","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":22,"author":{"gitId":"comicalromance"},"content":"    public static final String FILE_CANNOT_BE_READ \u003d \"File cannot be read!\";","lastModifiedDate":"2022-10-28"},{"lineNumber":23,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":24,"author":{"gitId":"comicalromance"},"content":"    public static final String FILE_NOT_CSV \u003d \"File is not a CSV file!\";","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":26,"author":{"gitId":"comicalromance"},"content":"    public static final String CSV_WRONG_FORMAT \u003d \"CSV template is wrongly formatted! \"","lastModifiedDate":"2022-10-28"},{"lineNumber":27,"author":{"gitId":"comicalromance"},"content":"            + \"Please use the one in the UG strictly.\";","lastModifiedDate":"2022-10-28"},{"lineNumber":28,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":29,"author":{"gitId":"Piyotato"},"content":"    public static final String MISSING_COMPULSORY_ATTRIBUTE \u003d \"Row %d has missing compulsory attribute %s!\\n\";","lastModifiedDate":"2022-11-07"},{"lineNumber":30,"author":{"gitId":"Piyotato"},"content":"    public static final String DUPLICATE_STUDENT \u003d \"Row %d is a duplicate entry!\\n\";","lastModifiedDate":"2022-11-07"},{"lineNumber":31,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":32,"author":{"gitId":"comicalromance"},"content":"    public final String delimiter \u003d \"\\\\,\";","lastModifiedDate":"2022-10-28"},{"lineNumber":33,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":34,"author":{"gitId":"comicalromance"},"content":"    public final String[] templateHeader \u003d {","lastModifiedDate":"2022-10-28"},{"lineNumber":35,"author":{"gitId":"comicalromance"},"content":"        \"name\",","lastModifiedDate":"2022-10-28"},{"lineNumber":36,"author":{"gitId":"comicalromance"},"content":"        \"studentid\",","lastModifiedDate":"2022-10-28"},{"lineNumber":37,"author":{"gitId":"comicalromance"},"content":"        \"module\",","lastModifiedDate":"2022-10-28"},{"lineNumber":38,"author":{"gitId":"comicalromance"},"content":"        \"phone\",","lastModifiedDate":"2022-10-28"},{"lineNumber":39,"author":{"gitId":"comicalromance"},"content":"        \"email\",","lastModifiedDate":"2022-10-28"},{"lineNumber":40,"author":{"gitId":"comicalromance"},"content":"        \"github\",","lastModifiedDate":"2022-10-28"},{"lineNumber":41,"author":{"gitId":"comicalromance"},"content":"        \"telegram\",","lastModifiedDate":"2022-10-28"},{"lineNumber":42,"author":{"gitId":"comicalromance"},"content":"    };","lastModifiedDate":"2022-10-28"},{"lineNumber":43,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":44,"author":{"gitId":"comicalromance"},"content":"    public final Attributes[] enumList \u003d {","lastModifiedDate":"2022-10-28"},{"lineNumber":45,"author":{"gitId":"comicalromance"},"content":"        Attributes.NAME,","lastModifiedDate":"2022-10-28"},{"lineNumber":46,"author":{"gitId":"comicalromance"},"content":"        Attributes.STUDENTID,","lastModifiedDate":"2022-10-28"},{"lineNumber":47,"author":{"gitId":"comicalromance"},"content":"        Attributes.MODULE,","lastModifiedDate":"2022-10-28"},{"lineNumber":48,"author":{"gitId":"comicalromance"},"content":"        Attributes.PHONE,","lastModifiedDate":"2022-10-28"},{"lineNumber":49,"author":{"gitId":"comicalromance"},"content":"        Attributes.EMAIL,","lastModifiedDate":"2022-10-28"},{"lineNumber":50,"author":{"gitId":"comicalromance"},"content":"        Attributes.GITHUB,","lastModifiedDate":"2022-10-28"},{"lineNumber":51,"author":{"gitId":"comicalromance"},"content":"        Attributes.TELEGRAM","lastModifiedDate":"2022-10-28"},{"lineNumber":52,"author":{"gitId":"comicalromance"},"content":"    };","lastModifiedDate":"2022-10-28"},{"lineNumber":53,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":54,"author":{"gitId":"comicalromance"},"content":"    private StringBuilder log;","lastModifiedDate":"2022-10-28"},{"lineNumber":55,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":56,"author":{"gitId":"comicalromance"},"content":"    private int rowNumber;","lastModifiedDate":"2022-10-28"},{"lineNumber":57,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":58,"author":{"gitId":"comicalromance"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":59,"author":{"gitId":"comicalromance"},"content":"     * Executes the ImportCSV process, taking a model and file and updating the model with the imported students.","lastModifiedDate":"2022-10-28"},{"lineNumber":60,"author":{"gitId":"comicalromance"},"content":"     *","lastModifiedDate":"2022-10-28"},{"lineNumber":61,"author":{"gitId":"comicalromance"},"content":"     * @param model Model to update","lastModifiedDate":"2022-10-28"},{"lineNumber":62,"author":{"gitId":"comicalromance"},"content":"     * @param file  CSV file containing import data","lastModifiedDate":"2022-10-28"},{"lineNumber":63,"author":{"gitId":"comicalromance"},"content":"     * @return Error message containing logs during import","lastModifiedDate":"2022-10-28"},{"lineNumber":64,"author":{"gitId":"comicalromance"},"content":"     * @throws ImportException","lastModifiedDate":"2022-10-28"},{"lineNumber":65,"author":{"gitId":"comicalromance"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":66,"author":{"gitId":"comicalromance"},"content":"    public String execute(Model model, File file) throws ImportException {","lastModifiedDate":"2022-10-28"},{"lineNumber":67,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":68,"author":{"gitId":"Piyotato"},"content":"        if (file \u003d\u003d null) {","lastModifiedDate":"2022-11-07"},{"lineNumber":69,"author":{"gitId":"Piyotato"},"content":"            throw new ImportException(FILE_IS_NULL);","lastModifiedDate":"2022-11-07"},{"lineNumber":70,"author":{"gitId":"Piyotato"},"content":"        }","lastModifiedDate":"2022-11-07"},{"lineNumber":71,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":72,"author":{"gitId":"comicalromance"},"content":"        log \u003d new StringBuilder();","lastModifiedDate":"2022-10-28"},{"lineNumber":73,"author":{"gitId":"comicalromance"},"content":"        if (!file.exists()) {","lastModifiedDate":"2022-10-28"},{"lineNumber":74,"author":{"gitId":"comicalromance"},"content":"            throw new ImportException(FILE_DOES_NOT_EXIST);","lastModifiedDate":"2022-10-28"},{"lineNumber":75,"author":{"gitId":"comicalromance"},"content":"        } else if (!file.canRead()) {","lastModifiedDate":"2022-10-28"},{"lineNumber":76,"author":{"gitId":"comicalromance"},"content":"            throw new ImportException(FILE_CANNOT_BE_READ);","lastModifiedDate":"2022-10-28"},{"lineNumber":77,"author":{"gitId":"comicalromance"},"content":"        } else if (!checkIfCsv(file.getName())) {","lastModifiedDate":"2022-10-28"},{"lineNumber":78,"author":{"gitId":"comicalromance"},"content":"            throw new ImportException(FILE_NOT_CSV);","lastModifiedDate":"2022-10-28"},{"lineNumber":79,"author":{"gitId":"comicalromance"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":80,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":81,"author":{"gitId":"comicalromance"},"content":"        Scanner sc;","lastModifiedDate":"2022-10-28"},{"lineNumber":82,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":83,"author":{"gitId":"comicalromance"},"content":"        try {","lastModifiedDate":"2022-10-28"},{"lineNumber":84,"author":{"gitId":"comicalromance"},"content":"            sc \u003d new Scanner(file);","lastModifiedDate":"2022-10-28"},{"lineNumber":85,"author":{"gitId":"comicalromance"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-10-28"},{"lineNumber":86,"author":{"gitId":"comicalromance"},"content":"            throw new ImportException(FILE_DOES_NOT_EXIST);","lastModifiedDate":"2022-10-28"},{"lineNumber":87,"author":{"gitId":"comicalromance"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":88,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":89,"author":{"gitId":"comicalromance"},"content":"        if (!verifyFirstLine(sc.nextLine().split(delimiter, -1))) {","lastModifiedDate":"2022-10-28"},{"lineNumber":90,"author":{"gitId":"comicalromance"},"content":"            throw new ImportException(CSV_WRONG_FORMAT);","lastModifiedDate":"2022-10-28"},{"lineNumber":91,"author":{"gitId":"comicalromance"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":92,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":93,"author":{"gitId":"comicalromance"},"content":"        rowNumber \u003d 2;","lastModifiedDate":"2022-10-28"},{"lineNumber":94,"author":{"gitId":"comicalromance"},"content":"        while (sc.hasNextLine()) {","lastModifiedDate":"2022-10-28"},{"lineNumber":95,"author":{"gitId":"comicalromance"},"content":"            processLine(sc.nextLine().split(delimiter, -1), model);","lastModifiedDate":"2022-10-28"},{"lineNumber":96,"author":{"gitId":"comicalromance"},"content":"            rowNumber++;","lastModifiedDate":"2022-10-28"},{"lineNumber":97,"author":{"gitId":"comicalromance"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":98,"author":{"gitId":"comicalromance"},"content":"        sc.close();","lastModifiedDate":"2022-10-28"},{"lineNumber":99,"author":{"gitId":"comicalromance"},"content":"        return log.toString();","lastModifiedDate":"2022-10-28"},{"lineNumber":100,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":101,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":102,"author":{"gitId":"comicalromance"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":103,"author":{"gitId":"comicalromance"},"content":"     * Checks if the file is a CSV file.","lastModifiedDate":"2022-10-28"},{"lineNumber":104,"author":{"gitId":"Piyotato"},"content":"     *","lastModifiedDate":"2022-11-07"},{"lineNumber":105,"author":{"gitId":"comicalromance"},"content":"     * @param filename Filename to check","lastModifiedDate":"2022-10-28"},{"lineNumber":106,"author":{"gitId":"comicalromance"},"content":"     * @return Boolean if file is CSV","lastModifiedDate":"2022-10-28"},{"lineNumber":107,"author":{"gitId":"comicalromance"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":108,"author":{"gitId":"comicalromance"},"content":"    public boolean checkIfCsv(String filename) {","lastModifiedDate":"2022-10-28"},{"lineNumber":109,"author":{"gitId":"comicalromance"},"content":"        String[] fileNameSplit \u003d filename.split(\"\\\\.\");","lastModifiedDate":"2022-10-28"},{"lineNumber":110,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":111,"author":{"gitId":"comicalromance"},"content":"        return fileNameSplit.length !\u003d 1 \u0026\u0026 fileNameSplit[fileNameSplit.length - 1].equals(\"csv\");","lastModifiedDate":"2022-10-28"},{"lineNumber":112,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":113,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":114,"author":{"gitId":"comicalromance"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":115,"author":{"gitId":"comicalromance"},"content":"     * Checks if the first line follows the proper header template","lastModifiedDate":"2022-10-28"},{"lineNumber":116,"author":{"gitId":"Piyotato"},"content":"     *","lastModifiedDate":"2022-11-07"},{"lineNumber":117,"author":{"gitId":"comicalromance"},"content":"     * @param firstLine First line of the CSV","lastModifiedDate":"2022-10-28"},{"lineNumber":118,"author":{"gitId":"comicalromance"},"content":"     * @return Boolean if first line correctly follows the template","lastModifiedDate":"2022-10-28"},{"lineNumber":119,"author":{"gitId":"comicalromance"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":120,"author":{"gitId":"comicalromance"},"content":"    public boolean verifyFirstLine(String[] firstLine) {","lastModifiedDate":"2022-10-28"},{"lineNumber":121,"author":{"gitId":"comicalromance"},"content":"        if (firstLine.length !\u003d 7) {","lastModifiedDate":"2022-10-28"},{"lineNumber":122,"author":{"gitId":"comicalromance"},"content":"            return false;","lastModifiedDate":"2022-10-28"},{"lineNumber":123,"author":{"gitId":"comicalromance"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":124,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":125,"author":{"gitId":"comicalromance"},"content":"        for (int i \u003d 0; i \u003c 7; i++) {","lastModifiedDate":"2022-10-28"},{"lineNumber":126,"author":{"gitId":"comicalromance"},"content":"            if (!firstLine[i].equals(templateHeader[i])) {","lastModifiedDate":"2022-10-28"},{"lineNumber":127,"author":{"gitId":"comicalromance"},"content":"                return false;","lastModifiedDate":"2022-10-28"},{"lineNumber":128,"author":{"gitId":"comicalromance"},"content":"            }","lastModifiedDate":"2022-10-28"},{"lineNumber":129,"author":{"gitId":"comicalromance"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":130,"author":{"gitId":"comicalromance"},"content":"        return true;","lastModifiedDate":"2022-10-28"},{"lineNumber":131,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":132,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":133,"author":{"gitId":"comicalromance"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":134,"author":{"gitId":"comicalromance"},"content":"     * Processes the CSV line input, creating a Student and updating the Model with it.","lastModifiedDate":"2022-10-28"},{"lineNumber":135,"author":{"gitId":"Piyotato"},"content":"     *","lastModifiedDate":"2022-11-07"},{"lineNumber":136,"author":{"gitId":"comicalromance"},"content":"     * @param inputLine Input from CSV","lastModifiedDate":"2022-10-28"},{"lineNumber":137,"author":{"gitId":"comicalromance"},"content":"     * @param model     Model to update","lastModifiedDate":"2022-10-28"},{"lineNumber":138,"author":{"gitId":"comicalromance"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":139,"author":{"gitId":"comicalromance"},"content":"    public void processLine(String[] inputLine, Model model) {","lastModifiedDate":"2022-10-28"},{"lineNumber":140,"author":{"gitId":"comicalromance"},"content":"        StudentData studentData \u003d new StudentData();","lastModifiedDate":"2022-10-28"},{"lineNumber":141,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":142,"author":{"gitId":"comicalromance"},"content":"        for (int i \u003d 0; i \u003c inputLine.length; i++) {","lastModifiedDate":"2022-10-28"},{"lineNumber":143,"author":{"gitId":"comicalromance"},"content":"            Attributes currentAttribute \u003d enumList[i];","lastModifiedDate":"2022-10-28"},{"lineNumber":144,"author":{"gitId":"comicalromance"},"content":"            String currentInput \u003d inputLine[i];","lastModifiedDate":"2022-10-28"},{"lineNumber":145,"author":{"gitId":"comicalromance"},"content":"            try {","lastModifiedDate":"2022-10-28"},{"lineNumber":146,"author":{"gitId":"comicalromance"},"content":"                switch (currentAttribute) {","lastModifiedDate":"2022-10-28"},{"lineNumber":147,"author":{"gitId":"comicalromance"},"content":"                case NAME:","lastModifiedDate":"2022-10-28"},{"lineNumber":148,"author":{"gitId":"comicalromance"},"content":"                    studentData.setName(ParserUtil.parseName(currentInput));","lastModifiedDate":"2022-10-28"},{"lineNumber":149,"author":{"gitId":"comicalromance"},"content":"                    break;","lastModifiedDate":"2022-10-28"},{"lineNumber":150,"author":{"gitId":"comicalromance"},"content":"                case STUDENTID:","lastModifiedDate":"2022-10-28"},{"lineNumber":151,"author":{"gitId":"comicalromance"},"content":"                    studentData.setId(ParserUtil.parseId(currentInput));","lastModifiedDate":"2022-10-28"},{"lineNumber":152,"author":{"gitId":"comicalromance"},"content":"                    break;","lastModifiedDate":"2022-10-28"},{"lineNumber":153,"author":{"gitId":"comicalromance"},"content":"                case MODULE:","lastModifiedDate":"2022-10-28"},{"lineNumber":154,"author":{"gitId":"comicalromance"},"content":"                    studentData.setModule(ParserUtil.parseModule(currentInput));","lastModifiedDate":"2022-10-28"},{"lineNumber":155,"author":{"gitId":"comicalromance"},"content":"                    break;","lastModifiedDate":"2022-10-28"},{"lineNumber":156,"author":{"gitId":"comicalromance"},"content":"                case PHONE:","lastModifiedDate":"2022-10-28"},{"lineNumber":157,"author":{"gitId":"comicalromance"},"content":"                    studentData.setPhone(ParserUtil.parsePhone(currentInput));","lastModifiedDate":"2022-10-28"},{"lineNumber":158,"author":{"gitId":"comicalromance"},"content":"                    break;","lastModifiedDate":"2022-10-28"},{"lineNumber":159,"author":{"gitId":"comicalromance"},"content":"                case EMAIL:","lastModifiedDate":"2022-10-28"},{"lineNumber":160,"author":{"gitId":"comicalromance"},"content":"                    studentData.setEmail(ParserUtil.parseEmail(currentInput));","lastModifiedDate":"2022-10-28"},{"lineNumber":161,"author":{"gitId":"comicalromance"},"content":"                    break;","lastModifiedDate":"2022-10-28"},{"lineNumber":162,"author":{"gitId":"comicalromance"},"content":"                case GITHUB:","lastModifiedDate":"2022-10-28"},{"lineNumber":163,"author":{"gitId":"comicalromance"},"content":"                    studentData.setGitUser(ParserUtil.parseGitName(currentInput));","lastModifiedDate":"2022-10-28"},{"lineNumber":164,"author":{"gitId":"comicalromance"},"content":"                    break;","lastModifiedDate":"2022-10-28"},{"lineNumber":165,"author":{"gitId":"comicalromance"},"content":"                case TELEGRAM:","lastModifiedDate":"2022-10-28"},{"lineNumber":166,"author":{"gitId":"comicalromance"},"content":"                    studentData.setTeleHandle(ParserUtil.parseHandle(currentInput));","lastModifiedDate":"2022-10-28"},{"lineNumber":167,"author":{"gitId":"comicalromance"},"content":"                    break;","lastModifiedDate":"2022-10-28"},{"lineNumber":168,"author":{"gitId":"comicalromance"},"content":"                default:","lastModifiedDate":"2022-10-28"},{"lineNumber":169,"author":{"gitId":"comicalromance"},"content":"                    break;","lastModifiedDate":"2022-10-28"},{"lineNumber":170,"author":{"gitId":"comicalromance"},"content":"                }","lastModifiedDate":"2022-10-28"},{"lineNumber":171,"author":{"gitId":"comicalromance"},"content":"            } catch (ParseException e) {","lastModifiedDate":"2022-10-28"},{"lineNumber":172,"author":{"gitId":"comicalromance"},"content":"                if (currentAttribute \u003d\u003d Attributes.NAME || currentAttribute \u003d\u003d Attributes.STUDENTID","lastModifiedDate":"2022-10-28"},{"lineNumber":173,"author":{"gitId":"comicalromance"},"content":"                        || currentAttribute \u003d\u003d Attributes.MODULE) {","lastModifiedDate":"2022-10-28"},{"lineNumber":174,"author":{"gitId":"Piyotato"},"content":"                    log.append(String.format(MISSING_COMPULSORY_ATTRIBUTE,","lastModifiedDate":"2022-11-07"},{"lineNumber":175,"author":{"gitId":"comicalromance"},"content":"                            rowNumber, currentAttribute));","lastModifiedDate":"2022-10-28"},{"lineNumber":176,"author":{"gitId":"comicalromance"},"content":"                    return;","lastModifiedDate":"2022-10-28"},{"lineNumber":177,"author":{"gitId":"comicalromance"},"content":"                }","lastModifiedDate":"2022-10-28"},{"lineNumber":178,"author":{"gitId":"comicalromance"},"content":"            }","lastModifiedDate":"2022-10-28"},{"lineNumber":179,"author":{"gitId":"comicalromance"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":180,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":181,"author":{"gitId":"comicalromance"},"content":"        Student newStudent \u003d new Student(studentData);","lastModifiedDate":"2022-10-28"},{"lineNumber":182,"author":{"gitId":"comicalromance"},"content":"        if (model.hasStudent(newStudent)) {","lastModifiedDate":"2022-10-28"},{"lineNumber":183,"author":{"gitId":"Piyotato"},"content":"            log.append(String.format(DUPLICATE_STUDENT, rowNumber));","lastModifiedDate":"2022-11-07"},{"lineNumber":184,"author":{"gitId":"comicalromance"},"content":"            return;","lastModifiedDate":"2022-10-28"},{"lineNumber":185,"author":{"gitId":"comicalromance"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":186,"author":{"gitId":"comicalromance"},"content":"        model.addStudent(newStudent);","lastModifiedDate":"2022-10-28"},{"lineNumber":187,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":188,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":189,"author":{"gitId":"Piyotato"},"content":"    /**","lastModifiedDate":"2022-11-07"},{"lineNumber":190,"author":{"gitId":"Piyotato"},"content":"     * Attributes used by ImportCsv.","lastModifiedDate":"2022-11-07"},{"lineNumber":191,"author":{"gitId":"Piyotato"},"content":"     */","lastModifiedDate":"2022-11-07"},{"lineNumber":192,"author":{"gitId":"Piyotato"},"content":"    public enum Attributes {","lastModifiedDate":"2022-11-07"},{"lineNumber":193,"author":{"gitId":"Piyotato"},"content":"        NAME,","lastModifiedDate":"2022-11-07"},{"lineNumber":194,"author":{"gitId":"Piyotato"},"content":"        STUDENTID,","lastModifiedDate":"2022-11-07"},{"lineNumber":195,"author":{"gitId":"Piyotato"},"content":"        MODULE,","lastModifiedDate":"2022-11-07"},{"lineNumber":196,"author":{"gitId":"Piyotato"},"content":"        PHONE,","lastModifiedDate":"2022-11-07"},{"lineNumber":197,"author":{"gitId":"Piyotato"},"content":"        EMAIL,","lastModifiedDate":"2022-11-07"},{"lineNumber":198,"author":{"gitId":"Piyotato"},"content":"        GITHUB,","lastModifiedDate":"2022-11-07"},{"lineNumber":199,"author":{"gitId":"Piyotato"},"content":"        TELEGRAM","lastModifiedDate":"2022-11-07"},{"lineNumber":200,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-11-07"},{"lineNumber":201,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":202,"author":{"gitId":"comicalromance"},"content":"}","lastModifiedDate":"2022-10-28"}],"authorContributionMap":{"Piyotato":27,"comicalromance":175}},{"path":"src/main/java/seedu/studmap/logic/imports/exceptions/ImportException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.logic.imports.exceptions;","lastModifiedDate":"2022-10-28"},{"lineNumber":2,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":3,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.logic.imports.ImportCsv;","lastModifiedDate":"2022-10-28"},{"lineNumber":4,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":5,"author":{"gitId":"comicalromance"},"content":"/**","lastModifiedDate":"2022-10-28"},{"lineNumber":6,"author":{"gitId":"comicalromance"},"content":" * Represents an error which occurs during execution of an {@link ImportCsv}.","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"comicalromance"},"content":" */","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"comicalromance"},"content":"public class ImportException extends Exception {","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":10,"author":{"gitId":"comicalromance"},"content":"    public ImportException(String message) {","lastModifiedDate":"2022-10-28"},{"lineNumber":11,"author":{"gitId":"comicalromance"},"content":"        super(message);","lastModifiedDate":"2022-10-28"},{"lineNumber":12,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"comicalromance"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"comicalromance"},"content":"     * Constructs a new {@code ImportException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"comicalromance"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"comicalromance"},"content":"    public ImportException(String message, Throwable cause) {","lastModifiedDate":"2022-10-28"},{"lineNumber":18,"author":{"gitId":"comicalromance"},"content":"        super(message, cause);","lastModifiedDate":"2022-10-28"},{"lineNumber":19,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":20,"author":{"gitId":"comicalromance"},"content":"}","lastModifiedDate":"2022-10-28"}],"authorContributionMap":{"comicalromance":20}},{"path":"src/main/java/seedu/studmap/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.logic.parser;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"dr-arrgghh"},"content":"import static seedu.studmap.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"dr-arrgghh"},"content":"import static seedu.studmap.logic.parser.CliSyntax.PREFIX_GIT;","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"dr-arrgghh"},"content":"import static seedu.studmap.logic.parser.CliSyntax.PREFIX_HANDLE;","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"dr-arrgghh"},"content":"import static seedu.studmap.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"dr-arrgghh"},"content":"import static seedu.studmap.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"dr-arrgghh"},"content":"import static seedu.studmap.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"dr-arrgghh"},"content":"import static seedu.studmap.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"Piyotato"},"content":"import java.util.List;","lastModifiedDate":"2022-11-01"},{"lineNumber":14,"author":{"gitId":"Piyotato"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"Piyotato"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-11-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.logic.commands.AddCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.student.Student;","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.student.StudentData;","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"Piyotato"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"Piyotato"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"Piyotato"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"Piyotato"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"Piyotato"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"Piyotato"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"Piyotato"},"content":"    private static List\u003cPrefix\u003e getMissingPrefixes(ArgumentMultimap argumentMultimap, Prefix... requiredPrefixes) {","lastModifiedDate":"2022-11-01"},{"lineNumber":37,"author":{"gitId":"Piyotato"},"content":"        return Stream.of(requiredPrefixes)","lastModifiedDate":"2022-11-01"},{"lineNumber":38,"author":{"gitId":"Piyotato"},"content":"                .filter(prefix -\u003e !argumentMultimap.getValue(prefix).isPresent())","lastModifiedDate":"2022-11-01"},{"lineNumber":39,"author":{"gitId":"Piyotato"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2022-11-01"},{"lineNumber":40,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":41,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":42,"author":{"gitId":"Piyotato"},"content":"    public static String getMissingPrefixesMessage(List\u003cPrefix\u003e missingPrefixes) {","lastModifiedDate":"2022-11-01"},{"lineNumber":43,"author":{"gitId":"Piyotato"},"content":"        return \"MISSING: \" + missingPrefixes","lastModifiedDate":"2022-11-01"},{"lineNumber":44,"author":{"gitId":"Piyotato"},"content":"                .stream()","lastModifiedDate":"2022-11-01"},{"lineNumber":45,"author":{"gitId":"Piyotato"},"content":"                .map(Prefix::toString)","lastModifiedDate":"2022-11-01"},{"lineNumber":46,"author":{"gitId":"Piyotato"},"content":"                .collect(Collectors.joining(\", \"));","lastModifiedDate":"2022-11-01"},{"lineNumber":47,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":48,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":49,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":53,"author":{"gitId":"Piyotato"},"content":"     *","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":58,"author":{"gitId":"comicalromance"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_MODULE,","lastModifiedDate":"2022-10-26"},{"lineNumber":59,"author":{"gitId":"comicalromance"},"content":"                        PREFIX_ID, PREFIX_GIT, PREFIX_HANDLE, PREFIX_TAG);","lastModifiedDate":"2022-10-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"Piyotato"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_MODULE, PREFIX_ID)) {","lastModifiedDate":"2022-11-01"},{"lineNumber":62,"author":{"gitId":"Piyotato"},"content":"            List\u003cPrefix\u003e missingPrefixes \u003d getMissingPrefixes(argMultimap, PREFIX_NAME, PREFIX_MODULE, PREFIX_ID);","lastModifiedDate":"2022-11-01"},{"lineNumber":63,"author":{"gitId":"Piyotato"},"content":"            String missingPrefixesMessage \u003d getMissingPrefixesMessage(missingPrefixes);","lastModifiedDate":"2022-11-01"},{"lineNumber":64,"author":{"gitId":"Piyotato"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE)","lastModifiedDate":"2022-11-01"},{"lineNumber":65,"author":{"gitId":"Piyotato"},"content":"                    + \"\\n\" + missingPrefixesMessage);","lastModifiedDate":"2022-11-01"},{"lineNumber":66,"author":{"gitId":"Piyotato"},"content":"        } else if (!argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-11-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":70,"author":{"gitId":"comicalromance"},"content":"        StudentData studentData \u003d new StudentData();","lastModifiedDate":"2022-10-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":72,"author":{"gitId":"Piyotato"},"content":"        Optional\u003cString\u003e nameString \u003d argMultimap.getValue(PREFIX_NAME);","lastModifiedDate":"2022-10-26"},{"lineNumber":73,"author":{"gitId":"Piyotato"},"content":"        if (nameString.isPresent()) {","lastModifiedDate":"2022-10-26"},{"lineNumber":74,"author":{"gitId":"Piyotato"},"content":"            studentData.setName(ParserUtil.parseName(nameString.get()));","lastModifiedDate":"2022-10-26"},{"lineNumber":75,"author":{"gitId":"Piyotato"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":76,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":77,"author":{"gitId":"Piyotato"},"content":"        Optional\u003cString\u003e phoneString \u003d argMultimap.getValue(PREFIX_PHONE);","lastModifiedDate":"2022-10-26"},{"lineNumber":78,"author":{"gitId":"Piyotato"},"content":"        if (phoneString.isPresent()) {","lastModifiedDate":"2022-10-26"},{"lineNumber":79,"author":{"gitId":"Piyotato"},"content":"            studentData.setPhone(ParserUtil.parsePhone(phoneString.get()));","lastModifiedDate":"2022-10-26"},{"lineNumber":80,"author":{"gitId":"Piyotato"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":81,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":82,"author":{"gitId":"Piyotato"},"content":"        Optional\u003cString\u003e emailString \u003d argMultimap.getValue(PREFIX_EMAIL);","lastModifiedDate":"2022-10-26"},{"lineNumber":83,"author":{"gitId":"Piyotato"},"content":"        if (emailString.isPresent()) {","lastModifiedDate":"2022-10-26"},{"lineNumber":84,"author":{"gitId":"Piyotato"},"content":"            studentData.setEmail(ParserUtil.parseEmail(emailString.get()));","lastModifiedDate":"2022-10-26"},{"lineNumber":85,"author":{"gitId":"Piyotato"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":86,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":87,"author":{"gitId":"Piyotato"},"content":"        Optional\u003cString\u003e moduleString \u003d argMultimap.getValue(PREFIX_MODULE);","lastModifiedDate":"2022-10-26"},{"lineNumber":88,"author":{"gitId":"Piyotato"},"content":"        if (moduleString.isPresent()) {","lastModifiedDate":"2022-10-26"},{"lineNumber":89,"author":{"gitId":"Piyotato"},"content":"            studentData.setModule(ParserUtil.parseModule(moduleString.get()));","lastModifiedDate":"2022-10-26"},{"lineNumber":90,"author":{"gitId":"Piyotato"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":91,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":92,"author":{"gitId":"Piyotato"},"content":"        Optional\u003cString\u003e idString \u003d argMultimap.getValue(PREFIX_ID);","lastModifiedDate":"2022-10-26"},{"lineNumber":93,"author":{"gitId":"Piyotato"},"content":"        if (idString.isPresent()) {","lastModifiedDate":"2022-10-26"},{"lineNumber":94,"author":{"gitId":"Piyotato"},"content":"            studentData.setId(ParserUtil.parseId(idString.get()));","lastModifiedDate":"2022-10-26"},{"lineNumber":95,"author":{"gitId":"Piyotato"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":96,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":97,"author":{"gitId":"Piyotato"},"content":"        Optional\u003cString\u003e gitUserString \u003d argMultimap.getValue(PREFIX_GIT);","lastModifiedDate":"2022-10-26"},{"lineNumber":98,"author":{"gitId":"Piyotato"},"content":"        if (gitUserString.isPresent()) {","lastModifiedDate":"2022-10-26"},{"lineNumber":99,"author":{"gitId":"Piyotato"},"content":"            studentData.setGitUser(ParserUtil.parseGitName(gitUserString.get()));","lastModifiedDate":"2022-10-26"},{"lineNumber":100,"author":{"gitId":"Piyotato"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":101,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":102,"author":{"gitId":"Piyotato"},"content":"        Optional\u003cString\u003e teleHandleString \u003d argMultimap.getValue(PREFIX_HANDLE);","lastModifiedDate":"2022-10-26"},{"lineNumber":103,"author":{"gitId":"Piyotato"},"content":"        if (teleHandleString.isPresent()) {","lastModifiedDate":"2022-10-26"},{"lineNumber":104,"author":{"gitId":"Piyotato"},"content":"            studentData.setTeleHandle(ParserUtil.parseHandle(teleHandleString.get()));","lastModifiedDate":"2022-10-26"},{"lineNumber":105,"author":{"gitId":"Piyotato"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":106,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":107,"author":{"gitId":"comicalromance"},"content":"        studentData.setTags(ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG)));","lastModifiedDate":"2022-10-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":109,"author":{"gitId":"comicalromance"},"content":"        Student student \u003d new Student(studentData);","lastModifiedDate":"2022-10-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":111,"author":{"gitId":"comicalromance"},"content":"        return new AddCommand(student);","lastModifiedDate":"2022-10-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"dr-arrgghh":7,"Piyotato":67,"-":26,"comicalromance":13}},{"path":"src/main/java/seedu/studmap/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.logic.parser;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"-":59,"comicalromance":1}},{"path":"src/main/java/seedu/studmap/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.logic.parser;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"-":147,"comicalromance":1}},{"path":"src/main/java/seedu/studmap/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.logic.parser;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"comicalromance"},"content":"    public static final Prefix PREFIX_MODULE \u003d new Prefix(\"m/\");","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"Piyotato"},"content":"    public static final Prefix PREFIX_ID \u003d new Prefix(\"id/\");","lastModifiedDate":"2022-11-05"},{"lineNumber":14,"author":{"gitId":"dr-arrgghh"},"content":"    public static final Prefix PREFIX_GIT \u003d new Prefix(\"g/\");","lastModifiedDate":"2022-10-25"},{"lineNumber":15,"author":{"gitId":"dr-arrgghh"},"content":"    public static final Prefix PREFIX_HANDLE \u003d new Prefix(\"h/\");","lastModifiedDate":"2022-10-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"comicalromance"},"content":"    public static final Prefix PREFIX_CLASS \u003d new Prefix(\"c/\");","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"highorbit25"},"content":"    public static final Prefix PREFIX_ATTRIBUTE \u003d new Prefix(\"a/\");","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"lpohsien"},"content":"    public static final Prefix PREFIX_ASSIGNMENT \u003d new Prefix(\"a/\");","lastModifiedDate":"2022-10-23"},{"lineNumber":20,"author":{"gitId":"highorbit25"},"content":"    public static final Prefix PREFIX_PARTICIPATION \u003d new Prefix(\"p/\");","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"highorbit25":2,"dr-arrgghh":2,"Piyotato":1,"-":12,"comicalromance":3,"lpohsien":1}},{"path":"src/main/java/seedu/studmap/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.logic.parser;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.parser.ParserUtil.separatePreamble;","lastModifiedDate":"2022-11-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.commons.core.index.IndexListGenerator;","lastModifiedDate":"2022-11-07"},{"lineNumber":7,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.logic.commands.DeleteCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"comicalromance"},"content":"public class DeleteCommandParser implements IndexCommandParser\u003cDeleteCommand\u003e {","lastModifiedDate":"2022-11-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"comicalromance"},"content":"     * Returns empty prefix list.","lastModifiedDate":"2022-11-07"},{"lineNumber":17,"author":{"gitId":"comicalromance"},"content":"     * @return Empty prefix list","lastModifiedDate":"2022-11-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"comicalromance"},"content":"    @Override","lastModifiedDate":"2022-11-07"},{"lineNumber":20,"author":{"gitId":"comicalromance"},"content":"    public Prefix[] getPrefixes() {","lastModifiedDate":"2022-11-07"},{"lineNumber":21,"author":{"gitId":"comicalromance"},"content":"        return new Prefix[0];","lastModifiedDate":"2022-11-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":24,"author":{"gitId":"comicalromance"},"content":"    /**","lastModifiedDate":"2022-11-07"},{"lineNumber":25,"author":{"gitId":"comicalromance"},"content":"     * Returns Usage Message for DeleteCommand.","lastModifiedDate":"2022-11-07"},{"lineNumber":26,"author":{"gitId":"comicalromance"},"content":"     * @return Usage Message for DeleteCommand.","lastModifiedDate":"2022-11-07"},{"lineNumber":27,"author":{"gitId":"comicalromance"},"content":"     */","lastModifiedDate":"2022-11-07"},{"lineNumber":28,"author":{"gitId":"comicalromance"},"content":"    @Override","lastModifiedDate":"2022-11-07"},{"lineNumber":29,"author":{"gitId":"comicalromance"},"content":"    public String getUsageMessage() {","lastModifiedDate":"2022-11-07"},{"lineNumber":30,"author":{"gitId":"comicalromance"},"content":"        return DeleteCommand.MESSAGE_USAGE;","lastModifiedDate":"2022-11-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"comicalromance"},"content":"    /**","lastModifiedDate":"2022-11-07"},{"lineNumber":34,"author":{"gitId":"comicalromance"},"content":"     * Returns a DeleteCommand object for execution.","lastModifiedDate":"2022-11-07"},{"lineNumber":35,"author":{"gitId":"comicalromance"},"content":"     * @param argMultimap        Argument multimap to process","lastModifiedDate":"2022-11-07"},{"lineNumber":36,"author":{"gitId":"comicalromance"},"content":"     * @param indexListGenerator students affected by this command, wrapped in a function to be used later.","lastModifiedDate":"2022-11-07"},{"lineNumber":37,"author":{"gitId":"comicalromance"},"content":"     * @return DeleteCommand object for execution","lastModifiedDate":"2022-11-07"},{"lineNumber":38,"author":{"gitId":"comicalromance"},"content":"     * @throws ParseException if a ParseException is detected","lastModifiedDate":"2022-11-07"},{"lineNumber":39,"author":{"gitId":"comicalromance"},"content":"     */","lastModifiedDate":"2022-11-07"},{"lineNumber":40,"author":{"gitId":"comicalromance"},"content":"    @Override","lastModifiedDate":"2022-11-07"},{"lineNumber":41,"author":{"gitId":"comicalromance"},"content":"    public DeleteCommand getIndexCommand(ArgumentMultimap argMultimap, IndexListGenerator indexListGenerator)","lastModifiedDate":"2022-11-07"},{"lineNumber":42,"author":{"gitId":"comicalromance"},"content":"            throws ParseException {","lastModifiedDate":"2022-11-07"},{"lineNumber":43,"author":{"gitId":"comicalromance"},"content":"        return new DeleteCommand(indexListGenerator);","lastModifiedDate":"2022-11-07"},{"lineNumber":44,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-11-07"},{"lineNumber":45,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":46,"author":{"gitId":"comicalromance"},"content":"    /**","lastModifiedDate":"2022-11-07"},{"lineNumber":47,"author":{"gitId":"comicalromance"},"content":"     * Checks if there is only one preamble, and throws ParseException if not.","lastModifiedDate":"2022-11-07"},{"lineNumber":48,"author":{"gitId":"comicalromance"},"content":"     * @param preamble Preamble provided in command input","lastModifiedDate":"2022-11-07"},{"lineNumber":49,"author":{"gitId":"comicalromance"},"content":"     * @throws ParseException if there is more or less than one preamble","lastModifiedDate":"2022-11-07"},{"lineNumber":50,"author":{"gitId":"comicalromance"},"content":"     */","lastModifiedDate":"2022-11-07"},{"lineNumber":51,"author":{"gitId":"comicalromance"},"content":"    @Override","lastModifiedDate":"2022-11-07"},{"lineNumber":52,"author":{"gitId":"comicalromance"},"content":"    public void validatePreamble(String preamble) throws ParseException {","lastModifiedDate":"2022-11-07"},{"lineNumber":53,"author":{"gitId":"comicalromance"},"content":"        if (separatePreamble(preamble).length !\u003d 1) {","lastModifiedDate":"2022-11-07"},{"lineNumber":54,"author":{"gitId":"comicalromance"},"content":"            throw new ParseException(MESSAGE_INVALID_COMMAND_FORMAT);","lastModifiedDate":"2022-11-07"},{"lineNumber":55,"author":{"gitId":"comicalromance"},"content":"        }","lastModifiedDate":"2022-11-07"},{"lineNumber":56,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-11-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"-":13,"comicalromance":44}},{"path":"src/main/java/seedu/studmap/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.logic.parser;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"dr-arrgghh"},"content":"import static seedu.studmap.logic.parser.CliSyntax.PREFIX_GIT;","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"dr-arrgghh"},"content":"import static seedu.studmap.logic.parser.CliSyntax.PREFIX_HANDLE;","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"dr-arrgghh"},"content":"import static seedu.studmap.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"Piyotato"},"content":"import seedu.studmap.commons.core.index.IndexListGenerator;","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.logic.commands.EditCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"Piyotato"},"content":"import seedu.studmap.logic.commands.EditCommand.EditCommandStudentEditor;","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"Piyotato"},"content":"import seedu.studmap.logic.commands.EditStudentCommand;","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.tag.Tag;","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"Piyotato"},"content":"public class EditCommandParser extends EditStudentCommandParser\u003cEditCommandStudentEditor\u003e {","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"Piyotato"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"Piyotato"},"content":"    public Prefix[] getPrefixes() {","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"dr-arrgghh"},"content":"        return new Prefix[]{","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"comicalromance"},"content":"            PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_MODULE,","lastModifiedDate":"2022-10-26"},{"lineNumber":33,"author":{"gitId":"comicalromance"},"content":"            PREFIX_ID, PREFIX_GIT, PREFIX_HANDLE, PREFIX_TAG","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"dr-arrgghh"},"content":"        };","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"Piyotato"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"Piyotato"},"content":"    public String getUsageMessage() {","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"Piyotato"},"content":"        return EditCommand.MESSAGE_USAGE;","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":42,"author":{"gitId":"Piyotato"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"Piyotato"},"content":"    public EditStudentCommand\u003cEditCommandStudentEditor\u003e getIndexCommand(","lastModifiedDate":"2022-10-20"},{"lineNumber":44,"author":{"gitId":"Piyotato"},"content":"            ArgumentMultimap argMultimap, IndexListGenerator indexListGenerator) throws ParseException {","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":46,"author":{"gitId":"Piyotato"},"content":"        EditCommand.EditCommandStudentEditor editor \u003d new EditCommand.EditCommandStudentEditor();","lastModifiedDate":"2022-10-20"},{"lineNumber":47,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"Piyotato"},"content":"            editor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2022-10-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"Piyotato"},"content":"            editor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"Piyotato"},"content":"            editor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2022-10-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"comicalromance"},"content":"        if (argMultimap.getValue(PREFIX_MODULE).isPresent()) {","lastModifiedDate":"2022-10-26"},{"lineNumber":58,"author":{"gitId":"comicalromance"},"content":"            editor.setModule(ParserUtil.parseModule(argMultimap.getValue(PREFIX_MODULE).get()));","lastModifiedDate":"2022-10-26"},{"lineNumber":59,"author":{"gitId":"comicalromance"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":60,"author":{"gitId":"dr-arrgghh"},"content":"        if (argMultimap.getValue(PREFIX_ID).isPresent()) {","lastModifiedDate":"2022-10-25"},{"lineNumber":61,"author":{"gitId":"dr-arrgghh"},"content":"            editor.setId(ParserUtil.parseId(argMultimap.getValue(PREFIX_ID).get()));","lastModifiedDate":"2022-10-25"},{"lineNumber":62,"author":{"gitId":"dr-arrgghh"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":63,"author":{"gitId":"dr-arrgghh"},"content":"        if (argMultimap.getValue(PREFIX_GIT).isPresent()) {","lastModifiedDate":"2022-10-25"},{"lineNumber":64,"author":{"gitId":"dr-arrgghh"},"content":"            editor.setGitName(ParserUtil.parseGitName(argMultimap.getValue(PREFIX_GIT).get()));","lastModifiedDate":"2022-10-25"},{"lineNumber":65,"author":{"gitId":"dr-arrgghh"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":66,"author":{"gitId":"dr-arrgghh"},"content":"        if (argMultimap.getValue(PREFIX_HANDLE).isPresent()) {","lastModifiedDate":"2022-10-25"},{"lineNumber":67,"author":{"gitId":"dr-arrgghh"},"content":"            editor.setHandle(ParserUtil.parseHandle(argMultimap.getValue(PREFIX_HANDLE).get()));","lastModifiedDate":"2022-10-25"},{"lineNumber":68,"author":{"gitId":"dr-arrgghh"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":69,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":70,"author":{"gitId":"Piyotato"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editor::setTags);","lastModifiedDate":"2022-10-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"Piyotato"},"content":"        return new EditCommand(indexListGenerator, editor);","lastModifiedDate":"2022-10-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"dr-arrgghh":14,"Piyotato":21,"-":40,"comicalromance":15}},{"path":"src/main/java/seedu/studmap/logic/parser/EditStudentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Piyotato"},"content":"package seedu.studmap.logic.parser;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"Piyotato"},"content":"import static seedu.studmap.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"Piyotato"},"content":"import static seedu.studmap.logic.parser.ParserUtil.separatePreamble;","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"Piyotato"},"content":"import seedu.studmap.logic.commands.EditStudentCommand;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"Piyotato"},"content":"import seedu.studmap.logic.commands.commons.StudentEditor;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"Piyotato"},"content":"import seedu.studmap.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"Piyotato"},"content":"/**","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"Piyotato"},"content":" * An in-between abstract class to flatten the class declaration.","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"Piyotato"},"content":" *","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"Piyotato"},"content":" * @param \u003cS\u003e StudentEditor that is used by the EditStudentCommand which this parser produces.","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"Piyotato"},"content":" */","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"Piyotato"},"content":"public abstract class EditStudentCommandParser\u003cS extends StudentEditor\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"Piyotato"},"content":"        implements IndexCommandParser\u003cEditStudentCommand\u003cS\u003e\u003e {","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"Piyotato"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"Piyotato"},"content":"    public EditStudentCommand\u003cS\u003e parse(String args) throws ParseException {","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"Piyotato"},"content":"        EditStudentCommand\u003cS\u003e command \u003d IndexCommandParser.super.parse(args);","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"Piyotato"},"content":"        if (!command.hasEdits()) {","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"Piyotato"},"content":"            throw new ParseException(command.getNoEditMessage());","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"Piyotato"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"Piyotato"},"content":"        return command;","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"Piyotato"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"Piyotato"},"content":"    public void validatePreamble(String preamble) throws ParseException {","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"Piyotato"},"content":"        if (separatePreamble(preamble).length !\u003d 1) {","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"Piyotato"},"content":"            throw new ParseException(MESSAGE_INVALID_COMMAND_FORMAT);","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"Piyotato"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"Piyotato"},"content":"}","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"Piyotato":33}},{"path":"src/main/java/seedu/studmap/logic/parser/FilterCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.logic.parser;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"dr-arrgghh"},"content":"import static seedu.studmap.logic.parser.CliSyntax.PREFIX_ASSIGNMENT;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"dr-arrgghh"},"content":"import static seedu.studmap.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"dr-arrgghh"},"content":"import static seedu.studmap.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"dr-arrgghh"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.logic.commands.FilterCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"dr-arrgghh"},"content":"import seedu.studmap.model.student.AssignmentContainsKeywordsPredicate;","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"dr-arrgghh"},"content":"import seedu.studmap.model.student.ModuleContainsKeywordsPredicate;","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.student.TagContainsKeywordsPredicate;","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"dr-arrgghh"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"dr-arrgghh"},"content":" * Parses input arguments and create a new FilterCommand object","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"dr-arrgghh"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"dr-arrgghh"},"content":"public class FilterCommandParser implements Parser\u003cFilterCommand\u003e {","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"dr-arrgghh"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"dr-arrgghh"},"content":"     * Parses the given {@code String} of arguments in the context of the FilterCommand","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"dr-arrgghh"},"content":"     * and returns a FilterCommand object for execution.","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"dr-arrgghh"},"content":"     *","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"dr-arrgghh"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"dr-arrgghh"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"dr-arrgghh"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"dr-arrgghh"},"content":"    public FilterCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"dr-arrgghh"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"dr-arrgghh"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_MODULE, PREFIX_ASSIGNMENT, PREFIX_TAG);","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"dr-arrgghh"},"content":"        if (trimmedArgs.length() \u003d\u003d 2 || trimmedArgs.isEmpty()) {","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"dr-arrgghh"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"dr-arrgghh"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"dr-arrgghh"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"comicalromance"},"content":"        String[] nameKeywords;","lastModifiedDate":"2022-10-28"},{"lineNumber":38,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"dr-arrgghh"},"content":"        if (argMultimap.getValue(PREFIX_ASSIGNMENT).isPresent()) {","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"comicalromance"},"content":"            nameKeywords \u003d argMultimap.getValue(PREFIX_ASSIGNMENT).get().split(\"\\\\s+\");","lastModifiedDate":"2022-10-28"},{"lineNumber":41,"author":{"gitId":"dr-arrgghh"},"content":"            return new FilterCommand(new AssignmentContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2022-10-27"},{"lineNumber":42,"author":{"gitId":"dr-arrgghh"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":43,"author":{"gitId":"dr-arrgghh"},"content":"        if (argMultimap.getValue(PREFIX_MODULE).isPresent()) {","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"comicalromance"},"content":"            nameKeywords \u003d argMultimap.getValue(PREFIX_MODULE).get().split(\"\\\\s+\");","lastModifiedDate":"2022-10-28"},{"lineNumber":45,"author":{"gitId":"dr-arrgghh"},"content":"            return new FilterCommand(new ModuleContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2022-10-27"},{"lineNumber":46,"author":{"gitId":"dr-arrgghh"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":47,"author":{"gitId":"dr-arrgghh"},"content":"        if (argMultimap.getValue(PREFIX_TAG).isPresent()) {","lastModifiedDate":"2022-10-27"},{"lineNumber":48,"author":{"gitId":"comicalromance"},"content":"            nameKeywords \u003d argMultimap.getValue(PREFIX_TAG).get().split(\"\\\\s+\");","lastModifiedDate":"2022-10-28"},{"lineNumber":49,"author":{"gitId":"dr-arrgghh"},"content":"            return new FilterCommand(new TagContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2022-10-27"},{"lineNumber":50,"author":{"gitId":"dr-arrgghh"},"content":"        } else {","lastModifiedDate":"2022-10-27"},{"lineNumber":51,"author":{"gitId":"dr-arrgghh"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-27"},{"lineNumber":52,"author":{"gitId":"dr-arrgghh"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-27"},{"lineNumber":53,"author":{"gitId":"dr-arrgghh"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":54,"author":{"gitId":"dr-arrgghh"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":55,"author":{"gitId":"dr-arrgghh"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"dr-arrgghh":46,"comicalromance":9}},{"path":"src/main/java/seedu/studmap/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.logic.parser;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.logic.commands.FindCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.student.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"-":28,"comicalromance":5}},{"path":"src/main/java/seedu/studmap/logic/parser/GradeCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lpohsien"},"content":"package seedu.studmap.logic.parser;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"lpohsien"},"content":"import static seedu.studmap.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"lpohsien"},"content":"import static seedu.studmap.logic.parser.CliSyntax.PREFIX_ASSIGNMENT;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"lpohsien"},"content":"import static seedu.studmap.logic.parser.ParserUtil.separatePreamble;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"lpohsien"},"content":"import seedu.studmap.commons.core.index.IndexListGenerator;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"lpohsien"},"content":"import seedu.studmap.logic.commands.EditStudentCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"lpohsien"},"content":"import seedu.studmap.logic.commands.GradeCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"lpohsien"},"content":"import seedu.studmap.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"lpohsien"},"content":"import seedu.studmap.model.student.Assignment;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"lpohsien"},"content":"/**","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"lpohsien"},"content":" * Parses input arguments and creates a new MarkCommand object","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"lpohsien"},"content":" */","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"lpohsien"},"content":"public class GradeCommandParser extends EditStudentCommandParser\u003cGradeCommand.GradeCommandStudentEditor\u003e {","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"Piyotato"},"content":"    public static final String OPTION_ASSIGNMENT_NEW \u003d \"new\";","lastModifiedDate":"2022-11-06"},{"lineNumber":19,"author":{"gitId":"Piyotato"},"content":"    public static final String OPTION_ASSIGNMENT_RECEIVED \u003d \"received\";","lastModifiedDate":"2022-11-06"},{"lineNumber":20,"author":{"gitId":"Piyotato"},"content":"    public static final String OPTION_ASSIGNMENT_MARKED \u003d \"marked\";","lastModifiedDate":"2022-11-06"},{"lineNumber":21,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":22,"author":{"gitId":"Piyotato"},"content":"    public static final String MESSAGE_INVALID_OPTION \u003d \"Option must either be \" + OPTION_ASSIGNMENT_NEW + \" or \"","lastModifiedDate":"2022-11-06"},{"lineNumber":23,"author":{"gitId":"Piyotato"},"content":"            + OPTION_ASSIGNMENT_RECEIVED + \" or \" + OPTION_ASSIGNMENT_MARKED + \" for assignment status\";","lastModifiedDate":"2022-11-06"},{"lineNumber":24,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":25,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"lpohsien"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"lpohsien"},"content":"    public Prefix[] getPrefixes() {","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"lpohsien"},"content":"        return new Prefix[]{PREFIX_ASSIGNMENT};","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"lpohsien"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"lpohsien"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"lpohsien"},"content":"    public String getUsageMessage() {","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"lpohsien"},"content":"        return GradeCommand.MESSAGE_USAGE;","lastModifiedDate":"2022-10-27"},{"lineNumber":34,"author":{"gitId":"lpohsien"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":36,"author":{"gitId":"lpohsien"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"lpohsien"},"content":"     * Parses the given {@code String} of arguments in the context of the MarkCommand","lastModifiedDate":"2022-10-27"},{"lineNumber":38,"author":{"gitId":"lpohsien"},"content":"     * and returns a MarkCommand object for execution.","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"lpohsien"},"content":"     *","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"lpohsien"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-27"},{"lineNumber":41,"author":{"gitId":"lpohsien"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":42,"author":{"gitId":"lpohsien"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":43,"author":{"gitId":"lpohsien"},"content":"    public EditStudentCommand\u003cGradeCommand.GradeCommandStudentEditor\u003e getIndexCommand(","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"lpohsien"},"content":"            ArgumentMultimap argMultimap, IndexListGenerator indexListGenerator) throws ParseException {","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":46,"author":{"gitId":"comicalromance"},"content":"        String[] preamble \u003d separatePreamble(argMultimap.getPreamble());","lastModifiedDate":"2022-11-03"},{"lineNumber":47,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":48,"author":{"gitId":"lpohsien"},"content":"        GradeCommand.GradeCommandStudentEditor editor \u003d null;","lastModifiedDate":"2022-10-27"},{"lineNumber":49,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":50,"author":{"gitId":"comicalromance"},"content":"        Assignment.Status markingStatus \u003d parseStatus(preamble[1]);","lastModifiedDate":"2022-11-03"},{"lineNumber":51,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":52,"author":{"gitId":"comicalromance"},"content":"        if (argMultimap.getValue(PREFIX_ASSIGNMENT).isEmpty()) {","lastModifiedDate":"2022-11-03"},{"lineNumber":53,"author":{"gitId":"comicalromance"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, getUsageMessage()));","lastModifiedDate":"2022-11-03"},{"lineNumber":54,"author":{"gitId":"comicalromance"},"content":"        }","lastModifiedDate":"2022-11-03"},{"lineNumber":55,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":56,"author":{"gitId":"lpohsien"},"content":"        String assignmentName \u003d ParserUtil.parseAssignmentName(","lastModifiedDate":"2022-10-27"},{"lineNumber":57,"author":{"gitId":"lpohsien"},"content":"                argMultimap.getValue(PREFIX_ASSIGNMENT).orElse(\"\"));","lastModifiedDate":"2022-10-27"},{"lineNumber":58,"author":{"gitId":"lpohsien"},"content":"        Assignment assignment \u003d new Assignment(assignmentName, markingStatus);","lastModifiedDate":"2022-10-27"},{"lineNumber":59,"author":{"gitId":"lpohsien"},"content":"        editor \u003d new GradeCommand.GradeCommandStudentEditor(assignment);","lastModifiedDate":"2022-10-27"},{"lineNumber":60,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":61,"author":{"gitId":"lpohsien"},"content":"        return new GradeCommand(indexListGenerator, editor);","lastModifiedDate":"2022-10-27"},{"lineNumber":62,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":63,"author":{"gitId":"lpohsien"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":64,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":65,"author":{"gitId":"Piyotato"},"content":"    private Assignment.Status parseStatus(String option) throws ParseException {","lastModifiedDate":"2022-11-06"},{"lineNumber":66,"author":{"gitId":"Piyotato"},"content":"        switch (option) {","lastModifiedDate":"2022-11-06"},{"lineNumber":67,"author":{"gitId":"Piyotato"},"content":"        case OPTION_ASSIGNMENT_NEW:","lastModifiedDate":"2022-11-06"},{"lineNumber":68,"author":{"gitId":"Piyotato"},"content":"            return Assignment.Status.NEW;","lastModifiedDate":"2022-11-06"},{"lineNumber":69,"author":{"gitId":"Piyotato"},"content":"        case OPTION_ASSIGNMENT_RECEIVED:","lastModifiedDate":"2022-11-06"},{"lineNumber":70,"author":{"gitId":"Piyotato"},"content":"            return Assignment.Status.RECEIVED;","lastModifiedDate":"2022-11-06"},{"lineNumber":71,"author":{"gitId":"Piyotato"},"content":"        case OPTION_ASSIGNMENT_MARKED:","lastModifiedDate":"2022-11-06"},{"lineNumber":72,"author":{"gitId":"Piyotato"},"content":"            return Assignment.Status.MARKED;","lastModifiedDate":"2022-11-06"},{"lineNumber":73,"author":{"gitId":"Piyotato"},"content":"        default:","lastModifiedDate":"2022-11-06"},{"lineNumber":74,"author":{"gitId":"comicalromance"},"content":"            throw new ParseException(MESSAGE_INVALID_OPTION);","lastModifiedDate":"2022-11-03"},{"lineNumber":75,"author":{"gitId":"lpohsien"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":76,"author":{"gitId":"lpohsien"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":77,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":78,"author":{"gitId":"lpohsien"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":79,"author":{"gitId":"lpohsien"},"content":"    public void validatePreamble(String preamble) throws ParseException {","lastModifiedDate":"2022-10-27"},{"lineNumber":80,"author":{"gitId":"lpohsien"},"content":"        if (separatePreamble(preamble).length !\u003d 2) {","lastModifiedDate":"2022-10-27"},{"lineNumber":81,"author":{"gitId":"lpohsien"},"content":"            throw new ParseException(MESSAGE_INVALID_COMMAND_FORMAT);","lastModifiedDate":"2022-10-27"},{"lineNumber":82,"author":{"gitId":"lpohsien"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":83,"author":{"gitId":"lpohsien"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":84,"author":{"gitId":"lpohsien"},"content":"}","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"Piyotato":16,"lpohsien":60,"comicalromance":8}},{"path":"src/main/java/seedu/studmap/logic/parser/IndexCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Piyotato"},"content":"package seedu.studmap.logic.parser;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"Piyotato"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"Piyotato"},"content":"import static seedu.studmap.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"Piyotato"},"content":"import static seedu.studmap.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"Piyotato"},"content":"import static seedu.studmap.logic.parser.ParserUtil.separatePreamble;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"Piyotato"},"content":"import java.util.List;","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"Piyotato"},"content":"import seedu.studmap.commons.core.index.AllIndexGenerator;","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"Piyotato"},"content":"import seedu.studmap.commons.core.index.Index;","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"Piyotato"},"content":"import seedu.studmap.commons.core.index.IndexListGenerator;","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"Piyotato"},"content":"import seedu.studmap.commons.core.index.SingleIndexGenerator;","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"Piyotato"},"content":"import seedu.studmap.logic.commands.Command;","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"Piyotato"},"content":"import seedu.studmap.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"Piyotato"},"content":"/**","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"Piyotato"},"content":" * An interface that provides a framework for a parser for commands that will need to manipulate","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"Piyotato"},"content":" * a number of students based on their indices.","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"Piyotato"},"content":" *","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"Piyotato"},"content":" * @param \u003cT\u003e Command type that this parser will parse.","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"Piyotato"},"content":" */","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"Piyotato"},"content":"public interface IndexCommandParser\u003cT extends Command\u003e extends Parser\u003cT\u003e {","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"Piyotato"},"content":"    String ALL_INDEX \u003d \"all\";","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"Piyotato"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"Piyotato"},"content":"     * Returns an array of prefixes that will tokenize the arguments string.","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"Piyotato"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"Piyotato"},"content":"    Prefix[] getPrefixes();","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"Piyotato"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"Piyotato"},"content":"     * Returns the usage message for the command to be produced.","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"Piyotato"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"Piyotato"},"content":"    String getUsageMessage();","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"Piyotato"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"Piyotato"},"content":"     * Parses given arguments and returns a command.","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"Piyotato"},"content":"     * The default implementation will look for an index (and in the case of the keyword \u0027all\u0027,","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"Piyotato"},"content":"     * it returns a function that produces all the available indices.","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"Piyotato"},"content":"     *","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"Piyotato"},"content":"     * @param args Command arguments","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"Piyotato"},"content":"     * @return Command for execution","lastModifiedDate":"2022-10-20"},{"lineNumber":44,"author":{"gitId":"Piyotato"},"content":"     * @throws ParseException if any errors arise when parsing this command","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"Piyotato"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":46,"author":{"gitId":"Piyotato"},"content":"    default T parse(String args) throws ParseException {","lastModifiedDate":"2022-10-20"},{"lineNumber":47,"author":{"gitId":"Piyotato"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-10-20"},{"lineNumber":48,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":49,"author":{"gitId":"Piyotato"},"content":"        Prefix[] prefixes \u003d getPrefixes();","lastModifiedDate":"2022-10-20"},{"lineNumber":50,"author":{"gitId":"Piyotato"},"content":"        requireNonNull(prefixes);","lastModifiedDate":"2022-10-20"},{"lineNumber":51,"author":{"gitId":"Piyotato"},"content":"        requireAllNonNull(List.of(prefixes));","lastModifiedDate":"2022-10-20"},{"lineNumber":52,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"Piyotato"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, prefixes);","lastModifiedDate":"2022-10-20"},{"lineNumber":54,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":55,"author":{"gitId":"Piyotato"},"content":"        Index index;","lastModifiedDate":"2022-10-20"},{"lineNumber":56,"author":{"gitId":"Piyotato"},"content":"        try {","lastModifiedDate":"2022-10-20"},{"lineNumber":57,"author":{"gitId":"Piyotato"},"content":"            String preamble \u003d argMultimap.getPreamble();","lastModifiedDate":"2022-10-20"},{"lineNumber":58,"author":{"gitId":"Piyotato"},"content":"            String[] preambleArgs \u003d separatePreamble(preamble);","lastModifiedDate":"2022-10-20"},{"lineNumber":59,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":60,"author":{"gitId":"Piyotato"},"content":"            validatePreamble(preamble);","lastModifiedDate":"2022-10-20"},{"lineNumber":61,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":62,"author":{"gitId":"Piyotato"},"content":"            if (preambleArgs[0].equalsIgnoreCase(ALL_INDEX)) {","lastModifiedDate":"2022-10-20"},{"lineNumber":63,"author":{"gitId":"Piyotato"},"content":"                return getIndexCommand(argMultimap, new AllIndexGenerator());","lastModifiedDate":"2022-10-20"},{"lineNumber":64,"author":{"gitId":"Piyotato"},"content":"            }","lastModifiedDate":"2022-10-20"},{"lineNumber":65,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":66,"author":{"gitId":"Piyotato"},"content":"            index \u003d ParserUtil.parseIndex(preambleArgs[0]);","lastModifiedDate":"2022-10-20"},{"lineNumber":67,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":68,"author":{"gitId":"Piyotato"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-20"},{"lineNumber":69,"author":{"gitId":"Piyotato"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, getUsageMessage()), pe);","lastModifiedDate":"2022-10-20"},{"lineNumber":70,"author":{"gitId":"Piyotato"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":71,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":72,"author":{"gitId":"Piyotato"},"content":"        return getIndexCommand(argMultimap, new SingleIndexGenerator(index));","lastModifiedDate":"2022-10-20"},{"lineNumber":73,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":74,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":75,"author":{"gitId":"Piyotato"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":76,"author":{"gitId":"Piyotato"},"content":"     * Produces a command promised by this interface. This is called in the `parse` method to generate the command","lastModifiedDate":"2022-10-20"},{"lineNumber":77,"author":{"gitId":"Piyotato"},"content":"     * after automatic tokenization.","lastModifiedDate":"2022-10-20"},{"lineNumber":78,"author":{"gitId":"Piyotato"},"content":"     *","lastModifiedDate":"2022-10-20"},{"lineNumber":79,"author":{"gitId":"Piyotato"},"content":"     * @param argMultimap        Argument multimap to process","lastModifiedDate":"2022-10-20"},{"lineNumber":80,"author":{"gitId":"Piyotato"},"content":"     * @param indexListGenerator students affected by this command, wrapped in a function to be used later.","lastModifiedDate":"2022-10-20"},{"lineNumber":81,"author":{"gitId":"Piyotato"},"content":"     * @throws ParseException if any errors arise when parsing this command.","lastModifiedDate":"2022-10-20"},{"lineNumber":82,"author":{"gitId":"Piyotato"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":83,"author":{"gitId":"Piyotato"},"content":"    T getIndexCommand(ArgumentMultimap argMultimap,","lastModifiedDate":"2022-10-20"},{"lineNumber":84,"author":{"gitId":"Piyotato"},"content":"                      IndexListGenerator indexListGenerator) throws ParseException;","lastModifiedDate":"2022-10-20"},{"lineNumber":85,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":86,"author":{"gitId":"Piyotato"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":87,"author":{"gitId":"Piyotato"},"content":"     * Validates a given preamble.","lastModifiedDate":"2022-10-20"},{"lineNumber":88,"author":{"gitId":"Piyotato"},"content":"     *","lastModifiedDate":"2022-10-20"},{"lineNumber":89,"author":{"gitId":"Piyotato"},"content":"     * @throws ParseException if preamble is invalid.","lastModifiedDate":"2022-10-20"},{"lineNumber":90,"author":{"gitId":"Piyotato"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":91,"author":{"gitId":"Piyotato"},"content":"    void validatePreamble(String preamble) throws ParseException;","lastModifiedDate":"2022-10-20"},{"lineNumber":92,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":93,"author":{"gitId":"Piyotato"},"content":"}","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"Piyotato":93}},{"path":"src/main/java/seedu/studmap/logic/parser/MarkCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.logic.parser;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"lpohsien"},"content":"import static seedu.studmap.logic.parser.CliSyntax.PREFIX_CLASS;","lastModifiedDate":"2022-10-23"},{"lineNumber":5,"author":{"gitId":"Piyotato"},"content":"import static seedu.studmap.logic.parser.ParserUtil.separatePreamble;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"Piyotato"},"content":"import seedu.studmap.commons.core.index.IndexListGenerator;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"Piyotato"},"content":"import seedu.studmap.logic.commands.EditStudentCommand;","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.logic.commands.MarkCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.student.Attendance;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"comicalromance"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"comicalromance"},"content":" * Parses input arguments and creates a new MarkCommand object","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"comicalromance"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"Piyotato"},"content":"public class MarkCommandParser extends EditStudentCommandParser\u003cMarkCommand.MarkCommandStudentEditor\u003e {","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"lpohsien"},"content":"    public static final String MESSAGE_INVALID_OPTION \u003d \"Option must either be \u0027present\u0027 or \u0027absent\u0027 for attendance\";","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"Piyotato"},"content":"    public static final String OPTION_PRESENT \u003d \"present\";","lastModifiedDate":"2022-11-06"},{"lineNumber":20,"author":{"gitId":"Piyotato"},"content":"    public static final String OPTION_ABSENT \u003d \"absent\";","lastModifiedDate":"2022-11-06"},{"lineNumber":21,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":22,"author":{"gitId":"Piyotato"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"Piyotato"},"content":"    public Prefix[] getPrefixes() {","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"lpohsien"},"content":"        return new Prefix[]{PREFIX_CLASS};","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"Piyotato"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"Piyotato"},"content":"    public String getUsageMessage() {","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"Piyotato"},"content":"        return MarkCommand.MESSAGE_USAGE;","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"comicalromance"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"comicalromance"},"content":"     * Parses the given {@code String} of arguments in the context of the MarkCommand","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"comicalromance"},"content":"     * and returns a MarkCommand object for execution.","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"Piyotato"},"content":"     *","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"comicalromance"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"comicalromance"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"Piyotato"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"Piyotato"},"content":"    public EditStudentCommand\u003cMarkCommand.MarkCommandStudentEditor\u003e getIndexCommand(","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"Piyotato"},"content":"            ArgumentMultimap argMultimap, IndexListGenerator indexListGenerator) throws ParseException {","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"comicalromance"},"content":"        String[] preamble \u003d separatePreamble(argMultimap.getPreamble());","lastModifiedDate":"2022-11-03"},{"lineNumber":43,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"lpohsien"},"content":"        MarkCommand.MarkCommandStudentEditor editor \u003d null;","lastModifiedDate":"2022-10-23"},{"lineNumber":45,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":46,"author":{"gitId":"Piyotato"},"content":"        Attendance.Status attended \u003d parseOption(preamble[1]);","lastModifiedDate":"2022-11-06"},{"lineNumber":47,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":48,"author":{"gitId":"comicalromance"},"content":"        if (argMultimap.getValue(PREFIX_CLASS).isEmpty()) {","lastModifiedDate":"2022-11-03"},{"lineNumber":49,"author":{"gitId":"comicalromance"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, getUsageMessage()));","lastModifiedDate":"2022-11-03"},{"lineNumber":50,"author":{"gitId":"comicalromance"},"content":"        }","lastModifiedDate":"2022-11-03"},{"lineNumber":51,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":52,"author":{"gitId":"comicalromance"},"content":"        String className \u003d ParserUtil.parseClassName(argMultimap.getValue(PREFIX_CLASS).orElse(\"\"));","lastModifiedDate":"2022-11-03"},{"lineNumber":53,"author":{"gitId":"comicalromance"},"content":"        Attendance attendance \u003d new Attendance(className, attended);","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"lpohsien"},"content":"        editor \u003d new MarkCommand.MarkCommandStudentEditor(attendance);","lastModifiedDate":"2022-10-23"},{"lineNumber":55,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":56,"author":{"gitId":"Piyotato"},"content":"        return new MarkCommand(indexListGenerator, editor);","lastModifiedDate":"2022-10-20"},{"lineNumber":57,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":58,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"Piyotato"},"content":"    private Attendance.Status parseOption(String option) throws ParseException {","lastModifiedDate":"2022-11-06"},{"lineNumber":61,"author":{"gitId":"Piyotato"},"content":"        switch (option) {","lastModifiedDate":"2022-11-06"},{"lineNumber":62,"author":{"gitId":"Piyotato"},"content":"        case OPTION_PRESENT:","lastModifiedDate":"2022-11-06"},{"lineNumber":63,"author":{"gitId":"Piyotato"},"content":"            return Attendance.Status.PRESENT;","lastModifiedDate":"2022-11-06"},{"lineNumber":64,"author":{"gitId":"Piyotato"},"content":"        case OPTION_ABSENT:","lastModifiedDate":"2022-11-06"},{"lineNumber":65,"author":{"gitId":"Piyotato"},"content":"            return Attendance.Status.ABSENT;","lastModifiedDate":"2022-11-06"},{"lineNumber":66,"author":{"gitId":"Piyotato"},"content":"        default:","lastModifiedDate":"2022-11-06"},{"lineNumber":67,"author":{"gitId":"comicalromance"},"content":"            throw new ParseException(MESSAGE_INVALID_OPTION);","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"comicalromance"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":71,"author":{"gitId":"Piyotato"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":72,"author":{"gitId":"Piyotato"},"content":"    public void validatePreamble(String preamble) throws ParseException {","lastModifiedDate":"2022-10-20"},{"lineNumber":73,"author":{"gitId":"Piyotato"},"content":"        if (separatePreamble(preamble).length !\u003d 2) {","lastModifiedDate":"2022-10-20"},{"lineNumber":74,"author":{"gitId":"Piyotato"},"content":"            throw new ParseException(MESSAGE_INVALID_COMMAND_FORMAT);","lastModifiedDate":"2022-10-20"},{"lineNumber":75,"author":{"gitId":"Piyotato"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":76,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":77,"author":{"gitId":"comicalromance"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"Piyotato":37,"comicalromance":33,"lpohsien":7}},{"path":"src/main/java/seedu/studmap/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.logic.parser;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.logic.commands.Command;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"-":13,"comicalromance":3}},{"path":"src/main/java/seedu/studmap/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.logic.parser;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"highorbit25"},"content":"import static seedu.studmap.model.order.Order.ORDER_ASC;","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"highorbit25"},"content":"import static seedu.studmap.model.order.Order.ORDER_DSC;","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.commons.core.index.Index;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.commons.util.StringUtil;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.order.Order;","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"lpohsien"},"content":"import seedu.studmap.model.student.Assignment;","lastModifiedDate":"2022-10-23"},{"lineNumber":16,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.student.Attendance;","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.student.Email;","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"dr-arrgghh"},"content":"import seedu.studmap.model.student.GitName;","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.student.Module;","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.student.Name;","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.student.Participation;","lastModifiedDate":"2022-10-28"},{"lineNumber":22,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.student.Phone;","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"dr-arrgghh"},"content":"import seedu.studmap.model.student.StudentID;","lastModifiedDate":"2022-10-25"},{"lineNumber":24,"author":{"gitId":"dr-arrgghh"},"content":"import seedu.studmap.model.student.TeleHandle;","lastModifiedDate":"2022-10-25"},{"lineNumber":25,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.tag.Tag;","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":33,"author":{"gitId":"Piyotato"},"content":"    public static final String RECEIVED \u003d \"Received: \";","lastModifiedDate":"2022-11-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"Piyotato"},"content":"    public static String getInvalidMessage(String invalidMessage, String receivedInput) {","lastModifiedDate":"2022-11-01"},{"lineNumber":36,"author":{"gitId":"Piyotato"},"content":"        return invalidMessage + \" \" + RECEIVED + receivedInput;","lastModifiedDate":"2022-11-01"},{"lineNumber":37,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":38,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":52,"author":{"gitId":"Piyotato"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"Piyotato"},"content":"     * Separates {@code preamble} into an array of strings for processing.","lastModifiedDate":"2022-10-20"},{"lineNumber":54,"author":{"gitId":"Piyotato"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":55,"author":{"gitId":"Piyotato"},"content":"    public static String[] separatePreamble(String preamble) {","lastModifiedDate":"2022-10-20"},{"lineNumber":56,"author":{"gitId":"Piyotato"},"content":"        return preamble.split(\"\\\\s+\");","lastModifiedDate":"2022-10-20"},{"lineNumber":57,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"Piyotato"},"content":"            throw new ParseException(getInvalidMessage(Name.MESSAGE_CONSTRAINTS, name));","lastModifiedDate":"2022-11-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"Piyotato"},"content":"            throw new ParseException(getInvalidMessage(Phone.MESSAGE_CONSTRAINTS, phone));","lastModifiedDate":"2022-11-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"Piyotato"},"content":"            throw new ParseException(getInvalidMessage(Email.MESSAGE_CONSTRAINTS, email));","lastModifiedDate":"2022-11-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"comicalromance"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":105,"author":{"gitId":"comicalromance"},"content":"     * Parses a {@code String module} into a {@code Module}.","lastModifiedDate":"2022-10-26"},{"lineNumber":106,"author":{"gitId":"comicalromance"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-26"},{"lineNumber":107,"author":{"gitId":"comicalromance"},"content":"     *","lastModifiedDate":"2022-10-26"},{"lineNumber":108,"author":{"gitId":"comicalromance"},"content":"     * @throws ParseException if the given {@code Module} is invalid.","lastModifiedDate":"2022-10-26"},{"lineNumber":109,"author":{"gitId":"comicalromance"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":110,"author":{"gitId":"comicalromance"},"content":"    public static Module parseModule(String module) throws ParseException {","lastModifiedDate":"2022-10-26"},{"lineNumber":111,"author":{"gitId":"comicalromance"},"content":"        requireNonNull(module);","lastModifiedDate":"2022-10-26"},{"lineNumber":112,"author":{"gitId":"Piyotato"},"content":"        String trimmedModule \u003d module.trim().toUpperCase();","lastModifiedDate":"2022-10-30"},{"lineNumber":113,"author":{"gitId":"comicalromance"},"content":"        if (!Module.isValidModule(trimmedModule)) {","lastModifiedDate":"2022-10-26"},{"lineNumber":114,"author":{"gitId":"Piyotato"},"content":"            throw new ParseException(getInvalidMessage(Module.MESSAGE_CONSTRAINTS, module));","lastModifiedDate":"2022-11-01"},{"lineNumber":115,"author":{"gitId":"comicalromance"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":116,"author":{"gitId":"comicalromance"},"content":"        return new Module(trimmedModule);","lastModifiedDate":"2022-10-26"},{"lineNumber":117,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":118,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":119,"author":{"gitId":"dr-arrgghh"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":120,"author":{"gitId":"dr-arrgghh"},"content":"     * Parses a {@code String StudentId} into an {@code StudentId}.","lastModifiedDate":"2022-10-26"},{"lineNumber":121,"author":{"gitId":"dr-arrgghh"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-26"},{"lineNumber":122,"author":{"gitId":"dr-arrgghh"},"content":"     *","lastModifiedDate":"2022-10-26"},{"lineNumber":123,"author":{"gitId":"dr-arrgghh"},"content":"     * @throws ParseException if the given {@code StudentId} is invalid.","lastModifiedDate":"2022-10-26"},{"lineNumber":124,"author":{"gitId":"dr-arrgghh"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":125,"author":{"gitId":"dr-arrgghh"},"content":"    public static StudentID parseId(String id) throws ParseException {","lastModifiedDate":"2022-10-25"},{"lineNumber":126,"author":{"gitId":"dr-arrgghh"},"content":"        requireNonNull(id);","lastModifiedDate":"2022-10-25"},{"lineNumber":127,"author":{"gitId":"dr-arrgghh"},"content":"        String trimmedId \u003d id.trim();","lastModifiedDate":"2022-10-25"},{"lineNumber":128,"author":{"gitId":"Piyotato"},"content":"        if (!StudentID.isValidStudentID(trimmedId)) {","lastModifiedDate":"2022-11-07"},{"lineNumber":129,"author":{"gitId":"Piyotato"},"content":"            throw new ParseException(getInvalidMessage(StudentID.MESSAGE_CONSTRAINTS, id));","lastModifiedDate":"2022-11-07"},{"lineNumber":130,"author":{"gitId":"Piyotato"},"content":"        }","lastModifiedDate":"2022-11-07"},{"lineNumber":131,"author":{"gitId":"dr-arrgghh"},"content":"        return new StudentID(trimmedId);","lastModifiedDate":"2022-10-25"},{"lineNumber":132,"author":{"gitId":"dr-arrgghh"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":133,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":134,"author":{"gitId":"dr-arrgghh"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":135,"author":{"gitId":"dr-arrgghh"},"content":"     * Parses a {@code String gitName} into an {@code GitName}.","lastModifiedDate":"2022-10-26"},{"lineNumber":136,"author":{"gitId":"dr-arrgghh"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-26"},{"lineNumber":137,"author":{"gitId":"dr-arrgghh"},"content":"     *","lastModifiedDate":"2022-10-26"},{"lineNumber":138,"author":{"gitId":"dr-arrgghh"},"content":"     * @throws ParseException if the given {@code gitName} is invalid.","lastModifiedDate":"2022-10-26"},{"lineNumber":139,"author":{"gitId":"dr-arrgghh"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":140,"author":{"gitId":"dr-arrgghh"},"content":"    public static GitName parseGitName(String gitName) throws ParseException {","lastModifiedDate":"2022-10-25"},{"lineNumber":141,"author":{"gitId":"dr-arrgghh"},"content":"        requireNonNull(gitName);","lastModifiedDate":"2022-10-25"},{"lineNumber":142,"author":{"gitId":"dr-arrgghh"},"content":"        String trimmedGit \u003d gitName.trim();","lastModifiedDate":"2022-10-25"},{"lineNumber":143,"author":{"gitId":"dr-arrgghh"},"content":"        if (!GitName.isValidGitName(trimmedGit)) {","lastModifiedDate":"2022-10-25"},{"lineNumber":144,"author":{"gitId":"Piyotato"},"content":"            throw new ParseException(getInvalidMessage(GitName.MESSAGE_CONSTRAINTS, gitName));","lastModifiedDate":"2022-11-01"},{"lineNumber":145,"author":{"gitId":"dr-arrgghh"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":146,"author":{"gitId":"dr-arrgghh"},"content":"        return new GitName(trimmedGit);","lastModifiedDate":"2022-10-25"},{"lineNumber":147,"author":{"gitId":"dr-arrgghh"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":148,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":149,"author":{"gitId":"dr-arrgghh"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":150,"author":{"gitId":"dr-arrgghh"},"content":"     * Parses a {@code String handle} into an {@code TeleHandle}.","lastModifiedDate":"2022-10-26"},{"lineNumber":151,"author":{"gitId":"dr-arrgghh"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-26"},{"lineNumber":152,"author":{"gitId":"dr-arrgghh"},"content":"     *","lastModifiedDate":"2022-10-26"},{"lineNumber":153,"author":{"gitId":"dr-arrgghh"},"content":"     * @throws ParseException if the given {@code handle} is invalid.","lastModifiedDate":"2022-10-26"},{"lineNumber":154,"author":{"gitId":"dr-arrgghh"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":155,"author":{"gitId":"dr-arrgghh"},"content":"    public static TeleHandle parseHandle(String handle) throws ParseException {","lastModifiedDate":"2022-10-25"},{"lineNumber":156,"author":{"gitId":"dr-arrgghh"},"content":"        requireNonNull(handle);","lastModifiedDate":"2022-10-25"},{"lineNumber":157,"author":{"gitId":"dr-arrgghh"},"content":"        String trimmedHandle \u003d handle.trim();","lastModifiedDate":"2022-10-25"},{"lineNumber":158,"author":{"gitId":"dr-arrgghh"},"content":"        if (!TeleHandle.isValidTeleHandle(trimmedHandle)) {","lastModifiedDate":"2022-10-25"},{"lineNumber":159,"author":{"gitId":"Piyotato"},"content":"            throw new ParseException(getInvalidMessage(TeleHandle.MESSAGE_CONSTRAINTS, handle));","lastModifiedDate":"2022-11-01"},{"lineNumber":160,"author":{"gitId":"dr-arrgghh"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":161,"author":{"gitId":"dr-arrgghh"},"content":"        return new TeleHandle(trimmedHandle);","lastModifiedDate":"2022-10-25"},{"lineNumber":162,"author":{"gitId":"dr-arrgghh"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":163,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"Piyotato"},"content":"            throw new ParseException(getInvalidMessage(Tag.MESSAGE_CONSTRAINTS, tag));","lastModifiedDate":"2022-11-01"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":190,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":191,"author":{"gitId":"comicalromance"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":192,"author":{"gitId":"comicalromance"},"content":"     * Parses a {@code String className} checking for any errors.","lastModifiedDate":"2022-10-09"},{"lineNumber":193,"author":{"gitId":"comicalromance"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-09"},{"lineNumber":194,"author":{"gitId":"comicalromance"},"content":"     *","lastModifiedDate":"2022-10-09"},{"lineNumber":195,"author":{"gitId":"comicalromance"},"content":"     * @throws ParseException if the given {@code className} is invalid.","lastModifiedDate":"2022-10-09"},{"lineNumber":196,"author":{"gitId":"comicalromance"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":197,"author":{"gitId":"comicalromance"},"content":"    public static String parseClassName(String className) throws ParseException {","lastModifiedDate":"2022-10-09"},{"lineNumber":198,"author":{"gitId":"comicalromance"},"content":"        requireNonNull(className);","lastModifiedDate":"2022-10-09"},{"lineNumber":199,"author":{"gitId":"comicalromance"},"content":"        String trimmedClass \u003d className.trim();","lastModifiedDate":"2022-10-09"},{"lineNumber":200,"author":{"gitId":"comicalromance"},"content":"        if (!Attendance.isValidClassName(trimmedClass)) {","lastModifiedDate":"2022-10-09"},{"lineNumber":201,"author":{"gitId":"Piyotato"},"content":"            throw new ParseException(getInvalidMessage(Attendance.MESSAGE_CONSTRAINTS, className));","lastModifiedDate":"2022-11-01"},{"lineNumber":202,"author":{"gitId":"comicalromance"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":203,"author":{"gitId":"comicalromance"},"content":"        return trimmedClass;","lastModifiedDate":"2022-10-09"},{"lineNumber":204,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":205,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":206,"author":{"gitId":"lpohsien"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":207,"author":{"gitId":"lpohsien"},"content":"     * Parses a {@code String assignmentName} checking for any errors.","lastModifiedDate":"2022-10-23"},{"lineNumber":208,"author":{"gitId":"lpohsien"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-23"},{"lineNumber":209,"author":{"gitId":"lpohsien"},"content":"     *","lastModifiedDate":"2022-10-23"},{"lineNumber":210,"author":{"gitId":"lpohsien"},"content":"     * @throws ParseException if the given {@code assignmentName} is invalid.","lastModifiedDate":"2022-10-23"},{"lineNumber":211,"author":{"gitId":"lpohsien"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":212,"author":{"gitId":"lpohsien"},"content":"    public static String parseAssignmentName(String assignmentName) throws ParseException {","lastModifiedDate":"2022-10-23"},{"lineNumber":213,"author":{"gitId":"lpohsien"},"content":"        requireNonNull(assignmentName);","lastModifiedDate":"2022-10-23"},{"lineNumber":214,"author":{"gitId":"comicalromance"},"content":"        String trimmedAssignment \u003d assignmentName.trim();","lastModifiedDate":"2022-11-07"},{"lineNumber":215,"author":{"gitId":"lpohsien"},"content":"        if (!Assignment.isValidAssignmentName(trimmedAssignment)) {","lastModifiedDate":"2022-10-23"},{"lineNumber":216,"author":{"gitId":"Piyotato"},"content":"            throw new ParseException(getInvalidMessage(Assignment.MESSAGE_CONSTRAINTS, assignmentName));","lastModifiedDate":"2022-11-01"},{"lineNumber":217,"author":{"gitId":"lpohsien"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":218,"author":{"gitId":"lpohsien"},"content":"        return trimmedAssignment;","lastModifiedDate":"2022-10-23"},{"lineNumber":219,"author":{"gitId":"lpohsien"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":220,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":221,"author":{"gitId":"highorbit25"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":222,"author":{"gitId":"highorbit25"},"content":"     * Parses a {@code String order} into a {@code Order}.","lastModifiedDate":"2022-10-13"},{"lineNumber":223,"author":{"gitId":"highorbit25"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-13"},{"lineNumber":224,"author":{"gitId":"highorbit25"},"content":"     *","lastModifiedDate":"2022-10-13"},{"lineNumber":225,"author":{"gitId":"highorbit25"},"content":"     * @throws ParseException if the given {@code order} is invalid.","lastModifiedDate":"2022-10-13"},{"lineNumber":226,"author":{"gitId":"highorbit25"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":227,"author":{"gitId":"highorbit25"},"content":"    public static Order parseOrder(String order) throws ParseException {","lastModifiedDate":"2022-10-13"},{"lineNumber":228,"author":{"gitId":"highorbit25"},"content":"        requireNonNull(order);","lastModifiedDate":"2022-10-13"},{"lineNumber":229,"author":{"gitId":"highorbit25"},"content":"        String trimmedOrder \u003d order.trim();","lastModifiedDate":"2022-10-13"},{"lineNumber":230,"author":{"gitId":"highorbit25"},"content":"        if (!Order.isValidOrderName(trimmedOrder)) {","lastModifiedDate":"2022-10-13"},{"lineNumber":231,"author":{"gitId":"Piyotato"},"content":"            throw new ParseException(getInvalidMessage(Order.MESSAGE_CONSTRAINTS, order));","lastModifiedDate":"2022-11-01"},{"lineNumber":232,"author":{"gitId":"highorbit25"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":233,"author":{"gitId":"highorbit25"},"content":"        return trimmedOrder.matches(\"asc\") ? ORDER_ASC : ORDER_DSC;","lastModifiedDate":"2022-10-21"},{"lineNumber":234,"author":{"gitId":"highorbit25"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":235,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":236,"author":{"gitId":"highorbit25"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":237,"author":{"gitId":"highorbit25"},"content":"     * Parses a {@code String participationComponent} checking for any errors.","lastModifiedDate":"2022-10-28"},{"lineNumber":238,"author":{"gitId":"highorbit25"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-28"},{"lineNumber":239,"author":{"gitId":"highorbit25"},"content":"     *","lastModifiedDate":"2022-10-28"},{"lineNumber":240,"author":{"gitId":"highorbit25"},"content":"     * @throws ParseException if the given {@code participationComponent} is invalid.","lastModifiedDate":"2022-10-28"},{"lineNumber":241,"author":{"gitId":"highorbit25"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":242,"author":{"gitId":"highorbit25"},"content":"    public static String parseParticipationComponent(String participationComponent) throws ParseException {","lastModifiedDate":"2022-10-28"},{"lineNumber":243,"author":{"gitId":"highorbit25"},"content":"        requireNonNull(participationComponent);","lastModifiedDate":"2022-10-28"},{"lineNumber":244,"author":{"gitId":"highorbit25"},"content":"        String trimmedPartCom \u003d participationComponent.trim();","lastModifiedDate":"2022-10-28"},{"lineNumber":245,"author":{"gitId":"comicalromance"},"content":"        if (!Participation.isValidParticipationName(trimmedPartCom)) {","lastModifiedDate":"2022-10-28"},{"lineNumber":246,"author":{"gitId":"Piyotato"},"content":"            throw new ParseException(getInvalidMessage(Participation.MESSAGE_CONSTRAINTS, participationComponent));","lastModifiedDate":"2022-11-01"},{"lineNumber":247,"author":{"gitId":"highorbit25"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":248,"author":{"gitId":"highorbit25"},"content":"        return trimmedPartCom;","lastModifiedDate":"2022-10-28"},{"lineNumber":249,"author":{"gitId":"highorbit25"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":250,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"highorbit25":29,"dr-arrgghh":43,"Piyotato":26,"-":97,"comicalromance":41,"lpohsien":14}},{"path":"src/main/java/seedu/studmap/logic/parser/ParticipateCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"highorbit25"},"content":"package seedu.studmap.logic.parser;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"highorbit25"},"content":"import static seedu.studmap.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"highorbit25"},"content":"import static seedu.studmap.logic.parser.CliSyntax.PREFIX_PARTICIPATION;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"highorbit25"},"content":"import static seedu.studmap.logic.parser.ParserUtil.separatePreamble;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"highorbit25"},"content":"import seedu.studmap.commons.core.index.IndexListGenerator;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"highorbit25"},"content":"import seedu.studmap.logic.commands.EditStudentCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"highorbit25"},"content":"import seedu.studmap.logic.commands.ParticipateCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"highorbit25"},"content":"import seedu.studmap.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"highorbit25"},"content":"import seedu.studmap.model.student.Participation;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"highorbit25"},"content":"/**","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"highorbit25"},"content":" * Parses input arguments and creates a new ParticipateCommand object","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"highorbit25"},"content":" */","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"highorbit25"},"content":"public class ParticipateCommandParser extends EditStudentCommandParser","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"highorbit25"},"content":"                                                      \u003cParticipateCommand.ParticipateCommandStudentEditor\u003e {","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"Piyotato"},"content":"    public static final String OPTION_PARTICIPATED \u003d \"yes\";","lastModifiedDate":"2022-11-06"},{"lineNumber":21,"author":{"gitId":"Piyotato"},"content":"    public static final String OPTION_NOT_PARTICIPATED \u003d \"no\";","lastModifiedDate":"2022-11-06"},{"lineNumber":22,"author":{"gitId":"Piyotato"},"content":"    public static final String MESSAGE_INVALID_OPTION \u003d","lastModifiedDate":"2022-11-06"},{"lineNumber":23,"author":{"gitId":"Piyotato"},"content":"            \"Option must either be \" + OPTION_PARTICIPATED + \" or \" + OPTION_NOT_PARTICIPATED + \" for participation\";","lastModifiedDate":"2022-11-06"},{"lineNumber":24,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"highorbit25"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"highorbit25"},"content":"    public Prefix[] getPrefixes() {","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"highorbit25"},"content":"        return new Prefix[]{PREFIX_PARTICIPATION};","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"highorbit25"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"highorbit25"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"highorbit25"},"content":"    public String getUsageMessage() {","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"highorbit25"},"content":"        return ParticipateCommand.MESSAGE_USAGE;","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"highorbit25"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":34,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"highorbit25"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":36,"author":{"gitId":"highorbit25"},"content":"     * Parses the given {@code String} of arguments in the context of the ParticipateCommand","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"highorbit25"},"content":"     * and returns a ParticipateCommand object for execution.","lastModifiedDate":"2022-10-27"},{"lineNumber":38,"author":{"gitId":"highorbit25"},"content":"     *","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"highorbit25"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"highorbit25"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":41,"author":{"gitId":"highorbit25"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":42,"author":{"gitId":"highorbit25"},"content":"    public EditStudentCommand\u003cParticipateCommand.ParticipateCommandStudentEditor\u003e getIndexCommand(","lastModifiedDate":"2022-10-27"},{"lineNumber":43,"author":{"gitId":"highorbit25"},"content":"            ArgumentMultimap argMultimap, IndexListGenerator indexListGenerator) throws ParseException {","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"comicalromance"},"content":"        String[] preamble \u003d separatePreamble(argMultimap.getPreamble());","lastModifiedDate":"2022-11-03"},{"lineNumber":46,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":47,"author":{"gitId":"highorbit25"},"content":"        ParticipateCommand.ParticipateCommandStudentEditor editor \u003d null;","lastModifiedDate":"2022-10-27"},{"lineNumber":48,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":49,"author":{"gitId":"Piyotato"},"content":"        Participation.Status participated \u003d parseOption(preamble[1]);","lastModifiedDate":"2022-11-06"},{"lineNumber":50,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":51,"author":{"gitId":"comicalromance"},"content":"        if (argMultimap.getValue(PREFIX_PARTICIPATION).isEmpty()) {","lastModifiedDate":"2022-11-03"},{"lineNumber":52,"author":{"gitId":"comicalromance"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, getUsageMessage()));","lastModifiedDate":"2022-11-03"},{"lineNumber":53,"author":{"gitId":"comicalromance"},"content":"        }","lastModifiedDate":"2022-11-03"},{"lineNumber":54,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":55,"author":{"gitId":"highorbit25"},"content":"        String participationComponent \u003d ParserUtil","lastModifiedDate":"2022-10-28"},{"lineNumber":56,"author":{"gitId":"highorbit25"},"content":"                .parseParticipationComponent(argMultimap.getValue(PREFIX_PARTICIPATION).orElse(\"\"));","lastModifiedDate":"2022-10-28"},{"lineNumber":57,"author":{"gitId":"highorbit25"},"content":"        Participation participation \u003d new Participation(participationComponent, participated);","lastModifiedDate":"2022-10-27"},{"lineNumber":58,"author":{"gitId":"highorbit25"},"content":"        editor \u003d new ParticipateCommand.ParticipateCommandStudentEditor(participation);","lastModifiedDate":"2022-10-27"},{"lineNumber":59,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":60,"author":{"gitId":"highorbit25"},"content":"        return new ParticipateCommand(indexListGenerator, editor);","lastModifiedDate":"2022-10-27"},{"lineNumber":61,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":62,"author":{"gitId":"highorbit25"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":63,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":64,"author":{"gitId":"Piyotato"},"content":"    private Participation.Status parseOption(String option) throws ParseException {","lastModifiedDate":"2022-11-06"},{"lineNumber":65,"author":{"gitId":"Piyotato"},"content":"        switch (option) {","lastModifiedDate":"2022-11-06"},{"lineNumber":66,"author":{"gitId":"Piyotato"},"content":"        case OPTION_PARTICIPATED:","lastModifiedDate":"2022-11-06"},{"lineNumber":67,"author":{"gitId":"Piyotato"},"content":"            return Participation.Status.PARTICIPATED;","lastModifiedDate":"2022-11-06"},{"lineNumber":68,"author":{"gitId":"Piyotato"},"content":"        case OPTION_NOT_PARTICIPATED:","lastModifiedDate":"2022-11-06"},{"lineNumber":69,"author":{"gitId":"Piyotato"},"content":"            return Participation.Status.NOT_PARTICIPATED;","lastModifiedDate":"2022-11-06"},{"lineNumber":70,"author":{"gitId":"Piyotato"},"content":"        default:","lastModifiedDate":"2022-11-06"},{"lineNumber":71,"author":{"gitId":"highorbit25"},"content":"            throw new ParseException(MESSAGE_INVALID_OPTION);","lastModifiedDate":"2022-10-27"},{"lineNumber":72,"author":{"gitId":"highorbit25"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":73,"author":{"gitId":"highorbit25"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":74,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":75,"author":{"gitId":"highorbit25"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":76,"author":{"gitId":"highorbit25"},"content":"    public void validatePreamble(String preamble) throws ParseException {","lastModifiedDate":"2022-10-27"},{"lineNumber":77,"author":{"gitId":"highorbit25"},"content":"        if (separatePreamble(preamble).length !\u003d 2) {","lastModifiedDate":"2022-10-27"},{"lineNumber":78,"author":{"gitId":"highorbit25"},"content":"            throw new ParseException(MESSAGE_INVALID_COMMAND_FORMAT);","lastModifiedDate":"2022-10-27"},{"lineNumber":79,"author":{"gitId":"highorbit25"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":80,"author":{"gitId":"highorbit25"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":81,"author":{"gitId":"highorbit25"},"content":"}","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"highorbit25":63,"Piyotato":12,"comicalromance":6}},{"path":"src/main/java/seedu/studmap/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.logic.parser;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Prefix)) {","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) obj;","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return otherPrefix.getPrefix().equals(getPrefix());","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"-":38,"comicalromance":1}},{"path":"src/main/java/seedu/studmap/logic/parser/SortCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.logic.parser;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"highorbit25"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.parser.CliSyntax.PREFIX_ATTRIBUTE;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"highorbit25"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.logic.commands.SortCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.attribute.Attribute;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"highorbit25"},"content":"import seedu.studmap.model.attribute.AttributeType;","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.order.Order;","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"highorbit25"},"content":"import seedu.studmap.model.student.Student;","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"highorbit25"},"content":"/**","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"highorbit25"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"highorbit25"},"content":" */","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"highorbit25"},"content":"public class SortCommandParser implements Parser\u003cSortCommand\u003e {","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"highorbit25"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"highorbit25"},"content":"     * Parses the given {@code String} of arguments in the context of the SortCommand","lastModifiedDate":"2022-10-23"},{"lineNumber":23,"author":{"gitId":"highorbit25"},"content":"     * and returns an SortCommand object for execution.","lastModifiedDate":"2022-10-23"},{"lineNumber":24,"author":{"gitId":"highorbit25"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"highorbit25"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"highorbit25"},"content":"    public SortCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"highorbit25"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"highorbit25"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"highorbit25"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_ATTRIBUTE);","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"highorbit25"},"content":"        Order order;","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"highorbit25"},"content":"        Comparator\u003cStudent\u003e comparator;","lastModifiedDate":"2022-10-21"},{"lineNumber":33,"author":{"gitId":"highorbit25"},"content":"        String attributeType;","lastModifiedDate":"2022-10-21"},{"lineNumber":34,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"highorbit25"},"content":"        try {","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"highorbit25"},"content":"            requireNonNull(argMultimap.getPreamble());","lastModifiedDate":"2022-10-21"},{"lineNumber":37,"author":{"gitId":"highorbit25"},"content":"            order \u003d ParserUtil.parseOrder(argMultimap.getPreamble());","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"highorbit25"},"content":"            requireNonNull(PREFIX_ATTRIBUTE);","lastModifiedDate":"2022-10-21"},{"lineNumber":39,"author":{"gitId":"highorbit25"},"content":"            if (argMultimap.getValue(PREFIX_ATTRIBUTE).isPresent()) {","lastModifiedDate":"2022-10-21"},{"lineNumber":40,"author":{"gitId":"highorbit25"},"content":"                attributeType \u003d argMultimap.getValue(PREFIX_ATTRIBUTE).get();","lastModifiedDate":"2022-10-21"},{"lineNumber":41,"author":{"gitId":"highorbit25"},"content":"            } else {","lastModifiedDate":"2022-10-21"},{"lineNumber":42,"author":{"gitId":"highorbit25"},"content":"                throw new ParseException(\"Caused by: No attribute specified\\n\");","lastModifiedDate":"2022-10-21"},{"lineNumber":43,"author":{"gitId":"highorbit25"},"content":"            }","lastModifiedDate":"2022-10-21"},{"lineNumber":44,"author":{"gitId":"highorbit25"},"content":"            if (Attribute.isValidAttributeType(attributeType)) {","lastModifiedDate":"2022-10-21"},{"lineNumber":45,"author":{"gitId":"highorbit25"},"content":"                AttributeType attributeTypeEnum \u003d AttributeType.valueOf(attributeType.toUpperCase());","lastModifiedDate":"2022-10-23"},{"lineNumber":46,"author":{"gitId":"highorbit25"},"content":"                comparator \u003d Attribute.getAttributeComparator(attributeTypeEnum, order);","lastModifiedDate":"2022-11-03"},{"lineNumber":47,"author":{"gitId":"highorbit25"},"content":"            } else {","lastModifiedDate":"2022-10-21"},{"lineNumber":48,"author":{"gitId":"highorbit25"},"content":"                throw new ParseException(\"Caused by: Invalid attribute\\n\");","lastModifiedDate":"2022-10-21"},{"lineNumber":49,"author":{"gitId":"highorbit25"},"content":"            }","lastModifiedDate":"2022-10-21"},{"lineNumber":50,"author":{"gitId":"highorbit25"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"highorbit25"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-21"},{"lineNumber":52,"author":{"gitId":"highorbit25"},"content":"                    pe.getMessage() + SortCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-21"},{"lineNumber":53,"author":{"gitId":"highorbit25"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"highorbit25"},"content":"        return new SortCommand(comparator, attributeType, order);","lastModifiedDate":"2022-10-21"},{"lineNumber":55,"author":{"gitId":"highorbit25"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"highorbit25"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"highorbit25":50,"comicalromance":7}},{"path":"src/main/java/seedu/studmap/logic/parser/StudMapParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.logic.parser;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"highorbit25"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"highorbit25"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.logic.commands.AddCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.logic.commands.ClearCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.logic.commands.Command;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.logic.commands.DeleteCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.logic.commands.EditCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.logic.commands.ExitCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.logic.commands.FilterCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.logic.commands.FindCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"lpohsien"},"content":"import seedu.studmap.logic.commands.GradeCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.logic.commands.HelpCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.logic.commands.ImportCommand;","lastModifiedDate":"2022-10-28"},{"lineNumber":20,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.logic.commands.ListCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.logic.commands.MarkCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"highorbit25"},"content":"import seedu.studmap.logic.commands.ParticipateCommand;","lastModifiedDate":"2022-10-28"},{"lineNumber":23,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.logic.commands.SortCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":24,"author":{"gitId":"lpohsien"},"content":"import seedu.studmap.logic.commands.TagCommand;","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"lpohsien"},"content":"import seedu.studmap.logic.commands.UngradeCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.logic.commands.UnmarkCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"highorbit25"},"content":"import seedu.studmap.logic.commands.UnparticipateCommand;","lastModifiedDate":"2022-10-28"},{"lineNumber":28,"author":{"gitId":"lpohsien"},"content":"import seedu.studmap.logic.commands.UntagCommand;","lastModifiedDate":"2022-10-28"},{"lineNumber":29,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-15"},{"lineNumber":30,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"comicalromance"},"content":"public class StudMapParser {","lastModifiedDate":"2022-10-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"comicalromance"},"content":"        case ImportCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-28"},{"lineNumber":80,"author":{"gitId":"comicalromance"},"content":"            return new ImportCommand();","lastModifiedDate":"2022-10-28"},{"lineNumber":81,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":82,"author":{"gitId":"lpohsien"},"content":"        case TagCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-28"},{"lineNumber":83,"author":{"gitId":"lpohsien"},"content":"            return new TagCommandParser().parse(arguments);","lastModifiedDate":"2022-10-28"},{"lineNumber":84,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":85,"author":{"gitId":"lpohsien"},"content":"        case UntagCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-28"},{"lineNumber":86,"author":{"gitId":"lpohsien"},"content":"            return new UntagCommandParser().parse(arguments);","lastModifiedDate":"2022-10-28"},{"lineNumber":87,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":91,"author":{"gitId":"comicalromance"},"content":"        case MarkCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-09"},{"lineNumber":92,"author":{"gitId":"comicalromance"},"content":"            return new MarkCommandParser().parse(arguments);","lastModifiedDate":"2022-10-09"},{"lineNumber":93,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":94,"author":{"gitId":"comicalromance"},"content":"        case UnmarkCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-10"},{"lineNumber":95,"author":{"gitId":"comicalromance"},"content":"            return new UnmarkCommandParser().parse(arguments);","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"dr-arrgghh"},"content":"        case FilterCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-05"},{"lineNumber":98,"author":{"gitId":"dr-arrgghh"},"content":"            return new FilterCommandParser().parse(arguments);","lastModifiedDate":"2022-10-05"},{"lineNumber":99,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":100,"author":{"gitId":"highorbit25"},"content":"        case SortCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-09"},{"lineNumber":101,"author":{"gitId":"highorbit25"},"content":"            return new SortCommandParser().parse(arguments);","lastModifiedDate":"2022-10-13"},{"lineNumber":102,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":103,"author":{"gitId":"lpohsien"},"content":"        case GradeCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-27"},{"lineNumber":104,"author":{"gitId":"lpohsien"},"content":"            return new GradeCommandParser().parse(arguments);","lastModifiedDate":"2022-10-27"},{"lineNumber":105,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":106,"author":{"gitId":"lpohsien"},"content":"        case UngradeCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-27"},{"lineNumber":107,"author":{"gitId":"lpohsien"},"content":"            return new UngradeCommandParser().parse(arguments);","lastModifiedDate":"2022-10-27"},{"lineNumber":108,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":109,"author":{"gitId":"highorbit25"},"content":"        case ParticipateCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-27"},{"lineNumber":110,"author":{"gitId":"highorbit25"},"content":"            return new ParticipateCommandParser().parse(arguments);","lastModifiedDate":"2022-10-27"},{"lineNumber":111,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":112,"author":{"gitId":"highorbit25"},"content":"        case UnparticipateCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-28"},{"lineNumber":113,"author":{"gitId":"highorbit25"},"content":"            return new UnparticipateCommandParser().parse(arguments);","lastModifiedDate":"2022-10-28"},{"lineNumber":114,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"highorbit25":15,"dr-arrgghh":3,"-":58,"comicalromance":28,"lpohsien":16}},{"path":"src/main/java/seedu/studmap/logic/parser/TagCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.logic.parser;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":3,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":5,"author":{"gitId":"lpohsien"},"content":"import java.util.Collection;","lastModifiedDate":"2022-10-08"},{"lineNumber":6,"author":{"gitId":"lpohsien"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-08"},{"lineNumber":7,"author":{"gitId":"lpohsien"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-08"},{"lineNumber":8,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":9,"author":{"gitId":"Piyotato"},"content":"import seedu.studmap.commons.core.index.IndexListGenerator;","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"Piyotato"},"content":"import seedu.studmap.logic.commands.EditStudentCommand;","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"lpohsien"},"content":"import seedu.studmap.logic.commands.TagCommand;","lastModifiedDate":"2022-10-28"},{"lineNumber":12,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.tag.Tag;","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":15,"author":{"gitId":"lpohsien"},"content":"/**","lastModifiedDate":"2022-10-08"},{"lineNumber":16,"author":{"gitId":"lpohsien"},"content":" * Parses input arguments and creates a new TagCommand object","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"lpohsien"},"content":" */","lastModifiedDate":"2022-10-08"},{"lineNumber":18,"author":{"gitId":"lpohsien"},"content":"public class TagCommandParser extends EditStudentCommandParser\u003cTagCommand.TagCommandStudentEditor\u003e {","lastModifiedDate":"2022-10-28"},{"lineNumber":19,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":20,"author":{"gitId":"lpohsien"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":21,"author":{"gitId":"lpohsien"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2022-10-08"},{"lineNumber":22,"author":{"gitId":"lpohsien"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2022-10-08"},{"lineNumber":23,"author":{"gitId":"lpohsien"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2022-10-08"},{"lineNumber":24,"author":{"gitId":"lpohsien"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":25,"author":{"gitId":"lpohsien"},"content":"    private Set\u003cTag\u003e parseTagsSet(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2022-10-08"},{"lineNumber":26,"author":{"gitId":"lpohsien"},"content":"        assert tags !\u003d null \u0026\u0026 !tags.isEmpty();","lastModifiedDate":"2022-10-08"},{"lineNumber":27,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":28,"author":{"gitId":"lpohsien"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2022-10-08"},{"lineNumber":29,"author":{"gitId":"lpohsien"},"content":"        return ParserUtil.parseTags(tagSet);","lastModifiedDate":"2022-10-08"},{"lineNumber":30,"author":{"gitId":"lpohsien"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":31,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"Piyotato"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"Piyotato"},"content":"    public Prefix[] getPrefixes() {","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"Piyotato"},"content":"        return new Prefix[]{PREFIX_TAG};","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"Piyotato"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"Piyotato"},"content":"    public String getUsageMessage() {","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"lpohsien"},"content":"        return TagCommand.MESSAGE_USAGE;","lastModifiedDate":"2022-10-28"},{"lineNumber":40,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"Piyotato"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"lpohsien"},"content":"    public EditStudentCommand\u003cTagCommand.TagCommandStudentEditor\u003e getIndexCommand(","lastModifiedDate":"2022-10-28"},{"lineNumber":44,"author":{"gitId":"Piyotato"},"content":"            ArgumentMultimap argMultimap, IndexListGenerator indexListGenerator)","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"Piyotato"},"content":"            throws ParseException {","lastModifiedDate":"2022-10-20"},{"lineNumber":46,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":47,"author":{"gitId":"Piyotato"},"content":"        Set\u003cTag\u003e tags;","lastModifiedDate":"2022-10-20"},{"lineNumber":48,"author":{"gitId":"Piyotato"},"content":"        tags \u003d parseTagsSet(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2022-10-20"},{"lineNumber":49,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":50,"author":{"gitId":"lpohsien"},"content":"        TagCommand.TagCommandStudentEditor editor \u003d new TagCommand.TagCommandStudentEditor();","lastModifiedDate":"2022-10-28"},{"lineNumber":51,"author":{"gitId":"Piyotato"},"content":"        editor.setTags(tags);","lastModifiedDate":"2022-10-20"},{"lineNumber":52,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"lpohsien"},"content":"        return new TagCommand(indexListGenerator, editor);","lastModifiedDate":"2022-10-28"},{"lineNumber":54,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":55,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":56,"author":{"gitId":"lpohsien"},"content":"}","lastModifiedDate":"2022-10-08"}],"authorContributionMap":{"Piyotato":23,"comicalromance":4,"lpohsien":29}},{"path":"src/main/java/seedu/studmap/logic/parser/UngradeCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lpohsien"},"content":"package seedu.studmap.logic.parser;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"lpohsien"},"content":"import static seedu.studmap.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"lpohsien"},"content":"import static seedu.studmap.logic.parser.CliSyntax.PREFIX_ASSIGNMENT;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"lpohsien"},"content":"import seedu.studmap.commons.core.index.IndexListGenerator;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"lpohsien"},"content":"import seedu.studmap.logic.commands.EditStudentCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"lpohsien"},"content":"import seedu.studmap.logic.commands.UngradeCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"lpohsien"},"content":"import seedu.studmap.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"lpohsien"},"content":"import seedu.studmap.model.student.Assignment;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"lpohsien"},"content":"/**","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"lpohsien"},"content":" * Parses input arguments and creates a new UngradeCommand object","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"lpohsien"},"content":" */","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"lpohsien"},"content":"public class UngradeCommandParser extends EditStudentCommandParser\u003cUngradeCommand.UngradeCommandStudentEditor\u003e {","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"lpohsien"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"lpohsien"},"content":"     * Parses the given {@code String} of arguments in the context of the UngradeCommand","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"lpohsien"},"content":"     * and returns an UngradeCommand object for execution.","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"lpohsien"},"content":"     *","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"lpohsien"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"lpohsien"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"lpohsien"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"lpohsien"},"content":"    public EditStudentCommand\u003cUngradeCommand.UngradeCommandStudentEditor\u003e getIndexCommand(","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"lpohsien"},"content":"        ArgumentMultimap argMultimap, IndexListGenerator indexListGenerator) throws ParseException {","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"lpohsien"},"content":"        String[] preamble \u003d argMultimap.getPreamble().split(\"\\\\s+\");","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"lpohsien"},"content":"        if (preamble.length !\u003d 1) {","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"lpohsien"},"content":"            throw new ParseException(MESSAGE_INVALID_COMMAND_FORMAT);","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"lpohsien"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"lpohsien"},"content":"        String assignmentName \u003d ParserUtil.parseAssignmentName(","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"lpohsien"},"content":"                argMultimap.getValue(PREFIX_ASSIGNMENT).orElse(\"\"));","lastModifiedDate":"2022-10-27"},{"lineNumber":34,"author":{"gitId":"lpohsien"},"content":"        Assignment assignment \u003d new Assignment(assignmentName, Assignment.Status.NEW);","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"lpohsien"},"content":"        UngradeCommand.UngradeCommandStudentEditor editor \u003d","lastModifiedDate":"2022-10-27"},{"lineNumber":36,"author":{"gitId":"lpohsien"},"content":"                new UngradeCommand.UngradeCommandStudentEditor(assignment);","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":38,"author":{"gitId":"lpohsien"},"content":"        return new UngradeCommand(indexListGenerator, editor);","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"lpohsien"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":41,"author":{"gitId":"lpohsien"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":42,"author":{"gitId":"lpohsien"},"content":"    public Prefix[] getPrefixes() {","lastModifiedDate":"2022-10-27"},{"lineNumber":43,"author":{"gitId":"lpohsien"},"content":"        return new Prefix[]{PREFIX_ASSIGNMENT};","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"lpohsien"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":46,"author":{"gitId":"lpohsien"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":47,"author":{"gitId":"lpohsien"},"content":"    public String getUsageMessage() {","lastModifiedDate":"2022-10-27"},{"lineNumber":48,"author":{"gitId":"lpohsien"},"content":"        return UngradeCommand.MESSAGE_USAGE;","lastModifiedDate":"2022-10-27"},{"lineNumber":49,"author":{"gitId":"lpohsien"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":50,"author":{"gitId":"lpohsien"},"content":"}","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"lpohsien":50}},{"path":"src/main/java/seedu/studmap/logic/parser/UnmarkCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.logic.parser;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.parser.CliSyntax.PREFIX_CLASS;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"lpohsien"},"content":"import seedu.studmap.commons.core.index.IndexListGenerator;","lastModifiedDate":"2022-10-24"},{"lineNumber":7,"author":{"gitId":"lpohsien"},"content":"import seedu.studmap.logic.commands.EditStudentCommand;","lastModifiedDate":"2022-10-24"},{"lineNumber":8,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.logic.commands.UnmarkCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.student.Attendance;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"comicalromance"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"comicalromance"},"content":" * Parses input arguments and creates a new UnmarkCommand object","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"comicalromance"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"lpohsien"},"content":"public class UnmarkCommandParser extends EditStudentCommandParser\u003cUnmarkCommand.UnmarkCommandStudentEditor\u003e {","lastModifiedDate":"2022-10-24"},{"lineNumber":16,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":17,"author":{"gitId":"lpohsien"},"content":"    public static final String MESSAGE_INVALID_DOUBLE_MARK \u003d","lastModifiedDate":"2022-10-24"},{"lineNumber":18,"author":{"gitId":"lpohsien"},"content":"            \"Only the attendance or assignment can be unmarked in a single command\";","lastModifiedDate":"2022-10-24"},{"lineNumber":19,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"comicalromance"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"comicalromance"},"content":"     * Parses the given {@code String} of arguments in the context of the UnmarkCommand","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"comicalromance"},"content":"     * and returns an UnmarkCommand object for execution.","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"lpohsien"},"content":"     *","lastModifiedDate":"2022-10-24"},{"lineNumber":24,"author":{"gitId":"comicalromance"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"comicalromance"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"lpohsien"},"content":"    @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":27,"author":{"gitId":"lpohsien"},"content":"    public EditStudentCommand\u003cUnmarkCommand.UnmarkCommandStudentEditor\u003e getIndexCommand(","lastModifiedDate":"2022-10-24"},{"lineNumber":28,"author":{"gitId":"lpohsien"},"content":"        ArgumentMultimap argMultimap, IndexListGenerator indexListGenerator) throws ParseException {","lastModifiedDate":"2022-10-24"},{"lineNumber":29,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":30,"author":{"gitId":"lpohsien"},"content":"        String[] preamble \u003d argMultimap.getPreamble().split(\"\\\\s+\");","lastModifiedDate":"2022-10-24"},{"lineNumber":31,"author":{"gitId":"lpohsien"},"content":"        if (preamble.length !\u003d 1) {","lastModifiedDate":"2022-10-24"},{"lineNumber":32,"author":{"gitId":"lpohsien"},"content":"            throw new ParseException(MESSAGE_INVALID_COMMAND_FORMAT);","lastModifiedDate":"2022-10-24"},{"lineNumber":33,"author":{"gitId":"lpohsien"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":34,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":35,"author":{"gitId":"lpohsien"},"content":"        UnmarkCommand.UnmarkCommandStudentEditor editor \u003d null;","lastModifiedDate":"2022-10-24"},{"lineNumber":36,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":37,"author":{"gitId":"lpohsien"},"content":"        String className \u003d ParserUtil.parseClassName(argMultimap.getValue(PREFIX_CLASS).orElse(\"\"));","lastModifiedDate":"2022-10-24"},{"lineNumber":38,"author":{"gitId":"Piyotato"},"content":"        Attendance attendance \u003d new Attendance(className, Attendance.Status.PRESENT);","lastModifiedDate":"2022-11-06"},{"lineNumber":39,"author":{"gitId":"lpohsien"},"content":"        editor \u003d new UnmarkCommand.UnmarkCommandStudentEditor(attendance);","lastModifiedDate":"2022-10-24"},{"lineNumber":40,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":41,"author":{"gitId":"lpohsien"},"content":"        return new UnmarkCommand(indexListGenerator, editor);","lastModifiedDate":"2022-10-24"},{"lineNumber":42,"author":{"gitId":"lpohsien"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":43,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":44,"author":{"gitId":"lpohsien"},"content":"    @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":45,"author":{"gitId":"lpohsien"},"content":"    public Prefix[] getPrefixes() {","lastModifiedDate":"2022-10-24"},{"lineNumber":46,"author":{"gitId":"lpohsien"},"content":"        return new Prefix[]{PREFIX_CLASS};","lastModifiedDate":"2022-10-27"},{"lineNumber":47,"author":{"gitId":"lpohsien"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":48,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":49,"author":{"gitId":"lpohsien"},"content":"    @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":50,"author":{"gitId":"lpohsien"},"content":"    public String getUsageMessage() {","lastModifiedDate":"2022-10-24"},{"lineNumber":51,"author":{"gitId":"lpohsien"},"content":"        return UnmarkCommand.MESSAGE_USAGE;","lastModifiedDate":"2022-10-24"},{"lineNumber":52,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"comicalromance"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"Piyotato":1,"comicalromance":20,"lpohsien":32}},{"path":"src/main/java/seedu/studmap/logic/parser/UnparticipateCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"highorbit25"},"content":"package seedu.studmap.logic.parser;","lastModifiedDate":"2022-10-28"},{"lineNumber":2,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":3,"author":{"gitId":"highorbit25"},"content":"import static seedu.studmap.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-28"},{"lineNumber":4,"author":{"gitId":"highorbit25"},"content":"import static seedu.studmap.logic.parser.CliSyntax.PREFIX_PARTICIPATION;","lastModifiedDate":"2022-10-28"},{"lineNumber":5,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":6,"author":{"gitId":"highorbit25"},"content":"import seedu.studmap.commons.core.index.IndexListGenerator;","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"highorbit25"},"content":"import seedu.studmap.logic.commands.EditStudentCommand;","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"highorbit25"},"content":"import seedu.studmap.logic.commands.UnparticipateCommand;","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"highorbit25"},"content":"import seedu.studmap.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-28"},{"lineNumber":10,"author":{"gitId":"highorbit25"},"content":"import seedu.studmap.model.student.Participation;","lastModifiedDate":"2022-10-28"},{"lineNumber":11,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":12,"author":{"gitId":"highorbit25"},"content":"/**","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"highorbit25"},"content":" * Parses input arguments and creates a new UnparticipateCommand object","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"highorbit25"},"content":" */","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"highorbit25"},"content":"public class UnparticipateCommandParser extends EditStudentCommandParser\u003cUnparticipateCommand","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"highorbit25"},"content":"        .UnparticipateCommandStudentEditor\u003e {","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":18,"author":{"gitId":"highorbit25"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":19,"author":{"gitId":"highorbit25"},"content":"     * Parses the given {@code String} of arguments in the context of the UnparticipateCommand","lastModifiedDate":"2022-10-28"},{"lineNumber":20,"author":{"gitId":"highorbit25"},"content":"     * and returns an UnparticipateCommand object for execution.","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"highorbit25"},"content":"     *","lastModifiedDate":"2022-10-28"},{"lineNumber":22,"author":{"gitId":"highorbit25"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-28"},{"lineNumber":23,"author":{"gitId":"highorbit25"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":24,"author":{"gitId":"highorbit25"},"content":"    @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"highorbit25"},"content":"    public EditStudentCommand\u003cUnparticipateCommand.UnparticipateCommandStudentEditor\u003e getIndexCommand(","lastModifiedDate":"2022-10-28"},{"lineNumber":26,"author":{"gitId":"highorbit25"},"content":"            ArgumentMultimap argMultimap, IndexListGenerator indexListGenerator) throws ParseException {","lastModifiedDate":"2022-10-28"},{"lineNumber":27,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":28,"author":{"gitId":"highorbit25"},"content":"        String[] preamble \u003d argMultimap.getPreamble().split(\"\\\\s+\");","lastModifiedDate":"2022-10-28"},{"lineNumber":29,"author":{"gitId":"highorbit25"},"content":"        if (preamble.length !\u003d 1) {","lastModifiedDate":"2022-10-28"},{"lineNumber":30,"author":{"gitId":"highorbit25"},"content":"            throw new ParseException(MESSAGE_INVALID_COMMAND_FORMAT);","lastModifiedDate":"2022-10-28"},{"lineNumber":31,"author":{"gitId":"highorbit25"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":32,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":33,"author":{"gitId":"highorbit25"},"content":"        UnparticipateCommand.UnparticipateCommandStudentEditor editor \u003d null;","lastModifiedDate":"2022-10-28"},{"lineNumber":34,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":35,"author":{"gitId":"highorbit25"},"content":"        String participationComponent \u003d ParserUtil","lastModifiedDate":"2022-10-28"},{"lineNumber":36,"author":{"gitId":"highorbit25"},"content":"                .parseParticipationComponent(argMultimap.getValue(PREFIX_PARTICIPATION).orElse(\"\"));","lastModifiedDate":"2022-10-28"},{"lineNumber":37,"author":{"gitId":"Piyotato"},"content":"        Participation participation \u003d new Participation(participationComponent, Participation.Status.PARTICIPATED);","lastModifiedDate":"2022-11-06"},{"lineNumber":38,"author":{"gitId":"highorbit25"},"content":"        editor \u003d new UnparticipateCommand.UnparticipateCommandStudentEditor(participation);","lastModifiedDate":"2022-10-28"},{"lineNumber":39,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":40,"author":{"gitId":"highorbit25"},"content":"        return new UnparticipateCommand(indexListGenerator, editor);","lastModifiedDate":"2022-10-28"},{"lineNumber":41,"author":{"gitId":"highorbit25"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":42,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":43,"author":{"gitId":"highorbit25"},"content":"    @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":44,"author":{"gitId":"highorbit25"},"content":"    public Prefix[] getPrefixes() {","lastModifiedDate":"2022-10-28"},{"lineNumber":45,"author":{"gitId":"highorbit25"},"content":"        return new Prefix[]{PREFIX_PARTICIPATION};","lastModifiedDate":"2022-10-28"},{"lineNumber":46,"author":{"gitId":"highorbit25"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":47,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":48,"author":{"gitId":"highorbit25"},"content":"    @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":49,"author":{"gitId":"highorbit25"},"content":"    public String getUsageMessage() {","lastModifiedDate":"2022-10-28"},{"lineNumber":50,"author":{"gitId":"highorbit25"},"content":"        return UnparticipateCommand.MESSAGE_USAGE;","lastModifiedDate":"2022-10-28"},{"lineNumber":51,"author":{"gitId":"highorbit25"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":52,"author":{"gitId":"highorbit25"},"content":"}","lastModifiedDate":"2022-10-28"}],"authorContributionMap":{"highorbit25":51,"Piyotato":1}},{"path":"src/main/java/seedu/studmap/logic/parser/UntagCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lpohsien"},"content":"package seedu.studmap.logic.parser;","lastModifiedDate":"2022-10-23"},{"lineNumber":2,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":3,"author":{"gitId":"lpohsien"},"content":"import static seedu.studmap.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":5,"author":{"gitId":"lpohsien"},"content":"import java.util.Collection;","lastModifiedDate":"2022-10-23"},{"lineNumber":6,"author":{"gitId":"lpohsien"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-23"},{"lineNumber":7,"author":{"gitId":"lpohsien"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-23"},{"lineNumber":8,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":9,"author":{"gitId":"lpohsien"},"content":"import seedu.studmap.commons.core.index.IndexListGenerator;","lastModifiedDate":"2022-10-23"},{"lineNumber":10,"author":{"gitId":"lpohsien"},"content":"import seedu.studmap.logic.commands.EditStudentCommand;","lastModifiedDate":"2022-10-23"},{"lineNumber":11,"author":{"gitId":"lpohsien"},"content":"import seedu.studmap.logic.commands.UntagCommand;","lastModifiedDate":"2022-10-28"},{"lineNumber":12,"author":{"gitId":"lpohsien"},"content":"import seedu.studmap.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-23"},{"lineNumber":13,"author":{"gitId":"lpohsien"},"content":"import seedu.studmap.model.tag.Tag;","lastModifiedDate":"2022-10-23"},{"lineNumber":14,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":15,"author":{"gitId":"lpohsien"},"content":"/**","lastModifiedDate":"2022-10-23"},{"lineNumber":16,"author":{"gitId":"lpohsien"},"content":" * Parses input arguments and creates a new UntagCommand object","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"lpohsien"},"content":" */","lastModifiedDate":"2022-10-23"},{"lineNumber":18,"author":{"gitId":"lpohsien"},"content":"public class UntagCommandParser extends EditStudentCommandParser\u003cUntagCommand.UntagCommandStudentEditor\u003e {","lastModifiedDate":"2022-10-28"},{"lineNumber":19,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":20,"author":{"gitId":"lpohsien"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":21,"author":{"gitId":"lpohsien"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2022-10-23"},{"lineNumber":22,"author":{"gitId":"lpohsien"},"content":"     * If {@code tags} contains only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2022-10-25"},{"lineNumber":23,"author":{"gitId":"lpohsien"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2022-10-23"},{"lineNumber":24,"author":{"gitId":"lpohsien"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":25,"author":{"gitId":"lpohsien"},"content":"    private Set\u003cTag\u003e parseTagsSet(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2022-10-23"},{"lineNumber":26,"author":{"gitId":"lpohsien"},"content":"        assert tags !\u003d null \u0026\u0026 !tags.isEmpty();","lastModifiedDate":"2022-10-23"},{"lineNumber":27,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":28,"author":{"gitId":"lpohsien"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2022-10-23"},{"lineNumber":29,"author":{"gitId":"lpohsien"},"content":"        return ParserUtil.parseTags(tagSet);","lastModifiedDate":"2022-10-23"},{"lineNumber":30,"author":{"gitId":"lpohsien"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":31,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":32,"author":{"gitId":"lpohsien"},"content":"    @Override","lastModifiedDate":"2022-10-23"},{"lineNumber":33,"author":{"gitId":"lpohsien"},"content":"    public Prefix[] getPrefixes() {","lastModifiedDate":"2022-10-23"},{"lineNumber":34,"author":{"gitId":"lpohsien"},"content":"        return new Prefix[]{PREFIX_TAG};","lastModifiedDate":"2022-10-23"},{"lineNumber":35,"author":{"gitId":"lpohsien"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":36,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":37,"author":{"gitId":"lpohsien"},"content":"    @Override","lastModifiedDate":"2022-10-23"},{"lineNumber":38,"author":{"gitId":"lpohsien"},"content":"    public String getUsageMessage() {","lastModifiedDate":"2022-10-23"},{"lineNumber":39,"author":{"gitId":"lpohsien"},"content":"        return UntagCommand.MESSAGE_USAGE;","lastModifiedDate":"2022-10-28"},{"lineNumber":40,"author":{"gitId":"lpohsien"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":41,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":42,"author":{"gitId":"lpohsien"},"content":"    @Override","lastModifiedDate":"2022-10-23"},{"lineNumber":43,"author":{"gitId":"lpohsien"},"content":"    public EditStudentCommand\u003cUntagCommand.UntagCommandStudentEditor\u003e getIndexCommand(","lastModifiedDate":"2022-10-28"},{"lineNumber":44,"author":{"gitId":"lpohsien"},"content":"            ArgumentMultimap argMultimap, IndexListGenerator indexListGenerator)","lastModifiedDate":"2022-10-23"},{"lineNumber":45,"author":{"gitId":"lpohsien"},"content":"            throws ParseException {","lastModifiedDate":"2022-10-23"},{"lineNumber":46,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":47,"author":{"gitId":"lpohsien"},"content":"        Set\u003cTag\u003e tags;","lastModifiedDate":"2022-10-23"},{"lineNumber":48,"author":{"gitId":"lpohsien"},"content":"        tags \u003d parseTagsSet(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2022-10-23"},{"lineNumber":49,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":50,"author":{"gitId":"lpohsien"},"content":"        UntagCommand.UntagCommandStudentEditor editor \u003d new UntagCommand.UntagCommandStudentEditor();","lastModifiedDate":"2022-10-28"},{"lineNumber":51,"author":{"gitId":"lpohsien"},"content":"        editor.setTags(tags);","lastModifiedDate":"2022-10-23"},{"lineNumber":52,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":53,"author":{"gitId":"lpohsien"},"content":"        return new UntagCommand(indexListGenerator, editor);","lastModifiedDate":"2022-10-28"},{"lineNumber":54,"author":{"gitId":"lpohsien"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":55,"author":{"gitId":"lpohsien"},"content":"}","lastModifiedDate":"2022-10-23"}],"authorContributionMap":{"lpohsien":55}},{"path":"src/main/java/seedu/studmap/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.logic.parser.exceptions;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"-":15,"comicalromance":2}},{"path":"src/main/java/seedu/studmap/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.model;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"highorbit25"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"Piyotato"},"content":"import java.util.List;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":9,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.commons.core.GuiSettings;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"Piyotato"},"content":"import seedu.studmap.commons.core.index.Index;","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.order.Order;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.student.Student;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"dr-arrgghh"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"dr-arrgghh"},"content":"     * {@code Predicate} that always evaluate to true","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"dr-arrgghh"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"comicalromance"},"content":"    Predicate\u003cStudent\u003e PREDICATE_SHOW_ALL_STUDENTS \u003d unused -\u003e true;","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"comicalromance"},"content":"     * Returns the user prefs\u0027 studMap file path.","lastModifiedDate":"2022-10-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"comicalromance"},"content":"    Path getStudMapFilePath();","lastModifiedDate":"2022-10-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"comicalromance"},"content":"     * Sets the user prefs\u0027 studMap file path.","lastModifiedDate":"2022-10-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"comicalromance"},"content":"    void setStudMapFilePath(Path studMapFilePath);","lastModifiedDate":"2022-10-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"comicalromance"},"content":"     * Replaces studMap data with the data in {@code studMap}.","lastModifiedDate":"2022-10-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"comicalromance"},"content":"    void setStudMap(ReadOnlyStudMap studMap);","lastModifiedDate":"2022-10-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"dr-arrgghh"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"comicalromance"},"content":"     * Returns the StudMap","lastModifiedDate":"2022-10-15"},{"lineNumber":60,"author":{"gitId":"dr-arrgghh"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"comicalromance"},"content":"    ReadOnlyStudMap getStudMap();","lastModifiedDate":"2022-10-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"comicalromance"},"content":"     * Returns true if a student with the same identity as {@code student} exists in the student map.","lastModifiedDate":"2022-10-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"comicalromance"},"content":"    boolean hasStudent(Student student);","lastModifiedDate":"2022-10-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"comicalromance"},"content":"     * Deletes the given student.","lastModifiedDate":"2022-10-15"},{"lineNumber":70,"author":{"gitId":"comicalromance"},"content":"     * The student must exist in the student map.","lastModifiedDate":"2022-10-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"comicalromance"},"content":"    void deleteStudent(Student target);","lastModifiedDate":"2022-10-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"comicalromance"},"content":"     * Adds the given student.","lastModifiedDate":"2022-10-15"},{"lineNumber":76,"author":{"gitId":"comicalromance"},"content":"     * {@code student} must not already exist in the student map.","lastModifiedDate":"2022-10-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"comicalromance"},"content":"    void addStudent(Student student);","lastModifiedDate":"2022-10-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":81,"author":{"gitId":"comicalromance"},"content":"     * Replaces the given student {@code target} with {@code editedStudent}.","lastModifiedDate":"2022-10-15"},{"lineNumber":82,"author":{"gitId":"comicalromance"},"content":"     * {@code target} must exist in the student map.","lastModifiedDate":"2022-10-15"},{"lineNumber":83,"author":{"gitId":"comicalromance"},"content":"     * The student identity of {@code editedStudent} must not be the same as another existing student","lastModifiedDate":"2022-10-15"},{"lineNumber":84,"author":{"gitId":"comicalromance"},"content":"     * in the studmap.","lastModifiedDate":"2022-10-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":86,"author":{"gitId":"comicalromance"},"content":"    void setStudent(Student target, Student editedStudent);","lastModifiedDate":"2022-10-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":88,"author":{"gitId":"dr-arrgghh"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":89,"author":{"gitId":"comicalromance"},"content":"     * Returns an unmodifiable view of the filtered student list","lastModifiedDate":"2022-10-15"},{"lineNumber":90,"author":{"gitId":"dr-arrgghh"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":91,"author":{"gitId":"comicalromance"},"content":"    ObservableList\u003cStudent\u003e getFilteredStudentList();","lastModifiedDate":"2022-10-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":93,"author":{"gitId":"Piyotato"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":94,"author":{"gitId":"Piyotato"},"content":"     * Returns a list of indices of the filtered student list","lastModifiedDate":"2022-10-20"},{"lineNumber":95,"author":{"gitId":"Piyotato"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":96,"author":{"gitId":"Piyotato"},"content":"    List\u003cIndex\u003e getFilteredStudentIndices();","lastModifiedDate":"2022-10-20"},{"lineNumber":97,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":99,"author":{"gitId":"comicalromance"},"content":"     * Updates the filter of the filtered student list to filter by the given {@code predicate}.","lastModifiedDate":"2022-10-15"},{"lineNumber":100,"author":{"gitId":"dr-arrgghh"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":103,"author":{"gitId":"comicalromance"},"content":"    void updateFilteredStudentList(Predicate\u003cStudent\u003e predicate);","lastModifiedDate":"2022-10-15"},{"lineNumber":104,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":105,"author":{"gitId":"highorbit25"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":106,"author":{"gitId":"highorbit25"},"content":"     * Sorts filteredList by specified comparator and order.","lastModifiedDate":"2022-10-23"},{"lineNumber":107,"author":{"gitId":"highorbit25"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":108,"author":{"gitId":"highorbit25"},"content":"    void sortFilteredStudentList(Comparator\u003cStudent\u003e comparator, Order order);","lastModifiedDate":"2022-10-21"},{"lineNumber":109,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":110,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":111,"author":{"gitId":"dr-arrgghh"},"content":"    void filterStudentListWithPredicate(Predicate\u003cStudent\u003e predicate);","lastModifiedDate":"2022-10-27"},{"lineNumber":112,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"highorbit25":5,"dr-arrgghh":13,"Piyotato":7,"-":58,"comicalromance":30}},{"path":"src/main/java/seedu/studmap/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.model;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"highorbit25"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"Piyotato"},"content":"import java.util.List;","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"Piyotato"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"Piyotato"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":16,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.commons.core.GuiSettings;","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.commons.core.LogsCenter;","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"Piyotato"},"content":"import seedu.studmap.commons.core.index.Index;","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.order.Order;","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.student.Student;","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"comicalromance"},"content":" * Represents the in-memory model of the student map data.","lastModifiedDate":"2022-10-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"comicalromance"},"content":"    private final StudMap studMap;","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"comicalromance"},"content":"    private final FilteredList\u003cStudent\u003e filteredStudents;","lastModifiedDate":"2022-10-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"comicalromance"},"content":"     * Initializes a ModelManager with the given studMap and userPrefs.","lastModifiedDate":"2022-10-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"comicalromance"},"content":"    public ModelManager(ReadOnlyStudMap studMap, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2022-10-15"},{"lineNumber":36,"author":{"gitId":"comicalromance"},"content":"        requireAllNonNull(studMap, userPrefs);","lastModifiedDate":"2022-10-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"comicalromance"},"content":"        logger.fine(\"Initializing with student map: \" + studMap + \" and user prefs \" + userPrefs);","lastModifiedDate":"2022-10-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"comicalromance"},"content":"        this.studMap \u003d new StudMap(studMap);","lastModifiedDate":"2022-10-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"comicalromance"},"content":"        filteredStudents \u003d new FilteredList\u003c\u003e(this.studMap.getStudentList());","lastModifiedDate":"2022-10-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"comicalromance"},"content":"        this(new StudMap(), new UserPrefs());","lastModifiedDate":"2022-10-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"comicalromance"},"content":"    public Path getStudMapFilePath() {","lastModifiedDate":"2022-10-15"},{"lineNumber":75,"author":{"gitId":"comicalromance"},"content":"        return userPrefs.getStudMapFilePath();","lastModifiedDate":"2022-10-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"comicalromance"},"content":"    public void setStudMapFilePath(Path studMapFilePath) {","lastModifiedDate":"2022-10-15"},{"lineNumber":80,"author":{"gitId":"comicalromance"},"content":"        requireNonNull(studMapFilePath);","lastModifiedDate":"2022-10-15"},{"lineNumber":81,"author":{"gitId":"comicalromance"},"content":"        userPrefs.setStudMapFilePath(studMapFilePath);","lastModifiedDate":"2022-10-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"comicalromance"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d StudMap \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":87,"author":{"gitId":"comicalromance"},"content":"    public void setStudMap(ReadOnlyStudMap studMap) {","lastModifiedDate":"2022-10-15"},{"lineNumber":88,"author":{"gitId":"comicalromance"},"content":"        this.studMap.resetData(studMap);","lastModifiedDate":"2022-10-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":92,"author":{"gitId":"comicalromance"},"content":"    public ReadOnlyStudMap getStudMap() {","lastModifiedDate":"2022-10-15"},{"lineNumber":93,"author":{"gitId":"comicalromance"},"content":"        return studMap;","lastModifiedDate":"2022-10-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"comicalromance"},"content":"    public boolean hasStudent(Student student) {","lastModifiedDate":"2022-10-15"},{"lineNumber":98,"author":{"gitId":"comicalromance"},"content":"        requireNonNull(student);","lastModifiedDate":"2022-10-15"},{"lineNumber":99,"author":{"gitId":"comicalromance"},"content":"        return studMap.hasStudent(student);","lastModifiedDate":"2022-10-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":103,"author":{"gitId":"comicalromance"},"content":"    public void deleteStudent(Student target) {","lastModifiedDate":"2022-10-15"},{"lineNumber":104,"author":{"gitId":"comicalromance"},"content":"        studMap.removeStudent(target);","lastModifiedDate":"2022-10-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":108,"author":{"gitId":"comicalromance"},"content":"    public void addStudent(Student student) {","lastModifiedDate":"2022-10-15"},{"lineNumber":109,"author":{"gitId":"comicalromance"},"content":"        studMap.addStudent(student);","lastModifiedDate":"2022-10-15"},{"lineNumber":110,"author":{"gitId":"comicalromance"},"content":"        updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2022-10-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":114,"author":{"gitId":"comicalromance"},"content":"    public void setStudent(Student target, Student editedStudent) {","lastModifiedDate":"2022-10-15"},{"lineNumber":115,"author":{"gitId":"comicalromance"},"content":"        requireAllNonNull(target, editedStudent);","lastModifiedDate":"2022-10-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":117,"author":{"gitId":"comicalromance"},"content":"        studMap.setStudent(target, editedStudent);","lastModifiedDate":"2022-10-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":120,"author":{"gitId":"comicalromance"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Student List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":123,"author":{"gitId":"comicalromance"},"content":"     * Returns an unmodifiable view of the list of {@code Student} backed by the internal list of","lastModifiedDate":"2022-10-15"},{"lineNumber":124,"author":{"gitId":"comicalromance"},"content":"     * {@code versionedStudMap}","lastModifiedDate":"2022-10-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":127,"author":{"gitId":"comicalromance"},"content":"    public ObservableList\u003cStudent\u003e getFilteredStudentList() {","lastModifiedDate":"2022-10-15"},{"lineNumber":128,"author":{"gitId":"comicalromance"},"content":"        return filteredStudents;","lastModifiedDate":"2022-10-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":131,"author":{"gitId":"highorbit25"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":132,"author":{"gitId":"highorbit25"},"content":"    public void sortFilteredStudentList(Comparator\u003cStudent\u003e comparator, Order order) {","lastModifiedDate":"2022-10-21"},{"lineNumber":133,"author":{"gitId":"highorbit25"},"content":"        this.studMap.sort(comparator, order);","lastModifiedDate":"2022-10-21"},{"lineNumber":134,"author":{"gitId":"highorbit25"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":135,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":137,"author":{"gitId":"dr-arrgghh"},"content":"    public void filterStudentListWithPredicate(Predicate\u003cStudent\u003e predicate) {","lastModifiedDate":"2022-10-27"},{"lineNumber":138,"author":{"gitId":"dr-arrgghh"},"content":"        requireAllNonNull(predicate);","lastModifiedDate":"2022-10-27"},{"lineNumber":139,"author":{"gitId":"dr-arrgghh"},"content":"        filteredStudents.setPredicate(predicate);","lastModifiedDate":"2022-10-27"},{"lineNumber":140,"author":{"gitId":"dr-arrgghh"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":141,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":142,"author":{"gitId":"dr-arrgghh"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":143,"author":{"gitId":"dr-arrgghh"},"content":"    public void updateFilteredStudentList(Predicate\u003cStudent\u003e predicate) {","lastModifiedDate":"2022-10-27"},{"lineNumber":144,"author":{"gitId":"dr-arrgghh"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2022-10-27"},{"lineNumber":145,"author":{"gitId":"dr-arrgghh"},"content":"        filteredStudents.setPredicate(predicate);","lastModifiedDate":"2022-10-27"},{"lineNumber":146,"author":{"gitId":"dr-arrgghh"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":147,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":162,"author":{"gitId":"comicalromance"},"content":"        return studMap.equals(other.studMap)","lastModifiedDate":"2022-10-15"},{"lineNumber":163,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":164,"author":{"gitId":"comicalromance"},"content":"                \u0026\u0026 filteredStudents.equals(other.filteredStudents);","lastModifiedDate":"2022-10-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":167,"author":{"gitId":"highorbit25"},"content":"    public List\u003cIndex\u003e getFilteredStudentIndices() {","lastModifiedDate":"2022-10-23"},{"lineNumber":168,"author":{"gitId":"highorbit25"},"content":"        return IntStream.range(0, filteredStudents.size()).mapToObj(Index::fromZeroBased).collect(Collectors.toList());","lastModifiedDate":"2022-10-23"},{"lineNumber":169,"author":{"gitId":"highorbit25"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":170,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"highorbit25":10,"dr-arrgghh":11,"Piyotato":4,"-":102,"comicalromance":44}},{"path":"src/main/java/seedu/studmap/model/ReadOnlyStudMap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.model;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.student.Student;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"comicalromance"},"content":" * Unmodifiable view of a studMap","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"comicalromance"},"content":"public interface ReadOnlyStudMap {","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"comicalromance"},"content":"     * Returns an unmodifiable view of the students list.","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"comicalromance"},"content":"     * This list will not contain any duplicate students.","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"comicalromance"},"content":"    ObservableList\u003cStudent\u003e getStudentList();","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":10,"comicalromance":7}},{"path":"src/main/java/seedu/studmap/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.model;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.commons.core.GuiSettings;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"comicalromance"},"content":"    Path getStudMapFilePath();","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"-":13,"comicalromance":3}},{"path":"src/main/java/seedu/studmap/model/StudMap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.model;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"highorbit25"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"highorbit25"},"content":"import java.util.List;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.order.Order;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.student.Student;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.student.UniqueStudentList;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"comicalromance"},"content":" * Wraps all data at the studmap-book level","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"comicalromance"},"content":" * Duplicates are not allowed (by .isSameStudent comparison)","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"comicalromance"},"content":"public class StudMap implements ReadOnlyStudMap {","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"comicalromance"},"content":"    private final UniqueStudentList students;","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"highorbit25"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"highorbit25"},"content":"    {","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"comicalromance"},"content":"        students \u003d new UniqueStudentList();","lastModifiedDate":"2022-10-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"comicalromance"},"content":"    public StudMap() {","lastModifiedDate":"2022-10-15"},{"lineNumber":33,"author":{"gitId":"highorbit25"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"comicalromance"},"content":"     * Creates an StudMap using the Students in the {@code toBeCopied}","lastModifiedDate":"2022-10-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"comicalromance"},"content":"    public StudMap(ReadOnlyStudMap toBeCopied) {","lastModifiedDate":"2022-10-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"comicalromance"},"content":"     * Replaces the contents of the student list with {@code students}.","lastModifiedDate":"2022-10-15"},{"lineNumber":47,"author":{"gitId":"comicalromance"},"content":"     * {@code students} must not contain duplicate students.","lastModifiedDate":"2022-10-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"comicalromance"},"content":"    public void setStudents(List\u003cStudent\u003e students) {","lastModifiedDate":"2022-10-15"},{"lineNumber":50,"author":{"gitId":"comicalromance"},"content":"        this.students.setStudents(students);","lastModifiedDate":"2022-10-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"comicalromance"},"content":"     * Resets the existing data of this {@code StudMap} with {@code newData}.","lastModifiedDate":"2022-10-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"comicalromance"},"content":"    public void resetData(ReadOnlyStudMap newData) {","lastModifiedDate":"2022-10-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":59,"author":{"gitId":"comicalromance"},"content":"        setStudents(newData.getStudentList());","lastModifiedDate":"2022-10-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"comicalromance"},"content":"    //// student-level operations","lastModifiedDate":"2022-10-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"comicalromance"},"content":"     * Returns true if a student with the same identity as {@code student} exists in the student map.","lastModifiedDate":"2022-10-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"comicalromance"},"content":"    public boolean hasStudent(Student student) {","lastModifiedDate":"2022-10-15"},{"lineNumber":68,"author":{"gitId":"comicalromance"},"content":"        requireNonNull(student);","lastModifiedDate":"2022-10-15"},{"lineNumber":69,"author":{"gitId":"comicalromance"},"content":"        return students.contains(student);","lastModifiedDate":"2022-10-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"comicalromance"},"content":"     * Adds a student to the student map.","lastModifiedDate":"2022-10-15"},{"lineNumber":74,"author":{"gitId":"comicalromance"},"content":"     * The student must not already exist in the student map.","lastModifiedDate":"2022-10-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"comicalromance"},"content":"    public void addStudent(Student p) {","lastModifiedDate":"2022-10-15"},{"lineNumber":77,"author":{"gitId":"comicalromance"},"content":"        students.add(p);","lastModifiedDate":"2022-10-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":81,"author":{"gitId":"comicalromance"},"content":"     * Replaces the given student {@code target} in the list with {@code editedStudent}.","lastModifiedDate":"2022-10-15"},{"lineNumber":82,"author":{"gitId":"comicalromance"},"content":"     * {@code target} must exist in the student map.","lastModifiedDate":"2022-10-15"},{"lineNumber":83,"author":{"gitId":"comicalromance"},"content":"     * The student identity of {@code editedStudent} must not be the same as another existing student in the","lastModifiedDate":"2022-10-15"},{"lineNumber":84,"author":{"gitId":"comicalromance"},"content":"     * student map.","lastModifiedDate":"2022-10-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":86,"author":{"gitId":"comicalromance"},"content":"    public void setStudent(Student target, Student editedStudent) {","lastModifiedDate":"2022-10-15"},{"lineNumber":87,"author":{"gitId":"comicalromance"},"content":"        requireNonNull(editedStudent);","lastModifiedDate":"2022-10-15"},{"lineNumber":88,"author":{"gitId":"comicalromance"},"content":"        students.setStudent(target, editedStudent);","lastModifiedDate":"2022-10-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":92,"author":{"gitId":"comicalromance"},"content":"     * Removes {@code key} from this {@code StudMap}.","lastModifiedDate":"2022-10-15"},{"lineNumber":93,"author":{"gitId":"comicalromance"},"content":"     * {@code key} must exist in the student map.","lastModifiedDate":"2022-10-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":95,"author":{"gitId":"comicalromance"},"content":"    public void removeStudent(Student key) {","lastModifiedDate":"2022-10-15"},{"lineNumber":96,"author":{"gitId":"comicalromance"},"content":"        students.remove(key);","lastModifiedDate":"2022-10-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"comicalromance"},"content":"        return students.asUnmodifiableObservableList().size() + \" students\";","lastModifiedDate":"2022-10-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"comicalromance"},"content":"    public ObservableList\u003cStudent\u003e getStudentList() {","lastModifiedDate":"2022-10-15"},{"lineNumber":109,"author":{"gitId":"comicalromance"},"content":"        return students.asUnmodifiableObservableList();","lastModifiedDate":"2022-10-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":112,"author":{"gitId":"highorbit25"},"content":"    /** Sort the studmap by the given comparator and order */","lastModifiedDate":"2022-10-23"},{"lineNumber":113,"author":{"gitId":"highorbit25"},"content":"    public void sort(Comparator\u003cStudent\u003e comparator, Order order) {","lastModifiedDate":"2022-10-21"},{"lineNumber":114,"author":{"gitId":"highorbit25"},"content":"        boolean isDescending \u003d order.isDescending();","lastModifiedDate":"2022-10-13"},{"lineNumber":115,"author":{"gitId":"highorbit25"},"content":"        students.sort(comparator, isDescending);","lastModifiedDate":"2022-10-21"},{"lineNumber":116,"author":{"gitId":"highorbit25"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":117,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"comicalromance"},"content":"                || (other instanceof StudMap // instanceof handles nulls","lastModifiedDate":"2022-10-15"},{"lineNumber":122,"author":{"gitId":"comicalromance"},"content":"                \u0026\u0026 students.equals(((StudMap) other).students));","lastModifiedDate":"2022-10-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"comicalromance"},"content":"        return students.hashCode();","lastModifiedDate":"2022-10-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"highorbit25":12,"-":72,"comicalromance":45}},{"path":"src/main/java/seedu/studmap/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.model;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.commons.core.GuiSettings;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"comicalromance"},"content":"    private Path studMapFilePath \u003d Paths.get(\"data\" , \"studmap.json\");","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"comicalromance"},"content":"        setStudMapFilePath(newUserPrefs.getStudMapFilePath());","lastModifiedDate":"2022-10-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"comicalromance"},"content":"    public Path getStudMapFilePath() {","lastModifiedDate":"2022-10-15"},{"lineNumber":51,"author":{"gitId":"comicalromance"},"content":"        return studMapFilePath;","lastModifiedDate":"2022-10-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"comicalromance"},"content":"    public void setStudMapFilePath(Path studMapFilePath) {","lastModifiedDate":"2022-10-15"},{"lineNumber":55,"author":{"gitId":"comicalromance"},"content":"        requireNonNull(studMapFilePath);","lastModifiedDate":"2022-10-15"},{"lineNumber":56,"author":{"gitId":"comicalromance"},"content":"        this.studMapFilePath \u003d studMapFilePath;","lastModifiedDate":"2022-10-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"comicalromance"},"content":"                \u0026\u0026 studMapFilePath.equals(o.studMapFilePath);","lastModifiedDate":"2022-10-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"comicalromance"},"content":"        return Objects.hash(guiSettings, studMapFilePath);","lastModifiedDate":"2022-10-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"comicalromance"},"content":"        sb.append(\"\\nLocal data file location : \" + studMapFilePath);","lastModifiedDate":"2022-10-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":75,"comicalromance":12}},{"path":"src/main/java/seedu/studmap/model/attribute/Attribute.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.model.attribute;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":3,"author":{"gitId":"highorbit25"},"content":"import static seedu.studmap.model.attribute.AttributeType.valueOf;","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"highorbit25"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"highorbit25"},"content":"import seedu.studmap.model.attribute.exceptions.AttributeNotFoundException;","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"highorbit25"},"content":"import seedu.studmap.model.order.Order;","lastModifiedDate":"2022-11-03"},{"lineNumber":9,"author":{"gitId":"highorbit25"},"content":"import seedu.studmap.model.student.Student;","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"highorbit25"},"content":"/**","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"highorbit25"},"content":" * Represents an attribute.","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"highorbit25"},"content":" * Guarantees: immutable; attribute is valid as declared in {@link #isValidAttributeType(String)}","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"highorbit25"},"content":" */","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"highorbit25"},"content":"public abstract class Attribute {","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"highorbit25"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Invalid Attribute entered\";","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"highorbit25"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"highorbit25"},"content":"     * Returns true if a given string is a valid attribute name.","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"highorbit25"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"highorbit25"},"content":"    public static boolean isValidAttributeType(String test) {","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"highorbit25"},"content":"        try {","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"highorbit25"},"content":"            valueOf(test.toUpperCase());","lastModifiedDate":"2022-10-23"},{"lineNumber":25,"author":{"gitId":"highorbit25"},"content":"        } catch (IllegalArgumentException illegalArgumentException) {","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"highorbit25"},"content":"            return false;","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"highorbit25"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":28,"author":{"gitId":"highorbit25"},"content":"        return true;","lastModifiedDate":"2022-10-21"},{"lineNumber":29,"author":{"gitId":"highorbit25"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":30,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":31,"author":{"gitId":"highorbit25"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":32,"author":{"gitId":"highorbit25"},"content":"     * Returns the Comparator to sort the given attribute","lastModifiedDate":"2022-10-21"},{"lineNumber":33,"author":{"gitId":"highorbit25"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":34,"author":{"gitId":"highorbit25"},"content":"    public static Comparator\u003cStudent\u003e getAttributeComparator(AttributeType attributeTypeEnum, Order order)","lastModifiedDate":"2022-11-03"},{"lineNumber":35,"author":{"gitId":"highorbit25"},"content":"            throws AttributeNotFoundException {","lastModifiedDate":"2022-10-23"},{"lineNumber":36,"author":{"gitId":"highorbit25"},"content":"        Comparator\u003cStudent\u003e resultComparator;","lastModifiedDate":"2022-10-21"},{"lineNumber":37,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":38,"author":{"gitId":"highorbit25"},"content":"        switch (attributeTypeEnum) {","lastModifiedDate":"2022-10-23"},{"lineNumber":39,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":40,"author":{"gitId":"highorbit25"},"content":"        case NAME:","lastModifiedDate":"2022-10-21"},{"lineNumber":41,"author":{"gitId":"highorbit25"},"content":"            if (order.isDescending()) {","lastModifiedDate":"2022-11-03"},{"lineNumber":42,"author":{"gitId":"highorbit25"},"content":"                resultComparator \u003d Comparator.comparing(Student::getCmpNameString,","lastModifiedDate":"2022-11-03"},{"lineNumber":43,"author":{"gitId":"highorbit25"},"content":"                        Comparator.nullsFirst(String::compareToIgnoreCase));","lastModifiedDate":"2022-11-03"},{"lineNumber":44,"author":{"gitId":"highorbit25"},"content":"            } else {","lastModifiedDate":"2022-11-03"},{"lineNumber":45,"author":{"gitId":"highorbit25"},"content":"                resultComparator \u003d Comparator.comparing(Student::getCmpNameString,","lastModifiedDate":"2022-11-03"},{"lineNumber":46,"author":{"gitId":"highorbit25"},"content":"                        Comparator.nullsLast(String::compareToIgnoreCase));","lastModifiedDate":"2022-11-03"},{"lineNumber":47,"author":{"gitId":"highorbit25"},"content":"            }","lastModifiedDate":"2022-11-03"},{"lineNumber":48,"author":{"gitId":"highorbit25"},"content":"            break;","lastModifiedDate":"2022-10-21"},{"lineNumber":49,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":50,"author":{"gitId":"highorbit25"},"content":"        case PHONE:","lastModifiedDate":"2022-10-21"},{"lineNumber":51,"author":{"gitId":"highorbit25"},"content":"            if (order.isDescending()) {","lastModifiedDate":"2022-11-03"},{"lineNumber":52,"author":{"gitId":"highorbit25"},"content":"                resultComparator \u003d Comparator.comparing(Student::getCmpPhoneString,","lastModifiedDate":"2022-11-03"},{"lineNumber":53,"author":{"gitId":"highorbit25"},"content":"                        Comparator.nullsFirst(String::compareToIgnoreCase));","lastModifiedDate":"2022-11-03"},{"lineNumber":54,"author":{"gitId":"highorbit25"},"content":"            } else {","lastModifiedDate":"2022-11-03"},{"lineNumber":55,"author":{"gitId":"highorbit25"},"content":"                resultComparator \u003d Comparator.comparing(Student::getCmpPhoneString,","lastModifiedDate":"2022-11-03"},{"lineNumber":56,"author":{"gitId":"highorbit25"},"content":"                        Comparator.nullsLast(String::compareToIgnoreCase));","lastModifiedDate":"2022-11-03"},{"lineNumber":57,"author":{"gitId":"highorbit25"},"content":"            }","lastModifiedDate":"2022-11-03"},{"lineNumber":58,"author":{"gitId":"highorbit25"},"content":"            break;","lastModifiedDate":"2022-10-21"},{"lineNumber":59,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":60,"author":{"gitId":"comicalromance"},"content":"        case MODULE:","lastModifiedDate":"2022-10-26"},{"lineNumber":61,"author":{"gitId":"highorbit25"},"content":"            if (order.isDescending()) {","lastModifiedDate":"2022-11-03"},{"lineNumber":62,"author":{"gitId":"highorbit25"},"content":"                resultComparator \u003d Comparator.comparing(Student::getCmpModuleString,","lastModifiedDate":"2022-11-03"},{"lineNumber":63,"author":{"gitId":"highorbit25"},"content":"                        Comparator.nullsFirst(String::compareToIgnoreCase));","lastModifiedDate":"2022-11-03"},{"lineNumber":64,"author":{"gitId":"highorbit25"},"content":"            } else {","lastModifiedDate":"2022-11-03"},{"lineNumber":65,"author":{"gitId":"highorbit25"},"content":"                resultComparator \u003d Comparator.comparing(Student::getCmpModuleString,","lastModifiedDate":"2022-11-03"},{"lineNumber":66,"author":{"gitId":"highorbit25"},"content":"                        Comparator.nullsLast(String::compareToIgnoreCase));","lastModifiedDate":"2022-11-03"},{"lineNumber":67,"author":{"gitId":"highorbit25"},"content":"            }","lastModifiedDate":"2022-11-03"},{"lineNumber":68,"author":{"gitId":"comicalromance"},"content":"            break;","lastModifiedDate":"2022-10-26"},{"lineNumber":69,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":70,"author":{"gitId":"dr-arrgghh"},"content":"        case ID:","lastModifiedDate":"2022-10-25"},{"lineNumber":71,"author":{"gitId":"highorbit25"},"content":"            if (order.isDescending()) {","lastModifiedDate":"2022-11-03"},{"lineNumber":72,"author":{"gitId":"highorbit25"},"content":"                resultComparator \u003d Comparator.comparing(Student::getCmpIdString,","lastModifiedDate":"2022-11-03"},{"lineNumber":73,"author":{"gitId":"highorbit25"},"content":"                        Comparator.nullsFirst(String::compareToIgnoreCase));","lastModifiedDate":"2022-11-03"},{"lineNumber":74,"author":{"gitId":"highorbit25"},"content":"            } else {","lastModifiedDate":"2022-11-03"},{"lineNumber":75,"author":{"gitId":"highorbit25"},"content":"                resultComparator \u003d Comparator.comparing(Student::getCmpIdString,","lastModifiedDate":"2022-11-03"},{"lineNumber":76,"author":{"gitId":"highorbit25"},"content":"                        Comparator.nullsLast(String::compareToIgnoreCase));","lastModifiedDate":"2022-11-03"},{"lineNumber":77,"author":{"gitId":"highorbit25"},"content":"            }","lastModifiedDate":"2022-11-03"},{"lineNumber":78,"author":{"gitId":"dr-arrgghh"},"content":"            break;","lastModifiedDate":"2022-10-25"},{"lineNumber":79,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":80,"author":{"gitId":"dr-arrgghh"},"content":"        case GIT:","lastModifiedDate":"2022-10-25"},{"lineNumber":81,"author":{"gitId":"highorbit25"},"content":"            if (order.isDescending()) {","lastModifiedDate":"2022-11-03"},{"lineNumber":82,"author":{"gitId":"highorbit25"},"content":"                resultComparator \u003d Comparator.comparing(Student::getCmpGitString,","lastModifiedDate":"2022-11-03"},{"lineNumber":83,"author":{"gitId":"highorbit25"},"content":"                        Comparator.nullsFirst(String::compareToIgnoreCase));","lastModifiedDate":"2022-11-03"},{"lineNumber":84,"author":{"gitId":"highorbit25"},"content":"            } else {","lastModifiedDate":"2022-11-03"},{"lineNumber":85,"author":{"gitId":"highorbit25"},"content":"                resultComparator \u003d Comparator.comparing(Student::getCmpGitString,","lastModifiedDate":"2022-11-03"},{"lineNumber":86,"author":{"gitId":"highorbit25"},"content":"                        Comparator.nullsLast(String::compareToIgnoreCase));","lastModifiedDate":"2022-11-03"},{"lineNumber":87,"author":{"gitId":"highorbit25"},"content":"            }","lastModifiedDate":"2022-11-03"},{"lineNumber":88,"author":{"gitId":"dr-arrgghh"},"content":"            break;","lastModifiedDate":"2022-10-25"},{"lineNumber":89,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":90,"author":{"gitId":"dr-arrgghh"},"content":"        case HANDLE:","lastModifiedDate":"2022-10-25"},{"lineNumber":91,"author":{"gitId":"highorbit25"},"content":"            if (order.isDescending()) {","lastModifiedDate":"2022-11-03"},{"lineNumber":92,"author":{"gitId":"highorbit25"},"content":"                resultComparator \u003d Comparator.comparing(Student::getCmpHandleString,","lastModifiedDate":"2022-11-03"},{"lineNumber":93,"author":{"gitId":"highorbit25"},"content":"                        Comparator.nullsFirst(String::compareToIgnoreCase));","lastModifiedDate":"2022-11-03"},{"lineNumber":94,"author":{"gitId":"highorbit25"},"content":"            } else {","lastModifiedDate":"2022-11-03"},{"lineNumber":95,"author":{"gitId":"highorbit25"},"content":"                resultComparator \u003d Comparator.comparing(Student::getCmpHandleString,","lastModifiedDate":"2022-11-03"},{"lineNumber":96,"author":{"gitId":"highorbit25"},"content":"                        Comparator.nullsLast(String::compareToIgnoreCase));","lastModifiedDate":"2022-11-03"},{"lineNumber":97,"author":{"gitId":"highorbit25"},"content":"            }","lastModifiedDate":"2022-11-03"},{"lineNumber":98,"author":{"gitId":"dr-arrgghh"},"content":"            break;","lastModifiedDate":"2022-10-25"},{"lineNumber":99,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":100,"author":{"gitId":"highorbit25"},"content":"        case EMAIL:","lastModifiedDate":"2022-10-21"},{"lineNumber":101,"author":{"gitId":"highorbit25"},"content":"            if (order.isDescending()) {","lastModifiedDate":"2022-11-03"},{"lineNumber":102,"author":{"gitId":"highorbit25"},"content":"                resultComparator \u003d Comparator.comparing(Student::getCmpEmailString,","lastModifiedDate":"2022-11-03"},{"lineNumber":103,"author":{"gitId":"highorbit25"},"content":"                        Comparator.nullsFirst(String::compareToIgnoreCase));","lastModifiedDate":"2022-11-03"},{"lineNumber":104,"author":{"gitId":"highorbit25"},"content":"            } else {","lastModifiedDate":"2022-11-03"},{"lineNumber":105,"author":{"gitId":"highorbit25"},"content":"                resultComparator \u003d Comparator.comparing(Student::getCmpEmailString,","lastModifiedDate":"2022-11-03"},{"lineNumber":106,"author":{"gitId":"highorbit25"},"content":"                        Comparator.nullsLast(String::compareToIgnoreCase));","lastModifiedDate":"2022-11-03"},{"lineNumber":107,"author":{"gitId":"highorbit25"},"content":"            }","lastModifiedDate":"2022-11-03"},{"lineNumber":108,"author":{"gitId":"highorbit25"},"content":"            break;","lastModifiedDate":"2022-10-21"},{"lineNumber":109,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":110,"author":{"gitId":"highorbit25"},"content":"        case ATTENDANCE:","lastModifiedDate":"2022-10-21"},{"lineNumber":111,"author":{"gitId":"highorbit25"},"content":"            if (order.isDescending()) {","lastModifiedDate":"2022-11-03"},{"lineNumber":112,"author":{"gitId":"highorbit25"},"content":"                resultComparator \u003d Comparator.comparing(Student::getAttendancePercentageForDsc);","lastModifiedDate":"2022-11-03"},{"lineNumber":113,"author":{"gitId":"highorbit25"},"content":"            } else {","lastModifiedDate":"2022-11-03"},{"lineNumber":114,"author":{"gitId":"highorbit25"},"content":"                resultComparator \u003d Comparator.comparing(Student::getAttendancePercentageForAsc);","lastModifiedDate":"2022-11-03"},{"lineNumber":115,"author":{"gitId":"highorbit25"},"content":"            }","lastModifiedDate":"2022-11-03"},{"lineNumber":116,"author":{"gitId":"highorbit25"},"content":"            break;","lastModifiedDate":"2022-10-21"},{"lineNumber":117,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":118,"author":{"gitId":"highorbit25"},"content":"        case ASSIGNMENT:","lastModifiedDate":"2022-10-28"},{"lineNumber":119,"author":{"gitId":"highorbit25"},"content":"            if (order.isDescending()) {","lastModifiedDate":"2022-11-03"},{"lineNumber":120,"author":{"gitId":"highorbit25"},"content":"                resultComparator \u003d Comparator.comparing(Student::getAssignmentMarkedCountForDsc);","lastModifiedDate":"2022-11-03"},{"lineNumber":121,"author":{"gitId":"highorbit25"},"content":"            } else {","lastModifiedDate":"2022-11-03"},{"lineNumber":122,"author":{"gitId":"highorbit25"},"content":"                resultComparator \u003d Comparator.comparing(Student::getAssignmentMarkedCountForAsc);","lastModifiedDate":"2022-11-03"},{"lineNumber":123,"author":{"gitId":"highorbit25"},"content":"            }","lastModifiedDate":"2022-11-03"},{"lineNumber":124,"author":{"gitId":"highorbit25"},"content":"            break;","lastModifiedDate":"2022-10-28"},{"lineNumber":125,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":126,"author":{"gitId":"highorbit25"},"content":"        case PARTICIPATION:","lastModifiedDate":"2022-10-28"},{"lineNumber":127,"author":{"gitId":"highorbit25"},"content":"            if (order.isDescending()) {","lastModifiedDate":"2022-11-03"},{"lineNumber":128,"author":{"gitId":"highorbit25"},"content":"                resultComparator \u003d Comparator.comparing(Student::getParticipationPercentageForDsc);","lastModifiedDate":"2022-11-03"},{"lineNumber":129,"author":{"gitId":"highorbit25"},"content":"            } else {","lastModifiedDate":"2022-11-03"},{"lineNumber":130,"author":{"gitId":"highorbit25"},"content":"                resultComparator \u003d Comparator.comparing(Student::getParticipationPercentageForAsc);","lastModifiedDate":"2022-11-03"},{"lineNumber":131,"author":{"gitId":"highorbit25"},"content":"            }","lastModifiedDate":"2022-11-03"},{"lineNumber":132,"author":{"gitId":"highorbit25"},"content":"            break;","lastModifiedDate":"2022-10-28"},{"lineNumber":133,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":134,"author":{"gitId":"highorbit25"},"content":"        default:","lastModifiedDate":"2022-10-21"},{"lineNumber":135,"author":{"gitId":"highorbit25"},"content":"            throw new AttributeNotFoundException();","lastModifiedDate":"2022-10-21"},{"lineNumber":136,"author":{"gitId":"highorbit25"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":137,"author":{"gitId":"highorbit25"},"content":"        return resultComparator;","lastModifiedDate":"2022-10-21"},{"lineNumber":138,"author":{"gitId":"highorbit25"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":139,"author":{"gitId":"highorbit25"},"content":"}","lastModifiedDate":"2022-10-15"}],"authorContributionMap":{"highorbit25":126,"dr-arrgghh":9,"comicalromance":4}},{"path":"src/main/java/seedu/studmap/model/attribute/AttributeType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"highorbit25"},"content":"package seedu.studmap.model.attribute;","lastModifiedDate":"2022-10-21"},{"lineNumber":2,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":3,"author":{"gitId":"highorbit25"},"content":"/**","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"highorbit25"},"content":" * Enum class for valid attributes supported by sorting.","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"highorbit25"},"content":" */","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"highorbit25"},"content":"public enum AttributeType {","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"highorbit25"},"content":"    NAME,","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"comicalromance"},"content":"    MODULE,","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"highorbit25"},"content":"    PHONE,","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"dr-arrgghh"},"content":"    ID,","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"dr-arrgghh"},"content":"    GIT,","lastModifiedDate":"2022-10-25"},{"lineNumber":12,"author":{"gitId":"dr-arrgghh"},"content":"    HANDLE,","lastModifiedDate":"2022-10-25"},{"lineNumber":13,"author":{"gitId":"highorbit25"},"content":"    EMAIL,","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"highorbit25"},"content":"    ATTENDANCE,","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"highorbit25"},"content":"    PARTICIPATION,","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"highorbit25"},"content":"    ASSIGNMENT","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"highorbit25"},"content":"}","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"highorbit25":13,"dr-arrgghh":3,"comicalromance":1}},{"path":"src/main/java/seedu/studmap/model/attribute/exceptions/AttributeNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.model.attribute.exceptions;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":3,"author":{"gitId":"highorbit25"},"content":"/**","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"highorbit25"},"content":" * Signals that the operation is unable to sort by the specified attribute.","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"highorbit25"},"content":" */","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"highorbit25"},"content":"public class AttributeNotFoundException extends RuntimeException {}","lastModifiedDate":"2022-10-15"}],"authorContributionMap":{"highorbit25":5,"comicalromance":1}},{"path":"src/main/java/seedu/studmap/model/order/Order.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.model.order;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"highorbit25"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"highorbit25"},"content":"/**","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"highorbit25"},"content":" * Represents a sorting order.","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"highorbit25"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidOrderName(String)}","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"highorbit25"},"content":" */","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"highorbit25"},"content":"public class Order {","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"highorbit25"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Order can only be asc for ascending or dsc for descending\\n\";","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"highorbit25"},"content":"    public static final Order ORDER_ASC \u003d new Order(\"asc\");","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"highorbit25"},"content":"    public static final Order ORDER_DSC \u003d new Order(\"dsc\");","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"highorbit25"},"content":"    public final String orderName;","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"highorbit25"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"highorbit25"},"content":"     * Constructs a {@code Order}.","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"highorbit25"},"content":"     *","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"highorbit25"},"content":"     * @param orderName A valid order.","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"highorbit25"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"highorbit25"},"content":"    private Order(String orderName) {","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"highorbit25"},"content":"        requireNonNull(orderName);","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"highorbit25"},"content":"        checkArgument(isValidOrderName(orderName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"highorbit25"},"content":"        this.orderName \u003d orderName;","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"highorbit25"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"highorbit25"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"highorbit25"},"content":"     * Returns true if a given string is a valid order name.","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"highorbit25"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"highorbit25"},"content":"    public static boolean isValidOrderName(String test) {","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"highorbit25"},"content":"        return test.matches(\"dsc\") || test.matches(\"asc\");","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"highorbit25"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"highorbit25"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"highorbit25"},"content":"     * Returns true if a given order is descending order.","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"highorbit25"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"highorbit25"},"content":"    public boolean isDescending() {","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"highorbit25"},"content":"        return this.equals(ORDER_DSC);","lastModifiedDate":"2022-10-21"},{"lineNumber":41,"author":{"gitId":"highorbit25"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"highorbit25"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"highorbit25"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"highorbit25"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"comicalromance"},"content":"                || (other instanceof seedu.studmap.model.order.Order // instanceof handles nulls","lastModifiedDate":"2022-10-15"},{"lineNumber":47,"author":{"gitId":"comicalromance"},"content":"                \u0026\u0026 orderName.equals(((seedu.studmap.model.order.Order) other).orderName)); // state check","lastModifiedDate":"2022-10-15"},{"lineNumber":48,"author":{"gitId":"highorbit25"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"highorbit25"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"highorbit25"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"highorbit25"},"content":"        return orderName.hashCode();","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"highorbit25"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":55,"author":{"gitId":"highorbit25"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"highorbit25"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"highorbit25"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":58,"author":{"gitId":"highorbit25"},"content":"    public String toString() {","lastModifiedDate":"2022-10-13"},{"lineNumber":59,"author":{"gitId":"highorbit25"},"content":"        return isDescending() ? \"descending\" : \"ascending\";","lastModifiedDate":"2022-10-15"},{"lineNumber":60,"author":{"gitId":"highorbit25"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":61,"author":{"gitId":"highorbit25"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"highorbit25":57,"comicalromance":4}},{"path":"src/main/java/seedu/studmap/model/student/Assignment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lpohsien"},"content":"package seedu.studmap.model.student;","lastModifiedDate":"2022-10-23"},{"lineNumber":2,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":3,"author":{"gitId":"Piyotato"},"content":"import seedu.studmap.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-11-07"},{"lineNumber":4,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":5,"author":{"gitId":"lpohsien"},"content":"/**","lastModifiedDate":"2022-10-23"},{"lineNumber":6,"author":{"gitId":"lpohsien"},"content":" * Represents an Assignment object in StudMap.","lastModifiedDate":"2022-10-23"},{"lineNumber":7,"author":{"gitId":"Piyotato"},"content":" * Guarantees: immutable; identifier is valid as declared in {@link #isValidAttributeIdentifier(String)} (String)}","lastModifiedDate":"2022-11-06"},{"lineNumber":8,"author":{"gitId":"lpohsien"},"content":" */","lastModifiedDate":"2022-10-23"},{"lineNumber":9,"author":{"gitId":"Piyotato"},"content":"public class Assignment extends MultiStateAttribute\u003cString, Assignment.Status\u003e {","lastModifiedDate":"2022-11-06"},{"lineNumber":10,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":11,"author":{"gitId":"lpohsien"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Assignment names should consist of \"","lastModifiedDate":"2022-10-23"},{"lineNumber":12,"author":{"gitId":"Piyotato"},"content":"            + \"alphanumerics, space, dash and underscore.\";","lastModifiedDate":"2022-11-01"},{"lineNumber":13,"author":{"gitId":"lpohsien"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum} \\\\-_]+\";","lastModifiedDate":"2022-10-23"},{"lineNumber":14,"author":{"gitId":"Piyotato"},"content":"    public static final String ASSIGNMENT_MARKED \u003d \"Marked\";","lastModifiedDate":"2022-11-06"},{"lineNumber":15,"author":{"gitId":"Piyotato"},"content":"    public static final String ASSIGNMENT_RECEIVED \u003d \"Received\";","lastModifiedDate":"2022-11-06"},{"lineNumber":16,"author":{"gitId":"Piyotato"},"content":"    public static final String ASSIGNMENT_NEW \u003d \"New\";","lastModifiedDate":"2022-11-06"},{"lineNumber":17,"author":{"gitId":"Piyotato"},"content":"    public static final String MESSAGE_STATUS_CONSTRAINTS \u003d \"Assignment marking status should be one of \"","lastModifiedDate":"2022-11-06"},{"lineNumber":18,"author":{"gitId":"Piyotato"},"content":"            + ASSIGNMENT_NEW + \", \" + ASSIGNMENT_RECEIVED + \" or \" + ASSIGNMENT_MARKED + \".\";","lastModifiedDate":"2022-11-07"},{"lineNumber":19,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":20,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":21,"author":{"gitId":"lpohsien"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":22,"author":{"gitId":"lpohsien"},"content":"     * Constructs an {@code Assignment} object.","lastModifiedDate":"2022-10-23"},{"lineNumber":23,"author":{"gitId":"lpohsien"},"content":"     *","lastModifiedDate":"2022-10-23"},{"lineNumber":24,"author":{"gitId":"Piyotato"},"content":"     * @param identifier A valid assignment name.","lastModifiedDate":"2022-11-06"},{"lineNumber":25,"author":{"gitId":"Piyotato"},"content":"     * @param state      A status representing whether the assignment has been marked","lastModifiedDate":"2022-11-06"},{"lineNumber":26,"author":{"gitId":"lpohsien"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":27,"author":{"gitId":"Piyotato"},"content":"    public Assignment(String identifier, Status state) {","lastModifiedDate":"2022-11-06"},{"lineNumber":28,"author":{"gitId":"Piyotato"},"content":"        super(identifier, state);","lastModifiedDate":"2022-11-06"},{"lineNumber":29,"author":{"gitId":"lpohsien"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":30,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":31,"author":{"gitId":"Piyotato"},"content":"    public static boolean isValidAssignmentName(String assignmentName) {","lastModifiedDate":"2022-11-06"},{"lineNumber":32,"author":{"gitId":"Piyotato"},"content":"        return assignmentName !\u003d null \u0026\u0026 assignmentName.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-11-06"},{"lineNumber":33,"author":{"gitId":"lpohsien"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":34,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":35,"author":{"gitId":"lpohsien"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":36,"author":{"gitId":"lpohsien"},"content":"     * Returns true if the given string is a valid marking status.","lastModifiedDate":"2022-10-23"},{"lineNumber":37,"author":{"gitId":"lpohsien"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":38,"author":{"gitId":"lpohsien"},"content":"    public static boolean isValidMarkingStatus(String test) {","lastModifiedDate":"2022-10-23"},{"lineNumber":39,"author":{"gitId":"lpohsien"},"content":"        return test.equals(ASSIGNMENT_MARKED)","lastModifiedDate":"2022-10-23"},{"lineNumber":40,"author":{"gitId":"lpohsien"},"content":"                || test.equals(ASSIGNMENT_RECEIVED)","lastModifiedDate":"2022-10-23"},{"lineNumber":41,"author":{"gitId":"lpohsien"},"content":"                || test.equals(ASSIGNMENT_NEW);","lastModifiedDate":"2022-10-23"},{"lineNumber":42,"author":{"gitId":"lpohsien"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":43,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":44,"author":{"gitId":"Piyotato"},"content":"    @Override","lastModifiedDate":"2022-11-06"},{"lineNumber":45,"author":{"gitId":"Piyotato"},"content":"    public boolean isValidAttributeIdentifier(String identifier) {","lastModifiedDate":"2022-11-06"},{"lineNumber":46,"author":{"gitId":"Piyotato"},"content":"        return isValidAssignmentName(identifier);","lastModifiedDate":"2022-11-06"},{"lineNumber":47,"author":{"gitId":"lpohsien"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":48,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":49,"author":{"gitId":"Piyotato"},"content":"    @Override","lastModifiedDate":"2022-11-06"},{"lineNumber":50,"author":{"gitId":"Piyotato"},"content":"    public String getIdentifierConstraintsMessage() {","lastModifiedDate":"2022-11-06"},{"lineNumber":51,"author":{"gitId":"Piyotato"},"content":"        return MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-11-06"},{"lineNumber":52,"author":{"gitId":"lpohsien"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":53,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":54,"author":{"gitId":"lpohsien"},"content":"    @Override","lastModifiedDate":"2022-10-23"},{"lineNumber":55,"author":{"gitId":"lpohsien"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-23"},{"lineNumber":56,"author":{"gitId":"lpohsien"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-23"},{"lineNumber":57,"author":{"gitId":"lpohsien"},"content":"                || (other instanceof Assignment // instanceof handles nulls","lastModifiedDate":"2022-10-23"},{"lineNumber":58,"author":{"gitId":"comicalromance"},"content":"                \u0026\u0026 identifier.equalsIgnoreCase(((Assignment) other).identifier)); // identifier check","lastModifiedDate":"2022-11-07"},{"lineNumber":59,"author":{"gitId":"lpohsien"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":60,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":61,"author":{"gitId":"lpohsien"},"content":"    @Override","lastModifiedDate":"2022-10-23"},{"lineNumber":62,"author":{"gitId":"lpohsien"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-23"},{"lineNumber":63,"author":{"gitId":"comicalromance"},"content":"        return identifier.toUpperCase().hashCode();","lastModifiedDate":"2022-11-07"},{"lineNumber":64,"author":{"gitId":"lpohsien"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":65,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":66,"author":{"gitId":"lpohsien"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":67,"author":{"gitId":"lpohsien"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2022-10-23"},{"lineNumber":68,"author":{"gitId":"lpohsien"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":69,"author":{"gitId":"lpohsien"},"content":"    public String toString() {","lastModifiedDate":"2022-10-23"},{"lineNumber":70,"author":{"gitId":"lpohsien"},"content":"        return \u0027[\u0027 + getString() + \u0027]\u0027;","lastModifiedDate":"2022-10-23"},{"lineNumber":71,"author":{"gitId":"lpohsien"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":72,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":73,"author":{"gitId":"Piyotato"},"content":"    /**","lastModifiedDate":"2022-11-06"},{"lineNumber":74,"author":{"gitId":"Piyotato"},"content":"     * Possible states of an Assignment.","lastModifiedDate":"2022-11-06"},{"lineNumber":75,"author":{"gitId":"Piyotato"},"content":"     */","lastModifiedDate":"2022-11-06"},{"lineNumber":76,"author":{"gitId":"Piyotato"},"content":"    public enum Status {","lastModifiedDate":"2022-11-06"},{"lineNumber":77,"author":{"gitId":"Piyotato"},"content":"        MARKED {","lastModifiedDate":"2022-11-06"},{"lineNumber":78,"author":{"gitId":"Piyotato"},"content":"            @Override","lastModifiedDate":"2022-11-06"},{"lineNumber":79,"author":{"gitId":"Piyotato"},"content":"            public String toString() {","lastModifiedDate":"2022-11-06"},{"lineNumber":80,"author":{"gitId":"Piyotato"},"content":"                return ASSIGNMENT_MARKED;","lastModifiedDate":"2022-11-06"},{"lineNumber":81,"author":{"gitId":"Piyotato"},"content":"            }","lastModifiedDate":"2022-11-06"},{"lineNumber":82,"author":{"gitId":"Piyotato"},"content":"        },","lastModifiedDate":"2022-11-06"},{"lineNumber":83,"author":{"gitId":"Piyotato"},"content":"        RECEIVED {","lastModifiedDate":"2022-11-06"},{"lineNumber":84,"author":{"gitId":"Piyotato"},"content":"            @Override","lastModifiedDate":"2022-11-06"},{"lineNumber":85,"author":{"gitId":"Piyotato"},"content":"            public String toString() {","lastModifiedDate":"2022-11-06"},{"lineNumber":86,"author":{"gitId":"Piyotato"},"content":"                return ASSIGNMENT_RECEIVED;","lastModifiedDate":"2022-11-06"},{"lineNumber":87,"author":{"gitId":"Piyotato"},"content":"            }","lastModifiedDate":"2022-11-06"},{"lineNumber":88,"author":{"gitId":"Piyotato"},"content":"        },","lastModifiedDate":"2022-11-06"},{"lineNumber":89,"author":{"gitId":"Piyotato"},"content":"        NEW {","lastModifiedDate":"2022-11-06"},{"lineNumber":90,"author":{"gitId":"Piyotato"},"content":"            @Override","lastModifiedDate":"2022-11-06"},{"lineNumber":91,"author":{"gitId":"Piyotato"},"content":"            public String toString() {","lastModifiedDate":"2022-11-06"},{"lineNumber":92,"author":{"gitId":"Piyotato"},"content":"                return ASSIGNMENT_NEW;","lastModifiedDate":"2022-11-06"},{"lineNumber":93,"author":{"gitId":"Piyotato"},"content":"            }","lastModifiedDate":"2022-11-06"},{"lineNumber":94,"author":{"gitId":"Piyotato"},"content":"        };","lastModifiedDate":"2022-11-06"},{"lineNumber":95,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":96,"author":{"gitId":"Piyotato"},"content":"        /**","lastModifiedDate":"2022-11-06"},{"lineNumber":97,"author":{"gitId":"Piyotato"},"content":"         * Translates a string value of {@code Status} to an enum value.","lastModifiedDate":"2022-11-06"},{"lineNumber":98,"author":{"gitId":"Piyotato"},"content":"         */","lastModifiedDate":"2022-11-06"},{"lineNumber":99,"author":{"gitId":"Piyotato"},"content":"        public static Status fromString(String value) throws IllegalValueException {","lastModifiedDate":"2022-11-07"},{"lineNumber":100,"author":{"gitId":"Piyotato"},"content":"            switch (value) {","lastModifiedDate":"2022-11-06"},{"lineNumber":101,"author":{"gitId":"Piyotato"},"content":"            case ASSIGNMENT_MARKED:","lastModifiedDate":"2022-11-06"},{"lineNumber":102,"author":{"gitId":"Piyotato"},"content":"                return MARKED;","lastModifiedDate":"2022-11-06"},{"lineNumber":103,"author":{"gitId":"Piyotato"},"content":"            case ASSIGNMENT_RECEIVED:","lastModifiedDate":"2022-11-06"},{"lineNumber":104,"author":{"gitId":"Piyotato"},"content":"                return RECEIVED;","lastModifiedDate":"2022-11-06"},{"lineNumber":105,"author":{"gitId":"Piyotato"},"content":"            case ASSIGNMENT_NEW:","lastModifiedDate":"2022-11-06"},{"lineNumber":106,"author":{"gitId":"Piyotato"},"content":"                return NEW;","lastModifiedDate":"2022-11-06"},{"lineNumber":107,"author":{"gitId":"Piyotato"},"content":"            default:","lastModifiedDate":"2022-11-06"},{"lineNumber":108,"author":{"gitId":"Piyotato"},"content":"                throw new IllegalValueException(MESSAGE_STATUS_CONSTRAINTS);","lastModifiedDate":"2022-11-07"},{"lineNumber":109,"author":{"gitId":"Piyotato"},"content":"            }","lastModifiedDate":"2022-11-06"},{"lineNumber":110,"author":{"gitId":"Piyotato"},"content":"        }","lastModifiedDate":"2022-11-06"},{"lineNumber":111,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":112,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":113,"author":{"gitId":"lpohsien"},"content":"}","lastModifiedDate":"2022-10-23"}],"authorContributionMap":{"Piyotato":62,"lpohsien":49,"comicalromance":2}},{"path":"src/main/java/seedu/studmap/model/student/AssignmentContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dr-arrgghh"},"content":"package seedu.studmap.model.student;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"dr-arrgghh"},"content":"import java.util.List;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"dr-arrgghh"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"dr-arrgghh"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"dr-arrgghh"},"content":"import seedu.studmap.commons.util.StringUtil;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"dr-arrgghh"},"content":"/**","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"dr-arrgghh"},"content":" * Tests that a {@code Student}\u0027s {@code Assignment} matches any of the keywords given.","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"dr-arrgghh"},"content":" */","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"dr-arrgghh"},"content":"public class AssignmentContainsKeywordsPredicate implements Predicate\u003cStudent\u003e {","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"dr-arrgghh"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"dr-arrgghh"},"content":"    public AssignmentContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"dr-arrgghh"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"dr-arrgghh"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"dr-arrgghh"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"dr-arrgghh"},"content":"    public boolean test(Student student) {","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"dr-arrgghh"},"content":"        Set\u003cAssignment\u003e assignmentSet \u003d student.getAssignments();","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"dr-arrgghh"},"content":"        for (Assignment assignment : assignmentSet) {","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"dr-arrgghh"},"content":"            if (keywords.stream().anyMatch(keywords -\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"Piyotato"},"content":"                    StringUtil.containsWordIgnoreCase(assignment.identifier, keywords))) {","lastModifiedDate":"2022-11-06"},{"lineNumber":25,"author":{"gitId":"dr-arrgghh"},"content":"                return true;","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"dr-arrgghh"},"content":"            }","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"dr-arrgghh"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"dr-arrgghh"},"content":"        return false;","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"dr-arrgghh"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"dr-arrgghh"},"content":"}","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"dr-arrgghh":29,"Piyotato":1}},{"path":"src/main/java/seedu/studmap/model/student/Attendance.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.model.student;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"comicalromance"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"comicalromance"},"content":" * Represents an Attendance object in StudMap.","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"comicalromance"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidClassName(String)}","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"comicalromance"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"Piyotato"},"content":"public class Attendance extends MultiStateAttribute\u003cString, Attendance.Status\u003e {","lastModifiedDate":"2022-11-06"},{"lineNumber":8,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"comicalromance"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Class names should consist of \"","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"Piyotato"},"content":"            + \"alphanumerics, space, dash and underscore.\";","lastModifiedDate":"2022-11-01"},{"lineNumber":11,"author":{"gitId":"Piyotato"},"content":"    public static final String MESSAGE_STATUS_CONSTRAINTS \u003d \"Option must either be \u0027present\u0027 or \u0027absent\u0027 for \"","lastModifiedDate":"2022-11-06"},{"lineNumber":12,"author":{"gitId":"Piyotato"},"content":"            + \"attendance\";","lastModifiedDate":"2022-11-06"},{"lineNumber":13,"author":{"gitId":"comicalromance"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum} \\\\-_]+\";","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"comicalromance"},"content":"    public static final String ATTENDANCE_TRUE \u003d \"Present\";","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"comicalromance"},"content":"    public static final String ATTENDANCE_FALSE \u003d \"Absent\";","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"comicalromance"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"comicalromance"},"content":"     * Constructs an {@code Attendance} object.","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"comicalromance"},"content":"     *","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"Piyotato"},"content":"     * @param className A valid class name.","lastModifiedDate":"2022-11-06"},{"lineNumber":21,"author":{"gitId":"Piyotato"},"content":"     * @param status    Attendance status.","lastModifiedDate":"2022-11-06"},{"lineNumber":22,"author":{"gitId":"comicalromance"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"Piyotato"},"content":"    public Attendance(String className, Status status) {","lastModifiedDate":"2022-11-06"},{"lineNumber":24,"author":{"gitId":"Piyotato"},"content":"        super(className, status);","lastModifiedDate":"2022-11-06"},{"lineNumber":25,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"comicalromance"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"comicalromance"},"content":"     * Returns true if a given string is a valid class name.","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"comicalromance"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"comicalromance"},"content":"    public static boolean isValidClassName(String test) {","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"comicalromance"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"Piyotato"},"content":"    @Override","lastModifiedDate":"2022-11-06"},{"lineNumber":35,"author":{"gitId":"Piyotato"},"content":"    public boolean isValidAttributeIdentifier(String identifier) {","lastModifiedDate":"2022-11-06"},{"lineNumber":36,"author":{"gitId":"Piyotato"},"content":"        return isValidClassName(identifier);","lastModifiedDate":"2022-11-06"},{"lineNumber":37,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":38,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":39,"author":{"gitId":"Piyotato"},"content":"    @Override","lastModifiedDate":"2022-11-06"},{"lineNumber":40,"author":{"gitId":"Piyotato"},"content":"    public String getIdentifierConstraintsMessage() {","lastModifiedDate":"2022-11-06"},{"lineNumber":41,"author":{"gitId":"Piyotato"},"content":"        return MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-11-06"},{"lineNumber":42,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"comicalromance"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"comicalromance"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"comicalromance"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"comicalromance"},"content":"                || (other instanceof Attendance // instanceof handles nulls","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"comicalromance"},"content":"                \u0026\u0026 identifier.equalsIgnoreCase(((Attendance) other).identifier)); // identifier check","lastModifiedDate":"2022-11-07"},{"lineNumber":49,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"comicalromance"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"comicalromance"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"comicalromance"},"content":"        return identifier.toUpperCase().hashCode();","lastModifiedDate":"2022-11-07"},{"lineNumber":54,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"comicalromance"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":57,"author":{"gitId":"Piyotato"},"content":"     * Possible states of an Attendance.","lastModifiedDate":"2022-11-06"},{"lineNumber":58,"author":{"gitId":"comicalromance"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"Piyotato"},"content":"    public enum Status {","lastModifiedDate":"2022-11-06"},{"lineNumber":60,"author":{"gitId":"Piyotato"},"content":"        PRESENT {","lastModifiedDate":"2022-11-06"},{"lineNumber":61,"author":{"gitId":"Piyotato"},"content":"            @Override","lastModifiedDate":"2022-11-06"},{"lineNumber":62,"author":{"gitId":"comicalromance"},"content":"            public String toString() {","lastModifiedDate":"2022-10-09"},{"lineNumber":63,"author":{"gitId":"Piyotato"},"content":"                return ATTENDANCE_TRUE;","lastModifiedDate":"2022-11-06"},{"lineNumber":64,"author":{"gitId":"Piyotato"},"content":"            }","lastModifiedDate":"2022-11-06"},{"lineNumber":65,"author":{"gitId":"Piyotato"},"content":"        },","lastModifiedDate":"2022-11-06"},{"lineNumber":66,"author":{"gitId":"Piyotato"},"content":"        ABSENT {","lastModifiedDate":"2022-11-06"},{"lineNumber":67,"author":{"gitId":"Piyotato"},"content":"            @Override","lastModifiedDate":"2022-11-06"},{"lineNumber":68,"author":{"gitId":"Piyotato"},"content":"            public String toString() {","lastModifiedDate":"2022-11-06"},{"lineNumber":69,"author":{"gitId":"Piyotato"},"content":"                return ATTENDANCE_FALSE;","lastModifiedDate":"2022-11-06"},{"lineNumber":70,"author":{"gitId":"Piyotato"},"content":"            }","lastModifiedDate":"2022-11-06"},{"lineNumber":71,"author":{"gitId":"Piyotato"},"content":"        };","lastModifiedDate":"2022-11-06"},{"lineNumber":72,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":73,"author":{"gitId":"Piyotato"},"content":"        /**","lastModifiedDate":"2022-11-06"},{"lineNumber":74,"author":{"gitId":"Piyotato"},"content":"         * Translates a string value of {@code Status} to an enum value.","lastModifiedDate":"2022-11-06"},{"lineNumber":75,"author":{"gitId":"Piyotato"},"content":"         */","lastModifiedDate":"2022-11-06"},{"lineNumber":76,"author":{"gitId":"Piyotato"},"content":"        public static Status fromString(String value) throws IllegalArgumentException {","lastModifiedDate":"2022-11-06"},{"lineNumber":77,"author":{"gitId":"Piyotato"},"content":"            switch (value) {","lastModifiedDate":"2022-11-06"},{"lineNumber":78,"author":{"gitId":"Piyotato"},"content":"            case ATTENDANCE_TRUE:","lastModifiedDate":"2022-11-06"},{"lineNumber":79,"author":{"gitId":"Piyotato"},"content":"                return PRESENT;","lastModifiedDate":"2022-11-06"},{"lineNumber":80,"author":{"gitId":"Piyotato"},"content":"            case ATTENDANCE_FALSE:","lastModifiedDate":"2022-11-06"},{"lineNumber":81,"author":{"gitId":"Piyotato"},"content":"                return ABSENT;","lastModifiedDate":"2022-11-06"},{"lineNumber":82,"author":{"gitId":"Piyotato"},"content":"            default:","lastModifiedDate":"2022-11-06"},{"lineNumber":83,"author":{"gitId":"Piyotato"},"content":"                throw new IllegalArgumentException(MESSAGE_STATUS_CONSTRAINTS);","lastModifiedDate":"2022-11-06"},{"lineNumber":84,"author":{"gitId":"Piyotato"},"content":"            }","lastModifiedDate":"2022-11-06"},{"lineNumber":85,"author":{"gitId":"Piyotato"},"content":"        }","lastModifiedDate":"2022-11-06"},{"lineNumber":86,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":87,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":88,"author":{"gitId":"comicalromance"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"Piyotato":43,"comicalromance":45}},{"path":"src/main/java/seedu/studmap/model/student/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.model.student;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"comicalromance"},"content":" * Represents a Student\u0027s email in the student map.","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"Piyotato"},"content":"    public static final String NO_EMAIL_STRING \u003d \"No Email\";","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"Piyotato"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":39,"author":{"gitId":"Piyotato"},"content":"     * Constructs an empty {@code Email}.","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"Piyotato"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":41,"author":{"gitId":"Piyotato"},"content":"    public Email() {","lastModifiedDate":"2022-10-26"},{"lineNumber":42,"author":{"gitId":"Piyotato"},"content":"        value \u003d \"\";","lastModifiedDate":"2022-10-26"},{"lineNumber":43,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":44,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"comicalromance"},"content":"     * @param email A valid email studmap.","lastModifiedDate":"2022-10-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"Piyotato"},"content":"        return test.isEmpty() || test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"Piyotato"},"content":"        return value.isEmpty()","lastModifiedDate":"2022-10-26"},{"lineNumber":66,"author":{"gitId":"Piyotato"},"content":"                ? NO_EMAIL_STRING","lastModifiedDate":"2022-10-26"},{"lineNumber":67,"author":{"gitId":"Piyotato"},"content":"                : value;","lastModifiedDate":"2022-10-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"highorbit25"},"content":"    /**","lastModifiedDate":"2022-11-03"},{"lineNumber":71,"author":{"gitId":"highorbit25"},"content":"     * Returns string used for sorting email.","lastModifiedDate":"2022-11-03"},{"lineNumber":72,"author":{"gitId":"highorbit25"},"content":"     */","lastModifiedDate":"2022-11-03"},{"lineNumber":73,"author":{"gitId":"highorbit25"},"content":"    public String toCmpString() {","lastModifiedDate":"2022-11-03"},{"lineNumber":74,"author":{"gitId":"highorbit25"},"content":"        return this.value.isEmpty()","lastModifiedDate":"2022-11-03"},{"lineNumber":75,"author":{"gitId":"highorbit25"},"content":"               ? null","lastModifiedDate":"2022-11-03"},{"lineNumber":76,"author":{"gitId":"highorbit25"},"content":"               : value;","lastModifiedDate":"2022-11-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-11-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"highorbit25":7,"Piyotato":13,"-":67,"comicalromance":4}},{"path":"src/main/java/seedu/studmap/model/student/GitName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dr-arrgghh"},"content":"package seedu.studmap.model.student;","lastModifiedDate":"2022-10-25"},{"lineNumber":2,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":3,"author":{"gitId":"dr-arrgghh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"dr-arrgghh"},"content":"import static seedu.studmap.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"dr-arrgghh"},"content":"/**","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"dr-arrgghh"},"content":" * Represents a Student\u0027s git username in the student map.","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"dr-arrgghh"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidGitName(String)}","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"dr-arrgghh"},"content":" */","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"dr-arrgghh"},"content":"public class GitName {","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":12,"author":{"gitId":"Piyotato"},"content":"    public static final String NO_GITNAME_STRING \u003d \"No GitHub username\";","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"comicalromance"},"content":"    public static final String GITNAME_DISPLAY_PREFIX \u003d \"GitHub: \";","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"Piyotato"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Github username can be anything.\";","lastModifiedDate":"2022-11-01"},{"lineNumber":17,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"dr-arrgghh"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{all}]*\";","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"dr-arrgghh"},"content":"    public final String value;","lastModifiedDate":"2022-10-25"},{"lineNumber":21,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":22,"author":{"gitId":"Piyotato"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"Piyotato"},"content":"     * Constructs an empty {@code GitName}.","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"Piyotato"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"Piyotato"},"content":"    public GitName() {","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"Piyotato"},"content":"        this.value \u003d \"\";","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"dr-arrgghh"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"dr-arrgghh"},"content":"     * Constructs a {@code GitName}.","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"dr-arrgghh"},"content":"     *","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"dr-arrgghh"},"content":"     * @param username A valid name.","lastModifiedDate":"2022-10-26"},{"lineNumber":33,"author":{"gitId":"dr-arrgghh"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"dr-arrgghh"},"content":"    public GitName(String username) {","lastModifiedDate":"2022-10-25"},{"lineNumber":35,"author":{"gitId":"dr-arrgghh"},"content":"        requireNonNull(username);","lastModifiedDate":"2022-10-25"},{"lineNumber":36,"author":{"gitId":"dr-arrgghh"},"content":"        checkArgument(isValidGitName(username), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-25"},{"lineNumber":37,"author":{"gitId":"dr-arrgghh"},"content":"        this.value \u003d username;","lastModifiedDate":"2022-10-25"},{"lineNumber":38,"author":{"gitId":"dr-arrgghh"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":39,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":40,"author":{"gitId":"comicalromance"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":41,"author":{"gitId":"comicalromance"},"content":"     * Returns string used for display in UI.","lastModifiedDate":"2022-10-27"},{"lineNumber":42,"author":{"gitId":"comicalromance"},"content":"     *","lastModifiedDate":"2022-10-27"},{"lineNumber":43,"author":{"gitId":"comicalromance"},"content":"     * @return String to be displayed","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"comicalromance"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"comicalromance"},"content":"    public String getDisplayString() {","lastModifiedDate":"2022-10-27"},{"lineNumber":46,"author":{"gitId":"comicalromance"},"content":"        return this.value.isEmpty()","lastModifiedDate":"2022-10-27"},{"lineNumber":47,"author":{"gitId":"comicalromance"},"content":"                ? NO_GITNAME_STRING","lastModifiedDate":"2022-10-27"},{"lineNumber":48,"author":{"gitId":"comicalromance"},"content":"                : GITNAME_DISPLAY_PREFIX + value;","lastModifiedDate":"2022-10-27"},{"lineNumber":49,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":50,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":51,"author":{"gitId":"dr-arrgghh"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":52,"author":{"gitId":"dr-arrgghh"},"content":"     * Returns true if a given string is a valid git username.","lastModifiedDate":"2022-10-26"},{"lineNumber":53,"author":{"gitId":"dr-arrgghh"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":54,"author":{"gitId":"dr-arrgghh"},"content":"    public static boolean isValidGitName(String test) {","lastModifiedDate":"2022-10-25"},{"lineNumber":55,"author":{"gitId":"Piyotato"},"content":"        return test.isEmpty() || test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-26"},{"lineNumber":56,"author":{"gitId":"dr-arrgghh"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":57,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":58,"author":{"gitId":"dr-arrgghh"},"content":"    @Override","lastModifiedDate":"2022-10-25"},{"lineNumber":59,"author":{"gitId":"dr-arrgghh"},"content":"    public String toString() {","lastModifiedDate":"2022-10-25"},{"lineNumber":60,"author":{"gitId":"Piyotato"},"content":"        return this.value.isEmpty()","lastModifiedDate":"2022-10-26"},{"lineNumber":61,"author":{"gitId":"Piyotato"},"content":"                ? NO_GITNAME_STRING","lastModifiedDate":"2022-10-26"},{"lineNumber":62,"author":{"gitId":"Piyotato"},"content":"                : value;","lastModifiedDate":"2022-10-26"},{"lineNumber":63,"author":{"gitId":"dr-arrgghh"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":64,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":65,"author":{"gitId":"highorbit25"},"content":"    /**","lastModifiedDate":"2022-11-03"},{"lineNumber":66,"author":{"gitId":"highorbit25"},"content":"     * Returns string used for sorting GitName","lastModifiedDate":"2022-11-03"},{"lineNumber":67,"author":{"gitId":"highorbit25"},"content":"     */","lastModifiedDate":"2022-11-03"},{"lineNumber":68,"author":{"gitId":"highorbit25"},"content":"    public String toCmpString() {","lastModifiedDate":"2022-11-03"},{"lineNumber":69,"author":{"gitId":"highorbit25"},"content":"        return this.value.isEmpty()","lastModifiedDate":"2022-11-03"},{"lineNumber":70,"author":{"gitId":"highorbit25"},"content":"               ? null","lastModifiedDate":"2022-11-03"},{"lineNumber":71,"author":{"gitId":"highorbit25"},"content":"               : value;","lastModifiedDate":"2022-11-03"},{"lineNumber":72,"author":{"gitId":"highorbit25"},"content":"    }","lastModifiedDate":"2022-11-03"},{"lineNumber":73,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":74,"author":{"gitId":"dr-arrgghh"},"content":"    @Override","lastModifiedDate":"2022-10-25"},{"lineNumber":75,"author":{"gitId":"dr-arrgghh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-25"},{"lineNumber":76,"author":{"gitId":"dr-arrgghh"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-25"},{"lineNumber":77,"author":{"gitId":"dr-arrgghh"},"content":"                || (other instanceof GitName // instanceof handles nulls","lastModifiedDate":"2022-10-25"},{"lineNumber":78,"author":{"gitId":"dr-arrgghh"},"content":"                \u0026\u0026 value.equals(((GitName) other).value)); // state check","lastModifiedDate":"2022-10-25"},{"lineNumber":79,"author":{"gitId":"dr-arrgghh"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":80,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":81,"author":{"gitId":"dr-arrgghh"},"content":"    @Override","lastModifiedDate":"2022-10-25"},{"lineNumber":82,"author":{"gitId":"dr-arrgghh"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-25"},{"lineNumber":83,"author":{"gitId":"dr-arrgghh"},"content":"        return this.value.hashCode();","lastModifiedDate":"2022-10-25"},{"lineNumber":84,"author":{"gitId":"dr-arrgghh"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":85,"author":{"gitId":"dr-arrgghh"},"content":"}","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"highorbit25":9,"dr-arrgghh":49,"Piyotato":14,"comicalromance":13}},{"path":"src/main/java/seedu/studmap/model/student/Module.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.model.student;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":3,"author":{"gitId":"comicalromance"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"comicalromance"},"content":"/**","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"comicalromance"},"content":" * Represents a Student\u0027s module in the student map.","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"comicalromance"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidModule(String)}","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"comicalromance"},"content":" */","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"comicalromance"},"content":"public class Module {","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"comicalromance"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Module must start with letters and contain \"","lastModifiedDate":"2022-11-07"},{"lineNumber":13,"author":{"gitId":"comicalromance"},"content":"            + \"4 numbers after, with an optional character prefix.\";","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"comicalromance"},"content":"    public static final String VALIDATION_REGEX \u003d \"[A-Z]+\\\\d{4}[A-Z]?\";","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"comicalromance"},"content":"    public final String value;","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"comicalromance"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"comicalromance"},"content":"     * Constructs a {@code Module}.","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"comicalromance"},"content":"     *","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"comicalromance"},"content":"     * @param module A valid module.","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"comicalromance"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"comicalromance"},"content":"    public Module(String module) {","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"comicalromance"},"content":"        requireNonNull(module);","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"comicalromance"},"content":"        checkArgument(isValidModule(module), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"comicalromance"},"content":"        this.value \u003d module;","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"comicalromance"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"comicalromance"},"content":"     * Returns true if a given string is a valid module.","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"comicalromance"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":33,"author":{"gitId":"comicalromance"},"content":"    public static boolean isValidModule(String test) {","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"comicalromance"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":36,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":37,"author":{"gitId":"comicalromance"},"content":"    @Override","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"comicalromance"},"content":"    public String toString() {","lastModifiedDate":"2022-10-26"},{"lineNumber":39,"author":{"gitId":"comicalromance"},"content":"        return this.value;","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":41,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":42,"author":{"gitId":"highorbit25"},"content":"    /**","lastModifiedDate":"2022-11-03"},{"lineNumber":43,"author":{"gitId":"highorbit25"},"content":"     * Returns string used for sorting module.","lastModifiedDate":"2022-11-03"},{"lineNumber":44,"author":{"gitId":"highorbit25"},"content":"     */","lastModifiedDate":"2022-11-03"},{"lineNumber":45,"author":{"gitId":"highorbit25"},"content":"    public String toCmpString() {","lastModifiedDate":"2022-11-03"},{"lineNumber":46,"author":{"gitId":"highorbit25"},"content":"        return this.value.isEmpty()","lastModifiedDate":"2022-11-03"},{"lineNumber":47,"author":{"gitId":"highorbit25"},"content":"               ? null","lastModifiedDate":"2022-11-03"},{"lineNumber":48,"author":{"gitId":"highorbit25"},"content":"               : value;","lastModifiedDate":"2022-11-03"},{"lineNumber":49,"author":{"gitId":"highorbit25"},"content":"    }","lastModifiedDate":"2022-11-03"},{"lineNumber":50,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":51,"author":{"gitId":"comicalromance"},"content":"    @Override","lastModifiedDate":"2022-10-26"},{"lineNumber":52,"author":{"gitId":"comicalromance"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-26"},{"lineNumber":53,"author":{"gitId":"comicalromance"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-26"},{"lineNumber":54,"author":{"gitId":"comicalromance"},"content":"                || (other instanceof Module // instanceof handles nulls","lastModifiedDate":"2022-10-26"},{"lineNumber":55,"author":{"gitId":"comicalromance"},"content":"                \u0026\u0026 value.equals(((Module) other).value)); // state check","lastModifiedDate":"2022-10-26"},{"lineNumber":56,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":57,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":58,"author":{"gitId":"comicalromance"},"content":"    @Override","lastModifiedDate":"2022-10-26"},{"lineNumber":59,"author":{"gitId":"comicalromance"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-26"},{"lineNumber":60,"author":{"gitId":"comicalromance"},"content":"        return this.value.hashCode();","lastModifiedDate":"2022-10-26"},{"lineNumber":61,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":62,"author":{"gitId":"comicalromance"},"content":"}","lastModifiedDate":"2022-10-26"}],"authorContributionMap":{"highorbit25":9,"comicalromance":53}},{"path":"src/main/java/seedu/studmap/model/student/ModuleContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dr-arrgghh"},"content":"package seedu.studmap.model.student;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"dr-arrgghh"},"content":"import java.util.List;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"dr-arrgghh"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"dr-arrgghh"},"content":"import seedu.studmap.commons.util.StringUtil;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"dr-arrgghh"},"content":"/**","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"dr-arrgghh"},"content":" * Tests that a {@code Student}\u0027s {@code Module} matches any of the keywords given.","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"dr-arrgghh"},"content":" */","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"dr-arrgghh"},"content":"public class ModuleContainsKeywordsPredicate implements Predicate\u003cStudent\u003e {","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"dr-arrgghh"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"dr-arrgghh"},"content":"    public ModuleContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"dr-arrgghh"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"dr-arrgghh"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"dr-arrgghh"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"dr-arrgghh"},"content":"    public boolean test(Student student) {","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"dr-arrgghh"},"content":"        return keywords.stream()","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"dr-arrgghh"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(student.getModule().value, keyword));","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"dr-arrgghh"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"dr-arrgghh"},"content":"}","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"dr-arrgghh":22}},{"path":"src/main/java/seedu/studmap/model/student/MultiStateAttribute.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Piyotato"},"content":"package seedu.studmap.model.student;","lastModifiedDate":"2022-11-06"},{"lineNumber":2,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":3,"author":{"gitId":"Piyotato"},"content":"import static seedu.studmap.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-11-06"},{"lineNumber":4,"author":{"gitId":"Piyotato"},"content":"import static seedu.studmap.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-11-06"},{"lineNumber":5,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":6,"author":{"gitId":"Piyotato"},"content":"/**","lastModifiedDate":"2022-11-06"},{"lineNumber":7,"author":{"gitId":"Piyotato"},"content":" * Abstract class to generalize the idea of an attribute with an identifier that also bears a state.","lastModifiedDate":"2022-11-06"},{"lineNumber":8,"author":{"gitId":"Piyotato"},"content":" * Guarantees: Is immutable.","lastModifiedDate":"2022-11-06"},{"lineNumber":9,"author":{"gitId":"Piyotato"},"content":" * @param \u003cS\u003e Type of the identifier, e.g. String.","lastModifiedDate":"2022-11-06"},{"lineNumber":10,"author":{"gitId":"Piyotato"},"content":" * @param \u003cT\u003e Type of the state.","lastModifiedDate":"2022-11-06"},{"lineNumber":11,"author":{"gitId":"Piyotato"},"content":" */","lastModifiedDate":"2022-11-06"},{"lineNumber":12,"author":{"gitId":"Piyotato"},"content":"public abstract class MultiStateAttribute\u003cS, T\u003e {","lastModifiedDate":"2022-11-06"},{"lineNumber":13,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":14,"author":{"gitId":"Piyotato"},"content":"    public final S identifier;","lastModifiedDate":"2022-11-06"},{"lineNumber":15,"author":{"gitId":"Piyotato"},"content":"    public final T state;","lastModifiedDate":"2022-11-06"},{"lineNumber":16,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":17,"author":{"gitId":"Piyotato"},"content":"    /**","lastModifiedDate":"2022-11-06"},{"lineNumber":18,"author":{"gitId":"Piyotato"},"content":"     * Constructor for MultiStateAttribute.","lastModifiedDate":"2022-11-06"},{"lineNumber":19,"author":{"gitId":"Piyotato"},"content":"     * @param identifier Identifier for this attribute.","lastModifiedDate":"2022-11-06"},{"lineNumber":20,"author":{"gitId":"Piyotato"},"content":"     * @param state State of this attribute.","lastModifiedDate":"2022-11-06"},{"lineNumber":21,"author":{"gitId":"Piyotato"},"content":"     */","lastModifiedDate":"2022-11-06"},{"lineNumber":22,"author":{"gitId":"Piyotato"},"content":"    public MultiStateAttribute(S identifier, T state) {","lastModifiedDate":"2022-11-06"},{"lineNumber":23,"author":{"gitId":"Piyotato"},"content":"        requireAllNonNull(identifier, state);","lastModifiedDate":"2022-11-06"},{"lineNumber":24,"author":{"gitId":"Piyotato"},"content":"        checkArgument(isValidAttributeIdentifier(identifier), getIdentifierConstraintsMessage());","lastModifiedDate":"2022-11-06"},{"lineNumber":25,"author":{"gitId":"Piyotato"},"content":"        this.identifier \u003d identifier;","lastModifiedDate":"2022-11-06"},{"lineNumber":26,"author":{"gitId":"Piyotato"},"content":"        this.state \u003d state;","lastModifiedDate":"2022-11-06"},{"lineNumber":27,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":28,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":29,"author":{"gitId":"Piyotato"},"content":"    /**","lastModifiedDate":"2022-11-06"},{"lineNumber":30,"author":{"gitId":"Piyotato"},"content":"     * Checks equality with another MultiStateAttribute with the same type parameters.","lastModifiedDate":"2022-11-06"},{"lineNumber":31,"author":{"gitId":"Piyotato"},"content":"     * Has additional requirement that the states are equal.","lastModifiedDate":"2022-11-06"},{"lineNumber":32,"author":{"gitId":"Piyotato"},"content":"     */","lastModifiedDate":"2022-11-06"},{"lineNumber":33,"author":{"gitId":"Piyotato"},"content":"    public boolean strongEquals(MultiStateAttribute\u003cS, T\u003e other) {","lastModifiedDate":"2022-11-06"},{"lineNumber":34,"author":{"gitId":"Piyotato"},"content":"        return equals(other) \u0026\u0026 this.state.equals(other.state);","lastModifiedDate":"2022-11-06"},{"lineNumber":35,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":36,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":37,"author":{"gitId":"Piyotato"},"content":"    /**","lastModifiedDate":"2022-11-06"},{"lineNumber":38,"author":{"gitId":"Piyotato"},"content":"     * Checks equality of identifier with another.","lastModifiedDate":"2022-11-06"},{"lineNumber":39,"author":{"gitId":"Piyotato"},"content":"     */","lastModifiedDate":"2022-11-06"},{"lineNumber":40,"author":{"gitId":"Piyotato"},"content":"    public abstract boolean isValidAttributeIdentifier(S identifier);","lastModifiedDate":"2022-11-06"},{"lineNumber":41,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":42,"author":{"gitId":"Piyotato"},"content":"    /**","lastModifiedDate":"2022-11-06"},{"lineNumber":43,"author":{"gitId":"Piyotato"},"content":"     * Returns a message that describes the constraints of the identifier.","lastModifiedDate":"2022-11-06"},{"lineNumber":44,"author":{"gitId":"Piyotato"},"content":"     */","lastModifiedDate":"2022-11-06"},{"lineNumber":45,"author":{"gitId":"Piyotato"},"content":"    public abstract String getIdentifierConstraintsMessage();","lastModifiedDate":"2022-11-06"},{"lineNumber":46,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":47,"author":{"gitId":"Piyotato"},"content":"    public String getString() {","lastModifiedDate":"2022-11-06"},{"lineNumber":48,"author":{"gitId":"Piyotato"},"content":"        return identifier + \":\" + state;","lastModifiedDate":"2022-11-06"},{"lineNumber":49,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":50,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":51,"author":{"gitId":"Piyotato"},"content":"    /**","lastModifiedDate":"2022-11-06"},{"lineNumber":52,"author":{"gitId":"Piyotato"},"content":"     * Returns a human-readable format of the identifier.","lastModifiedDate":"2022-11-06"},{"lineNumber":53,"author":{"gitId":"Piyotato"},"content":"     */","lastModifiedDate":"2022-11-06"},{"lineNumber":54,"author":{"gitId":"Piyotato"},"content":"    public String getAttributeName() {","lastModifiedDate":"2022-11-06"},{"lineNumber":55,"author":{"gitId":"Piyotato"},"content":"        return identifier.toString();","lastModifiedDate":"2022-11-06"},{"lineNumber":56,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":57,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":58,"author":{"gitId":"Piyotato"},"content":"    @Override","lastModifiedDate":"2022-11-06"},{"lineNumber":59,"author":{"gitId":"Piyotato"},"content":"    public String toString() {","lastModifiedDate":"2022-11-06"},{"lineNumber":60,"author":{"gitId":"Piyotato"},"content":"        return \"[\" + getString() + \"]\";","lastModifiedDate":"2022-11-06"},{"lineNumber":61,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":62,"author":{"gitId":"Piyotato"},"content":"}","lastModifiedDate":"2022-11-06"}],"authorContributionMap":{"Piyotato":62}},{"path":"src/main/java/seedu/studmap/model/student/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.model.student;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"comicalromance"},"content":" * Represents a Student\u0027s name in the student map.","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"Piyotato"},"content":"            \"Names should not contain any illegal whitespace characters and should not be blank.\";","lastModifiedDate":"2022-11-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"Piyotato"},"content":"     * The first character of the name must not be a whitespace,","lastModifiedDate":"2022-11-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"Piyotato"},"content":"    public static final String VALIDATION_REGEX \u003d \"^\\\\S[\\\\S ]*\";","lastModifiedDate":"2022-11-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"highorbit25"},"content":"    /**","lastModifiedDate":"2022-11-03"},{"lineNumber":48,"author":{"gitId":"highorbit25"},"content":"     * Returns string used for sorting name.","lastModifiedDate":"2022-11-03"},{"lineNumber":49,"author":{"gitId":"highorbit25"},"content":"     */","lastModifiedDate":"2022-11-03"},{"lineNumber":50,"author":{"gitId":"highorbit25"},"content":"    public String toCmpString() {","lastModifiedDate":"2022-11-03"},{"lineNumber":51,"author":{"gitId":"highorbit25"},"content":"        return this.fullName.isEmpty()","lastModifiedDate":"2022-11-03"},{"lineNumber":52,"author":{"gitId":"highorbit25"},"content":"               ? null","lastModifiedDate":"2022-11-03"},{"lineNumber":53,"author":{"gitId":"highorbit25"},"content":"               : fullName;","lastModifiedDate":"2022-11-03"},{"lineNumber":54,"author":{"gitId":"highorbit25"},"content":"    }","lastModifiedDate":"2022-11-03"},{"lineNumber":55,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":56,"author":{"gitId":"Piyotato"},"content":"    /**","lastModifiedDate":"2022-11-06"},{"lineNumber":57,"author":{"gitId":"Piyotato"},"content":"     * Compares equality to another {@code Name}.","lastModifiedDate":"2022-11-06"},{"lineNumber":58,"author":{"gitId":"Piyotato"},"content":"     * @param other Other {@code Name} to compare.","lastModifiedDate":"2022-11-06"},{"lineNumber":59,"author":{"gitId":"Piyotato"},"content":"     * @return True if full names are equal, ignoring case.","lastModifiedDate":"2022-11-06"},{"lineNumber":60,"author":{"gitId":"Piyotato"},"content":"     */","lastModifiedDate":"2022-11-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"Piyotato"},"content":"                \u0026\u0026 fullName.equalsIgnoreCase(((Name) other).fullName)); // state check","lastModifiedDate":"2022-11-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"highorbit25":9,"Piyotato":9,"-":52,"comicalromance":3}},{"path":"src/main/java/seedu/studmap/model/student/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.model.student;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.commons.util.StringUtil;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"comicalromance"},"content":" * Tests that a {@code Student}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"comicalromance"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cStudent\u003e {","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"comicalromance"},"content":"    public boolean test(Student student) {","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"comicalromance"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(student.getName().fullName, keyword));","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"dr-arrgghh":1,"-":25,"comicalromance":6}},{"path":"src/main/java/seedu/studmap/model/student/Participation.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"highorbit25"},"content":"package seedu.studmap.model.student;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"highorbit25"},"content":"/**","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"highorbit25"},"content":" * Represents a Participation object in StudMap.","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"highorbit25"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidParticipationName(String)}","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"highorbit25"},"content":" */","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"Piyotato"},"content":"public class Participation extends MultiStateAttribute\u003cString, Participation.Status\u003e {","lastModifiedDate":"2022-11-06"},{"lineNumber":8,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"highorbit25"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Participation component should consist of \"","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"Piyotato"},"content":"            + \"alphanumerics, space, dash and underscore.\";","lastModifiedDate":"2022-11-01"},{"lineNumber":11,"author":{"gitId":"highorbit25"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum} \\\\-_]+\";","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"highorbit25"},"content":"    public static final String PARTICIPATION_TRUE \u003d \"Participated\";","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"highorbit25"},"content":"    public static final String PARTICIPATION_FALSE \u003d \"Did not participate\";","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"Piyotato"},"content":"    public static final String MESSAGE_STATUS_CONSTRAINTS \u003d","lastModifiedDate":"2022-11-06"},{"lineNumber":15,"author":{"gitId":"Piyotato"},"content":"            \"Status must be \" + PARTICIPATION_TRUE + \" or \" + PARTICIPATION_FALSE + \".\";","lastModifiedDate":"2022-11-06"},{"lineNumber":16,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"highorbit25"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"highorbit25"},"content":"     * Constructs an {@code Participation} object.","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"highorbit25"},"content":"     *","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"Piyotato"},"content":"     * @param identifier A valid participation component name.","lastModifiedDate":"2022-11-06"},{"lineNumber":21,"author":{"gitId":"Piyotato"},"content":"     * @param status     Participation status.","lastModifiedDate":"2022-11-06"},{"lineNumber":22,"author":{"gitId":"highorbit25"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"Piyotato"},"content":"    public Participation(String identifier, Participation.Status status) {","lastModifiedDate":"2022-11-06"},{"lineNumber":24,"author":{"gitId":"Piyotato"},"content":"        super(identifier, status);","lastModifiedDate":"2022-11-06"},{"lineNumber":25,"author":{"gitId":"highorbit25"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"highorbit25"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"highorbit25"},"content":"     * Returns true if a given string is a valid participation component name.","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"highorbit25"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"highorbit25"},"content":"    public static boolean isValidParticipationName(String test) {","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"highorbit25"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"highorbit25"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":34,"author":{"gitId":"Piyotato"},"content":"    @Override","lastModifiedDate":"2022-11-06"},{"lineNumber":35,"author":{"gitId":"Piyotato"},"content":"    public boolean isValidAttributeIdentifier(String identifier) {","lastModifiedDate":"2022-11-06"},{"lineNumber":36,"author":{"gitId":"Piyotato"},"content":"        return isValidParticipationName(identifier);","lastModifiedDate":"2022-11-06"},{"lineNumber":37,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":38,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":39,"author":{"gitId":"Piyotato"},"content":"    @Override","lastModifiedDate":"2022-11-06"},{"lineNumber":40,"author":{"gitId":"Piyotato"},"content":"    public String getIdentifierConstraintsMessage() {","lastModifiedDate":"2022-11-06"},{"lineNumber":41,"author":{"gitId":"Piyotato"},"content":"        return MESSAGE_STATUS_CONSTRAINTS;","lastModifiedDate":"2022-11-06"},{"lineNumber":42,"author":{"gitId":"highorbit25"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":43,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"highorbit25"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"highorbit25"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-27"},{"lineNumber":46,"author":{"gitId":"highorbit25"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-27"},{"lineNumber":47,"author":{"gitId":"highorbit25"},"content":"                || (other instanceof Participation // instanceof handles nulls","lastModifiedDate":"2022-10-27"},{"lineNumber":48,"author":{"gitId":"comicalromance"},"content":"                \u0026\u0026 identifier.equalsIgnoreCase(((Participation) other).identifier)); // identifier check","lastModifiedDate":"2022-11-07"},{"lineNumber":49,"author":{"gitId":"highorbit25"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":50,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":51,"author":{"gitId":"highorbit25"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":52,"author":{"gitId":"highorbit25"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-27"},{"lineNumber":53,"author":{"gitId":"comicalromance"},"content":"        return identifier.toUpperCase().hashCode();","lastModifiedDate":"2022-11-07"},{"lineNumber":54,"author":{"gitId":"highorbit25"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":55,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":56,"author":{"gitId":"highorbit25"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":57,"author":{"gitId":"highorbit25"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2022-10-27"},{"lineNumber":58,"author":{"gitId":"highorbit25"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":59,"author":{"gitId":"highorbit25"},"content":"    public String toString() {","lastModifiedDate":"2022-10-27"},{"lineNumber":60,"author":{"gitId":"highorbit25"},"content":"        return \u0027[\u0027 + getString() + \u0027]\u0027;","lastModifiedDate":"2022-10-27"},{"lineNumber":61,"author":{"gitId":"highorbit25"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":62,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":63,"author":{"gitId":"Piyotato"},"content":"    /**","lastModifiedDate":"2022-11-06"},{"lineNumber":64,"author":{"gitId":"Piyotato"},"content":"     * Possible states of a Participation.","lastModifiedDate":"2022-11-06"},{"lineNumber":65,"author":{"gitId":"Piyotato"},"content":"     */","lastModifiedDate":"2022-11-06"},{"lineNumber":66,"author":{"gitId":"Piyotato"},"content":"    public enum Status {","lastModifiedDate":"2022-11-06"},{"lineNumber":67,"author":{"gitId":"Piyotato"},"content":"        PARTICIPATED {","lastModifiedDate":"2022-11-06"},{"lineNumber":68,"author":{"gitId":"Piyotato"},"content":"            @Override","lastModifiedDate":"2022-11-06"},{"lineNumber":69,"author":{"gitId":"Piyotato"},"content":"            public String toString() {","lastModifiedDate":"2022-11-06"},{"lineNumber":70,"author":{"gitId":"Piyotato"},"content":"                return PARTICIPATION_TRUE;","lastModifiedDate":"2022-11-06"},{"lineNumber":71,"author":{"gitId":"Piyotato"},"content":"            }","lastModifiedDate":"2022-11-06"},{"lineNumber":72,"author":{"gitId":"Piyotato"},"content":"        },","lastModifiedDate":"2022-11-06"},{"lineNumber":73,"author":{"gitId":"Piyotato"},"content":"        NOT_PARTICIPATED {","lastModifiedDate":"2022-11-06"},{"lineNumber":74,"author":{"gitId":"Piyotato"},"content":"            @Override","lastModifiedDate":"2022-11-06"},{"lineNumber":75,"author":{"gitId":"Piyotato"},"content":"            public String toString() {","lastModifiedDate":"2022-11-06"},{"lineNumber":76,"author":{"gitId":"Piyotato"},"content":"                return PARTICIPATION_FALSE;","lastModifiedDate":"2022-11-06"},{"lineNumber":77,"author":{"gitId":"Piyotato"},"content":"            }","lastModifiedDate":"2022-11-06"},{"lineNumber":78,"author":{"gitId":"Piyotato"},"content":"        };","lastModifiedDate":"2022-11-06"},{"lineNumber":79,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":80,"author":{"gitId":"Piyotato"},"content":"        /**","lastModifiedDate":"2022-11-06"},{"lineNumber":81,"author":{"gitId":"Piyotato"},"content":"         * Translates a string value of {@code Status} to an enum value.","lastModifiedDate":"2022-11-06"},{"lineNumber":82,"author":{"gitId":"Piyotato"},"content":"         */","lastModifiedDate":"2022-11-06"},{"lineNumber":83,"author":{"gitId":"Piyotato"},"content":"        public static Participation.Status fromString(String value) throws IllegalArgumentException {","lastModifiedDate":"2022-11-06"},{"lineNumber":84,"author":{"gitId":"Piyotato"},"content":"            switch (value) {","lastModifiedDate":"2022-11-06"},{"lineNumber":85,"author":{"gitId":"Piyotato"},"content":"            case PARTICIPATION_TRUE:","lastModifiedDate":"2022-11-06"},{"lineNumber":86,"author":{"gitId":"Piyotato"},"content":"                return PARTICIPATED;","lastModifiedDate":"2022-11-06"},{"lineNumber":87,"author":{"gitId":"Piyotato"},"content":"            case PARTICIPATION_FALSE:","lastModifiedDate":"2022-11-06"},{"lineNumber":88,"author":{"gitId":"Piyotato"},"content":"                return NOT_PARTICIPATED;","lastModifiedDate":"2022-11-06"},{"lineNumber":89,"author":{"gitId":"Piyotato"},"content":"            default:","lastModifiedDate":"2022-11-06"},{"lineNumber":90,"author":{"gitId":"Piyotato"},"content":"                throw new IllegalArgumentException(MESSAGE_STATUS_CONSTRAINTS);","lastModifiedDate":"2022-11-06"},{"lineNumber":91,"author":{"gitId":"Piyotato"},"content":"            }","lastModifiedDate":"2022-11-06"},{"lineNumber":92,"author":{"gitId":"Piyotato"},"content":"        }","lastModifiedDate":"2022-11-06"},{"lineNumber":93,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":94,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":95,"author":{"gitId":"highorbit25"},"content":"}","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"highorbit25":45,"Piyotato":48,"comicalromance":2}},{"path":"src/main/java/seedu/studmap/model/student/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.model.student;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"comicalromance"},"content":" * Represents a Student\u0027s phone number in the student map.","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"Piyotato"},"content":"    public static final String NO_PHONE_STRING \u003d \"No Phone number\";","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":15,"author":{"gitId":"Piyotato"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long.\";","lastModifiedDate":"2022-11-01"},{"lineNumber":16,"author":{"gitId":"comicalromance"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\+]?\\\\d{3,}\";","lastModifiedDate":"2022-11-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"Piyotato"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"Piyotato"},"content":"     * Constructs an empty {@code Phone}","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"Piyotato"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"Piyotato"},"content":"    public Phone() {","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"Piyotato"},"content":"        value \u003d \"\";","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"Piyotato"},"content":"        return test.isEmpty() || test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"Piyotato"},"content":"        return value.isBlank()","lastModifiedDate":"2022-10-26"},{"lineNumber":47,"author":{"gitId":"Piyotato"},"content":"                ? NO_PHONE_STRING","lastModifiedDate":"2022-10-26"},{"lineNumber":48,"author":{"gitId":"Piyotato"},"content":"                : value;","lastModifiedDate":"2022-10-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"highorbit25"},"content":"    /**","lastModifiedDate":"2022-11-03"},{"lineNumber":52,"author":{"gitId":"highorbit25"},"content":"     * Returns string used for sorting phone number.","lastModifiedDate":"2022-11-03"},{"lineNumber":53,"author":{"gitId":"highorbit25"},"content":"     */","lastModifiedDate":"2022-11-03"},{"lineNumber":54,"author":{"gitId":"highorbit25"},"content":"    public String toCmpString() {","lastModifiedDate":"2022-11-03"},{"lineNumber":55,"author":{"gitId":"highorbit25"},"content":"        return this.value.isEmpty()","lastModifiedDate":"2022-11-03"},{"lineNumber":56,"author":{"gitId":"highorbit25"},"content":"               ? null","lastModifiedDate":"2022-11-03"},{"lineNumber":57,"author":{"gitId":"highorbit25"},"content":"               : value;","lastModifiedDate":"2022-11-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-11-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"highorbit25":7,"Piyotato":13,"-":48,"comicalromance":4}},{"path":"src/main/java/seedu/studmap/model/student/Student.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.model.student;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.tag.Tag;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"comicalromance"},"content":" * Represents a Student in the student map.","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"comicalromance"},"content":"public class Student {","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"comicalromance"},"content":"    private final Module module;","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"dr-arrgghh"},"content":"    private final StudentID id;","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"dr-arrgghh"},"content":"    private final TeleHandle teleHandle;","lastModifiedDate":"2022-10-25"},{"lineNumber":27,"author":{"gitId":"dr-arrgghh"},"content":"    private final GitName gitName;","lastModifiedDate":"2022-10-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":29,"author":{"gitId":"comicalromance"},"content":"    private final Set\u003cAttendance\u003e attendances \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"lpohsien"},"content":"    private final Set\u003cAssignment\u003e assignments \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-23"},{"lineNumber":31,"author":{"gitId":"highorbit25"},"content":"    private final Set\u003cParticipation\u003e participations \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"comicalromance"},"content":"     * Constructor using a StudentData parameter object.","lastModifiedDate":"2022-10-15"},{"lineNumber":35,"author":{"gitId":"dr-arrgghh"},"content":"     * Requires name, phone, email, id, gitName, teleHanlde,","lastModifiedDate":"2022-10-26"},{"lineNumber":36,"author":{"gitId":"dr-arrgghh"},"content":"     * studmap, tags, attendances and assignments to be non-null.","lastModifiedDate":"2022-10-26"},{"lineNumber":37,"author":{"gitId":"Piyotato"},"content":"     *","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"comicalromance"},"content":"     * @param studentData StudentData parameter object.","lastModifiedDate":"2022-10-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"comicalromance"},"content":"    public Student(StudentData studentData) {","lastModifiedDate":"2022-10-15"},{"lineNumber":41,"author":{"gitId":"Piyotato"},"content":"        requireAllNonNull(","lastModifiedDate":"2022-11-06"},{"lineNumber":42,"author":{"gitId":"Piyotato"},"content":"                studentData.getId(),","lastModifiedDate":"2022-11-06"},{"lineNumber":43,"author":{"gitId":"Piyotato"},"content":"                studentData.getGitUser(),","lastModifiedDate":"2022-11-06"},{"lineNumber":44,"author":{"gitId":"Piyotato"},"content":"                studentData.getTeleHandle(),","lastModifiedDate":"2022-11-06"},{"lineNumber":45,"author":{"gitId":"Piyotato"},"content":"                studentData.getName(),","lastModifiedDate":"2022-11-06"},{"lineNumber":46,"author":{"gitId":"Piyotato"},"content":"                studentData.getPhone(),","lastModifiedDate":"2022-11-06"},{"lineNumber":47,"author":{"gitId":"Piyotato"},"content":"                studentData.getEmail(),","lastModifiedDate":"2022-11-06"},{"lineNumber":48,"author":{"gitId":"Piyotato"},"content":"                studentData.getModule(),","lastModifiedDate":"2022-11-06"},{"lineNumber":49,"author":{"gitId":"Piyotato"},"content":"                studentData.getTags(),","lastModifiedDate":"2022-11-06"},{"lineNumber":50,"author":{"gitId":"Piyotato"},"content":"                studentData.getAttendances(),","lastModifiedDate":"2022-11-06"},{"lineNumber":51,"author":{"gitId":"Piyotato"},"content":"                studentData.getAssignments(),","lastModifiedDate":"2022-11-06"},{"lineNumber":52,"author":{"gitId":"Piyotato"},"content":"                studentData.getParticipations());","lastModifiedDate":"2022-11-06"},{"lineNumber":53,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"dr-arrgghh"},"content":"        this.id \u003d studentData.getId();","lastModifiedDate":"2022-10-25"},{"lineNumber":55,"author":{"gitId":"comicalromance"},"content":"        this.module \u003d studentData.getModule();","lastModifiedDate":"2022-10-26"},{"lineNumber":56,"author":{"gitId":"dr-arrgghh"},"content":"        this.teleHandle \u003d studentData.getTeleHandle();","lastModifiedDate":"2022-10-25"},{"lineNumber":57,"author":{"gitId":"dr-arrgghh"},"content":"        this.gitName \u003d studentData.getGitUser();","lastModifiedDate":"2022-10-25"},{"lineNumber":58,"author":{"gitId":"comicalromance"},"content":"        this.name \u003d studentData.getName();","lastModifiedDate":"2022-10-15"},{"lineNumber":59,"author":{"gitId":"comicalromance"},"content":"        this.phone \u003d studentData.getPhone();","lastModifiedDate":"2022-10-15"},{"lineNumber":60,"author":{"gitId":"comicalromance"},"content":"        this.email \u003d studentData.getEmail();","lastModifiedDate":"2022-10-15"},{"lineNumber":61,"author":{"gitId":"comicalromance"},"content":"        this.tags.addAll(studentData.getTags());","lastModifiedDate":"2022-10-15"},{"lineNumber":62,"author":{"gitId":"comicalromance"},"content":"        this.attendances.addAll(studentData.getAttendances());","lastModifiedDate":"2022-10-15"},{"lineNumber":63,"author":{"gitId":"lpohsien"},"content":"        this.assignments.addAll(studentData.getAssignments());","lastModifiedDate":"2022-10-23"},{"lineNumber":64,"author":{"gitId":"highorbit25"},"content":"        this.participations.addAll(studentData.getParticipations());","lastModifiedDate":"2022-10-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"dr-arrgghh"},"content":"    public StudentID getId() {","lastModifiedDate":"2022-10-25"},{"lineNumber":68,"author":{"gitId":"dr-arrgghh"},"content":"        return id;","lastModifiedDate":"2022-10-25"},{"lineNumber":69,"author":{"gitId":"dr-arrgghh"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":70,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":71,"author":{"gitId":"dr-arrgghh"},"content":"    public String getIdString() {","lastModifiedDate":"2022-10-25"},{"lineNumber":72,"author":{"gitId":"highorbit25"},"content":"        return id.toString();","lastModifiedDate":"2022-10-28"},{"lineNumber":73,"author":{"gitId":"dr-arrgghh"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":74,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":75,"author":{"gitId":"highorbit25"},"content":"    public String getCmpIdString() {","lastModifiedDate":"2022-11-03"},{"lineNumber":76,"author":{"gitId":"highorbit25"},"content":"        return id.toCmpString();","lastModifiedDate":"2022-11-03"},{"lineNumber":77,"author":{"gitId":"highorbit25"},"content":"    }","lastModifiedDate":"2022-11-03"},{"lineNumber":78,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":79,"author":{"gitId":"dr-arrgghh"},"content":"    public GitName getGitName() {","lastModifiedDate":"2022-10-25"},{"lineNumber":80,"author":{"gitId":"dr-arrgghh"},"content":"        return gitName;","lastModifiedDate":"2022-10-25"},{"lineNumber":81,"author":{"gitId":"dr-arrgghh"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":82,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":83,"author":{"gitId":"dr-arrgghh"},"content":"    public String getGitString() {","lastModifiedDate":"2022-10-25"},{"lineNumber":84,"author":{"gitId":"highorbit25"},"content":"        return gitName.toString();","lastModifiedDate":"2022-10-28"},{"lineNumber":85,"author":{"gitId":"dr-arrgghh"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":86,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":87,"author":{"gitId":"highorbit25"},"content":"    public String getCmpGitString() {","lastModifiedDate":"2022-11-03"},{"lineNumber":88,"author":{"gitId":"highorbit25"},"content":"        return gitName.toCmpString();","lastModifiedDate":"2022-11-03"},{"lineNumber":89,"author":{"gitId":"highorbit25"},"content":"    }","lastModifiedDate":"2022-11-03"},{"lineNumber":90,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":91,"author":{"gitId":"dr-arrgghh"},"content":"    public TeleHandle getTeleHandle() {","lastModifiedDate":"2022-10-25"},{"lineNumber":92,"author":{"gitId":"dr-arrgghh"},"content":"        return teleHandle;","lastModifiedDate":"2022-10-25"},{"lineNumber":93,"author":{"gitId":"dr-arrgghh"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":94,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":95,"author":{"gitId":"dr-arrgghh"},"content":"    public String getHandleString() {","lastModifiedDate":"2022-10-25"},{"lineNumber":96,"author":{"gitId":"highorbit25"},"content":"        return teleHandle.toString();","lastModifiedDate":"2022-10-28"},{"lineNumber":97,"author":{"gitId":"dr-arrgghh"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":98,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":99,"author":{"gitId":"highorbit25"},"content":"    public String getCmpHandleString() {","lastModifiedDate":"2022-11-03"},{"lineNumber":100,"author":{"gitId":"highorbit25"},"content":"        return teleHandle.toCmpString();","lastModifiedDate":"2022-11-03"},{"lineNumber":101,"author":{"gitId":"highorbit25"},"content":"    }","lastModifiedDate":"2022-11-03"},{"lineNumber":102,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":103,"author":{"gitId":"comicalromance"},"content":"    public Module getModule() {","lastModifiedDate":"2022-10-26"},{"lineNumber":104,"author":{"gitId":"comicalromance"},"content":"        return module;","lastModifiedDate":"2022-10-26"},{"lineNumber":105,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":106,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":107,"author":{"gitId":"comicalromance"},"content":"    public String getModuleString() {","lastModifiedDate":"2022-10-26"},{"lineNumber":108,"author":{"gitId":"highorbit25"},"content":"        return module.toString();","lastModifiedDate":"2022-10-28"},{"lineNumber":109,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":110,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":111,"author":{"gitId":"highorbit25"},"content":"    public String getCmpModuleString() {","lastModifiedDate":"2022-11-03"},{"lineNumber":112,"author":{"gitId":"highorbit25"},"content":"        return module.toCmpString();","lastModifiedDate":"2022-11-03"},{"lineNumber":113,"author":{"gitId":"highorbit25"},"content":"    }","lastModifiedDate":"2022-11-03"},{"lineNumber":114,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":119,"author":{"gitId":"highorbit25"},"content":"    public String getNameString() {","lastModifiedDate":"2022-10-09"},{"lineNumber":120,"author":{"gitId":"highorbit25"},"content":"        return name.toString();","lastModifiedDate":"2022-10-28"},{"lineNumber":121,"author":{"gitId":"highorbit25"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":122,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":123,"author":{"gitId":"highorbit25"},"content":"    public String getCmpNameString() {","lastModifiedDate":"2022-11-03"},{"lineNumber":124,"author":{"gitId":"highorbit25"},"content":"        return name.toCmpString();","lastModifiedDate":"2022-11-03"},{"lineNumber":125,"author":{"gitId":"highorbit25"},"content":"    }","lastModifiedDate":"2022-11-03"},{"lineNumber":126,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":131,"author":{"gitId":"dr-arrgghh"},"content":"    public String getPhoneString() {","lastModifiedDate":"2022-10-25"},{"lineNumber":132,"author":{"gitId":"dr-arrgghh"},"content":"        return phone.toString();","lastModifiedDate":"2022-10-25"},{"lineNumber":133,"author":{"gitId":"dr-arrgghh"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":134,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":135,"author":{"gitId":"highorbit25"},"content":"    public String getCmpPhoneString() {","lastModifiedDate":"2022-11-03"},{"lineNumber":136,"author":{"gitId":"highorbit25"},"content":"        return phone.toCmpString();","lastModifiedDate":"2022-11-03"},{"lineNumber":137,"author":{"gitId":"highorbit25"},"content":"    }","lastModifiedDate":"2022-11-03"},{"lineNumber":138,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":143,"author":{"gitId":"dr-arrgghh"},"content":"    public String getEmailString() {","lastModifiedDate":"2022-10-25"},{"lineNumber":144,"author":{"gitId":"highorbit25"},"content":"        return email.toString();","lastModifiedDate":"2022-10-28"},{"lineNumber":145,"author":{"gitId":"dr-arrgghh"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":146,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":147,"author":{"gitId":"highorbit25"},"content":"    public String getCmpEmailString() {","lastModifiedDate":"2022-11-03"},{"lineNumber":148,"author":{"gitId":"highorbit25"},"content":"        return email.toCmpString();","lastModifiedDate":"2022-11-03"},{"lineNumber":149,"author":{"gitId":"highorbit25"},"content":"    }","lastModifiedDate":"2022-11-03"},{"lineNumber":150,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":159,"author":{"gitId":"comicalromance"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":160,"author":{"gitId":"comicalromance"},"content":"     * Returns an immutable Attendances set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-10-09"},{"lineNumber":161,"author":{"gitId":"comicalromance"},"content":"     * if modification is attempted.","lastModifiedDate":"2022-10-09"},{"lineNumber":162,"author":{"gitId":"comicalromance"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":163,"author":{"gitId":"comicalromance"},"content":"    public Set\u003cAttendance\u003e getAttendances() {","lastModifiedDate":"2022-10-09"},{"lineNumber":164,"author":{"gitId":"comicalromance"},"content":"        return Collections.unmodifiableSet(attendances);","lastModifiedDate":"2022-10-09"},{"lineNumber":165,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":166,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":167,"author":{"gitId":"lpohsien"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":168,"author":{"gitId":"lpohsien"},"content":"     * Returns an immutable Assignment set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-10-23"},{"lineNumber":169,"author":{"gitId":"lpohsien"},"content":"     * if modification is attempted.","lastModifiedDate":"2022-10-23"},{"lineNumber":170,"author":{"gitId":"lpohsien"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":171,"author":{"gitId":"lpohsien"},"content":"    public Set\u003cAssignment\u003e getAssignments() {","lastModifiedDate":"2022-10-23"},{"lineNumber":172,"author":{"gitId":"lpohsien"},"content":"        return Collections.unmodifiableSet(assignments);","lastModifiedDate":"2022-10-23"},{"lineNumber":173,"author":{"gitId":"lpohsien"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":174,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":175,"author":{"gitId":"highorbit25"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":176,"author":{"gitId":"highorbit25"},"content":"     * Returns an immutable Participation set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-10-27"},{"lineNumber":177,"author":{"gitId":"highorbit25"},"content":"     * if modification is attempted.","lastModifiedDate":"2022-10-27"},{"lineNumber":178,"author":{"gitId":"highorbit25"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":179,"author":{"gitId":"highorbit25"},"content":"    public Set\u003cParticipation\u003e getParticipations() {","lastModifiedDate":"2022-10-27"},{"lineNumber":180,"author":{"gitId":"highorbit25"},"content":"        return Collections.unmodifiableSet(participations);","lastModifiedDate":"2022-10-27"},{"lineNumber":181,"author":{"gitId":"highorbit25"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":182,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":183,"author":{"gitId":"dr-arrgghh"},"content":"    public StudentData getStudentData() {","lastModifiedDate":"2022-10-25"},{"lineNumber":184,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":185,"author":{"gitId":"dr-arrgghh"},"content":"        StudentData studentData \u003d new StudentData();","lastModifiedDate":"2022-10-25"},{"lineNumber":186,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":187,"author":{"gitId":"dr-arrgghh"},"content":"        studentData.setName(this.getName());","lastModifiedDate":"2022-10-25"},{"lineNumber":188,"author":{"gitId":"dr-arrgghh"},"content":"        studentData.setPhone(this.getPhone());","lastModifiedDate":"2022-10-25"},{"lineNumber":189,"author":{"gitId":"dr-arrgghh"},"content":"        studentData.setEmail(this.getEmail());","lastModifiedDate":"2022-10-25"},{"lineNumber":190,"author":{"gitId":"comicalromance"},"content":"        studentData.setModule(this.getModule());","lastModifiedDate":"2022-10-26"},{"lineNumber":191,"author":{"gitId":"dr-arrgghh"},"content":"        studentData.setId(this.getId());","lastModifiedDate":"2022-10-26"},{"lineNumber":192,"author":{"gitId":"dr-arrgghh"},"content":"        studentData.setGitUser(this.getGitName());","lastModifiedDate":"2022-10-26"},{"lineNumber":193,"author":{"gitId":"dr-arrgghh"},"content":"        studentData.setTeleHandle(this.getTeleHandle());","lastModifiedDate":"2022-10-26"},{"lineNumber":194,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":195,"author":{"gitId":"dr-arrgghh"},"content":"        studentData.setTags(new HashSet\u003c\u003e(this.getTags()));","lastModifiedDate":"2022-10-25"},{"lineNumber":196,"author":{"gitId":"dr-arrgghh"},"content":"        studentData.setAttendances(new HashSet\u003c\u003e(this.getAttendances()));","lastModifiedDate":"2022-10-25"},{"lineNumber":197,"author":{"gitId":"lpohsien"},"content":"        studentData.setAssignments(new HashSet\u003c\u003e(this.getAssignments()));","lastModifiedDate":"2022-10-23"},{"lineNumber":198,"author":{"gitId":"highorbit25"},"content":"        studentData.setParticipations(new HashSet\u003c\u003e(this.getParticipations()));","lastModifiedDate":"2022-10-27"},{"lineNumber":199,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":200,"author":{"gitId":"dr-arrgghh"},"content":"        return studentData;","lastModifiedDate":"2022-10-25"},{"lineNumber":201,"author":{"gitId":"dr-arrgghh"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":202,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":204,"author":{"gitId":"dr-arrgghh"},"content":"     * Returns attendance in percentage.","lastModifiedDate":"2022-10-25"},{"lineNumber":205,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":206,"author":{"gitId":"dr-arrgghh"},"content":"    public float getAttendancePercentage() {","lastModifiedDate":"2022-10-25"},{"lineNumber":207,"author":{"gitId":"dr-arrgghh"},"content":"        float numOfClasses \u003d getAttendances().size();","lastModifiedDate":"2022-10-25"},{"lineNumber":208,"author":{"gitId":"Piyotato"},"content":"        float presentFor \u003d (float) getAttendances().stream().filter(x -\u003e x.state \u003d\u003d Attendance.Status.PRESENT).count();","lastModifiedDate":"2022-11-06"},{"lineNumber":209,"author":{"gitId":"dr-arrgghh"},"content":"        return presentFor / numOfClasses * 100;","lastModifiedDate":"2022-10-25"},{"lineNumber":210,"author":{"gitId":"dr-arrgghh"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":211,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":212,"author":{"gitId":"highorbit25"},"content":"    /**","lastModifiedDate":"2022-11-03"},{"lineNumber":213,"author":{"gitId":"highorbit25"},"content":"     * Returns attendance in percentage for descending order sorting.","lastModifiedDate":"2022-11-03"},{"lineNumber":214,"author":{"gitId":"highorbit25"},"content":"     */","lastModifiedDate":"2022-11-03"},{"lineNumber":215,"author":{"gitId":"highorbit25"},"content":"    public float getAttendancePercentageForDsc() {","lastModifiedDate":"2022-11-03"},{"lineNumber":216,"author":{"gitId":"highorbit25"},"content":"        float numOfClasses \u003d getAttendances().size();","lastModifiedDate":"2022-11-03"},{"lineNumber":217,"author":{"gitId":"highorbit25"},"content":"        if (numOfClasses \u003d\u003d 0) {","lastModifiedDate":"2022-11-03"},{"lineNumber":218,"author":{"gitId":"highorbit25"},"content":"            return -Float.MIN_VALUE;","lastModifiedDate":"2022-11-03"},{"lineNumber":219,"author":{"gitId":"highorbit25"},"content":"        }","lastModifiedDate":"2022-11-03"},{"lineNumber":220,"author":{"gitId":"Piyotato"},"content":"        float presentFor \u003d (float) getAttendances().stream().filter(x -\u003e x.state \u003d\u003d Attendance.Status.PRESENT).count();","lastModifiedDate":"2022-11-06"},{"lineNumber":221,"author":{"gitId":"highorbit25"},"content":"        return presentFor / numOfClasses * 100;","lastModifiedDate":"2022-11-03"},{"lineNumber":222,"author":{"gitId":"highorbit25"},"content":"    }","lastModifiedDate":"2022-11-03"},{"lineNumber":223,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":224,"author":{"gitId":"highorbit25"},"content":"    /**","lastModifiedDate":"2022-11-03"},{"lineNumber":225,"author":{"gitId":"highorbit25"},"content":"     * Returns attendance in percentage for ascending order sorting.","lastModifiedDate":"2022-11-03"},{"lineNumber":226,"author":{"gitId":"highorbit25"},"content":"     */","lastModifiedDate":"2022-11-03"},{"lineNumber":227,"author":{"gitId":"highorbit25"},"content":"    public float getAttendancePercentageForAsc() {","lastModifiedDate":"2022-11-03"},{"lineNumber":228,"author":{"gitId":"highorbit25"},"content":"        float numOfClasses \u003d getAttendances().size();","lastModifiedDate":"2022-11-03"},{"lineNumber":229,"author":{"gitId":"highorbit25"},"content":"        if (numOfClasses \u003d\u003d 0) {","lastModifiedDate":"2022-11-03"},{"lineNumber":230,"author":{"gitId":"highorbit25"},"content":"            return Float.MAX_VALUE;","lastModifiedDate":"2022-11-03"},{"lineNumber":231,"author":{"gitId":"highorbit25"},"content":"        }","lastModifiedDate":"2022-11-03"},{"lineNumber":232,"author":{"gitId":"Piyotato"},"content":"        float presentFor \u003d (float) getAttendances().stream().filter(x -\u003e x.state \u003d\u003d Attendance.Status.PRESENT).count();","lastModifiedDate":"2022-11-06"},{"lineNumber":233,"author":{"gitId":"highorbit25"},"content":"        return presentFor / numOfClasses * 100;","lastModifiedDate":"2022-11-03"},{"lineNumber":234,"author":{"gitId":"highorbit25"},"content":"    }","lastModifiedDate":"2022-11-03"},{"lineNumber":235,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":236,"author":{"gitId":"comicalromance"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":237,"author":{"gitId":"comicalromance"},"content":"     * Returns assignments marked in percentage.","lastModifiedDate":"2022-10-27"},{"lineNumber":238,"author":{"gitId":"comicalromance"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":239,"author":{"gitId":"comicalromance"},"content":"    public float getAssignmentPercentage() {","lastModifiedDate":"2022-10-27"},{"lineNumber":240,"author":{"gitId":"comicalromance"},"content":"        float numOfAssignments \u003d getAssignmentCount();","lastModifiedDate":"2022-10-27"},{"lineNumber":241,"author":{"gitId":"comicalromance"},"content":"        float marked \u003d (float) getAssignmentMarkedCount();","lastModifiedDate":"2022-10-27"},{"lineNumber":242,"author":{"gitId":"comicalromance"},"content":"        return marked / numOfAssignments * 100;","lastModifiedDate":"2022-10-27"},{"lineNumber":243,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":244,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":245,"author":{"gitId":"highorbit25"},"content":"    /**","lastModifiedDate":"2022-11-03"},{"lineNumber":246,"author":{"gitId":"highorbit25"},"content":"     * Returns participation in percentage for descending order sorting.","lastModifiedDate":"2022-11-03"},{"lineNumber":247,"author":{"gitId":"highorbit25"},"content":"     */","lastModifiedDate":"2022-11-03"},{"lineNumber":248,"author":{"gitId":"highorbit25"},"content":"    public float getParticipationPercentageForDsc() {","lastModifiedDate":"2022-11-03"},{"lineNumber":249,"author":{"gitId":"highorbit25"},"content":"        float numOfPart \u003d getParticipations().size();","lastModifiedDate":"2022-11-03"},{"lineNumber":250,"author":{"gitId":"highorbit25"},"content":"        if (numOfPart \u003d\u003d 0) {","lastModifiedDate":"2022-11-03"},{"lineNumber":251,"author":{"gitId":"highorbit25"},"content":"            return -Float.MIN_VALUE;","lastModifiedDate":"2022-11-03"},{"lineNumber":252,"author":{"gitId":"highorbit25"},"content":"        }","lastModifiedDate":"2022-11-03"},{"lineNumber":253,"author":{"gitId":"Piyotato"},"content":"        float participatedFor \u003d","lastModifiedDate":"2022-11-06"},{"lineNumber":254,"author":{"gitId":"Piyotato"},"content":"                (float) getParticipations().stream().filter(x -\u003e x.state \u003d\u003d Participation.Status.PARTICIPATED).count();","lastModifiedDate":"2022-11-06"},{"lineNumber":255,"author":{"gitId":"highorbit25"},"content":"        return participatedFor / numOfPart * 100;","lastModifiedDate":"2022-11-03"},{"lineNumber":256,"author":{"gitId":"highorbit25"},"content":"    }","lastModifiedDate":"2022-11-03"},{"lineNumber":257,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":258,"author":{"gitId":"highorbit25"},"content":"    /**","lastModifiedDate":"2022-11-03"},{"lineNumber":259,"author":{"gitId":"highorbit25"},"content":"     * Returns participation in percentage for ascending order sorting.","lastModifiedDate":"2022-11-03"},{"lineNumber":260,"author":{"gitId":"highorbit25"},"content":"     */","lastModifiedDate":"2022-11-03"},{"lineNumber":261,"author":{"gitId":"highorbit25"},"content":"    public float getParticipationPercentageForAsc() {","lastModifiedDate":"2022-11-03"},{"lineNumber":262,"author":{"gitId":"highorbit25"},"content":"        float numOfPart \u003d getParticipations().size();","lastModifiedDate":"2022-11-03"},{"lineNumber":263,"author":{"gitId":"highorbit25"},"content":"        if (numOfPart \u003d\u003d 0) {","lastModifiedDate":"2022-11-03"},{"lineNumber":264,"author":{"gitId":"highorbit25"},"content":"            return Float.MAX_VALUE;","lastModifiedDate":"2022-11-03"},{"lineNumber":265,"author":{"gitId":"highorbit25"},"content":"        }","lastModifiedDate":"2022-11-03"},{"lineNumber":266,"author":{"gitId":"Piyotato"},"content":"        float participatedFor \u003d","lastModifiedDate":"2022-11-06"},{"lineNumber":267,"author":{"gitId":"Piyotato"},"content":"                (float) getParticipations().stream().filter(x -\u003e x.state \u003d\u003d Participation.Status.PARTICIPATED).count();","lastModifiedDate":"2022-11-06"},{"lineNumber":268,"author":{"gitId":"highorbit25"},"content":"        return participatedFor / numOfPart * 100;","lastModifiedDate":"2022-11-03"},{"lineNumber":269,"author":{"gitId":"highorbit25"},"content":"    }","lastModifiedDate":"2022-11-03"},{"lineNumber":270,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":271,"author":{"gitId":"highorbit25"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":272,"author":{"gitId":"highorbit25"},"content":"     * Returns participation in percentage.","lastModifiedDate":"2022-10-27"},{"lineNumber":273,"author":{"gitId":"highorbit25"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":274,"author":{"gitId":"highorbit25"},"content":"    public float getParticipationPercentage() {","lastModifiedDate":"2022-10-27"},{"lineNumber":275,"author":{"gitId":"highorbit25"},"content":"        float numOfPart \u003d getParticipations().size();","lastModifiedDate":"2022-10-27"},{"lineNumber":276,"author":{"gitId":"Piyotato"},"content":"        float participatedFor \u003d","lastModifiedDate":"2022-11-06"},{"lineNumber":277,"author":{"gitId":"Piyotato"},"content":"                (float) getParticipations().stream().filter(x -\u003e x.state \u003d\u003d Participation.Status.PARTICIPATED).count();","lastModifiedDate":"2022-11-06"},{"lineNumber":278,"author":{"gitId":"highorbit25"},"content":"        return participatedFor / numOfPart * 100;","lastModifiedDate":"2022-10-27"},{"lineNumber":279,"author":{"gitId":"highorbit25"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":280,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":281,"author":{"gitId":"comicalromance"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":282,"author":{"gitId":"comicalromance"},"content":"     * Returns number of assignments marked.","lastModifiedDate":"2022-10-27"},{"lineNumber":283,"author":{"gitId":"comicalromance"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":284,"author":{"gitId":"comicalromance"},"content":"    public int getAssignmentMarkedCount() {","lastModifiedDate":"2022-10-27"},{"lineNumber":285,"author":{"gitId":"comicalromance"},"content":"        return (int) getAssignments().stream()","lastModifiedDate":"2022-10-27"},{"lineNumber":286,"author":{"gitId":"Piyotato"},"content":"                .filter(x -\u003e x.state \u003d\u003d Assignment.Status.MARKED).count();","lastModifiedDate":"2022-11-06"},{"lineNumber":287,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":288,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":289,"author":{"gitId":"highorbit25"},"content":"    /**","lastModifiedDate":"2022-11-03"},{"lineNumber":290,"author":{"gitId":"highorbit25"},"content":"     * Returns number of assignments marked for descending order sorting.","lastModifiedDate":"2022-11-03"},{"lineNumber":291,"author":{"gitId":"highorbit25"},"content":"     */","lastModifiedDate":"2022-11-03"},{"lineNumber":292,"author":{"gitId":"highorbit25"},"content":"    public int getAssignmentMarkedCountForDsc() {","lastModifiedDate":"2022-11-03"},{"lineNumber":293,"author":{"gitId":"highorbit25"},"content":"        if (getAssignments().stream().count() \u003d\u003d 0) {","lastModifiedDate":"2022-11-03"},{"lineNumber":294,"author":{"gitId":"highorbit25"},"content":"            return Integer.MIN_VALUE;","lastModifiedDate":"2022-11-03"},{"lineNumber":295,"author":{"gitId":"highorbit25"},"content":"        } else {","lastModifiedDate":"2022-11-03"},{"lineNumber":296,"author":{"gitId":"highorbit25"},"content":"            return (int) getAssignments().stream()","lastModifiedDate":"2022-11-03"},{"lineNumber":297,"author":{"gitId":"Piyotato"},"content":"                    .filter(x -\u003e x.state \u003d\u003d Assignment.Status.MARKED).count();","lastModifiedDate":"2022-11-06"},{"lineNumber":298,"author":{"gitId":"highorbit25"},"content":"        }","lastModifiedDate":"2022-11-03"},{"lineNumber":299,"author":{"gitId":"highorbit25"},"content":"    }","lastModifiedDate":"2022-11-03"},{"lineNumber":300,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":301,"author":{"gitId":"highorbit25"},"content":"    /**","lastModifiedDate":"2022-11-03"},{"lineNumber":302,"author":{"gitId":"highorbit25"},"content":"     * Returns number of assignments marked for ascending order sorting.","lastModifiedDate":"2022-11-03"},{"lineNumber":303,"author":{"gitId":"highorbit25"},"content":"     */","lastModifiedDate":"2022-11-03"},{"lineNumber":304,"author":{"gitId":"highorbit25"},"content":"    public int getAssignmentMarkedCountForAsc() {","lastModifiedDate":"2022-11-03"},{"lineNumber":305,"author":{"gitId":"highorbit25"},"content":"        if (getAssignments().stream().count() \u003d\u003d 0) {","lastModifiedDate":"2022-11-03"},{"lineNumber":306,"author":{"gitId":"highorbit25"},"content":"            return Integer.MAX_VALUE;","lastModifiedDate":"2022-11-03"},{"lineNumber":307,"author":{"gitId":"highorbit25"},"content":"        } else {","lastModifiedDate":"2022-11-03"},{"lineNumber":308,"author":{"gitId":"highorbit25"},"content":"            return (int) getAssignments().stream()","lastModifiedDate":"2022-11-03"},{"lineNumber":309,"author":{"gitId":"Piyotato"},"content":"                    .filter(x -\u003e x.state \u003d\u003d Assignment.Status.MARKED).count();","lastModifiedDate":"2022-11-06"},{"lineNumber":310,"author":{"gitId":"highorbit25"},"content":"        }","lastModifiedDate":"2022-11-03"},{"lineNumber":311,"author":{"gitId":"highorbit25"},"content":"    }","lastModifiedDate":"2022-11-03"},{"lineNumber":312,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":313,"author":{"gitId":"comicalromance"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":314,"author":{"gitId":"comicalromance"},"content":"     * Returns number of assignments received but unmarked.","lastModifiedDate":"2022-10-27"},{"lineNumber":315,"author":{"gitId":"comicalromance"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":316,"author":{"gitId":"comicalromance"},"content":"    public int getAssignmentUnmarkedCount() {","lastModifiedDate":"2022-10-27"},{"lineNumber":317,"author":{"gitId":"comicalromance"},"content":"        return (int) getAssignments().stream()","lastModifiedDate":"2022-10-27"},{"lineNumber":318,"author":{"gitId":"Piyotato"},"content":"                .filter(x -\u003e x.state \u003d\u003d Assignment.Status.RECEIVED).count();","lastModifiedDate":"2022-11-06"},{"lineNumber":319,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":320,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":321,"author":{"gitId":"comicalromance"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":322,"author":{"gitId":"comicalromance"},"content":"     * Returns number of assignments recorded.","lastModifiedDate":"2022-10-27"},{"lineNumber":323,"author":{"gitId":"comicalromance"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":324,"author":{"gitId":"comicalromance"},"content":"    public int getAssignmentCount() {","lastModifiedDate":"2022-10-27"},{"lineNumber":325,"author":{"gitId":"comicalromance"},"content":"        return getAssignments().size();","lastModifiedDate":"2022-10-27"},{"lineNumber":326,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":327,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":328,"author":{"gitId":"dr-arrgghh"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":329,"author":{"gitId":"comicalromance"},"content":"     * Returns true if both students have the same name, studentID and module.","lastModifiedDate":"2022-10-28"},{"lineNumber":330,"author":{"gitId":"dr-arrgghh"},"content":"     * This defines a weaker notion of equality between two students.","lastModifiedDate":"2022-10-25"},{"lineNumber":331,"author":{"gitId":"dr-arrgghh"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":332,"author":{"gitId":"dr-arrgghh"},"content":"    public boolean isSameStudent(Student otherStudent) {","lastModifiedDate":"2022-10-25"},{"lineNumber":333,"author":{"gitId":"comicalromance"},"content":"        if (otherStudent \u003d\u003d this) {","lastModifiedDate":"2022-10-15"},{"lineNumber":334,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":335,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":337,"author":{"gitId":"comicalromance"},"content":"        return otherStudent !\u003d null \u0026\u0026 otherStudent.getName().equals(getName())","lastModifiedDate":"2022-10-28"},{"lineNumber":338,"author":{"gitId":"comicalromance"},"content":"                \u0026\u0026 otherStudent.getId().equals(getId()) \u0026\u0026 otherStudent.getModule().equals(getModule());","lastModifiedDate":"2022-10-28"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":341,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":343,"author":{"gitId":"dr-arrgghh"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2022-10-25"},{"lineNumber":344,"author":{"gitId":"dr-arrgghh"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2022-10-25"},{"lineNumber":345,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":348,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":349,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":350,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":352,"author":{"gitId":"comicalromance"},"content":"        if (!(other instanceof Student)) {","lastModifiedDate":"2022-10-15"},{"lineNumber":353,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":354,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":356,"author":{"gitId":"comicalromance"},"content":"        Student otherStudent \u003d (Student) other;","lastModifiedDate":"2022-10-15"},{"lineNumber":357,"author":{"gitId":"comicalromance"},"content":"        return otherStudent.getName().equals(getName())","lastModifiedDate":"2022-10-15"},{"lineNumber":358,"author":{"gitId":"dr-arrgghh"},"content":"                \u0026\u0026 otherStudent.getId().equals(getId())","lastModifiedDate":"2022-10-25"},{"lineNumber":359,"author":{"gitId":"dr-arrgghh"},"content":"                \u0026\u0026 otherStudent.getGitName().equals(getGitName())","lastModifiedDate":"2022-10-25"},{"lineNumber":360,"author":{"gitId":"dr-arrgghh"},"content":"                \u0026\u0026 otherStudent.getTeleHandle().equals(getTeleHandle())","lastModifiedDate":"2022-10-25"},{"lineNumber":361,"author":{"gitId":"comicalromance"},"content":"                \u0026\u0026 otherStudent.getModule().equals(getModule())","lastModifiedDate":"2022-10-26"},{"lineNumber":362,"author":{"gitId":"comicalromance"},"content":"                \u0026\u0026 otherStudent.getPhone().equals(getPhone())","lastModifiedDate":"2022-10-15"},{"lineNumber":363,"author":{"gitId":"comicalromance"},"content":"                \u0026\u0026 otherStudent.getEmail().equals(getEmail())","lastModifiedDate":"2022-10-15"},{"lineNumber":364,"author":{"gitId":"comicalromance"},"content":"                \u0026\u0026 otherStudent.getTags().equals(getTags())","lastModifiedDate":"2022-10-15"},{"lineNumber":365,"author":{"gitId":"lpohsien"},"content":"                \u0026\u0026 otherStudent.getAttendances().equals(getAttendances())","lastModifiedDate":"2022-10-23"},{"lineNumber":366,"author":{"gitId":"lpohsien"},"content":"                \u0026\u0026 otherStudent.getAssignments().equals(getAssignments());","lastModifiedDate":"2022-10-23"},{"lineNumber":367,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":369,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":370,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":371,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":372,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":373,"author":{"gitId":"comicalromance"},"content":"        return Objects.hash(name, phone, email, id, gitName, teleHandle, module,","lastModifiedDate":"2022-10-26"},{"lineNumber":374,"author":{"gitId":"highorbit25"},"content":"                tags, attendances, assignments, participations);","lastModifiedDate":"2022-10-27"},{"lineNumber":375,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":376,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":378,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":379,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":380,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":381,"author":{"gitId":"comicalromance"},"content":"        builder.append(getName()).append(\"; Phone: \").append(getPhone())","lastModifiedDate":"2022-10-26"},{"lineNumber":382,"author":{"gitId":"comicalromance"},"content":"                .append(\"; Email: \").append(getEmail())","lastModifiedDate":"2022-10-26"},{"lineNumber":383,"author":{"gitId":"comicalromance"},"content":"                .append(\"; Module: \").append(getModule())","lastModifiedDate":"2022-10-26"},{"lineNumber":384,"author":{"gitId":"comicalromance"},"content":"                .append(\"; StudentID: \").append(getId())","lastModifiedDate":"2022-10-26"},{"lineNumber":385,"author":{"gitId":"comicalromance"},"content":"                .append(\"; GitHub Username: \").append(getGitName())","lastModifiedDate":"2022-10-26"},{"lineNumber":386,"author":{"gitId":"comicalromance"},"content":"                .append(\"; TeleHandle: \").append(getTeleHandle());","lastModifiedDate":"2022-10-26"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":388,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":389,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":390,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":391,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":392,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":393,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":394,"author":{"gitId":"comicalromance"},"content":"        Set\u003cAttendance\u003e attendances \u003d getAttendances();","lastModifiedDate":"2022-10-09"},{"lineNumber":395,"author":{"gitId":"comicalromance"},"content":"        if (!attendances.isEmpty()) {","lastModifiedDate":"2022-10-09"},{"lineNumber":396,"author":{"gitId":"comicalromance"},"content":"            builder.append(\"; Attendance: \");","lastModifiedDate":"2022-10-09"},{"lineNumber":397,"author":{"gitId":"comicalromance"},"content":"            attendances.forEach(builder::append);","lastModifiedDate":"2022-10-09"},{"lineNumber":398,"author":{"gitId":"comicalromance"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":399,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":400,"author":{"gitId":"comicalromance"},"content":"        Set\u003cParticipation\u003e participations \u003d getParticipations();","lastModifiedDate":"2022-11-07"},{"lineNumber":401,"author":{"gitId":"comicalromance"},"content":"        if (!participations.isEmpty()) {","lastModifiedDate":"2022-11-07"},{"lineNumber":402,"author":{"gitId":"comicalromance"},"content":"            builder.append(\"; Participation: \");","lastModifiedDate":"2022-11-07"},{"lineNumber":403,"author":{"gitId":"comicalromance"},"content":"            participations.forEach(builder::append);","lastModifiedDate":"2022-11-07"},{"lineNumber":404,"author":{"gitId":"comicalromance"},"content":"        }","lastModifiedDate":"2022-11-07"},{"lineNumber":405,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":406,"author":{"gitId":"lpohsien"},"content":"        Set\u003cAssignment\u003e assignments \u003d getAssignments();","lastModifiedDate":"2022-10-23"},{"lineNumber":407,"author":{"gitId":"lpohsien"},"content":"        if (!assignments.isEmpty()) {","lastModifiedDate":"2022-10-23"},{"lineNumber":408,"author":{"gitId":"lpohsien"},"content":"            builder.append(\"; Assignment: \");","lastModifiedDate":"2022-10-23"},{"lineNumber":409,"author":{"gitId":"lpohsien"},"content":"            assignments.forEach(builder::append);","lastModifiedDate":"2022-10-23"},{"lineNumber":410,"author":{"gitId":"lpohsien"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":411,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":412,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":413,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":415,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"highorbit25":124,"dr-arrgghh":71,"Piyotato":27,"-":82,"comicalromance":92,"lpohsien":19}},{"path":"src/main/java/seedu/studmap/model/student/StudentData.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.model.student;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"comicalromance"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"Piyotato"},"content":"import java.util.Objects;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"Piyotato"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.tag.Tag;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"Piyotato"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"comicalromance"},"content":" * A parameter object for Student constructor.","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"Piyotato"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"comicalromance"},"content":"public class StudentData {","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"dr-arrgghh"},"content":"    private StudentID studentID;","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"Piyotato"},"content":"    private GitName gitName \u003d new GitName();","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"Piyotato"},"content":"    private TeleHandle teleHandle \u003d new TeleHandle();","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"Piyotato"},"content":"    private Name name;","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"Piyotato"},"content":"    private Phone phone \u003d new Phone();","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"Piyotato"},"content":"    private Email email \u003d new Email();","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"comicalromance"},"content":"    private Module module;","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"comicalromance"},"content":"    private Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"comicalromance"},"content":"    private Set\u003cAttendance\u003e attendances \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"lpohsien"},"content":"    private Set\u003cAssignment\u003e assignments \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-23"},{"lineNumber":23,"author":{"gitId":"highorbit25"},"content":"    private Set\u003cParticipation\u003e participations \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"dr-arrgghh"},"content":"    public StudentID getId() {","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"dr-arrgghh"},"content":"        return studentID;","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"dr-arrgghh"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":28,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":29,"author":{"gitId":"dr-arrgghh"},"content":"    public void setId(StudentID id) {","lastModifiedDate":"2022-10-25"},{"lineNumber":30,"author":{"gitId":"dr-arrgghh"},"content":"        this.studentID \u003d id;","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"dr-arrgghh"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":32,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":33,"author":{"gitId":"dr-arrgghh"},"content":"    public GitName getGitUser() {","lastModifiedDate":"2022-10-25"},{"lineNumber":34,"author":{"gitId":"dr-arrgghh"},"content":"        return gitName;","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"dr-arrgghh"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":36,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":37,"author":{"gitId":"dr-arrgghh"},"content":"    public void setGitUser(GitName gitName) {","lastModifiedDate":"2022-10-25"},{"lineNumber":38,"author":{"gitId":"dr-arrgghh"},"content":"        this.gitName \u003d gitName;","lastModifiedDate":"2022-10-26"},{"lineNumber":39,"author":{"gitId":"dr-arrgghh"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":40,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":41,"author":{"gitId":"dr-arrgghh"},"content":"    public TeleHandle getTeleHandle() {","lastModifiedDate":"2022-10-25"},{"lineNumber":42,"author":{"gitId":"dr-arrgghh"},"content":"        return teleHandle;","lastModifiedDate":"2022-10-25"},{"lineNumber":43,"author":{"gitId":"dr-arrgghh"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":44,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":45,"author":{"gitId":"dr-arrgghh"},"content":"    public void setTeleHandle(TeleHandle teleHandle) {","lastModifiedDate":"2022-10-25"},{"lineNumber":46,"author":{"gitId":"dr-arrgghh"},"content":"        this.teleHandle \u003d teleHandle;","lastModifiedDate":"2022-10-25"},{"lineNumber":47,"author":{"gitId":"dr-arrgghh"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":48,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":49,"author":{"gitId":"Piyotato"},"content":"    public Name getName() {","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"Piyotato"},"content":"        return name;","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"Piyotato"},"content":"    public void setName(Name name) {","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"Piyotato"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":57,"author":{"gitId":"Piyotato"},"content":"    public Phone getPhone() {","lastModifiedDate":"2022-10-09"},{"lineNumber":58,"author":{"gitId":"Piyotato"},"content":"        return phone;","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":60,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":61,"author":{"gitId":"Piyotato"},"content":"    public void setPhone(Phone phone) {","lastModifiedDate":"2022-10-09"},{"lineNumber":62,"author":{"gitId":"Piyotato"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2022-10-09"},{"lineNumber":63,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":64,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":65,"author":{"gitId":"Piyotato"},"content":"    public Email getEmail() {","lastModifiedDate":"2022-10-09"},{"lineNumber":66,"author":{"gitId":"Piyotato"},"content":"        return email;","lastModifiedDate":"2022-10-09"},{"lineNumber":67,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":68,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":69,"author":{"gitId":"Piyotato"},"content":"    public void setEmail(Email email) {","lastModifiedDate":"2022-10-09"},{"lineNumber":70,"author":{"gitId":"Piyotato"},"content":"        this.email \u003d email;","lastModifiedDate":"2022-10-09"},{"lineNumber":71,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":72,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":73,"author":{"gitId":"comicalromance"},"content":"    public Module getModule() {","lastModifiedDate":"2022-10-26"},{"lineNumber":74,"author":{"gitId":"comicalromance"},"content":"        return module;","lastModifiedDate":"2022-10-26"},{"lineNumber":75,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":76,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":77,"author":{"gitId":"comicalromance"},"content":"    public void setModule(Module module) {","lastModifiedDate":"2022-10-26"},{"lineNumber":78,"author":{"gitId":"comicalromance"},"content":"        this.module \u003d module;","lastModifiedDate":"2022-10-26"},{"lineNumber":79,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":80,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":81,"author":{"gitId":"Piyotato"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2022-10-09"},{"lineNumber":82,"author":{"gitId":"Piyotato"},"content":"        return tags;","lastModifiedDate":"2022-10-09"},{"lineNumber":83,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":84,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":85,"author":{"gitId":"Piyotato"},"content":"    public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-10-09"},{"lineNumber":86,"author":{"gitId":"Piyotato"},"content":"        this.tags \u003d tags;","lastModifiedDate":"2022-10-09"},{"lineNumber":87,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":88,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":89,"author":{"gitId":"comicalromance"},"content":"    public void addAttendances(Set\u003cAttendance\u003e attendances) {","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"comicalromance"},"content":"        this.attendances.addAll(attendances);","lastModifiedDate":"2022-10-10"},{"lineNumber":91,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":92,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"highorbit25"},"content":"    public void addParticipations(Set\u003cParticipation\u003e participations) {","lastModifiedDate":"2022-10-27"},{"lineNumber":94,"author":{"gitId":"highorbit25"},"content":"        this.participations.addAll(participations);","lastModifiedDate":"2022-10-27"},{"lineNumber":95,"author":{"gitId":"highorbit25"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":96,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":97,"author":{"gitId":"lpohsien"},"content":"    public void addAssignments(Set\u003cAssignment\u003e assignments) {","lastModifiedDate":"2022-10-23"},{"lineNumber":98,"author":{"gitId":"lpohsien"},"content":"        this.assignments.addAll(assignments);","lastModifiedDate":"2022-10-23"},{"lineNumber":99,"author":{"gitId":"lpohsien"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":100,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":101,"author":{"gitId":"comicalromance"},"content":"    public Set\u003cAttendance\u003e getAttendances() {","lastModifiedDate":"2022-10-09"},{"lineNumber":102,"author":{"gitId":"comicalromance"},"content":"        return attendances;","lastModifiedDate":"2022-10-09"},{"lineNumber":103,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":104,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":105,"author":{"gitId":"Piyotato"},"content":"    public void setAttendances(Set\u003cAttendance\u003e attendances) {","lastModifiedDate":"2022-11-06"},{"lineNumber":106,"author":{"gitId":"Piyotato"},"content":"        this.attendances \u003d attendances;","lastModifiedDate":"2022-11-06"},{"lineNumber":107,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":108,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":109,"author":{"gitId":"lpohsien"},"content":"    public Set\u003cAssignment\u003e getAssignments() {","lastModifiedDate":"2022-10-23"},{"lineNumber":110,"author":{"gitId":"lpohsien"},"content":"        return assignments;","lastModifiedDate":"2022-10-23"},{"lineNumber":111,"author":{"gitId":"lpohsien"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":112,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":113,"author":{"gitId":"Piyotato"},"content":"    public void setAssignments(Set\u003cAssignment\u003e assignments) {","lastModifiedDate":"2022-11-06"},{"lineNumber":114,"author":{"gitId":"Piyotato"},"content":"        this.assignments \u003d assignments;","lastModifiedDate":"2022-11-06"},{"lineNumber":115,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":116,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":117,"author":{"gitId":"highorbit25"},"content":"    public Set\u003cParticipation\u003e getParticipations() {","lastModifiedDate":"2022-10-28"},{"lineNumber":118,"author":{"gitId":"highorbit25"},"content":"        return participations;","lastModifiedDate":"2022-10-28"},{"lineNumber":119,"author":{"gitId":"highorbit25"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":120,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":121,"author":{"gitId":"Piyotato"},"content":"    public void setParticipations(Set\u003cParticipation\u003e participations) {","lastModifiedDate":"2022-11-06"},{"lineNumber":122,"author":{"gitId":"Piyotato"},"content":"        this.participations \u003d participations;","lastModifiedDate":"2022-11-06"},{"lineNumber":123,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":124,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":125,"author":{"gitId":"Piyotato"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":126,"author":{"gitId":"Piyotato"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2022-10-13"},{"lineNumber":127,"author":{"gitId":"Piyotato"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2022-10-13"},{"lineNumber":128,"author":{"gitId":"Piyotato"},"content":"            return true;","lastModifiedDate":"2022-10-13"},{"lineNumber":129,"author":{"gitId":"Piyotato"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":130,"author":{"gitId":"Piyotato"},"content":"        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {","lastModifiedDate":"2022-10-13"},{"lineNumber":131,"author":{"gitId":"Piyotato"},"content":"            return false;","lastModifiedDate":"2022-10-13"},{"lineNumber":132,"author":{"gitId":"Piyotato"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":133,"author":{"gitId":"comicalromance"},"content":"        StudentData that \u003d (StudentData) o;","lastModifiedDate":"2022-10-15"},{"lineNumber":134,"author":{"gitId":"Piyotato"},"content":"        return Objects.equals(this.studentID, that.studentID)","lastModifiedDate":"2022-11-06"},{"lineNumber":135,"author":{"gitId":"Piyotato"},"content":"                \u0026\u0026 Objects.equals(this.gitName, that.gitName)","lastModifiedDate":"2022-11-06"},{"lineNumber":136,"author":{"gitId":"Piyotato"},"content":"                \u0026\u0026 Objects.equals(this.teleHandle, that.teleHandle)","lastModifiedDate":"2022-11-06"},{"lineNumber":137,"author":{"gitId":"Piyotato"},"content":"                \u0026\u0026 Objects.equals(this.name, that.name)","lastModifiedDate":"2022-11-06"},{"lineNumber":138,"author":{"gitId":"Piyotato"},"content":"                \u0026\u0026 Objects.equals(this.phone, that.phone)","lastModifiedDate":"2022-11-06"},{"lineNumber":139,"author":{"gitId":"Piyotato"},"content":"                \u0026\u0026 Objects.equals(this.email, that.email)","lastModifiedDate":"2022-11-06"},{"lineNumber":140,"author":{"gitId":"Piyotato"},"content":"                \u0026\u0026 Objects.equals(this.module, that.module)","lastModifiedDate":"2022-11-06"},{"lineNumber":141,"author":{"gitId":"Piyotato"},"content":"                \u0026\u0026 Objects.equals(this.tags, that.tags)","lastModifiedDate":"2022-11-06"},{"lineNumber":142,"author":{"gitId":"Piyotato"},"content":"                \u0026\u0026 Objects.equals(this.attendances, that.attendances)","lastModifiedDate":"2022-11-06"},{"lineNumber":143,"author":{"gitId":"Piyotato"},"content":"                \u0026\u0026 Objects.equals(this.assignments, that.assignments)","lastModifiedDate":"2022-11-06"},{"lineNumber":144,"author":{"gitId":"Piyotato"},"content":"                \u0026\u0026 Objects.equals(this.participations, that.participations);","lastModifiedDate":"2022-11-06"},{"lineNumber":145,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":146,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":147,"author":{"gitId":"Piyotato"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":148,"author":{"gitId":"Piyotato"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-13"},{"lineNumber":149,"author":{"gitId":"Piyotato"},"content":"        return Objects.hash(","lastModifiedDate":"2022-11-06"},{"lineNumber":150,"author":{"gitId":"Piyotato"},"content":"                studentID,","lastModifiedDate":"2022-11-06"},{"lineNumber":151,"author":{"gitId":"Piyotato"},"content":"                gitName,","lastModifiedDate":"2022-11-06"},{"lineNumber":152,"author":{"gitId":"Piyotato"},"content":"                teleHandle,","lastModifiedDate":"2022-11-06"},{"lineNumber":153,"author":{"gitId":"Piyotato"},"content":"                name,","lastModifiedDate":"2022-11-06"},{"lineNumber":154,"author":{"gitId":"Piyotato"},"content":"                phone,","lastModifiedDate":"2022-11-06"},{"lineNumber":155,"author":{"gitId":"Piyotato"},"content":"                email,","lastModifiedDate":"2022-11-06"},{"lineNumber":156,"author":{"gitId":"Piyotato"},"content":"                module,","lastModifiedDate":"2022-11-06"},{"lineNumber":157,"author":{"gitId":"Piyotato"},"content":"                tags,","lastModifiedDate":"2022-11-06"},{"lineNumber":158,"author":{"gitId":"Piyotato"},"content":"                attendances,","lastModifiedDate":"2022-11-06"},{"lineNumber":159,"author":{"gitId":"Piyotato"},"content":"                assignments,","lastModifiedDate":"2022-11-06"},{"lineNumber":160,"author":{"gitId":"Piyotato"},"content":"                participations);","lastModifiedDate":"2022-11-06"},{"lineNumber":161,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":162,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":163,"author":{"gitId":"Piyotato"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"highorbit25":9,"dr-arrgghh":26,"Piyotato":94,"comicalromance":25,"lpohsien":9}},{"path":"src/main/java/seedu/studmap/model/student/StudentID.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dr-arrgghh"},"content":"package seedu.studmap.model.student;","lastModifiedDate":"2022-10-25"},{"lineNumber":2,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":3,"author":{"gitId":"dr-arrgghh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"Piyotato"},"content":"import static seedu.studmap.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-11-07"},{"lineNumber":5,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"dr-arrgghh"},"content":"/**","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"dr-arrgghh"},"content":" * Represents a Student\u0027s ID in the student map.","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"Piyotato"},"content":" * Guarantees: immutable","lastModifiedDate":"2022-10-29"},{"lineNumber":9,"author":{"gitId":"dr-arrgghh"},"content":" */","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"dr-arrgghh"},"content":"public class StudentID {","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":12,"author":{"gitId":"Piyotato"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"StudentID cannot be empty!\";","lastModifiedDate":"2022-11-07"},{"lineNumber":13,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":14,"author":{"gitId":"dr-arrgghh"},"content":"    public final String value;","lastModifiedDate":"2022-10-25"},{"lineNumber":15,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":16,"author":{"gitId":"dr-arrgghh"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"dr-arrgghh"},"content":"     * Constructs a {@code StudentID}.","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"dr-arrgghh"},"content":"     *","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"dr-arrgghh"},"content":"     * @param studentID A valid name.","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"dr-arrgghh"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"dr-arrgghh"},"content":"    public StudentID(String studentID) {","lastModifiedDate":"2022-10-25"},{"lineNumber":22,"author":{"gitId":"dr-arrgghh"},"content":"        requireNonNull(studentID);","lastModifiedDate":"2022-10-25"},{"lineNumber":23,"author":{"gitId":"Piyotato"},"content":"        checkArgument(isValidStudentID(studentID), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-11-07"},{"lineNumber":24,"author":{"gitId":"dr-arrgghh"},"content":"        this.value \u003d studentID;","lastModifiedDate":"2022-10-25"},{"lineNumber":25,"author":{"gitId":"dr-arrgghh"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":27,"author":{"gitId":"Piyotato"},"content":"    /**","lastModifiedDate":"2022-11-07"},{"lineNumber":28,"author":{"gitId":"Piyotato"},"content":"     * Returns true if a given string is a valid student ID.","lastModifiedDate":"2022-11-07"},{"lineNumber":29,"author":{"gitId":"Piyotato"},"content":"     */","lastModifiedDate":"2022-11-07"},{"lineNumber":30,"author":{"gitId":"Piyotato"},"content":"    public static boolean isValidStudentID(String studentID) {","lastModifiedDate":"2022-11-07"},{"lineNumber":31,"author":{"gitId":"Piyotato"},"content":"        return studentID !\u003d null \u0026\u0026 !studentID.isEmpty();","lastModifiedDate":"2022-11-07"},{"lineNumber":32,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-11-07"},{"lineNumber":33,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":34,"author":{"gitId":"dr-arrgghh"},"content":"    @Override","lastModifiedDate":"2022-10-25"},{"lineNumber":35,"author":{"gitId":"dr-arrgghh"},"content":"    public String toString() {","lastModifiedDate":"2022-10-25"},{"lineNumber":36,"author":{"gitId":"dr-arrgghh"},"content":"        return this.value;","lastModifiedDate":"2022-10-25"},{"lineNumber":37,"author":{"gitId":"dr-arrgghh"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":38,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":39,"author":{"gitId":"highorbit25"},"content":"    /**","lastModifiedDate":"2022-11-03"},{"lineNumber":40,"author":{"gitId":"highorbit25"},"content":"     * Returns string used for sorting studentID","lastModifiedDate":"2022-11-03"},{"lineNumber":41,"author":{"gitId":"highorbit25"},"content":"     */","lastModifiedDate":"2022-11-03"},{"lineNumber":42,"author":{"gitId":"highorbit25"},"content":"    public String toCmpString() {","lastModifiedDate":"2022-11-03"},{"lineNumber":43,"author":{"gitId":"highorbit25"},"content":"        return this.value.isEmpty()","lastModifiedDate":"2022-11-03"},{"lineNumber":44,"author":{"gitId":"highorbit25"},"content":"                ? null","lastModifiedDate":"2022-11-03"},{"lineNumber":45,"author":{"gitId":"highorbit25"},"content":"                : value;","lastModifiedDate":"2022-11-03"},{"lineNumber":46,"author":{"gitId":"highorbit25"},"content":"    }","lastModifiedDate":"2022-11-03"},{"lineNumber":47,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":48,"author":{"gitId":"dr-arrgghh"},"content":"    @Override","lastModifiedDate":"2022-10-25"},{"lineNumber":49,"author":{"gitId":"dr-arrgghh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-25"},{"lineNumber":50,"author":{"gitId":"dr-arrgghh"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-25"},{"lineNumber":51,"author":{"gitId":"dr-arrgghh"},"content":"                || (other instanceof StudentID // instanceof handles nulls","lastModifiedDate":"2022-10-25"},{"lineNumber":52,"author":{"gitId":"dr-arrgghh"},"content":"                \u0026\u0026 value.equals(((StudentID) other).value)); // state check","lastModifiedDate":"2022-10-25"},{"lineNumber":53,"author":{"gitId":"dr-arrgghh"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":54,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":55,"author":{"gitId":"dr-arrgghh"},"content":"    @Override","lastModifiedDate":"2022-10-25"},{"lineNumber":56,"author":{"gitId":"dr-arrgghh"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-25"},{"lineNumber":57,"author":{"gitId":"dr-arrgghh"},"content":"        return this.value.hashCode();","lastModifiedDate":"2022-10-25"},{"lineNumber":58,"author":{"gitId":"dr-arrgghh"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":59,"author":{"gitId":"dr-arrgghh"},"content":"}","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"highorbit25":9,"dr-arrgghh":38,"Piyotato":12}},{"path":"src/main/java/seedu/studmap/model/student/TagContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.model.student;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"dr-arrgghh"},"content":"import java.util.List;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"dr-arrgghh"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"dr-arrgghh"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.commons.util.StringUtil;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.tag.Tag;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"dr-arrgghh"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"comicalromance"},"content":" * Tests that a {@code Student}\u0027s {@code Tag} matches any of the keywords given.","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"dr-arrgghh"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"comicalromance"},"content":"public class TagContainsKeywordsPredicate implements Predicate\u003cStudent\u003e {","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"dr-arrgghh"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"dr-arrgghh"},"content":"    public TagContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"dr-arrgghh"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"dr-arrgghh"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"dr-arrgghh"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"comicalromance"},"content":"    public boolean test(Student student) {","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"comicalromance"},"content":"        Set\u003cTag\u003e tagSet \u003d student.getTags();","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"dr-arrgghh"},"content":"        for (Tag t : tagSet) {","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"dr-arrgghh"},"content":"            if (keywords.stream().anyMatch(keywords -\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"dr-arrgghh"},"content":"                    StringUtil.containsWordIgnoreCase(t.tagName, keywords))) {","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"dr-arrgghh"},"content":"                return true;","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"dr-arrgghh"},"content":"            }","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"dr-arrgghh"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"dr-arrgghh"},"content":"        return false;","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"dr-arrgghh"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"dr-arrgghh"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"dr-arrgghh":29,"comicalromance":7}},{"path":"src/main/java/seedu/studmap/model/student/TeleHandle.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dr-arrgghh"},"content":"package seedu.studmap.model.student;","lastModifiedDate":"2022-10-25"},{"lineNumber":2,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":3,"author":{"gitId":"dr-arrgghh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"dr-arrgghh"},"content":"import static seedu.studmap.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"dr-arrgghh"},"content":"/**","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"dr-arrgghh"},"content":" * Represents a Student\u0027s telegram handle in the student map.","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"dr-arrgghh"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidTeleHandle(String)}","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"dr-arrgghh"},"content":" */","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"dr-arrgghh"},"content":"public class TeleHandle {","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":12,"author":{"gitId":"Piyotato"},"content":"    public static final String NO_TELEHANDLE_STRING \u003d \"No Telegram handle\";","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"comicalromance"},"content":"    public static final String TELEHANDLE_DISPLAY_PREFIX \u003d \"Telegram: \";","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"Piyotato"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Telegram handle should be in the format @handle.\";","lastModifiedDate":"2022-11-01"},{"lineNumber":17,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"dr-arrgghh"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[@][\\\\p{all}]*\";","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"dr-arrgghh"},"content":"    public final String value;","lastModifiedDate":"2022-10-25"},{"lineNumber":21,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":22,"author":{"gitId":"Piyotato"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"Piyotato"},"content":"     * Constructs an empty {@code TeleHandle}.","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"Piyotato"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"Piyotato"},"content":"    public TeleHandle() {","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"Piyotato"},"content":"        this.value \u003d \"\";","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"dr-arrgghh"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"dr-arrgghh"},"content":"     * Constructs a {@code TeleHandle}.","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"dr-arrgghh"},"content":"     *","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"dr-arrgghh"},"content":"     * @param handle A valid name.","lastModifiedDate":"2022-10-26"},{"lineNumber":33,"author":{"gitId":"dr-arrgghh"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"dr-arrgghh"},"content":"    public TeleHandle(String handle) {","lastModifiedDate":"2022-10-25"},{"lineNumber":35,"author":{"gitId":"dr-arrgghh"},"content":"        requireNonNull(handle);","lastModifiedDate":"2022-10-25"},{"lineNumber":36,"author":{"gitId":"dr-arrgghh"},"content":"        checkArgument(isValidTeleHandle(handle), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-25"},{"lineNumber":37,"author":{"gitId":"dr-arrgghh"},"content":"        this.value \u003d handle;","lastModifiedDate":"2022-10-25"},{"lineNumber":38,"author":{"gitId":"dr-arrgghh"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":39,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":40,"author":{"gitId":"comicalromance"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":41,"author":{"gitId":"comicalromance"},"content":"     * Returns string used for display in UI.","lastModifiedDate":"2022-10-27"},{"lineNumber":42,"author":{"gitId":"comicalromance"},"content":"     *","lastModifiedDate":"2022-10-27"},{"lineNumber":43,"author":{"gitId":"comicalromance"},"content":"     * @return String to be displayed","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"comicalromance"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"comicalromance"},"content":"    public String getDisplayString() {","lastModifiedDate":"2022-10-27"},{"lineNumber":46,"author":{"gitId":"comicalromance"},"content":"        return this.value.isEmpty()","lastModifiedDate":"2022-10-27"},{"lineNumber":47,"author":{"gitId":"comicalromance"},"content":"                ? NO_TELEHANDLE_STRING","lastModifiedDate":"2022-10-27"},{"lineNumber":48,"author":{"gitId":"comicalromance"},"content":"                : TELEHANDLE_DISPLAY_PREFIX + value;","lastModifiedDate":"2022-10-27"},{"lineNumber":49,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":50,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":51,"author":{"gitId":"dr-arrgghh"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":52,"author":{"gitId":"dr-arrgghh"},"content":"     * Returns true if a given string is a valid telegram handle.","lastModifiedDate":"2022-10-26"},{"lineNumber":53,"author":{"gitId":"dr-arrgghh"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":54,"author":{"gitId":"dr-arrgghh"},"content":"    public static boolean isValidTeleHandle(String test) {","lastModifiedDate":"2022-10-25"},{"lineNumber":55,"author":{"gitId":"Piyotato"},"content":"        return test.isBlank() || test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-26"},{"lineNumber":56,"author":{"gitId":"dr-arrgghh"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":57,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":58,"author":{"gitId":"dr-arrgghh"},"content":"    @Override","lastModifiedDate":"2022-10-25"},{"lineNumber":59,"author":{"gitId":"dr-arrgghh"},"content":"    public String toString() {","lastModifiedDate":"2022-10-25"},{"lineNumber":60,"author":{"gitId":"Piyotato"},"content":"        return this.value.isEmpty()","lastModifiedDate":"2022-10-26"},{"lineNumber":61,"author":{"gitId":"Piyotato"},"content":"                ? NO_TELEHANDLE_STRING","lastModifiedDate":"2022-10-26"},{"lineNumber":62,"author":{"gitId":"Piyotato"},"content":"                : value;","lastModifiedDate":"2022-10-26"},{"lineNumber":63,"author":{"gitId":"dr-arrgghh"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":64,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":65,"author":{"gitId":"highorbit25"},"content":"    /**","lastModifiedDate":"2022-11-03"},{"lineNumber":66,"author":{"gitId":"highorbit25"},"content":"     * Returns string used for sorting telegram handle.","lastModifiedDate":"2022-11-03"},{"lineNumber":67,"author":{"gitId":"highorbit25"},"content":"     */","lastModifiedDate":"2022-11-03"},{"lineNumber":68,"author":{"gitId":"highorbit25"},"content":"    public String toCmpString() {","lastModifiedDate":"2022-11-03"},{"lineNumber":69,"author":{"gitId":"highorbit25"},"content":"        return this.value.isEmpty()","lastModifiedDate":"2022-11-03"},{"lineNumber":70,"author":{"gitId":"highorbit25"},"content":"               ? null","lastModifiedDate":"2022-11-03"},{"lineNumber":71,"author":{"gitId":"highorbit25"},"content":"               : value;","lastModifiedDate":"2022-11-03"},{"lineNumber":72,"author":{"gitId":"highorbit25"},"content":"    }","lastModifiedDate":"2022-11-03"},{"lineNumber":73,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":74,"author":{"gitId":"dr-arrgghh"},"content":"    @Override","lastModifiedDate":"2022-10-25"},{"lineNumber":75,"author":{"gitId":"dr-arrgghh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-25"},{"lineNumber":76,"author":{"gitId":"dr-arrgghh"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-25"},{"lineNumber":77,"author":{"gitId":"dr-arrgghh"},"content":"                || (other instanceof TeleHandle // instanceof handles nulls","lastModifiedDate":"2022-10-25"},{"lineNumber":78,"author":{"gitId":"dr-arrgghh"},"content":"                \u0026\u0026 value.equals(((TeleHandle) other).value)); // state check","lastModifiedDate":"2022-10-25"},{"lineNumber":79,"author":{"gitId":"dr-arrgghh"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":80,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":81,"author":{"gitId":"dr-arrgghh"},"content":"    @Override","lastModifiedDate":"2022-10-25"},{"lineNumber":82,"author":{"gitId":"dr-arrgghh"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-25"},{"lineNumber":83,"author":{"gitId":"dr-arrgghh"},"content":"        return this.value.hashCode();","lastModifiedDate":"2022-10-25"},{"lineNumber":84,"author":{"gitId":"dr-arrgghh"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":85,"author":{"gitId":"dr-arrgghh"},"content":"}","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"highorbit25":9,"dr-arrgghh":49,"Piyotato":14,"comicalromance":13}},{"path":"src/main/java/seedu/studmap/model/student/UniqueStudentList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.model.student;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":3,"author":{"gitId":"comicalromance"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"comicalromance"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"comicalromance"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"comicalromance"},"content":"import java.util.List;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"comicalromance"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"comicalromance"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.student.exceptions.DuplicateStudentException;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.student.exceptions.StudentNotFoundException;","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"comicalromance"},"content":"/**","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"comicalromance"},"content":" * A list of students that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"comicalromance"},"content":" * A student is considered unique by comparing using {@code Student#isSameStudent(Student)}. As such, adding and","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"comicalromance"},"content":" * updating of students uses Student#isSameStudent(Student) for equality so as to ensure that the student being added","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"comicalromance"},"content":" * or updated is unique in terms of identity in the UniquestudentList. However, the removal of a student uses","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"comicalromance"},"content":" * Student#equals(Object) so as to ensure that the student with exactly the same fields will be removed.","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"comicalromance"},"content":" * \u003cp\u003e","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"comicalromance"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"comicalromance"},"content":" *","lastModifiedDate":"2022-10-15"},{"lineNumber":24,"author":{"gitId":"comicalromance"},"content":" * @see Student#isSameStudent(Student)","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"comicalromance"},"content":" */","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"comicalromance"},"content":"public class UniqueStudentList implements Iterable\u003cStudent\u003e {","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"comicalromance"},"content":"    private final ObservableList\u003cStudent\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"comicalromance"},"content":"    private final ObservableList\u003cStudent\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-10-15"},{"lineNumber":30,"author":{"gitId":"comicalromance"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2022-10-15"},{"lineNumber":31,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":32,"author":{"gitId":"comicalromance"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":33,"author":{"gitId":"comicalromance"},"content":"     * Returns true if the list contains an equivalent student as the given argument.","lastModifiedDate":"2022-10-15"},{"lineNumber":34,"author":{"gitId":"comicalromance"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":35,"author":{"gitId":"comicalromance"},"content":"    public boolean contains(Student toCheck) {","lastModifiedDate":"2022-10-15"},{"lineNumber":36,"author":{"gitId":"comicalromance"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-10-15"},{"lineNumber":37,"author":{"gitId":"comicalromance"},"content":"        return internalList.stream().anyMatch(toCheck::isSameStudent);","lastModifiedDate":"2022-10-15"},{"lineNumber":38,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":39,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":40,"author":{"gitId":"comicalromance"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":41,"author":{"gitId":"comicalromance"},"content":"     * Adds a student to the list.","lastModifiedDate":"2022-10-15"},{"lineNumber":42,"author":{"gitId":"comicalromance"},"content":"     * The student must not already exist in the list.","lastModifiedDate":"2022-10-15"},{"lineNumber":43,"author":{"gitId":"comicalromance"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":44,"author":{"gitId":"comicalromance"},"content":"    public void add(Student toAdd) {","lastModifiedDate":"2022-10-15"},{"lineNumber":45,"author":{"gitId":"comicalromance"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-10-15"},{"lineNumber":46,"author":{"gitId":"comicalromance"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2022-10-15"},{"lineNumber":47,"author":{"gitId":"comicalromance"},"content":"            throw new DuplicateStudentException();","lastModifiedDate":"2022-10-15"},{"lineNumber":48,"author":{"gitId":"comicalromance"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":49,"author":{"gitId":"comicalromance"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2022-10-15"},{"lineNumber":50,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":51,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":52,"author":{"gitId":"comicalromance"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":53,"author":{"gitId":"comicalromance"},"content":"     * Sorts the list according to specified attribute and order.","lastModifiedDate":"2022-10-15"},{"lineNumber":54,"author":{"gitId":"comicalromance"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":55,"author":{"gitId":"highorbit25"},"content":"    public void sort(Comparator\u003cStudent\u003e comparator, Boolean isDescending) {","lastModifiedDate":"2022-10-21"},{"lineNumber":56,"author":{"gitId":"comicalromance"},"content":"        internalList.sort(comparator.thenComparing(Student::getCmpNameString)","lastModifiedDate":"2022-11-03"},{"lineNumber":57,"author":{"gitId":"comicalromance"},"content":"                .thenComparing(Student::getCmpIdString));","lastModifiedDate":"2022-11-03"},{"lineNumber":58,"author":{"gitId":"comicalromance"},"content":"        if (isDescending) {","lastModifiedDate":"2022-10-15"},{"lineNumber":59,"author":{"gitId":"comicalromance"},"content":"            FXCollections.reverse(internalList);","lastModifiedDate":"2022-10-15"},{"lineNumber":60,"author":{"gitId":"comicalromance"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":61,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":62,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":63,"author":{"gitId":"comicalromance"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":64,"author":{"gitId":"comicalromance"},"content":"     * Replaces the student {@code target} in the list with {@code editedStudent}.","lastModifiedDate":"2022-10-15"},{"lineNumber":65,"author":{"gitId":"comicalromance"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2022-10-15"},{"lineNumber":66,"author":{"gitId":"comicalromance"},"content":"     * The student identity of {@code editedStudent} must not be the same as another existing student in the list.","lastModifiedDate":"2022-10-15"},{"lineNumber":67,"author":{"gitId":"comicalromance"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":68,"author":{"gitId":"comicalromance"},"content":"    public void setStudent(Student target, Student editedStudent) {","lastModifiedDate":"2022-10-15"},{"lineNumber":69,"author":{"gitId":"comicalromance"},"content":"        requireAllNonNull(target, editedStudent);","lastModifiedDate":"2022-10-15"},{"lineNumber":70,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":71,"author":{"gitId":"comicalromance"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2022-10-15"},{"lineNumber":72,"author":{"gitId":"comicalromance"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-10-15"},{"lineNumber":73,"author":{"gitId":"comicalromance"},"content":"            throw new StudentNotFoundException();","lastModifiedDate":"2022-10-15"},{"lineNumber":74,"author":{"gitId":"comicalromance"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":75,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":76,"author":{"gitId":"comicalromance"},"content":"        if (!target.isSameStudent(editedStudent) \u0026\u0026 contains(editedStudent)) {","lastModifiedDate":"2022-10-15"},{"lineNumber":77,"author":{"gitId":"comicalromance"},"content":"            throw new DuplicateStudentException();","lastModifiedDate":"2022-10-15"},{"lineNumber":78,"author":{"gitId":"comicalromance"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":79,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":80,"author":{"gitId":"comicalromance"},"content":"        internalList.set(index, editedStudent);","lastModifiedDate":"2022-10-15"},{"lineNumber":81,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":82,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":83,"author":{"gitId":"comicalromance"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":84,"author":{"gitId":"comicalromance"},"content":"     * Removes the equivalent student from the list.","lastModifiedDate":"2022-10-15"},{"lineNumber":85,"author":{"gitId":"comicalromance"},"content":"     * The student must exist in the list.","lastModifiedDate":"2022-10-15"},{"lineNumber":86,"author":{"gitId":"comicalromance"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":87,"author":{"gitId":"comicalromance"},"content":"    public void remove(Student toRemove) {","lastModifiedDate":"2022-10-15"},{"lineNumber":88,"author":{"gitId":"comicalromance"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-10-15"},{"lineNumber":89,"author":{"gitId":"comicalromance"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2022-10-15"},{"lineNumber":90,"author":{"gitId":"comicalromance"},"content":"            throw new StudentNotFoundException();","lastModifiedDate":"2022-10-15"},{"lineNumber":91,"author":{"gitId":"comicalromance"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":92,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":93,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":94,"author":{"gitId":"comicalromance"},"content":"    public void setStudents(UniqueStudentList replacement) {","lastModifiedDate":"2022-10-15"},{"lineNumber":95,"author":{"gitId":"comicalromance"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2022-10-15"},{"lineNumber":96,"author":{"gitId":"comicalromance"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2022-10-15"},{"lineNumber":97,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":98,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":99,"author":{"gitId":"comicalromance"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":100,"author":{"gitId":"comicalromance"},"content":"     * Replaces the contents of this list with {@code students}.","lastModifiedDate":"2022-10-15"},{"lineNumber":101,"author":{"gitId":"comicalromance"},"content":"     * {@code students} must not contain duplicate students.","lastModifiedDate":"2022-10-15"},{"lineNumber":102,"author":{"gitId":"comicalromance"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":103,"author":{"gitId":"comicalromance"},"content":"    public void setStudents(List\u003cStudent\u003e students) {","lastModifiedDate":"2022-10-15"},{"lineNumber":104,"author":{"gitId":"comicalromance"},"content":"        requireAllNonNull(students);","lastModifiedDate":"2022-10-15"},{"lineNumber":105,"author":{"gitId":"comicalromance"},"content":"        if (!studentsAreUnique(students)) {","lastModifiedDate":"2022-10-15"},{"lineNumber":106,"author":{"gitId":"comicalromance"},"content":"            throw new DuplicateStudentException();","lastModifiedDate":"2022-10-15"},{"lineNumber":107,"author":{"gitId":"comicalromance"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":108,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":109,"author":{"gitId":"comicalromance"},"content":"        internalList.setAll(students);","lastModifiedDate":"2022-10-15"},{"lineNumber":110,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":111,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":112,"author":{"gitId":"comicalromance"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":113,"author":{"gitId":"comicalromance"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2022-10-15"},{"lineNumber":114,"author":{"gitId":"comicalromance"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":115,"author":{"gitId":"comicalromance"},"content":"    public ObservableList\u003cStudent\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-10-15"},{"lineNumber":116,"author":{"gitId":"comicalromance"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2022-10-15"},{"lineNumber":117,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":118,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":119,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":120,"author":{"gitId":"comicalromance"},"content":"    @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":121,"author":{"gitId":"comicalromance"},"content":"    public Iterator\u003cStudent\u003e iterator() {","lastModifiedDate":"2022-10-15"},{"lineNumber":122,"author":{"gitId":"comicalromance"},"content":"        return internalList.iterator();","lastModifiedDate":"2022-10-15"},{"lineNumber":123,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":124,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":125,"author":{"gitId":"comicalromance"},"content":"    @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":126,"author":{"gitId":"comicalromance"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-15"},{"lineNumber":127,"author":{"gitId":"comicalromance"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-15"},{"lineNumber":128,"author":{"gitId":"comicalromance"},"content":"                || (other instanceof UniqueStudentList // instanceof handles nulls","lastModifiedDate":"2022-10-15"},{"lineNumber":129,"author":{"gitId":"comicalromance"},"content":"                \u0026\u0026 internalList.equals(((UniqueStudentList) other).internalList));","lastModifiedDate":"2022-10-15"},{"lineNumber":130,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":131,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":132,"author":{"gitId":"comicalromance"},"content":"    @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":133,"author":{"gitId":"comicalromance"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-15"},{"lineNumber":134,"author":{"gitId":"comicalromance"},"content":"        return internalList.hashCode();","lastModifiedDate":"2022-10-15"},{"lineNumber":135,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":136,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":137,"author":{"gitId":"comicalromance"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":138,"author":{"gitId":"comicalromance"},"content":"     * Returns true if {@code students} contains only unique students.","lastModifiedDate":"2022-10-15"},{"lineNumber":139,"author":{"gitId":"comicalromance"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":140,"author":{"gitId":"comicalromance"},"content":"    private boolean studentsAreUnique(List\u003cStudent\u003e students) {","lastModifiedDate":"2022-10-15"},{"lineNumber":141,"author":{"gitId":"comicalromance"},"content":"        for (int i \u003d 0; i \u003c students.size() - 1; i++) {","lastModifiedDate":"2022-10-15"},{"lineNumber":142,"author":{"gitId":"comicalromance"},"content":"            for (int j \u003d i + 1; j \u003c students.size(); j++) {","lastModifiedDate":"2022-10-15"},{"lineNumber":143,"author":{"gitId":"comicalromance"},"content":"                if (students.get(i).isSameStudent(students.get(j))) {","lastModifiedDate":"2022-10-15"},{"lineNumber":144,"author":{"gitId":"comicalromance"},"content":"                    return false;","lastModifiedDate":"2022-10-15"},{"lineNumber":145,"author":{"gitId":"comicalromance"},"content":"                }","lastModifiedDate":"2022-10-15"},{"lineNumber":146,"author":{"gitId":"comicalromance"},"content":"            }","lastModifiedDate":"2022-10-15"},{"lineNumber":147,"author":{"gitId":"comicalromance"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":148,"author":{"gitId":"comicalromance"},"content":"        return true;","lastModifiedDate":"2022-10-15"},{"lineNumber":149,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":150,"author":{"gitId":"comicalromance"},"content":"}","lastModifiedDate":"2022-10-15"}],"authorContributionMap":{"highorbit25":1,"comicalromance":149}},{"path":"src/main/java/seedu/studmap/model/student/exceptions/DuplicateStudentException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.model.student.exceptions;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":3,"author":{"gitId":"comicalromance"},"content":"/**","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"comicalromance"},"content":" * Signals that the operation will result in duplicate Students (Students are considered duplicates if","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"comicalromance"},"content":" * they have the same identity).","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"comicalromance"},"content":" */","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"comicalromance"},"content":"public class DuplicateStudentException extends RuntimeException {","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"comicalromance"},"content":"    public DuplicateStudentException() {","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"comicalromance"},"content":"        super(\"Operation would result in duplicate students\");","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"comicalromance"},"content":"}","lastModifiedDate":"2022-10-15"}],"authorContributionMap":{"comicalromance":11}},{"path":"src/main/java/seedu/studmap/model/student/exceptions/StudentNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.model.student.exceptions;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":3,"author":{"gitId":"comicalromance"},"content":"/**","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"comicalromance"},"content":" * Signals that the operation is unable to find the specified student.","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"comicalromance"},"content":" */","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"comicalromance"},"content":"public class StudentNotFoundException extends RuntimeException {}","lastModifiedDate":"2022-10-15"}],"authorContributionMap":{"comicalromance":6}},{"path":"src/main/java/seedu/studmap/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.model.tag;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"comicalromance"},"content":" * Represents a Tag in the student map.","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":51,"comicalromance":3}},{"path":"src/main/java/seedu/studmap/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.model.util;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"Piyotato"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":8,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.ReadOnlyStudMap;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.StudMap;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"lpohsien"},"content":"import seedu.studmap.model.student.Assignment;","lastModifiedDate":"2022-10-23"},{"lineNumber":11,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.student.Attendance;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.student.Email;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"dr-arrgghh"},"content":"import seedu.studmap.model.student.GitName;","lastModifiedDate":"2022-10-25"},{"lineNumber":14,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.student.Module;","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.student.Name;","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"highorbit25"},"content":"import seedu.studmap.model.student.Participation;","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.student.Phone;","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.student.Student;","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.student.StudentData;","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"dr-arrgghh"},"content":"import seedu.studmap.model.student.StudentID;","lastModifiedDate":"2022-10-25"},{"lineNumber":21,"author":{"gitId":"dr-arrgghh"},"content":"import seedu.studmap.model.student.TeleHandle;","lastModifiedDate":"2022-10-25"},{"lineNumber":22,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.tag.Tag;","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":25,"author":{"gitId":"comicalromance"},"content":" * Contains utility methods for populating {@code StudMap} with sample data.","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":28,"author":{"gitId":"comicalromance"},"content":"    public static Student[] getSampleStudents() {","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"comicalromance"},"content":"        StudentData studentData;","lastModifiedDate":"2022-10-15"},{"lineNumber":31,"author":{"gitId":"dr-arrgghh"},"content":"        ArrayList\u003cStudentData\u003e data \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-25"},{"lineNumber":32,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"dr-arrgghh"},"content":"        studentData \u003d new StudentData();","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"Piyotato"},"content":"        studentData.setName(new Name(\"Silas Yeo\"));","lastModifiedDate":"2022-11-06"},{"lineNumber":35,"author":{"gitId":"Piyotato"},"content":"        studentData.setPhone(new Phone(\"84112213\"));","lastModifiedDate":"2022-11-06"},{"lineNumber":36,"author":{"gitId":"Piyotato"},"content":"        studentData.setEmail(new Email());","lastModifiedDate":"2022-11-06"},{"lineNumber":37,"author":{"gitId":"Piyotato"},"content":"        studentData.setModule(new Module(\"CS2106\"));","lastModifiedDate":"2022-11-06"},{"lineNumber":38,"author":{"gitId":"Piyotato"},"content":"        studentData.setId(new StudentID(\"E0773771\"));","lastModifiedDate":"2022-11-06"},{"lineNumber":39,"author":{"gitId":"Piyotato"},"content":"        studentData.setGitUser(new GitName(\"silasysy\"));","lastModifiedDate":"2022-11-06"},{"lineNumber":40,"author":{"gitId":"Piyotato"},"content":"        studentData.setTeleHandle(new TeleHandle(\"@silas\"));","lastModifiedDate":"2022-11-06"},{"lineNumber":41,"author":{"gitId":"Piyotato"},"content":"        studentData.setTags(getTagSet(\"StrongStudent\"));","lastModifiedDate":"2022-11-06"},{"lineNumber":42,"author":{"gitId":"Piyotato"},"content":"        studentData.setAttendances(getAttendedSet(\"T01\", \"T02\", \"T03\", \"T04\"));","lastModifiedDate":"2022-11-06"},{"lineNumber":43,"author":{"gitId":"Piyotato"},"content":"        studentData.setAssignments(getMarkedAssignments(\"A01\"));","lastModifiedDate":"2022-11-06"},{"lineNumber":44,"author":{"gitId":"Piyotato"},"content":"        studentData.addAssignments(getReceivedAssignments(\"A02\"));","lastModifiedDate":"2022-11-06"},{"lineNumber":45,"author":{"gitId":"Piyotato"},"content":"        studentData.addAssignments(getNewAssignments(\"A03\"));","lastModifiedDate":"2022-11-06"},{"lineNumber":46,"author":{"gitId":"Piyotato"},"content":"        studentData.setParticipations(getParticipatedSet(\"T03-Sharing\", \"T04-Sharing\"));","lastModifiedDate":"2022-11-06"},{"lineNumber":47,"author":{"gitId":"Piyotato"},"content":"        studentData.addParticipations(getNotParticipatedSet(\"T05-Sharing\"));","lastModifiedDate":"2022-11-06"},{"lineNumber":48,"author":{"gitId":"dr-arrgghh"},"content":"        data.add(studentData);","lastModifiedDate":"2022-10-25"},{"lineNumber":49,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":51,"author":{"gitId":"dr-arrgghh"},"content":"        studentData \u003d new StudentData();","lastModifiedDate":"2022-10-26"},{"lineNumber":52,"author":{"gitId":"Piyotato"},"content":"        studentData.setName(new Name(\"Sally\"));","lastModifiedDate":"2022-11-06"},{"lineNumber":53,"author":{"gitId":"Piyotato"},"content":"        studentData.setPhone(new Phone(\"94732221\"));","lastModifiedDate":"2022-11-06"},{"lineNumber":54,"author":{"gitId":"Piyotato"},"content":"        studentData.setEmail(new Email());","lastModifiedDate":"2022-11-06"},{"lineNumber":55,"author":{"gitId":"Piyotato"},"content":"        studentData.setModule(new Module(\"CS2106\"));","lastModifiedDate":"2022-11-06"},{"lineNumber":56,"author":{"gitId":"Piyotato"},"content":"        studentData.setId(new StudentID(\"E1288122\"));","lastModifiedDate":"2022-11-06"},{"lineNumber":57,"author":{"gitId":"Piyotato"},"content":"        studentData.setGitUser(new GitName(\"sallysys\"));","lastModifiedDate":"2022-11-06"},{"lineNumber":58,"author":{"gitId":"Piyotato"},"content":"        studentData.setTeleHandle(new TeleHandle(\"@sallys\"));","lastModifiedDate":"2022-11-06"},{"lineNumber":59,"author":{"gitId":"Piyotato"},"content":"        studentData.setTags(getTagSet(\"NeedsHelp\"));","lastModifiedDate":"2022-11-06"},{"lineNumber":60,"author":{"gitId":"Piyotato"},"content":"        studentData.setAttendances(getAttendedSet(\"T01\", \"T03\", \"T04\"));","lastModifiedDate":"2022-11-06"},{"lineNumber":61,"author":{"gitId":"Piyotato"},"content":"        studentData.addAttendances(getNotAttendedSet(\"T02\"));","lastModifiedDate":"2022-11-06"},{"lineNumber":62,"author":{"gitId":"Piyotato"},"content":"        studentData.setAssignments(getReceivedAssignments(\"A01\", \"A02\"));","lastModifiedDate":"2022-11-06"},{"lineNumber":63,"author":{"gitId":"Piyotato"},"content":"        studentData.addAssignments(getNewAssignments(\"A03\"));","lastModifiedDate":"2022-11-06"},{"lineNumber":64,"author":{"gitId":"Piyotato"},"content":"        studentData.setParticipations(getParticipatedSet(\"T03-Sharing\", \"T04-Sharing\"));","lastModifiedDate":"2022-11-06"},{"lineNumber":65,"author":{"gitId":"Piyotato"},"content":"        studentData.addParticipations(getNotParticipatedSet(\"T05-Sharing\"));","lastModifiedDate":"2022-11-06"},{"lineNumber":66,"author":{"gitId":"dr-arrgghh"},"content":"        data.add(studentData);","lastModifiedDate":"2022-10-25"},{"lineNumber":67,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":68,"author":{"gitId":"dr-arrgghh"},"content":"        studentData \u003d new StudentData();","lastModifiedDate":"2022-10-26"},{"lineNumber":69,"author":{"gitId":"Piyotato"},"content":"        studentData.setName(new Name(\"Sheyuan\"));","lastModifiedDate":"2022-11-06"},{"lineNumber":70,"author":{"gitId":"Piyotato"},"content":"        studentData.setPhone(new Phone(\"98771923\"));","lastModifiedDate":"2022-11-06"},{"lineNumber":71,"author":{"gitId":"Piyotato"},"content":"        studentData.setEmail(new Email());","lastModifiedDate":"2022-11-06"},{"lineNumber":72,"author":{"gitId":"Piyotato"},"content":"        studentData.setModule(new Module(\"CS2106\"));","lastModifiedDate":"2022-11-06"},{"lineNumber":73,"author":{"gitId":"Piyotato"},"content":"        studentData.setId(new StudentID(\"E2345229\"));","lastModifiedDate":"2022-11-06"},{"lineNumber":74,"author":{"gitId":"Piyotato"},"content":"        studentData.setGitUser(new GitName(\"piyopp\"));","lastModifiedDate":"2022-11-06"},{"lineNumber":75,"author":{"gitId":"Piyotato"},"content":"        studentData.setTeleHandle(new TeleHandle(\"@piyo\"));","lastModifiedDate":"2022-11-06"},{"lineNumber":76,"author":{"gitId":"Piyotato"},"content":"        data.add(studentData);","lastModifiedDate":"2022-11-07"},{"lineNumber":77,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":78,"author":{"gitId":"Piyotato"},"content":"        studentData \u003d new StudentData();","lastModifiedDate":"2022-11-06"},{"lineNumber":79,"author":{"gitId":"Piyotato"},"content":"        studentData.setName(new Name(\"Po-Hsien\"));","lastModifiedDate":"2022-11-06"},{"lineNumber":80,"author":{"gitId":"Piyotato"},"content":"        studentData.setPhone(new Phone(\"98882110\"));","lastModifiedDate":"2022-11-06"},{"lineNumber":81,"author":{"gitId":"Piyotato"},"content":"        studentData.setEmail(new Email(\"po@popo.po\"));","lastModifiedDate":"2022-11-06"},{"lineNumber":82,"author":{"gitId":"comicalromance"},"content":"        studentData.setModule(new Module(\"CS2103T\"));","lastModifiedDate":"2022-10-26"},{"lineNumber":83,"author":{"gitId":"Piyotato"},"content":"        studentData.setId(new StudentID(\"E0998281\"));","lastModifiedDate":"2022-11-06"},{"lineNumber":84,"author":{"gitId":"Piyotato"},"content":"        studentData.setGitUser(new GitName(\"popopo\"));","lastModifiedDate":"2022-11-06"},{"lineNumber":85,"author":{"gitId":"Piyotato"},"content":"        studentData.setTeleHandle(new TeleHandle(\"@popo\"));","lastModifiedDate":"2022-11-06"},{"lineNumber":86,"author":{"gitId":"Piyotato"},"content":"        data.add(studentData);","lastModifiedDate":"2022-11-07"},{"lineNumber":87,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":88,"author":{"gitId":"dr-arrgghh"},"content":"        studentData \u003d new StudentData();","lastModifiedDate":"2022-10-26"},{"lineNumber":89,"author":{"gitId":"Piyotato"},"content":"        studentData.setName(new Name(\"Po Taeto\"));","lastModifiedDate":"2022-11-06"},{"lineNumber":90,"author":{"gitId":"Piyotato"},"content":"        studentData.setPhone(new Phone(\"96600302\"));","lastModifiedDate":"2022-11-06"},{"lineNumber":91,"author":{"gitId":"Piyotato"},"content":"        studentData.setEmail(new Email());","lastModifiedDate":"2022-11-06"},{"lineNumber":92,"author":{"gitId":"Piyotato"},"content":"        studentData.setModule(new Module(\"CS2103T\"));","lastModifiedDate":"2022-11-06"},{"lineNumber":93,"author":{"gitId":"Piyotato"},"content":"        studentData.setId(new StudentID(\"E0982113\"));","lastModifiedDate":"2022-11-06"},{"lineNumber":94,"author":{"gitId":"Piyotato"},"content":"        studentData.setGitUser(new GitName(\"potatopo\"));","lastModifiedDate":"2022-11-06"},{"lineNumber":95,"author":{"gitId":"Piyotato"},"content":"        studentData.setTeleHandle(new TeleHandle());","lastModifiedDate":"2022-11-06"},{"lineNumber":96,"author":{"gitId":"Piyotato"},"content":"        data.add(studentData);","lastModifiedDate":"2022-11-07"},{"lineNumber":97,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":98,"author":{"gitId":"dr-arrgghh"},"content":"        studentData \u003d new StudentData();","lastModifiedDate":"2022-10-26"},{"lineNumber":99,"author":{"gitId":"Piyotato"},"content":"        studentData.setName(new Name(\"Salad Yo\"));","lastModifiedDate":"2022-11-06"},{"lineNumber":100,"author":{"gitId":"Piyotato"},"content":"        studentData.setPhone(new Phone(\"89123612\"));","lastModifiedDate":"2022-11-06"},{"lineNumber":101,"author":{"gitId":"Piyotato"},"content":"        studentData.setEmail(new Email(\"salad@yo.org\"));","lastModifiedDate":"2022-11-06"},{"lineNumber":102,"author":{"gitId":"comicalromance"},"content":"        studentData.setModule(new Module(\"CS2106\"));","lastModifiedDate":"2022-10-26"},{"lineNumber":103,"author":{"gitId":"Piyotato"},"content":"        studentData.setId(new StudentID(\"E0123111\"));","lastModifiedDate":"2022-11-06"},{"lineNumber":104,"author":{"gitId":"Piyotato"},"content":"        studentData.setGitUser(new GitName(\"saladydy\"));","lastModifiedDate":"2022-11-06"},{"lineNumber":105,"author":{"gitId":"Piyotato"},"content":"        studentData.setTeleHandle(new TeleHandle(\"@salad\"));","lastModifiedDate":"2022-11-06"},{"lineNumber":106,"author":{"gitId":"Piyotato"},"content":"        data.add(studentData);","lastModifiedDate":"2022-11-07"},{"lineNumber":107,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":108,"author":{"gitId":"dr-arrgghh"},"content":"        studentData \u003d new StudentData();","lastModifiedDate":"2022-10-26"},{"lineNumber":109,"author":{"gitId":"Piyotato"},"content":"        studentData.setName(new Name(\"Tom Aito\"));","lastModifiedDate":"2022-11-06"},{"lineNumber":110,"author":{"gitId":"Piyotato"},"content":"        studentData.setPhone(new Phone(\"88456973\"));","lastModifiedDate":"2022-11-06"},{"lineNumber":111,"author":{"gitId":"Piyotato"},"content":"        studentData.setEmail(new Email());","lastModifiedDate":"2022-11-06"},{"lineNumber":112,"author":{"gitId":"Piyotato"},"content":"        studentData.setModule(new Module(\"CS2106\"));","lastModifiedDate":"2022-11-06"},{"lineNumber":113,"author":{"gitId":"Piyotato"},"content":"        studentData.setId(new StudentID(\"E1728221\"));","lastModifiedDate":"2022-11-06"},{"lineNumber":114,"author":{"gitId":"Piyotato"},"content":"        studentData.setGitUser(new GitName(\"tomatoto\"));","lastModifiedDate":"2022-11-06"},{"lineNumber":115,"author":{"gitId":"Piyotato"},"content":"        studentData.setTeleHandle(new TeleHandle());","lastModifiedDate":"2022-11-06"},{"lineNumber":116,"author":{"gitId":"Piyotato"},"content":"        data.add(studentData);","lastModifiedDate":"2022-11-07"},{"lineNumber":117,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":118,"author":{"gitId":"dr-arrgghh"},"content":"        return data.stream()","lastModifiedDate":"2022-10-25"},{"lineNumber":119,"author":{"gitId":"comicalromance"},"content":"                .map(Student::new)","lastModifiedDate":"2022-10-15"},{"lineNumber":120,"author":{"gitId":"comicalromance"},"content":"                .toArray(Student[]::new);","lastModifiedDate":"2022-10-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":123,"author":{"gitId":"comicalromance"},"content":"    public static ReadOnlyStudMap getSampleStudMap() {","lastModifiedDate":"2022-10-15"},{"lineNumber":124,"author":{"gitId":"comicalromance"},"content":"        StudMap sampleSm \u003d new StudMap();","lastModifiedDate":"2022-10-15"},{"lineNumber":125,"author":{"gitId":"comicalromance"},"content":"        for (Student sampleStudent : getSampleStudents()) {","lastModifiedDate":"2022-10-15"},{"lineNumber":126,"author":{"gitId":"comicalromance"},"content":"            sampleSm.addStudent(sampleStudent);","lastModifiedDate":"2022-10-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":128,"author":{"gitId":"comicalromance"},"content":"        return sampleSm;","lastModifiedDate":"2022-10-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":140,"author":{"gitId":"comicalromance"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":141,"author":{"gitId":"comicalromance"},"content":"     * Returns an Attendance set of attended classes containing the list of strings given.","lastModifiedDate":"2022-10-10"},{"lineNumber":142,"author":{"gitId":"comicalromance"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":143,"author":{"gitId":"comicalromance"},"content":"    public static Set\u003cAttendance\u003e getAttendedSet(String... strings) {","lastModifiedDate":"2022-10-10"},{"lineNumber":144,"author":{"gitId":"comicalromance"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2022-10-10"},{"lineNumber":145,"author":{"gitId":"Piyotato"},"content":"                .map(className -\u003e new Attendance(className, Attendance.Status.PRESENT))","lastModifiedDate":"2022-11-06"},{"lineNumber":146,"author":{"gitId":"comicalromance"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2022-10-10"},{"lineNumber":147,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":148,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":149,"author":{"gitId":"comicalromance"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":150,"author":{"gitId":"comicalromance"},"content":"     * Returns an Attendance set of classes not attended containing the list of strings given.","lastModifiedDate":"2022-10-10"},{"lineNumber":151,"author":{"gitId":"comicalromance"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":152,"author":{"gitId":"comicalromance"},"content":"    public static Set\u003cAttendance\u003e getNotAttendedSet(String... strings) {","lastModifiedDate":"2022-10-10"},{"lineNumber":153,"author":{"gitId":"comicalromance"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2022-10-10"},{"lineNumber":154,"author":{"gitId":"Piyotato"},"content":"                .map(className -\u003e new Attendance(className, Attendance.Status.ABSENT))","lastModifiedDate":"2022-11-06"},{"lineNumber":155,"author":{"gitId":"comicalromance"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2022-10-10"},{"lineNumber":156,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":157,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":158,"author":{"gitId":"highorbit25"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":159,"author":{"gitId":"highorbit25"},"content":"     * Returns a Participation set from the given string of participated components.","lastModifiedDate":"2022-10-27"},{"lineNumber":160,"author":{"gitId":"highorbit25"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":161,"author":{"gitId":"highorbit25"},"content":"    public static Set\u003cParticipation\u003e getParticipatedSet(String... strings) {","lastModifiedDate":"2022-10-27"},{"lineNumber":162,"author":{"gitId":"highorbit25"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2022-10-27"},{"lineNumber":163,"author":{"gitId":"Piyotato"},"content":"                .map(participationComponent -\u003e new Participation(participationComponent,","lastModifiedDate":"2022-11-06"},{"lineNumber":164,"author":{"gitId":"Piyotato"},"content":"                        Participation.Status.PARTICIPATED))","lastModifiedDate":"2022-11-06"},{"lineNumber":165,"author":{"gitId":"highorbit25"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2022-10-27"},{"lineNumber":166,"author":{"gitId":"highorbit25"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":167,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":168,"author":{"gitId":"highorbit25"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":169,"author":{"gitId":"highorbit25"},"content":"     * Returns a Participation set from the given string of not participated components.","lastModifiedDate":"2022-10-27"},{"lineNumber":170,"author":{"gitId":"highorbit25"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":171,"author":{"gitId":"highorbit25"},"content":"    public static Set\u003cParticipation\u003e getNotParticipatedSet(String... strings) {","lastModifiedDate":"2022-10-27"},{"lineNumber":172,"author":{"gitId":"highorbit25"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2022-10-27"},{"lineNumber":173,"author":{"gitId":"Piyotato"},"content":"                .map(participationComponent -\u003e new Participation(participationComponent,","lastModifiedDate":"2022-11-06"},{"lineNumber":174,"author":{"gitId":"Piyotato"},"content":"                        Participation.Status.NOT_PARTICIPATED))","lastModifiedDate":"2022-11-06"},{"lineNumber":175,"author":{"gitId":"highorbit25"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2022-10-27"},{"lineNumber":176,"author":{"gitId":"highorbit25"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":177,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":178,"author":{"gitId":"lpohsien"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":179,"author":{"gitId":"lpohsien"},"content":"     * Returns a set of unmarked assignments containing the list of strings.","lastModifiedDate":"2022-10-23"},{"lineNumber":180,"author":{"gitId":"lpohsien"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":181,"author":{"gitId":"lpohsien"},"content":"    public static Set\u003cAssignment\u003e getNewAssignments(String... strings) {","lastModifiedDate":"2022-10-23"},{"lineNumber":182,"author":{"gitId":"lpohsien"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2022-10-23"},{"lineNumber":183,"author":{"gitId":"lpohsien"},"content":"                .map(assignmentName -\u003e new Assignment(assignmentName, Assignment.Status.NEW))","lastModifiedDate":"2022-10-23"},{"lineNumber":184,"author":{"gitId":"lpohsien"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2022-10-23"},{"lineNumber":185,"author":{"gitId":"lpohsien"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":186,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":187,"author":{"gitId":"lpohsien"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":188,"author":{"gitId":"lpohsien"},"content":"     * Returns a set of received assignments containing the list of strings.","lastModifiedDate":"2022-10-23"},{"lineNumber":189,"author":{"gitId":"lpohsien"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":190,"author":{"gitId":"lpohsien"},"content":"    public static Set\u003cAssignment\u003e getReceivedAssignments(String... strings) {","lastModifiedDate":"2022-10-23"},{"lineNumber":191,"author":{"gitId":"lpohsien"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2022-10-23"},{"lineNumber":192,"author":{"gitId":"lpohsien"},"content":"                .map(assignmentName -\u003e new Assignment(assignmentName, Assignment.Status.RECEIVED))","lastModifiedDate":"2022-10-23"},{"lineNumber":193,"author":{"gitId":"lpohsien"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2022-10-23"},{"lineNumber":194,"author":{"gitId":"lpohsien"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":195,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":196,"author":{"gitId":"lpohsien"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":197,"author":{"gitId":"lpohsien"},"content":"     * Returns a set of marked assignments containing the list of strings.","lastModifiedDate":"2022-10-23"},{"lineNumber":198,"author":{"gitId":"lpohsien"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":199,"author":{"gitId":"lpohsien"},"content":"    public static Set\u003cAssignment\u003e getMarkedAssignments(String... strings) {","lastModifiedDate":"2022-10-23"},{"lineNumber":200,"author":{"gitId":"lpohsien"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2022-10-23"},{"lineNumber":201,"author":{"gitId":"lpohsien"},"content":"                .map(assignmentName -\u003e new Assignment(assignmentName, Assignment.Status.MARKED))","lastModifiedDate":"2022-10-23"},{"lineNumber":202,"author":{"gitId":"lpohsien"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2022-10-23"},{"lineNumber":203,"author":{"gitId":"lpohsien"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"highorbit25":17,"dr-arrgghh":13,"Piyotato":85,"-":23,"comicalromance":38,"lpohsien":28}},{"path":"src/main/java/seedu/studmap/storage/JsonAdaptedAssignment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lpohsien"},"content":"package seedu.studmap.storage;","lastModifiedDate":"2022-10-23"},{"lineNumber":2,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":3,"author":{"gitId":"lpohsien"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"lpohsien"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2022-10-23"},{"lineNumber":5,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":6,"author":{"gitId":"lpohsien"},"content":"import seedu.studmap.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-23"},{"lineNumber":7,"author":{"gitId":"lpohsien"},"content":"import seedu.studmap.model.student.Assignment;","lastModifiedDate":"2022-10-23"},{"lineNumber":8,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":9,"author":{"gitId":"lpohsien"},"content":"/**","lastModifiedDate":"2022-10-23"},{"lineNumber":10,"author":{"gitId":"lpohsien"},"content":" * Jackson-friendly version of {@link Assignment}.","lastModifiedDate":"2022-10-23"},{"lineNumber":11,"author":{"gitId":"lpohsien"},"content":" */","lastModifiedDate":"2022-10-23"},{"lineNumber":12,"author":{"gitId":"lpohsien"},"content":"class JsonAdaptedAssignment {","lastModifiedDate":"2022-10-23"},{"lineNumber":13,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":14,"author":{"gitId":"lpohsien"},"content":"    private final String assignmentName;","lastModifiedDate":"2022-10-23"},{"lineNumber":15,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":16,"author":{"gitId":"lpohsien"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":17,"author":{"gitId":"lpohsien"},"content":"     * Constructs a {@code JsonAdaptedAssignment} with the given {@code assignmentName}.","lastModifiedDate":"2022-10-23"},{"lineNumber":18,"author":{"gitId":"lpohsien"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":19,"author":{"gitId":"lpohsien"},"content":"    @JsonCreator","lastModifiedDate":"2022-10-23"},{"lineNumber":20,"author":{"gitId":"lpohsien"},"content":"    public JsonAdaptedAssignment(String assignmentName) {","lastModifiedDate":"2022-10-23"},{"lineNumber":21,"author":{"gitId":"lpohsien"},"content":"        this.assignmentName \u003d assignmentName;","lastModifiedDate":"2022-10-23"},{"lineNumber":22,"author":{"gitId":"lpohsien"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":23,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":24,"author":{"gitId":"lpohsien"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":25,"author":{"gitId":"lpohsien"},"content":"     * Converts a given {@code Assignment} into this class for Jackson use.","lastModifiedDate":"2022-10-23"},{"lineNumber":26,"author":{"gitId":"lpohsien"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":27,"author":{"gitId":"lpohsien"},"content":"    public JsonAdaptedAssignment(Assignment source) {","lastModifiedDate":"2022-10-23"},{"lineNumber":28,"author":{"gitId":"lpohsien"},"content":"        assignmentName \u003d source.getString();","lastModifiedDate":"2022-10-23"},{"lineNumber":29,"author":{"gitId":"lpohsien"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":30,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":31,"author":{"gitId":"lpohsien"},"content":"    @JsonValue","lastModifiedDate":"2022-10-23"},{"lineNumber":32,"author":{"gitId":"lpohsien"},"content":"    public String getAssignmentName() {","lastModifiedDate":"2022-10-23"},{"lineNumber":33,"author":{"gitId":"lpohsien"},"content":"        return assignmentName;","lastModifiedDate":"2022-10-23"},{"lineNumber":34,"author":{"gitId":"lpohsien"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":35,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":36,"author":{"gitId":"lpohsien"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":37,"author":{"gitId":"lpohsien"},"content":"     * Converts this Jackson-friendly adapted Assignment object into the model\u0027s {@code Assignment} object.","lastModifiedDate":"2022-10-23"},{"lineNumber":38,"author":{"gitId":"lpohsien"},"content":"     *","lastModifiedDate":"2022-10-23"},{"lineNumber":39,"author":{"gitId":"lpohsien"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted Assignment.","lastModifiedDate":"2022-10-23"},{"lineNumber":40,"author":{"gitId":"lpohsien"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":41,"author":{"gitId":"Piyotato"},"content":"    public Assignment toModelType() throws IllegalValueException {","lastModifiedDate":"2022-11-07"},{"lineNumber":42,"author":{"gitId":"lpohsien"},"content":"        String[] values \u003d assignmentName.split(\":\");","lastModifiedDate":"2022-10-23"},{"lineNumber":43,"author":{"gitId":"lpohsien"},"content":"        if (values.length !\u003d 2","lastModifiedDate":"2022-10-23"},{"lineNumber":44,"author":{"gitId":"lpohsien"},"content":"                || !Assignment.isValidAssignmentName(values[0])) {","lastModifiedDate":"2022-10-23"},{"lineNumber":45,"author":{"gitId":"Piyotato"},"content":"            throw new IllegalArgumentException(Assignment.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-11-06"},{"lineNumber":46,"author":{"gitId":"lpohsien"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":47,"author":{"gitId":"Piyotato"},"content":"        Assignment.Status markingStatus \u003d Assignment.Status.fromString(values[1]);","lastModifiedDate":"2022-11-06"},{"lineNumber":48,"author":{"gitId":"lpohsien"},"content":"        return new Assignment(values[0], markingStatus);","lastModifiedDate":"2022-10-23"},{"lineNumber":49,"author":{"gitId":"lpohsien"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":50,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":51,"author":{"gitId":"lpohsien"},"content":"}","lastModifiedDate":"2022-10-23"}],"authorContributionMap":{"Piyotato":3,"lpohsien":48}},{"path":"src/main/java/seedu/studmap/storage/JsonAdaptedAttendance.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.storage;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"comicalromance"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"comicalromance"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.student.Attendance;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"comicalromance"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"comicalromance"},"content":" * Jackson-friendly version of {@link Attendance}.","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"comicalromance"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"comicalromance"},"content":"class JsonAdaptedAttendance {","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"comicalromance"},"content":"    private final String className;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"comicalromance"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"lpohsien"},"content":"     * Constructs a {@code JsonAdaptedAttendance} with the given {@code className}.","lastModifiedDate":"2022-10-23"},{"lineNumber":18,"author":{"gitId":"comicalromance"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"comicalromance"},"content":"    @JsonCreator","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"comicalromance"},"content":"    public JsonAdaptedAttendance(String className) {","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"comicalromance"},"content":"        this.className \u003d className;","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"comicalromance"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"lpohsien"},"content":"     * Converts a given {@code Attendance} into this class for Jackson use.","lastModifiedDate":"2022-10-23"},{"lineNumber":26,"author":{"gitId":"comicalromance"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"comicalromance"},"content":"    public JsonAdaptedAttendance(Attendance source) {","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"comicalromance"},"content":"        className \u003d source.getString();","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"comicalromance"},"content":"    @JsonValue","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"comicalromance"},"content":"    public String getClassName() {","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"comicalromance"},"content":"        return className;","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"comicalromance"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"comicalromance"},"content":"     * Converts this Jackson-friendly adapted attendance object into the model\u0027s {@code Attendance} object.","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"comicalromance"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"comicalromance"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted attendance.","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"comicalromance"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"comicalromance"},"content":"    public Attendance toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"comicalromance"},"content":"        String[] values \u003d className.split(\":\");","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"Piyotato"},"content":"        Attendance.Status status;","lastModifiedDate":"2022-11-06"},{"lineNumber":44,"author":{"gitId":"comicalromance"},"content":"        if (values.length !\u003d 2 || !Attendance.isValidClassName(values[0])) {","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"comicalromance"},"content":"            throw new IllegalValueException(Attendance.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"comicalromance"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":48,"author":{"gitId":"Piyotato"},"content":"        try {","lastModifiedDate":"2022-11-06"},{"lineNumber":49,"author":{"gitId":"Piyotato"},"content":"            status \u003d Attendance.Status.fromString(values[1]);","lastModifiedDate":"2022-11-06"},{"lineNumber":50,"author":{"gitId":"Piyotato"},"content":"        } catch (IllegalArgumentException iae) {","lastModifiedDate":"2022-11-06"},{"lineNumber":51,"author":{"gitId":"Piyotato"},"content":"            throw new IllegalValueException(iae.getMessage());","lastModifiedDate":"2022-11-06"},{"lineNumber":52,"author":{"gitId":"comicalromance"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":54,"author":{"gitId":"Piyotato"},"content":"        return new Attendance(values[0], status);","lastModifiedDate":"2022-11-06"},{"lineNumber":55,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"comicalromance"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"Piyotato":8,"comicalromance":47,"lpohsien":2}},{"path":"src/main/java/seedu/studmap/storage/JsonAdaptedParticipation.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"highorbit25"},"content":"package seedu.studmap.storage;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"highorbit25"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"highorbit25"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"highorbit25"},"content":"import seedu.studmap.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"highorbit25"},"content":"import seedu.studmap.model.student.Participation;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"highorbit25"},"content":"/**","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"highorbit25"},"content":" * Jackson-friendly version of {@link Participation}.","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"highorbit25"},"content":" */","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"highorbit25"},"content":"class JsonAdaptedParticipation {","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"highorbit25"},"content":"    private final String participationComponent;","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"highorbit25"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"highorbit25"},"content":"     * Constructs a {@code JsonAdaptedParticipation} with the given {@code participationComponent}.","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"highorbit25"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"highorbit25"},"content":"    @JsonCreator","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"highorbit25"},"content":"    public JsonAdaptedParticipation(String participationComponent) {","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"highorbit25"},"content":"        this.participationComponent \u003d participationComponent;","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"highorbit25"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"highorbit25"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"highorbit25"},"content":"     * Converts a given {@code Participation} into this class for Jackson use.","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"highorbit25"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"highorbit25"},"content":"    public JsonAdaptedParticipation(Participation source) {","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"highorbit25"},"content":"        participationComponent \u003d source.getString();","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"highorbit25"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"highorbit25"},"content":"    @JsonValue","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"highorbit25"},"content":"    public String getClassName() {","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"highorbit25"},"content":"        return participationComponent;","lastModifiedDate":"2022-10-27"},{"lineNumber":34,"author":{"gitId":"highorbit25"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":36,"author":{"gitId":"highorbit25"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"highorbit25"},"content":"     * Converts this Jackson-friendly adapted participation object into the model\u0027s {@code Participation} object.","lastModifiedDate":"2022-10-27"},{"lineNumber":38,"author":{"gitId":"highorbit25"},"content":"     *","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"highorbit25"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted participation.","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"highorbit25"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":41,"author":{"gitId":"highorbit25"},"content":"    public Participation toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-27"},{"lineNumber":42,"author":{"gitId":"highorbit25"},"content":"        String[] values \u003d participationComponent.split(\":\");","lastModifiedDate":"2022-10-27"},{"lineNumber":43,"author":{"gitId":"Piyotato"},"content":"        Participation.Status status;","lastModifiedDate":"2022-11-06"},{"lineNumber":44,"author":{"gitId":"highorbit25"},"content":"        if (values.length !\u003d 2 || !Participation.isValidParticipationName(values[0])) {","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"highorbit25"},"content":"            throw new IllegalValueException(Participation.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-27"},{"lineNumber":46,"author":{"gitId":"highorbit25"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":47,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":48,"author":{"gitId":"Piyotato"},"content":"        try {","lastModifiedDate":"2022-11-06"},{"lineNumber":49,"author":{"gitId":"Piyotato"},"content":"            status \u003d Participation.Status.fromString(values[1]);","lastModifiedDate":"2022-11-06"},{"lineNumber":50,"author":{"gitId":"Piyotato"},"content":"        } catch (IllegalArgumentException iae) {","lastModifiedDate":"2022-11-06"},{"lineNumber":51,"author":{"gitId":"Piyotato"},"content":"            throw new IllegalValueException(iae.getMessage());","lastModifiedDate":"2022-11-06"},{"lineNumber":52,"author":{"gitId":"highorbit25"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":53,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":54,"author":{"gitId":"Piyotato"},"content":"        return new Participation(values[0], status);","lastModifiedDate":"2022-11-06"},{"lineNumber":55,"author":{"gitId":"highorbit25"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":56,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":57,"author":{"gitId":"highorbit25"},"content":"}","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"highorbit25":49,"Piyotato":8}},{"path":"src/main/java/seedu/studmap/storage/JsonAdaptedStudent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.storage;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"lpohsien"},"content":"import seedu.studmap.model.student.Assignment;","lastModifiedDate":"2022-10-23"},{"lineNumber":14,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.student.Attendance;","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.student.Email;","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"dr-arrgghh"},"content":"import seedu.studmap.model.student.GitName;","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.student.Module;","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.student.Name;","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"highorbit25"},"content":"import seedu.studmap.model.student.Participation;","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.student.Phone;","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.student.Student;","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.student.StudentData;","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"dr-arrgghh"},"content":"import seedu.studmap.model.student.StudentID;","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"dr-arrgghh"},"content":"import seedu.studmap.model.student.TeleHandle;","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.tag.Tag;","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"comicalromance"},"content":" * Jackson-friendly version of {@link Student}.","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"comicalromance"},"content":"class JsonAdaptedStudent {","lastModifiedDate":"2022-10-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"comicalromance"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Student\u0027s %s field is missing!\";","lastModifiedDate":"2022-10-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"comicalromance"},"content":"    private final String module;","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"dr-arrgghh"},"content":"    private final String studentID;","lastModifiedDate":"2022-10-26"},{"lineNumber":39,"author":{"gitId":"dr-arrgghh"},"content":"    private final String gitName;","lastModifiedDate":"2022-10-25"},{"lineNumber":40,"author":{"gitId":"dr-arrgghh"},"content":"    private final String handle;","lastModifiedDate":"2022-10-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"comicalromance"},"content":"    private final List\u003cJsonAdaptedAttendance\u003e attended \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"lpohsien"},"content":"    private final List\u003cJsonAdaptedAssignment\u003e assigned \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-23"},{"lineNumber":44,"author":{"gitId":"highorbit25"},"content":"    private final List\u003cJsonAdaptedParticipation\u003e participated \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"comicalromance"},"content":"     * Constructs a {@code JsonAdaptedStudent} with the given student details.","lastModifiedDate":"2022-10-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"comicalromance"},"content":"    public JsonAdaptedStudent(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2022-10-15"},{"lineNumber":51,"author":{"gitId":"comicalromance"},"content":"                              @JsonProperty(\"email\") String email, @JsonProperty(\"module\") String module,","lastModifiedDate":"2022-10-26"},{"lineNumber":52,"author":{"gitId":"comicalromance"},"content":"                              @JsonProperty(\"studentID\") String studentId, @JsonProperty(\"gitName\") String gitName,","lastModifiedDate":"2022-10-26"},{"lineNumber":53,"author":{"gitId":"comicalromance"},"content":"                              @JsonProperty(\"handle\") String handle,","lastModifiedDate":"2022-10-26"},{"lineNumber":54,"author":{"gitId":"comicalromance"},"content":"                              @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged,","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"lpohsien"},"content":"                              @JsonProperty(\"attended\") List\u003cJsonAdaptedAttendance\u003e attended,","lastModifiedDate":"2022-10-23"},{"lineNumber":56,"author":{"gitId":"highorbit25"},"content":"                              @JsonProperty(\"assignments\") List\u003cJsonAdaptedAssignment\u003e assignments,","lastModifiedDate":"2022-10-27"},{"lineNumber":57,"author":{"gitId":"highorbit25"},"content":"                              @JsonProperty(\"participations\") List\u003cJsonAdaptedParticipation\u003e participations) {","lastModifiedDate":"2022-10-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"comicalromance"},"content":"        this.module \u003d module;","lastModifiedDate":"2022-10-26"},{"lineNumber":62,"author":{"gitId":"comicalromance"},"content":"        this.studentID \u003d studentId;","lastModifiedDate":"2022-10-26"},{"lineNumber":63,"author":{"gitId":"dr-arrgghh"},"content":"        this.gitName \u003d gitName;","lastModifiedDate":"2022-10-25"},{"lineNumber":64,"author":{"gitId":"dr-arrgghh"},"content":"        this.handle \u003d handle;","lastModifiedDate":"2022-10-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"comicalromance"},"content":"        if (attended !\u003d null) {","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"comicalromance"},"content":"            this.attended.addAll(attended);","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"comicalromance"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"lpohsien"},"content":"        if (assignments !\u003d null) {","lastModifiedDate":"2022-10-23"},{"lineNumber":72,"author":{"gitId":"lpohsien"},"content":"            this.assigned.addAll(assignments);","lastModifiedDate":"2022-10-23"},{"lineNumber":73,"author":{"gitId":"lpohsien"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":74,"author":{"gitId":"highorbit25"},"content":"        if (participations !\u003d null) {","lastModifiedDate":"2022-10-27"},{"lineNumber":75,"author":{"gitId":"highorbit25"},"content":"            this.participated.addAll(participations);","lastModifiedDate":"2022-10-27"},{"lineNumber":76,"author":{"gitId":"highorbit25"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"comicalromance"},"content":"     * Converts a given {@code Student} into this class for Jackson use.","lastModifiedDate":"2022-10-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"comicalromance"},"content":"    public JsonAdaptedStudent(Student source) {","lastModifiedDate":"2022-10-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"comicalromance"},"content":"        module \u003d source.getModule().value;","lastModifiedDate":"2022-10-26"},{"lineNumber":87,"author":{"gitId":"dr-arrgghh"},"content":"        studentID \u003d source.getId().value;","lastModifiedDate":"2022-10-26"},{"lineNumber":88,"author":{"gitId":"dr-arrgghh"},"content":"        gitName \u003d source.getGitName().value;","lastModifiedDate":"2022-10-25"},{"lineNumber":89,"author":{"gitId":"dr-arrgghh"},"content":"        handle \u003d source.getTeleHandle().value;","lastModifiedDate":"2022-10-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"comicalromance"},"content":"        attended.addAll(source.getAttendances().stream()","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"comicalromance"},"content":"                .map(attendance -\u003e new JsonAdaptedAttendance(attendance.getString()))","lastModifiedDate":"2022-10-10"},{"lineNumber":95,"author":{"gitId":"comicalromance"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"lpohsien"},"content":"        assigned.addAll(source.getAssignments().stream()","lastModifiedDate":"2022-10-23"},{"lineNumber":97,"author":{"gitId":"lpohsien"},"content":"                .map(assignment -\u003e new JsonAdaptedAssignment(assignment.getString()))","lastModifiedDate":"2022-10-23"},{"lineNumber":98,"author":{"gitId":"lpohsien"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2022-10-23"},{"lineNumber":99,"author":{"gitId":"highorbit25"},"content":"        participated.addAll(source.getParticipations().stream()","lastModifiedDate":"2022-10-27"},{"lineNumber":100,"author":{"gitId":"highorbit25"},"content":"                              .map(participation -\u003e new JsonAdaptedParticipation(participation.getString()))","lastModifiedDate":"2022-10-27"},{"lineNumber":101,"author":{"gitId":"highorbit25"},"content":"                              .collect(Collectors.toList()));","lastModifiedDate":"2022-10-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"comicalromance"},"content":"     * Converts this Jackson-friendly adapted student object into the model\u0027s {@code Student} object.","lastModifiedDate":"2022-10-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"comicalromance"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted student.","lastModifiedDate":"2022-10-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"comicalromance"},"content":"    public Student toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-15"},{"lineNumber":110,"author":{"gitId":"comicalromance"},"content":"        final List\u003cTag\u003e studentTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"comicalromance"},"content":"            studentTags.add(tag.toModelType());","lastModifiedDate":"2022-10-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"comicalromance"},"content":"        final List\u003cAttendance\u003e studentAttendances \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-15"},{"lineNumber":116,"author":{"gitId":"comicalromance"},"content":"        for (JsonAdaptedAttendance attendance : attended) {","lastModifiedDate":"2022-10-10"},{"lineNumber":117,"author":{"gitId":"comicalromance"},"content":"            studentAttendances.add(attendance.toModelType());","lastModifiedDate":"2022-10-15"},{"lineNumber":118,"author":{"gitId":"comicalromance"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":119,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":120,"author":{"gitId":"lpohsien"},"content":"        final List\u003cAssignment\u003e studentAssignments \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-23"},{"lineNumber":121,"author":{"gitId":"lpohsien"},"content":"        for (JsonAdaptedAssignment assignment : assigned) {","lastModifiedDate":"2022-10-23"},{"lineNumber":122,"author":{"gitId":"lpohsien"},"content":"            studentAssignments.add(assignment.toModelType());","lastModifiedDate":"2022-10-23"},{"lineNumber":123,"author":{"gitId":"comicalromance"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":124,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":125,"author":{"gitId":"highorbit25"},"content":"        final List\u003cParticipation\u003e studentParticipations \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-27"},{"lineNumber":126,"author":{"gitId":"highorbit25"},"content":"        for (JsonAdaptedParticipation participation : participated) {","lastModifiedDate":"2022-10-27"},{"lineNumber":127,"author":{"gitId":"highorbit25"},"content":"            studentParticipations.add(participation.toModelType());","lastModifiedDate":"2022-10-27"},{"lineNumber":128,"author":{"gitId":"highorbit25"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":129,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":154,"author":{"gitId":"comicalromance"},"content":"        if (module \u003d\u003d null) {","lastModifiedDate":"2022-10-26"},{"lineNumber":155,"author":{"gitId":"comicalromance"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Module.class.getSimpleName()));","lastModifiedDate":"2022-10-26"},{"lineNumber":156,"author":{"gitId":"comicalromance"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":157,"author":{"gitId":"comicalromance"},"content":"        if (!Module.isValidModule(module)) {","lastModifiedDate":"2022-10-26"},{"lineNumber":158,"author":{"gitId":"comicalromance"},"content":"            throw new IllegalValueException(Module.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-26"},{"lineNumber":159,"author":{"gitId":"comicalromance"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":160,"author":{"gitId":"comicalromance"},"content":"        final Module modelModule \u003d new Module(module);","lastModifiedDate":"2022-10-26"},{"lineNumber":161,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":162,"author":{"gitId":"dr-arrgghh"},"content":"        if (studentID \u003d\u003d null) {","lastModifiedDate":"2022-10-26"},{"lineNumber":163,"author":{"gitId":"dr-arrgghh"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-10-25"},{"lineNumber":164,"author":{"gitId":"dr-arrgghh"},"content":"                    StudentID.class.getSimpleName()));","lastModifiedDate":"2022-10-25"},{"lineNumber":165,"author":{"gitId":"dr-arrgghh"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":166,"author":{"gitId":"dr-arrgghh"},"content":"        final StudentID modelId \u003d new StudentID(studentID);","lastModifiedDate":"2022-10-26"},{"lineNumber":167,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":168,"author":{"gitId":"dr-arrgghh"},"content":"        if (gitName \u003d\u003d null) {","lastModifiedDate":"2022-10-25"},{"lineNumber":169,"author":{"gitId":"dr-arrgghh"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-10-25"},{"lineNumber":170,"author":{"gitId":"dr-arrgghh"},"content":"                    GitName.class.getSimpleName()));","lastModifiedDate":"2022-10-25"},{"lineNumber":171,"author":{"gitId":"dr-arrgghh"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":172,"author":{"gitId":"dr-arrgghh"},"content":"        if (!GitName.isValidGitName(gitName)) {","lastModifiedDate":"2022-10-25"},{"lineNumber":173,"author":{"gitId":"dr-arrgghh"},"content":"            throw new IllegalValueException(GitName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-25"},{"lineNumber":174,"author":{"gitId":"dr-arrgghh"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":175,"author":{"gitId":"dr-arrgghh"},"content":"        final GitName modelGit \u003d new GitName(gitName);","lastModifiedDate":"2022-10-25"},{"lineNumber":176,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":177,"author":{"gitId":"dr-arrgghh"},"content":"        if (handle \u003d\u003d null) {","lastModifiedDate":"2022-10-25"},{"lineNumber":178,"author":{"gitId":"dr-arrgghh"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-10-25"},{"lineNumber":179,"author":{"gitId":"dr-arrgghh"},"content":"                    TeleHandle.class.getSimpleName()));","lastModifiedDate":"2022-10-25"},{"lineNumber":180,"author":{"gitId":"dr-arrgghh"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":181,"author":{"gitId":"dr-arrgghh"},"content":"        if (!TeleHandle.isValidTeleHandle(handle)) {","lastModifiedDate":"2022-10-25"},{"lineNumber":182,"author":{"gitId":"dr-arrgghh"},"content":"            throw new IllegalValueException(TeleHandle.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-25"},{"lineNumber":183,"author":{"gitId":"dr-arrgghh"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":184,"author":{"gitId":"dr-arrgghh"},"content":"        final TeleHandle modelHandle \u003d new TeleHandle(handle);","lastModifiedDate":"2022-10-25"},{"lineNumber":185,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":186,"author":{"gitId":"comicalromance"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(studentTags);","lastModifiedDate":"2022-10-15"},{"lineNumber":187,"author":{"gitId":"comicalromance"},"content":"        final Set\u003cAttendance\u003e modelAttendances \u003d new HashSet\u003c\u003e(studentAttendances);","lastModifiedDate":"2022-10-15"},{"lineNumber":188,"author":{"gitId":"lpohsien"},"content":"        final Set\u003cAssignment\u003e modelAssignments \u003d new HashSet\u003c\u003e(studentAssignments);","lastModifiedDate":"2022-10-23"},{"lineNumber":189,"author":{"gitId":"highorbit25"},"content":"        final Set\u003cParticipation\u003e modelParticipations \u003d new HashSet\u003c\u003e(studentParticipations);","lastModifiedDate":"2022-10-27"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":191,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":192,"author":{"gitId":"comicalromance"},"content":"        StudentData studentData \u003d new StudentData();","lastModifiedDate":"2022-10-15"},{"lineNumber":193,"author":{"gitId":"comicalromance"},"content":"        studentData.setName(modelName);","lastModifiedDate":"2022-10-15"},{"lineNumber":194,"author":{"gitId":"comicalromance"},"content":"        studentData.setPhone(modelPhone);","lastModifiedDate":"2022-10-15"},{"lineNumber":195,"author":{"gitId":"comicalromance"},"content":"        studentData.setEmail(modelEmail);","lastModifiedDate":"2022-10-15"},{"lineNumber":196,"author":{"gitId":"comicalromance"},"content":"        studentData.setModule(modelModule);","lastModifiedDate":"2022-10-26"},{"lineNumber":197,"author":{"gitId":"dr-arrgghh"},"content":"        studentData.setId(modelId);","lastModifiedDate":"2022-10-25"},{"lineNumber":198,"author":{"gitId":"dr-arrgghh"},"content":"        studentData.setGitUser(modelGit);","lastModifiedDate":"2022-10-25"},{"lineNumber":199,"author":{"gitId":"dr-arrgghh"},"content":"        studentData.setTeleHandle(modelHandle);","lastModifiedDate":"2022-10-25"},{"lineNumber":200,"author":{"gitId":"comicalromance"},"content":"        studentData.setTags(modelTags);","lastModifiedDate":"2022-10-15"},{"lineNumber":201,"author":{"gitId":"comicalromance"},"content":"        studentData.setAttendances(modelAttendances);","lastModifiedDate":"2022-10-15"},{"lineNumber":202,"author":{"gitId":"lpohsien"},"content":"        studentData.setAssignments(modelAssignments);","lastModifiedDate":"2022-10-23"},{"lineNumber":203,"author":{"gitId":"highorbit25"},"content":"        studentData.setParticipations(modelParticipations);","lastModifiedDate":"2022-10-27"},{"lineNumber":204,"author":{"gitId":"comicalromance"},"content":"        return new Student(studentData);","lastModifiedDate":"2022-10-15"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":207,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"highorbit25":17,"dr-arrgghh":38,"-":75,"comicalromance":63,"lpohsien":14}},{"path":"src/main/java/seedu/studmap/storage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.storage;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.tag.Tag;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"class JsonAdaptedTag {","lastModifiedDate":"2018-12-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        tagName \u003d source.tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Tag(tagName);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":45,"comicalromance":3}},{"path":"src/main/java/seedu/studmap/storage/JsonSerializableStudMap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.storage;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.ReadOnlyStudMap;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.StudMap;","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.student.Student;","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"comicalromance"},"content":" * An Immutable StudMap that is serializable to JSON format.","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"comicalromance"},"content":"@JsonRootName(value \u003d \"studmap\")","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"comicalromance"},"content":"class JsonSerializableStudMap {","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"comicalromance"},"content":"    public static final String MESSAGE_DUPLICATE_STUDENT \u003d \"Student list contains duplicate student(s).\";","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"comicalromance"},"content":"    private final List\u003cJsonAdaptedStudent\u003e students \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"comicalromance"},"content":"     * Constructs a {@code JsonSerializableStudMap} with the given students.","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"comicalromance"},"content":"    public JsonSerializableStudMap(@JsonProperty(\"students\") List\u003cJsonAdaptedStudent\u003e students) {","lastModifiedDate":"2022-10-15"},{"lineNumber":31,"author":{"gitId":"comicalromance"},"content":"        this.students.addAll(students);","lastModifiedDate":"2022-10-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"comicalromance"},"content":"     * Converts a given {@code ReadOnlyStudMap} into this class for Jackson use.","lastModifiedDate":"2022-10-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"comicalromance"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableStudMap}.","lastModifiedDate":"2022-10-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"comicalromance"},"content":"    public JsonSerializableStudMap(ReadOnlyStudMap source) {","lastModifiedDate":"2022-10-15"},{"lineNumber":40,"author":{"gitId":"comicalromance"},"content":"        students.addAll(source.getStudentList().stream().map(JsonAdaptedStudent::new).collect(Collectors.toList()));","lastModifiedDate":"2022-10-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"comicalromance"},"content":"     * Converts this student map into the model\u0027s {@code StudMap} object.","lastModifiedDate":"2022-10-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"comicalromance"},"content":"    public StudMap toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-15"},{"lineNumber":49,"author":{"gitId":"comicalromance"},"content":"        StudMap studMap \u003d new StudMap();","lastModifiedDate":"2022-10-15"},{"lineNumber":50,"author":{"gitId":"comicalromance"},"content":"        for (JsonAdaptedStudent jsonAdaptedStudent : students) {","lastModifiedDate":"2022-10-15"},{"lineNumber":51,"author":{"gitId":"comicalromance"},"content":"            Student student \u003d jsonAdaptedStudent.toModelType();","lastModifiedDate":"2022-10-15"},{"lineNumber":52,"author":{"gitId":"comicalromance"},"content":"            if (studMap.hasStudent(student)) {","lastModifiedDate":"2022-10-15"},{"lineNumber":53,"author":{"gitId":"comicalromance"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_STUDENT);","lastModifiedDate":"2022-10-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"comicalromance"},"content":"            studMap.addStudent(student);","lastModifiedDate":"2022-10-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"comicalromance"},"content":"        return studMap;","lastModifiedDate":"2022-10-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":34,"comicalromance":26}},{"path":"src/main/java/seedu/studmap/storage/JsonStudMapStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.storage;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.commons.core.LogsCenter;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.commons.util.FileUtil;","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.commons.util.JsonUtil;","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.ReadOnlyStudMap;","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"comicalromance"},"content":" * A class to access StudMap data stored as a json file on the hard disk.","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"comicalromance"},"content":"public class JsonStudMapStorage implements StudMapStorage {","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"comicalromance"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonStudMapStorage.class);","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"comicalromance"},"content":"    public JsonStudMapStorage(Path filePath) {","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"comicalromance"},"content":"    public Path getStudMapFilePath() {","lastModifiedDate":"2022-10-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"comicalromance"},"content":"    public Optional\u003cReadOnlyStudMap\u003e readStudMap() throws DataConversionException {","lastModifiedDate":"2022-10-15"},{"lineNumber":36,"author":{"gitId":"comicalromance"},"content":"        return readStudMap(filePath);","lastModifiedDate":"2022-10-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"comicalromance"},"content":"     * Similar to {@link #readStudMap()}.","lastModifiedDate":"2022-10-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"comicalromance"},"content":"    public Optional\u003cReadOnlyStudMap\u003e readStudMap(Path filePath) throws DataConversionException {","lastModifiedDate":"2022-10-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"comicalromance"},"content":"        Optional\u003cJsonSerializableStudMap\u003e jsonStudMap \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2022-10-15"},{"lineNumber":49,"author":{"gitId":"comicalromance"},"content":"                filePath, JsonSerializableStudMap.class);","lastModifiedDate":"2022-10-15"},{"lineNumber":50,"author":{"gitId":"comicalromance"},"content":"        if (!jsonStudMap.isPresent()) {","lastModifiedDate":"2022-10-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"comicalromance"},"content":"            return Optional.of(jsonStudMap.get().toModelType());","lastModifiedDate":"2022-10-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"comicalromance"},"content":"    public void saveStudMap(ReadOnlyStudMap studMap) throws IOException {","lastModifiedDate":"2022-10-15"},{"lineNumber":64,"author":{"gitId":"comicalromance"},"content":"        saveStudMap(studMap, filePath);","lastModifiedDate":"2022-10-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"comicalromance"},"content":"     * Similar to {@link #saveStudMap(ReadOnlyStudMap)}.","lastModifiedDate":"2022-10-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"comicalromance"},"content":"    public void saveStudMap(ReadOnlyStudMap studMap, Path filePath) throws IOException {","lastModifiedDate":"2022-10-15"},{"lineNumber":73,"author":{"gitId":"comicalromance"},"content":"        requireNonNull(studMap);","lastModifiedDate":"2022-10-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"comicalromance"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableStudMap(studMap), filePath);","lastModifiedDate":"2022-10-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":54,"comicalromance":26}},{"path":"src/main/java/seedu/studmap/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.storage;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.commons.util.JsonUtil;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.UserPrefs;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException {","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"-":42,"comicalromance":5}},{"path":"src/main/java/seedu/studmap/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.storage;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.ReadOnlyStudMap;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.UserPrefs;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"comicalromance"},"content":"public interface Storage extends StudMapStorage, UserPrefsStorage {","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"comicalromance"},"content":"    Path getStudMapFilePath();","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"comicalromance"},"content":"    Optional\u003cReadOnlyStudMap\u003e readStudMap() throws DataConversionException, IOException;","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"comicalromance"},"content":"    void saveStudMap(ReadOnlyStudMap studMap) throws IOException;","lastModifiedDate":"2022-10-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"-":23,"comicalromance":9}},{"path":"src/main/java/seedu/studmap/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.storage;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.commons.core.LogsCenter;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.ReadOnlyStudMap;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.UserPrefs;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"comicalromance"},"content":" * Manages storage of StudMap data in local storage.","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"comicalromance"},"content":"    private StudMapStorage studMapStorage;","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"comicalromance"},"content":"     * Creates a {@code StorageManager} with the given {@code StudMapStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"comicalromance"},"content":"    public StorageManager(StudMapStorage studMapStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"comicalromance"},"content":"        this.studMapStorage \u003d studMapStorage;","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"comicalromance"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d StudMap methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"comicalromance"},"content":"    public Path getStudMapFilePath() {","lastModifiedDate":"2022-10-15"},{"lineNumber":53,"author":{"gitId":"comicalromance"},"content":"        return studMapStorage.getStudMapFilePath();","lastModifiedDate":"2022-10-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"comicalromance"},"content":"    public Optional\u003cReadOnlyStudMap\u003e readStudMap() throws DataConversionException, IOException {","lastModifiedDate":"2022-10-15"},{"lineNumber":58,"author":{"gitId":"comicalromance"},"content":"        return readStudMap(studMapStorage.getStudMapFilePath());","lastModifiedDate":"2022-10-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":62,"author":{"gitId":"comicalromance"},"content":"    public Optional\u003cReadOnlyStudMap\u003e readStudMap(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2022-10-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"comicalromance"},"content":"        return studMapStorage.readStudMap(filePath);","lastModifiedDate":"2022-10-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"comicalromance"},"content":"    public void saveStudMap(ReadOnlyStudMap studMap) throws IOException {","lastModifiedDate":"2022-10-15"},{"lineNumber":69,"author":{"gitId":"comicalromance"},"content":"        saveStudMap(studMap, studMapStorage.getStudMapFilePath());","lastModifiedDate":"2022-10-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"comicalromance"},"content":"    public void saveStudMap(ReadOnlyStudMap studMap, Path filePath) throws IOException {","lastModifiedDate":"2022-10-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":75,"author":{"gitId":"comicalromance"},"content":"        studMapStorage.saveStudMap(studMap, filePath);","lastModifiedDate":"2022-10-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":56,"comicalromance":22}},{"path":"src/main/java/seedu/studmap/storage/StudMapStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.storage;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":3,"author":{"gitId":"comicalromance"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"comicalromance"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"comicalromance"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.ReadOnlyStudMap;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.StudMap;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"comicalromance"},"content":"/**","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"comicalromance"},"content":" * Represents a storage for {@link StudMap}.","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"comicalromance"},"content":" */","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"comicalromance"},"content":"public interface StudMapStorage {","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"comicalromance"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"comicalromance"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"comicalromance"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"comicalromance"},"content":"    Path getStudMapFilePath();","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"comicalromance"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"comicalromance"},"content":"     * Returns StudMap data as a {@link ReadOnlyStudMap}.","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"comicalromance"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2022-10-15"},{"lineNumber":24,"author":{"gitId":"comicalromance"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"comicalromance"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"comicalromance"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"comicalromance"},"content":"    Optional\u003cReadOnlyStudMap\u003e readStudMap() throws DataConversionException, IOException;","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"comicalromance"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":30,"author":{"gitId":"comicalromance"},"content":"     * @see #getStudMapFilePath()","lastModifiedDate":"2022-10-15"},{"lineNumber":31,"author":{"gitId":"comicalromance"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":32,"author":{"gitId":"comicalromance"},"content":"    Optional\u003cReadOnlyStudMap\u003e readStudMap(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2022-10-15"},{"lineNumber":33,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":34,"author":{"gitId":"comicalromance"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":35,"author":{"gitId":"comicalromance"},"content":"     * Saves the given {@link ReadOnlyStudMap} to the storage.","lastModifiedDate":"2022-10-15"},{"lineNumber":36,"author":{"gitId":"comicalromance"},"content":"     * @param studMap cannot be null.","lastModifiedDate":"2022-10-15"},{"lineNumber":37,"author":{"gitId":"comicalromance"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2022-10-15"},{"lineNumber":38,"author":{"gitId":"comicalromance"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":39,"author":{"gitId":"comicalromance"},"content":"    void saveStudMap(ReadOnlyStudMap studMap) throws IOException;","lastModifiedDate":"2022-10-15"},{"lineNumber":40,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":41,"author":{"gitId":"comicalromance"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":42,"author":{"gitId":"comicalromance"},"content":"     * @see #saveStudMap(ReadOnlyStudMap)","lastModifiedDate":"2022-10-15"},{"lineNumber":43,"author":{"gitId":"comicalromance"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":44,"author":{"gitId":"comicalromance"},"content":"    void saveStudMap(ReadOnlyStudMap studMap, Path filePath) throws IOException;","lastModifiedDate":"2022-10-15"},{"lineNumber":45,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":46,"author":{"gitId":"comicalromance"},"content":"}","lastModifiedDate":"2022-10-15"}],"authorContributionMap":{"comicalromance":46}},{"path":"src/main/java/seedu/studmap/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.storage;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.UserPrefs;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"comicalromance"},"content":" * Represents a storage for {@link seedu.studmap.model.UserPrefs}.","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"comicalromance"},"content":"     * Saves the given {@link seedu.studmap.model.ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2022-10-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"-":30,"comicalromance":6}},{"path":"src/main/java/seedu/studmap/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.ui;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.logic.commands.CommandResult;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.logic.imports.exceptions.ImportException;","lastModifiedDate":"2022-10-28"},{"lineNumber":10,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":48,"author":{"gitId":"comicalromance"},"content":"        } catch (CommandException | ParseException | ImportException e) {","lastModifiedDate":"2022-10-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"comicalromance"},"content":"         * @see seedu.studmap.logic.Logic#execute(String)","lastModifiedDate":"2022-10-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"comicalromance"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException, ImportException;","lastModifiedDate":"2022-10-28"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"-":78,"comicalromance":8}},{"path":"src/main/java/seedu/studmap/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.ui;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.commons.core.LogsCenter;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"comicalromance"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2223s1-cs2103t-w13-1.github.io/tp/UserGuide.html\";","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":99,"comicalromance":3}},{"path":"src/main/java/seedu/studmap/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.ui;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"comicalromance"},"content":"import javafx.stage.FileChooser;","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.commons.core.GuiSettings;","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.commons.core.LogsCenter;","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.logic.Logic;","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.logic.commands.CommandResult;","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.logic.imports.exceptions.ImportException;","lastModifiedDate":"2022-10-28"},{"lineNumber":20,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"comicalromance"},"content":"    private StudentListPanel studentListPanel;","lastModifiedDate":"2022-10-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"comicalromance"},"content":"    private StackPane studentListPanelPlaceholder;","lastModifiedDate":"2022-10-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"comicalromance"},"content":"        studentListPanel \u003d new StudentListPanel(logic.getFilteredStudentList());","lastModifiedDate":"2022-10-15"},{"lineNumber":116,"author":{"gitId":"comicalromance"},"content":"        studentListPanelPlaceholder.getChildren().add(studentListPanel.getRoot());","lastModifiedDate":"2022-10-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"comicalromance"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getStudMapFilePath());","lastModifiedDate":"2022-10-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":168,"author":{"gitId":"comicalromance"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":169,"author":{"gitId":"comicalromance"},"content":"     * Opens the file explorer for the user to choose a file.","lastModifiedDate":"2022-10-28"},{"lineNumber":170,"author":{"gitId":"comicalromance"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":171,"author":{"gitId":"comicalromance"},"content":"    @FXML","lastModifiedDate":"2022-10-28"},{"lineNumber":172,"author":{"gitId":"comicalromance"},"content":"    private String handleChooseFile() throws ImportException {","lastModifiedDate":"2022-10-28"},{"lineNumber":173,"author":{"gitId":"comicalromance"},"content":"        FileChooser fileChooser \u003d new FileChooser();","lastModifiedDate":"2022-10-28"},{"lineNumber":174,"author":{"gitId":"comicalromance"},"content":"        fileChooser.getExtensionFilters().add(new FileChooser.ExtensionFilter(\"CSV files\", \"*.csv\"));","lastModifiedDate":"2022-10-28"},{"lineNumber":175,"author":{"gitId":"comicalromance"},"content":"        return logic.importFile(fileChooser.showOpenDialog(this.primaryStage));","lastModifiedDate":"2022-10-28"},{"lineNumber":176,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":177,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":178,"author":{"gitId":"comicalromance"},"content":"    public StudentListPanel getStudentListPanel() {","lastModifiedDate":"2022-10-15"},{"lineNumber":179,"author":{"gitId":"comicalromance"},"content":"        return studentListPanel;","lastModifiedDate":"2022-10-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"comicalromance"},"content":"     * @see seedu.studmap.logic.Logic#execute(String)","lastModifiedDate":"2022-10-15"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"comicalromance"},"content":"    private CommandResult executeCommand(String commandText)","lastModifiedDate":"2022-10-28"},{"lineNumber":188,"author":{"gitId":"comicalromance"},"content":"            throws CommandException, ParseException, ImportException {","lastModifiedDate":"2022-10-28"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"comicalromance"},"content":"            if (commandResult.isChooseFile()) {","lastModifiedDate":"2022-10-28"},{"lineNumber":203,"author":{"gitId":"comicalromance"},"content":"                resultDisplay.setFeedbackToUser(handleChooseFile());","lastModifiedDate":"2022-10-28"},{"lineNumber":204,"author":{"gitId":"comicalromance"},"content":"            }","lastModifiedDate":"2022-10-28"},{"lineNumber":205,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"comicalromance"},"content":"        } catch (CommandException | ParseException | ImportException e) {","lastModifiedDate":"2022-11-07"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":179,"comicalromance":34}},{"path":"src/main/java/seedu/studmap/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.ui;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":27,"comicalromance":1}},{"path":"src/main/java/seedu/studmap/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.ui;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public StatusBarFooter(Path saveLocation) {","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        saveLocationStatus.setText(Paths.get(\".\").resolve(saveLocation).toString());","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":27,"comicalromance":1}},{"path":"src/main/java/seedu/studmap/ui/StudentCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.ui;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"comicalromance"},"content":"import javafx.scene.text.TextFlow;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"lpohsien"},"content":"import seedu.studmap.model.student.Assignment;","lastModifiedDate":"2022-10-23"},{"lineNumber":12,"author":{"gitId":"Piyotato"},"content":"import seedu.studmap.model.student.Attendance;","lastModifiedDate":"2022-11-06"},{"lineNumber":13,"author":{"gitId":"Piyotato"},"content":"import seedu.studmap.model.student.Participation;","lastModifiedDate":"2022-11-06"},{"lineNumber":14,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.student.Student;","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"comicalromance"},"content":" * An UI component that displays information of a {@code Student}.","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"comicalromance"},"content":"public class StudentCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"comicalromance"},"content":"    private static final String FXML \u003d \"StudentListCard.fxml\";","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"comicalromance"},"content":"    private static final float ATTENDANCE_THRESHOLD \u003d 50;","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"highorbit25"},"content":"    private static final float PARTICIPATION_THRESHOLD \u003d 50;","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"comicalromance"},"content":"    private static final float MARK_THRESHOLD \u003d 2;","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":31,"author":{"gitId":"comicalromance"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on StudMap level 4\u003c/a\u003e","lastModifiedDate":"2022-10-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":34,"author":{"gitId":"comicalromance"},"content":"    public final Student student;","lastModifiedDate":"2022-10-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"comicalromance"},"content":"    private Label module;","lastModifiedDate":"2022-10-26"},{"lineNumber":48,"author":{"gitId":"comicalromance"},"content":"    @FXML","lastModifiedDate":"2022-10-26"},{"lineNumber":49,"author":{"gitId":"comicalromance"},"content":"    private Label studentId;","lastModifiedDate":"2022-10-26"},{"lineNumber":50,"author":{"gitId":"dr-arrgghh"},"content":"    @FXML","lastModifiedDate":"2022-10-25"},{"lineNumber":51,"author":{"gitId":"comicalromance"},"content":"    private Label attendanceRate;","lastModifiedDate":"2022-10-27"},{"lineNumber":52,"author":{"gitId":"comicalromance"},"content":"    @FXML","lastModifiedDate":"2022-10-27"},{"lineNumber":53,"author":{"gitId":"comicalromance"},"content":"    private Label assignmentRate;","lastModifiedDate":"2022-10-27"},{"lineNumber":54,"author":{"gitId":"comicalromance"},"content":"    @FXML","lastModifiedDate":"2022-10-27"},{"lineNumber":55,"author":{"gitId":"dr-arrgghh"},"content":"    private Label gitName;","lastModifiedDate":"2022-10-25"},{"lineNumber":56,"author":{"gitId":"dr-arrgghh"},"content":"    @FXML","lastModifiedDate":"2022-10-25"},{"lineNumber":57,"author":{"gitId":"dr-arrgghh"},"content":"    private Label handle;","lastModifiedDate":"2022-10-25"},{"lineNumber":58,"author":{"gitId":"dr-arrgghh"},"content":"    @FXML","lastModifiedDate":"2022-10-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":60,"author":{"gitId":"comicalromance"},"content":"    @FXML","lastModifiedDate":"2022-10-09"},{"lineNumber":61,"author":{"gitId":"comicalromance"},"content":"    private FlowPane attendances;","lastModifiedDate":"2022-10-09"},{"lineNumber":62,"author":{"gitId":"lpohsien"},"content":"    @FXML","lastModifiedDate":"2022-10-23"},{"lineNumber":63,"author":{"gitId":"lpohsien"},"content":"    private FlowPane assignments;","lastModifiedDate":"2022-10-23"},{"lineNumber":64,"author":{"gitId":"highorbit25"},"content":"    @FXML","lastModifiedDate":"2022-10-27"},{"lineNumber":65,"author":{"gitId":"highorbit25"},"content":"    private FlowPane participations;","lastModifiedDate":"2022-10-27"},{"lineNumber":66,"author":{"gitId":"highorbit25"},"content":"    @FXML","lastModifiedDate":"2022-10-27"},{"lineNumber":67,"author":{"gitId":"highorbit25"},"content":"    private Label participationRate;","lastModifiedDate":"2022-10-27"},{"lineNumber":68,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":71,"author":{"gitId":"comicalromance"},"content":"     * Creates a {@code StudentCode} with the given {@code Student} and index to display.","lastModifiedDate":"2022-10-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":73,"author":{"gitId":"comicalromance"},"content":"    public StudentCard(Student student, int displayedIndex) {","lastModifiedDate":"2022-10-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":75,"author":{"gitId":"comicalromance"},"content":"        this.student \u003d student;","lastModifiedDate":"2022-10-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"comicalromance"},"content":"        name.setText(student.getName().fullName);","lastModifiedDate":"2022-10-15"},{"lineNumber":78,"author":{"gitId":"Piyotato"},"content":"        phone.setText(student.getPhone().toString());","lastModifiedDate":"2022-10-26"},{"lineNumber":79,"author":{"gitId":"Piyotato"},"content":"        email.setText(student.getEmail().toString());","lastModifiedDate":"2022-10-26"},{"lineNumber":80,"author":{"gitId":"Piyotato"},"content":"        module.setText(student.getModule().toString());","lastModifiedDate":"2022-10-26"},{"lineNumber":81,"author":{"gitId":"Piyotato"},"content":"        studentId.setText(student.getId().toString());","lastModifiedDate":"2022-10-26"},{"lineNumber":82,"author":{"gitId":"comicalromance"},"content":"        gitName.setText(student.getGitName().getDisplayString());","lastModifiedDate":"2022-10-27"},{"lineNumber":83,"author":{"gitId":"comicalromance"},"content":"        handle.setText(student.getTeleHandle().getDisplayString());","lastModifiedDate":"2022-10-27"},{"lineNumber":84,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":85,"author":{"gitId":"comicalromance"},"content":"        Label attendanceRateName \u003d new Label(\"Attendance: \");","lastModifiedDate":"2022-10-27"},{"lineNumber":86,"author":{"gitId":"comicalromance"},"content":"        attendanceRateName.setId(\"info\");","lastModifiedDate":"2022-10-27"},{"lineNumber":87,"author":{"gitId":"comicalromance"},"content":"        Label attendanceRateLabel \u003d new Label(String.format(\"%.0f%%\", student.getAttendancePercentage()));","lastModifiedDate":"2022-10-27"},{"lineNumber":88,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":89,"author":{"gitId":"comicalromance"},"content":"        if (Float.isNaN(student.getAttendancePercentage())) {","lastModifiedDate":"2022-10-27"},{"lineNumber":90,"author":{"gitId":"comicalromance"},"content":"            attendanceRateLabel.setStyle(\"-fx-text-fill: lightgrey;\");","lastModifiedDate":"2022-10-27"},{"lineNumber":91,"author":{"gitId":"comicalromance"},"content":"            attendanceRateLabel.setText(\"No Records\");","lastModifiedDate":"2022-10-27"},{"lineNumber":92,"author":{"gitId":"comicalromance"},"content":"        } else if (student.getAttendancePercentage() \u003e\u003d ATTENDANCE_THRESHOLD) {","lastModifiedDate":"2022-10-27"},{"lineNumber":93,"author":{"gitId":"comicalromance"},"content":"            attendanceRateLabel.setId(\"success\");","lastModifiedDate":"2022-10-27"},{"lineNumber":94,"author":{"gitId":"comicalromance"},"content":"        } else {","lastModifiedDate":"2022-10-27"},{"lineNumber":95,"author":{"gitId":"comicalromance"},"content":"            attendanceRateLabel.setId(\"fail\");","lastModifiedDate":"2022-10-27"},{"lineNumber":96,"author":{"gitId":"comicalromance"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":97,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":98,"author":{"gitId":"comicalromance"},"content":"        TextFlow attTextFlow \u003d new TextFlow(attendanceRateName, attendanceRateLabel);","lastModifiedDate":"2022-10-27"},{"lineNumber":99,"author":{"gitId":"comicalromance"},"content":"        attendanceRate.setGraphic(attTextFlow);","lastModifiedDate":"2022-10-27"},{"lineNumber":100,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":101,"author":{"gitId":"highorbit25"},"content":"        Label participationRateName \u003d new Label(\"Participation: \");","lastModifiedDate":"2022-10-27"},{"lineNumber":102,"author":{"gitId":"highorbit25"},"content":"        participationRateName.setId(\"info\");","lastModifiedDate":"2022-10-27"},{"lineNumber":103,"author":{"gitId":"highorbit25"},"content":"        Label participationRateLabel \u003d new Label(String.format(\"%.0f%%\", student.getParticipationPercentage()));","lastModifiedDate":"2022-10-27"},{"lineNumber":104,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":105,"author":{"gitId":"highorbit25"},"content":"        if (Float.isNaN(student.getParticipationPercentage())) {","lastModifiedDate":"2022-10-27"},{"lineNumber":106,"author":{"gitId":"highorbit25"},"content":"            participationRateLabel.setStyle(\"-fx-text-fill: lightgrey;\");","lastModifiedDate":"2022-10-27"},{"lineNumber":107,"author":{"gitId":"highorbit25"},"content":"            participationRateLabel.setText(\"No Records\");","lastModifiedDate":"2022-10-27"},{"lineNumber":108,"author":{"gitId":"highorbit25"},"content":"        } else if (student.getParticipationPercentage() \u003e\u003d PARTICIPATION_THRESHOLD) {","lastModifiedDate":"2022-10-27"},{"lineNumber":109,"author":{"gitId":"highorbit25"},"content":"            participationRateLabel.setId(\"success\");","lastModifiedDate":"2022-10-27"},{"lineNumber":110,"author":{"gitId":"highorbit25"},"content":"        } else {","lastModifiedDate":"2022-10-27"},{"lineNumber":111,"author":{"gitId":"highorbit25"},"content":"            participationRateLabel.setId(\"fail\");","lastModifiedDate":"2022-10-27"},{"lineNumber":112,"author":{"gitId":"highorbit25"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":113,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":114,"author":{"gitId":"highorbit25"},"content":"        TextFlow partTextFlow \u003d new TextFlow(participationRateName, participationRateLabel);","lastModifiedDate":"2022-10-27"},{"lineNumber":115,"author":{"gitId":"highorbit25"},"content":"        participationRate.setGraphic(partTextFlow);","lastModifiedDate":"2022-10-27"},{"lineNumber":116,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":117,"author":{"gitId":"Piyotato"},"content":"        Label assignmentRateName \u003d new Label(\"Ungraded: \");","lastModifiedDate":"2022-11-06"},{"lineNumber":118,"author":{"gitId":"highorbit25"},"content":"        participationRateName.setId(\"info\");","lastModifiedDate":"2022-10-27"},{"lineNumber":119,"author":{"gitId":"comicalromance"},"content":"        Label assignmentRateLabel \u003d new Label(String.format(\"%d\",","lastModifiedDate":"2022-10-27"},{"lineNumber":120,"author":{"gitId":"comicalromance"},"content":"                student.getAssignmentUnmarkedCount()));","lastModifiedDate":"2022-10-27"},{"lineNumber":121,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":122,"author":{"gitId":"comicalromance"},"content":"        if (student.getAssignmentCount() \u003d\u003d 0) {","lastModifiedDate":"2022-10-27"},{"lineNumber":123,"author":{"gitId":"comicalromance"},"content":"            assignmentRateLabel.setStyle(\"-fx-text-fill: lightgrey;\");","lastModifiedDate":"2022-10-27"},{"lineNumber":124,"author":{"gitId":"comicalromance"},"content":"            assignmentRateLabel.setText(\"No Records\");","lastModifiedDate":"2022-10-27"},{"lineNumber":125,"author":{"gitId":"comicalromance"},"content":"        } else if (student.getAssignmentUnmarkedCount() \u003e\u003d MARK_THRESHOLD) {","lastModifiedDate":"2022-10-27"},{"lineNumber":126,"author":{"gitId":"comicalromance"},"content":"            assignmentRateLabel.setId(\"fail\");","lastModifiedDate":"2022-10-27"},{"lineNumber":127,"author":{"gitId":"comicalromance"},"content":"        } else if (student.getAssignmentUnmarkedCount() \u003e 0) {","lastModifiedDate":"2022-10-27"},{"lineNumber":128,"author":{"gitId":"comicalromance"},"content":"            assignmentRateLabel.setId(\"caution\");","lastModifiedDate":"2022-10-27"},{"lineNumber":129,"author":{"gitId":"comicalromance"},"content":"        } else {","lastModifiedDate":"2022-10-27"},{"lineNumber":130,"author":{"gitId":"comicalromance"},"content":"            assignmentRateLabel.setId(\"fail\");","lastModifiedDate":"2022-10-27"},{"lineNumber":131,"author":{"gitId":"comicalromance"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":132,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":133,"author":{"gitId":"comicalromance"},"content":"        TextFlow assTextFlow \u003d new TextFlow(assignmentRateName, assignmentRateLabel);","lastModifiedDate":"2022-10-27"},{"lineNumber":134,"author":{"gitId":"comicalromance"},"content":"        assignmentRate.setGraphic(assTextFlow);","lastModifiedDate":"2022-10-27"},{"lineNumber":135,"author":{"gitId":"comicalromance"},"content":"        student.getTags().stream()","lastModifiedDate":"2022-10-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":138,"author":{"gitId":"comicalromance"},"content":"        student.getAttendances().stream()","lastModifiedDate":"2022-10-15"},{"lineNumber":139,"author":{"gitId":"Piyotato"},"content":"                .sorted(Comparator.comparing(attendance -\u003e attendance.identifier))","lastModifiedDate":"2022-11-06"},{"lineNumber":140,"author":{"gitId":"comicalromance"},"content":"                .map(attendance -\u003e {","lastModifiedDate":"2022-10-10"},{"lineNumber":141,"author":{"gitId":"Piyotato"},"content":"                    Label x \u003d new Label(attendance.identifier);","lastModifiedDate":"2022-11-06"},{"lineNumber":142,"author":{"gitId":"Piyotato"},"content":"                    x.setId(attendance.state \u003d\u003d Attendance.Status.PRESENT ? \"present\" : \"absent\");","lastModifiedDate":"2022-11-06"},{"lineNumber":143,"author":{"gitId":"comicalromance"},"content":"                    return x;","lastModifiedDate":"2022-10-10"},{"lineNumber":144,"author":{"gitId":"comicalromance"},"content":"                })","lastModifiedDate":"2022-10-10"},{"lineNumber":145,"author":{"gitId":"comicalromance"},"content":"                .forEach(attendance -\u003e attendances.getChildren().add(attendance));","lastModifiedDate":"2022-10-10"},{"lineNumber":146,"author":{"gitId":"lpohsien"},"content":"        student.getAssignments().stream()","lastModifiedDate":"2022-10-23"},{"lineNumber":147,"author":{"gitId":"Piyotato"},"content":"                .sorted(Comparator.comparing(assignment -\u003e assignment.identifier))","lastModifiedDate":"2022-11-06"},{"lineNumber":148,"author":{"gitId":"lpohsien"},"content":"                .map(assignment -\u003e {","lastModifiedDate":"2022-10-23"},{"lineNumber":149,"author":{"gitId":"Piyotato"},"content":"                    Label x \u003d new Label(assignment.identifier);","lastModifiedDate":"2022-11-06"},{"lineNumber":150,"author":{"gitId":"Piyotato"},"content":"                    x.setId(assignment.state \u003d\u003d Assignment.Status.NEW ? \"new\"","lastModifiedDate":"2022-11-06"},{"lineNumber":151,"author":{"gitId":"Piyotato"},"content":"                            : assignment.state \u003d\u003d Assignment.Status.RECEIVED ? \"received\" : \"marked\");","lastModifiedDate":"2022-11-06"},{"lineNumber":152,"author":{"gitId":"lpohsien"},"content":"                    return x;","lastModifiedDate":"2022-10-23"},{"lineNumber":153,"author":{"gitId":"lpohsien"},"content":"                })","lastModifiedDate":"2022-10-23"},{"lineNumber":154,"author":{"gitId":"lpohsien"},"content":"                .forEach(assignment -\u003e assignments.getChildren().add(assignment));","lastModifiedDate":"2022-10-23"},{"lineNumber":155,"author":{"gitId":"highorbit25"},"content":"        student.getParticipations().stream()","lastModifiedDate":"2022-10-27"},{"lineNumber":156,"author":{"gitId":"Piyotato"},"content":"                .sorted(Comparator.comparing(participation -\u003e participation.identifier))","lastModifiedDate":"2022-11-06"},{"lineNumber":157,"author":{"gitId":"highorbit25"},"content":"                .map(participation -\u003e {","lastModifiedDate":"2022-10-27"},{"lineNumber":158,"author":{"gitId":"Piyotato"},"content":"                    Label x \u003d new Label(participation.identifier);","lastModifiedDate":"2022-11-06"},{"lineNumber":159,"author":{"gitId":"Piyotato"},"content":"                    x.setId(participation.state \u003d\u003d Participation.Status.PARTICIPATED ? \"participated\"","lastModifiedDate":"2022-11-06"},{"lineNumber":160,"author":{"gitId":"Piyotato"},"content":"                            : \"didNotParticipate\");","lastModifiedDate":"2022-11-06"},{"lineNumber":161,"author":{"gitId":"highorbit25"},"content":"                    return x;","lastModifiedDate":"2022-10-27"},{"lineNumber":162,"author":{"gitId":"highorbit25"},"content":"                })","lastModifiedDate":"2022-10-27"},{"lineNumber":163,"author":{"gitId":"highorbit25"},"content":"                .forEach(participation -\u003e participations.getChildren().add(participation));","lastModifiedDate":"2022-10-28"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":174,"author":{"gitId":"comicalromance"},"content":"        if (!(other instanceof StudentCard)) {","lastModifiedDate":"2022-10-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":179,"author":{"gitId":"comicalromance"},"content":"        StudentCard card \u003d (StudentCard) other;","lastModifiedDate":"2022-10-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":181,"author":{"gitId":"comicalromance"},"content":"                \u0026\u0026 student.equals(card.student);","lastModifiedDate":"2022-10-15"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"highorbit25":28,"dr-arrgghh":5,"Piyotato":18,"-":57,"comicalromance":67,"lpohsien":8}},{"path":"src/main/java/seedu/studmap/ui/StudentListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.ui;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":3,"author":{"gitId":"comicalromance"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"comicalromance"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"comicalromance"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"comicalromance"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"comicalromance"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"comicalromance"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.commons.core.LogsCenter;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.student.Student;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"comicalromance"},"content":"/**","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"comicalromance"},"content":" * Panel containing the list of students.","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"comicalromance"},"content":" */","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"comicalromance"},"content":"public class StudentListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"comicalromance"},"content":"    private static final String FXML \u003d \"StudentListPanel.fxml\";","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"comicalromance"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(StudentListPanel.class);","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"comicalromance"},"content":"    @FXML","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"comicalromance"},"content":"    private ListView\u003cStudent\u003e studentListView;","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"comicalromance"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":24,"author":{"gitId":"comicalromance"},"content":"     * Creates a {@code StudentListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"comicalromance"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"comicalromance"},"content":"    public StudentListPanel(ObservableList\u003cStudent\u003e studentList) {","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"comicalromance"},"content":"        super(FXML);","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"comicalromance"},"content":"        studentListView.setItems(studentList);","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"comicalromance"},"content":"        studentListView.setCellFactory(listView -\u003e new StudentListViewCell());","lastModifiedDate":"2022-10-15"},{"lineNumber":30,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":31,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":32,"author":{"gitId":"comicalromance"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":33,"author":{"gitId":"comicalromance"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Student} using a {@code StudentCard}.","lastModifiedDate":"2022-10-15"},{"lineNumber":34,"author":{"gitId":"comicalromance"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":35,"author":{"gitId":"comicalromance"},"content":"    class StudentListViewCell extends ListCell\u003cStudent\u003e {","lastModifiedDate":"2022-10-15"},{"lineNumber":36,"author":{"gitId":"comicalromance"},"content":"        @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":37,"author":{"gitId":"comicalromance"},"content":"        protected void updateItem(Student student, boolean empty) {","lastModifiedDate":"2022-10-15"},{"lineNumber":38,"author":{"gitId":"comicalromance"},"content":"            super.updateItem(student, empty);","lastModifiedDate":"2022-10-15"},{"lineNumber":39,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":40,"author":{"gitId":"comicalromance"},"content":"            if (empty || student \u003d\u003d null) {","lastModifiedDate":"2022-10-15"},{"lineNumber":41,"author":{"gitId":"comicalromance"},"content":"                setGraphic(null);","lastModifiedDate":"2022-10-15"},{"lineNumber":42,"author":{"gitId":"comicalromance"},"content":"                setText(null);","lastModifiedDate":"2022-10-15"},{"lineNumber":43,"author":{"gitId":"comicalromance"},"content":"            } else {","lastModifiedDate":"2022-10-15"},{"lineNumber":44,"author":{"gitId":"comicalromance"},"content":"                setGraphic(new StudentCard(student, getIndex() + 1).getRoot());","lastModifiedDate":"2022-10-15"},{"lineNumber":45,"author":{"gitId":"comicalromance"},"content":"            }","lastModifiedDate":"2022-10-15"},{"lineNumber":46,"author":{"gitId":"comicalromance"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":47,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":48,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":49,"author":{"gitId":"comicalromance"},"content":"}","lastModifiedDate":"2022-10-15"}],"authorContributionMap":{"comicalromance":49}},{"path":"src/main/java/seedu/studmap/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.ui;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * API of UI component","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /** Starts the UI (and the App).  */","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"-":12,"comicalromance":1}},{"path":"src/main/java/seedu/studmap/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.ui;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.MainApp;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.commons.core.LogsCenter;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.commons.util.StringUtil;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.logic.Logic;","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"Piyotato"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/studmap.png\";","lastModifiedDate":"2022-11-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Piyotato":1,"-":82,"comicalromance":5}},{"path":"src/main/java/seedu/studmap/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.ui;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.MainApp;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Resource folder where FXML files are stored. */","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":86,"comicalromance":2}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":152,"author":{"gitId":"comicalromance"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2022-10-27"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":265,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":288,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":291,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":293,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":302,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":310,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":313,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":329,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"comicalromance"},"content":"#filterField, #studentListPanel, #studentWebpage {","lastModifiedDate":"2022-10-15"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":333,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":335,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":343,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":345,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":353,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":354,"author":{"gitId":"comicalromance"},"content":"#attendances {","lastModifiedDate":"2022-10-10"},{"lineNumber":355,"author":{"gitId":"comicalromance"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2022-10-10"},{"lineNumber":356,"author":{"gitId":"comicalromance"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2022-10-10"},{"lineNumber":357,"author":{"gitId":"comicalromance"},"content":"}","lastModifiedDate":"2022-10-10"},{"lineNumber":358,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":359,"author":{"gitId":"comicalromance"},"content":"#attendances .label {","lastModifiedDate":"2022-10-10"},{"lineNumber":360,"author":{"gitId":"comicalromance"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-10-10"},{"lineNumber":361,"author":{"gitId":"highorbit25"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2022-10-28"},{"lineNumber":362,"author":{"gitId":"highorbit25"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2022-10-28"},{"lineNumber":363,"author":{"gitId":"highorbit25"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2022-10-28"},{"lineNumber":364,"author":{"gitId":"highorbit25"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2022-10-28"},{"lineNumber":365,"author":{"gitId":"highorbit25"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":366,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":367,"author":{"gitId":"highorbit25"},"content":"#participations {","lastModifiedDate":"2022-10-28"},{"lineNumber":368,"author":{"gitId":"highorbit25"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2022-10-28"},{"lineNumber":369,"author":{"gitId":"highorbit25"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2022-10-28"},{"lineNumber":370,"author":{"gitId":"highorbit25"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":371,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":372,"author":{"gitId":"highorbit25"},"content":"#participations .label {","lastModifiedDate":"2022-10-28"},{"lineNumber":373,"author":{"gitId":"highorbit25"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-10-28"},{"lineNumber":374,"author":{"gitId":"comicalromance"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2022-10-10"},{"lineNumber":375,"author":{"gitId":"comicalromance"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2022-10-10"},{"lineNumber":376,"author":{"gitId":"comicalromance"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2022-10-10"},{"lineNumber":377,"author":{"gitId":"comicalromance"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2022-10-10"},{"lineNumber":378,"author":{"gitId":"comicalromance"},"content":"}","lastModifiedDate":"2022-10-10"},{"lineNumber":379,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":380,"author":{"gitId":"comicalromance"},"content":"#present {","lastModifiedDate":"2022-10-10"},{"lineNumber":381,"author":{"gitId":"comicalromance"},"content":"    -fx-background-color: #00C851;","lastModifiedDate":"2022-10-10"},{"lineNumber":382,"author":{"gitId":"comicalromance"},"content":"}","lastModifiedDate":"2022-10-10"},{"lineNumber":383,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":384,"author":{"gitId":"comicalromance"},"content":"#absent {","lastModifiedDate":"2022-10-10"},{"lineNumber":385,"author":{"gitId":"comicalromance"},"content":"    -fx-background-color: #FF4444;","lastModifiedDate":"2022-10-10"},{"lineNumber":386,"author":{"gitId":"comicalromance"},"content":"}","lastModifiedDate":"2022-10-10"},{"lineNumber":387,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":388,"author":{"gitId":"lpohsien"},"content":"#assignments {","lastModifiedDate":"2022-10-23"},{"lineNumber":389,"author":{"gitId":"lpohsien"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2022-10-23"},{"lineNumber":390,"author":{"gitId":"lpohsien"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2022-10-23"},{"lineNumber":391,"author":{"gitId":"lpohsien"},"content":"}","lastModifiedDate":"2022-10-23"},{"lineNumber":392,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":393,"author":{"gitId":"lpohsien"},"content":"#assignments .label {","lastModifiedDate":"2022-10-23"},{"lineNumber":394,"author":{"gitId":"lpohsien"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-10-23"},{"lineNumber":395,"author":{"gitId":"lpohsien"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2022-10-23"},{"lineNumber":396,"author":{"gitId":"lpohsien"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2022-10-23"},{"lineNumber":397,"author":{"gitId":"lpohsien"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2022-10-23"},{"lineNumber":398,"author":{"gitId":"lpohsien"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2022-10-23"},{"lineNumber":399,"author":{"gitId":"lpohsien"},"content":"}","lastModifiedDate":"2022-10-23"},{"lineNumber":400,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":401,"author":{"gitId":"lpohsien"},"content":"#marked {","lastModifiedDate":"2022-10-23"},{"lineNumber":402,"author":{"gitId":"lpohsien"},"content":"    -fx-background-color: #447959;","lastModifiedDate":"2022-10-23"},{"lineNumber":403,"author":{"gitId":"lpohsien"},"content":"}","lastModifiedDate":"2022-10-23"},{"lineNumber":404,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":405,"author":{"gitId":"comicalromance"},"content":"#received {","lastModifiedDate":"2022-10-27"},{"lineNumber":406,"author":{"gitId":"lpohsien"},"content":"    -fx-background-color: #a5344c;","lastModifiedDate":"2022-10-23"},{"lineNumber":407,"author":{"gitId":"lpohsien"},"content":"}","lastModifiedDate":"2022-10-23"},{"lineNumber":408,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":409,"author":{"gitId":"comicalromance"},"content":"#new {","lastModifiedDate":"2022-10-27"},{"lineNumber":410,"author":{"gitId":"lpohsien"},"content":"    -fx-background-color: #be6805;","lastModifiedDate":"2022-10-23"},{"lineNumber":411,"author":{"gitId":"lpohsien"},"content":"}","lastModifiedDate":"2022-10-23"},{"lineNumber":412,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":413,"author":{"gitId":"comicalromance"},"content":"#attendanceRate .label {","lastModifiedDate":"2022-10-27"},{"lineNumber":414,"author":{"gitId":"comicalromance"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2022-10-27"},{"lineNumber":415,"author":{"gitId":"comicalromance"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-10-27"},{"lineNumber":416,"author":{"gitId":"comicalromance"},"content":"}","lastModifiedDate":"2022-10-27"},{"lineNumber":417,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":418,"author":{"gitId":"comicalromance"},"content":"#assignmentRate .label {","lastModifiedDate":"2022-10-27"},{"lineNumber":419,"author":{"gitId":"comicalromance"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2022-10-27"},{"lineNumber":420,"author":{"gitId":"comicalromance"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-10-27"},{"lineNumber":421,"author":{"gitId":"comicalromance"},"content":"}","lastModifiedDate":"2022-10-27"},{"lineNumber":422,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":423,"author":{"gitId":"comicalromance"},"content":"#participationRate .label {","lastModifiedDate":"2022-10-28"},{"lineNumber":424,"author":{"gitId":"comicalromance"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2022-10-28"},{"lineNumber":425,"author":{"gitId":"comicalromance"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-10-28"},{"lineNumber":426,"author":{"gitId":"comicalromance"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":427,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":428,"author":{"gitId":"comicalromance"},"content":"#success {","lastModifiedDate":"2022-10-27"},{"lineNumber":429,"author":{"gitId":"comicalromance"},"content":"    -fx-text-fill: #00C851;","lastModifiedDate":"2022-10-27"},{"lineNumber":430,"author":{"gitId":"comicalromance"},"content":"}","lastModifiedDate":"2022-10-27"},{"lineNumber":431,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":432,"author":{"gitId":"comicalromance"},"content":"#caution {","lastModifiedDate":"2022-10-27"},{"lineNumber":433,"author":{"gitId":"comicalromance"},"content":"    -fx-text-fill: #be6805;","lastModifiedDate":"2022-10-27"},{"lineNumber":434,"author":{"gitId":"comicalromance"},"content":"}","lastModifiedDate":"2022-10-27"},{"lineNumber":435,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":436,"author":{"gitId":"comicalromance"},"content":"#fail {","lastModifiedDate":"2022-10-27"},{"lineNumber":437,"author":{"gitId":"comicalromance"},"content":"    -fx-text-fill: #FF4444;","lastModifiedDate":"2022-10-27"},{"lineNumber":438,"author":{"gitId":"comicalromance"},"content":"}","lastModifiedDate":"2022-10-27"},{"lineNumber":439,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":440,"author":{"gitId":"comicalromance"},"content":"#info {","lastModifiedDate":"2022-10-27"},{"lineNumber":441,"author":{"gitId":"comicalromance"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-10-27"},{"lineNumber":442,"author":{"gitId":"comicalromance"},"content":"}","lastModifiedDate":"2022-10-27"},{"lineNumber":443,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":444,"author":{"gitId":"highorbit25"},"content":"#participated {","lastModifiedDate":"2022-10-27"},{"lineNumber":445,"author":{"gitId":"highorbit25"},"content":"    -fx-background-color: #00C851;","lastModifiedDate":"2022-10-27"},{"lineNumber":446,"author":{"gitId":"highorbit25"},"content":"}","lastModifiedDate":"2022-10-27"},{"lineNumber":447,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":448,"author":{"gitId":"highorbit25"},"content":"#didNotParticipate {","lastModifiedDate":"2022-10-27"},{"lineNumber":449,"author":{"gitId":"highorbit25"},"content":"    -fx-background-color: #FF4444;","lastModifiedDate":"2022-10-27"},{"lineNumber":450,"author":{"gitId":"highorbit25"},"content":"}","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"highorbit25":21,"-":350,"comicalromance":55,"lpohsien":24}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":15,"author":{"gitId":"comicalromance"},"content":"         title\u003d\"StudMap\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"Piyotato"},"content":"    \u003cImage url\u003d\"@/images/studmap.png\" /\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"comicalromance"},"content":"                   minHeight\u003d\"150\" prefHeight\u003d\"150\" maxHeight\u003d\"150\"\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":49,"author":{"gitId":"comicalromance"},"content":"        \u003cVBox fx:id\u003d\"studentList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":53,"author":{"gitId":"comicalromance"},"content":"          \u003cStackPane fx:id\u003d\"studentListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2022-10-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"Piyotato":1,"-":55,"comicalromance":4}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"highorbit25"},"content":"      \u003cFlowPane fx:id\u003d\"attendances\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"highorbit25":1,"-":36}},{"path":"src/main/resources/view/ResultDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2016-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" styleClass\u003d\"pane-with-border\" xmlns\u003d\"http://javafx.com/javafx/8\"","lastModifiedDate":"2017-06-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"comicalromance"},"content":"  \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" styleClass\u003d\"result-display\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"-":8,"comicalromance":1}},{"path":"src/main/resources/view/StudentListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"comicalromance"},"content":"\u003c?import javafx.scene.text.TextFlow?\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"comicalromance"},"content":"\u003c?import javafx.scene.text.Text?\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":33,"author":{"gitId":"comicalromance"},"content":"      \u003cLabel fx:id\u003d\"studentId\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$studentId\" /\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"comicalromance"},"content":"      \u003cLabel fx:id\u003d\"gitName\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$gitName\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"comicalromance"},"content":"      \u003cLabel fx:id\u003d\"handle\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$handle\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":38,"author":{"gitId":"comicalromance"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"comicalromance"},"content":"    \u003cVBox alignment\u003d\"TOP_RIGHT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"1\"\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"comicalromance"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":41,"author":{"gitId":"comicalromance"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":42,"author":{"gitId":"comicalromance"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":43,"author":{"gitId":"comicalromance"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_RIGHT\"\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"comicalromance"},"content":"        \u003cLabel fx:id\u003d\"module\" text\u003d\"\\$module\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"comicalromance"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":46,"author":{"gitId":"comicalromance"},"content":"      \u003cLabel alignment\u003d\"TOP_RIGHT\" fx:id\u003d\"attendanceRate\"/\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":47,"author":{"gitId":"comicalromance"},"content":"      \u003cFlowPane alignment\u003d\"TOP_RIGHT\" fx:id\u003d\"attendances\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":48,"author":{"gitId":"highorbit25"},"content":"      \u003cLabel alignment\u003d\"TOP_RIGHT\" fx:id\u003d\"participationRate\"/\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":49,"author":{"gitId":"highorbit25"},"content":"      \u003cFlowPane alignment\u003d\"TOP_RIGHT\" fx:id\u003d\"participations\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":50,"author":{"gitId":"comicalromance"},"content":"      \u003cLabel alignment\u003d\"TOP_RIGHT\" fx:id\u003d\"assignmentRate\"/\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":51,"author":{"gitId":"comicalromance"},"content":"      \u003cFlowPane alignment\u003d\"TOP_RIGHT\" fx:id\u003d\"assignments\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"highorbit25":2,"-":35,"comicalromance":17}},{"path":"src/main/resources/view/StudentListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"comicalromance"},"content":"  \u003cListView fx:id\u003d\"studentListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":7,"comicalromance":1}},{"path":"src/test/java/seedu/studmap/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"-":57,"comicalromance":1}},{"path":"src/test/java/seedu/studmap/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.commons.core;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void toString_defaultObject_stringReturned() {","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        String defaultConfigAsString \u003d \"Current log level : INFO\\n\"","lastModifiedDate":"2018-12-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"                + \"Preference file Location : preferences.json\";","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertEquals(defaultConfigAsString, new Config().toString());","lastModifiedDate":"2016-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2016-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2016-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"-":26,"comicalromance":1}},{"path":"src/test/java/seedu/studmap/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.commons.core;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2017-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2017-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":133,"comicalromance":2}},{"path":"src/test/java/seedu/studmap/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.commons.core.index;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"comicalromance"},"content":"        final Index fifthStudentIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2022-10-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"comicalromance"},"content":"        assertTrue(fifthStudentIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2022-10-15"},{"lineNumber":46,"author":{"gitId":"comicalromance"},"content":"        assertTrue(fifthStudentIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2022-10-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"comicalromance"},"content":"        assertTrue(fifthStudentIndex.equals(fifthStudentIndex));","lastModifiedDate":"2022-10-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"comicalromance"},"content":"        assertFalse(fifthStudentIndex.equals(null));","lastModifiedDate":"2022-10-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"comicalromance"},"content":"        assertFalse(fifthStudentIndex.equals(5.0f));","lastModifiedDate":"2022-10-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"comicalromance"},"content":"        assertFalse(fifthStudentIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2022-10-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"-":51,"comicalromance":9}},{"path":"src/test/java/seedu/studmap/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.commons.util;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"Piyotato"},"content":"        assertNotNull(AppUtil.getImage(\"/images/studmap.png\"));","lastModifiedDate":"2022-11-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"Piyotato":1,"-":33,"comicalromance":2}},{"path":"src/test/java/seedu/studmap/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.commons.util;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2016-12-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2017-05-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // no arguments","lastModifiedDate":"2017-01-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2017-05-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // any non-empty argument list","lastModifiedDate":"2017-01-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2017-01-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2017-01-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2017-05-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2017-01-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2017-01-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // empty list","lastModifiedDate":"2017-01-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // list with all non-null elements","lastModifiedDate":"2017-01-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2018-04-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2017-06-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2017-06-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2017-06-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2017-06-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(objects));","lastModifiedDate":"2019-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(collection));","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireAllNonNull(objects);","lastModifiedDate":"2017-05-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireAllNonNull(collection);","lastModifiedDate":"2017-05-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-22"}],"authorContributionMap":{"-":105,"comicalromance":3}},{"path":"src/test/java/seedu/studmap/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.commons.util;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.commons.core.Config;","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path tempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void read_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2018-04-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return config;","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveConfig_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                                  ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                                  : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"-":112,"comicalromance":4}},{"path":"src/test/java/seedu/studmap/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.commons.util;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class FileUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void isValidPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        // valid path","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        // invalid path","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":21,"comicalromance":2}},{"path":"src/test/java/seedu/studmap/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.commons.util;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.testutil.SerializableTestClass;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.testutil.TestUtil;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Tests JSON Read and Write","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2016-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2016-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2016-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2016-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":42,"comicalromance":3}},{"path":"src/test/java/seedu/studmap/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.commons.util;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"-":141,"comicalromance":2}},{"path":"src/test/java/seedu/studmap/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.logic;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.commons.core.Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"dr-arrgghh"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.GIT_DESC_AMY;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"dr-arrgghh"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.HANDLE_DESC_AMY;","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"dr-arrgghh"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.ID_DESC_AMY;","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.MODULE_DESC_AMY;","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.testutil.TypicalStudents.AMY;","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.logic.commands.AddCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":24,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.logic.commands.CommandResult;","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.logic.commands.ListCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.Model;","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.ModelManager;","lastModifiedDate":"2022-10-15"},{"lineNumber":30,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.ReadOnlyStudMap;","lastModifiedDate":"2022-10-15"},{"lineNumber":31,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.UserPrefs;","lastModifiedDate":"2022-10-15"},{"lineNumber":32,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.student.Student;","lastModifiedDate":"2022-10-15"},{"lineNumber":33,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.storage.JsonStudMapStorage;","lastModifiedDate":"2022-10-15"},{"lineNumber":34,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.storage.JsonUserPrefsStorage;","lastModifiedDate":"2022-10-15"},{"lineNumber":35,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.storage.StorageManager;","lastModifiedDate":"2022-10-15"},{"lineNumber":36,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.testutil.StudentBuilder;","lastModifiedDate":"2022-10-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"comicalromance"},"content":"        JsonStudMapStorage studMapStorage \u003d","lastModifiedDate":"2022-10-15"},{"lineNumber":50,"author":{"gitId":"comicalromance"},"content":"                new JsonStudMapStorage(temporaryFolder.resolve(\"studMap.json\"));","lastModifiedDate":"2022-10-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":52,"author":{"gitId":"comicalromance"},"content":"        StorageManager storage \u003d new StorageManager(studMapStorage, userPrefsStorage);","lastModifiedDate":"2022-10-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"comicalromance"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":76,"author":{"gitId":"comicalromance"},"content":"        // Setup LogicManager with JsonStudMapIoExceptionThrowingStub","lastModifiedDate":"2022-10-15"},{"lineNumber":77,"author":{"gitId":"comicalromance"},"content":"        JsonStudMapStorage studMapStorage \u003d","lastModifiedDate":"2022-10-15"},{"lineNumber":78,"author":{"gitId":"comicalromance"},"content":"                new JsonStudMapIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionStudMap.json\"));","lastModifiedDate":"2022-10-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":81,"author":{"gitId":"comicalromance"},"content":"        StorageManager storage \u003d new StorageManager(studMapStorage, userPrefsStorage);","lastModifiedDate":"2022-10-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"comicalromance"},"content":"                + MODULE_DESC_AMY + ID_DESC_AMY + GIT_DESC_AMY + HANDLE_DESC_AMY;","lastModifiedDate":"2022-10-26"},{"lineNumber":87,"author":{"gitId":"comicalromance"},"content":"        Student expectedStudent \u003d new StudentBuilder(AMY).withTags().build();","lastModifiedDate":"2022-10-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"comicalromance"},"content":"        expectedModel.addStudent(expectedStudent);","lastModifiedDate":"2022-10-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"comicalromance"},"content":"    public void getFilteredStudentList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-15"},{"lineNumber":96,"author":{"gitId":"comicalromance"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredStudentList().remove(0));","lastModifiedDate":"2022-10-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"comicalromance"},"content":"        Model expectedModel \u003d new ModelManager(model.getStudMap(), new UserPrefs());","lastModifiedDate":"2022-10-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"comicalromance"},"content":"    private static class JsonStudMapIoExceptionThrowingStub extends JsonStudMapStorage {","lastModifiedDate":"2022-10-15"},{"lineNumber":156,"author":{"gitId":"comicalromance"},"content":"        private JsonStudMapIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2022-10-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"comicalromance"},"content":"        public void saveStudMap(ReadOnlyStudMap studMap, Path filePath) throws IOException {","lastModifiedDate":"2022-10-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"dr-arrgghh":3,"-":122,"comicalromance":40}},{"path":"src/test/java/seedu/studmap/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.logic.commands;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.testutil.TypicalStudents.getTypicalStudMap;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.Model;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.ModelManager;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.UserPrefs;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.student.Student;","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.testutil.StudentBuilder;","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"comicalromance"},"content":"        model \u003d new ModelManager(getTypicalStudMap(), new UserPrefs());","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"comicalromance"},"content":"    public void execute_newstudent_success() {","lastModifiedDate":"2022-10-15"},{"lineNumber":30,"author":{"gitId":"comicalromance"},"content":"        Student validStudent \u003d new StudentBuilder().build();","lastModifiedDate":"2022-10-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"comicalromance"},"content":"        Model expectedModel \u003d new ModelManager(model.getStudMap(), new UserPrefs());","lastModifiedDate":"2022-10-15"},{"lineNumber":33,"author":{"gitId":"comicalromance"},"content":"        expectedModel.addStudent(validStudent);","lastModifiedDate":"2022-10-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"comicalromance"},"content":"        assertCommandSuccess(new AddCommand(validStudent), model,","lastModifiedDate":"2022-10-15"},{"lineNumber":36,"author":{"gitId":"comicalromance"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validStudent), expectedModel);","lastModifiedDate":"2022-10-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"comicalromance"},"content":"    public void execute_duplicatestudent_throwsCommandException() {","lastModifiedDate":"2022-10-15"},{"lineNumber":41,"author":{"gitId":"comicalromance"},"content":"        Student studentInList \u003d model.getStudMap().getStudentList().get(0);","lastModifiedDate":"2022-10-15"},{"lineNumber":42,"author":{"gitId":"comicalromance"},"content":"        assertCommandFailure(new AddCommand(studentInList), model, AddCommand.MESSAGE_DUPLICATE_STUDENT);","lastModifiedDate":"2022-10-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"-":26,"comicalromance":19}},{"path":"src/test/java/seedu/studmap/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.logic.commands;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"highorbit25"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"Piyotato"},"content":"import java.util.List;","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"highorbit25"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"highorbit25"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.commons.core.GuiSettings;","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"Piyotato"},"content":"import seedu.studmap.commons.core.index.Index;","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.Model;","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.ReadOnlyStudMap;","lastModifiedDate":"2022-10-15"},{"lineNumber":24,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.StudMap;","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.order.Order;","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.student.Student;","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.testutil.StudentBuilder;","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"comicalromance"},"content":"    public void constructor_nullStudent_throwsNullPointerException() {","lastModifiedDate":"2022-10-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"comicalromance"},"content":"    public void execute_studentAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2022-10-15"},{"lineNumber":39,"author":{"gitId":"comicalromance"},"content":"        ModelStubAcceptingstudentAdded modelStub \u003d new ModelStubAcceptingstudentAdded();","lastModifiedDate":"2022-10-15"},{"lineNumber":40,"author":{"gitId":"comicalromance"},"content":"        Student validStudent \u003d new StudentBuilder().build();","lastModifiedDate":"2022-10-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"comicalromance"},"content":"        CommandResult commandResult \u003d new AddCommand(validStudent).execute(modelStub);","lastModifiedDate":"2022-10-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"comicalromance"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validStudent), commandResult.getFeedbackToUser());","lastModifiedDate":"2022-10-15"},{"lineNumber":45,"author":{"gitId":"comicalromance"},"content":"        assertEquals(Arrays.asList(validStudent), modelStub.studentsAdded);","lastModifiedDate":"2022-10-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"comicalromance"},"content":"    public void execute_duplicatestudent_throwsCommandException() {","lastModifiedDate":"2022-10-15"},{"lineNumber":50,"author":{"gitId":"comicalromance"},"content":"        Student validStudent \u003d new StudentBuilder().build();","lastModifiedDate":"2022-10-15"},{"lineNumber":51,"author":{"gitId":"comicalromance"},"content":"        AddCommand addCommand \u003d new AddCommand(validStudent);","lastModifiedDate":"2022-10-15"},{"lineNumber":52,"author":{"gitId":"comicalromance"},"content":"        ModelStub modelStub \u003d new ModelStubWithstudent(validStudent);","lastModifiedDate":"2022-10-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"comicalromance"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_STUDENT, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2022-10-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"comicalromance"},"content":"        Student alice \u003d new StudentBuilder().withName(\"Alice\").build();","lastModifiedDate":"2022-10-15"},{"lineNumber":60,"author":{"gitId":"comicalromance"},"content":"        Student bob \u003d new StudentBuilder().withName(\"Bob\").build();","lastModifiedDate":"2022-10-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"comicalromance"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2022-10-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"comicalromance"},"content":"        public Path getStudMapFilePath() {","lastModifiedDate":"2022-10-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"comicalromance"},"content":"        public void setStudMapFilePath(Path studMapFilePath) {","lastModifiedDate":"2022-10-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":116,"author":{"gitId":"comicalromance"},"content":"        public void addStudent(Student student) {","lastModifiedDate":"2022-10-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":121,"author":{"gitId":"comicalromance"},"content":"        public void setStudMap(ReadOnlyStudMap newData) {","lastModifiedDate":"2022-10-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"comicalromance"},"content":"        public ReadOnlyStudMap getStudMap() {","lastModifiedDate":"2022-10-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"comicalromance"},"content":"        public boolean hasStudent(Student student) {","lastModifiedDate":"2022-10-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"comicalromance"},"content":"        public void deleteStudent(Student target) {","lastModifiedDate":"2022-10-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":141,"author":{"gitId":"comicalromance"},"content":"        public void setStudent(Student target, Student editedStudent) {","lastModifiedDate":"2022-10-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"comicalromance"},"content":"        public ObservableList\u003cStudent\u003e getFilteredStudentList() {","lastModifiedDate":"2022-10-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"Piyotato"},"content":"        @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":151,"author":{"gitId":"Piyotato"},"content":"        public List\u003cIndex\u003e getFilteredStudentIndices() {","lastModifiedDate":"2022-10-20"},{"lineNumber":152,"author":{"gitId":"Piyotato"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-20"},{"lineNumber":153,"author":{"gitId":"Piyotato"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":154,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"comicalromance"},"content":"        public void updateFilteredStudentList(Predicate\u003cStudent\u003e predicate) {","lastModifiedDate":"2022-10-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":159,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":160,"author":{"gitId":"dr-arrgghh"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":161,"author":{"gitId":"dr-arrgghh"},"content":"        public void sortFilteredStudentList(Comparator\u003cStudent\u003e comparator, Order order) {","lastModifiedDate":"2022-10-27"},{"lineNumber":162,"author":{"gitId":"dr-arrgghh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-27"},{"lineNumber":163,"author":{"gitId":"dr-arrgghh"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":164,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":165,"author":{"gitId":"highorbit25"},"content":"        @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":166,"author":{"gitId":"dr-arrgghh"},"content":"        public void filterStudentListWithPredicate(Predicate\u003cStudent\u003e predicate) {","lastModifiedDate":"2022-10-27"},{"lineNumber":167,"author":{"gitId":"dr-arrgghh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-28"},{"lineNumber":168,"author":{"gitId":"highorbit25"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":169,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":170,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":174,"author":{"gitId":"comicalromance"},"content":"     * A Model stub that contains a single student.","lastModifiedDate":"2022-10-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":176,"author":{"gitId":"comicalromance"},"content":"    private class ModelStubWithstudent extends ModelStub {","lastModifiedDate":"2022-10-15"},{"lineNumber":177,"author":{"gitId":"comicalromance"},"content":"        private final Student student;","lastModifiedDate":"2022-10-15"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":179,"author":{"gitId":"comicalromance"},"content":"        ModelStubWithstudent(Student student) {","lastModifiedDate":"2022-10-15"},{"lineNumber":180,"author":{"gitId":"comicalromance"},"content":"            requireNonNull(student);","lastModifiedDate":"2022-10-15"},{"lineNumber":181,"author":{"gitId":"comicalromance"},"content":"            this.student \u003d student;","lastModifiedDate":"2022-10-15"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":185,"author":{"gitId":"comicalromance"},"content":"        public boolean hasStudent(Student student) {","lastModifiedDate":"2022-10-15"},{"lineNumber":186,"author":{"gitId":"comicalromance"},"content":"            requireNonNull(student);","lastModifiedDate":"2022-10-15"},{"lineNumber":187,"author":{"gitId":"comicalromance"},"content":"            return this.student.isSameStudent(student);","lastModifiedDate":"2022-10-15"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":192,"author":{"gitId":"comicalromance"},"content":"     * A Model stub that always accept the student being added.","lastModifiedDate":"2022-10-15"},{"lineNumber":193,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":194,"author":{"gitId":"comicalromance"},"content":"    private class ModelStubAcceptingstudentAdded extends ModelStub {","lastModifiedDate":"2022-10-15"},{"lineNumber":195,"author":{"gitId":"comicalromance"},"content":"        final ArrayList\u003cStudent\u003e studentsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-15"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":198,"author":{"gitId":"comicalromance"},"content":"        public boolean hasStudent(Student student) {","lastModifiedDate":"2022-10-15"},{"lineNumber":199,"author":{"gitId":"comicalromance"},"content":"            requireNonNull(student);","lastModifiedDate":"2022-10-15"},{"lineNumber":200,"author":{"gitId":"comicalromance"},"content":"            return studentsAdded.stream().anyMatch(student::isSameStudent);","lastModifiedDate":"2022-10-15"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":204,"author":{"gitId":"comicalromance"},"content":"        public void addStudent(Student student) {","lastModifiedDate":"2022-10-15"},{"lineNumber":205,"author":{"gitId":"comicalromance"},"content":"            requireNonNull(student);","lastModifiedDate":"2022-10-15"},{"lineNumber":206,"author":{"gitId":"comicalromance"},"content":"            studentsAdded.add(student);","lastModifiedDate":"2022-10-15"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":210,"author":{"gitId":"comicalromance"},"content":"        public ReadOnlyStudMap getStudMap() {","lastModifiedDate":"2022-10-15"},{"lineNumber":211,"author":{"gitId":"comicalromance"},"content":"            return new StudMap();","lastModifiedDate":"2022-10-15"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":215,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"highorbit25":7,"dr-arrgghh":9,"Piyotato":7,"-":136,"comicalromance":56}},{"path":"src/test/java/seedu/studmap/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.logic.commands;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.testutil.TypicalStudents.getTypicalStudMap;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.Model;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.ModelManager;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.StudMap;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.UserPrefs;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"comicalromance"},"content":"    public void execute_emptyStudMap_success() {","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"comicalromance"},"content":"    public void execute_nonEmptyStudMap_success() {","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"comicalromance"},"content":"        Model model \u003d new ModelManager(getTypicalStudMap(), new UserPrefs());","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"comicalromance"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalStudMap(), new UserPrefs());","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"comicalromance"},"content":"        expectedModel.setStudMap(new StudMap());","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"-":20,"comicalromance":12}},{"path":"src/test/java/seedu/studmap/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.logic.commands;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"comicalromance"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false, false)));","lastModifiedDate":"2022-10-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"comicalromance"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false, false)));","lastModifiedDate":"2022-10-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"comicalromance"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, false, true)));","lastModifiedDate":"2022-10-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"comicalromance"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false, false).hashCode());","lastModifiedDate":"2022-10-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"comicalromance"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, false, true).hashCode());","lastModifiedDate":"2022-10-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"-":48,"comicalromance":6}},{"path":"src/test/java/seedu/studmap/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.logic.commands;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"dr-arrgghh"},"content":"import static seedu.studmap.logic.parser.CliSyntax.PREFIX_GIT;","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"dr-arrgghh"},"content":"import static seedu.studmap.logic.parser.CliSyntax.PREFIX_HANDLE;","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"dr-arrgghh"},"content":"import static seedu.studmap.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.commons.core.index.Index;","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.Model;","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.StudMap;","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.student.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-15"},{"lineNumber":24,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.student.Student;","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.testutil.EditStudentDescriptorBuilder;","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"Piyotato"},"content":"    public static final String VALID_NAME_CHARLIE \u003d \"Charlie Cow\";","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"Piyotato"},"content":"    public static final String VALID_PHONE_CHARLIE \u003d \"33333333\";","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"Piyotato"},"content":"    public static final String VALID_EMAIL_CHARLIE \u003d \"charlie@example.com\";","lastModifiedDate":"2022-10-26"},{"lineNumber":41,"author":{"gitId":"comicalromance"},"content":"    public static final String VALID_MODULE_AMY \u003d \"CS2103T\";","lastModifiedDate":"2022-10-26"},{"lineNumber":42,"author":{"gitId":"comicalromance"},"content":"    public static final String VALID_MODULE_BOB \u003d \"CS2106\";","lastModifiedDate":"2022-10-26"},{"lineNumber":43,"author":{"gitId":"Piyotato"},"content":"    public static final String VALID_MODULE_CHARLIE \u003d \"CS3230\";","lastModifiedDate":"2022-10-26"},{"lineNumber":44,"author":{"gitId":"dr-arrgghh"},"content":"    public static final String VALID_ID_AMY \u003d \"E1234569\";","lastModifiedDate":"2022-10-26"},{"lineNumber":45,"author":{"gitId":"dr-arrgghh"},"content":"    public static final String VALID_ID_BOB \u003d \"E1234560\";","lastModifiedDate":"2022-10-26"},{"lineNumber":46,"author":{"gitId":"Piyotato"},"content":"    public static final String VALID_ID_CHARLIE \u003d \"E3141592\";","lastModifiedDate":"2022-10-26"},{"lineNumber":47,"author":{"gitId":"dr-arrgghh"},"content":"    public static final String VALID_GIT_AMY \u003d \"user10\";","lastModifiedDate":"2022-10-25"},{"lineNumber":48,"author":{"gitId":"dr-arrgghh"},"content":"    public static final String VALID_GIT_BOB \u003d \"user11\";","lastModifiedDate":"2022-10-25"},{"lineNumber":49,"author":{"gitId":"Piyotato"},"content":"    public static final String VALID_GIT_CHARLIE \u003d \"user12\";","lastModifiedDate":"2022-10-26"},{"lineNumber":50,"author":{"gitId":"dr-arrgghh"},"content":"    public static final String VALID_HANDLE_AMY \u003d \"@user10\";","lastModifiedDate":"2022-10-25"},{"lineNumber":51,"author":{"gitId":"dr-arrgghh"},"content":"    public static final String VALID_HANDLE_BOB \u003d \"@user11\";","lastModifiedDate":"2022-10-25"},{"lineNumber":52,"author":{"gitId":"Piyotato"},"content":"    public static final String VALID_HANDLE_CHARLIE \u003d \"@user12\";","lastModifiedDate":"2022-10-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"lpohsien"},"content":"    public static final String VALID_TAG_STUDENT \u003d \"student\";","lastModifiedDate":"2022-10-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"Piyotato"},"content":"    public static final String NAME_DESC_CHARLIE \u003d \" \" + PREFIX_NAME + VALID_NAME_CHARLIE;","lastModifiedDate":"2022-10-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"comicalromance"},"content":"    public static final String MODULE_DESC_AMY \u003d \" \" + PREFIX_MODULE + VALID_MODULE_AMY;","lastModifiedDate":"2022-10-26"},{"lineNumber":65,"author":{"gitId":"comicalromance"},"content":"    public static final String MODULE_DESC_BOB \u003d \" \" + PREFIX_MODULE + VALID_MODULE_BOB;","lastModifiedDate":"2022-10-26"},{"lineNumber":66,"author":{"gitId":"Piyotato"},"content":"    public static final String MODULE_DESC_CHARLIE \u003d \" \" + PREFIX_MODULE + VALID_MODULE_CHARLIE;","lastModifiedDate":"2022-10-26"},{"lineNumber":67,"author":{"gitId":"dr-arrgghh"},"content":"    public static final String ID_DESC_AMY \u003d \" \" + PREFIX_ID + VALID_ID_AMY;","lastModifiedDate":"2022-10-25"},{"lineNumber":68,"author":{"gitId":"dr-arrgghh"},"content":"    public static final String ID_DESC_BOB \u003d \" \" + PREFIX_ID + VALID_ID_BOB;","lastModifiedDate":"2022-10-25"},{"lineNumber":69,"author":{"gitId":"Piyotato"},"content":"    public static final String ID_DESC_CHARLIE \u003d \" \" + PREFIX_ID + VALID_ID_CHARLIE;","lastModifiedDate":"2022-10-26"},{"lineNumber":70,"author":{"gitId":"dr-arrgghh"},"content":"    public static final String GIT_DESC_AMY \u003d \" \" + PREFIX_GIT + VALID_GIT_AMY;","lastModifiedDate":"2022-10-25"},{"lineNumber":71,"author":{"gitId":"dr-arrgghh"},"content":"    public static final String GIT_DESC_BOB \u003d \" \" + PREFIX_GIT + VALID_GIT_BOB;","lastModifiedDate":"2022-10-25"},{"lineNumber":72,"author":{"gitId":"dr-arrgghh"},"content":"    public static final String HANDLE_DESC_AMY \u003d \" \" + PREFIX_HANDLE + VALID_HANDLE_AMY;","lastModifiedDate":"2022-10-25"},{"lineNumber":73,"author":{"gitId":"dr-arrgghh"},"content":"    public static final String HANDLE_DESC_BOB \u003d \" \" + PREFIX_HANDLE + VALID_HANDLE_BOB;","lastModifiedDate":"2022-10-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"Piyotato"},"content":"    public static final String INVALID_NAME \u003d \"Jame\\ns\"; // \u0027\\n\u0027 not allowed in names","lastModifiedDate":"2022-11-05"},{"lineNumber":78,"author":{"gitId":"Piyotato"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + INVALID_NAME;","lastModifiedDate":"2022-11-01"},{"lineNumber":79,"author":{"gitId":"Piyotato"},"content":"    public static final String INVALID_PHONE \u003d \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2022-11-01"},{"lineNumber":80,"author":{"gitId":"Piyotato"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + INVALID_PHONE;","lastModifiedDate":"2022-11-01"},{"lineNumber":81,"author":{"gitId":"Piyotato"},"content":"    public static final String INVALID_EMAIL \u003d \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2022-11-01"},{"lineNumber":82,"author":{"gitId":"Piyotato"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + INVALID_EMAIL;","lastModifiedDate":"2022-11-01"},{"lineNumber":83,"author":{"gitId":"Piyotato"},"content":"    public static final String INVALID_TAG \u003d \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2022-11-01"},{"lineNumber":84,"author":{"gitId":"Piyotato"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + INVALID_TAG;","lastModifiedDate":"2022-11-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":89,"author":{"gitId":"Piyotato"},"content":"    public static final EditCommand.EditCommandStudentEditor DESC_AMY;","lastModifiedDate":"2022-10-20"},{"lineNumber":90,"author":{"gitId":"Piyotato"},"content":"    public static final EditCommand.EditCommandStudentEditor DESC_BOB;","lastModifiedDate":"2022-10-20"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":93,"author":{"gitId":"comicalromance"},"content":"        DESC_AMY \u003d new EditStudentDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2022-10-15"},{"lineNumber":94,"author":{"gitId":"comicalromance"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withModule(VALID_MODULE_AMY)","lastModifiedDate":"2022-10-26"},{"lineNumber":95,"author":{"gitId":"dr-arrgghh"},"content":"                .withId(VALID_ID_AMY).withGitName(VALID_GIT_AMY)","lastModifiedDate":"2022-10-25"},{"lineNumber":96,"author":{"gitId":"comicalromance"},"content":"                .withTeleHandle(VALID_HANDLE_AMY)","lastModifiedDate":"2022-10-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":98,"author":{"gitId":"comicalromance"},"content":"        DESC_BOB \u003d new EditStudentDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2022-10-15"},{"lineNumber":99,"author":{"gitId":"comicalromance"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withModule(VALID_MODULE_BOB)","lastModifiedDate":"2022-10-26"},{"lineNumber":100,"author":{"gitId":"comicalromance"},"content":"                .withId(VALID_ID_BOB).withGitName(VALID_GIT_BOB)","lastModifiedDate":"2022-10-26"},{"lineNumber":101,"author":{"gitId":"comicalromance"},"content":"                .withTeleHandle(VALID_HANDLE_BOB)","lastModifiedDate":"2022-10-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":135,"author":{"gitId":"comicalromance"},"content":"     * - the student map, filtered student list and selected student in {@code actualModel} remain unchanged","lastModifiedDate":"2022-10-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":140,"author":{"gitId":"comicalromance"},"content":"        StudMap expectedStudMap \u003d new StudMap(actualModel.getStudMap());","lastModifiedDate":"2022-10-15"},{"lineNumber":141,"author":{"gitId":"comicalromance"},"content":"        List\u003cStudent\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredStudentList());","lastModifiedDate":"2022-10-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":144,"author":{"gitId":"comicalromance"},"content":"        assertEquals(expectedStudMap, actualModel.getStudMap());","lastModifiedDate":"2022-10-15"},{"lineNumber":145,"author":{"gitId":"comicalromance"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredStudentList());","lastModifiedDate":"2022-10-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":148,"author":{"gitId":"comicalromance"},"content":"     * Updates {@code model}\u0027s filtered list to show only the student at the given {@code targetIndex} in the","lastModifiedDate":"2022-10-15"},{"lineNumber":149,"author":{"gitId":"comicalromance"},"content":"     * {@code model}\u0027s student map.","lastModifiedDate":"2022-10-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":151,"author":{"gitId":"comicalromance"},"content":"    public static void showStudentAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2022-10-15"},{"lineNumber":152,"author":{"gitId":"comicalromance"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredStudentList().size());","lastModifiedDate":"2022-10-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":154,"author":{"gitId":"comicalromance"},"content":"        Student student \u003d model.getFilteredStudentList().get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-15"},{"lineNumber":155,"author":{"gitId":"comicalromance"},"content":"        final String[] splitName \u003d student.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2022-10-15"},{"lineNumber":156,"author":{"gitId":"comicalromance"},"content":"        model.updateFilteredStudentList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2022-10-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":158,"author":{"gitId":"comicalromance"},"content":"        assertEquals(1, model.getFilteredStudentList().size());","lastModifiedDate":"2022-10-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"dr-arrgghh":16,"Piyotato":20,"-":86,"comicalromance":38,"lpohsien":1}},{"path":"src/test/java/seedu/studmap/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.logic.commands;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.showStudentAtIndex;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.testutil.TypicalIndexes.INDEX_SECOND_STUDENT;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.testutil.TypicalStudents.getTypicalStudMap;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.commons.core.Messages;","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.commons.core.index.AllIndexGenerator;","lastModifiedDate":"2022-11-07"},{"lineNumber":16,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.commons.core.index.Index;","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.commons.core.index.SingleIndexGenerator;","lastModifiedDate":"2022-11-07"},{"lineNumber":18,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.Model;","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.ModelManager;","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.StudMap;","lastModifiedDate":"2022-11-07"},{"lineNumber":21,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.UserPrefs;","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.student.Student;","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"comicalromance"},"content":"    private Model model \u003d new ModelManager(getTypicalStudMap(), new UserPrefs());","lastModifiedDate":"2022-10-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":34,"author":{"gitId":"comicalromance"},"content":"        Student studentToDelete \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2022-10-15"},{"lineNumber":35,"author":{"gitId":"comicalromance"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(new SingleIndexGenerator(INDEX_FIRST_STUDENT));","lastModifiedDate":"2022-11-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"comicalromance"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_SINGLE_STUDENT_SUCCESS, studentToDelete);","lastModifiedDate":"2022-11-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"comicalromance"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getStudMap(), new UserPrefs());","lastModifiedDate":"2022-10-15"},{"lineNumber":40,"author":{"gitId":"comicalromance"},"content":"        expectedModel.deleteStudent(studentToDelete);","lastModifiedDate":"2022-10-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"comicalromance"},"content":"    @Test","lastModifiedDate":"2022-11-07"},{"lineNumber":46,"author":{"gitId":"comicalromance"},"content":"    public void execute_validIndexUnfilteredListWithDeleteAll_success() {","lastModifiedDate":"2022-11-07"},{"lineNumber":47,"author":{"gitId":"comicalromance"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(new AllIndexGenerator());","lastModifiedDate":"2022-11-07"},{"lineNumber":48,"author":{"gitId":"comicalromance"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_MULTI_STUDENT_SUCCESS,","lastModifiedDate":"2022-11-07"},{"lineNumber":49,"author":{"gitId":"comicalromance"},"content":"                model.getFilteredStudentList().size());","lastModifiedDate":"2022-11-07"},{"lineNumber":50,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":51,"author":{"gitId":"comicalromance"},"content":"        ModelManager expectedModel \u003d new ModelManager(new StudMap(), new UserPrefs());","lastModifiedDate":"2022-11-07"},{"lineNumber":52,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":53,"author":{"gitId":"comicalromance"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-11-07"},{"lineNumber":54,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-11-07"},{"lineNumber":55,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"comicalromance"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredStudentList().size() + 1);","lastModifiedDate":"2022-10-15"},{"lineNumber":59,"author":{"gitId":"comicalromance"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(new SingleIndexGenerator(outOfBoundIndex));","lastModifiedDate":"2022-11-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":61,"author":{"gitId":"comicalromance"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"comicalromance"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2022-10-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"comicalromance"},"content":"        Student studentToDelete \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2022-10-15"},{"lineNumber":69,"author":{"gitId":"comicalromance"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(new AllIndexGenerator());","lastModifiedDate":"2022-11-07"},{"lineNumber":70,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":71,"author":{"gitId":"comicalromance"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_SINGLE_STUDENT_SUCCESS, studentToDelete);","lastModifiedDate":"2022-11-07"},{"lineNumber":72,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":73,"author":{"gitId":"comicalromance"},"content":"        Model expectedModel \u003d new ModelManager(model.getStudMap(), new UserPrefs());","lastModifiedDate":"2022-11-07"},{"lineNumber":74,"author":{"gitId":"comicalromance"},"content":"        expectedModel.deleteStudent(studentToDelete);","lastModifiedDate":"2022-11-07"},{"lineNumber":75,"author":{"gitId":"comicalromance"},"content":"        showNostudent(expectedModel);","lastModifiedDate":"2022-11-07"},{"lineNumber":76,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":77,"author":{"gitId":"comicalromance"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-11-07"},{"lineNumber":78,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-11-07"},{"lineNumber":79,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":80,"author":{"gitId":"comicalromance"},"content":"    @Test","lastModifiedDate":"2022-11-07"},{"lineNumber":81,"author":{"gitId":"comicalromance"},"content":"    public void execute_validIndexFilteredListWithDeleteAll_success() {","lastModifiedDate":"2022-11-07"},{"lineNumber":82,"author":{"gitId":"comicalromance"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2022-11-07"},{"lineNumber":83,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":84,"author":{"gitId":"comicalromance"},"content":"        Student studentToDelete \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2022-11-07"},{"lineNumber":85,"author":{"gitId":"comicalromance"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(new SingleIndexGenerator(INDEX_FIRST_STUDENT));","lastModifiedDate":"2022-11-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":87,"author":{"gitId":"comicalromance"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_SINGLE_STUDENT_SUCCESS, studentToDelete);","lastModifiedDate":"2022-11-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":89,"author":{"gitId":"comicalromance"},"content":"        Model expectedModel \u003d new ModelManager(model.getStudMap(), new UserPrefs());","lastModifiedDate":"2022-10-15"},{"lineNumber":90,"author":{"gitId":"comicalromance"},"content":"        expectedModel.deleteStudent(studentToDelete);","lastModifiedDate":"2022-10-15"},{"lineNumber":91,"author":{"gitId":"comicalromance"},"content":"        showNostudent(expectedModel);","lastModifiedDate":"2022-10-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"comicalromance"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2022-10-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":100,"author":{"gitId":"comicalromance"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_STUDENT;","lastModifiedDate":"2022-10-15"},{"lineNumber":101,"author":{"gitId":"comicalromance"},"content":"        // ensures that outOfBoundIndex is still in bounds of student map list","lastModifiedDate":"2022-10-15"},{"lineNumber":102,"author":{"gitId":"comicalromance"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getStudMap().getStudentList().size());","lastModifiedDate":"2022-10-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"comicalromance"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(new SingleIndexGenerator(outOfBoundIndex));","lastModifiedDate":"2022-11-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"comicalromance"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"comicalromance"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(new SingleIndexGenerator(INDEX_FIRST_STUDENT));","lastModifiedDate":"2022-11-07"},{"lineNumber":112,"author":{"gitId":"comicalromance"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(new SingleIndexGenerator(INDEX_SECOND_STUDENT));","lastModifiedDate":"2022-11-07"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":118,"author":{"gitId":"comicalromance"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(new SingleIndexGenerator(INDEX_FIRST_STUDENT));","lastModifiedDate":"2022-11-07"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":127,"author":{"gitId":"comicalromance"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2022-10-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":134,"author":{"gitId":"comicalromance"},"content":"    private void showNostudent(Model model) {","lastModifiedDate":"2022-10-15"},{"lineNumber":135,"author":{"gitId":"comicalromance"},"content":"        model.updateFilteredStudentList(p -\u003e false);","lastModifiedDate":"2022-10-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":137,"author":{"gitId":"comicalromance"},"content":"        assertTrue(model.getFilteredStudentList().isEmpty());","lastModifiedDate":"2022-10-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"-":67,"comicalromance":72}},{"path":"src/test/java/seedu/studmap/logic/commands/EditCommandStudentEditorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.logic.commands;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"Piyotato"},"content":"import seedu.studmap.logic.commands.EditCommand.EditCommandStudentEditor;","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.testutil.EditStudentDescriptorBuilder;","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"Piyotato"},"content":"public class EditCommandStudentEditorTest {","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"Piyotato"},"content":"        EditCommandStudentEditor descriptorWithSameValues \u003d new EditCommandStudentEditor(DESC_AMY);","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"Piyotato"},"content":"        EditCommandStudentEditor editedAmy \u003d","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"Piyotato"},"content":"                new EditStudentDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"comicalromance"},"content":"        editedAmy \u003d new EditStudentDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-10-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"comicalromance"},"content":"        editedAmy \u003d new EditStudentDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2022-10-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"comicalromance"},"content":"        editedAmy \u003d new EditStudentDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-10-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"Piyotato":5,"-":38,"comicalromance":11}},{"path":"src/test/java/seedu/studmap/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.logic.commands;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.showStudentAtIndex;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.testutil.TypicalIndexes.INDEX_SECOND_STUDENT;","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.testutil.TypicalStudents.getTypicalStudMap;","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.commons.core.Messages;","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.commons.core.index.Index;","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"Piyotato"},"content":"import seedu.studmap.commons.core.index.SingleIndexGenerator;","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"Piyotato"},"content":"import seedu.studmap.logic.commands.EditCommand.EditCommandStudentEditor;","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.Model;","lastModifiedDate":"2022-10-15"},{"lineNumber":24,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.ModelManager;","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.StudMap;","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.UserPrefs;","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.student.Student;","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.testutil.EditStudentDescriptorBuilder;","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.testutil.StudentBuilder;","lastModifiedDate":"2022-10-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":36,"author":{"gitId":"comicalromance"},"content":"    private Model model \u003d new ModelManager(getTypicalStudMap(), new UserPrefs());","lastModifiedDate":"2022-10-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":40,"author":{"gitId":"comicalromance"},"content":"        Student editedStudent \u003d new StudentBuilder().build();","lastModifiedDate":"2022-10-15"},{"lineNumber":41,"author":{"gitId":"Piyotato"},"content":"        EditCommandStudentEditor editor \u003d new EditStudentDescriptorBuilder(editedStudent).build();","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"Piyotato"},"content":"        EditCommand editCommand \u003d new EditCommand(new SingleIndexGenerator(INDEX_FIRST_STUDENT), editor);","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"comicalromance"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_STUDENT_SUCCESS, editedStudent);","lastModifiedDate":"2022-10-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"comicalromance"},"content":"        Model expectedModel \u003d new ModelManager(new StudMap(model.getStudMap()), new UserPrefs());","lastModifiedDate":"2022-10-15"},{"lineNumber":47,"author":{"gitId":"comicalromance"},"content":"        expectedModel.setStudent(model.getFilteredStudentList().get(0), editedStudent);","lastModifiedDate":"2022-10-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"comicalromance"},"content":"        Index indexLaststudent \u003d Index.fromOneBased(model.getFilteredStudentList().size());","lastModifiedDate":"2022-10-15"},{"lineNumber":55,"author":{"gitId":"comicalromance"},"content":"        Student lastStudent \u003d model.getFilteredStudentList().get(indexLaststudent.getZeroBased());","lastModifiedDate":"2022-10-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":57,"author":{"gitId":"comicalromance"},"content":"        StudentBuilder studentInList \u003d new StudentBuilder(lastStudent);","lastModifiedDate":"2022-10-15"},{"lineNumber":58,"author":{"gitId":"comicalromance"},"content":"        Student editedStudent \u003d studentInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-10-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"Piyotato"},"content":"        EditCommandStudentEditor editor \u003d new EditStudentDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2022-10-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":63,"author":{"gitId":"Piyotato"},"content":"        EditCommand editCommand \u003d new EditCommand(new SingleIndexGenerator(indexLaststudent), editor);","lastModifiedDate":"2022-10-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"comicalromance"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_STUDENT_SUCCESS, editedStudent);","lastModifiedDate":"2022-10-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"comicalromance"},"content":"        Model expectedModel \u003d new ModelManager(new StudMap(model.getStudMap()), new UserPrefs());","lastModifiedDate":"2022-10-15"},{"lineNumber":68,"author":{"gitId":"comicalromance"},"content":"        expectedModel.setStudent(lastStudent, editedStudent);","lastModifiedDate":"2022-10-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":75,"author":{"gitId":"Piyotato"},"content":"        EditCommand editCommand \u003d new EditCommand(new SingleIndexGenerator(INDEX_FIRST_STUDENT),","lastModifiedDate":"2022-10-20"},{"lineNumber":76,"author":{"gitId":"Piyotato"},"content":"                new EditCommandStudentEditor());","lastModifiedDate":"2022-10-20"},{"lineNumber":77,"author":{"gitId":"comicalromance"},"content":"        Student editedStudent \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2022-10-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"Piyotato"},"content":"        String expectedMessage \u003d EditCommand.MESSAGE_NOT_EDITED;","lastModifiedDate":"2022-10-20"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"comicalromance"},"content":"        Model expectedModel \u003d new ModelManager(new StudMap(model.getStudMap()), new UserPrefs());","lastModifiedDate":"2022-10-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"comicalromance"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2022-10-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"comicalromance"},"content":"        Student studentInFilteredList \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2022-10-15"},{"lineNumber":91,"author":{"gitId":"comicalromance"},"content":"        Student editedStudent \u003d new StudentBuilder(studentInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-15"},{"lineNumber":92,"author":{"gitId":"Piyotato"},"content":"        EditCommand editCommand \u003d new EditCommand(new SingleIndexGenerator(INDEX_FIRST_STUDENT),","lastModifiedDate":"2022-10-20"},{"lineNumber":93,"author":{"gitId":"comicalromance"},"content":"                new EditStudentDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2022-10-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"comicalromance"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_STUDENT_SUCCESS, editedStudent);","lastModifiedDate":"2022-10-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"comicalromance"},"content":"        Model expectedModel \u003d new ModelManager(new StudMap(model.getStudMap()), new UserPrefs());","lastModifiedDate":"2022-10-15"},{"lineNumber":98,"author":{"gitId":"comicalromance"},"content":"        showStudentAtIndex(expectedModel, INDEX_FIRST_STUDENT);","lastModifiedDate":"2022-11-03"},{"lineNumber":99,"author":{"gitId":"comicalromance"},"content":"        expectedModel.setStudent(model.getFilteredStudentList().get(0), editedStudent);","lastModifiedDate":"2022-10-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":105,"author":{"gitId":"comicalromance"},"content":"    public void execute_duplicatestudentUnfilteredList_failure() {","lastModifiedDate":"2022-10-15"},{"lineNumber":106,"author":{"gitId":"comicalromance"},"content":"        Student firstStudent \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2022-10-15"},{"lineNumber":107,"author":{"gitId":"Piyotato"},"content":"        EditCommandStudentEditor editor \u003d new EditStudentDescriptorBuilder(firstStudent).build();","lastModifiedDate":"2022-10-20"},{"lineNumber":108,"author":{"gitId":"Piyotato"},"content":"        EditCommand editCommand \u003d new EditCommand(new SingleIndexGenerator(INDEX_SECOND_STUDENT),","lastModifiedDate":"2022-10-20"},{"lineNumber":109,"author":{"gitId":"Piyotato"},"content":"                editor);","lastModifiedDate":"2022-10-20"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"Piyotato"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_DUPLICATE_STUDENT);","lastModifiedDate":"2022-10-20"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"comicalromance"},"content":"    public void execute_duplicatestudentFilteredList_failure() {","lastModifiedDate":"2022-10-15"},{"lineNumber":116,"author":{"gitId":"comicalromance"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2022-10-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":118,"author":{"gitId":"comicalromance"},"content":"        // edit student in filtered list into a duplicate in student map","lastModifiedDate":"2022-10-15"},{"lineNumber":119,"author":{"gitId":"comicalromance"},"content":"        Student studentInList \u003d model.getStudMap().getStudentList().get(INDEX_SECOND_STUDENT.getZeroBased());","lastModifiedDate":"2022-10-15"},{"lineNumber":120,"author":{"gitId":"Piyotato"},"content":"        EditCommand editCommand \u003d new EditCommand(new SingleIndexGenerator(INDEX_FIRST_STUDENT),","lastModifiedDate":"2022-10-20"},{"lineNumber":121,"author":{"gitId":"comicalromance"},"content":"                new EditStudentDescriptorBuilder(studentInList).build());","lastModifiedDate":"2022-10-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"Piyotato"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_DUPLICATE_STUDENT);","lastModifiedDate":"2022-10-20"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":127,"author":{"gitId":"comicalromance"},"content":"    public void execute_invalidstudentIndexUnfilteredList_failure() {","lastModifiedDate":"2022-10-15"},{"lineNumber":128,"author":{"gitId":"comicalromance"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredStudentList().size() + 1);","lastModifiedDate":"2022-10-15"},{"lineNumber":129,"author":{"gitId":"Piyotato"},"content":"        EditCommandStudentEditor editor \u003d new EditStudentDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-20"},{"lineNumber":130,"author":{"gitId":"Piyotato"},"content":"        EditCommand editCommand \u003d new EditCommand(new SingleIndexGenerator(outOfBoundIndex), editor);","lastModifiedDate":"2022-10-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":132,"author":{"gitId":"comicalromance"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":137,"author":{"gitId":"comicalromance"},"content":"     * but smaller than size of student map","lastModifiedDate":"2022-10-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"comicalromance"},"content":"    public void execute_invalidstudentIndexFilteredList_failure() {","lastModifiedDate":"2022-10-15"},{"lineNumber":141,"author":{"gitId":"comicalromance"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2022-10-15"},{"lineNumber":142,"author":{"gitId":"comicalromance"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_STUDENT;","lastModifiedDate":"2022-10-15"},{"lineNumber":143,"author":{"gitId":"comicalromance"},"content":"        // ensures that outOfBoundIndex is still in bounds of student map list","lastModifiedDate":"2022-10-15"},{"lineNumber":144,"author":{"gitId":"comicalromance"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getStudMap().getStudentList().size());","lastModifiedDate":"2022-10-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":146,"author":{"gitId":"Piyotato"},"content":"        EditCommand editCommand \u003d new EditCommand(new SingleIndexGenerator(outOfBoundIndex),","lastModifiedDate":"2022-10-20"},{"lineNumber":147,"author":{"gitId":"comicalromance"},"content":"                new EditStudentDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2022-10-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":149,"author":{"gitId":"comicalromance"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"Piyotato"},"content":"        final EditCommand standardCommand \u003d","lastModifiedDate":"2022-10-20"},{"lineNumber":155,"author":{"gitId":"Piyotato"},"content":"                new EditCommand(new SingleIndexGenerator(INDEX_FIRST_STUDENT), DESC_AMY);","lastModifiedDate":"2022-10-20"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"Piyotato"},"content":"        EditCommandStudentEditor copyDescriptor \u003d new EditCommandStudentEditor(DESC_AMY);","lastModifiedDate":"2022-10-20"},{"lineNumber":159,"author":{"gitId":"Piyotato"},"content":"        EditCommand commandWithSameValues \u003d","lastModifiedDate":"2022-10-20"},{"lineNumber":160,"author":{"gitId":"Piyotato"},"content":"                new EditCommand(new SingleIndexGenerator(INDEX_FIRST_STUDENT), copyDescriptor);","lastModifiedDate":"2022-10-20"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"Piyotato"},"content":"        assertFalse(standardCommand.equals(","lastModifiedDate":"2022-10-20"},{"lineNumber":174,"author":{"gitId":"Piyotato"},"content":"                new EditCommand(new SingleIndexGenerator(INDEX_SECOND_STUDENT), DESC_AMY)));","lastModifiedDate":"2022-10-20"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":176,"author":{"gitId":"Piyotato"},"content":"        // different editor -\u003e returns false","lastModifiedDate":"2022-10-20"},{"lineNumber":177,"author":{"gitId":"Piyotato"},"content":"        assertFalse(standardCommand.equals(","lastModifiedDate":"2022-10-20"},{"lineNumber":178,"author":{"gitId":"Piyotato"},"content":"                new EditCommand(new SingleIndexGenerator(INDEX_FIRST_STUDENT), DESC_BOB)));","lastModifiedDate":"2022-10-20"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"Piyotato":29,"-":91,"comicalromance":61}},{"path":"src/test/java/seedu/studmap/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.logic.commands;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.Model;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.ModelManager;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"comicalromance"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, false, true);","lastModifiedDate":"2022-10-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"-":14,"comicalromance":6}},{"path":"src/test/java/seedu/studmap/logic/commands/FilterCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.logic.commands;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"dr-arrgghh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.commons.core.Messages.MESSAGE_STUDENTS_LISTED_OVERVIEW;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.testutil.TypicalStudents.getTypicalStudMap;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"dr-arrgghh"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"dr-arrgghh"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"dr-arrgghh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.Model;","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.ModelManager;","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.StudMap;","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.UserPrefs;","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.student.Student;","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.student.TagContainsKeywordsPredicate;","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.testutil.StudentBuilder;","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"dr-arrgghh"},"content":"public class FilterCommandTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"comicalromance"},"content":"    private Model model \u003d new ModelManager(getTypicalStudMap(), new UserPrefs());","lastModifiedDate":"2022-10-15"},{"lineNumber":24,"author":{"gitId":"comicalromance"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalStudMap(), new UserPrefs());","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"dr-arrgghh"},"content":"    public Model mockDatabase() {","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"comicalromance"},"content":"        Student john \u003d new StudentBuilder().withName(\"John\").withTags(\"friends\").build();","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"comicalromance"},"content":"        Student cena \u003d new StudentBuilder().withName(\"Cena\").withTags(\"friends\").build();","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"comicalromance"},"content":"        StudMap sm \u003d new StudMap();","lastModifiedDate":"2022-10-15"},{"lineNumber":30,"author":{"gitId":"comicalromance"},"content":"        sm.addStudent(john);","lastModifiedDate":"2022-10-15"},{"lineNumber":31,"author":{"gitId":"comicalromance"},"content":"        sm.addStudent(cena);","lastModifiedDate":"2022-10-15"},{"lineNumber":32,"author":{"gitId":"comicalromance"},"content":"        Model model \u003d new ModelManager(sm, new UserPrefs());","lastModifiedDate":"2022-10-15"},{"lineNumber":33,"author":{"gitId":"dr-arrgghh"},"content":"        return model;","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"dr-arrgghh"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"dr-arrgghh"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"dr-arrgghh"},"content":"    public void execute_zeroKeywords_noStudentFound() {","lastModifiedDate":"2022-10-25"},{"lineNumber":38,"author":{"gitId":"comicalromance"},"content":"        String expectedMessage \u003d String.format(MESSAGE_STUDENTS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2022-10-15"},{"lineNumber":39,"author":{"gitId":"dr-arrgghh"},"content":"        TagContainsKeywordsPredicate tPredicate \u003d preparePredicate(\"busy\");","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"dr-arrgghh"},"content":"        FilterCommand command \u003d new FilterCommand(tPredicate);","lastModifiedDate":"2022-10-27"},{"lineNumber":41,"author":{"gitId":"dr-arrgghh"},"content":"        expectedModel.filterStudentListWithPredicate(tPredicate);","lastModifiedDate":"2022-10-27"},{"lineNumber":42,"author":{"gitId":"dr-arrgghh"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"comicalromance"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredStudentList());","lastModifiedDate":"2022-10-15"},{"lineNumber":44,"author":{"gitId":"dr-arrgghh"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"dr-arrgghh"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"comicalromance"},"content":"    public void execute_singleKeyword_multiplestudentsFound() {","lastModifiedDate":"2022-10-15"},{"lineNumber":48,"author":{"gitId":"dr-arrgghh"},"content":"        Model initialModel \u003d mockDatabase();","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"dr-arrgghh"},"content":"        Model outputModel \u003d mockDatabase();","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"comicalromance"},"content":"        Student john \u003d outputModel.getStudMap().getStudentList().get(0);","lastModifiedDate":"2022-10-15"},{"lineNumber":51,"author":{"gitId":"comicalromance"},"content":"        Student cena \u003d outputModel.getStudMap().getStudentList().get(1);","lastModifiedDate":"2022-10-15"},{"lineNumber":52,"author":{"gitId":"comicalromance"},"content":"        String expectedMessage \u003d String.format(MESSAGE_STUDENTS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2022-10-15"},{"lineNumber":53,"author":{"gitId":"dr-arrgghh"},"content":"        TagContainsKeywordsPredicate predicate \u003d preparePredicate(\"friends\");","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"dr-arrgghh"},"content":"        FilterCommand command \u003d new FilterCommand(predicate);","lastModifiedDate":"2022-10-27"},{"lineNumber":55,"author":{"gitId":"dr-arrgghh"},"content":"        outputModel.filterStudentListWithPredicate(predicate);","lastModifiedDate":"2022-10-27"},{"lineNumber":56,"author":{"gitId":"highorbit25"},"content":"        assertCommandSuccess(command, initialModel, expectedMessage, outputModel);","lastModifiedDate":"2022-10-15"},{"lineNumber":57,"author":{"gitId":"comicalromance"},"content":"        assertEquals(Arrays.asList(john, cena), outputModel.getFilteredStudentList());","lastModifiedDate":"2022-10-15"},{"lineNumber":58,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"dr-arrgghh"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"dr-arrgghh"},"content":"    private TagContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"dr-arrgghh"},"content":"        return new TagContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"dr-arrgghh"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"dr-arrgghh"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"highorbit25":1,"dr-arrgghh":38,"comicalromance":26}},{"path":"src/test/java/seedu/studmap/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.logic.commands;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.commons.core.Messages.MESSAGE_STUDENTS_LISTED_OVERVIEW;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.testutil.TypicalStudents.CARL;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.testutil.TypicalStudents.ELLE;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.testutil.TypicalStudents.FIONA;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.testutil.TypicalStudents.getTypicalStudMap;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.Model;","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.ModelManager;","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.UserPrefs;","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.student.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"comicalromance"},"content":"    private Model model \u003d new ModelManager(getTypicalStudMap(), new UserPrefs());","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"comicalromance"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalStudMap(), new UserPrefs());","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"comicalromance"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2022-10-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"comicalromance"},"content":"    public void execute_zeroKeywords_nostudentFound() {","lastModifiedDate":"2022-10-15"},{"lineNumber":59,"author":{"gitId":"comicalromance"},"content":"        String expectedMessage \u003d String.format(MESSAGE_STUDENTS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2022-10-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"comicalromance"},"content":"        expectedModel.updateFilteredStudentList(predicate);","lastModifiedDate":"2022-10-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"comicalromance"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredStudentList());","lastModifiedDate":"2022-10-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"comicalromance"},"content":"    public void execute_multipleKeywords_multiplestudentsFound() {","lastModifiedDate":"2022-10-15"},{"lineNumber":69,"author":{"gitId":"comicalromance"},"content":"        String expectedMessage \u003d String.format(MESSAGE_STUDENTS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2022-10-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"comicalromance"},"content":"        expectedModel.updateFilteredStudentList(predicate);","lastModifiedDate":"2022-10-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"comicalromance"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredStudentList());","lastModifiedDate":"2022-10-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"-":61,"comicalromance":22}},{"path":"src/test/java/seedu/studmap/logic/commands/GradeCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Piyotato"},"content":"package seedu.studmap.logic.commands;","lastModifiedDate":"2022-11-06"},{"lineNumber":2,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":3,"author":{"gitId":"Piyotato"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-11-06"},{"lineNumber":4,"author":{"gitId":"Piyotato"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-11-06"},{"lineNumber":5,"author":{"gitId":"Piyotato"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.showStudentAtIndex;","lastModifiedDate":"2022-11-06"},{"lineNumber":6,"author":{"gitId":"Piyotato"},"content":"import static seedu.studmap.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2022-11-06"},{"lineNumber":7,"author":{"gitId":"Piyotato"},"content":"import static seedu.studmap.testutil.TypicalStudents.getTypicalStudMap;","lastModifiedDate":"2022-11-06"},{"lineNumber":8,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":9,"author":{"gitId":"Piyotato"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-11-06"},{"lineNumber":10,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":11,"author":{"gitId":"Piyotato"},"content":"import seedu.studmap.commons.core.Messages;","lastModifiedDate":"2022-11-06"},{"lineNumber":12,"author":{"gitId":"Piyotato"},"content":"import seedu.studmap.commons.core.index.Index;","lastModifiedDate":"2022-11-06"},{"lineNumber":13,"author":{"gitId":"Piyotato"},"content":"import seedu.studmap.commons.core.index.SingleIndexGenerator;","lastModifiedDate":"2022-11-06"},{"lineNumber":14,"author":{"gitId":"Piyotato"},"content":"import seedu.studmap.model.Model;","lastModifiedDate":"2022-11-06"},{"lineNumber":15,"author":{"gitId":"Piyotato"},"content":"import seedu.studmap.model.ModelManager;","lastModifiedDate":"2022-11-06"},{"lineNumber":16,"author":{"gitId":"Piyotato"},"content":"import seedu.studmap.model.UserPrefs;","lastModifiedDate":"2022-11-06"},{"lineNumber":17,"author":{"gitId":"Piyotato"},"content":"import seedu.studmap.model.student.Assignment;","lastModifiedDate":"2022-11-06"},{"lineNumber":18,"author":{"gitId":"Piyotato"},"content":"import seedu.studmap.model.student.Student;","lastModifiedDate":"2022-11-06"},{"lineNumber":19,"author":{"gitId":"Piyotato"},"content":"import seedu.studmap.testutil.StudentBuilder;","lastModifiedDate":"2022-11-06"},{"lineNumber":20,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":21,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":22,"author":{"gitId":"Piyotato"},"content":"/**","lastModifiedDate":"2022-11-06"},{"lineNumber":23,"author":{"gitId":"Piyotato"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2022-11-06"},{"lineNumber":24,"author":{"gitId":"Piyotato"},"content":" * {@code GradeCommand}.","lastModifiedDate":"2022-11-06"},{"lineNumber":25,"author":{"gitId":"Piyotato"},"content":" */","lastModifiedDate":"2022-11-06"},{"lineNumber":26,"author":{"gitId":"Piyotato"},"content":"class GradeCommandTest {","lastModifiedDate":"2022-11-06"},{"lineNumber":27,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":28,"author":{"gitId":"Piyotato"},"content":"    private Model model \u003d new ModelManager(getTypicalStudMap(), new UserPrefs());","lastModifiedDate":"2022-11-06"},{"lineNumber":29,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":30,"author":{"gitId":"Piyotato"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":31,"author":{"gitId":"Piyotato"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2022-11-06"},{"lineNumber":32,"author":{"gitId":"Piyotato"},"content":"        Student studentToMark \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2022-11-06"},{"lineNumber":33,"author":{"gitId":"Piyotato"},"content":"        Assignment assignment \u003d new Assignment(\"A123\", Assignment.Status.MARKED);","lastModifiedDate":"2022-11-06"},{"lineNumber":34,"author":{"gitId":"Piyotato"},"content":"        GradeCommand gradeCommand \u003d new GradeCommand(new SingleIndexGenerator(INDEX_FIRST_STUDENT),","lastModifiedDate":"2022-11-06"},{"lineNumber":35,"author":{"gitId":"Piyotato"},"content":"                new GradeCommand.GradeCommandStudentEditor(assignment));","lastModifiedDate":"2022-11-06"},{"lineNumber":36,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":37,"author":{"gitId":"Piyotato"},"content":"        Student markedStudent \u003d new StudentBuilder(studentToMark)","lastModifiedDate":"2022-11-06"},{"lineNumber":38,"author":{"gitId":"Piyotato"},"content":"                .addAssignedMarked(\"A123\").build();","lastModifiedDate":"2022-11-06"},{"lineNumber":39,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":40,"author":{"gitId":"Piyotato"},"content":"        String expectedMessage \u003d String.format(GradeCommand.MESSAGE_GRADE_SINGLE_SUCCESS_ASSIGNMENT,","lastModifiedDate":"2022-11-06"},{"lineNumber":41,"author":{"gitId":"Piyotato"},"content":"                assignment.getAttributeName(),","lastModifiedDate":"2022-11-06"},{"lineNumber":42,"author":{"gitId":"Piyotato"},"content":"                markedStudent.getName(),","lastModifiedDate":"2022-11-06"},{"lineNumber":43,"author":{"gitId":"Piyotato"},"content":"                assignment.state);","lastModifiedDate":"2022-11-07"},{"lineNumber":44,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":45,"author":{"gitId":"Piyotato"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getStudMap(), new UserPrefs());","lastModifiedDate":"2022-11-06"},{"lineNumber":46,"author":{"gitId":"Piyotato"},"content":"        expectedModel.setStudent(model.getFilteredStudentList().get(0), markedStudent);","lastModifiedDate":"2022-11-06"},{"lineNumber":47,"author":{"gitId":"Piyotato"},"content":"        assertCommandSuccess(gradeCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-11-06"},{"lineNumber":48,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":49,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":50,"author":{"gitId":"Piyotato"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":51,"author":{"gitId":"Piyotato"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2022-11-06"},{"lineNumber":52,"author":{"gitId":"Piyotato"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2022-11-06"},{"lineNumber":53,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":54,"author":{"gitId":"Piyotato"},"content":"        Student studentInFilteredList \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2022-11-06"},{"lineNumber":55,"author":{"gitId":"Piyotato"},"content":"        Assignment assignment \u003d new Assignment(\"A123\", Assignment.Status.MARKED);","lastModifiedDate":"2022-11-06"},{"lineNumber":56,"author":{"gitId":"Piyotato"},"content":"        GradeCommand gradeCommand \u003d new GradeCommand(new SingleIndexGenerator(INDEX_FIRST_STUDENT),","lastModifiedDate":"2022-11-06"},{"lineNumber":57,"author":{"gitId":"Piyotato"},"content":"                new GradeCommand.GradeCommandStudentEditor(assignment));","lastModifiedDate":"2022-11-06"},{"lineNumber":58,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":59,"author":{"gitId":"Piyotato"},"content":"        Student markedStudent \u003d new StudentBuilder(studentInFilteredList)","lastModifiedDate":"2022-11-06"},{"lineNumber":60,"author":{"gitId":"Piyotato"},"content":"                .addAssignedMarked(\"A123\").build();","lastModifiedDate":"2022-11-06"},{"lineNumber":61,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":62,"author":{"gitId":"Piyotato"},"content":"        String expectedMessage \u003d String.format(GradeCommand.MESSAGE_GRADE_SINGLE_SUCCESS_ASSIGNMENT,","lastModifiedDate":"2022-11-06"},{"lineNumber":63,"author":{"gitId":"Piyotato"},"content":"                assignment.getAttributeName(),","lastModifiedDate":"2022-11-06"},{"lineNumber":64,"author":{"gitId":"Piyotato"},"content":"                markedStudent.getName(),","lastModifiedDate":"2022-11-06"},{"lineNumber":65,"author":{"gitId":"Piyotato"},"content":"                assignment.state);","lastModifiedDate":"2022-11-07"},{"lineNumber":66,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":67,"author":{"gitId":"Piyotato"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getStudMap(), new UserPrefs());","lastModifiedDate":"2022-11-06"},{"lineNumber":68,"author":{"gitId":"Piyotato"},"content":"        showStudentAtIndex(expectedModel, INDEX_FIRST_STUDENT);","lastModifiedDate":"2022-11-06"},{"lineNumber":69,"author":{"gitId":"Piyotato"},"content":"        expectedModel.setStudent(model.getFilteredStudentList().get(0), markedStudent);","lastModifiedDate":"2022-11-06"},{"lineNumber":70,"author":{"gitId":"Piyotato"},"content":"        assertCommandSuccess(gradeCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-11-06"},{"lineNumber":71,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":72,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":73,"author":{"gitId":"Piyotato"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":74,"author":{"gitId":"Piyotato"},"content":"    public void execute_invalidstudentIndexUnfilteredList_failure() {","lastModifiedDate":"2022-11-06"},{"lineNumber":75,"author":{"gitId":"Piyotato"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredStudentList().size() + 1);","lastModifiedDate":"2022-11-06"},{"lineNumber":76,"author":{"gitId":"Piyotato"},"content":"        Assignment assignment \u003d new Assignment(\"A123\", Assignment.Status.MARKED);","lastModifiedDate":"2022-11-06"},{"lineNumber":77,"author":{"gitId":"Piyotato"},"content":"        GradeCommand gradeCommand \u003d new GradeCommand(new SingleIndexGenerator(outOfBoundIndex),","lastModifiedDate":"2022-11-06"},{"lineNumber":78,"author":{"gitId":"Piyotato"},"content":"                new GradeCommand.GradeCommandStudentEditor(assignment));","lastModifiedDate":"2022-11-06"},{"lineNumber":79,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":80,"author":{"gitId":"Piyotato"},"content":"        assertCommandFailure(gradeCommand, model, Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-11-06"},{"lineNumber":81,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":82,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":83,"author":{"gitId":"Piyotato"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":84,"author":{"gitId":"Piyotato"},"content":"    public void execute_markedNoEdit_success() {","lastModifiedDate":"2022-11-06"},{"lineNumber":85,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":86,"author":{"gitId":"Piyotato"},"content":"        // student not edited if already marked","lastModifiedDate":"2022-11-06"},{"lineNumber":87,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":88,"author":{"gitId":"Piyotato"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2022-11-06"},{"lineNumber":89,"author":{"gitId":"Piyotato"},"content":"        Student studentInFilteredList \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2022-11-06"},{"lineNumber":90,"author":{"gitId":"Piyotato"},"content":"        Assignment assignment \u003d new Assignment(\"A123\", Assignment.Status.MARKED);","lastModifiedDate":"2022-11-06"},{"lineNumber":91,"author":{"gitId":"Piyotato"},"content":"        Student studentToMark \u003d new StudentBuilder(studentInFilteredList).addAssignments(assignment).build();","lastModifiedDate":"2022-11-06"},{"lineNumber":92,"author":{"gitId":"Piyotato"},"content":"        model.setStudent(studentInFilteredList, studentToMark);","lastModifiedDate":"2022-11-06"},{"lineNumber":93,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":94,"author":{"gitId":"Piyotato"},"content":"        GradeCommand gradeCommand \u003d new GradeCommand(new SingleIndexGenerator(INDEX_FIRST_STUDENT),","lastModifiedDate":"2022-11-06"},{"lineNumber":95,"author":{"gitId":"Piyotato"},"content":"                new GradeCommand.GradeCommandStudentEditor(assignment));","lastModifiedDate":"2022-11-06"},{"lineNumber":96,"author":{"gitId":"Piyotato"},"content":"        String expectedMessage \u003d String.format(GradeCommand.MESSAGE_GRADE_SINGLE_UNEDITED_ASSIGNMENT,","lastModifiedDate":"2022-11-06"},{"lineNumber":97,"author":{"gitId":"Piyotato"},"content":"                assignment.getAttributeName(),","lastModifiedDate":"2022-11-06"},{"lineNumber":98,"author":{"gitId":"Piyotato"},"content":"                assignment.state,","lastModifiedDate":"2022-11-06"},{"lineNumber":99,"author":{"gitId":"Piyotato"},"content":"                studentToMark.getName());","lastModifiedDate":"2022-11-07"},{"lineNumber":100,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":101,"author":{"gitId":"Piyotato"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getStudMap(), new UserPrefs());","lastModifiedDate":"2022-11-06"},{"lineNumber":102,"author":{"gitId":"Piyotato"},"content":"        showStudentAtIndex(expectedModel, INDEX_FIRST_STUDENT);","lastModifiedDate":"2022-11-06"},{"lineNumber":103,"author":{"gitId":"Piyotato"},"content":"        expectedModel.setStudent(model.getFilteredStudentList().get(0), studentToMark);","lastModifiedDate":"2022-11-06"},{"lineNumber":104,"author":{"gitId":"Piyotato"},"content":"        assertCommandSuccess(gradeCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-11-06"},{"lineNumber":105,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":106,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":107,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":108,"author":{"gitId":"Piyotato"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":109,"author":{"gitId":"Piyotato"},"content":"    public void execute_newNoEdit_success() {","lastModifiedDate":"2022-11-06"},{"lineNumber":110,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":111,"author":{"gitId":"Piyotato"},"content":"        // student not edited if already marked","lastModifiedDate":"2022-11-06"},{"lineNumber":112,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":113,"author":{"gitId":"Piyotato"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2022-11-06"},{"lineNumber":114,"author":{"gitId":"Piyotato"},"content":"        Student studentInFilteredList \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2022-11-06"},{"lineNumber":115,"author":{"gitId":"Piyotato"},"content":"        Assignment assignment \u003d new Assignment(\"A123\", Assignment.Status.NEW);","lastModifiedDate":"2022-11-06"},{"lineNumber":116,"author":{"gitId":"Piyotato"},"content":"        Student studentToMark \u003d new StudentBuilder(studentInFilteredList).addAssignments(assignment).build();","lastModifiedDate":"2022-11-06"},{"lineNumber":117,"author":{"gitId":"Piyotato"},"content":"        model.setStudent(studentInFilteredList, studentToMark);","lastModifiedDate":"2022-11-06"},{"lineNumber":118,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":119,"author":{"gitId":"Piyotato"},"content":"        GradeCommand gradeCommand \u003d new GradeCommand(new SingleIndexGenerator(INDEX_FIRST_STUDENT),","lastModifiedDate":"2022-11-06"},{"lineNumber":120,"author":{"gitId":"Piyotato"},"content":"                new GradeCommand.GradeCommandStudentEditor(assignment));","lastModifiedDate":"2022-11-06"},{"lineNumber":121,"author":{"gitId":"Piyotato"},"content":"        String expectedMessage \u003d String.format(GradeCommand.MESSAGE_GRADE_SINGLE_UNEDITED_ASSIGNMENT,","lastModifiedDate":"2022-11-06"},{"lineNumber":122,"author":{"gitId":"Piyotato"},"content":"                assignment.getAttributeName(),","lastModifiedDate":"2022-11-06"},{"lineNumber":123,"author":{"gitId":"Piyotato"},"content":"                assignment.state,","lastModifiedDate":"2022-11-06"},{"lineNumber":124,"author":{"gitId":"Piyotato"},"content":"                studentToMark.getName());","lastModifiedDate":"2022-11-07"},{"lineNumber":125,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":126,"author":{"gitId":"Piyotato"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getStudMap(), new UserPrefs());","lastModifiedDate":"2022-11-06"},{"lineNumber":127,"author":{"gitId":"Piyotato"},"content":"        showStudentAtIndex(expectedModel, INDEX_FIRST_STUDENT);","lastModifiedDate":"2022-11-06"},{"lineNumber":128,"author":{"gitId":"Piyotato"},"content":"        expectedModel.setStudent(model.getFilteredStudentList().get(0), studentToMark);","lastModifiedDate":"2022-11-06"},{"lineNumber":129,"author":{"gitId":"Piyotato"},"content":"        assertCommandSuccess(gradeCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-11-06"},{"lineNumber":130,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":131,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":132,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":133,"author":{"gitId":"Piyotato"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":134,"author":{"gitId":"Piyotato"},"content":"    public void execute_receivedNoEdit_success() {","lastModifiedDate":"2022-11-06"},{"lineNumber":135,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":136,"author":{"gitId":"Piyotato"},"content":"        // student not edited if already marked","lastModifiedDate":"2022-11-06"},{"lineNumber":137,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":138,"author":{"gitId":"Piyotato"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2022-11-06"},{"lineNumber":139,"author":{"gitId":"Piyotato"},"content":"        Student studentInFilteredList \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2022-11-06"},{"lineNumber":140,"author":{"gitId":"Piyotato"},"content":"        Assignment assignment \u003d new Assignment(\"A123\", Assignment.Status.RECEIVED);","lastModifiedDate":"2022-11-06"},{"lineNumber":141,"author":{"gitId":"Piyotato"},"content":"        Student studentToMark \u003d new StudentBuilder(studentInFilteredList).addAssignments(assignment).build();","lastModifiedDate":"2022-11-06"},{"lineNumber":142,"author":{"gitId":"Piyotato"},"content":"        model.setStudent(studentInFilteredList, studentToMark);","lastModifiedDate":"2022-11-06"},{"lineNumber":143,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":144,"author":{"gitId":"Piyotato"},"content":"        GradeCommand gradeCommand \u003d new GradeCommand(new SingleIndexGenerator(INDEX_FIRST_STUDENT),","lastModifiedDate":"2022-11-06"},{"lineNumber":145,"author":{"gitId":"Piyotato"},"content":"                new GradeCommand.GradeCommandStudentEditor(assignment));","lastModifiedDate":"2022-11-06"},{"lineNumber":146,"author":{"gitId":"Piyotato"},"content":"        String expectedMessage \u003d String.format(GradeCommand.MESSAGE_GRADE_SINGLE_UNEDITED_ASSIGNMENT,","lastModifiedDate":"2022-11-06"},{"lineNumber":147,"author":{"gitId":"Piyotato"},"content":"                assignment.getAttributeName(),","lastModifiedDate":"2022-11-06"},{"lineNumber":148,"author":{"gitId":"Piyotato"},"content":"                assignment.state,","lastModifiedDate":"2022-11-06"},{"lineNumber":149,"author":{"gitId":"Piyotato"},"content":"                studentToMark.getName());","lastModifiedDate":"2022-11-07"},{"lineNumber":150,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":151,"author":{"gitId":"Piyotato"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getStudMap(), new UserPrefs());","lastModifiedDate":"2022-11-06"},{"lineNumber":152,"author":{"gitId":"Piyotato"},"content":"        showStudentAtIndex(expectedModel, INDEX_FIRST_STUDENT);","lastModifiedDate":"2022-11-06"},{"lineNumber":153,"author":{"gitId":"Piyotato"},"content":"        expectedModel.setStudent(model.getFilteredStudentList().get(0), studentToMark);","lastModifiedDate":"2022-11-06"},{"lineNumber":154,"author":{"gitId":"Piyotato"},"content":"        assertCommandSuccess(gradeCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-11-06"},{"lineNumber":155,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":156,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":157,"author":{"gitId":"Piyotato"},"content":"}","lastModifiedDate":"2022-11-06"}],"authorContributionMap":{"Piyotato":157}},{"path":"src/test/java/seedu/studmap/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.logic.commands;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.Model;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.ModelManager;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"comicalromance"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false, false);","lastModifiedDate":"2022-10-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"-":14,"comicalromance":6}},{"path":"src/test/java/seedu/studmap/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.logic.commands;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.showStudentAtIndex;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.testutil.TypicalStudents.getTypicalStudMap;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.Model;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.ModelManager;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.UserPrefs;","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"comicalromance"},"content":"        model \u003d new ModelManager(getTypicalStudMap(), new UserPrefs());","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"comicalromance"},"content":"        expectedModel \u003d new ModelManager(model.getStudMap(), new UserPrefs());","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"comicalromance"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2022-10-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"-":28,"comicalromance":11}},{"path":"src/test/java/seedu/studmap/logic/commands/MarkCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.logic.commands;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.showStudentAtIndex;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.testutil.TypicalStudents.getTypicalStudMap;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"comicalromance"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.commons.core.Messages;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"Piyotato"},"content":"import seedu.studmap.commons.core.index.AllIndexGenerator;","lastModifiedDate":"2022-11-07"},{"lineNumber":13,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.commons.core.index.Index;","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"Piyotato"},"content":"import seedu.studmap.commons.core.index.SingleIndexGenerator;","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.Model;","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.ModelManager;","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.UserPrefs;","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.student.Attendance;","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.student.Student;","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.testutil.StudentBuilder;","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"comicalromance"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"comicalromance"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"comicalromance"},"content":" * {@code MarkCommand}.","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"comicalromance"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"comicalromance"},"content":"class MarkCommandTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"comicalromance"},"content":"    private Model model \u003d new ModelManager(getTypicalStudMap(), new UserPrefs());","lastModifiedDate":"2022-10-15"},{"lineNumber":30,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"comicalromance"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"comicalromance"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"comicalromance"},"content":"        Student studentToMark \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2022-10-15"},{"lineNumber":34,"author":{"gitId":"Piyotato"},"content":"        Attendance attendance \u003d new Attendance(\"T04\", Attendance.Status.PRESENT);","lastModifiedDate":"2022-11-06"},{"lineNumber":35,"author":{"gitId":"Piyotato"},"content":"        MarkCommand markCommand \u003d new MarkCommand(new SingleIndexGenerator(INDEX_FIRST_STUDENT),","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"Piyotato"},"content":"                new MarkCommand.MarkCommandStudentEditor(attendance));","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"comicalromance"},"content":"        Student markedStudent \u003d new StudentBuilder(studentToMark).addAttended(\"T04\").build();","lastModifiedDate":"2022-10-15"},{"lineNumber":39,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"comicalromance"},"content":"        String expectedMessage \u003d String.format(MarkCommand.MESSAGE_MARK_SINGLE_SUCCESS_ATTENDANCE,","lastModifiedDate":"2022-10-27"},{"lineNumber":41,"author":{"gitId":"Piyotato"},"content":"                attendance.getString(), markedStudent);","lastModifiedDate":"2022-11-06"},{"lineNumber":42,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"comicalromance"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getStudMap(), new UserPrefs());","lastModifiedDate":"2022-10-15"},{"lineNumber":44,"author":{"gitId":"comicalromance"},"content":"        expectedModel.setStudent(model.getFilteredStudentList().get(0), markedStudent);","lastModifiedDate":"2022-10-15"},{"lineNumber":45,"author":{"gitId":"comicalromance"},"content":"        assertCommandSuccess(markCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"comicalromance"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"comicalromance"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"comicalromance"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2022-10-15"},{"lineNumber":51,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"comicalromance"},"content":"        Student studentInFilteredList \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2022-10-15"},{"lineNumber":53,"author":{"gitId":"Piyotato"},"content":"        Attendance attendance \u003d new Attendance(\"T04\", Attendance.Status.PRESENT);","lastModifiedDate":"2022-11-06"},{"lineNumber":54,"author":{"gitId":"Piyotato"},"content":"        MarkCommand markCommand \u003d new MarkCommand(new SingleIndexGenerator(INDEX_FIRST_STUDENT),","lastModifiedDate":"2022-10-20"},{"lineNumber":55,"author":{"gitId":"Piyotato"},"content":"                new MarkCommand.MarkCommandStudentEditor(attendance));","lastModifiedDate":"2022-10-20"},{"lineNumber":56,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"comicalromance"},"content":"        Student markedStudent \u003d new StudentBuilder(studentInFilteredList).addAttended(\"T04\").build();","lastModifiedDate":"2022-10-15"},{"lineNumber":58,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"comicalromance"},"content":"        String expectedMessage \u003d String.format(MarkCommand.MESSAGE_MARK_SINGLE_SUCCESS_ATTENDANCE,","lastModifiedDate":"2022-10-27"},{"lineNumber":60,"author":{"gitId":"Piyotato"},"content":"                attendance.getString(), markedStudent);","lastModifiedDate":"2022-11-06"},{"lineNumber":61,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"comicalromance"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getStudMap(), new UserPrefs());","lastModifiedDate":"2022-10-15"},{"lineNumber":63,"author":{"gitId":"comicalromance"},"content":"        showStudentAtIndex(expectedModel, INDEX_FIRST_STUDENT);","lastModifiedDate":"2022-11-03"},{"lineNumber":64,"author":{"gitId":"comicalromance"},"content":"        expectedModel.setStudent(model.getFilteredStudentList().get(0), markedStudent);","lastModifiedDate":"2022-10-15"},{"lineNumber":65,"author":{"gitId":"comicalromance"},"content":"        assertCommandSuccess(markCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"comicalromance"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"comicalromance"},"content":"    public void execute_invalidstudentIndexUnfilteredList_failure() {","lastModifiedDate":"2022-10-15"},{"lineNumber":70,"author":{"gitId":"comicalromance"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredStudentList().size() + 1);","lastModifiedDate":"2022-10-15"},{"lineNumber":71,"author":{"gitId":"Piyotato"},"content":"        Attendance attendance \u003d new Attendance(\"T04\", Attendance.Status.PRESENT);","lastModifiedDate":"2022-11-06"},{"lineNumber":72,"author":{"gitId":"Piyotato"},"content":"        MarkCommand markCommand \u003d new MarkCommand(new SingleIndexGenerator(outOfBoundIndex),","lastModifiedDate":"2022-10-20"},{"lineNumber":73,"author":{"gitId":"Piyotato"},"content":"                new MarkCommand.MarkCommandStudentEditor(attendance));","lastModifiedDate":"2022-10-20"},{"lineNumber":74,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"comicalromance"},"content":"        assertCommandFailure(markCommand, model, Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-15"},{"lineNumber":76,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":78,"author":{"gitId":"Piyotato"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":79,"author":{"gitId":"Piyotato"},"content":"    public void execute_presentNoEdit_success() {","lastModifiedDate":"2022-11-06"},{"lineNumber":80,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":81,"author":{"gitId":"Piyotato"},"content":"        // student not edited if already marked","lastModifiedDate":"2022-11-06"},{"lineNumber":82,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":83,"author":{"gitId":"Piyotato"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2022-11-06"},{"lineNumber":84,"author":{"gitId":"Piyotato"},"content":"        Student studentInFilteredList \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2022-11-06"},{"lineNumber":85,"author":{"gitId":"Piyotato"},"content":"        Attendance attendance \u003d new Attendance(\"T62\", Attendance.Status.PRESENT);","lastModifiedDate":"2022-11-06"},{"lineNumber":86,"author":{"gitId":"Piyotato"},"content":"        Student studentToMark \u003d new StudentBuilder(studentInFilteredList).addAttendances(attendance).build();","lastModifiedDate":"2022-11-06"},{"lineNumber":87,"author":{"gitId":"Piyotato"},"content":"        model.setStudent(studentInFilteredList, studentToMark);","lastModifiedDate":"2022-11-06"},{"lineNumber":88,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":89,"author":{"gitId":"Piyotato"},"content":"        MarkCommand markCommand \u003d new MarkCommand(new SingleIndexGenerator(INDEX_FIRST_STUDENT),","lastModifiedDate":"2022-11-06"},{"lineNumber":90,"author":{"gitId":"Piyotato"},"content":"                new MarkCommand.MarkCommandStudentEditor(attendance));","lastModifiedDate":"2022-11-06"},{"lineNumber":91,"author":{"gitId":"Piyotato"},"content":"        String expectedMessage \u003d String.format(MarkCommand.MESSAGE_MARK_SINGLE_UNEDITED_ATTENDANCE,","lastModifiedDate":"2022-11-06"},{"lineNumber":92,"author":{"gitId":"Piyotato"},"content":"                attendance.getString(), studentToMark);","lastModifiedDate":"2022-11-06"},{"lineNumber":93,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":94,"author":{"gitId":"Piyotato"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getStudMap(), new UserPrefs());","lastModifiedDate":"2022-11-06"},{"lineNumber":95,"author":{"gitId":"Piyotato"},"content":"        showStudentAtIndex(expectedModel, INDEX_FIRST_STUDENT);","lastModifiedDate":"2022-11-06"},{"lineNumber":96,"author":{"gitId":"Piyotato"},"content":"        expectedModel.setStudent(model.getFilteredStudentList().get(0), studentToMark);","lastModifiedDate":"2022-11-06"},{"lineNumber":97,"author":{"gitId":"Piyotato"},"content":"        assertCommandSuccess(markCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-11-06"},{"lineNumber":98,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":99,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":100,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":101,"author":{"gitId":"Piyotato"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":102,"author":{"gitId":"Piyotato"},"content":"    public void execute_absentNoEdit_success() {","lastModifiedDate":"2022-11-06"},{"lineNumber":103,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":104,"author":{"gitId":"Piyotato"},"content":"        // student not edited if already marked","lastModifiedDate":"2022-11-06"},{"lineNumber":105,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":106,"author":{"gitId":"Piyotato"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2022-11-06"},{"lineNumber":107,"author":{"gitId":"Piyotato"},"content":"        Student studentInFilteredList \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2022-11-06"},{"lineNumber":108,"author":{"gitId":"Piyotato"},"content":"        Attendance attendance \u003d new Attendance(\"T62\", Attendance.Status.ABSENT);","lastModifiedDate":"2022-11-06"},{"lineNumber":109,"author":{"gitId":"Piyotato"},"content":"        Student studentToMark \u003d new StudentBuilder(studentInFilteredList).addAttendances(attendance).build();","lastModifiedDate":"2022-11-06"},{"lineNumber":110,"author":{"gitId":"Piyotato"},"content":"        model.setStudent(studentInFilteredList, studentToMark);","lastModifiedDate":"2022-11-06"},{"lineNumber":111,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":112,"author":{"gitId":"Piyotato"},"content":"        MarkCommand markCommand \u003d new MarkCommand(new SingleIndexGenerator(INDEX_FIRST_STUDENT),","lastModifiedDate":"2022-11-06"},{"lineNumber":113,"author":{"gitId":"Piyotato"},"content":"                new MarkCommand.MarkCommandStudentEditor(attendance));","lastModifiedDate":"2022-11-06"},{"lineNumber":114,"author":{"gitId":"Piyotato"},"content":"        String expectedMessage \u003d String.format(MarkCommand.MESSAGE_MARK_SINGLE_UNEDITED_ATTENDANCE,","lastModifiedDate":"2022-11-06"},{"lineNumber":115,"author":{"gitId":"Piyotato"},"content":"                attendance.getString(), studentToMark);","lastModifiedDate":"2022-11-06"},{"lineNumber":116,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":117,"author":{"gitId":"Piyotato"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getStudMap(), new UserPrefs());","lastModifiedDate":"2022-11-06"},{"lineNumber":118,"author":{"gitId":"Piyotato"},"content":"        showStudentAtIndex(expectedModel, INDEX_FIRST_STUDENT);","lastModifiedDate":"2022-11-06"},{"lineNumber":119,"author":{"gitId":"Piyotato"},"content":"        expectedModel.setStudent(model.getFilteredStudentList().get(0), studentToMark);","lastModifiedDate":"2022-11-06"},{"lineNumber":120,"author":{"gitId":"Piyotato"},"content":"        assertCommandSuccess(markCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-11-06"},{"lineNumber":121,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":122,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":123,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":124,"author":{"gitId":"Piyotato"},"content":"    @Test","lastModifiedDate":"2022-11-07"},{"lineNumber":125,"author":{"gitId":"Piyotato"},"content":"    public void execute_absentNoEditMulti_success() {","lastModifiedDate":"2022-11-07"},{"lineNumber":126,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":127,"author":{"gitId":"Piyotato"},"content":"        // students not edited if already marked","lastModifiedDate":"2022-11-07"},{"lineNumber":128,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":129,"author":{"gitId":"Piyotato"},"content":"        Attendance attendance \u003d new Attendance(\"T62\", Attendance.Status.ABSENT);","lastModifiedDate":"2022-11-07"},{"lineNumber":130,"author":{"gitId":"Piyotato"},"content":"        model.getFilteredStudentList().forEach(x -\u003e model.setStudent(x,","lastModifiedDate":"2022-11-07"},{"lineNumber":131,"author":{"gitId":"Piyotato"},"content":"                new StudentBuilder(x).addAttendances(attendance).build()));","lastModifiedDate":"2022-11-07"},{"lineNumber":132,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":133,"author":{"gitId":"Piyotato"},"content":"        MarkCommand markCommand \u003d new MarkCommand(new AllIndexGenerator(),","lastModifiedDate":"2022-11-07"},{"lineNumber":134,"author":{"gitId":"Piyotato"},"content":"                new MarkCommand.MarkCommandStudentEditor(attendance));","lastModifiedDate":"2022-11-07"},{"lineNumber":135,"author":{"gitId":"Piyotato"},"content":"        String expectedMessage \u003d String.format(MarkCommand.MESSAGE_MARK_MULTI_UNEDITED_ATTENDANCE,","lastModifiedDate":"2022-11-07"},{"lineNumber":136,"author":{"gitId":"Piyotato"},"content":"                model.getFilteredStudentList().size(), attendance.getString()).trim();","lastModifiedDate":"2022-11-07"},{"lineNumber":137,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":138,"author":{"gitId":"Piyotato"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getStudMap(), new UserPrefs());","lastModifiedDate":"2022-11-07"},{"lineNumber":139,"author":{"gitId":"Piyotato"},"content":"        assertCommandSuccess(markCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-11-07"},{"lineNumber":140,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":141,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-11-07"},{"lineNumber":142,"author":{"gitId":"comicalromance"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"Piyotato":78,"comicalromance":64}},{"path":"src/test/java/seedu/studmap/logic/commands/ParticipateCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"highorbit25"},"content":"package seedu.studmap.logic.commands;","lastModifiedDate":"2022-10-28"},{"lineNumber":2,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":3,"author":{"gitId":"highorbit25"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-28"},{"lineNumber":4,"author":{"gitId":"highorbit25"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-28"},{"lineNumber":5,"author":{"gitId":"highorbit25"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.showStudentAtIndex;","lastModifiedDate":"2022-10-28"},{"lineNumber":6,"author":{"gitId":"highorbit25"},"content":"import static seedu.studmap.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"highorbit25"},"content":"import static seedu.studmap.testutil.TypicalStudents.getTypicalStudMap;","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"highorbit25"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-28"},{"lineNumber":10,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":11,"author":{"gitId":"highorbit25"},"content":"import seedu.studmap.commons.core.Messages;","lastModifiedDate":"2022-10-28"},{"lineNumber":12,"author":{"gitId":"highorbit25"},"content":"import seedu.studmap.commons.core.index.Index;","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"highorbit25"},"content":"import seedu.studmap.commons.core.index.SingleIndexGenerator;","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"highorbit25"},"content":"import seedu.studmap.model.Model;","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"highorbit25"},"content":"import seedu.studmap.model.ModelManager;","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"highorbit25"},"content":"import seedu.studmap.model.UserPrefs;","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"highorbit25"},"content":"import seedu.studmap.model.student.Participation;","lastModifiedDate":"2022-10-28"},{"lineNumber":18,"author":{"gitId":"highorbit25"},"content":"import seedu.studmap.model.student.Student;","lastModifiedDate":"2022-10-28"},{"lineNumber":19,"author":{"gitId":"highorbit25"},"content":"import seedu.studmap.testutil.StudentBuilder;","lastModifiedDate":"2022-10-28"},{"lineNumber":20,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":22,"author":{"gitId":"highorbit25"},"content":"/**","lastModifiedDate":"2022-10-28"},{"lineNumber":23,"author":{"gitId":"highorbit25"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2022-10-28"},{"lineNumber":24,"author":{"gitId":"highorbit25"},"content":" * {@code ParticipateCommand}.","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"highorbit25"},"content":" */","lastModifiedDate":"2022-10-28"},{"lineNumber":26,"author":{"gitId":"highorbit25"},"content":"class ParticipateCommandTest {","lastModifiedDate":"2022-10-28"},{"lineNumber":27,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":28,"author":{"gitId":"highorbit25"},"content":"    private Model model \u003d new ModelManager(getTypicalStudMap(), new UserPrefs());","lastModifiedDate":"2022-10-28"},{"lineNumber":29,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":30,"author":{"gitId":"highorbit25"},"content":"    @Test","lastModifiedDate":"2022-10-28"},{"lineNumber":31,"author":{"gitId":"highorbit25"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2022-10-28"},{"lineNumber":32,"author":{"gitId":"highorbit25"},"content":"        Student studentToMark \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2022-10-28"},{"lineNumber":33,"author":{"gitId":"Piyotato"},"content":"        Participation participation \u003d new Participation(\"P04\", Participation.Status.PARTICIPATED);","lastModifiedDate":"2022-11-06"},{"lineNumber":34,"author":{"gitId":"highorbit25"},"content":"        ParticipateCommand participateCommand \u003d new ParticipateCommand(new SingleIndexGenerator(INDEX_FIRST_STUDENT),","lastModifiedDate":"2022-10-28"},{"lineNumber":35,"author":{"gitId":"highorbit25"},"content":"                new ParticipateCommand.ParticipateCommandStudentEditor(participation));","lastModifiedDate":"2022-10-28"},{"lineNumber":36,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":37,"author":{"gitId":"Piyotato"},"content":"        Student markedStudent \u003d new StudentBuilder(studentToMark).addParticipations(\"P04\").build();","lastModifiedDate":"2022-11-06"},{"lineNumber":38,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":39,"author":{"gitId":"highorbit25"},"content":"        String expectedMessage \u003d String.format(ParticipateCommand.MESSAGE_MARK_SINGLE_SUCCESS_PARTICIPATION,","lastModifiedDate":"2022-10-28"},{"lineNumber":40,"author":{"gitId":"Piyotato"},"content":"                participation.getString(), markedStudent);","lastModifiedDate":"2022-11-06"},{"lineNumber":41,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":42,"author":{"gitId":"highorbit25"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getStudMap(), new UserPrefs());","lastModifiedDate":"2022-10-28"},{"lineNumber":43,"author":{"gitId":"highorbit25"},"content":"        expectedModel.setStudent(model.getFilteredStudentList().get(0), markedStudent);","lastModifiedDate":"2022-10-28"},{"lineNumber":44,"author":{"gitId":"highorbit25"},"content":"        assertCommandSuccess(participateCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-28"},{"lineNumber":45,"author":{"gitId":"highorbit25"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":46,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":47,"author":{"gitId":"highorbit25"},"content":"    @Test","lastModifiedDate":"2022-10-28"},{"lineNumber":48,"author":{"gitId":"highorbit25"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2022-10-28"},{"lineNumber":49,"author":{"gitId":"highorbit25"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2022-10-28"},{"lineNumber":50,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":51,"author":{"gitId":"highorbit25"},"content":"        Student studentInFilteredList \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2022-10-28"},{"lineNumber":52,"author":{"gitId":"Piyotato"},"content":"        Participation participation \u003d new Participation(\"P04\", Participation.Status.PARTICIPATED);","lastModifiedDate":"2022-11-06"},{"lineNumber":53,"author":{"gitId":"highorbit25"},"content":"        ParticipateCommand participateCommand \u003d new ParticipateCommand(new SingleIndexGenerator(INDEX_FIRST_STUDENT),","lastModifiedDate":"2022-10-28"},{"lineNumber":54,"author":{"gitId":"highorbit25"},"content":"                new ParticipateCommand.ParticipateCommandStudentEditor(participation));","lastModifiedDate":"2022-10-28"},{"lineNumber":55,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":56,"author":{"gitId":"Piyotato"},"content":"        Student markedStudent \u003d new StudentBuilder(studentInFilteredList).addParticipations(\"P04\").build();","lastModifiedDate":"2022-11-06"},{"lineNumber":57,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":58,"author":{"gitId":"highorbit25"},"content":"        String expectedMessage \u003d String.format(ParticipateCommand.MESSAGE_MARK_SINGLE_SUCCESS_PARTICIPATION,","lastModifiedDate":"2022-10-28"},{"lineNumber":59,"author":{"gitId":"Piyotato"},"content":"                participation.getString(), markedStudent);","lastModifiedDate":"2022-11-06"},{"lineNumber":60,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":61,"author":{"gitId":"highorbit25"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getStudMap(), new UserPrefs());","lastModifiedDate":"2022-10-28"},{"lineNumber":62,"author":{"gitId":"comicalromance"},"content":"        showStudentAtIndex(expectedModel, INDEX_FIRST_STUDENT);","lastModifiedDate":"2022-11-03"},{"lineNumber":63,"author":{"gitId":"highorbit25"},"content":"        expectedModel.setStudent(model.getFilteredStudentList().get(0), markedStudent);","lastModifiedDate":"2022-10-28"},{"lineNumber":64,"author":{"gitId":"highorbit25"},"content":"        assertCommandSuccess(participateCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-28"},{"lineNumber":65,"author":{"gitId":"highorbit25"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":66,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":67,"author":{"gitId":"highorbit25"},"content":"    @Test","lastModifiedDate":"2022-10-28"},{"lineNumber":68,"author":{"gitId":"highorbit25"},"content":"    public void execute_invalidstudentIndexUnfilteredList_failure() {","lastModifiedDate":"2022-10-28"},{"lineNumber":69,"author":{"gitId":"highorbit25"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredStudentList().size() + 1);","lastModifiedDate":"2022-10-28"},{"lineNumber":70,"author":{"gitId":"Piyotato"},"content":"        Participation participation \u003d new Participation(\"P04\", Participation.Status.PARTICIPATED);","lastModifiedDate":"2022-11-06"},{"lineNumber":71,"author":{"gitId":"highorbit25"},"content":"        ParticipateCommand participateCommand \u003d new ParticipateCommand(new SingleIndexGenerator(outOfBoundIndex),","lastModifiedDate":"2022-10-28"},{"lineNumber":72,"author":{"gitId":"highorbit25"},"content":"                new ParticipateCommand.ParticipateCommandStudentEditor(participation));","lastModifiedDate":"2022-10-28"},{"lineNumber":73,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":74,"author":{"gitId":"highorbit25"},"content":"        assertCommandFailure(participateCommand, model, Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-28"},{"lineNumber":75,"author":{"gitId":"highorbit25"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":76,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":77,"author":{"gitId":"Piyotato"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":78,"author":{"gitId":"Piyotato"},"content":"    public void execute_participatedNoEdit_success() {","lastModifiedDate":"2022-11-06"},{"lineNumber":79,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":80,"author":{"gitId":"Piyotato"},"content":"        // student not edited if already marked","lastModifiedDate":"2022-11-06"},{"lineNumber":81,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":82,"author":{"gitId":"Piyotato"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2022-11-06"},{"lineNumber":83,"author":{"gitId":"Piyotato"},"content":"        Student studentInFilteredList \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2022-11-06"},{"lineNumber":84,"author":{"gitId":"Piyotato"},"content":"        Participation participation \u003d new Participation(\"P0123\", Participation.Status.PARTICIPATED);","lastModifiedDate":"2022-11-06"},{"lineNumber":85,"author":{"gitId":"Piyotato"},"content":"        Student studentToMark \u003d new StudentBuilder(studentInFilteredList).addParticipation(participation).build();","lastModifiedDate":"2022-11-06"},{"lineNumber":86,"author":{"gitId":"Piyotato"},"content":"        model.setStudent(studentInFilteredList, studentToMark);","lastModifiedDate":"2022-11-06"},{"lineNumber":87,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":88,"author":{"gitId":"Piyotato"},"content":"        ParticipateCommand participateCommand \u003d new ParticipateCommand(new SingleIndexGenerator(INDEX_FIRST_STUDENT),","lastModifiedDate":"2022-11-06"},{"lineNumber":89,"author":{"gitId":"Piyotato"},"content":"                new ParticipateCommand.ParticipateCommandStudentEditor(participation));","lastModifiedDate":"2022-11-06"},{"lineNumber":90,"author":{"gitId":"Piyotato"},"content":"        String expectedMessage \u003d String.format(ParticipateCommand.MESSAGE_MARK_SINGLE_UNEDITED_PARTICIPATION,","lastModifiedDate":"2022-11-06"},{"lineNumber":91,"author":{"gitId":"Piyotato"},"content":"                participation.getString(), studentToMark);","lastModifiedDate":"2022-11-06"},{"lineNumber":92,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":93,"author":{"gitId":"Piyotato"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getStudMap(), new UserPrefs());","lastModifiedDate":"2022-11-06"},{"lineNumber":94,"author":{"gitId":"Piyotato"},"content":"        showStudentAtIndex(expectedModel, INDEX_FIRST_STUDENT);","lastModifiedDate":"2022-11-06"},{"lineNumber":95,"author":{"gitId":"Piyotato"},"content":"        expectedModel.setStudent(model.getFilteredStudentList().get(0), studentToMark);","lastModifiedDate":"2022-11-06"},{"lineNumber":96,"author":{"gitId":"Piyotato"},"content":"        assertCommandSuccess(participateCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-11-06"},{"lineNumber":97,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":98,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":99,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":100,"author":{"gitId":"Piyotato"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":101,"author":{"gitId":"Piyotato"},"content":"    public void execute_notParticipatedNoEdit_success() {","lastModifiedDate":"2022-11-06"},{"lineNumber":102,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":103,"author":{"gitId":"Piyotato"},"content":"        // student not edited if already marked","lastModifiedDate":"2022-11-06"},{"lineNumber":104,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":105,"author":{"gitId":"Piyotato"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2022-11-06"},{"lineNumber":106,"author":{"gitId":"Piyotato"},"content":"        Student studentInFilteredList \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2022-11-06"},{"lineNumber":107,"author":{"gitId":"Piyotato"},"content":"        Participation participation \u003d new Participation(\"P0123\", Participation.Status.NOT_PARTICIPATED);","lastModifiedDate":"2022-11-06"},{"lineNumber":108,"author":{"gitId":"Piyotato"},"content":"        Student studentToMark \u003d new StudentBuilder(studentInFilteredList).addParticipation(participation).build();","lastModifiedDate":"2022-11-06"},{"lineNumber":109,"author":{"gitId":"Piyotato"},"content":"        model.setStudent(studentInFilteredList, studentToMark);","lastModifiedDate":"2022-11-06"},{"lineNumber":110,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":111,"author":{"gitId":"Piyotato"},"content":"        ParticipateCommand participateCommand \u003d new ParticipateCommand(new SingleIndexGenerator(INDEX_FIRST_STUDENT),","lastModifiedDate":"2022-11-06"},{"lineNumber":112,"author":{"gitId":"Piyotato"},"content":"                new ParticipateCommand.ParticipateCommandStudentEditor(participation));","lastModifiedDate":"2022-11-06"},{"lineNumber":113,"author":{"gitId":"Piyotato"},"content":"        String expectedMessage \u003d String.format(ParticipateCommand.MESSAGE_MARK_SINGLE_UNEDITED_PARTICIPATION,","lastModifiedDate":"2022-11-06"},{"lineNumber":114,"author":{"gitId":"Piyotato"},"content":"                participation.getString(), studentToMark);","lastModifiedDate":"2022-11-06"},{"lineNumber":115,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":116,"author":{"gitId":"Piyotato"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getStudMap(), new UserPrefs());","lastModifiedDate":"2022-11-06"},{"lineNumber":117,"author":{"gitId":"Piyotato"},"content":"        showStudentAtIndex(expectedModel, INDEX_FIRST_STUDENT);","lastModifiedDate":"2022-11-06"},{"lineNumber":118,"author":{"gitId":"Piyotato"},"content":"        expectedModel.setStudent(model.getFilteredStudentList().get(0), studentToMark);","lastModifiedDate":"2022-11-06"},{"lineNumber":119,"author":{"gitId":"Piyotato"},"content":"        assertCommandSuccess(participateCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-11-06"},{"lineNumber":120,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":121,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":122,"author":{"gitId":"highorbit25"},"content":"}","lastModifiedDate":"2022-10-28"}],"authorContributionMap":{"highorbit25":68,"Piyotato":53,"comicalromance":1}},{"path":"src/test/java/seedu/studmap/logic/commands/SortCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.logic.commands;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":3,"author":{"gitId":"highorbit25"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"highorbit25"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"highorbit25"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.commands.SortCommand.MESSAGE_SORT_SUCCESS;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.testutil.TypicalStudents.ALICE;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.testutil.TypicalStudents.BENSON;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.testutil.TypicalStudents.CARL;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.testutil.TypicalStudents.DANIEL;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.testutil.TypicalStudents.ELLE;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.testutil.TypicalStudents.FIONA;","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.testutil.TypicalStudents.GEORGE;","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.testutil.TypicalStudents.getTypicalStudMap;","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"highorbit25"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"highorbit25"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"highorbit25"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.Model;","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.ModelManager;","lastModifiedDate":"2022-10-15"},{"lineNumber":24,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.UserPrefs;","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.order.Order;","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"highorbit25"},"content":"import seedu.studmap.model.student.Student;","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"highorbit25"},"content":"/**","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"highorbit25"},"content":" * Contains integration tests (interaction with the Model) for {@code SortCommand}.","lastModifiedDate":"2022-10-15"},{"lineNumber":30,"author":{"gitId":"highorbit25"},"content":" */","lastModifiedDate":"2022-10-15"},{"lineNumber":31,"author":{"gitId":"highorbit25"},"content":"public class SortCommandTest {","lastModifiedDate":"2022-10-15"},{"lineNumber":32,"author":{"gitId":"comicalromance"},"content":"    private Model model \u003d new ModelManager(getTypicalStudMap(), new UserPrefs());","lastModifiedDate":"2022-10-15"},{"lineNumber":33,"author":{"gitId":"comicalromance"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalStudMap(), new UserPrefs());","lastModifiedDate":"2022-10-15"},{"lineNumber":34,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":35,"author":{"gitId":"highorbit25"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":36,"author":{"gitId":"highorbit25"},"content":"    public void equals() {","lastModifiedDate":"2022-10-15"},{"lineNumber":37,"author":{"gitId":"highorbit25"},"content":"        SortCommand sortFirstCommand \u003d new SortCommand(Comparator.comparing(Student::getNameString),","lastModifiedDate":"2022-10-21"},{"lineNumber":38,"author":{"gitId":"highorbit25"},"content":"                \"name\",","lastModifiedDate":"2022-10-21"},{"lineNumber":39,"author":{"gitId":"highorbit25"},"content":"                Order.ORDER_ASC);","lastModifiedDate":"2022-10-21"},{"lineNumber":40,"author":{"gitId":"highorbit25"},"content":"        SortCommand sortFirstCommandCopy \u003d new SortCommand(Comparator.comparing(Student::getNameString),","lastModifiedDate":"2022-10-21"},{"lineNumber":41,"author":{"gitId":"highorbit25"},"content":"                \"name\",","lastModifiedDate":"2022-10-21"},{"lineNumber":42,"author":{"gitId":"highorbit25"},"content":"                Order.ORDER_ASC);","lastModifiedDate":"2022-10-21"},{"lineNumber":43,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":44,"author":{"gitId":"highorbit25"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-15"},{"lineNumber":45,"author":{"gitId":"highorbit25"},"content":"        assertTrue(sortFirstCommand.equals(sortFirstCommand));","lastModifiedDate":"2022-10-15"},{"lineNumber":46,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":47,"author":{"gitId":"highorbit25"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-15"},{"lineNumber":48,"author":{"gitId":"highorbit25"},"content":"        assertTrue(sortFirstCommand.equals(sortFirstCommandCopy));","lastModifiedDate":"2022-10-15"},{"lineNumber":49,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":50,"author":{"gitId":"highorbit25"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-15"},{"lineNumber":51,"author":{"gitId":"highorbit25"},"content":"        assertFalse(sortFirstCommand.equals(1));","lastModifiedDate":"2022-10-15"},{"lineNumber":52,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":53,"author":{"gitId":"highorbit25"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-15"},{"lineNumber":54,"author":{"gitId":"highorbit25"},"content":"        assertFalse(sortFirstCommand.equals(null));","lastModifiedDate":"2022-10-15"},{"lineNumber":55,"author":{"gitId":"highorbit25"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":56,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":57,"author":{"gitId":"highorbit25"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":58,"author":{"gitId":"highorbit25"},"content":"    public void execute_nameAscending_success() {","lastModifiedDate":"2022-10-15"},{"lineNumber":59,"author":{"gitId":"highorbit25"},"content":"        String expectedMessage \u003d String.format(MESSAGE_SORT_SUCCESS, \"name\", \"ascending\");","lastModifiedDate":"2022-10-21"},{"lineNumber":60,"author":{"gitId":"highorbit25"},"content":"        SortCommand sortCommand \u003d new SortCommand(Comparator.comparing(Student::getNameString),","lastModifiedDate":"2022-10-21"},{"lineNumber":61,"author":{"gitId":"highorbit25"},"content":"                \"name\",","lastModifiedDate":"2022-10-21"},{"lineNumber":62,"author":{"gitId":"highorbit25"},"content":"                Order.ORDER_ASC);","lastModifiedDate":"2022-10-21"},{"lineNumber":63,"author":{"gitId":"highorbit25"},"content":"        expectedModel.sortFilteredStudentList(Comparator.comparing(Student::getNameString), Order.ORDER_ASC);","lastModifiedDate":"2022-10-21"},{"lineNumber":64,"author":{"gitId":"highorbit25"},"content":"        assertCommandSuccess(sortCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-15"},{"lineNumber":65,"author":{"gitId":"highorbit25"},"content":"        assertEquals(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE),","lastModifiedDate":"2022-10-15"},{"lineNumber":66,"author":{"gitId":"comicalromance"},"content":"                model.getFilteredStudentList());","lastModifiedDate":"2022-10-15"},{"lineNumber":67,"author":{"gitId":"highorbit25"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":68,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":69,"author":{"gitId":"highorbit25"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":70,"author":{"gitId":"highorbit25"},"content":"    public void execute_nameDescending_success() {","lastModifiedDate":"2022-10-15"},{"lineNumber":71,"author":{"gitId":"highorbit25"},"content":"        String expectedMessage \u003d String.format(MESSAGE_SORT_SUCCESS, \"name\", \"descending\");","lastModifiedDate":"2022-10-21"},{"lineNumber":72,"author":{"gitId":"highorbit25"},"content":"        SortCommand sortCommand \u003d new SortCommand(Comparator.comparing(Student::getNameString),","lastModifiedDate":"2022-10-21"},{"lineNumber":73,"author":{"gitId":"highorbit25"},"content":"                \"name\",","lastModifiedDate":"2022-10-21"},{"lineNumber":74,"author":{"gitId":"highorbit25"},"content":"                Order.ORDER_DSC);","lastModifiedDate":"2022-10-21"},{"lineNumber":75,"author":{"gitId":"highorbit25"},"content":"        expectedModel.sortFilteredStudentList(Comparator.comparing(Student::getNameString), Order.ORDER_DSC);","lastModifiedDate":"2022-10-21"},{"lineNumber":76,"author":{"gitId":"highorbit25"},"content":"        assertCommandSuccess(sortCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-15"},{"lineNumber":77,"author":{"gitId":"highorbit25"},"content":"        assertEquals(Arrays.asList(GEORGE, FIONA, ELLE, DANIEL, CARL, BENSON, ALICE),","lastModifiedDate":"2022-10-15"},{"lineNumber":78,"author":{"gitId":"comicalromance"},"content":"                model.getFilteredStudentList());","lastModifiedDate":"2022-10-15"},{"lineNumber":79,"author":{"gitId":"highorbit25"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":80,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":81,"author":{"gitId":"highorbit25"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":82,"author":{"gitId":"highorbit25"},"content":"    public void execute_phoneAscending_success() {","lastModifiedDate":"2022-10-15"},{"lineNumber":83,"author":{"gitId":"highorbit25"},"content":"        String expectedMessage \u003d String.format(MESSAGE_SORT_SUCCESS, \"phone\", \"ascending\");","lastModifiedDate":"2022-10-21"},{"lineNumber":84,"author":{"gitId":"highorbit25"},"content":"        SortCommand sortCommand \u003d new SortCommand(Comparator.comparing(Student::getPhoneString),","lastModifiedDate":"2022-10-21"},{"lineNumber":85,"author":{"gitId":"highorbit25"},"content":"                \"phone\",","lastModifiedDate":"2022-10-21"},{"lineNumber":86,"author":{"gitId":"highorbit25"},"content":"                Order.ORDER_ASC);","lastModifiedDate":"2022-10-21"},{"lineNumber":87,"author":{"gitId":"highorbit25"},"content":"        expectedModel.sortFilteredStudentList(Comparator.comparing(Student::getPhoneString),","lastModifiedDate":"2022-10-21"},{"lineNumber":88,"author":{"gitId":"highorbit25"},"content":"                Order.ORDER_ASC);","lastModifiedDate":"2022-10-21"},{"lineNumber":89,"author":{"gitId":"highorbit25"},"content":"        assertCommandSuccess(sortCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-15"},{"lineNumber":90,"author":{"gitId":"highorbit25"},"content":"        assertEquals(Arrays.asList(DANIEL, ALICE, ELLE, FIONA, GEORGE, CARL, BENSON),","lastModifiedDate":"2022-10-15"},{"lineNumber":91,"author":{"gitId":"comicalromance"},"content":"                model.getFilteredStudentList());","lastModifiedDate":"2022-10-15"},{"lineNumber":92,"author":{"gitId":"highorbit25"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":93,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":94,"author":{"gitId":"highorbit25"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":95,"author":{"gitId":"highorbit25"},"content":"    public void execute_phoneDescending_success() {","lastModifiedDate":"2022-10-15"},{"lineNumber":96,"author":{"gitId":"highorbit25"},"content":"        String expectedMessage \u003d String.format(MESSAGE_SORT_SUCCESS, \"phone\", \"descending\");","lastModifiedDate":"2022-10-21"},{"lineNumber":97,"author":{"gitId":"highorbit25"},"content":"        SortCommand sortCommand \u003d new SortCommand(Comparator.comparing(Student::getPhoneString),","lastModifiedDate":"2022-10-21"},{"lineNumber":98,"author":{"gitId":"highorbit25"},"content":"                \"phone\",","lastModifiedDate":"2022-10-21"},{"lineNumber":99,"author":{"gitId":"highorbit25"},"content":"                Order.ORDER_DSC);","lastModifiedDate":"2022-10-21"},{"lineNumber":100,"author":{"gitId":"highorbit25"},"content":"        expectedModel.sortFilteredStudentList(Comparator.comparing(Student::getPhoneString),","lastModifiedDate":"2022-10-21"},{"lineNumber":101,"author":{"gitId":"highorbit25"},"content":"                Order.ORDER_DSC);","lastModifiedDate":"2022-10-21"},{"lineNumber":102,"author":{"gitId":"highorbit25"},"content":"        assertCommandSuccess(sortCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-15"},{"lineNumber":103,"author":{"gitId":"highorbit25"},"content":"        assertEquals(Arrays.asList(BENSON, CARL, GEORGE, FIONA, ELLE, ALICE, DANIEL),","lastModifiedDate":"2022-10-15"},{"lineNumber":104,"author":{"gitId":"comicalromance"},"content":"                model.getFilteredStudentList());","lastModifiedDate":"2022-10-15"},{"lineNumber":105,"author":{"gitId":"highorbit25"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":106,"author":{"gitId":"highorbit25"},"content":"}","lastModifiedDate":"2022-10-15"}],"authorContributionMap":{"highorbit25":85,"comicalromance":21}},{"path":"src/test/java/seedu/studmap/logic/commands/TagCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.logic.commands;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":3,"author":{"gitId":"lpohsien"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-08"},{"lineNumber":4,"author":{"gitId":"lpohsien"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-08"},{"lineNumber":5,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.VALID_TAG_STUDENT;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.showStudentAtIndex;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.testutil.TypicalIndexes.INDEX_SECOND_STUDENT;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.testutil.TypicalStudents.getTypicalStudMap;","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":15,"author":{"gitId":"lpohsien"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-08"},{"lineNumber":16,"author":{"gitId":"lpohsien"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-08"},{"lineNumber":17,"author":{"gitId":"lpohsien"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-08"},{"lineNumber":18,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":19,"author":{"gitId":"lpohsien"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-08"},{"lineNumber":20,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":21,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.commons.core.Messages;","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"Piyotato"},"content":"import seedu.studmap.commons.core.index.AllIndexGenerator;","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.commons.core.index.Index;","lastModifiedDate":"2022-10-15"},{"lineNumber":24,"author":{"gitId":"Piyotato"},"content":"import seedu.studmap.commons.core.index.SingleIndexGenerator;","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"lpohsien"},"content":"import seedu.studmap.commons.util.CollectionUtil;","lastModifiedDate":"2022-10-24"},{"lineNumber":26,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.Model;","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.ModelManager;","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.StudMap;","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.UserPrefs;","lastModifiedDate":"2022-10-15"},{"lineNumber":30,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.student.Student;","lastModifiedDate":"2022-10-15"},{"lineNumber":31,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.tag.Tag;","lastModifiedDate":"2022-10-15"},{"lineNumber":32,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.testutil.StudentBuilder;","lastModifiedDate":"2022-10-15"},{"lineNumber":33,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":34,"author":{"gitId":"lpohsien"},"content":"/**","lastModifiedDate":"2022-10-08"},{"lineNumber":35,"author":{"gitId":"lpohsien"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2022-10-08"},{"lineNumber":36,"author":{"gitId":"lpohsien"},"content":" * EditCommand.","lastModifiedDate":"2022-10-08"},{"lineNumber":37,"author":{"gitId":"lpohsien"},"content":" */","lastModifiedDate":"2022-10-08"},{"lineNumber":38,"author":{"gitId":"lpohsien"},"content":"public class TagCommandTest {","lastModifiedDate":"2022-10-28"},{"lineNumber":39,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":40,"author":{"gitId":"comicalromance"},"content":"    private Model model \u003d new ModelManager(getTypicalStudMap(), new UserPrefs());","lastModifiedDate":"2022-10-15"},{"lineNumber":41,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"lpohsien"},"content":"    private Set\u003cTag\u003e singleTagSet \u003d Stream.of(VALID_TAG_FRIEND).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2022-10-08"},{"lineNumber":43,"author":{"gitId":"lpohsien"},"content":"    private TagCommand.TagCommandStudentEditor singleTagAdder \u003d","lastModifiedDate":"2022-10-28"},{"lineNumber":44,"author":{"gitId":"lpohsien"},"content":"            new TagCommand.TagCommandStudentEditor(singleTagSet);","lastModifiedDate":"2022-10-28"},{"lineNumber":45,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":46,"author":{"gitId":"Piyotato"},"content":"    private Set\u003cTag\u003e multiTagSet \u003d","lastModifiedDate":"2022-10-20"},{"lineNumber":47,"author":{"gitId":"Piyotato"},"content":"            Stream.of(VALID_TAG_FRIEND, VALID_TAG_STUDENT).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2022-10-20"},{"lineNumber":48,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":49,"author":{"gitId":"lpohsien"},"content":"    private TagCommand.TagCommandStudentEditor multiTagAdder \u003d","lastModifiedDate":"2022-10-28"},{"lineNumber":50,"author":{"gitId":"lpohsien"},"content":"            new TagCommand.TagCommandStudentEditor(multiTagSet);","lastModifiedDate":"2022-10-28"},{"lineNumber":51,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":52,"author":{"gitId":"Piyotato"},"content":"    private Set\u003cTag\u003e multiTagSetReversed \u003d","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"Piyotato"},"content":"            Stream.of(VALID_TAG_STUDENT, VALID_TAG_FRIEND).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2022-10-20"},{"lineNumber":54,"author":{"gitId":"lpohsien"},"content":"    private TagCommand.TagCommandStudentEditor multiTagAdderReversed \u003d","lastModifiedDate":"2022-10-28"},{"lineNumber":55,"author":{"gitId":"lpohsien"},"content":"            new TagCommand.TagCommandStudentEditor(multiTagSetReversed);","lastModifiedDate":"2022-10-28"},{"lineNumber":56,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":57,"author":{"gitId":"Piyotato"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-10-20"},{"lineNumber":58,"author":{"gitId":"lpohsien"},"content":"        TagCommandTest test \u003d new TagCommandTest();","lastModifiedDate":"2022-10-28"},{"lineNumber":59,"author":{"gitId":"Piyotato"},"content":"        test.execute_invalidstudentIndexFilteredList_failure();","lastModifiedDate":"2022-10-20"},{"lineNumber":60,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":61,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":62,"author":{"gitId":"lpohsien"},"content":"    @Test","lastModifiedDate":"2022-10-08"},{"lineNumber":63,"author":{"gitId":"lpohsien"},"content":"    public void execute_addSingleTagUnfilteredList_success() {","lastModifiedDate":"2022-10-08"},{"lineNumber":64,"author":{"gitId":"comicalromance"},"content":"        Index indexLaststudent \u003d Index.fromOneBased(model.getFilteredStudentList().size());","lastModifiedDate":"2022-10-15"},{"lineNumber":65,"author":{"gitId":"comicalromance"},"content":"        Student lastStudent \u003d model.getFilteredStudentList().get(indexLaststudent.getZeroBased());","lastModifiedDate":"2022-10-15"},{"lineNumber":66,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":67,"author":{"gitId":"comicalromance"},"content":"        StudentBuilder studentInList \u003d new StudentBuilder(lastStudent);","lastModifiedDate":"2022-10-15"},{"lineNumber":68,"author":{"gitId":"comicalromance"},"content":"        Student editedStudentBase \u003d studentInList.withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-10-15"},{"lineNumber":69,"author":{"gitId":"comicalromance"},"content":"        Student editedStudentExpected \u003d studentInList.withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-15"},{"lineNumber":70,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":71,"author":{"gitId":"comicalromance"},"content":"        Model baseModel \u003d new ModelManager(new StudMap(model.getStudMap()), new UserPrefs());","lastModifiedDate":"2022-10-15"},{"lineNumber":72,"author":{"gitId":"comicalromance"},"content":"        baseModel.setStudent(lastStudent, editedStudentBase);","lastModifiedDate":"2022-10-15"},{"lineNumber":73,"author":{"gitId":"lpohsien"},"content":"        TagCommand tagCommand \u003d new TagCommand(new SingleIndexGenerator(indexLaststudent),","lastModifiedDate":"2022-10-28"},{"lineNumber":74,"author":{"gitId":"Piyotato"},"content":"                singleTagAdder);","lastModifiedDate":"2022-10-20"},{"lineNumber":75,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":76,"author":{"gitId":"comicalromance"},"content":"        Model expectedModel \u003d new ModelManager(new StudMap(model.getStudMap()), new UserPrefs());","lastModifiedDate":"2022-10-15"},{"lineNumber":77,"author":{"gitId":"comicalromance"},"content":"        expectedModel.setStudent(lastStudent, editedStudentExpected);","lastModifiedDate":"2022-10-15"},{"lineNumber":78,"author":{"gitId":"lpohsien"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2022-10-08"},{"lineNumber":79,"author":{"gitId":"lpohsien"},"content":"                TagCommand.MESSAGE_SINGLE_ADD_TAGS_SUCCESS,","lastModifiedDate":"2022-10-28"},{"lineNumber":80,"author":{"gitId":"lpohsien"},"content":"                CollectionUtil.collectionToString(singleTagSet),","lastModifiedDate":"2022-10-24"},{"lineNumber":81,"author":{"gitId":"comicalromance"},"content":"                editedStudentBase.getName());","lastModifiedDate":"2022-10-15"},{"lineNumber":82,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":83,"author":{"gitId":"lpohsien"},"content":"        assertCommandSuccess(tagCommand, baseModel, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-28"},{"lineNumber":84,"author":{"gitId":"lpohsien"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":85,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":86,"author":{"gitId":"lpohsien"},"content":"    @Test","lastModifiedDate":"2022-10-08"},{"lineNumber":87,"author":{"gitId":"lpohsien"},"content":"    public void execute_addMultiTagUnfilteredList_success() {","lastModifiedDate":"2022-10-08"},{"lineNumber":88,"author":{"gitId":"comicalromance"},"content":"        Index indexLaststudent \u003d Index.fromOneBased(model.getFilteredStudentList().size());","lastModifiedDate":"2022-10-15"},{"lineNumber":89,"author":{"gitId":"comicalromance"},"content":"        Student lastStudent \u003d model.getFilteredStudentList().get(indexLaststudent.getZeroBased());","lastModifiedDate":"2022-10-15"},{"lineNumber":90,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":91,"author":{"gitId":"comicalromance"},"content":"        StudentBuilder studentInList \u003d new StudentBuilder(lastStudent);","lastModifiedDate":"2022-10-15"},{"lineNumber":92,"author":{"gitId":"comicalromance"},"content":"        Student editedStudentBase \u003d studentInList.withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-10-15"},{"lineNumber":93,"author":{"gitId":"comicalromance"},"content":"        Student editedStudentExpected \u003d studentInList.withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND, VALID_TAG_STUDENT)","lastModifiedDate":"2022-10-15"},{"lineNumber":94,"author":{"gitId":"lpohsien"},"content":"                .build();","lastModifiedDate":"2022-10-08"},{"lineNumber":95,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":96,"author":{"gitId":"comicalromance"},"content":"        Model baseModel \u003d new ModelManager(new StudMap(model.getStudMap()), new UserPrefs());","lastModifiedDate":"2022-10-15"},{"lineNumber":97,"author":{"gitId":"comicalromance"},"content":"        baseModel.setStudent(lastStudent, editedStudentBase);","lastModifiedDate":"2022-10-15"},{"lineNumber":98,"author":{"gitId":"lpohsien"},"content":"        TagCommand tagCommand \u003d new TagCommand(new SingleIndexGenerator(indexLaststudent),","lastModifiedDate":"2022-10-28"},{"lineNumber":99,"author":{"gitId":"Piyotato"},"content":"                multiTagAdder);","lastModifiedDate":"2022-10-20"},{"lineNumber":100,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":101,"author":{"gitId":"comicalromance"},"content":"        Model expectedModel \u003d new ModelManager(new StudMap(model.getStudMap()), new UserPrefs());","lastModifiedDate":"2022-10-15"},{"lineNumber":102,"author":{"gitId":"comicalromance"},"content":"        expectedModel.setStudent(lastStudent, editedStudentExpected);","lastModifiedDate":"2022-10-15"},{"lineNumber":103,"author":{"gitId":"lpohsien"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2022-10-08"},{"lineNumber":104,"author":{"gitId":"lpohsien"},"content":"                TagCommand.MESSAGE_SINGLE_ADD_TAGS_SUCCESS,","lastModifiedDate":"2022-10-28"},{"lineNumber":105,"author":{"gitId":"lpohsien"},"content":"                CollectionUtil.collectionToString(multiTagSet),","lastModifiedDate":"2022-10-24"},{"lineNumber":106,"author":{"gitId":"comicalromance"},"content":"                editedStudentBase.getName());","lastModifiedDate":"2022-10-15"},{"lineNumber":107,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":108,"author":{"gitId":"lpohsien"},"content":"        assertCommandSuccess(tagCommand, baseModel, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-28"},{"lineNumber":109,"author":{"gitId":"lpohsien"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":110,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":111,"author":{"gitId":"lpohsien"},"content":"    @Test","lastModifiedDate":"2022-10-08"},{"lineNumber":112,"author":{"gitId":"lpohsien"},"content":"    public void execute_addSingleTagAllUnfilteredList_success() {","lastModifiedDate":"2022-10-08"},{"lineNumber":113,"author":{"gitId":"comicalromance"},"content":"        StudentBuilder studentInList;","lastModifiedDate":"2022-10-15"},{"lineNumber":114,"author":{"gitId":"comicalromance"},"content":"        Student editedStudentBase;","lastModifiedDate":"2022-10-15"},{"lineNumber":115,"author":{"gitId":"comicalromance"},"content":"        Student editedStudentExpected;","lastModifiedDate":"2022-10-15"},{"lineNumber":116,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":117,"author":{"gitId":"comicalromance"},"content":"        Model baseModel \u003d new ModelManager(new StudMap(model.getStudMap()), new UserPrefs());","lastModifiedDate":"2022-10-15"},{"lineNumber":118,"author":{"gitId":"comicalromance"},"content":"        Model expectedModel \u003d new ModelManager(new StudMap(model.getStudMap()), new UserPrefs());","lastModifiedDate":"2022-10-15"},{"lineNumber":119,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":120,"author":{"gitId":"lpohsien"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2022-10-08"},{"lineNumber":121,"author":{"gitId":"lpohsien"},"content":"                TagCommand.MESSAGE_MULTI_ADD_TAGS_SUCCESS,","lastModifiedDate":"2022-10-28"},{"lineNumber":122,"author":{"gitId":"lpohsien"},"content":"                CollectionUtil.collectionToString(singleTagSet),","lastModifiedDate":"2022-10-24"},{"lineNumber":123,"author":{"gitId":"comicalromance"},"content":"                model.getFilteredStudentList().size());","lastModifiedDate":"2022-10-15"},{"lineNumber":124,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":125,"author":{"gitId":"comicalromance"},"content":"        for (Student student : model.getFilteredStudentList()) {","lastModifiedDate":"2022-10-15"},{"lineNumber":126,"author":{"gitId":"comicalromance"},"content":"            studentInList \u003d new StudentBuilder(student);","lastModifiedDate":"2022-10-15"},{"lineNumber":127,"author":{"gitId":"comicalromance"},"content":"            editedStudentBase \u003d studentInList.withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-10-15"},{"lineNumber":128,"author":{"gitId":"comicalromance"},"content":"            baseModel.setStudent(student, editedStudentBase);","lastModifiedDate":"2022-10-15"},{"lineNumber":129,"author":{"gitId":"comicalromance"},"content":"            editedStudentExpected \u003d studentInList.withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-15"},{"lineNumber":130,"author":{"gitId":"comicalromance"},"content":"            expectedModel.setStudent(student, editedStudentExpected);","lastModifiedDate":"2022-10-15"},{"lineNumber":131,"author":{"gitId":"lpohsien"},"content":"        }","lastModifiedDate":"2022-10-08"},{"lineNumber":132,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":133,"author":{"gitId":"lpohsien"},"content":"        TagCommand tagCommand \u003d new TagCommand(new AllIndexGenerator(), singleTagAdder);","lastModifiedDate":"2022-10-28"},{"lineNumber":134,"author":{"gitId":"lpohsien"},"content":"        assertCommandSuccess(tagCommand, baseModel, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-28"},{"lineNumber":135,"author":{"gitId":"lpohsien"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":136,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":137,"author":{"gitId":"lpohsien"},"content":"    @Test","lastModifiedDate":"2022-10-08"},{"lineNumber":138,"author":{"gitId":"lpohsien"},"content":"    public void execute_addMultiTagAllUnfilteredList_success() {","lastModifiedDate":"2022-10-08"},{"lineNumber":139,"author":{"gitId":"comicalromance"},"content":"        StudentBuilder studentInList;","lastModifiedDate":"2022-10-15"},{"lineNumber":140,"author":{"gitId":"comicalromance"},"content":"        Student editedStudentBase;","lastModifiedDate":"2022-10-15"},{"lineNumber":141,"author":{"gitId":"comicalromance"},"content":"        Student editedStudentExpected;","lastModifiedDate":"2022-10-15"},{"lineNumber":142,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":143,"author":{"gitId":"comicalromance"},"content":"        Model baseModel \u003d new ModelManager(new StudMap(model.getStudMap()), new UserPrefs());","lastModifiedDate":"2022-10-15"},{"lineNumber":144,"author":{"gitId":"comicalromance"},"content":"        Model expectedModel \u003d new ModelManager(new StudMap(model.getStudMap()), new UserPrefs());","lastModifiedDate":"2022-10-15"},{"lineNumber":145,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":146,"author":{"gitId":"lpohsien"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2022-10-08"},{"lineNumber":147,"author":{"gitId":"lpohsien"},"content":"                TagCommand.MESSAGE_MULTI_ADD_TAGS_SUCCESS,","lastModifiedDate":"2022-10-28"},{"lineNumber":148,"author":{"gitId":"lpohsien"},"content":"                CollectionUtil.collectionToString(multiTagSet),","lastModifiedDate":"2022-10-24"},{"lineNumber":149,"author":{"gitId":"comicalromance"},"content":"                model.getFilteredStudentList().size());","lastModifiedDate":"2022-10-15"},{"lineNumber":150,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":151,"author":{"gitId":"comicalromance"},"content":"        for (Student student : model.getFilteredStudentList()) {","lastModifiedDate":"2022-10-15"},{"lineNumber":152,"author":{"gitId":"comicalromance"},"content":"            studentInList \u003d new StudentBuilder(student);","lastModifiedDate":"2022-10-15"},{"lineNumber":153,"author":{"gitId":"comicalromance"},"content":"            editedStudentBase \u003d studentInList.withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-10-15"},{"lineNumber":154,"author":{"gitId":"comicalromance"},"content":"            baseModel.setStudent(student, editedStudentBase);","lastModifiedDate":"2022-10-15"},{"lineNumber":155,"author":{"gitId":"comicalromance"},"content":"            editedStudentExpected \u003d studentInList.withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND, VALID_TAG_STUDENT)","lastModifiedDate":"2022-10-15"},{"lineNumber":156,"author":{"gitId":"lpohsien"},"content":"                    .build();","lastModifiedDate":"2022-10-08"},{"lineNumber":157,"author":{"gitId":"comicalromance"},"content":"            expectedModel.setStudent(student, editedStudentExpected);","lastModifiedDate":"2022-10-15"},{"lineNumber":158,"author":{"gitId":"lpohsien"},"content":"        }","lastModifiedDate":"2022-10-08"},{"lineNumber":159,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":160,"author":{"gitId":"lpohsien"},"content":"        TagCommand tagCommand \u003d new TagCommand(new AllIndexGenerator(), multiTagAdder);","lastModifiedDate":"2022-10-28"},{"lineNumber":161,"author":{"gitId":"lpohsien"},"content":"        assertCommandSuccess(tagCommand, baseModel, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-28"},{"lineNumber":162,"author":{"gitId":"lpohsien"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":163,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":164,"author":{"gitId":"lpohsien"},"content":"    @Test","lastModifiedDate":"2022-10-08"},{"lineNumber":165,"author":{"gitId":"lpohsien"},"content":"    public void execute_addDuplicateTagUnfilteredList_success() {","lastModifiedDate":"2022-10-08"},{"lineNumber":166,"author":{"gitId":"comicalromance"},"content":"        Index indexLaststudent \u003d Index.fromOneBased(model.getFilteredStudentList().size());","lastModifiedDate":"2022-10-15"},{"lineNumber":167,"author":{"gitId":"comicalromance"},"content":"        Student lastStudent \u003d model.getFilteredStudentList().get(indexLaststudent.getZeroBased());","lastModifiedDate":"2022-10-15"},{"lineNumber":168,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":169,"author":{"gitId":"comicalromance"},"content":"        StudentBuilder studentInList \u003d new StudentBuilder(lastStudent);","lastModifiedDate":"2022-10-15"},{"lineNumber":170,"author":{"gitId":"comicalromance"},"content":"        Student editedStudentBase \u003d studentInList.withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-15"},{"lineNumber":171,"author":{"gitId":"comicalromance"},"content":"        Student editedStudentModel \u003d studentInList.withTags(VALID_TAG_FRIEND, VALID_TAG_STUDENT).build();","lastModifiedDate":"2022-10-15"},{"lineNumber":172,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":173,"author":{"gitId":"comicalromance"},"content":"        Model baseModel \u003d new ModelManager(new StudMap(model.getStudMap()), new UserPrefs());","lastModifiedDate":"2022-10-15"},{"lineNumber":174,"author":{"gitId":"comicalromance"},"content":"        baseModel.setStudent(lastStudent, editedStudentBase);","lastModifiedDate":"2022-10-15"},{"lineNumber":175,"author":{"gitId":"lpohsien"},"content":"        TagCommand tagCommand \u003d new TagCommand(new SingleIndexGenerator(indexLaststudent),","lastModifiedDate":"2022-10-28"},{"lineNumber":176,"author":{"gitId":"Piyotato"},"content":"                multiTagAdder);","lastModifiedDate":"2022-10-20"},{"lineNumber":177,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":178,"author":{"gitId":"comicalromance"},"content":"        Model expectedModel \u003d new ModelManager(new StudMap(model.getStudMap()), new UserPrefs());","lastModifiedDate":"2022-10-15"},{"lineNumber":179,"author":{"gitId":"comicalromance"},"content":"        expectedModel.setStudent(lastStudent, editedStudentModel);","lastModifiedDate":"2022-10-15"},{"lineNumber":180,"author":{"gitId":"lpohsien"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2022-10-08"},{"lineNumber":181,"author":{"gitId":"lpohsien"},"content":"                TagCommand.MESSAGE_SINGLE_ADD_TAGS_SUCCESS,","lastModifiedDate":"2022-10-28"},{"lineNumber":182,"author":{"gitId":"lpohsien"},"content":"                CollectionUtil.collectionToString(multiTagSet),","lastModifiedDate":"2022-10-24"},{"lineNumber":183,"author":{"gitId":"comicalromance"},"content":"                editedStudentBase.getName());","lastModifiedDate":"2022-10-15"},{"lineNumber":184,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":185,"author":{"gitId":"lpohsien"},"content":"        assertCommandSuccess(tagCommand, baseModel, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-28"},{"lineNumber":186,"author":{"gitId":"lpohsien"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":187,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":188,"author":{"gitId":"lpohsien"},"content":"    @Test","lastModifiedDate":"2022-10-08"},{"lineNumber":189,"author":{"gitId":"lpohsien"},"content":"    public void execute_addToNewSingleTagUnfilteredList_success() {","lastModifiedDate":"2022-10-08"},{"lineNumber":190,"author":{"gitId":"comicalromance"},"content":"        Index indexLaststudent \u003d Index.fromOneBased(model.getFilteredStudentList().size());","lastModifiedDate":"2022-10-15"},{"lineNumber":191,"author":{"gitId":"comicalromance"},"content":"        Student lastStudent \u003d model.getFilteredStudentList().get(indexLaststudent.getZeroBased());","lastModifiedDate":"2022-10-15"},{"lineNumber":192,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":193,"author":{"gitId":"comicalromance"},"content":"        StudentBuilder studentInList \u003d new StudentBuilder(lastStudent);","lastModifiedDate":"2022-10-15"},{"lineNumber":194,"author":{"gitId":"comicalromance"},"content":"        Student editedStudentBase \u003d studentInList.withTags().build();","lastModifiedDate":"2022-10-15"},{"lineNumber":195,"author":{"gitId":"comicalromance"},"content":"        Student editedStudentModel \u003d studentInList.withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-15"},{"lineNumber":196,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":197,"author":{"gitId":"comicalromance"},"content":"        Model baseModel \u003d new ModelManager(new StudMap(model.getStudMap()), new UserPrefs());","lastModifiedDate":"2022-10-15"},{"lineNumber":198,"author":{"gitId":"comicalromance"},"content":"        baseModel.setStudent(lastStudent, editedStudentBase);","lastModifiedDate":"2022-10-15"},{"lineNumber":199,"author":{"gitId":"lpohsien"},"content":"        TagCommand tagCommand \u003d new TagCommand(new SingleIndexGenerator(indexLaststudent),","lastModifiedDate":"2022-10-28"},{"lineNumber":200,"author":{"gitId":"Piyotato"},"content":"                singleTagAdder);","lastModifiedDate":"2022-10-20"},{"lineNumber":201,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":202,"author":{"gitId":"comicalromance"},"content":"        Model expectedModel \u003d new ModelManager(new StudMap(model.getStudMap()), new UserPrefs());","lastModifiedDate":"2022-10-15"},{"lineNumber":203,"author":{"gitId":"comicalromance"},"content":"        expectedModel.setStudent(lastStudent, editedStudentModel);","lastModifiedDate":"2022-10-15"},{"lineNumber":204,"author":{"gitId":"lpohsien"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2022-10-08"},{"lineNumber":205,"author":{"gitId":"lpohsien"},"content":"                TagCommand.MESSAGE_SINGLE_ADD_TAGS_SUCCESS,","lastModifiedDate":"2022-10-28"},{"lineNumber":206,"author":{"gitId":"lpohsien"},"content":"                CollectionUtil.collectionToString(singleTagSet),","lastModifiedDate":"2022-10-24"},{"lineNumber":207,"author":{"gitId":"comicalromance"},"content":"                editedStudentBase.getName());","lastModifiedDate":"2022-10-15"},{"lineNumber":208,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":209,"author":{"gitId":"lpohsien"},"content":"        assertCommandSuccess(tagCommand, baseModel, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-28"},{"lineNumber":210,"author":{"gitId":"lpohsien"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":211,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":212,"author":{"gitId":"lpohsien"},"content":"    @Test","lastModifiedDate":"2022-10-08"},{"lineNumber":213,"author":{"gitId":"lpohsien"},"content":"    public void execute_addSingleTagAllFilteredList_success() {","lastModifiedDate":"2022-10-08"},{"lineNumber":214,"author":{"gitId":"comicalromance"},"content":"        showStudentAtIndex(model, INDEX_SECOND_STUDENT);","lastModifiedDate":"2022-10-15"},{"lineNumber":215,"author":{"gitId":"comicalromance"},"content":"        StudentBuilder studentInList;","lastModifiedDate":"2022-10-15"},{"lineNumber":216,"author":{"gitId":"comicalromance"},"content":"        Student editedStudentBase;","lastModifiedDate":"2022-10-15"},{"lineNumber":217,"author":{"gitId":"comicalromance"},"content":"        Student editedStudentExpected;","lastModifiedDate":"2022-10-15"},{"lineNumber":218,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":219,"author":{"gitId":"comicalromance"},"content":"        Model baseModel \u003d new ModelManager(new StudMap(model.getStudMap()), new UserPrefs());","lastModifiedDate":"2022-10-15"},{"lineNumber":220,"author":{"gitId":"comicalromance"},"content":"        Model expectedModel \u003d new ModelManager(new StudMap(model.getStudMap()), new UserPrefs());","lastModifiedDate":"2022-10-15"},{"lineNumber":221,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":222,"author":{"gitId":"lpohsien"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2022-10-08"},{"lineNumber":223,"author":{"gitId":"lpohsien"},"content":"                TagCommand.MESSAGE_SINGLE_ADD_TAGS_SUCCESS,","lastModifiedDate":"2022-10-28"},{"lineNumber":224,"author":{"gitId":"lpohsien"},"content":"                CollectionUtil.collectionToString(singleTagSet),","lastModifiedDate":"2022-10-24"},{"lineNumber":225,"author":{"gitId":"Piyotato"},"content":"                model.getFilteredStudentList().get(0).getName());","lastModifiedDate":"2022-10-20"},{"lineNumber":226,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":227,"author":{"gitId":"comicalromance"},"content":"        for (Student student : model.getFilteredStudentList()) {","lastModifiedDate":"2022-10-15"},{"lineNumber":228,"author":{"gitId":"comicalromance"},"content":"            studentInList \u003d new StudentBuilder(student);","lastModifiedDate":"2022-10-15"},{"lineNumber":229,"author":{"gitId":"comicalromance"},"content":"            editedStudentBase \u003d studentInList.withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-10-15"},{"lineNumber":230,"author":{"gitId":"comicalromance"},"content":"            baseModel.setStudent(student, editedStudentBase);","lastModifiedDate":"2022-10-15"},{"lineNumber":231,"author":{"gitId":"comicalromance"},"content":"            editedStudentExpected \u003d studentInList.withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-15"},{"lineNumber":232,"author":{"gitId":"comicalromance"},"content":"            expectedModel.setStudent(student, editedStudentExpected);","lastModifiedDate":"2022-10-15"},{"lineNumber":233,"author":{"gitId":"lpohsien"},"content":"        }","lastModifiedDate":"2022-10-08"},{"lineNumber":234,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":235,"author":{"gitId":"comicalromance"},"content":"        showStudentAtIndex(baseModel, INDEX_SECOND_STUDENT);","lastModifiedDate":"2022-10-15"},{"lineNumber":236,"author":{"gitId":"comicalromance"},"content":"        showStudentAtIndex(expectedModel, INDEX_SECOND_STUDENT);","lastModifiedDate":"2022-11-03"},{"lineNumber":237,"author":{"gitId":"lpohsien"},"content":"        TagCommand tagCommand \u003d new TagCommand(new AllIndexGenerator(), singleTagAdder);","lastModifiedDate":"2022-10-28"},{"lineNumber":238,"author":{"gitId":"lpohsien"},"content":"        assertCommandSuccess(tagCommand, baseModel, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-28"},{"lineNumber":239,"author":{"gitId":"lpohsien"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":240,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":241,"author":{"gitId":"lpohsien"},"content":"    @Test","lastModifiedDate":"2022-10-08"},{"lineNumber":242,"author":{"gitId":"lpohsien"},"content":"    public void execute_addMultiTagFilteredList_success() {","lastModifiedDate":"2022-10-08"},{"lineNumber":243,"author":{"gitId":"comicalromance"},"content":"        showStudentAtIndex(model, INDEX_SECOND_STUDENT);","lastModifiedDate":"2022-10-15"},{"lineNumber":244,"author":{"gitId":"comicalromance"},"content":"        Index indexLaststudent \u003d Index.fromOneBased(model.getFilteredStudentList().size());","lastModifiedDate":"2022-10-15"},{"lineNumber":245,"author":{"gitId":"comicalromance"},"content":"        Student lastStudent \u003d model.getFilteredStudentList().get(indexLaststudent.getZeroBased());","lastModifiedDate":"2022-10-15"},{"lineNumber":246,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":247,"author":{"gitId":"comicalromance"},"content":"        StudentBuilder studentInList \u003d new StudentBuilder(lastStudent);","lastModifiedDate":"2022-10-15"},{"lineNumber":248,"author":{"gitId":"comicalromance"},"content":"        Student editedStudentBase \u003d studentInList.withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-10-15"},{"lineNumber":249,"author":{"gitId":"comicalromance"},"content":"        Student editedStudentExpected \u003d studentInList.withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-15"},{"lineNumber":250,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":251,"author":{"gitId":"comicalromance"},"content":"        Model baseModel \u003d new ModelManager(new StudMap(model.getStudMap()), new UserPrefs());","lastModifiedDate":"2022-10-15"},{"lineNumber":252,"author":{"gitId":"comicalromance"},"content":"        baseModel.setStudent(lastStudent, editedStudentBase);","lastModifiedDate":"2022-10-15"},{"lineNumber":253,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":254,"author":{"gitId":"comicalromance"},"content":"        Model expectedModel \u003d new ModelManager(new StudMap(model.getStudMap()), new UserPrefs());","lastModifiedDate":"2022-10-15"},{"lineNumber":255,"author":{"gitId":"comicalromance"},"content":"        expectedModel.setStudent(lastStudent, editedStudentExpected);","lastModifiedDate":"2022-10-15"},{"lineNumber":256,"author":{"gitId":"lpohsien"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2022-10-08"},{"lineNumber":257,"author":{"gitId":"lpohsien"},"content":"                TagCommand.MESSAGE_SINGLE_ADD_TAGS_SUCCESS,","lastModifiedDate":"2022-10-28"},{"lineNumber":258,"author":{"gitId":"lpohsien"},"content":"                CollectionUtil.collectionToString(singleTagSet),","lastModifiedDate":"2022-10-24"},{"lineNumber":259,"author":{"gitId":"comicalromance"},"content":"                editedStudentBase.getName());","lastModifiedDate":"2022-10-15"},{"lineNumber":260,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":261,"author":{"gitId":"comicalromance"},"content":"        showStudentAtIndex(baseModel, INDEX_SECOND_STUDENT);","lastModifiedDate":"2022-10-15"},{"lineNumber":262,"author":{"gitId":"comicalromance"},"content":"        showStudentAtIndex(expectedModel, INDEX_SECOND_STUDENT);","lastModifiedDate":"2022-11-03"},{"lineNumber":263,"author":{"gitId":"lpohsien"},"content":"        TagCommand tagCommand \u003d new TagCommand(new SingleIndexGenerator(indexLaststudent),","lastModifiedDate":"2022-10-28"},{"lineNumber":264,"author":{"gitId":"Piyotato"},"content":"                singleTagAdder);","lastModifiedDate":"2022-10-20"},{"lineNumber":265,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":266,"author":{"gitId":"lpohsien"},"content":"        assertCommandSuccess(tagCommand, baseModel, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-28"},{"lineNumber":267,"author":{"gitId":"lpohsien"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":268,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":269,"author":{"gitId":"lpohsien"},"content":"    @Test","lastModifiedDate":"2022-10-08"},{"lineNumber":270,"author":{"gitId":"comicalromance"},"content":"    public void execute_invalidstudentIndexUnfilteredList_failure() {","lastModifiedDate":"2022-10-15"},{"lineNumber":271,"author":{"gitId":"comicalromance"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredStudentList().size() + 1);","lastModifiedDate":"2022-10-15"},{"lineNumber":272,"author":{"gitId":"lpohsien"},"content":"        TagCommand tagCommand \u003d new TagCommand(new SingleIndexGenerator(outOfBoundIndex),","lastModifiedDate":"2022-10-28"},{"lineNumber":273,"author":{"gitId":"Piyotato"},"content":"                singleTagAdder);","lastModifiedDate":"2022-10-20"},{"lineNumber":274,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":275,"author":{"gitId":"lpohsien"},"content":"        assertCommandFailure(tagCommand, model, Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-28"},{"lineNumber":276,"author":{"gitId":"lpohsien"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":277,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":278,"author":{"gitId":"lpohsien"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":279,"author":{"gitId":"lpohsien"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2022-10-08"},{"lineNumber":280,"author":{"gitId":"comicalromance"},"content":"     * but smaller than size of student map","lastModifiedDate":"2022-10-15"},{"lineNumber":281,"author":{"gitId":"lpohsien"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":282,"author":{"gitId":"lpohsien"},"content":"    @Test","lastModifiedDate":"2022-10-08"},{"lineNumber":283,"author":{"gitId":"comicalromance"},"content":"    public void execute_invalidstudentIndexFilteredList_failure() {","lastModifiedDate":"2022-10-15"},{"lineNumber":284,"author":{"gitId":"comicalromance"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2022-10-15"},{"lineNumber":285,"author":{"gitId":"comicalromance"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_STUDENT;","lastModifiedDate":"2022-10-15"},{"lineNumber":286,"author":{"gitId":"comicalromance"},"content":"        // ensures that outOfBoundIndex is still in bounds of student map list","lastModifiedDate":"2022-10-15"},{"lineNumber":287,"author":{"gitId":"comicalromance"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getStudMap().getStudentList().size());","lastModifiedDate":"2022-10-15"},{"lineNumber":288,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":289,"author":{"gitId":"lpohsien"},"content":"        TagCommand tagCommand \u003d new TagCommand(new SingleIndexGenerator(outOfBoundIndex),","lastModifiedDate":"2022-10-28"},{"lineNumber":290,"author":{"gitId":"Piyotato"},"content":"                singleTagAdder);","lastModifiedDate":"2022-10-20"},{"lineNumber":291,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":292,"author":{"gitId":"lpohsien"},"content":"        assertCommandFailure(tagCommand, model, Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-28"},{"lineNumber":293,"author":{"gitId":"lpohsien"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":294,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":295,"author":{"gitId":"lpohsien"},"content":"    @Test","lastModifiedDate":"2022-10-08"},{"lineNumber":296,"author":{"gitId":"lpohsien"},"content":"    public void equals() {","lastModifiedDate":"2022-10-08"},{"lineNumber":297,"author":{"gitId":"lpohsien"},"content":"        final TagCommand standardSingleCommand \u003d","lastModifiedDate":"2022-10-28"},{"lineNumber":298,"author":{"gitId":"lpohsien"},"content":"                new TagCommand(new SingleIndexGenerator(INDEX_FIRST_STUDENT), singleTagAdder);","lastModifiedDate":"2022-10-28"},{"lineNumber":299,"author":{"gitId":"lpohsien"},"content":"        final TagCommand standardMultiCommand \u003d","lastModifiedDate":"2022-10-28"},{"lineNumber":300,"author":{"gitId":"lpohsien"},"content":"                new TagCommand(new SingleIndexGenerator(INDEX_FIRST_STUDENT), multiTagAdderReversed);","lastModifiedDate":"2022-10-28"},{"lineNumber":301,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":302,"author":{"gitId":"lpohsien"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-08"},{"lineNumber":303,"author":{"gitId":"lpohsien"},"content":"        TagCommand commandWithSameValues \u003d","lastModifiedDate":"2022-10-28"},{"lineNumber":304,"author":{"gitId":"lpohsien"},"content":"                new TagCommand(new SingleIndexGenerator(INDEX_FIRST_STUDENT), singleTagAdder);","lastModifiedDate":"2022-10-28"},{"lineNumber":305,"author":{"gitId":"lpohsien"},"content":"        assertTrue(standardSingleCommand.equals(commandWithSameValues));","lastModifiedDate":"2022-10-08"},{"lineNumber":306,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":307,"author":{"gitId":"lpohsien"},"content":"        // same values but different order -\u003e returns true","lastModifiedDate":"2022-10-08"},{"lineNumber":308,"author":{"gitId":"lpohsien"},"content":"        TagCommand commandWithSameMultiValues \u003d","lastModifiedDate":"2022-10-28"},{"lineNumber":309,"author":{"gitId":"lpohsien"},"content":"                new TagCommand(new SingleIndexGenerator(INDEX_FIRST_STUDENT), multiTagAdderReversed);","lastModifiedDate":"2022-10-28"},{"lineNumber":310,"author":{"gitId":"lpohsien"},"content":"        assertTrue(standardMultiCommand.equals(commandWithSameMultiValues));","lastModifiedDate":"2022-10-08"},{"lineNumber":311,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":312,"author":{"gitId":"lpohsien"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-08"},{"lineNumber":313,"author":{"gitId":"lpohsien"},"content":"        assertTrue(standardSingleCommand.equals(standardSingleCommand));","lastModifiedDate":"2022-10-08"},{"lineNumber":314,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":315,"author":{"gitId":"lpohsien"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-08"},{"lineNumber":316,"author":{"gitId":"lpohsien"},"content":"        assertFalse(standardSingleCommand.equals(null));","lastModifiedDate":"2022-10-08"},{"lineNumber":317,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":318,"author":{"gitId":"lpohsien"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-08"},{"lineNumber":319,"author":{"gitId":"lpohsien"},"content":"        assertFalse(standardSingleCommand.equals(new ClearCommand()));","lastModifiedDate":"2022-10-08"},{"lineNumber":320,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":321,"author":{"gitId":"lpohsien"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2022-10-08"},{"lineNumber":322,"author":{"gitId":"Piyotato"},"content":"        assertFalse(standardSingleCommand.equals(","lastModifiedDate":"2022-10-20"},{"lineNumber":323,"author":{"gitId":"lpohsien"},"content":"                new TagCommand(new SingleIndexGenerator(INDEX_SECOND_STUDENT), singleTagAdder)));","lastModifiedDate":"2022-10-28"},{"lineNumber":324,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":325,"author":{"gitId":"lpohsien"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2022-10-08"},{"lineNumber":326,"author":{"gitId":"Piyotato"},"content":"        assertFalse(standardSingleCommand.equals(","lastModifiedDate":"2022-10-20"},{"lineNumber":327,"author":{"gitId":"lpohsien"},"content":"                new TagCommand(new SingleIndexGenerator(INDEX_FIRST_STUDENT), multiTagAdder)));","lastModifiedDate":"2022-10-28"},{"lineNumber":328,"author":{"gitId":"lpohsien"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":329,"author":{"gitId":"lpohsien"},"content":"}","lastModifiedDate":"2022-10-08"}],"authorContributionMap":{"Piyotato":24,"comicalromance":121,"lpohsien":184}},{"path":"src/test/java/seedu/studmap/logic/commands/UngradeCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lpohsien"},"content":"package seedu.studmap.logic.commands;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"lpohsien"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"lpohsien"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"lpohsien"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.showStudentAtIndex;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"lpohsien"},"content":"import static seedu.studmap.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"lpohsien"},"content":"import static seedu.studmap.testutil.TypicalIndexes.INDEX_THIRD_STUDENT;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"lpohsien"},"content":"import static seedu.studmap.testutil.TypicalStudents.getTypicalStudMap;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"lpohsien"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"lpohsien"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"lpohsien"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"lpohsien"},"content":"import seedu.studmap.commons.core.Messages;","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"lpohsien"},"content":"import seedu.studmap.commons.core.index.Index;","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"lpohsien"},"content":"import seedu.studmap.commons.core.index.SingleIndexGenerator;","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"lpohsien"},"content":"import seedu.studmap.model.Model;","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"lpohsien"},"content":"import seedu.studmap.model.ModelManager;","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"lpohsien"},"content":"import seedu.studmap.model.UserPrefs;","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"lpohsien"},"content":"import seedu.studmap.model.student.Assignment;","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"lpohsien"},"content":"import seedu.studmap.model.student.Student;","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"lpohsien"},"content":"import seedu.studmap.testutil.StudentBuilder;","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"lpohsien"},"content":"/**","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"lpohsien"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"lpohsien"},"content":" * {@code UngradeCommand}.","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"lpohsien"},"content":" */","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"lpohsien"},"content":"class UngradeCommandTest {","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"lpohsien"},"content":"    private Model model \u003d new ModelManager(getTypicalStudMap(), new UserPrefs());","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"lpohsien"},"content":"    @Test","lastModifiedDate":"2022-10-27"},{"lineNumber":34,"author":{"gitId":"lpohsien"},"content":"    public void execute_validIndexUnfilteredListAssignment_success() {","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"lpohsien"},"content":"        Student studentToUnmark \u003d model.getFilteredStudentList().get(INDEX_THIRD_STUDENT.getZeroBased());","lastModifiedDate":"2022-10-27"},{"lineNumber":36,"author":{"gitId":"lpohsien"},"content":"        Assignment assignment \u003d new Assignment(\"A01\", Assignment.Status.NEW);","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"lpohsien"},"content":"        UngradeCommand ungradeCommand \u003d new UngradeCommand(new SingleIndexGenerator(INDEX_THIRD_STUDENT),","lastModifiedDate":"2022-10-27"},{"lineNumber":38,"author":{"gitId":"lpohsien"},"content":"                new UngradeCommand.UngradeCommandStudentEditor(assignment));","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"lpohsien"},"content":"        Set\u003cAssignment\u003e assignmentSet \u003d new HashSet\u003c\u003e(studentToUnmark.getAssignments());","lastModifiedDate":"2022-10-27"},{"lineNumber":41,"author":{"gitId":"lpohsien"},"content":"        assignmentSet.remove(assignment);","lastModifiedDate":"2022-10-27"},{"lineNumber":42,"author":{"gitId":"lpohsien"},"content":"        Student unmarkedStudent \u003d new StudentBuilder(studentToUnmark).setAssigned(assignmentSet).build();","lastModifiedDate":"2022-10-27"},{"lineNumber":43,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"lpohsien"},"content":"        String expectedMessage \u003d String.format(UngradeCommand.MESSAGE_UNGRADE_SINGLE_ASSIGNMENT_SUCCESS,","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"Piyotato"},"content":"                assignment.getAttributeName(), unmarkedStudent);","lastModifiedDate":"2022-11-06"},{"lineNumber":46,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":47,"author":{"gitId":"lpohsien"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getStudMap(), new UserPrefs());","lastModifiedDate":"2022-10-27"},{"lineNumber":48,"author":{"gitId":"lpohsien"},"content":"        expectedModel.setStudent(model.getFilteredStudentList()","lastModifiedDate":"2022-10-27"},{"lineNumber":49,"author":{"gitId":"lpohsien"},"content":"                .get(INDEX_THIRD_STUDENT.getZeroBased()), unmarkedStudent);","lastModifiedDate":"2022-10-27"},{"lineNumber":50,"author":{"gitId":"lpohsien"},"content":"        assertCommandSuccess(ungradeCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-27"},{"lineNumber":51,"author":{"gitId":"lpohsien"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":52,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":53,"author":{"gitId":"lpohsien"},"content":"    @Test","lastModifiedDate":"2022-10-27"},{"lineNumber":54,"author":{"gitId":"lpohsien"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2022-10-27"},{"lineNumber":55,"author":{"gitId":"lpohsien"},"content":"        showStudentAtIndex(model, INDEX_THIRD_STUDENT);","lastModifiedDate":"2022-10-27"},{"lineNumber":56,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":57,"author":{"gitId":"lpohsien"},"content":"        Student studentInFilteredList \u003d model.getFilteredStudentList().get(0);","lastModifiedDate":"2022-10-27"},{"lineNumber":58,"author":{"gitId":"lpohsien"},"content":"        Assignment assignment \u003d new Assignment(\"A01\", Assignment.Status.NEW);","lastModifiedDate":"2022-10-27"},{"lineNumber":59,"author":{"gitId":"lpohsien"},"content":"        UngradeCommand ungradeCommand \u003d new UngradeCommand(new SingleIndexGenerator(INDEX_FIRST_STUDENT),","lastModifiedDate":"2022-10-27"},{"lineNumber":60,"author":{"gitId":"lpohsien"},"content":"                new UngradeCommand.UngradeCommandStudentEditor(assignment));","lastModifiedDate":"2022-10-27"},{"lineNumber":61,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":62,"author":{"gitId":"lpohsien"},"content":"        Set\u003cAssignment\u003e assignmentSet \u003d new HashSet\u003c\u003e(studentInFilteredList.getAssignments());","lastModifiedDate":"2022-10-27"},{"lineNumber":63,"author":{"gitId":"lpohsien"},"content":"        assignmentSet.remove(assignment);","lastModifiedDate":"2022-10-27"},{"lineNumber":64,"author":{"gitId":"lpohsien"},"content":"        Student unmarkedStudent \u003d new StudentBuilder(studentInFilteredList).setAssigned(assignmentSet).build();","lastModifiedDate":"2022-10-27"},{"lineNumber":65,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":66,"author":{"gitId":"lpohsien"},"content":"        String expectedMessage \u003d String.format(UngradeCommand.MESSAGE_UNGRADE_SINGLE_ASSIGNMENT_SUCCESS,","lastModifiedDate":"2022-10-27"},{"lineNumber":67,"author":{"gitId":"Piyotato"},"content":"                assignment.identifier, unmarkedStudent);","lastModifiedDate":"2022-11-06"},{"lineNumber":68,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":69,"author":{"gitId":"lpohsien"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getStudMap(), new UserPrefs());","lastModifiedDate":"2022-10-27"},{"lineNumber":70,"author":{"gitId":"comicalromance"},"content":"        showStudentAtIndex(expectedModel, INDEX_THIRD_STUDENT);","lastModifiedDate":"2022-11-03"},{"lineNumber":71,"author":{"gitId":"lpohsien"},"content":"        expectedModel.setStudent(model.getFilteredStudentList().get(0), unmarkedStudent);","lastModifiedDate":"2022-10-27"},{"lineNumber":72,"author":{"gitId":"lpohsien"},"content":"        assertCommandSuccess(ungradeCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-27"},{"lineNumber":73,"author":{"gitId":"lpohsien"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":74,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":75,"author":{"gitId":"lpohsien"},"content":"    @Test","lastModifiedDate":"2022-10-27"},{"lineNumber":76,"author":{"gitId":"lpohsien"},"content":"    public void execute_invalidstudentIndexUnfilteredList_failure() {","lastModifiedDate":"2022-10-27"},{"lineNumber":77,"author":{"gitId":"lpohsien"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredStudentList().size() + 1);","lastModifiedDate":"2022-10-27"},{"lineNumber":78,"author":{"gitId":"lpohsien"},"content":"        Assignment assignment \u003d new Assignment(\"A04\", Assignment.Status.NEW);","lastModifiedDate":"2022-10-27"},{"lineNumber":79,"author":{"gitId":"lpohsien"},"content":"        UngradeCommand ungradeCommand \u003d new UngradeCommand(new SingleIndexGenerator(outOfBoundIndex),","lastModifiedDate":"2022-10-27"},{"lineNumber":80,"author":{"gitId":"lpohsien"},"content":"                new UngradeCommand.UngradeCommandStudentEditor(assignment));","lastModifiedDate":"2022-10-27"},{"lineNumber":81,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":82,"author":{"gitId":"lpohsien"},"content":"        assertCommandFailure(ungradeCommand, model, Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-27"},{"lineNumber":83,"author":{"gitId":"lpohsien"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":84,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":85,"author":{"gitId":"Piyotato"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":86,"author":{"gitId":"Piyotato"},"content":"    public void executeNoEdit_success() {","lastModifiedDate":"2022-11-06"},{"lineNumber":87,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":88,"author":{"gitId":"Piyotato"},"content":"        // student not edited if not graded","lastModifiedDate":"2022-11-06"},{"lineNumber":89,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":90,"author":{"gitId":"Piyotato"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2022-11-06"},{"lineNumber":91,"author":{"gitId":"Piyotato"},"content":"        Student studentInFilteredList \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2022-11-06"},{"lineNumber":92,"author":{"gitId":"Piyotato"},"content":"        Assignment assignment \u003d new Assignment(\"A123\", Assignment.Status.NEW);","lastModifiedDate":"2022-11-06"},{"lineNumber":93,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":94,"author":{"gitId":"Piyotato"},"content":"        UngradeCommand ungradeCommand \u003d new UngradeCommand(new SingleIndexGenerator(INDEX_FIRST_STUDENT),","lastModifiedDate":"2022-11-06"},{"lineNumber":95,"author":{"gitId":"Piyotato"},"content":"                new UngradeCommand.UngradeCommandStudentEditor(assignment));","lastModifiedDate":"2022-11-06"},{"lineNumber":96,"author":{"gitId":"Piyotato"},"content":"        String expectedMessage \u003d String.format(UngradeCommand.MESSAGE_UNMARK_SINGLE_ASSIGNMENT_UNEDITED,","lastModifiedDate":"2022-11-06"},{"lineNumber":97,"author":{"gitId":"Piyotato"},"content":"                assignment.getAttributeName(), studentInFilteredList);","lastModifiedDate":"2022-11-06"},{"lineNumber":98,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":99,"author":{"gitId":"Piyotato"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getStudMap(), new UserPrefs());","lastModifiedDate":"2022-11-06"},{"lineNumber":100,"author":{"gitId":"Piyotato"},"content":"        showStudentAtIndex(expectedModel, INDEX_FIRST_STUDENT);","lastModifiedDate":"2022-11-06"},{"lineNumber":101,"author":{"gitId":"Piyotato"},"content":"        expectedModel.setStudent(model.getFilteredStudentList().get(0), studentInFilteredList);","lastModifiedDate":"2022-11-06"},{"lineNumber":102,"author":{"gitId":"Piyotato"},"content":"        assertCommandSuccess(ungradeCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-11-06"},{"lineNumber":103,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":104,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":105,"author":{"gitId":"lpohsien"},"content":"}","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"Piyotato":23,"lpohsien":81,"comicalromance":1}},{"path":"src/test/java/seedu/studmap/logic/commands/UnmarkCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.logic.commands;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.showStudentAtIndex;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.testutil.TypicalIndexes.INDEX_SECOND_STUDENT;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.testutil.TypicalStudents.getTypicalStudMap;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"comicalromance"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"comicalromance"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"comicalromance"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.commons.core.Messages;","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.commons.core.index.Index;","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"lpohsien"},"content":"import seedu.studmap.commons.core.index.SingleIndexGenerator;","lastModifiedDate":"2022-10-24"},{"lineNumber":18,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.Model;","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.ModelManager;","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.UserPrefs;","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.student.Attendance;","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.student.Student;","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.testutil.StudentBuilder;","lastModifiedDate":"2022-10-15"},{"lineNumber":24,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"comicalromance"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"comicalromance"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"Piyotato"},"content":" * {@code UnmarkCommand}.","lastModifiedDate":"2022-11-06"},{"lineNumber":28,"author":{"gitId":"comicalromance"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"comicalromance"},"content":"class UnmarkCommandTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"comicalromance"},"content":"    private Model model \u003d new ModelManager(getTypicalStudMap(), new UserPrefs());","lastModifiedDate":"2022-10-15"},{"lineNumber":32,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"comicalromance"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"comicalromance"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"comicalromance"},"content":"        Student studentToUnmark \u003d model.getFilteredStudentList().get(INDEX_SECOND_STUDENT.getZeroBased());","lastModifiedDate":"2022-10-15"},{"lineNumber":36,"author":{"gitId":"Piyotato"},"content":"        Attendance attendance \u003d new Attendance(\"T01\", Attendance.Status.PRESENT);","lastModifiedDate":"2022-11-06"},{"lineNumber":37,"author":{"gitId":"lpohsien"},"content":"        UnmarkCommand unmarkCommand \u003d new UnmarkCommand(new SingleIndexGenerator(INDEX_SECOND_STUDENT),","lastModifiedDate":"2022-10-24"},{"lineNumber":38,"author":{"gitId":"lpohsien"},"content":"                new UnmarkCommand.UnmarkCommandStudentEditor(attendance));","lastModifiedDate":"2022-10-24"},{"lineNumber":39,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"comicalromance"},"content":"        Set\u003cAttendance\u003e attendanceSet \u003d new HashSet\u003c\u003e(studentToUnmark.getAttendances());","lastModifiedDate":"2022-10-15"},{"lineNumber":41,"author":{"gitId":"comicalromance"},"content":"        attendanceSet.remove(attendance);","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"comicalromance"},"content":"        Student unmarkedStudent \u003d new StudentBuilder(studentToUnmark).setAttended(attendanceSet).build();","lastModifiedDate":"2022-10-15"},{"lineNumber":43,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"lpohsien"},"content":"        String expectedMessage \u003d String.format(UnmarkCommand.MESSAGE_UNMARK_SINGLE_ATTENDANCE_SUCCESS,","lastModifiedDate":"2022-10-24"},{"lineNumber":45,"author":{"gitId":"Piyotato"},"content":"                attendance.identifier, unmarkedStudent);","lastModifiedDate":"2022-11-06"},{"lineNumber":46,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"comicalromance"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getStudMap(), new UserPrefs());","lastModifiedDate":"2022-10-15"},{"lineNumber":48,"author":{"gitId":"comicalromance"},"content":"        expectedModel.setStudent(model.getFilteredStudentList()","lastModifiedDate":"2022-10-15"},{"lineNumber":49,"author":{"gitId":"comicalromance"},"content":"                .get(INDEX_SECOND_STUDENT.getZeroBased()), unmarkedStudent);","lastModifiedDate":"2022-10-15"},{"lineNumber":50,"author":{"gitId":"comicalromance"},"content":"        assertCommandSuccess(unmarkCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":54,"author":{"gitId":"comicalromance"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"comicalromance"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"comicalromance"},"content":"        showStudentAtIndex(model, INDEX_SECOND_STUDENT);","lastModifiedDate":"2022-10-15"},{"lineNumber":57,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"comicalromance"},"content":"        Student studentInFilteredList \u003d model.getFilteredStudentList().get(0);","lastModifiedDate":"2022-10-15"},{"lineNumber":59,"author":{"gitId":"Piyotato"},"content":"        Attendance attendance \u003d new Attendance(\"T01\", Attendance.Status.PRESENT);","lastModifiedDate":"2022-11-06"},{"lineNumber":60,"author":{"gitId":"lpohsien"},"content":"        UnmarkCommand unmarkCommand \u003d new UnmarkCommand(new SingleIndexGenerator(INDEX_FIRST_STUDENT),","lastModifiedDate":"2022-10-24"},{"lineNumber":61,"author":{"gitId":"lpohsien"},"content":"                new UnmarkCommand.UnmarkCommandStudentEditor(attendance));","lastModifiedDate":"2022-10-24"},{"lineNumber":62,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"comicalromance"},"content":"        Set\u003cAttendance\u003e attendanceSet \u003d new HashSet\u003c\u003e(studentInFilteredList.getAttendances());","lastModifiedDate":"2022-10-15"},{"lineNumber":64,"author":{"gitId":"comicalromance"},"content":"        attendanceSet.remove(attendance);","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"comicalromance"},"content":"        Student unmarkedStudent \u003d new StudentBuilder(studentInFilteredList).setAttended(attendanceSet).build();","lastModifiedDate":"2022-10-15"},{"lineNumber":66,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"lpohsien"},"content":"        String expectedMessage \u003d String.format(UnmarkCommand.MESSAGE_UNMARK_SINGLE_ATTENDANCE_SUCCESS,","lastModifiedDate":"2022-10-24"},{"lineNumber":68,"author":{"gitId":"Piyotato"},"content":"                attendance.identifier, unmarkedStudent);","lastModifiedDate":"2022-11-06"},{"lineNumber":69,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"comicalromance"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getStudMap(), new UserPrefs());","lastModifiedDate":"2022-10-15"},{"lineNumber":71,"author":{"gitId":"comicalromance"},"content":"        showStudentAtIndex(expectedModel, INDEX_SECOND_STUDENT);","lastModifiedDate":"2022-11-03"},{"lineNumber":72,"author":{"gitId":"comicalromance"},"content":"        expectedModel.setStudent(model.getFilteredStudentList().get(0), unmarkedStudent);","lastModifiedDate":"2022-10-15"},{"lineNumber":73,"author":{"gitId":"comicalromance"},"content":"        assertCommandSuccess(unmarkCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"comicalromance"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"comicalromance"},"content":"    public void execute_invalidstudentIndexUnfilteredList_failure() {","lastModifiedDate":"2022-10-15"},{"lineNumber":78,"author":{"gitId":"comicalromance"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredStudentList().size() + 1);","lastModifiedDate":"2022-10-15"},{"lineNumber":79,"author":{"gitId":"Piyotato"},"content":"        Attendance attendance \u003d new Attendance(\"T04\", Attendance.Status.PRESENT);","lastModifiedDate":"2022-11-06"},{"lineNumber":80,"author":{"gitId":"lpohsien"},"content":"        UnmarkCommand unmarkCommand \u003d new UnmarkCommand(new SingleIndexGenerator(outOfBoundIndex),","lastModifiedDate":"2022-10-24"},{"lineNumber":81,"author":{"gitId":"lpohsien"},"content":"                new UnmarkCommand.UnmarkCommandStudentEditor(attendance));","lastModifiedDate":"2022-10-24"},{"lineNumber":82,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"comicalromance"},"content":"        assertCommandFailure(unmarkCommand, model, Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-15"},{"lineNumber":84,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":86,"author":{"gitId":"Piyotato"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":87,"author":{"gitId":"Piyotato"},"content":"    public void executeNoEdit_success() {","lastModifiedDate":"2022-11-06"},{"lineNumber":88,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":89,"author":{"gitId":"Piyotato"},"content":"        // student not edited if not marked","lastModifiedDate":"2022-11-06"},{"lineNumber":90,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":91,"author":{"gitId":"Piyotato"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2022-11-06"},{"lineNumber":92,"author":{"gitId":"Piyotato"},"content":"        Student studentInFilteredList \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2022-11-06"},{"lineNumber":93,"author":{"gitId":"Piyotato"},"content":"        Attendance attendance \u003d new Attendance(\"T62\", Attendance.Status.PRESENT);","lastModifiedDate":"2022-11-06"},{"lineNumber":94,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":95,"author":{"gitId":"Piyotato"},"content":"        UnmarkCommand unmarkCommand \u003d new UnmarkCommand(new SingleIndexGenerator(INDEX_FIRST_STUDENT),","lastModifiedDate":"2022-11-06"},{"lineNumber":96,"author":{"gitId":"Piyotato"},"content":"                new UnmarkCommand.UnmarkCommandStudentEditor(attendance));","lastModifiedDate":"2022-11-06"},{"lineNumber":97,"author":{"gitId":"Piyotato"},"content":"        String expectedMessage \u003d String.format(UnmarkCommand.MESSAGE_UNMARK_SINGLE_ATTENDANCE_UNEDITED,","lastModifiedDate":"2022-11-06"},{"lineNumber":98,"author":{"gitId":"Piyotato"},"content":"                attendance.getAttributeName(), studentInFilteredList);","lastModifiedDate":"2022-11-06"},{"lineNumber":99,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":100,"author":{"gitId":"Piyotato"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getStudMap(), new UserPrefs());","lastModifiedDate":"2022-11-06"},{"lineNumber":101,"author":{"gitId":"Piyotato"},"content":"        showStudentAtIndex(expectedModel, INDEX_FIRST_STUDENT);","lastModifiedDate":"2022-11-06"},{"lineNumber":102,"author":{"gitId":"Piyotato"},"content":"        expectedModel.setStudent(model.getFilteredStudentList().get(0), studentInFilteredList);","lastModifiedDate":"2022-11-06"},{"lineNumber":103,"author":{"gitId":"Piyotato"},"content":"        assertCommandSuccess(unmarkCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-11-06"},{"lineNumber":104,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":105,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":106,"author":{"gitId":"comicalromance"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"Piyotato":27,"comicalromance":69,"lpohsien":10}},{"path":"src/test/java/seedu/studmap/logic/commands/UnparticipateCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"highorbit25"},"content":"package seedu.studmap.logic.commands;","lastModifiedDate":"2022-10-28"},{"lineNumber":2,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":3,"author":{"gitId":"highorbit25"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-28"},{"lineNumber":4,"author":{"gitId":"highorbit25"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-28"},{"lineNumber":5,"author":{"gitId":"highorbit25"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.showStudentAtIndex;","lastModifiedDate":"2022-10-28"},{"lineNumber":6,"author":{"gitId":"highorbit25"},"content":"import static seedu.studmap.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"highorbit25"},"content":"import static seedu.studmap.testutil.TypicalIndexes.INDEX_SECOND_STUDENT;","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"highorbit25"},"content":"import static seedu.studmap.testutil.TypicalStudents.getTypicalStudMap;","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":10,"author":{"gitId":"highorbit25"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-28"},{"lineNumber":11,"author":{"gitId":"highorbit25"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-28"},{"lineNumber":12,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"highorbit25"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"highorbit25"},"content":"import seedu.studmap.commons.core.Messages;","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"highorbit25"},"content":"import seedu.studmap.commons.core.index.Index;","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"highorbit25"},"content":"import seedu.studmap.commons.core.index.SingleIndexGenerator;","lastModifiedDate":"2022-10-28"},{"lineNumber":18,"author":{"gitId":"highorbit25"},"content":"import seedu.studmap.model.Model;","lastModifiedDate":"2022-10-28"},{"lineNumber":19,"author":{"gitId":"highorbit25"},"content":"import seedu.studmap.model.ModelManager;","lastModifiedDate":"2022-10-28"},{"lineNumber":20,"author":{"gitId":"highorbit25"},"content":"import seedu.studmap.model.UserPrefs;","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"highorbit25"},"content":"import seedu.studmap.model.student.Participation;","lastModifiedDate":"2022-10-28"},{"lineNumber":22,"author":{"gitId":"highorbit25"},"content":"import seedu.studmap.model.student.Student;","lastModifiedDate":"2022-10-28"},{"lineNumber":23,"author":{"gitId":"highorbit25"},"content":"import seedu.studmap.testutil.StudentBuilder;","lastModifiedDate":"2022-10-28"},{"lineNumber":24,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"highorbit25"},"content":"/**","lastModifiedDate":"2022-10-28"},{"lineNumber":26,"author":{"gitId":"highorbit25"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2022-10-28"},{"lineNumber":27,"author":{"gitId":"highorbit25"},"content":" * {@code UnparticipateCommand}.","lastModifiedDate":"2022-10-28"},{"lineNumber":28,"author":{"gitId":"highorbit25"},"content":" */","lastModifiedDate":"2022-10-28"},{"lineNumber":29,"author":{"gitId":"highorbit25"},"content":"class UnparticipateCommandTest {","lastModifiedDate":"2022-10-28"},{"lineNumber":30,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":31,"author":{"gitId":"highorbit25"},"content":"    private Model model \u003d new ModelManager(getTypicalStudMap(), new UserPrefs());","lastModifiedDate":"2022-10-28"},{"lineNumber":32,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":33,"author":{"gitId":"highorbit25"},"content":"    @Test","lastModifiedDate":"2022-10-28"},{"lineNumber":34,"author":{"gitId":"highorbit25"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2022-10-28"},{"lineNumber":35,"author":{"gitId":"highorbit25"},"content":"        Student studentToUnmark \u003d model.getFilteredStudentList().get(INDEX_SECOND_STUDENT.getZeroBased());","lastModifiedDate":"2022-10-28"},{"lineNumber":36,"author":{"gitId":"Piyotato"},"content":"        Participation participation \u003d new Participation(\"P01\", Participation.Status.PARTICIPATED);","lastModifiedDate":"2022-11-06"},{"lineNumber":37,"author":{"gitId":"highorbit25"},"content":"        UnparticipateCommand unparticipateCommand \u003d new UnparticipateCommand(","lastModifiedDate":"2022-10-28"},{"lineNumber":38,"author":{"gitId":"highorbit25"},"content":"                new SingleIndexGenerator(INDEX_SECOND_STUDENT),","lastModifiedDate":"2022-10-28"},{"lineNumber":39,"author":{"gitId":"highorbit25"},"content":"                new UnparticipateCommand.UnparticipateCommandStudentEditor(participation));","lastModifiedDate":"2022-10-28"},{"lineNumber":40,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":41,"author":{"gitId":"highorbit25"},"content":"        Set\u003cParticipation\u003e participationSet \u003d new HashSet\u003c\u003e(studentToUnmark.getParticipations());","lastModifiedDate":"2022-10-28"},{"lineNumber":42,"author":{"gitId":"highorbit25"},"content":"        participationSet.remove(participation);","lastModifiedDate":"2022-10-28"},{"lineNumber":43,"author":{"gitId":"highorbit25"},"content":"        Student unmarkedStudent \u003d new StudentBuilder(studentToUnmark).setParticipated(participationSet).build();","lastModifiedDate":"2022-10-28"},{"lineNumber":44,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":45,"author":{"gitId":"highorbit25"},"content":"        String expectedMessage \u003d String.format(UnparticipateCommand.MESSAGE_UNMARK_SINGLE_PARTICIPATION_SUCCESS,","lastModifiedDate":"2022-10-28"},{"lineNumber":46,"author":{"gitId":"Piyotato"},"content":"                participation.identifier, unmarkedStudent);","lastModifiedDate":"2022-11-06"},{"lineNumber":47,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":48,"author":{"gitId":"highorbit25"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getStudMap(), new UserPrefs());","lastModifiedDate":"2022-10-28"},{"lineNumber":49,"author":{"gitId":"highorbit25"},"content":"        expectedModel.setStudent(model.getFilteredStudentList()","lastModifiedDate":"2022-10-28"},{"lineNumber":50,"author":{"gitId":"highorbit25"},"content":"                .get(INDEX_SECOND_STUDENT.getZeroBased()), unmarkedStudent);","lastModifiedDate":"2022-10-28"},{"lineNumber":51,"author":{"gitId":"highorbit25"},"content":"        assertCommandSuccess(unparticipateCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-28"},{"lineNumber":52,"author":{"gitId":"highorbit25"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":53,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":54,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":55,"author":{"gitId":"highorbit25"},"content":"    @Test","lastModifiedDate":"2022-10-28"},{"lineNumber":56,"author":{"gitId":"highorbit25"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2022-10-28"},{"lineNumber":57,"author":{"gitId":"highorbit25"},"content":"        showStudentAtIndex(model, INDEX_SECOND_STUDENT);","lastModifiedDate":"2022-10-28"},{"lineNumber":58,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":59,"author":{"gitId":"highorbit25"},"content":"        Student studentInFilteredList \u003d model.getFilteredStudentList().get(0);","lastModifiedDate":"2022-10-28"},{"lineNumber":60,"author":{"gitId":"Piyotato"},"content":"        Participation participation \u003d new Participation(\"P01\", Participation.Status.PARTICIPATED);","lastModifiedDate":"2022-11-06"},{"lineNumber":61,"author":{"gitId":"highorbit25"},"content":"        UnparticipateCommand unparticipateCommand \u003d new UnparticipateCommand(","lastModifiedDate":"2022-10-28"},{"lineNumber":62,"author":{"gitId":"highorbit25"},"content":"                new SingleIndexGenerator(INDEX_FIRST_STUDENT),","lastModifiedDate":"2022-10-28"},{"lineNumber":63,"author":{"gitId":"highorbit25"},"content":"                new UnparticipateCommand.UnparticipateCommandStudentEditor(participation));","lastModifiedDate":"2022-10-28"},{"lineNumber":64,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":65,"author":{"gitId":"highorbit25"},"content":"        Set\u003cParticipation\u003e participationSet \u003d new HashSet\u003c\u003e(studentInFilteredList.getParticipations());","lastModifiedDate":"2022-10-28"},{"lineNumber":66,"author":{"gitId":"highorbit25"},"content":"        participationSet.remove(participation);","lastModifiedDate":"2022-10-28"},{"lineNumber":67,"author":{"gitId":"highorbit25"},"content":"        Student unmarkedStudent \u003d new StudentBuilder(studentInFilteredList).setParticipated(participationSet).build();","lastModifiedDate":"2022-10-28"},{"lineNumber":68,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":69,"author":{"gitId":"highorbit25"},"content":"        String expectedMessage \u003d String.format(UnparticipateCommand.MESSAGE_UNMARK_SINGLE_PARTICIPATION_SUCCESS,","lastModifiedDate":"2022-10-28"},{"lineNumber":70,"author":{"gitId":"Piyotato"},"content":"                participation.identifier, unmarkedStudent);","lastModifiedDate":"2022-11-06"},{"lineNumber":71,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":72,"author":{"gitId":"highorbit25"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getStudMap(), new UserPrefs());","lastModifiedDate":"2022-10-28"},{"lineNumber":73,"author":{"gitId":"comicalromance"},"content":"        showStudentAtIndex(expectedModel, INDEX_SECOND_STUDENT);","lastModifiedDate":"2022-11-03"},{"lineNumber":74,"author":{"gitId":"highorbit25"},"content":"        expectedModel.setStudent(model.getFilteredStudentList().get(0), unmarkedStudent);","lastModifiedDate":"2022-10-28"},{"lineNumber":75,"author":{"gitId":"highorbit25"},"content":"        assertCommandSuccess(unparticipateCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-28"},{"lineNumber":76,"author":{"gitId":"highorbit25"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":77,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":78,"author":{"gitId":"highorbit25"},"content":"    @Test","lastModifiedDate":"2022-10-28"},{"lineNumber":79,"author":{"gitId":"highorbit25"},"content":"    public void execute_invalidstudentIndexUnfilteredList_failure() {","lastModifiedDate":"2022-10-28"},{"lineNumber":80,"author":{"gitId":"highorbit25"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredStudentList().size() + 1);","lastModifiedDate":"2022-10-28"},{"lineNumber":81,"author":{"gitId":"Piyotato"},"content":"        Participation participation \u003d new Participation(\"T04\", Participation.Status.PARTICIPATED);","lastModifiedDate":"2022-11-06"},{"lineNumber":82,"author":{"gitId":"highorbit25"},"content":"        UnparticipateCommand unparticipateCommand \u003d new UnparticipateCommand(new SingleIndexGenerator(outOfBoundIndex),","lastModifiedDate":"2022-10-28"},{"lineNumber":83,"author":{"gitId":"highorbit25"},"content":"                new UnparticipateCommand.UnparticipateCommandStudentEditor(participation));","lastModifiedDate":"2022-10-28"},{"lineNumber":84,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":85,"author":{"gitId":"highorbit25"},"content":"        assertCommandFailure(unparticipateCommand, model, Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-28"},{"lineNumber":86,"author":{"gitId":"highorbit25"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":87,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":88,"author":{"gitId":"Piyotato"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":89,"author":{"gitId":"Piyotato"},"content":"    public void executeNoEdit_success() {","lastModifiedDate":"2022-11-06"},{"lineNumber":90,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":91,"author":{"gitId":"Piyotato"},"content":"        // student not edited if not graded","lastModifiedDate":"2022-11-06"},{"lineNumber":92,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":93,"author":{"gitId":"Piyotato"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2022-11-06"},{"lineNumber":94,"author":{"gitId":"Piyotato"},"content":"        Student studentInFilteredList \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2022-11-06"},{"lineNumber":95,"author":{"gitId":"Piyotato"},"content":"        Participation participation \u003d new Participation(\"A123\", Participation.Status.PARTICIPATED);","lastModifiedDate":"2022-11-06"},{"lineNumber":96,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":97,"author":{"gitId":"Piyotato"},"content":"        UnparticipateCommand unparticipateCommand \u003d","lastModifiedDate":"2022-11-06"},{"lineNumber":98,"author":{"gitId":"Piyotato"},"content":"                new UnparticipateCommand(new SingleIndexGenerator(INDEX_FIRST_STUDENT),","lastModifiedDate":"2022-11-06"},{"lineNumber":99,"author":{"gitId":"Piyotato"},"content":"                        new UnparticipateCommand.UnparticipateCommandStudentEditor(participation));","lastModifiedDate":"2022-11-06"},{"lineNumber":100,"author":{"gitId":"Piyotato"},"content":"        String expectedMessage \u003d String.format(UnparticipateCommand.MESSAGE_UNMARK_SINGLE_PARTICIPATION_UNEDITED,","lastModifiedDate":"2022-11-06"},{"lineNumber":101,"author":{"gitId":"Piyotato"},"content":"                participation.getAttributeName(), studentInFilteredList);","lastModifiedDate":"2022-11-06"},{"lineNumber":102,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":103,"author":{"gitId":"Piyotato"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getStudMap(), new UserPrefs());","lastModifiedDate":"2022-11-06"},{"lineNumber":104,"author":{"gitId":"Piyotato"},"content":"        showStudentAtIndex(expectedModel, INDEX_FIRST_STUDENT);","lastModifiedDate":"2022-11-06"},{"lineNumber":105,"author":{"gitId":"Piyotato"},"content":"        expectedModel.setStudent(model.getFilteredStudentList().get(0), studentInFilteredList);","lastModifiedDate":"2022-11-06"},{"lineNumber":106,"author":{"gitId":"Piyotato"},"content":"        assertCommandSuccess(unparticipateCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-11-06"},{"lineNumber":107,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":108,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":109,"author":{"gitId":"highorbit25"},"content":"}","lastModifiedDate":"2022-10-28"}],"authorContributionMap":{"highorbit25":81,"Piyotato":27,"comicalromance":1}},{"path":"src/test/java/seedu/studmap/logic/imports/ImportCsvTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Piyotato"},"content":"package seedu.studmap.logic.imports;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":3,"author":{"gitId":"Piyotato"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-11-07"},{"lineNumber":4,"author":{"gitId":"Piyotato"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-11-07"},{"lineNumber":5,"author":{"gitId":"Piyotato"},"content":"import static seedu.studmap.logic.imports.ImportCsv.CSV_WRONG_FORMAT;","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"Piyotato"},"content":"import static seedu.studmap.logic.imports.ImportCsv.DUPLICATE_STUDENT;","lastModifiedDate":"2022-11-07"},{"lineNumber":7,"author":{"gitId":"Piyotato"},"content":"import static seedu.studmap.logic.imports.ImportCsv.FILE_DOES_NOT_EXIST;","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"Piyotato"},"content":"import static seedu.studmap.logic.imports.ImportCsv.FILE_IS_NULL;","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"Piyotato"},"content":"import static seedu.studmap.logic.imports.ImportCsv.FILE_NOT_CSV;","lastModifiedDate":"2022-11-07"},{"lineNumber":10,"author":{"gitId":"Piyotato"},"content":"import static seedu.studmap.logic.imports.ImportCsv.MISSING_COMPULSORY_ATTRIBUTE;","lastModifiedDate":"2022-11-07"},{"lineNumber":11,"author":{"gitId":"Piyotato"},"content":"import static seedu.studmap.testutil.Assert.assertThrows;","lastModifiedDate":"2022-11-07"},{"lineNumber":12,"author":{"gitId":"Piyotato"},"content":"import static seedu.studmap.testutil.TypicalStudents.getTypicalStudMap;","lastModifiedDate":"2022-11-07"},{"lineNumber":13,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":14,"author":{"gitId":"Piyotato"},"content":"import java.io.File;","lastModifiedDate":"2022-11-07"},{"lineNumber":15,"author":{"gitId":"Piyotato"},"content":"import java.io.IOException;","lastModifiedDate":"2022-11-07"},{"lineNumber":16,"author":{"gitId":"Piyotato"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-11-07"},{"lineNumber":17,"author":{"gitId":"Piyotato"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-11-07"},{"lineNumber":18,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":19,"author":{"gitId":"Piyotato"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-11-07"},{"lineNumber":20,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":21,"author":{"gitId":"Piyotato"},"content":"import seedu.studmap.logic.imports.exceptions.ImportException;","lastModifiedDate":"2022-11-07"},{"lineNumber":22,"author":{"gitId":"Piyotato"},"content":"import seedu.studmap.model.Model;","lastModifiedDate":"2022-11-07"},{"lineNumber":23,"author":{"gitId":"Piyotato"},"content":"import seedu.studmap.model.ModelManager;","lastModifiedDate":"2022-11-07"},{"lineNumber":24,"author":{"gitId":"Piyotato"},"content":"import seedu.studmap.model.UserPrefs;","lastModifiedDate":"2022-11-07"},{"lineNumber":25,"author":{"gitId":"Piyotato"},"content":"import seedu.studmap.model.student.Email;","lastModifiedDate":"2022-11-07"},{"lineNumber":26,"author":{"gitId":"Piyotato"},"content":"import seedu.studmap.model.student.GitName;","lastModifiedDate":"2022-11-07"},{"lineNumber":27,"author":{"gitId":"Piyotato"},"content":"import seedu.studmap.model.student.Module;","lastModifiedDate":"2022-11-07"},{"lineNumber":28,"author":{"gitId":"Piyotato"},"content":"import seedu.studmap.model.student.Name;","lastModifiedDate":"2022-11-07"},{"lineNumber":29,"author":{"gitId":"Piyotato"},"content":"import seedu.studmap.model.student.Phone;","lastModifiedDate":"2022-11-07"},{"lineNumber":30,"author":{"gitId":"Piyotato"},"content":"import seedu.studmap.model.student.Student;","lastModifiedDate":"2022-11-07"},{"lineNumber":31,"author":{"gitId":"Piyotato"},"content":"import seedu.studmap.model.student.StudentData;","lastModifiedDate":"2022-11-07"},{"lineNumber":32,"author":{"gitId":"Piyotato"},"content":"import seedu.studmap.model.student.StudentID;","lastModifiedDate":"2022-11-07"},{"lineNumber":33,"author":{"gitId":"Piyotato"},"content":"import seedu.studmap.model.student.TeleHandle;","lastModifiedDate":"2022-11-07"},{"lineNumber":34,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":35,"author":{"gitId":"Piyotato"},"content":"class ImportCsvTest {","lastModifiedDate":"2022-11-07"},{"lineNumber":36,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":37,"author":{"gitId":"Piyotato"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ImportCsvTest\");","lastModifiedDate":"2022-11-07"},{"lineNumber":38,"author":{"gitId":"Piyotato"},"content":"    private final Model model \u003d new ModelManager(getTypicalStudMap(), new UserPrefs());","lastModifiedDate":"2022-11-07"},{"lineNumber":39,"author":{"gitId":"Piyotato"},"content":"    private final ImportCsv importer \u003d new ImportCsv();","lastModifiedDate":"2022-11-07"},{"lineNumber":40,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":41,"author":{"gitId":"Piyotato"},"content":"    private File openFile(String filePath) {","lastModifiedDate":"2022-11-07"},{"lineNumber":42,"author":{"gitId":"Piyotato"},"content":"        return addToTestDataPathIfNotNull(filePath).toFile();","lastModifiedDate":"2022-11-07"},{"lineNumber":43,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-11-07"},{"lineNumber":44,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":45,"author":{"gitId":"Piyotato"},"content":"    private Path addToTestDataPathIfNotNull(String fileName) {","lastModifiedDate":"2022-11-07"},{"lineNumber":46,"author":{"gitId":"Piyotato"},"content":"        return fileName !\u003d null","lastModifiedDate":"2022-11-07"},{"lineNumber":47,"author":{"gitId":"Piyotato"},"content":"                ? TEST_DATA_FOLDER.resolve(fileName)","lastModifiedDate":"2022-11-07"},{"lineNumber":48,"author":{"gitId":"Piyotato"},"content":"                : null;","lastModifiedDate":"2022-11-07"},{"lineNumber":49,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-11-07"},{"lineNumber":50,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":51,"author":{"gitId":"Piyotato"},"content":"    @Test","lastModifiedDate":"2022-11-07"},{"lineNumber":52,"author":{"gitId":"Piyotato"},"content":"    public void execute_importException() {","lastModifiedDate":"2022-11-07"},{"lineNumber":53,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":54,"author":{"gitId":"Piyotato"},"content":"        assertThrows(ImportException.class, FILE_IS_NULL, () -\u003e importer.execute(model, null));","lastModifiedDate":"2022-11-07"},{"lineNumber":55,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":56,"author":{"gitId":"Piyotato"},"content":"        final File nullFile \u003d new File(\" \");","lastModifiedDate":"2022-11-07"},{"lineNumber":57,"author":{"gitId":"Piyotato"},"content":"        assertThrows(ImportException.class, FILE_DOES_NOT_EXIST, () -\u003e importer.execute(model, nullFile));","lastModifiedDate":"2022-11-07"},{"lineNumber":58,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":59,"author":{"gitId":"Piyotato"},"content":"        try {","lastModifiedDate":"2022-11-07"},{"lineNumber":60,"author":{"gitId":"Piyotato"},"content":"            final File nonCsvFile \u003d File.createTempFile(\"temp\", null);","lastModifiedDate":"2022-11-07"},{"lineNumber":61,"author":{"gitId":"Piyotato"},"content":"            assertThrows(ImportException.class, FILE_NOT_CSV, () -\u003e importer.execute(model, nonCsvFile));","lastModifiedDate":"2022-11-07"},{"lineNumber":62,"author":{"gitId":"Piyotato"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-11-07"},{"lineNumber":63,"author":{"gitId":"Piyotato"},"content":"            // Do nothing","lastModifiedDate":"2022-11-07"},{"lineNumber":64,"author":{"gitId":"Piyotato"},"content":"        }","lastModifiedDate":"2022-11-07"},{"lineNumber":65,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":66,"author":{"gitId":"Piyotato"},"content":"        final File wrongFormatFile \u003d openFile(\"wrongFormat.csv\");","lastModifiedDate":"2022-11-07"},{"lineNumber":67,"author":{"gitId":"Piyotato"},"content":"        assertThrows(ImportException.class, CSV_WRONG_FORMAT, () -\u003e importer.execute(model, wrongFormatFile));","lastModifiedDate":"2022-11-07"},{"lineNumber":68,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":69,"author":{"gitId":"Piyotato"},"content":"        final File headerSize6File \u003d openFile(\"headerSize6.csv\");","lastModifiedDate":"2022-11-07"},{"lineNumber":70,"author":{"gitId":"Piyotato"},"content":"        assertThrows(ImportException.class, CSV_WRONG_FORMAT, () -\u003e importer.execute(model, headerSize6File));","lastModifiedDate":"2022-11-07"},{"lineNumber":71,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":72,"author":{"gitId":"Piyotato"},"content":"        final File headerSize8File \u003d openFile(\"headerSize8.csv\");","lastModifiedDate":"2022-11-07"},{"lineNumber":73,"author":{"gitId":"Piyotato"},"content":"        assertThrows(ImportException.class, CSV_WRONG_FORMAT, () -\u003e importer.execute(model, headerSize8File));","lastModifiedDate":"2022-11-07"},{"lineNumber":74,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":75,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-11-07"},{"lineNumber":76,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":77,"author":{"gitId":"Piyotato"},"content":"    @Test","lastModifiedDate":"2022-11-07"},{"lineNumber":78,"author":{"gitId":"Piyotato"},"content":"    public void execute_importSuccess() {","lastModifiedDate":"2022-11-07"},{"lineNumber":79,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":80,"author":{"gitId":"Piyotato"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2022-11-07"},{"lineNumber":81,"author":{"gitId":"Piyotato"},"content":"        String output;","lastModifiedDate":"2022-11-07"},{"lineNumber":82,"author":{"gitId":"Piyotato"},"content":"        final File validFormatFile \u003d openFile(\"validFormat.csv\");","lastModifiedDate":"2022-11-07"},{"lineNumber":83,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":84,"author":{"gitId":"Piyotato"},"content":"        try {","lastModifiedDate":"2022-11-07"},{"lineNumber":85,"author":{"gitId":"Piyotato"},"content":"            output \u003d importer.execute(model, validFormatFile);","lastModifiedDate":"2022-11-07"},{"lineNumber":86,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":87,"author":{"gitId":"Piyotato"},"content":"            StringBuilder log \u003d new StringBuilder();","lastModifiedDate":"2022-11-07"},{"lineNumber":88,"author":{"gitId":"Piyotato"},"content":"            log.append(String.format(DUPLICATE_STUDENT, 9));","lastModifiedDate":"2022-11-07"},{"lineNumber":89,"author":{"gitId":"Piyotato"},"content":"            log.append(String.format(MISSING_COMPULSORY_ATTRIBUTE, 10, ImportCsv.Attributes.NAME));","lastModifiedDate":"2022-11-07"},{"lineNumber":90,"author":{"gitId":"Piyotato"},"content":"            log.append(String.format(MISSING_COMPULSORY_ATTRIBUTE, 11, ImportCsv.Attributes.STUDENTID));","lastModifiedDate":"2022-11-07"},{"lineNumber":91,"author":{"gitId":"Piyotato"},"content":"            log.append(String.format(MISSING_COMPULSORY_ATTRIBUTE, 12, ImportCsv.Attributes.MODULE));","lastModifiedDate":"2022-11-07"},{"lineNumber":92,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":93,"author":{"gitId":"Piyotato"},"content":"            assertEquals(log.toString(), output);","lastModifiedDate":"2022-11-07"},{"lineNumber":94,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":95,"author":{"gitId":"Piyotato"},"content":"        } catch (ImportException e) {","lastModifiedDate":"2022-11-07"},{"lineNumber":96,"author":{"gitId":"Piyotato"},"content":"            assert (false);","lastModifiedDate":"2022-11-07"},{"lineNumber":97,"author":{"gitId":"Piyotato"},"content":"        }","lastModifiedDate":"2022-11-07"},{"lineNumber":98,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":99,"author":{"gitId":"Piyotato"},"content":"        StudentData studentData1 \u003d new StudentData();","lastModifiedDate":"2022-11-07"},{"lineNumber":100,"author":{"gitId":"Piyotato"},"content":"        studentData1.setName(new Name(\"Silas Yeo\"));","lastModifiedDate":"2022-11-07"},{"lineNumber":101,"author":{"gitId":"Piyotato"},"content":"        studentData1.setId(new StudentID(\"E0773771\"));","lastModifiedDate":"2022-11-07"},{"lineNumber":102,"author":{"gitId":"Piyotato"},"content":"        studentData1.setModule(new Module(\"CS2106\"));","lastModifiedDate":"2022-11-07"},{"lineNumber":103,"author":{"gitId":"Piyotato"},"content":"        studentData1.setPhone(new Phone(\"84112213\"));","lastModifiedDate":"2022-11-07"},{"lineNumber":104,"author":{"gitId":"Piyotato"},"content":"        studentData1.setGitUser(new GitName(\"silasysy\"));","lastModifiedDate":"2022-11-07"},{"lineNumber":105,"author":{"gitId":"Piyotato"},"content":"        assertTrue(model.hasStudent(new Student(studentData1)));","lastModifiedDate":"2022-11-07"},{"lineNumber":106,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":107,"author":{"gitId":"Piyotato"},"content":"        StudentData studentData2 \u003d new StudentData();","lastModifiedDate":"2022-11-07"},{"lineNumber":108,"author":{"gitId":"Piyotato"},"content":"        studentData2.setName(new Name(\"Sally\"));","lastModifiedDate":"2022-11-07"},{"lineNumber":109,"author":{"gitId":"Piyotato"},"content":"        studentData2.setId(new StudentID(\"E1288122\"));","lastModifiedDate":"2022-11-07"},{"lineNumber":110,"author":{"gitId":"Piyotato"},"content":"        studentData2.setModule(new Module(\"CS2106\"));","lastModifiedDate":"2022-11-07"},{"lineNumber":111,"author":{"gitId":"Piyotato"},"content":"        studentData2.setPhone(new Phone(\"94732221\"));","lastModifiedDate":"2022-11-07"},{"lineNumber":112,"author":{"gitId":"Piyotato"},"content":"        studentData2.setGitUser(new GitName(\"sallysys\"));","lastModifiedDate":"2022-11-07"},{"lineNumber":113,"author":{"gitId":"Piyotato"},"content":"        assertTrue(model.hasStudent(new Student(studentData2)));","lastModifiedDate":"2022-11-07"},{"lineNumber":114,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":115,"author":{"gitId":"Piyotato"},"content":"        StudentData studentData3 \u003d new StudentData();","lastModifiedDate":"2022-11-07"},{"lineNumber":116,"author":{"gitId":"Piyotato"},"content":"        studentData3.setName(new Name(\"Sheyuan\"));","lastModifiedDate":"2022-11-07"},{"lineNumber":117,"author":{"gitId":"Piyotato"},"content":"        studentData3.setId(new StudentID(\"E2345229\"));","lastModifiedDate":"2022-11-07"},{"lineNumber":118,"author":{"gitId":"Piyotato"},"content":"        studentData3.setModule(new Module(\"CS2106\"));","lastModifiedDate":"2022-11-07"},{"lineNumber":119,"author":{"gitId":"Piyotato"},"content":"        studentData3.setPhone(new Phone(\"98771923\"));","lastModifiedDate":"2022-11-07"},{"lineNumber":120,"author":{"gitId":"Piyotato"},"content":"        studentData3.setGitUser(new GitName(\"piyopp\"));","lastModifiedDate":"2022-11-07"},{"lineNumber":121,"author":{"gitId":"Piyotato"},"content":"        studentData3.setTeleHandle(new TeleHandle(\"@piyopiyo\"));","lastModifiedDate":"2022-11-07"},{"lineNumber":122,"author":{"gitId":"Piyotato"},"content":"        assertTrue(model.hasStudent(new Student(studentData3)));","lastModifiedDate":"2022-11-07"},{"lineNumber":123,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":124,"author":{"gitId":"Piyotato"},"content":"        StudentData studentData4 \u003d new StudentData();","lastModifiedDate":"2022-11-07"},{"lineNumber":125,"author":{"gitId":"Piyotato"},"content":"        studentData4.setName(new Name(\"Po Hsien\"));","lastModifiedDate":"2022-11-07"},{"lineNumber":126,"author":{"gitId":"Piyotato"},"content":"        studentData4.setId(new StudentID(\"E0998281\"));","lastModifiedDate":"2022-11-07"},{"lineNumber":127,"author":{"gitId":"Piyotato"},"content":"        studentData4.setModule(new Module(\"CS2103T\"));","lastModifiedDate":"2022-11-07"},{"lineNumber":128,"author":{"gitId":"Piyotato"},"content":"        studentData4.setPhone(new Phone(\"98882110\"));","lastModifiedDate":"2022-11-07"},{"lineNumber":129,"author":{"gitId":"Piyotato"},"content":"        studentData4.setEmail(new Email(\"popo@popo.popo\"));","lastModifiedDate":"2022-11-07"},{"lineNumber":130,"author":{"gitId":"Piyotato"},"content":"        studentData4.setGitUser(new GitName(\"popopo\"));","lastModifiedDate":"2022-11-07"},{"lineNumber":131,"author":{"gitId":"Piyotato"},"content":"        assertTrue(model.hasStudent(new Student(studentData4)));","lastModifiedDate":"2022-11-07"},{"lineNumber":132,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":133,"author":{"gitId":"Piyotato"},"content":"        StudentData studentData5 \u003d new StudentData();","lastModifiedDate":"2022-11-07"},{"lineNumber":134,"author":{"gitId":"Piyotato"},"content":"        studentData5.setName(new Name(\"Po Taeto\"));","lastModifiedDate":"2022-11-07"},{"lineNumber":135,"author":{"gitId":"Piyotato"},"content":"        studentData5.setId(new StudentID(\"E0982113\"));","lastModifiedDate":"2022-11-07"},{"lineNumber":136,"author":{"gitId":"Piyotato"},"content":"        studentData5.setModule(new Module(\"CS2103T\"));","lastModifiedDate":"2022-11-07"},{"lineNumber":137,"author":{"gitId":"Piyotato"},"content":"        studentData5.setPhone(new Phone(\"96600302\"));","lastModifiedDate":"2022-11-07"},{"lineNumber":138,"author":{"gitId":"Piyotato"},"content":"        studentData5.setGitUser(new GitName(\"potatopo\"));","lastModifiedDate":"2022-11-07"},{"lineNumber":139,"author":{"gitId":"Piyotato"},"content":"        assertTrue(model.hasStudent(new Student(studentData5)));","lastModifiedDate":"2022-11-07"},{"lineNumber":140,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":141,"author":{"gitId":"Piyotato"},"content":"        StudentData studentData6 \u003d new StudentData();","lastModifiedDate":"2022-11-07"},{"lineNumber":142,"author":{"gitId":"Piyotato"},"content":"        studentData6.setName(new Name(\"Salad Yo\"));","lastModifiedDate":"2022-11-07"},{"lineNumber":143,"author":{"gitId":"Piyotato"},"content":"        studentData6.setId(new StudentID(\"E0123111\"));","lastModifiedDate":"2022-11-07"},{"lineNumber":144,"author":{"gitId":"Piyotato"},"content":"        studentData6.setModule(new Module(\"CS2106\"));","lastModifiedDate":"2022-11-07"},{"lineNumber":145,"author":{"gitId":"Piyotato"},"content":"        studentData6.setPhone(new Phone(\"89123612\"));","lastModifiedDate":"2022-11-07"},{"lineNumber":146,"author":{"gitId":"Piyotato"},"content":"        studentData6.setGitUser(new GitName(\"saladydy\"));","lastModifiedDate":"2022-11-07"},{"lineNumber":147,"author":{"gitId":"Piyotato"},"content":"        assertTrue(model.hasStudent(new Student(studentData6)));","lastModifiedDate":"2022-11-07"},{"lineNumber":148,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":149,"author":{"gitId":"Piyotato"},"content":"        StudentData studentData7 \u003d new StudentData();","lastModifiedDate":"2022-11-07"},{"lineNumber":150,"author":{"gitId":"Piyotato"},"content":"        studentData7.setName(new Name(\"Tom Aito\"));","lastModifiedDate":"2022-11-07"},{"lineNumber":151,"author":{"gitId":"Piyotato"},"content":"        studentData7.setId(new StudentID(\"E1728221\"));","lastModifiedDate":"2022-11-07"},{"lineNumber":152,"author":{"gitId":"Piyotato"},"content":"        studentData7.setModule(new Module(\"CS2106\"));","lastModifiedDate":"2022-11-07"},{"lineNumber":153,"author":{"gitId":"Piyotato"},"content":"        studentData7.setPhone(new Phone(\"88456973\"));","lastModifiedDate":"2022-11-07"},{"lineNumber":154,"author":{"gitId":"Piyotato"},"content":"        studentData7.setGitUser(new GitName(\"tomatoto\"));","lastModifiedDate":"2022-11-07"},{"lineNumber":155,"author":{"gitId":"Piyotato"},"content":"        assertTrue(model.hasStudent(new Student(studentData7)));","lastModifiedDate":"2022-11-07"},{"lineNumber":156,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":157,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-11-07"},{"lineNumber":158,"author":{"gitId":"Piyotato"},"content":"}","lastModifiedDate":"2022-11-07"}],"authorContributionMap":{"Piyotato":158}},{"path":"src/test/java/seedu/studmap/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.logic.parser;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":3,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"dr-arrgghh"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"dr-arrgghh"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"dr-arrgghh"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.GIT_DESC_AMY;","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"dr-arrgghh"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.GIT_DESC_BOB;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"dr-arrgghh"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.HANDLE_DESC_AMY;","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"dr-arrgghh"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.HANDLE_DESC_BOB;","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"dr-arrgghh"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.ID_DESC_AMY;","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"dr-arrgghh"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.ID_DESC_BOB;","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"Piyotato"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.ID_DESC_CHARLIE;","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"Piyotato"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.INVALID_EMAIL;","lastModifiedDate":"2022-11-01"},{"lineNumber":14,"author":{"gitId":"dr-arrgghh"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"Piyotato"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.INVALID_NAME;","lastModifiedDate":"2022-11-01"},{"lineNumber":16,"author":{"gitId":"dr-arrgghh"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"Piyotato"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.INVALID_PHONE;","lastModifiedDate":"2022-11-01"},{"lineNumber":18,"author":{"gitId":"dr-arrgghh"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"Piyotato"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.INVALID_TAG;","lastModifiedDate":"2022-11-01"},{"lineNumber":20,"author":{"gitId":"dr-arrgghh"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.MODULE_DESC_AMY;","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.MODULE_DESC_BOB;","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"Piyotato"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.MODULE_DESC_CHARLIE;","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"dr-arrgghh"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"dr-arrgghh"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"Piyotato"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.NAME_DESC_CHARLIE;","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"dr-arrgghh"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"dr-arrgghh"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"dr-arrgghh"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"dr-arrgghh"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"dr-arrgghh"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"dr-arrgghh"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2022-10-26"},{"lineNumber":33,"author":{"gitId":"Piyotato"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.VALID_ID_CHARLIE;","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"Piyotato"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.VALID_MODULE_CHARLIE;","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"Piyotato"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.VALID_NAME_CHARLIE;","lastModifiedDate":"2022-10-26"},{"lineNumber":36,"author":{"gitId":"dr-arrgghh"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-10-26"},{"lineNumber":37,"author":{"gitId":"dr-arrgghh"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"Piyotato"},"content":"import static seedu.studmap.logic.parser.AddCommandParser.getMissingPrefixesMessage;","lastModifiedDate":"2022-11-01"},{"lineNumber":39,"author":{"gitId":"Piyotato"},"content":"import static seedu.studmap.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2022-11-01"},{"lineNumber":40,"author":{"gitId":"Piyotato"},"content":"import static seedu.studmap.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2022-11-01"},{"lineNumber":41,"author":{"gitId":"Piyotato"},"content":"import static seedu.studmap.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-11-01"},{"lineNumber":42,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-15"},{"lineNumber":43,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-15"},{"lineNumber":44,"author":{"gitId":"Piyotato"},"content":"import static seedu.studmap.logic.parser.ParserUtil.getInvalidMessage;","lastModifiedDate":"2022-11-01"},{"lineNumber":45,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.testutil.TypicalStudents.AMY;","lastModifiedDate":"2022-10-15"},{"lineNumber":46,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.testutil.TypicalStudents.BOB;","lastModifiedDate":"2022-10-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"Piyotato"},"content":"import java.util.List;","lastModifiedDate":"2022-11-01"},{"lineNumber":49,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.logic.commands.AddCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":53,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.student.Email;","lastModifiedDate":"2022-10-15"},{"lineNumber":54,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.student.Name;","lastModifiedDate":"2022-10-15"},{"lineNumber":55,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.student.Phone;","lastModifiedDate":"2022-10-15"},{"lineNumber":56,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.student.Student;","lastModifiedDate":"2022-10-15"},{"lineNumber":57,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.tag.Tag;","lastModifiedDate":"2022-10-15"},{"lineNumber":58,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.testutil.StudentBuilder;","lastModifiedDate":"2022-10-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":61,"author":{"gitId":"Piyotato"},"content":"    private final AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2022-11-01"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":65,"author":{"gitId":"comicalromance"},"content":"        Student expectedStudent \u003d new StudentBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":68,"author":{"gitId":"dr-arrgghh"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-26"},{"lineNumber":69,"author":{"gitId":"comicalromance"},"content":"                + MODULE_DESC_BOB + ID_DESC_BOB + GIT_DESC_BOB + HANDLE_DESC_BOB","lastModifiedDate":"2022-10-26"},{"lineNumber":70,"author":{"gitId":"comicalromance"},"content":"                + TAG_DESC_FRIEND, new AddCommand(expectedStudent));","lastModifiedDate":"2022-10-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":74,"author":{"gitId":"comicalromance"},"content":"                + MODULE_DESC_BOB + ID_DESC_BOB + GIT_DESC_BOB + HANDLE_DESC_BOB","lastModifiedDate":"2022-10-26"},{"lineNumber":75,"author":{"gitId":"comicalromance"},"content":"                + TAG_DESC_FRIEND, new AddCommand(expectedStudent));","lastModifiedDate":"2022-10-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":79,"author":{"gitId":"comicalromance"},"content":"                + MODULE_DESC_BOB + ID_DESC_BOB + GIT_DESC_BOB + HANDLE_DESC_BOB","lastModifiedDate":"2022-10-26"},{"lineNumber":80,"author":{"gitId":"dr-arrgghh"},"content":"                + TAG_DESC_FRIEND, new AddCommand(expectedStudent));","lastModifiedDate":"2022-10-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":84,"author":{"gitId":"comicalromance"},"content":"                + MODULE_DESC_BOB + ID_DESC_BOB + GIT_DESC_BOB + HANDLE_DESC_BOB","lastModifiedDate":"2022-10-26"},{"lineNumber":85,"author":{"gitId":"dr-arrgghh"},"content":"                + TAG_DESC_FRIEND, new AddCommand(expectedStudent));","lastModifiedDate":"2022-10-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":88,"author":{"gitId":"comicalromance"},"content":"        Student expectedStudentMultipleTags \u003d new StudentBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                                                                     .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":90,"author":{"gitId":"dr-arrgghh"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-26"},{"lineNumber":91,"author":{"gitId":"comicalromance"},"content":"                + MODULE_DESC_BOB + ID_DESC_BOB + GIT_DESC_BOB + HANDLE_DESC_BOB","lastModifiedDate":"2022-10-26"},{"lineNumber":92,"author":{"gitId":"comicalromance"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new AddCommand(expectedStudentMultipleTags));","lastModifiedDate":"2022-10-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":97,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":99,"author":{"gitId":"comicalromance"},"content":"        Student expectedStudent \u003d new StudentBuilder(AMY).withTags().build();","lastModifiedDate":"2022-10-15"},{"lineNumber":100,"author":{"gitId":"comicalromance"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + MODULE_DESC_AMY","lastModifiedDate":"2022-10-26"},{"lineNumber":101,"author":{"gitId":"comicalromance"},"content":"                        + ID_DESC_AMY + GIT_DESC_AMY + HANDLE_DESC_AMY,","lastModifiedDate":"2022-10-26"},{"lineNumber":102,"author":{"gitId":"comicalromance"},"content":"                new AddCommand(expectedStudent));","lastModifiedDate":"2022-10-15"},{"lineNumber":103,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":104,"author":{"gitId":"Piyotato"},"content":"        Student minimalStudent \u003d new StudentBuilder()","lastModifiedDate":"2022-10-26"},{"lineNumber":105,"author":{"gitId":"Piyotato"},"content":"                .withName(VALID_NAME_CHARLIE).withId(VALID_ID_CHARLIE).withModule(VALID_MODULE_CHARLIE).build();","lastModifiedDate":"2022-10-26"},{"lineNumber":106,"author":{"gitId":"Piyotato"},"content":"        assertParseSuccess(parser, NAME_DESC_CHARLIE + MODULE_DESC_CHARLIE + ID_DESC_CHARLIE,","lastModifiedDate":"2022-10-26"},{"lineNumber":107,"author":{"gitId":"Piyotato"},"content":"                new AddCommand(minimalStudent));","lastModifiedDate":"2022-10-26"},{"lineNumber":108,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":109,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":116,"author":{"gitId":"Piyotato"},"content":"        // missing name","lastModifiedDate":"2022-10-26"},{"lineNumber":117,"author":{"gitId":"Piyotato"},"content":"        assertParseFailure(parser, PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-26"},{"lineNumber":118,"author":{"gitId":"Piyotato"},"content":"                + MODULE_DESC_BOB + ID_DESC_BOB + GIT_DESC_BOB + HANDLE_DESC_BOB","lastModifiedDate":"2022-10-26"},{"lineNumber":119,"author":{"gitId":"Piyotato"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, expectedMessage","lastModifiedDate":"2022-11-01"},{"lineNumber":120,"author":{"gitId":"Piyotato"},"content":"                + \"\\n\" + getMissingPrefixesMessage(List.of(PREFIX_NAME)));","lastModifiedDate":"2022-11-01"},{"lineNumber":121,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":122,"author":{"gitId":"Piyotato"},"content":"        // missing module","lastModifiedDate":"2022-10-26"},{"lineNumber":123,"author":{"gitId":"Piyotato"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-26"},{"lineNumber":124,"author":{"gitId":"Piyotato"},"content":"                + ID_DESC_BOB + GIT_DESC_BOB + HANDLE_DESC_BOB","lastModifiedDate":"2022-10-26"},{"lineNumber":125,"author":{"gitId":"Piyotato"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, expectedMessage","lastModifiedDate":"2022-11-01"},{"lineNumber":126,"author":{"gitId":"Piyotato"},"content":"                + \"\\n\" + getMissingPrefixesMessage(List.of(PREFIX_MODULE)));","lastModifiedDate":"2022-11-01"},{"lineNumber":127,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":128,"author":{"gitId":"Piyotato"},"content":"        // missing student id","lastModifiedDate":"2022-10-26"},{"lineNumber":129,"author":{"gitId":"Piyotato"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-26"},{"lineNumber":130,"author":{"gitId":"Piyotato"},"content":"                + MODULE_DESC_BOB + GIT_DESC_BOB + HANDLE_DESC_BOB","lastModifiedDate":"2022-10-26"},{"lineNumber":131,"author":{"gitId":"Piyotato"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, expectedMessage","lastModifiedDate":"2022-11-01"},{"lineNumber":132,"author":{"gitId":"Piyotato"},"content":"                + \"\\n\" + getMissingPrefixesMessage(List.of(PREFIX_ID)));","lastModifiedDate":"2022-11-01"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":138,"author":{"gitId":"dr-arrgghh"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-26"},{"lineNumber":139,"author":{"gitId":"comicalromance"},"content":"                + MODULE_DESC_BOB + ID_DESC_BOB + GIT_DESC_BOB + HANDLE_DESC_BOB","lastModifiedDate":"2022-10-26"},{"lineNumber":140,"author":{"gitId":"Piyotato"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, getInvalidMessage(Name.MESSAGE_CONSTRAINTS, INVALID_NAME));","lastModifiedDate":"2022-11-01"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":143,"author":{"gitId":"dr-arrgghh"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-26"},{"lineNumber":144,"author":{"gitId":"comicalromance"},"content":"                + MODULE_DESC_BOB + ID_DESC_BOB + GIT_DESC_BOB + HANDLE_DESC_BOB","lastModifiedDate":"2022-10-26"},{"lineNumber":145,"author":{"gitId":"Piyotato"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, getInvalidMessage(Phone.MESSAGE_CONSTRAINTS, INVALID_PHONE));","lastModifiedDate":"2022-11-01"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":148,"author":{"gitId":"dr-arrgghh"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC","lastModifiedDate":"2022-10-26"},{"lineNumber":149,"author":{"gitId":"comicalromance"},"content":"                + MODULE_DESC_BOB + ID_DESC_BOB + GIT_DESC_BOB + HANDLE_DESC_BOB","lastModifiedDate":"2022-10-26"},{"lineNumber":150,"author":{"gitId":"Piyotato"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, getInvalidMessage(Email.MESSAGE_CONSTRAINTS, INVALID_EMAIL));","lastModifiedDate":"2022-11-01"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":153,"author":{"gitId":"dr-arrgghh"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-26"},{"lineNumber":154,"author":{"gitId":"comicalromance"},"content":"                + MODULE_DESC_BOB + ID_DESC_BOB + GIT_DESC_BOB + HANDLE_DESC_BOB","lastModifiedDate":"2022-10-26"},{"lineNumber":155,"author":{"gitId":"Piyotato"},"content":"                + INVALID_TAG_DESC, getInvalidMessage(Tag.MESSAGE_CONSTRAINTS, INVALID_TAG));","lastModifiedDate":"2022-11-01"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":158,"author":{"gitId":"dr-arrgghh"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-26"},{"lineNumber":159,"author":{"gitId":"comicalromance"},"content":"                        + MODULE_DESC_BOB + ID_DESC_BOB + GIT_DESC_BOB + HANDLE_DESC_BOB,","lastModifiedDate":"2022-10-26"},{"lineNumber":160,"author":{"gitId":"Piyotato"},"content":"                getInvalidMessage(Name.MESSAGE_CONSTRAINTS, INVALID_NAME));","lastModifiedDate":"2022-11-01"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":164,"author":{"gitId":"Piyotato"},"content":"                        + MODULE_DESC_BOB + ID_DESC_BOB + GIT_DESC_BOB + HANDLE_DESC_BOB","lastModifiedDate":"2022-10-26"},{"lineNumber":165,"author":{"gitId":"Piyotato"},"content":"                        + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2022-10-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"dr-arrgghh":31,"Piyotato":50,"-":52,"comicalromance":35}},{"path":"src/test/java/seedu/studmap/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.logic.parser;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"-":149,"comicalromance":1}},{"path":"src/test/java/seedu/studmap/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.logic.parser;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.logic.commands.Command;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser\u003c? extends Command\u003e parser, String userInput,","lastModifiedDate":"2022-02-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            Command expectedCommand) {","lastModifiedDate":"2022-02-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser\u003c? extends Command\u003e parser, String userInput, String expectedMessage) {","lastModifiedDate":"2022-02-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"Piyotato"},"content":"            Command c \u003d parser.parse(userInput);","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"Piyotato":1,"-":35,"comicalromance":3}},{"path":"src/test/java/seedu/studmap/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.logic.parser;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.commons.core.index.AllIndexGenerator;","lastModifiedDate":"2022-11-07"},{"lineNumber":11,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.commons.core.index.SingleIndexGenerator;","lastModifiedDate":"2022-11-07"},{"lineNumber":12,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.logic.commands.DeleteCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":27,"author":{"gitId":"comicalromance"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(new SingleIndexGenerator(INDEX_FIRST_STUDENT)));","lastModifiedDate":"2022-11-07"},{"lineNumber":28,"author":{"gitId":"comicalromance"},"content":"        assertParseSuccess(parser, \"all\", new DeleteCommand(new AllIndexGenerator()));","lastModifiedDate":"2022-11-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"-":25,"comicalromance":10}},{"path":"src/test/java/seedu/studmap/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.logic.parser;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":3,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"Piyotato"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.INVALID_EMAIL;","lastModifiedDate":"2022-11-01"},{"lineNumber":7,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"Piyotato"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.INVALID_NAME;","lastModifiedDate":"2022-11-01"},{"lineNumber":9,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"Piyotato"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.INVALID_PHONE;","lastModifiedDate":"2022-11-01"},{"lineNumber":11,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"Piyotato"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.INVALID_TAG;","lastModifiedDate":"2022-11-01"},{"lineNumber":13,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-15"},{"lineNumber":24,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2022-10-15"},{"lineNumber":30,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.testutil.TypicalIndexes.INDEX_SECOND_STUDENT;","lastModifiedDate":"2022-10-15"},{"lineNumber":31,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.testutil.TypicalIndexes.INDEX_THIRD_STUDENT;","lastModifiedDate":"2022-10-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.commons.core.index.Index;","lastModifiedDate":"2022-10-15"},{"lineNumber":36,"author":{"gitId":"Piyotato"},"content":"import seedu.studmap.commons.core.index.SingleIndexGenerator;","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.logic.commands.EditCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":38,"author":{"gitId":"Piyotato"},"content":"import seedu.studmap.logic.commands.EditCommand.EditCommandStudentEditor;","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.student.Email;","lastModifiedDate":"2022-10-15"},{"lineNumber":40,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.student.Name;","lastModifiedDate":"2022-10-15"},{"lineNumber":41,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.student.Phone;","lastModifiedDate":"2022-10-15"},{"lineNumber":42,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.tag.Tag;","lastModifiedDate":"2022-10-15"},{"lineNumber":43,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.testutil.EditStudentDescriptorBuilder;","lastModifiedDate":"2022-10-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"Piyotato"},"content":"    private static final String EMPTY \u003d \"\";","lastModifiedDate":"2022-11-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"Piyotato"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC,","lastModifiedDate":"2022-11-01"},{"lineNumber":85,"author":{"gitId":"Piyotato"},"content":"                ParserUtil.getInvalidMessage(Name.MESSAGE_CONSTRAINTS, INVALID_NAME)); // invalid name","lastModifiedDate":"2022-11-01"},{"lineNumber":86,"author":{"gitId":"Piyotato"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC,","lastModifiedDate":"2022-11-01"},{"lineNumber":87,"author":{"gitId":"Piyotato"},"content":"                ParserUtil.getInvalidMessage(Phone.MESSAGE_CONSTRAINTS, INVALID_PHONE)); // invalid phone","lastModifiedDate":"2022-11-01"},{"lineNumber":88,"author":{"gitId":"Piyotato"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC,","lastModifiedDate":"2022-11-01"},{"lineNumber":89,"author":{"gitId":"Piyotato"},"content":"                ParserUtil.getInvalidMessage(Email.MESSAGE_CONSTRAINTS, INVALID_EMAIL)); // invalid email","lastModifiedDate":"2022-11-01"},{"lineNumber":90,"author":{"gitId":"Piyotato"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC,","lastModifiedDate":"2022-11-01"},{"lineNumber":91,"author":{"gitId":"Piyotato"},"content":"                ParserUtil.getInvalidMessage(Tag.MESSAGE_CONSTRAINTS, INVALID_TAG)); // invalid tag","lastModifiedDate":"2022-11-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"Piyotato"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY,","lastModifiedDate":"2022-11-01"},{"lineNumber":95,"author":{"gitId":"Piyotato"},"content":"                ParserUtil.getInvalidMessage(Phone.MESSAGE_CONSTRAINTS, INVALID_PHONE));","lastModifiedDate":"2022-11-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"Piyotato"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC,","lastModifiedDate":"2022-11-01"},{"lineNumber":100,"author":{"gitId":"Piyotato"},"content":"                ParserUtil.getInvalidMessage(Phone.MESSAGE_CONSTRAINTS, INVALID_PHONE));","lastModifiedDate":"2022-11-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":102,"author":{"gitId":"comicalromance"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Student} being edited,","lastModifiedDate":"2022-10-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"Piyotato"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY,","lastModifiedDate":"2022-11-01"},{"lineNumber":105,"author":{"gitId":"Piyotato"},"content":"                ParserUtil.getInvalidMessage(Tag.MESSAGE_CONSTRAINTS, EMPTY));","lastModifiedDate":"2022-11-01"},{"lineNumber":106,"author":{"gitId":"Piyotato"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND,","lastModifiedDate":"2022-11-01"},{"lineNumber":107,"author":{"gitId":"Piyotato"},"content":"                ParserUtil.getInvalidMessage(Tag.MESSAGE_CONSTRAINTS, EMPTY));","lastModifiedDate":"2022-11-01"},{"lineNumber":108,"author":{"gitId":"Piyotato"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND,","lastModifiedDate":"2022-11-01"},{"lineNumber":109,"author":{"gitId":"Piyotato"},"content":"                ParserUtil.getInvalidMessage(Tag.MESSAGE_CONSTRAINTS, EMPTY));","lastModifiedDate":"2022-11-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"comicalromance"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_PHONE_AMY,","lastModifiedDate":"2022-10-26"},{"lineNumber":113,"author":{"gitId":"Piyotato"},"content":"                ParserUtil.getInvalidMessage(Name.MESSAGE_CONSTRAINTS, INVALID_NAME));","lastModifiedDate":"2022-11-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":118,"author":{"gitId":"comicalromance"},"content":"        Index targetIndex \u003d INDEX_SECOND_STUDENT;","lastModifiedDate":"2022-10-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":120,"author":{"gitId":"comicalromance"},"content":"                + EMAIL_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2022-10-26"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"Piyotato"},"content":"        EditCommandStudentEditor editor \u003d new EditStudentDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2022-10-20"},{"lineNumber":123,"author":{"gitId":"comicalromance"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2022-10-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"Piyotato"},"content":"        EditCommand expectedCommand \u003d new EditCommand(new SingleIndexGenerator(targetIndex), editor);","lastModifiedDate":"2022-10-20"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":132,"author":{"gitId":"comicalromance"},"content":"        Index targetIndex \u003d INDEX_FIRST_STUDENT;","lastModifiedDate":"2022-10-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"Piyotato"},"content":"        EditCommandStudentEditor editor \u003d new EditStudentDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-10-20"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"Piyotato"},"content":"        EditCommand expectedCommand \u003d new EditCommand(new SingleIndexGenerator(targetIndex), editor);","lastModifiedDate":"2022-10-20"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"comicalromance"},"content":"        Index targetIndex \u003d INDEX_THIRD_STUDENT;","lastModifiedDate":"2022-10-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":147,"author":{"gitId":"Piyotato"},"content":"        EditCommandStudentEditor editor \u003d","lastModifiedDate":"2022-10-20"},{"lineNumber":148,"author":{"gitId":"comicalromance"},"content":"                new EditStudentDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2022-10-15"},{"lineNumber":149,"author":{"gitId":"Piyotato"},"content":"        EditCommand expectedCommand \u003d new EditCommand(new SingleIndexGenerator(targetIndex), editor);","lastModifiedDate":"2022-10-20"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":154,"author":{"gitId":"Piyotato"},"content":"        editor \u003d new EditStudentDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2022-10-20"},{"lineNumber":155,"author":{"gitId":"Piyotato"},"content":"        expectedCommand \u003d new EditCommand(new SingleIndexGenerator(targetIndex), editor);","lastModifiedDate":"2022-10-20"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":160,"author":{"gitId":"Piyotato"},"content":"        editor \u003d new EditStudentDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2022-10-20"},{"lineNumber":161,"author":{"gitId":"Piyotato"},"content":"        expectedCommand \u003d new EditCommand(new SingleIndexGenerator(targetIndex), editor);","lastModifiedDate":"2022-10-20"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":166,"author":{"gitId":"Piyotato"},"content":"        editor \u003d new EditStudentDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-20"},{"lineNumber":167,"author":{"gitId":"Piyotato"},"content":"        expectedCommand \u003d new EditCommand(new SingleIndexGenerator(targetIndex), editor);","lastModifiedDate":"2022-10-20"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":173,"author":{"gitId":"comicalromance"},"content":"        Index targetIndex \u003d INDEX_FIRST_STUDENT;","lastModifiedDate":"2022-10-15"},{"lineNumber":174,"author":{"gitId":"comicalromance"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2022-10-26"},{"lineNumber":175,"author":{"gitId":"comicalromance"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2022-10-26"},{"lineNumber":176,"author":{"gitId":"comicalromance"},"content":"                + PHONE_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2022-10-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"Piyotato"},"content":"        EditCommandStudentEditor editor \u003d new EditStudentDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-10-20"},{"lineNumber":179,"author":{"gitId":"comicalromance"},"content":"                .withEmail(VALID_EMAIL_BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":181,"author":{"gitId":"Piyotato"},"content":"        EditCommand expectedCommand \u003d new EditCommand(new SingleIndexGenerator(targetIndex), editor);","lastModifiedDate":"2022-10-20"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"comicalromance"},"content":"        Index targetIndex \u003d INDEX_FIRST_STUDENT;","lastModifiedDate":"2022-10-15"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":191,"author":{"gitId":"Piyotato"},"content":"        EditCommandStudentEditor editor \u003d new EditStudentDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-10-20"},{"lineNumber":192,"author":{"gitId":"Piyotato"},"content":"        EditCommand expectedCommand \u003d new EditCommand(new SingleIndexGenerator(targetIndex), editor);","lastModifiedDate":"2022-10-20"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":196,"author":{"gitId":"comicalromance"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2022-10-26"},{"lineNumber":197,"author":{"gitId":"Piyotato"},"content":"        editor \u003d new EditStudentDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2022-10-20"},{"lineNumber":198,"author":{"gitId":"comicalromance"},"content":"                .build();","lastModifiedDate":"2022-10-26"},{"lineNumber":199,"author":{"gitId":"Piyotato"},"content":"        expectedCommand \u003d new EditCommand(new SingleIndexGenerator(targetIndex), editor);","lastModifiedDate":"2022-10-20"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":205,"author":{"gitId":"comicalromance"},"content":"        Index targetIndex \u003d INDEX_THIRD_STUDENT;","lastModifiedDate":"2022-10-15"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"Piyotato"},"content":"        EditCommandStudentEditor editor \u003d new EditStudentDescriptorBuilder().withTags().build();","lastModifiedDate":"2022-10-20"},{"lineNumber":209,"author":{"gitId":"Piyotato"},"content":"        EditCommand expectedCommand \u003d new EditCommand(new SingleIndexGenerator(targetIndex), editor);","lastModifiedDate":"2022-10-20"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"Piyotato":46,"-":116,"comicalromance":51}},{"path":"src/test/java/seedu/studmap/logic/parser/FilterCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.logic.parser;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"dr-arrgghh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.logic.commands.FilterCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"dr-arrgghh"},"content":"public class FilterCommandParserTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"dr-arrgghh"},"content":"    private FilterCommandParser parser \u003d new FilterCommandParser();","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"dr-arrgghh"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"dr-arrgghh"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"dr-arrgghh"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"dr-arrgghh"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"dr-arrgghh"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"dr-arrgghh"},"content":"    /*@Test","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"dr-arrgghh"},"content":"    public void parse_validArgs_returnsFilterCommand() {","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"dr-arrgghh"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"dr-arrgghh"},"content":"        assertParseSuccess(parser, \"friends colleagues\",","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"dr-arrgghh"},"content":"                new FilterCommand(new TagContainsKeywordsPredicate(Arrays.asList(\"friends\", \"colleagues\"))));","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"dr-arrgghh"},"content":"    }*/","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"dr-arrgghh"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"dr-arrgghh":24,"comicalromance":4}},{"path":"src/test/java/seedu/studmap/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.logic.parser;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.logic.commands.FindCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.student.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"-":28,"comicalromance":6}},{"path":"src/test/java/seedu/studmap/logic/parser/MarkCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.logic.parser;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"comicalromance"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"Piyotato"},"content":"import seedu.studmap.commons.core.index.SingleIndexGenerator;","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.logic.commands.MarkCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.student.Attendance;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"comicalromance"},"content":"public class MarkCommandParserTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"comicalromance"},"content":"    private MarkCommandParser parser \u003d new MarkCommandParser();","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"comicalromance"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"comicalromance"},"content":"    public void parse_validArgs_returnUnmarkCommand() {","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"comicalromance"},"content":"        String className \u003d \"T01\";","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"Piyotato"},"content":"        assertParseSuccess(parser, \"1 absent c/   \" + className,","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"Piyotato"},"content":"                new MarkCommand(new SingleIndexGenerator(INDEX_FIRST_STUDENT),","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"Piyotato"},"content":"                        new MarkCommand.MarkCommandStudentEditor(","lastModifiedDate":"2022-11-06"},{"lineNumber":25,"author":{"gitId":"Piyotato"},"content":"                                new Attendance(className, Attendance.Status.ABSENT))));","lastModifiedDate":"2022-11-06"},{"lineNumber":26,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"comicalromance"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"comicalromance"},"content":"    public void parse_invalidOption_throwsParseException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"Piyotato"},"content":"        assertParseFailure(parser, \"1 asd c/ T01\", Attendance.MESSAGE_STATUS_CONSTRAINTS);","lastModifiedDate":"2022-11-06"},{"lineNumber":31,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"comicalromance"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"comicalromance"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"Piyotato"},"content":"        assertParseFailure(parser, \"a\",","lastModifiedDate":"2022-11-06"},{"lineNumber":36,"author":{"gitId":"Piyotato"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, MarkCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-11-06"},{"lineNumber":37,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"comicalromance"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"Piyotato":8,"comicalromance":30}},{"path":"src/test/java/seedu/studmap/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.logic.parser;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.student.Email;","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.student.Name;","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.student.Phone;","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.tag.Tag;","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"Piyotato"},"content":"    private static final String INVALID_NAME \u003d \"R\\nchel\";","lastModifiedDate":"2022-11-05"},{"lineNumber":24,"author":{"gitId":"comicalromance"},"content":"    private static final String INVALID_PHONE \u003d \"-651234\";","lastModifiedDate":"2022-11-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"comicalromance"},"content":"        assertEquals(INDEX_FIRST_STUDENT, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2022-10-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"comicalromance"},"content":"        assertEquals(INDEX_FIRST_STUDENT, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2022-10-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"Piyotato":1,"-":157,"comicalromance":12}},{"path":"src/test/java/seedu/studmap/logic/parser/StudMapParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.logic.parser;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"Piyotato"},"content":"import seedu.studmap.commons.core.index.SingleIndexGenerator;","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.logic.commands.AddCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.logic.commands.ClearCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.logic.commands.DeleteCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.logic.commands.EditCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.logic.commands.ExitCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.logic.commands.FindCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.logic.commands.HelpCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":24,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.logic.commands.ListCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.student.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.student.Student;","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.testutil.EditStudentDescriptorBuilder;","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.testutil.StudentBuilder;","lastModifiedDate":"2022-10-15"},{"lineNumber":30,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.testutil.StudentUtil;","lastModifiedDate":"2022-10-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"comicalromance"},"content":"public class StudMapParserTest {","lastModifiedDate":"2022-10-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"comicalromance"},"content":"    private final StudMapParser parser \u003d new StudMapParser();","lastModifiedDate":"2022-10-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"comicalromance"},"content":"        Student student \u003d new StudentBuilder().build();","lastModifiedDate":"2022-10-15"},{"lineNumber":39,"author":{"gitId":"comicalromance"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(StudentUtil.getAddCommand(student));","lastModifiedDate":"2022-10-15"},{"lineNumber":40,"author":{"gitId":"comicalromance"},"content":"        assertEquals(new AddCommand(student), command);","lastModifiedDate":"2022-10-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"comicalromance"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_STUDENT.getOneBased());","lastModifiedDate":"2022-10-15"},{"lineNumber":53,"author":{"gitId":"comicalromance"},"content":"        assertEquals(new DeleteCommand(new SingleIndexGenerator(INDEX_FIRST_STUDENT)), command);","lastModifiedDate":"2022-11-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"comicalromance"},"content":"        Student student \u003d new StudentBuilder().build();","lastModifiedDate":"2022-10-15"},{"lineNumber":59,"author":{"gitId":"Piyotato"},"content":"        EditCommand.EditCommandStudentEditor descriptor \u003d new EditStudentDescriptorBuilder(student).build();","lastModifiedDate":"2022-10-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"comicalromance"},"content":"                + INDEX_FIRST_STUDENT.getOneBased() + \" \" + StudentUtil.getEditstudentDescriptorDetails(descriptor));","lastModifiedDate":"2022-10-15"},{"lineNumber":62,"author":{"gitId":"Piyotato"},"content":"        assertEquals(new EditCommand(new SingleIndexGenerator(INDEX_FIRST_STUDENT), descriptor),","lastModifiedDate":"2022-10-20"},{"lineNumber":63,"author":{"gitId":"Piyotato"},"content":"                command);","lastModifiedDate":"2022-10-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"Piyotato":4,"-":70,"comicalromance":28}},{"path":"src/test/java/seedu/studmap/logic/parser/UngradeCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lpohsien"},"content":"package seedu.studmap.logic.parser;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"lpohsien"},"content":"import static seedu.studmap.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"lpohsien"},"content":"import static seedu.studmap.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"lpohsien"},"content":"import static seedu.studmap.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"lpohsien"},"content":"import static seedu.studmap.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"lpohsien"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"lpohsien"},"content":"import seedu.studmap.commons.core.index.SingleIndexGenerator;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"lpohsien"},"content":"import seedu.studmap.logic.commands.UngradeCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"lpohsien"},"content":"import seedu.studmap.model.student.Assignment;","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"lpohsien"},"content":"public class UngradeCommandParserTest {","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"lpohsien"},"content":"    private UngradeCommandParser parser \u003d new UngradeCommandParser();","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"lpohsien"},"content":"    @Test","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"lpohsien"},"content":"    public void parse_validArgsAssignment_returnUngradeCommand() {","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"lpohsien"},"content":"        String assignmentName \u003d \"A01\";","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"lpohsien"},"content":"        assertParseSuccess(parser, \"1 a/   \" + assignmentName,","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"lpohsien"},"content":"                new UngradeCommand(new SingleIndexGenerator(INDEX_FIRST_STUDENT),","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"lpohsien"},"content":"                        new UngradeCommand.UngradeCommandStudentEditor(","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"lpohsien"},"content":"                                new Assignment(assignmentName, Assignment.Status.NEW))));","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"lpohsien"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"lpohsien"},"content":"    @Test","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"lpohsien"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"lpohsien"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, UngradeCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"lpohsien"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"lpohsien"},"content":"}","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"lpohsien":31}},{"path":"src/test/java/seedu/studmap/logic/parser/UnmarkCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.logic.parser;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"comicalromance"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"lpohsien"},"content":"import seedu.studmap.commons.core.index.SingleIndexGenerator;","lastModifiedDate":"2022-10-24"},{"lineNumber":11,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.logic.commands.UnmarkCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.student.Attendance;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"comicalromance"},"content":"public class UnmarkCommandParserTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"comicalromance"},"content":"    private UnmarkCommandParser parser \u003d new UnmarkCommandParser();","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"comicalromance"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"lpohsien"},"content":"    public void parse_validArgsAttendance_returnUnmarkCommand() {","lastModifiedDate":"2022-10-24"},{"lineNumber":20,"author":{"gitId":"comicalromance"},"content":"        String className \u003d \"T01\";","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"lpohsien"},"content":"        assertParseSuccess(parser, \"1 c/   \" + className,","lastModifiedDate":"2022-10-24"},{"lineNumber":22,"author":{"gitId":"lpohsien"},"content":"                new UnmarkCommand(new SingleIndexGenerator(INDEX_FIRST_STUDENT),","lastModifiedDate":"2022-10-24"},{"lineNumber":23,"author":{"gitId":"Piyotato"},"content":"                        new UnmarkCommand.UnmarkCommandStudentEditor(new Attendance(className,","lastModifiedDate":"2022-11-06"},{"lineNumber":24,"author":{"gitId":"Piyotato"},"content":"                                Attendance.Status.PRESENT))));","lastModifiedDate":"2022-11-06"},{"lineNumber":25,"author":{"gitId":"lpohsien"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":26,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":27,"author":{"gitId":"comicalromance"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"comicalromance"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"comicalromance"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, UnmarkCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"comicalromance"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"Piyotato":2,"comicalromance":24,"lpohsien":6}},{"path":"src/test/java/seedu/studmap/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.model;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.model.Model.PREDICATE_SHOW_ALL_STUDENTS;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.testutil.TypicalStudents.ALICE;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.testutil.TypicalStudents.BENSON;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.commons.core.GuiSettings;","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.student.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.testutil.StudMapBuilder;","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"comicalromance"},"content":"        assertEquals(new StudMap(), new StudMap(modelManager.getStudMap()));","lastModifiedDate":"2022-10-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"comicalromance"},"content":"        userPrefs.setStudMapFilePath(Paths.get(\"studmap/book/file/path\"));","lastModifiedDate":"2022-10-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"comicalromance"},"content":"        userPrefs.setStudMapFilePath(Paths.get(\"new/studmap/book/file/path\"));","lastModifiedDate":"2022-10-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"comicalromance"},"content":"    public void setStudMapFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2022-10-15"},{"lineNumber":65,"author":{"gitId":"comicalromance"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setStudMapFilePath(null));","lastModifiedDate":"2022-10-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"comicalromance"},"content":"    public void setStudMapFilePath_validPath_setsStudMapFilePath() {","lastModifiedDate":"2022-10-15"},{"lineNumber":70,"author":{"gitId":"comicalromance"},"content":"        Path path \u003d Paths.get(\"studmap/book/file/path\");","lastModifiedDate":"2022-10-15"},{"lineNumber":71,"author":{"gitId":"comicalromance"},"content":"        modelManager.setStudMapFilePath(path);","lastModifiedDate":"2022-10-15"},{"lineNumber":72,"author":{"gitId":"comicalromance"},"content":"        assertEquals(path, modelManager.getStudMapFilePath());","lastModifiedDate":"2022-10-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"comicalromance"},"content":"    public void hasStudent_nullStudent_throwsNullPointerException() {","lastModifiedDate":"2022-10-15"},{"lineNumber":77,"author":{"gitId":"comicalromance"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasStudent(null));","lastModifiedDate":"2022-10-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"comicalromance"},"content":"    public void hasStudent_studentNotInStudMap_returnsFalse() {","lastModifiedDate":"2022-10-15"},{"lineNumber":82,"author":{"gitId":"comicalromance"},"content":"        assertFalse(modelManager.hasStudent(ALICE));","lastModifiedDate":"2022-10-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"comicalromance"},"content":"    public void hasStudent_studentInStudMap_returnsTrue() {","lastModifiedDate":"2022-10-15"},{"lineNumber":87,"author":{"gitId":"comicalromance"},"content":"        modelManager.addStudent(ALICE);","lastModifiedDate":"2022-10-15"},{"lineNumber":88,"author":{"gitId":"comicalromance"},"content":"        assertTrue(modelManager.hasStudent(ALICE));","lastModifiedDate":"2022-10-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"comicalromance"},"content":"    public void getFilteredStudentList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-15"},{"lineNumber":93,"author":{"gitId":"comicalromance"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredStudentList().remove(0));","lastModifiedDate":"2022-10-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"comicalromance"},"content":"        StudMap studMap \u003d new StudMapBuilder().withStudent(ALICE).withStudent(BENSON).build();","lastModifiedDate":"2022-10-15"},{"lineNumber":99,"author":{"gitId":"comicalromance"},"content":"        StudMap differentStudMap \u003d new StudMap();","lastModifiedDate":"2022-10-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"comicalromance"},"content":"        modelManager \u003d new ModelManager(studMap, userPrefs);","lastModifiedDate":"2022-10-15"},{"lineNumber":104,"author":{"gitId":"comicalromance"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(studMap, userPrefs);","lastModifiedDate":"2022-10-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"comicalromance"},"content":"        // different studMap -\u003e returns false","lastModifiedDate":"2022-10-15"},{"lineNumber":117,"author":{"gitId":"comicalromance"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentStudMap, userPrefs)));","lastModifiedDate":"2022-10-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":121,"author":{"gitId":"comicalromance"},"content":"        modelManager.updateFilteredStudentList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2022-10-15"},{"lineNumber":122,"author":{"gitId":"comicalromance"},"content":"        assertFalse(modelManager.equals(new ModelManager(studMap, userPrefs)));","lastModifiedDate":"2022-10-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"comicalromance"},"content":"        modelManager.updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2022-10-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"comicalromance"},"content":"        differentUserPrefs.setStudMapFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2022-10-15"},{"lineNumber":130,"author":{"gitId":"comicalromance"},"content":"        assertFalse(modelManager.equals(new ModelManager(studMap, differentUserPrefs)));","lastModifiedDate":"2022-10-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"-":95,"comicalromance":37}},{"path":"src/test/java/seedu/studmap/model/StudMapTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.model;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.testutil.TypicalStudents.ALICE;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.testutil.TypicalStudents.getTypicalStudMap;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.student.Student;","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.student.exceptions.DuplicateStudentException;","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.testutil.StudentBuilder;","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":24,"author":{"gitId":"comicalromance"},"content":"public class StudMapTest {","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"comicalromance"},"content":"    private final StudMap studMap \u003d new StudMap();","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"comicalromance"},"content":"        assertEquals(Collections.emptyList(), studMap.getStudentList());","lastModifiedDate":"2022-10-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"comicalromance"},"content":"        assertThrows(NullPointerException.class, () -\u003e studMap.resetData(null));","lastModifiedDate":"2022-10-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"comicalromance"},"content":"    public void resetData_withValidReadOnlyStudMap_replacesData() {","lastModifiedDate":"2022-10-15"},{"lineNumber":40,"author":{"gitId":"comicalromance"},"content":"        StudMap newData \u003d getTypicalStudMap();","lastModifiedDate":"2022-10-15"},{"lineNumber":41,"author":{"gitId":"comicalromance"},"content":"        studMap.resetData(newData);","lastModifiedDate":"2022-10-15"},{"lineNumber":42,"author":{"gitId":"comicalromance"},"content":"        assertEquals(newData, studMap);","lastModifiedDate":"2022-10-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"comicalromance"},"content":"    public void resetData_withDuplicateStudents_throwsDuplicatestudentException() {","lastModifiedDate":"2022-10-15"},{"lineNumber":47,"author":{"gitId":"comicalromance"},"content":"        // Two students with the same identity fields","lastModifiedDate":"2022-10-15"},{"lineNumber":48,"author":{"gitId":"comicalromance"},"content":"        Student editedAlice \u003d new StudentBuilder(ALICE).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"comicalromance"},"content":"        List\u003cStudent\u003e newStudents \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2022-10-15"},{"lineNumber":51,"author":{"gitId":"comicalromance"},"content":"        StudMapStub newData \u003d new StudMapStub(newStudents);","lastModifiedDate":"2022-10-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":53,"author":{"gitId":"comicalromance"},"content":"        assertThrows(DuplicateStudentException.class, () -\u003e studMap.resetData(newData));","lastModifiedDate":"2022-10-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":57,"author":{"gitId":"comicalromance"},"content":"    public void hasStudent_nullStudent_throwsNullPointerException() {","lastModifiedDate":"2022-10-15"},{"lineNumber":58,"author":{"gitId":"comicalromance"},"content":"        assertThrows(NullPointerException.class, () -\u003e studMap.hasStudent(null));","lastModifiedDate":"2022-10-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"comicalromance"},"content":"    public void hasStudent_studentNotInStudMap_returnsFalse() {","lastModifiedDate":"2022-10-15"},{"lineNumber":63,"author":{"gitId":"comicalromance"},"content":"        assertFalse(studMap.hasStudent(ALICE));","lastModifiedDate":"2022-10-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"comicalromance"},"content":"    public void hasStudent_studentInStudMap_returnsTrue() {","lastModifiedDate":"2022-10-15"},{"lineNumber":68,"author":{"gitId":"comicalromance"},"content":"        studMap.addStudent(ALICE);","lastModifiedDate":"2022-10-15"},{"lineNumber":69,"author":{"gitId":"comicalromance"},"content":"        assertTrue(studMap.hasStudent(ALICE));","lastModifiedDate":"2022-10-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"comicalromance"},"content":"    public void hasStudent_studentWithSameIdentityFieldsInStudMap_returnsTrue() {","lastModifiedDate":"2022-10-15"},{"lineNumber":74,"author":{"gitId":"comicalromance"},"content":"        studMap.addStudent(ALICE);","lastModifiedDate":"2022-10-15"},{"lineNumber":75,"author":{"gitId":"comicalromance"},"content":"        Student editedAlice \u003d new StudentBuilder(ALICE).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"comicalromance"},"content":"        assertTrue(studMap.hasStudent(editedAlice));","lastModifiedDate":"2022-10-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":81,"author":{"gitId":"comicalromance"},"content":"    public void getStudentList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-15"},{"lineNumber":82,"author":{"gitId":"comicalromance"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e studMap.getStudentList().remove(0));","lastModifiedDate":"2022-10-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":86,"author":{"gitId":"comicalromance"},"content":"     * A stub ReadOnlyStudMap whose students list can violate interface constraints.","lastModifiedDate":"2022-10-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":88,"author":{"gitId":"comicalromance"},"content":"    private static class StudMapStub implements ReadOnlyStudMap {","lastModifiedDate":"2022-10-15"},{"lineNumber":89,"author":{"gitId":"comicalromance"},"content":"        private final ObservableList\u003cStudent\u003e students \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":91,"author":{"gitId":"comicalromance"},"content":"        StudMapStub(Collection\u003cStudent\u003e students) {","lastModifiedDate":"2022-10-15"},{"lineNumber":92,"author":{"gitId":"comicalromance"},"content":"            this.students.setAll(students);","lastModifiedDate":"2022-10-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"comicalromance"},"content":"        public ObservableList\u003cStudent\u003e getStudentList() {","lastModifiedDate":"2022-10-15"},{"lineNumber":97,"author":{"gitId":"comicalromance"},"content":"            return students;","lastModifiedDate":"2022-10-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"-":59,"comicalromance":42}},{"path":"src/test/java/seedu/studmap/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.model;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"comicalromance"},"content":"    public void setStudMapFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"comicalromance"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setStudMapFilePath(null));","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"-":17,"comicalromance":4}},{"path":"src/test/java/seedu/studmap/model/student/AttendanceTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.model.student;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"comicalromance"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"comicalromance"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"comicalromance"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"comicalromance"},"content":"public class AttendanceTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"comicalromance"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"comicalromance"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"comicalromance"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Attendance(null, null));","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"comicalromance"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"comicalromance"},"content":"    public void constructor_invalidClassName_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"comicalromance"},"content":"        String invalidClassName \u003d \"!\";","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"Piyotato"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Attendance(invalidClassName, Attendance.Status.PRESENT));","lastModifiedDate":"2022-11-06"},{"lineNumber":20,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"comicalromance"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"comicalromance"},"content":"    public void isValidClassName() {","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"comicalromance"},"content":"        // null class name","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"comicalromance"},"content":"        assertThrows(NullPointerException.class, () -\u003e Attendance.isValidClassName(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"comicalromance"},"content":"        // invalid class names","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"comicalromance"},"content":"        assertFalse(Attendance.isValidClassName(\"\")); // empty string","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"comicalromance"},"content":"        assertFalse(Attendance.isValidClassName(\"asd!\")); // contains forbidden symbols","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"comicalromance"},"content":"        assertFalse(Attendance.isValidClassName(\"aasd*\")); // contains forbidden symbols","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"comicalromance"},"content":"        assertFalse(Attendance.isValidClassName(\"vafe?\")); // contains forbidden symbols","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"comicalromance"},"content":"        // valid class names","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"comicalromance"},"content":"        assertTrue(Attendance.isValidClassName(\"T01\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"comicalromance"},"content":"        assertTrue(Attendance.isValidClassName(\"T01_2-\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"comicalromance"},"content":"        assertTrue(Attendance.isValidClassName(\"L3-4\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"comicalromance"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"Piyotato":1,"comicalromance":37}},{"path":"src/test/java/seedu/studmap/model/student/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.model.student;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"Piyotato"},"content":"        String invalidEmail \u003d \"asdf\";","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"Piyotato"},"content":"        assertTrue(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"Piyotato":2,"-":64,"comicalromance":2}},{"path":"src/test/java/seedu/studmap/model/student/ModuleTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.model.student;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":3,"author":{"gitId":"comicalromance"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"comicalromance"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"comicalromance"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"comicalromance"},"content":"public class ModuleTest {","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"comicalromance"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"comicalromance"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"comicalromance"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Module(null));","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"comicalromance"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"comicalromance"},"content":"    public void constructor_invalidModule_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"comicalromance"},"content":"        String invalidModule \u003d \"\";","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"comicalromance"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Module(invalidModule));","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"comicalromance"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"comicalromance"},"content":"    public void isValidModule() {","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"comicalromance"},"content":"        // null module","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"comicalromance"},"content":"        assertThrows(NullPointerException.class, () -\u003e Module.isValidModule(null));","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"comicalromance"},"content":"        // invalid module","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"comicalromance"},"content":"        assertFalse(Module.isValidModule(\"\")); // empty string","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"comicalromance"},"content":"        assertFalse(Module.isValidModule(\" \")); // spaces only","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"comicalromance"},"content":"        assertFalse(Module.isValidModule(\"CS919\")); // less than 3 numbers","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"comicalromance"},"content":"        assertFalse(Module.isValidModule(\"cs2103\")); // not capitalized","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"comicalromance"},"content":"        assertFalse(Module.isValidModule(\"2121S\")); // no prefix","lastModifiedDate":"2022-10-26"},{"lineNumber":33,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"comicalromance"},"content":"        // valid module","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"comicalromance"},"content":"        assertTrue(Module.isValidModule(\"CS2103\"));","lastModifiedDate":"2022-10-26"},{"lineNumber":36,"author":{"gitId":"comicalromance"},"content":"        assertTrue(Module.isValidModule(\"AAC2010T\"));","lastModifiedDate":"2022-10-26"},{"lineNumber":37,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"comicalromance"},"content":"}","lastModifiedDate":"2022-10-26"}],"authorContributionMap":{"comicalromance":38}},{"path":"src/test/java/seedu/studmap/model/student/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.model.student;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.testutil.StudentBuilder;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"comicalromance"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2022-10-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"comicalromance"},"content":"        assertTrue(predicate.test(new StudentBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-10-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"comicalromance"},"content":"        assertTrue(predicate.test(new StudentBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-10-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"comicalromance"},"content":"        assertTrue(predicate.test(new StudentBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2022-10-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"comicalromance"},"content":"        assertTrue(predicate.test(new StudentBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-10-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"comicalromance"},"content":"        assertFalse(predicate.test(new StudentBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2022-10-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"comicalromance"},"content":"        assertFalse(predicate.test(new StudentBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-10-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"comicalromance"},"content":"        // Keywords match phone, email and studmap, but does not match name","lastModifiedDate":"2022-10-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"comicalromance"},"content":"        assertFalse(predicate.test(new StudentBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2022-10-15"},{"lineNumber":73,"author":{"gitId":"comicalromance"},"content":"                .withEmail(\"alice@email.com\").build()));","lastModifiedDate":"2022-10-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"-":63,"comicalromance":12}},{"path":"src/test/java/seedu/studmap/model/student/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.model.student;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"Piyotato"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-11-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Piyotato"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-11-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"Piyotato"},"content":"        assertTrue(Name.isValidName(\"Po, the Tato\")); // with comma","lastModifiedDate":"2022-11-05"},{"lineNumber":40,"author":{"gitId":"Piyotato"},"content":"        assertTrue(Name.isValidName(\"To-To the Mato\")); // with hyphen","lastModifiedDate":"2022-11-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":42,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":43,"author":{"gitId":"Piyotato"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":44,"author":{"gitId":"Piyotato"},"content":"    public void isSameName() {","lastModifiedDate":"2022-11-06"},{"lineNumber":45,"author":{"gitId":"Piyotato"},"content":"        String testFullName \u003d \"Test Full Name\";","lastModifiedDate":"2022-11-06"},{"lineNumber":46,"author":{"gitId":"Piyotato"},"content":"        Name testName \u003d new Name(testFullName);","lastModifiedDate":"2022-11-06"},{"lineNumber":47,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":48,"author":{"gitId":"Piyotato"},"content":"        // null name","lastModifiedDate":"2022-11-06"},{"lineNumber":49,"author":{"gitId":"Piyotato"},"content":"        assertNotEquals(testName, null);","lastModifiedDate":"2022-11-06"},{"lineNumber":50,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":51,"author":{"gitId":"Piyotato"},"content":"        // spaces skipped","lastModifiedDate":"2022-11-06"},{"lineNumber":52,"author":{"gitId":"Piyotato"},"content":"        assertNotEquals(testName, new Name(\"TestFullName\"));","lastModifiedDate":"2022-11-06"},{"lineNumber":53,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":54,"author":{"gitId":"Piyotato"},"content":"        // trailing space","lastModifiedDate":"2022-11-06"},{"lineNumber":55,"author":{"gitId":"Piyotato"},"content":"        assertNotEquals(testName, new Name(testFullName + \" \"));","lastModifiedDate":"2022-11-06"},{"lineNumber":56,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":57,"author":{"gitId":"Piyotato"},"content":"        // different case","lastModifiedDate":"2022-11-06"},{"lineNumber":58,"author":{"gitId":"Piyotato"},"content":"        assertEquals(testName, new Name(testFullName.toLowerCase()));","lastModifiedDate":"2022-11-06"},{"lineNumber":59,"author":{"gitId":"Piyotato"},"content":"        assertEquals(testName, new Name(testFullName.toUpperCase()));","lastModifiedDate":"2022-11-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"Piyotato":22,"-":37,"comicalromance":2}},{"path":"src/test/java/seedu/studmap/model/student/ParticipationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"highorbit25"},"content":"package seedu.studmap.model.student;","lastModifiedDate":"2022-10-28"},{"lineNumber":2,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":3,"author":{"gitId":"highorbit25"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-28"},{"lineNumber":4,"author":{"gitId":"highorbit25"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-28"},{"lineNumber":5,"author":{"gitId":"highorbit25"},"content":"import static seedu.studmap.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-28"},{"lineNumber":6,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"highorbit25"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"highorbit25"},"content":"public class ParticipationTest {","lastModifiedDate":"2022-10-28"},{"lineNumber":10,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":11,"author":{"gitId":"highorbit25"},"content":"    @Test","lastModifiedDate":"2022-10-28"},{"lineNumber":12,"author":{"gitId":"highorbit25"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"highorbit25"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Participation(null, null));","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"highorbit25"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"highorbit25"},"content":"    @Test","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"highorbit25"},"content":"    public void constructor_invalidClassName_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-28"},{"lineNumber":18,"author":{"gitId":"highorbit25"},"content":"        String invalidClassName \u003d \"!\";","lastModifiedDate":"2022-10-28"},{"lineNumber":19,"author":{"gitId":"Piyotato"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Participation(invalidClassName,","lastModifiedDate":"2022-11-06"},{"lineNumber":20,"author":{"gitId":"Piyotato"},"content":"                Participation.Status.PARTICIPATED));","lastModifiedDate":"2022-11-06"},{"lineNumber":21,"author":{"gitId":"highorbit25"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":22,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":23,"author":{"gitId":"highorbit25"},"content":"    @Test","lastModifiedDate":"2022-10-28"},{"lineNumber":24,"author":{"gitId":"comicalromance"},"content":"    public void isValidParticipationName() {","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"highorbit25"},"content":"        // null class name","lastModifiedDate":"2022-10-28"},{"lineNumber":26,"author":{"gitId":"highorbit25"},"content":"        assertThrows(NullPointerException.class, () -\u003e Participation.isValidParticipationName(null));","lastModifiedDate":"2022-10-28"},{"lineNumber":27,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":28,"author":{"gitId":"highorbit25"},"content":"        // invalid class names","lastModifiedDate":"2022-10-28"},{"lineNumber":29,"author":{"gitId":"highorbit25"},"content":"        assertFalse(Participation.isValidParticipationName(\"\")); // empty string","lastModifiedDate":"2022-10-28"},{"lineNumber":30,"author":{"gitId":"highorbit25"},"content":"        assertFalse(Participation.isValidParticipationName(\"asd!\")); // contains forbidden symbols","lastModifiedDate":"2022-10-28"},{"lineNumber":31,"author":{"gitId":"highorbit25"},"content":"        assertFalse(Participation.isValidParticipationName(\"aasd*\")); // contains forbidden symbols","lastModifiedDate":"2022-10-28"},{"lineNumber":32,"author":{"gitId":"highorbit25"},"content":"        assertFalse(Participation.isValidParticipationName(\"vafe?\")); // contains forbidden symbols","lastModifiedDate":"2022-10-28"},{"lineNumber":33,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":34,"author":{"gitId":"highorbit25"},"content":"        // valid class names","lastModifiedDate":"2022-10-28"},{"lineNumber":35,"author":{"gitId":"highorbit25"},"content":"        assertTrue(Participation.isValidParticipationName(\"T01\"));","lastModifiedDate":"2022-10-28"},{"lineNumber":36,"author":{"gitId":"highorbit25"},"content":"        assertTrue(Participation.isValidParticipationName(\"T01_2-\"));","lastModifiedDate":"2022-10-28"},{"lineNumber":37,"author":{"gitId":"highorbit25"},"content":"        assertTrue(Participation.isValidParticipationName(\"L3-4\"));","lastModifiedDate":"2022-10-28"},{"lineNumber":38,"author":{"gitId":"highorbit25"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":39,"author":{"gitId":"highorbit25"},"content":"}","lastModifiedDate":"2022-10-28"}],"authorContributionMap":{"highorbit25":36,"Piyotato":2,"comicalromance":1}},{"path":"src/test/java/seedu/studmap/model/student/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.model.student;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"Piyotato"},"content":"        String invalidPhone \u003d \"asdf\";","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"Piyotato"},"content":"        assertTrue(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"comicalromance"},"content":"        assertFalse(Phone.isValidPhone(\"-9312\")); // special characters in front","lastModifiedDate":"2022-11-07"},{"lineNumber":35,"author":{"gitId":"comicalromance"},"content":"        assertFalse(Phone.isValidPhone(\"9+9312\")); // sandwiched +","lastModifiedDate":"2022-11-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":41,"author":{"gitId":"comicalromance"},"content":"        assertTrue(Phone.isValidPhone(\"+6598765432\")); // + at the front","lastModifiedDate":"2022-11-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"Piyotato":2,"-":36,"comicalromance":5}},{"path":"src/test/java/seedu/studmap/model/student/StudentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.model.student;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":3,"author":{"gitId":"comicalromance"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"comicalromance"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"comicalromance"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"dr-arrgghh"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.VALID_HANDLE_BOB;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.testutil.TypicalStudents.ALICE;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.testutil.TypicalStudents.BOB;","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"comicalromance"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"comicalromance"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.tag.Tag;","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.testutil.StudentBuilder;","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"comicalromance"},"content":"public class StudentTest {","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":24,"author":{"gitId":"comicalromance"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"comicalromance"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"comicalromance"},"content":"        Student student \u003d new StudentBuilder().build();","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"comicalromance"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e student.getTags().remove(0));","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":30,"author":{"gitId":"comicalromance"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":31,"author":{"gitId":"comicalromance"},"content":"    public void isSamestudent() {","lastModifiedDate":"2022-10-15"},{"lineNumber":32,"author":{"gitId":"comicalromance"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-15"},{"lineNumber":33,"author":{"gitId":"comicalromance"},"content":"        assertTrue(ALICE.isSameStudent(ALICE));","lastModifiedDate":"2022-10-15"},{"lineNumber":34,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":35,"author":{"gitId":"comicalromance"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-15"},{"lineNumber":36,"author":{"gitId":"comicalromance"},"content":"        assertFalse(ALICE.isSameStudent(null));","lastModifiedDate":"2022-10-15"},{"lineNumber":37,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":38,"author":{"gitId":"comicalromance"},"content":"        // same name, module, studentid, all other attributes different -\u003e returns true","lastModifiedDate":"2022-10-28"},{"lineNumber":39,"author":{"gitId":"comicalromance"},"content":"        Student editedAlice \u003d new StudentBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2022-10-15"},{"lineNumber":40,"author":{"gitId":"comicalromance"},"content":"                .withGitName(VALID_NAME_BOB).withTeleHandle(VALID_HANDLE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-10-28"},{"lineNumber":41,"author":{"gitId":"comicalromance"},"content":"        assertTrue(ALICE.isSameStudent(editedAlice));","lastModifiedDate":"2022-10-15"},{"lineNumber":42,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":43,"author":{"gitId":"comicalromance"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2022-10-15"},{"lineNumber":44,"author":{"gitId":"comicalromance"},"content":"        editedAlice \u003d new StudentBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-15"},{"lineNumber":45,"author":{"gitId":"comicalromance"},"content":"        assertFalse(ALICE.isSameStudent(editedAlice));","lastModifiedDate":"2022-10-15"},{"lineNumber":46,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":47,"author":{"gitId":"Piyotato"},"content":"        // name differs in case, all other attributes same -\u003e returns true","lastModifiedDate":"2022-11-06"},{"lineNumber":48,"author":{"gitId":"comicalromance"},"content":"        Student editedBob \u003d new StudentBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2022-10-15"},{"lineNumber":49,"author":{"gitId":"Piyotato"},"content":"        assertTrue(BOB.isSameStudent(editedBob));","lastModifiedDate":"2022-11-06"},{"lineNumber":50,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":51,"author":{"gitId":"comicalromance"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2022-10-15"},{"lineNumber":52,"author":{"gitId":"comicalromance"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2022-10-15"},{"lineNumber":53,"author":{"gitId":"comicalromance"},"content":"        editedBob \u003d new StudentBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2022-10-15"},{"lineNumber":54,"author":{"gitId":"comicalromance"},"content":"        assertFalse(BOB.isSameStudent(editedBob));","lastModifiedDate":"2022-10-15"},{"lineNumber":55,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":56,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":57,"author":{"gitId":"comicalromance"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":58,"author":{"gitId":"comicalromance"},"content":"    public void equals() {","lastModifiedDate":"2022-10-15"},{"lineNumber":59,"author":{"gitId":"comicalromance"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-15"},{"lineNumber":60,"author":{"gitId":"comicalromance"},"content":"        Student aliceCopy \u003d new StudentBuilder(ALICE).build();","lastModifiedDate":"2022-10-15"},{"lineNumber":61,"author":{"gitId":"comicalromance"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2022-10-15"},{"lineNumber":62,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":63,"author":{"gitId":"comicalromance"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-15"},{"lineNumber":64,"author":{"gitId":"comicalromance"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2022-10-15"},{"lineNumber":65,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":66,"author":{"gitId":"comicalromance"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-15"},{"lineNumber":67,"author":{"gitId":"comicalromance"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2022-10-15"},{"lineNumber":68,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":69,"author":{"gitId":"comicalromance"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2022-10-15"},{"lineNumber":70,"author":{"gitId":"comicalromance"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2022-10-15"},{"lineNumber":71,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":72,"author":{"gitId":"comicalromance"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2022-10-15"},{"lineNumber":73,"author":{"gitId":"comicalromance"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2022-10-15"},{"lineNumber":74,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":75,"author":{"gitId":"comicalromance"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2022-10-15"},{"lineNumber":76,"author":{"gitId":"comicalromance"},"content":"        Student editedAlice \u003d new StudentBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-15"},{"lineNumber":77,"author":{"gitId":"comicalromance"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2022-10-15"},{"lineNumber":78,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":79,"author":{"gitId":"comicalromance"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2022-10-15"},{"lineNumber":80,"author":{"gitId":"comicalromance"},"content":"        editedAlice \u003d new StudentBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-10-15"},{"lineNumber":81,"author":{"gitId":"comicalromance"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2022-10-15"},{"lineNumber":82,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":83,"author":{"gitId":"comicalromance"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2022-10-15"},{"lineNumber":84,"author":{"gitId":"comicalromance"},"content":"        editedAlice \u003d new StudentBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2022-10-15"},{"lineNumber":85,"author":{"gitId":"comicalromance"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2022-10-15"},{"lineNumber":86,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":87,"author":{"gitId":"comicalromance"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2022-10-15"},{"lineNumber":88,"author":{"gitId":"comicalromance"},"content":"        editedAlice \u003d new StudentBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-10-15"},{"lineNumber":89,"author":{"gitId":"comicalromance"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2022-10-15"},{"lineNumber":90,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":91,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":92,"author":{"gitId":"comicalromance"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":93,"author":{"gitId":"comicalromance"},"content":"    public void getstudentData() {","lastModifiedDate":"2022-10-26"},{"lineNumber":94,"author":{"gitId":"comicalromance"},"content":"        // reconstruction student from getStudentData returns same student","lastModifiedDate":"2022-10-26"},{"lineNumber":95,"author":{"gitId":"comicalromance"},"content":"        assertTrue(ALICE.isSameStudent(new Student(ALICE.getStudentData())));","lastModifiedDate":"2022-10-26"},{"lineNumber":96,"author":{"gitId":"comicalromance"},"content":"        // studentData returned from getStudentData() should be equal across invocations","lastModifiedDate":"2022-10-26"},{"lineNumber":97,"author":{"gitId":"comicalromance"},"content":"        assertEquals(ALICE.getStudentData(), ALICE.getStudentData());","lastModifiedDate":"2022-10-26"},{"lineNumber":98,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":99,"author":{"gitId":"comicalromance"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":100,"author":{"gitId":"comicalromance"},"content":"    public void studentDataConstructor() {","lastModifiedDate":"2022-10-26"},{"lineNumber":101,"author":{"gitId":"comicalromance"},"content":"        StudentData studentData \u003d new StudentData();","lastModifiedDate":"2022-10-26"},{"lineNumber":102,"author":{"gitId":"comicalromance"},"content":"        Name name \u003d new Name(StudentBuilder.DEFAULT_NAME);","lastModifiedDate":"2022-10-26"},{"lineNumber":103,"author":{"gitId":"comicalromance"},"content":"        Phone phone \u003d new Phone(StudentBuilder.DEFAULT_PHONE);","lastModifiedDate":"2022-10-26"},{"lineNumber":104,"author":{"gitId":"comicalromance"},"content":"        Email email \u003d new Email(StudentBuilder.DEFAULT_EMAIL);","lastModifiedDate":"2022-10-26"},{"lineNumber":105,"author":{"gitId":"comicalromance"},"content":"        Module module \u003d new Module(StudentBuilder.DEFAULT_MODULE);","lastModifiedDate":"2022-10-26"},{"lineNumber":106,"author":{"gitId":"comicalromance"},"content":"        StudentID id \u003d new StudentID(StudentBuilder.DEFAULT_ID);","lastModifiedDate":"2022-10-26"},{"lineNumber":107,"author":{"gitId":"comicalromance"},"content":"        GitName gitName \u003d new GitName(StudentBuilder.DEFAULT_GIT);","lastModifiedDate":"2022-10-26"},{"lineNumber":108,"author":{"gitId":"comicalromance"},"content":"        TeleHandle handle \u003d new TeleHandle(StudentBuilder.DEFAULT_TELE);","lastModifiedDate":"2022-10-26"},{"lineNumber":109,"author":{"gitId":"comicalromance"},"content":"        Set\u003cTag\u003e tags \u003d Set.of(new Tag(\"Friends\"));","lastModifiedDate":"2022-10-26"},{"lineNumber":110,"author":{"gitId":"Piyotato"},"content":"        Set\u003cAttendance\u003e attendances \u003d Set.of(new Attendance(\"T01\", Attendance.Status.PRESENT));","lastModifiedDate":"2022-11-06"},{"lineNumber":111,"author":{"gitId":"comicalromance"},"content":"        studentData.setName(name);","lastModifiedDate":"2022-10-26"},{"lineNumber":112,"author":{"gitId":"comicalromance"},"content":"        studentData.setPhone(phone);","lastModifiedDate":"2022-10-26"},{"lineNumber":113,"author":{"gitId":"comicalromance"},"content":"        studentData.setEmail(email);","lastModifiedDate":"2022-10-26"},{"lineNumber":114,"author":{"gitId":"comicalromance"},"content":"        studentData.setModule(module);","lastModifiedDate":"2022-10-26"},{"lineNumber":115,"author":{"gitId":"comicalromance"},"content":"        studentData.setId(id);","lastModifiedDate":"2022-10-26"},{"lineNumber":116,"author":{"gitId":"comicalromance"},"content":"        studentData.setGitUser(gitName);","lastModifiedDate":"2022-10-26"},{"lineNumber":117,"author":{"gitId":"comicalromance"},"content":"        studentData.setTeleHandle(handle);","lastModifiedDate":"2022-10-26"},{"lineNumber":118,"author":{"gitId":"comicalromance"},"content":"        studentData.setTags(tags);","lastModifiedDate":"2022-10-26"},{"lineNumber":119,"author":{"gitId":"comicalromance"},"content":"        studentData.setAttendances(attendances);","lastModifiedDate":"2022-10-26"},{"lineNumber":120,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":121,"author":{"gitId":"comicalromance"},"content":"        Student student \u003d new Student(studentData);","lastModifiedDate":"2022-10-26"},{"lineNumber":122,"author":{"gitId":"comicalromance"},"content":"        assertEquals(student.getStudentData(), studentData);","lastModifiedDate":"2022-10-26"},{"lineNumber":123,"author":{"gitId":"comicalromance"},"content":"        assertEquals(student.getName(), name);","lastModifiedDate":"2022-10-26"},{"lineNumber":124,"author":{"gitId":"comicalromance"},"content":"        assertEquals(student.getPhone(), phone);","lastModifiedDate":"2022-10-26"},{"lineNumber":125,"author":{"gitId":"comicalromance"},"content":"        assertEquals(student.getEmail(), email);","lastModifiedDate":"2022-10-26"},{"lineNumber":126,"author":{"gitId":"comicalromance"},"content":"        assertEquals(student.getModule(), module);","lastModifiedDate":"2022-10-26"},{"lineNumber":127,"author":{"gitId":"comicalromance"},"content":"        assertEquals(student.getId(), id);","lastModifiedDate":"2022-10-26"},{"lineNumber":128,"author":{"gitId":"comicalromance"},"content":"        assertEquals(student.getGitName(), gitName);","lastModifiedDate":"2022-10-26"},{"lineNumber":129,"author":{"gitId":"comicalromance"},"content":"        assertEquals(student.getTeleHandle(), handle);","lastModifiedDate":"2022-10-26"},{"lineNumber":130,"author":{"gitId":"comicalromance"},"content":"        assertEquals(student.getTags(), tags);","lastModifiedDate":"2022-10-26"},{"lineNumber":131,"author":{"gitId":"comicalromance"},"content":"        assertEquals(student.getAttendances(), attendances);","lastModifiedDate":"2022-10-26"},{"lineNumber":132,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":133,"author":{"gitId":"comicalromance"},"content":"}","lastModifiedDate":"2022-10-15"}],"authorContributionMap":{"dr-arrgghh":1,"Piyotato":3,"comicalromance":129}},{"path":"src/test/java/seedu/studmap/model/student/TagContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.model.student;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"dr-arrgghh"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"dr-arrgghh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"dr-arrgghh"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"dr-arrgghh"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"dr-arrgghh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.testutil.StudentBuilder;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"dr-arrgghh"},"content":"public class TagContainsKeywordsPredicateTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"dr-arrgghh"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"dr-arrgghh"},"content":"    public void test_tagContainsKeywords_returnTrue() {","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"dr-arrgghh"},"content":"        //One keyword","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"dr-arrgghh"},"content":"        TagContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"dr-arrgghh"},"content":"                new TagContainsKeywordsPredicate(Collections.singletonList(\"friends\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"comicalromance"},"content":"        assertTrue(predicate.test(new StudentBuilder().withTags(\"friends\").build()));","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"dr-arrgghh"},"content":"        //Only matching one keyword","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"dr-arrgghh"},"content":"        TagContainsKeywordsPredicate predicate1 \u003d","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"dr-arrgghh"},"content":"                new TagContainsKeywordsPredicate(Arrays.asList(\"friends\", \"colleagues\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"comicalromance"},"content":"        assertTrue(predicate1.test(new StudentBuilder().withTags(\"friends\", \"family\").build()));","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"dr-arrgghh"},"content":"        //Check case sensitivity","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"dr-arrgghh"},"content":"        TagContainsKeywordsPredicate predicate2 \u003d","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"dr-arrgghh"},"content":"                new TagContainsKeywordsPredicate(Arrays.asList(\"Friends\", \"Family\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"comicalromance"},"content":"        assertTrue(predicate2.test(new StudentBuilder().withTags(\"friends\").build()));","lastModifiedDate":"2022-10-15"},{"lineNumber":32,"author":{"gitId":"dr-arrgghh"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"dr-arrgghh"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"dr-arrgghh"},"content":"    public void test_tagContainsKeywords_returnFalse() {","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"dr-arrgghh"},"content":"        //Empty input","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"dr-arrgghh"},"content":"        TagContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"dr-arrgghh"},"content":"                new TagContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"comicalromance"},"content":"        assertFalse(predicate.test(new StudentBuilder().withTags(\"friends\").build()));","lastModifiedDate":"2022-10-15"},{"lineNumber":40,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"dr-arrgghh"},"content":"        //No matching input","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"dr-arrgghh"},"content":"        TagContainsKeywordsPredicate predicate1 \u003d","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"dr-arrgghh"},"content":"                new TagContainsKeywordsPredicate(Collections.singletonList(\"home\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"comicalromance"},"content":"        assertFalse(predicate1.test(new StudentBuilder().withTags(\"family\").build()));","lastModifiedDate":"2022-10-15"},{"lineNumber":45,"author":{"gitId":"dr-arrgghh"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"dr-arrgghh"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"dr-arrgghh":39,"comicalromance":7}},{"path":"src/test/java/seedu/studmap/model/student/UniqueStudentListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.model.student;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":3,"author":{"gitId":"comicalromance"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"comicalromance"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"comicalromance"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.testutil.TypicalStudents.ALICE;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.testutil.TypicalStudents.BOB;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"comicalromance"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"comicalromance"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"comicalromance"},"content":"import java.util.List;","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"comicalromance"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.student.exceptions.DuplicateStudentException;","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.student.exceptions.StudentNotFoundException;","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.testutil.StudentBuilder;","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"comicalromance"},"content":"public class UniqueStudentListTest {","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"comicalromance"},"content":"    private final UniqueStudentList uniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2022-10-15"},{"lineNumber":24,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"comicalromance"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"comicalromance"},"content":"    public void contains_nullStudent_throwsNullPointerException() {","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"comicalromance"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.contains(null));","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":30,"author":{"gitId":"comicalromance"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":31,"author":{"gitId":"comicalromance"},"content":"    public void contains_studentNotInList_returnsFalse() {","lastModifiedDate":"2022-10-15"},{"lineNumber":32,"author":{"gitId":"comicalromance"},"content":"        assertFalse(uniqueStudentList.contains(ALICE));","lastModifiedDate":"2022-10-15"},{"lineNumber":33,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":34,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":35,"author":{"gitId":"comicalromance"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":36,"author":{"gitId":"comicalromance"},"content":"    public void contains_studentInList_returnsTrue() {","lastModifiedDate":"2022-10-15"},{"lineNumber":37,"author":{"gitId":"comicalromance"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2022-10-15"},{"lineNumber":38,"author":{"gitId":"comicalromance"},"content":"        assertTrue(uniqueStudentList.contains(ALICE));","lastModifiedDate":"2022-10-15"},{"lineNumber":39,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":40,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":41,"author":{"gitId":"comicalromance"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":42,"author":{"gitId":"comicalromance"},"content":"    public void contains_studentWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2022-10-15"},{"lineNumber":43,"author":{"gitId":"comicalromance"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2022-10-15"},{"lineNumber":44,"author":{"gitId":"comicalromance"},"content":"        Student editedAlice \u003d new StudentBuilder(ALICE).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-26"},{"lineNumber":45,"author":{"gitId":"comicalromance"},"content":"                .build();","lastModifiedDate":"2022-10-15"},{"lineNumber":46,"author":{"gitId":"comicalromance"},"content":"        assertTrue(uniqueStudentList.contains(editedAlice));","lastModifiedDate":"2022-10-15"},{"lineNumber":47,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":48,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":49,"author":{"gitId":"comicalromance"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":50,"author":{"gitId":"comicalromance"},"content":"    public void add_nullStudent_throwsNullPointerException() {","lastModifiedDate":"2022-10-15"},{"lineNumber":51,"author":{"gitId":"comicalromance"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.add(null));","lastModifiedDate":"2022-10-15"},{"lineNumber":52,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":53,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":54,"author":{"gitId":"comicalromance"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":55,"author":{"gitId":"comicalromance"},"content":"    public void add_duplicatestudent_throwsDuplicatestudentException() {","lastModifiedDate":"2022-10-15"},{"lineNumber":56,"author":{"gitId":"comicalromance"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2022-10-15"},{"lineNumber":57,"author":{"gitId":"comicalromance"},"content":"        assertThrows(DuplicateStudentException.class, () -\u003e uniqueStudentList.add(ALICE));","lastModifiedDate":"2022-10-15"},{"lineNumber":58,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":59,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":60,"author":{"gitId":"comicalromance"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":61,"author":{"gitId":"comicalromance"},"content":"    public void setStudent_nullTargetstudent_throwsNullPointerException() {","lastModifiedDate":"2022-10-15"},{"lineNumber":62,"author":{"gitId":"Piyotato"},"content":"        Student test \u003d ALICE;","lastModifiedDate":"2022-11-06"},{"lineNumber":63,"author":{"gitId":"comicalromance"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.setStudent(null, ALICE));","lastModifiedDate":"2022-10-15"},{"lineNumber":64,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":65,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":66,"author":{"gitId":"comicalromance"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":67,"author":{"gitId":"comicalromance"},"content":"    public void setStudent_nullEditedstudent_throwsNullPointerException() {","lastModifiedDate":"2022-10-15"},{"lineNumber":68,"author":{"gitId":"comicalromance"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.setStudent(ALICE, null));","lastModifiedDate":"2022-10-15"},{"lineNumber":69,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":70,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":71,"author":{"gitId":"comicalromance"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":72,"author":{"gitId":"comicalromance"},"content":"    public void setStudent_targetstudentNotInList_throwsstudentNotFoundException() {","lastModifiedDate":"2022-10-15"},{"lineNumber":73,"author":{"gitId":"comicalromance"},"content":"        assertThrows(StudentNotFoundException.class, () -\u003e uniqueStudentList.setStudent(ALICE, ALICE));","lastModifiedDate":"2022-10-15"},{"lineNumber":74,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":75,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":76,"author":{"gitId":"comicalromance"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":77,"author":{"gitId":"comicalromance"},"content":"    public void setStudent_editedstudentIsSamestudent_success() {","lastModifiedDate":"2022-10-15"},{"lineNumber":78,"author":{"gitId":"comicalromance"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2022-10-15"},{"lineNumber":79,"author":{"gitId":"comicalromance"},"content":"        uniqueStudentList.setStudent(ALICE, ALICE);","lastModifiedDate":"2022-10-15"},{"lineNumber":80,"author":{"gitId":"comicalromance"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2022-10-15"},{"lineNumber":81,"author":{"gitId":"comicalromance"},"content":"        expectedUniqueStudentList.add(ALICE);","lastModifiedDate":"2022-10-15"},{"lineNumber":82,"author":{"gitId":"comicalromance"},"content":"        assertEquals(expectedUniqueStudentList, uniqueStudentList);","lastModifiedDate":"2022-10-15"},{"lineNumber":83,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":84,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":85,"author":{"gitId":"comicalromance"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":86,"author":{"gitId":"comicalromance"},"content":"    public void setStudent_editedstudentHasSameIdentity_success() {","lastModifiedDate":"2022-10-15"},{"lineNumber":87,"author":{"gitId":"comicalromance"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2022-10-15"},{"lineNumber":88,"author":{"gitId":"comicalromance"},"content":"        Student editedAlice \u003d new StudentBuilder(ALICE).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-26"},{"lineNumber":89,"author":{"gitId":"comicalromance"},"content":"                .build();","lastModifiedDate":"2022-10-15"},{"lineNumber":90,"author":{"gitId":"comicalromance"},"content":"        uniqueStudentList.setStudent(ALICE, editedAlice);","lastModifiedDate":"2022-10-15"},{"lineNumber":91,"author":{"gitId":"comicalromance"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2022-10-15"},{"lineNumber":92,"author":{"gitId":"comicalromance"},"content":"        expectedUniqueStudentList.add(editedAlice);","lastModifiedDate":"2022-10-15"},{"lineNumber":93,"author":{"gitId":"comicalromance"},"content":"        assertEquals(expectedUniqueStudentList, uniqueStudentList);","lastModifiedDate":"2022-10-15"},{"lineNumber":94,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":95,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":96,"author":{"gitId":"comicalromance"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":97,"author":{"gitId":"comicalromance"},"content":"    public void setStudent_editedstudentHasDifferentIdentity_success() {","lastModifiedDate":"2022-10-15"},{"lineNumber":98,"author":{"gitId":"comicalromance"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2022-10-15"},{"lineNumber":99,"author":{"gitId":"comicalromance"},"content":"        uniqueStudentList.setStudent(ALICE, BOB);","lastModifiedDate":"2022-10-15"},{"lineNumber":100,"author":{"gitId":"comicalromance"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2022-10-15"},{"lineNumber":101,"author":{"gitId":"comicalromance"},"content":"        expectedUniqueStudentList.add(BOB);","lastModifiedDate":"2022-10-15"},{"lineNumber":102,"author":{"gitId":"comicalromance"},"content":"        assertEquals(expectedUniqueStudentList, uniqueStudentList);","lastModifiedDate":"2022-10-15"},{"lineNumber":103,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":104,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":105,"author":{"gitId":"comicalromance"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":106,"author":{"gitId":"comicalromance"},"content":"    public void setStudent_editedstudentHasNonUniqueIdentity_throwsDuplicatestudentException() {","lastModifiedDate":"2022-10-15"},{"lineNumber":107,"author":{"gitId":"comicalromance"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2022-10-15"},{"lineNumber":108,"author":{"gitId":"comicalromance"},"content":"        uniqueStudentList.add(BOB);","lastModifiedDate":"2022-10-15"},{"lineNumber":109,"author":{"gitId":"comicalromance"},"content":"        assertThrows(DuplicateStudentException.class, () -\u003e uniqueStudentList.setStudent(ALICE, BOB));","lastModifiedDate":"2022-10-15"},{"lineNumber":110,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":111,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":112,"author":{"gitId":"comicalromance"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":113,"author":{"gitId":"comicalromance"},"content":"    public void remove_nullStudent_throwsNullPointerException() {","lastModifiedDate":"2022-10-15"},{"lineNumber":114,"author":{"gitId":"comicalromance"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.remove(null));","lastModifiedDate":"2022-10-15"},{"lineNumber":115,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":116,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":117,"author":{"gitId":"comicalromance"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":118,"author":{"gitId":"comicalromance"},"content":"    public void remove_studentDoesNotExist_throwsstudentNotFoundException() {","lastModifiedDate":"2022-10-15"},{"lineNumber":119,"author":{"gitId":"comicalromance"},"content":"        assertThrows(StudentNotFoundException.class, () -\u003e uniqueStudentList.remove(ALICE));","lastModifiedDate":"2022-10-15"},{"lineNumber":120,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":121,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":122,"author":{"gitId":"comicalromance"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":123,"author":{"gitId":"comicalromance"},"content":"    public void remove_existingstudent_removesstudent() {","lastModifiedDate":"2022-10-15"},{"lineNumber":124,"author":{"gitId":"comicalromance"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2022-10-15"},{"lineNumber":125,"author":{"gitId":"comicalromance"},"content":"        uniqueStudentList.remove(ALICE);","lastModifiedDate":"2022-10-15"},{"lineNumber":126,"author":{"gitId":"comicalromance"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2022-10-15"},{"lineNumber":127,"author":{"gitId":"comicalromance"},"content":"        assertEquals(expectedUniqueStudentList, uniqueStudentList);","lastModifiedDate":"2022-10-15"},{"lineNumber":128,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":129,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":130,"author":{"gitId":"comicalromance"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":131,"author":{"gitId":"comicalromance"},"content":"    public void setStudents_nullUniquestudentList_throwsNullPointerException() {","lastModifiedDate":"2022-10-15"},{"lineNumber":132,"author":{"gitId":"comicalromance"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.setStudents((UniqueStudentList) null));","lastModifiedDate":"2022-10-15"},{"lineNumber":133,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":134,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":135,"author":{"gitId":"comicalromance"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":136,"author":{"gitId":"comicalromance"},"content":"    public void setStudents_uniquestudentList_replacesOwnListWithProvidedUniquestudentList() {","lastModifiedDate":"2022-10-15"},{"lineNumber":137,"author":{"gitId":"comicalromance"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2022-10-15"},{"lineNumber":138,"author":{"gitId":"comicalromance"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2022-10-15"},{"lineNumber":139,"author":{"gitId":"comicalromance"},"content":"        expectedUniqueStudentList.add(BOB);","lastModifiedDate":"2022-10-15"},{"lineNumber":140,"author":{"gitId":"comicalromance"},"content":"        uniqueStudentList.setStudents(expectedUniqueStudentList);","lastModifiedDate":"2022-10-15"},{"lineNumber":141,"author":{"gitId":"comicalromance"},"content":"        assertEquals(expectedUniqueStudentList, uniqueStudentList);","lastModifiedDate":"2022-10-15"},{"lineNumber":142,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":143,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":144,"author":{"gitId":"comicalromance"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":145,"author":{"gitId":"comicalromance"},"content":"    public void setStudents_nullList_throwsNullPointerException() {","lastModifiedDate":"2022-10-15"},{"lineNumber":146,"author":{"gitId":"comicalromance"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.setStudents((List\u003cStudent\u003e) null));","lastModifiedDate":"2022-10-15"},{"lineNumber":147,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":148,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":149,"author":{"gitId":"comicalromance"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":150,"author":{"gitId":"comicalromance"},"content":"    public void setStudents_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2022-10-15"},{"lineNumber":151,"author":{"gitId":"comicalromance"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2022-10-15"},{"lineNumber":152,"author":{"gitId":"comicalromance"},"content":"        List\u003cStudent\u003e studentList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2022-10-15"},{"lineNumber":153,"author":{"gitId":"comicalromance"},"content":"        uniqueStudentList.setStudents(studentList);","lastModifiedDate":"2022-10-15"},{"lineNumber":154,"author":{"gitId":"comicalromance"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2022-10-15"},{"lineNumber":155,"author":{"gitId":"comicalromance"},"content":"        expectedUniqueStudentList.add(BOB);","lastModifiedDate":"2022-10-15"},{"lineNumber":156,"author":{"gitId":"comicalromance"},"content":"        assertEquals(expectedUniqueStudentList, uniqueStudentList);","lastModifiedDate":"2022-10-15"},{"lineNumber":157,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":158,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":159,"author":{"gitId":"comicalromance"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":160,"author":{"gitId":"comicalromance"},"content":"    public void setStudents_listwithDuplicateStudents_throwsDuplicatestudentException() {","lastModifiedDate":"2022-10-15"},{"lineNumber":161,"author":{"gitId":"comicalromance"},"content":"        List\u003cStudent\u003e listWithDuplicateStudents \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2022-10-15"},{"lineNumber":162,"author":{"gitId":"comicalromance"},"content":"        assertThrows(DuplicateStudentException.class, () -\u003e uniqueStudentList.setStudents(listWithDuplicateStudents));","lastModifiedDate":"2022-10-15"},{"lineNumber":163,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":164,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":165,"author":{"gitId":"comicalromance"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":166,"author":{"gitId":"comicalromance"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-15"},{"lineNumber":167,"author":{"gitId":"comicalromance"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2022-10-15"},{"lineNumber":168,"author":{"gitId":"comicalromance"},"content":"            -\u003e uniqueStudentList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2022-10-15"},{"lineNumber":169,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":170,"author":{"gitId":"comicalromance"},"content":"}","lastModifiedDate":"2022-10-15"}],"authorContributionMap":{"Piyotato":1,"comicalromance":169}},{"path":"src/test/java/seedu/studmap/model/tag/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.model.tag;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":3,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class TagTest {","lastModifiedDate":"2017-12-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));","lastModifiedDate":"2019-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2017-12-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2017-12-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-12-04"}],"authorContributionMap":{"-":24,"comicalromance":2}},{"path":"src/test/java/seedu/studmap/storage/JsonAdaptedStudentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.storage;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.storage.JsonAdaptedStudent.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.testutil.TypicalStudents.BENSON;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.student.Email;","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.student.Name;","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.student.Phone;","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"comicalromance"},"content":"public class JsonAdaptedStudentTest {","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"Piyotato"},"content":"    private static final String INVALID_NAME \u003d \"R\\nchel\";","lastModifiedDate":"2022-11-05"},{"lineNumber":21,"author":{"gitId":"comicalromance"},"content":"    private static final String INVALID_PHONE \u003d \"-651234\";","lastModifiedDate":"2022-11-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"comicalromance"},"content":"    private static final String INVALID_CLASS \u003d \"T01!\";","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"comicalromance"},"content":"    private static final String VALID_MODULE \u003d BENSON.getModule().toString();","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"dr-arrgghh"},"content":"    private static final String VALID_ID \u003d BENSON.getId().toString();","lastModifiedDate":"2022-10-25"},{"lineNumber":31,"author":{"gitId":"dr-arrgghh"},"content":"    private static final String VALID_GIT \u003d BENSON.getGitString();","lastModifiedDate":"2022-10-25"},{"lineNumber":32,"author":{"gitId":"dr-arrgghh"},"content":"    private static final String VALID_HANDLE \u003d BENSON.getHandleString();","lastModifiedDate":"2022-10-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"comicalromance"},"content":"    private static final List\u003cJsonAdaptedAttendance\u003e VALID_ATTENDANCES \u003d BENSON.getAttendances().stream()","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"comicalromance"},"content":"            .map(JsonAdaptedAttendance::new)","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"comicalromance"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"lpohsien"},"content":"    private static final List\u003cJsonAdaptedAssignment\u003e VALID_ASSIGNMENTS \u003d BENSON.getAssignments().stream()","lastModifiedDate":"2022-10-23"},{"lineNumber":40,"author":{"gitId":"lpohsien"},"content":"            .map(JsonAdaptedAssignment::new)","lastModifiedDate":"2022-10-23"},{"lineNumber":41,"author":{"gitId":"lpohsien"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2022-10-23"},{"lineNumber":42,"author":{"gitId":"highorbit25"},"content":"    private static final List\u003cJsonAdaptedParticipation\u003e VALID_PARTICIPATIONS \u003d BENSON.getParticipations().stream()","lastModifiedDate":"2022-10-27"},{"lineNumber":43,"author":{"gitId":"highorbit25"},"content":"                                                                               .map(JsonAdaptedParticipation::new)","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"highorbit25"},"content":"                                                                               .collect(Collectors.toList());","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"comicalromance"},"content":"    public void toModelType_validstudentDetails_returnsstudent() throws Exception {","lastModifiedDate":"2022-10-15"},{"lineNumber":48,"author":{"gitId":"comicalromance"},"content":"        JsonAdaptedStudent student \u003d new JsonAdaptedStudent(BENSON);","lastModifiedDate":"2022-10-15"},{"lineNumber":49,"author":{"gitId":"comicalromance"},"content":"        assertEquals(BENSON, student.toModelType());","lastModifiedDate":"2022-10-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"comicalromance"},"content":"        JsonAdaptedStudent student \u003d","lastModifiedDate":"2022-10-15"},{"lineNumber":55,"author":{"gitId":"comicalromance"},"content":"                new JsonAdaptedStudent(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_MODULE,","lastModifiedDate":"2022-10-26"},{"lineNumber":56,"author":{"gitId":"comicalromance"},"content":"                        VALID_ID, VALID_GIT, VALID_HANDLE,","lastModifiedDate":"2022-10-26"},{"lineNumber":57,"author":{"gitId":"highorbit25"},"content":"                        VALID_TAGS, VALID_ATTENDANCES, VALID_ASSIGNMENTS, VALID_PARTICIPATIONS);","lastModifiedDate":"2022-10-27"},{"lineNumber":58,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"comicalromance"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2022-10-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"comicalromance"},"content":"        JsonAdaptedStudent student \u003d new JsonAdaptedStudent(null, VALID_PHONE, VALID_EMAIL, VALID_MODULE,","lastModifiedDate":"2022-10-26"},{"lineNumber":66,"author":{"gitId":"highorbit25"},"content":"                VALID_ID, VALID_GIT, VALID_HANDLE, VALID_TAGS,","lastModifiedDate":"2022-10-28"},{"lineNumber":67,"author":{"gitId":"highorbit25"},"content":"                VALID_ATTENDANCES, VALID_ASSIGNMENTS, VALID_PARTICIPATIONS);","lastModifiedDate":"2022-10-28"},{"lineNumber":68,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"comicalromance"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2022-10-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"comicalromance"},"content":"        JsonAdaptedStudent student \u003d","lastModifiedDate":"2022-10-15"},{"lineNumber":76,"author":{"gitId":"comicalromance"},"content":"                new JsonAdaptedStudent(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_MODULE,","lastModifiedDate":"2022-10-26"},{"lineNumber":77,"author":{"gitId":"comicalromance"},"content":"                        VALID_ID, VALID_GIT, VALID_HANDLE,","lastModifiedDate":"2022-10-26"},{"lineNumber":78,"author":{"gitId":"highorbit25"},"content":"                        VALID_TAGS, VALID_ATTENDANCES, VALID_ASSIGNMENTS, VALID_PARTICIPATIONS);","lastModifiedDate":"2022-10-27"},{"lineNumber":79,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"comicalromance"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2022-10-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"comicalromance"},"content":"        JsonAdaptedStudent student \u003d new JsonAdaptedStudent(VALID_NAME, null, VALID_EMAIL, VALID_MODULE,","lastModifiedDate":"2022-10-26"},{"lineNumber":87,"author":{"gitId":"comicalromance"},"content":"                VALID_ID, VALID_GIT, VALID_HANDLE,","lastModifiedDate":"2022-10-26"},{"lineNumber":88,"author":{"gitId":"highorbit25"},"content":"                VALID_TAGS, VALID_ATTENDANCES, VALID_ASSIGNMENTS, VALID_PARTICIPATIONS);","lastModifiedDate":"2022-10-27"},{"lineNumber":89,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"comicalromance"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2022-10-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"comicalromance"},"content":"        JsonAdaptedStudent student \u003d","lastModifiedDate":"2022-10-15"},{"lineNumber":97,"author":{"gitId":"comicalromance"},"content":"                new JsonAdaptedStudent(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_MODULE,","lastModifiedDate":"2022-10-26"},{"lineNumber":98,"author":{"gitId":"comicalromance"},"content":"                        VALID_ID, VALID_GIT, VALID_HANDLE,","lastModifiedDate":"2022-10-26"},{"lineNumber":99,"author":{"gitId":"highorbit25"},"content":"                        VALID_TAGS, VALID_ATTENDANCES, VALID_ASSIGNMENTS, VALID_PARTICIPATIONS);","lastModifiedDate":"2022-10-27"},{"lineNumber":100,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"comicalromance"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2022-10-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"comicalromance"},"content":"        JsonAdaptedStudent student \u003d new JsonAdaptedStudent(VALID_NAME, VALID_PHONE, null, VALID_MODULE,","lastModifiedDate":"2022-10-26"},{"lineNumber":108,"author":{"gitId":"highorbit25"},"content":"                VALID_ID, VALID_GIT, VALID_HANDLE,","lastModifiedDate":"2022-10-28"},{"lineNumber":109,"author":{"gitId":"highorbit25"},"content":"                VALID_TAGS, VALID_ATTENDANCES, VALID_ASSIGNMENTS, VALID_PARTICIPATIONS);","lastModifiedDate":"2022-10-28"},{"lineNumber":110,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"comicalromance"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2022-10-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"comicalromance"},"content":"        JsonAdaptedStudent student \u003d","lastModifiedDate":"2022-10-15"},{"lineNumber":120,"author":{"gitId":"comicalromance"},"content":"                new JsonAdaptedStudent(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_MODULE,","lastModifiedDate":"2022-10-26"},{"lineNumber":121,"author":{"gitId":"comicalromance"},"content":"                        VALID_ID, VALID_GIT, VALID_HANDLE, invalidTags,","lastModifiedDate":"2022-10-26"},{"lineNumber":122,"author":{"gitId":"highorbit25"},"content":"                        VALID_ATTENDANCES, VALID_ASSIGNMENTS, VALID_PARTICIPATIONS);","lastModifiedDate":"2022-10-27"},{"lineNumber":123,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":124,"author":{"gitId":"comicalromance"},"content":"        assertThrows(IllegalValueException.class, student::toModelType);","lastModifiedDate":"2022-10-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"comicalromance"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":128,"author":{"gitId":"comicalromance"},"content":"    public void toModelType_invalidAttendances_throwsIllegalValueException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":129,"author":{"gitId":"comicalromance"},"content":"        List\u003cJsonAdaptedAttendance\u003e invalidAttendances \u003d new ArrayList\u003c\u003e(VALID_ATTENDANCES);","lastModifiedDate":"2022-10-10"},{"lineNumber":130,"author":{"gitId":"comicalromance"},"content":"        invalidAttendances.add(new JsonAdaptedAttendance(INVALID_CLASS + \":Present\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":131,"author":{"gitId":"comicalromance"},"content":"        JsonAdaptedStudent student \u003d","lastModifiedDate":"2022-10-15"},{"lineNumber":132,"author":{"gitId":"comicalromance"},"content":"                new JsonAdaptedStudent(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_MODULE,","lastModifiedDate":"2022-10-26"},{"lineNumber":133,"author":{"gitId":"comicalromance"},"content":"                        VALID_ID, VALID_GIT, VALID_HANDLE,","lastModifiedDate":"2022-10-26"},{"lineNumber":134,"author":{"gitId":"highorbit25"},"content":"                        VALID_TAGS, invalidAttendances, VALID_ASSIGNMENTS, VALID_PARTICIPATIONS);","lastModifiedDate":"2022-10-27"},{"lineNumber":135,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":136,"author":{"gitId":"comicalromance"},"content":"        assertThrows(IllegalValueException.class, student::toModelType);","lastModifiedDate":"2022-10-15"},{"lineNumber":137,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"highorbit25":13,"dr-arrgghh":11,"Piyotato":1,"-":60,"comicalromance":50,"lpohsien":3}},{"path":"src/test/java/seedu/studmap/storage/JsonSerializableStudMapTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.storage;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.commons.util.JsonUtil;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.StudMap;","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.testutil.TypicalStudents;","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"comicalromance"},"content":"public class JsonSerializableStudMapTest {","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"comicalromance"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableStudMapTest\");","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"comicalromance"},"content":"    private static final Path TYPICAL_STUDENTS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalStudentsStudMap.json\");","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"comicalromance"},"content":"    private static final Path INVALID_STUDENT_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidStudentStudMap.json\");","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"comicalromance"},"content":"    private static final Path DUPLICATE_STUDENT_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateStudentStudMap.json\");","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"comicalromance"},"content":"    public void toModelType_typicalStudentsFile_success() throws Exception {","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"comicalromance"},"content":"        JsonSerializableStudMap dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_STUDENTS_FILE,","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"comicalromance"},"content":"                JsonSerializableStudMap.class).get();","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"comicalromance"},"content":"        StudMap studMapFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"comicalromance"},"content":"        StudMap typicalStudentsStudMap \u003d TypicalStudents.getTypicalStudMap();","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"comicalromance"},"content":"        assertEquals(studMapFromFile, typicalStudentsStudMap);","lastModifiedDate":"2022-10-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"comicalromance"},"content":"    public void toModelType_invalidStudentFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2022-10-15"},{"lineNumber":34,"author":{"gitId":"comicalromance"},"content":"        JsonSerializableStudMap dataFromFile \u003d JsonUtil.readJsonFile(INVALID_STUDENT_FILE,","lastModifiedDate":"2022-10-15"},{"lineNumber":35,"author":{"gitId":"comicalromance"},"content":"                JsonSerializableStudMap.class).get();","lastModifiedDate":"2022-10-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"comicalromance"},"content":"    public void toModelType_duplicateStudents_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2022-10-15"},{"lineNumber":41,"author":{"gitId":"comicalromance"},"content":"        JsonSerializableStudMap dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_STUDENT_FILE,","lastModifiedDate":"2022-10-15"},{"lineNumber":42,"author":{"gitId":"comicalromance"},"content":"                JsonSerializableStudMap.class).get();","lastModifiedDate":"2022-10-15"},{"lineNumber":43,"author":{"gitId":"comicalromance"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableStudMap.MESSAGE_DUPLICATE_STUDENT,","lastModifiedDate":"2022-10-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":23,"comicalromance":24}},{"path":"src/test/java/seedu/studmap/storage/JsonStudMapStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.storage;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":3,"author":{"gitId":"comicalromance"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"comicalromance"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.testutil.TypicalStudents.ALICE;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.testutil.TypicalStudents.HOON;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.testutil.TypicalStudents.IDA;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.testutil.TypicalStudents.getTypicalStudMap;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"comicalromance"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"comicalromance"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"comicalromance"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"comicalromance"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"comicalromance"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.ReadOnlyStudMap;","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.StudMap;","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"comicalromance"},"content":"public class JsonStudMapStorageTest {","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"comicalromance"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonStudMapStorageTest\");","lastModifiedDate":"2022-10-15"},{"lineNumber":24,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"comicalromance"},"content":"    @TempDir","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"comicalromance"},"content":"    public Path testFolder;","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"comicalromance"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"comicalromance"},"content":"    public void readStudMap_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2022-10-15"},{"lineNumber":30,"author":{"gitId":"comicalromance"},"content":"        assertThrows(NullPointerException.class, () -\u003e readStudMap(null));","lastModifiedDate":"2022-10-15"},{"lineNumber":31,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":32,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":33,"author":{"gitId":"comicalromance"},"content":"    private java.util.Optional\u003cReadOnlyStudMap\u003e readStudMap(String filePath) throws Exception {","lastModifiedDate":"2022-10-15"},{"lineNumber":34,"author":{"gitId":"comicalromance"},"content":"        return new JsonStudMapStorage(Paths.get(filePath)).readStudMap(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2022-10-15"},{"lineNumber":35,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":36,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":37,"author":{"gitId":"comicalromance"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2022-10-15"},{"lineNumber":38,"author":{"gitId":"comicalromance"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2022-10-15"},{"lineNumber":39,"author":{"gitId":"comicalromance"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2022-10-15"},{"lineNumber":40,"author":{"gitId":"comicalromance"},"content":"                : null;","lastModifiedDate":"2022-10-15"},{"lineNumber":41,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":42,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":43,"author":{"gitId":"comicalromance"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":44,"author":{"gitId":"comicalromance"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2022-10-15"},{"lineNumber":45,"author":{"gitId":"comicalromance"},"content":"        assertFalse(readStudMap(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2022-10-15"},{"lineNumber":46,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":47,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":48,"author":{"gitId":"comicalromance"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":49,"author":{"gitId":"comicalromance"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2022-10-15"},{"lineNumber":50,"author":{"gitId":"comicalromance"},"content":"        assertThrows(DataConversionException.class, () -\u003e readStudMap(\"notJsonFormatStudMap.json\"));","lastModifiedDate":"2022-10-15"},{"lineNumber":51,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":52,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":53,"author":{"gitId":"comicalromance"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":54,"author":{"gitId":"comicalromance"},"content":"    public void readStudMap_invalidstudentStudMap_throwDataConversionException() {","lastModifiedDate":"2022-10-15"},{"lineNumber":55,"author":{"gitId":"comicalromance"},"content":"        assertThrows(DataConversionException.class, () -\u003e readStudMap(\"invalidStudentStudMap.json\"));","lastModifiedDate":"2022-10-15"},{"lineNumber":56,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":57,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":58,"author":{"gitId":"comicalromance"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":59,"author":{"gitId":"comicalromance"},"content":"    public void readStudMap_invalidAndValidstudentStudMap_throwDataConversionException() {","lastModifiedDate":"2022-10-15"},{"lineNumber":60,"author":{"gitId":"comicalromance"},"content":"        assertThrows(DataConversionException.class, () -\u003e readStudMap(\"invalidAndValidStudentStudMap.json\"));","lastModifiedDate":"2022-10-15"},{"lineNumber":61,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":62,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":63,"author":{"gitId":"comicalromance"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":64,"author":{"gitId":"comicalromance"},"content":"    public void readAndSaveStudMap_allInOrder_success() throws Exception {","lastModifiedDate":"2022-10-15"},{"lineNumber":65,"author":{"gitId":"comicalromance"},"content":"        Path filePath \u003d testFolder.resolve(\"TempStudMap.json\");","lastModifiedDate":"2022-10-15"},{"lineNumber":66,"author":{"gitId":"comicalromance"},"content":"        StudMap original \u003d getTypicalStudMap();","lastModifiedDate":"2022-10-15"},{"lineNumber":67,"author":{"gitId":"comicalromance"},"content":"        JsonStudMapStorage jsonStudMapStorage \u003d new JsonStudMapStorage(filePath);","lastModifiedDate":"2022-10-15"},{"lineNumber":68,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":69,"author":{"gitId":"comicalromance"},"content":"        // Save in new file and read back","lastModifiedDate":"2022-10-15"},{"lineNumber":70,"author":{"gitId":"comicalromance"},"content":"        jsonStudMapStorage.saveStudMap(original, filePath);","lastModifiedDate":"2022-10-15"},{"lineNumber":71,"author":{"gitId":"comicalromance"},"content":"        ReadOnlyStudMap readBack \u003d jsonStudMapStorage.readStudMap(filePath).get();","lastModifiedDate":"2022-10-15"},{"lineNumber":72,"author":{"gitId":"comicalromance"},"content":"        assertEquals(original, new StudMap(readBack));","lastModifiedDate":"2022-10-15"},{"lineNumber":73,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":74,"author":{"gitId":"comicalromance"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2022-10-15"},{"lineNumber":75,"author":{"gitId":"comicalromance"},"content":"        original.addStudent(HOON);","lastModifiedDate":"2022-10-15"},{"lineNumber":76,"author":{"gitId":"comicalromance"},"content":"        original.removeStudent(ALICE);","lastModifiedDate":"2022-10-15"},{"lineNumber":77,"author":{"gitId":"comicalromance"},"content":"        jsonStudMapStorage.saveStudMap(original, filePath);","lastModifiedDate":"2022-10-15"},{"lineNumber":78,"author":{"gitId":"comicalromance"},"content":"        readBack \u003d jsonStudMapStorage.readStudMap(filePath).get();","lastModifiedDate":"2022-10-15"},{"lineNumber":79,"author":{"gitId":"comicalromance"},"content":"        assertEquals(original, new StudMap(readBack));","lastModifiedDate":"2022-10-15"},{"lineNumber":80,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":81,"author":{"gitId":"comicalromance"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2022-10-15"},{"lineNumber":82,"author":{"gitId":"comicalromance"},"content":"        original.addStudent(IDA);","lastModifiedDate":"2022-10-15"},{"lineNumber":83,"author":{"gitId":"comicalromance"},"content":"        jsonStudMapStorage.saveStudMap(original); // file path not specified","lastModifiedDate":"2022-10-15"},{"lineNumber":84,"author":{"gitId":"comicalromance"},"content":"        readBack \u003d jsonStudMapStorage.readStudMap().get(); // file path not specified","lastModifiedDate":"2022-10-15"},{"lineNumber":85,"author":{"gitId":"comicalromance"},"content":"        assertEquals(original, new StudMap(readBack));","lastModifiedDate":"2022-10-15"},{"lineNumber":86,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":87,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":88,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":89,"author":{"gitId":"comicalromance"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":90,"author":{"gitId":"comicalromance"},"content":"    public void saveStudMap_nullStudMap_throwsNullPointerException() {","lastModifiedDate":"2022-10-15"},{"lineNumber":91,"author":{"gitId":"comicalromance"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveStudMap(null, \"SomeFile.json\"));","lastModifiedDate":"2022-10-15"},{"lineNumber":92,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":93,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":94,"author":{"gitId":"comicalromance"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":95,"author":{"gitId":"comicalromance"},"content":"     * Saves {@code studMap} at the specified {@code filePath}.","lastModifiedDate":"2022-10-15"},{"lineNumber":96,"author":{"gitId":"comicalromance"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":97,"author":{"gitId":"comicalromance"},"content":"    private void saveStudMap(ReadOnlyStudMap studMap, String filePath) {","lastModifiedDate":"2022-10-15"},{"lineNumber":98,"author":{"gitId":"comicalromance"},"content":"        try {","lastModifiedDate":"2022-10-15"},{"lineNumber":99,"author":{"gitId":"comicalromance"},"content":"            new JsonStudMapStorage(Paths.get(filePath))","lastModifiedDate":"2022-10-15"},{"lineNumber":100,"author":{"gitId":"comicalromance"},"content":"                    .saveStudMap(studMap, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2022-10-15"},{"lineNumber":101,"author":{"gitId":"comicalromance"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2022-10-15"},{"lineNumber":102,"author":{"gitId":"comicalromance"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2022-10-15"},{"lineNumber":103,"author":{"gitId":"comicalromance"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":104,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":105,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":106,"author":{"gitId":"comicalromance"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":107,"author":{"gitId":"comicalromance"},"content":"    public void saveStudMap_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2022-10-15"},{"lineNumber":108,"author":{"gitId":"comicalromance"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveStudMap(new StudMap(), null));","lastModifiedDate":"2022-10-15"},{"lineNumber":109,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":110,"author":{"gitId":"comicalromance"},"content":"}","lastModifiedDate":"2022-10-15"}],"authorContributionMap":{"comicalromance":110}},{"path":"src/test/java/seedu/studmap/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.storage;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.commons.core.GuiSettings;","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.UserPrefs;","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"comicalromance"},"content":"        userPrefs.setStudMapFilePath(Paths.get(\"studmap.json\"));","lastModifiedDate":"2022-10-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"-":117,"comicalromance":6}},{"path":"src/test/java/seedu/studmap/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.storage;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.testutil.TypicalStudents.getTypicalStudMap;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.commons.core.GuiSettings;","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.ReadOnlyStudMap;","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.StudMap;","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.UserPrefs;","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"comicalromance"},"content":"        JsonStudMapStorage studMapStorage \u003d new JsonStudMapStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"comicalromance"},"content":"        storageManager \u003d new StorageManager(studMapStorage, userPrefsStorage);","lastModifiedDate":"2022-10-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"comicalromance"},"content":"    public void studMapReadSave() throws Exception {","lastModifiedDate":"2022-10-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"comicalromance"},"content":"         * {@link JsonStudMapStorage} class.","lastModifiedDate":"2022-10-15"},{"lineNumber":55,"author":{"gitId":"comicalromance"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonStudMapStorageTest} class.","lastModifiedDate":"2022-10-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"comicalromance"},"content":"        StudMap original \u003d getTypicalStudMap();","lastModifiedDate":"2022-10-15"},{"lineNumber":58,"author":{"gitId":"comicalromance"},"content":"        storageManager.saveStudMap(original);","lastModifiedDate":"2022-10-15"},{"lineNumber":59,"author":{"gitId":"comicalromance"},"content":"        ReadOnlyStudMap retrieved \u003d storageManager.readStudMap().get();","lastModifiedDate":"2022-10-15"},{"lineNumber":60,"author":{"gitId":"comicalromance"},"content":"        assertEquals(original, new StudMap(retrieved));","lastModifiedDate":"2022-10-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"comicalromance"},"content":"    public void getStudMapFilePath() {","lastModifiedDate":"2022-10-15"},{"lineNumber":65,"author":{"gitId":"comicalromance"},"content":"        assertNotNull(storageManager.getStudMapFilePath());","lastModifiedDate":"2022-10-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":51,"comicalromance":17}},{"path":"src/test/java/seedu/studmap/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.testutil;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2019-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2019-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2017-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Assert {","lastModifiedDate":"2017-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2019-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency","lastModifiedDate":"2019-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2019-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2019-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2019-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2019-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2019-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2019-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2019-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2019-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-17"}],"authorContributionMap":{"-":33,"comicalromance":1}},{"path":"src/test/java/seedu/studmap/testutil/EditStudentDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.testutil;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":3,"author":{"gitId":"comicalromance"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"comicalromance"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"comicalromance"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"Piyotato"},"content":"import seedu.studmap.logic.commands.EditCommand.EditCommandStudentEditor;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"dr-arrgghh"},"content":"import seedu.studmap.model.student.Email;","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"dr-arrgghh"},"content":"import seedu.studmap.model.student.GitName;","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.student.Module;","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"dr-arrgghh"},"content":"import seedu.studmap.model.student.Name;","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"dr-arrgghh"},"content":"import seedu.studmap.model.student.Phone;","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"dr-arrgghh"},"content":"import seedu.studmap.model.student.Student;","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"dr-arrgghh"},"content":"import seedu.studmap.model.student.StudentID;","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"dr-arrgghh"},"content":"import seedu.studmap.model.student.TeleHandle;","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.tag.Tag;","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"comicalromance"},"content":"/**","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"comicalromance"},"content":" * A utility class to help with building EditStudentDescriptor objects.","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"comicalromance"},"content":" */","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"comicalromance"},"content":"public class EditStudentDescriptorBuilder {","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"Piyotato"},"content":"    private EditCommandStudentEditor descriptor;","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"comicalromance"},"content":"    public EditStudentDescriptorBuilder() {","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"Piyotato"},"content":"        descriptor \u003d new EditCommandStudentEditor();","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"Piyotato"},"content":"    public EditStudentDescriptorBuilder(EditCommandStudentEditor descriptor) {","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"Piyotato"},"content":"        this.descriptor \u003d new EditCommandStudentEditor(descriptor);","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":32,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":33,"author":{"gitId":"comicalromance"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":34,"author":{"gitId":"comicalromance"},"content":"     * Returns an {@code EditStudentDescriptor} with fields containing {@code student}\u0027s details","lastModifiedDate":"2022-10-15"},{"lineNumber":35,"author":{"gitId":"comicalromance"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":36,"author":{"gitId":"comicalromance"},"content":"    public EditStudentDescriptorBuilder(Student student) {","lastModifiedDate":"2022-10-15"},{"lineNumber":37,"author":{"gitId":"Piyotato"},"content":"        descriptor \u003d new EditCommandStudentEditor();","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"comicalromance"},"content":"        descriptor.setName(student.getName());","lastModifiedDate":"2022-10-15"},{"lineNumber":39,"author":{"gitId":"comicalromance"},"content":"        descriptor.setPhone(student.getPhone());","lastModifiedDate":"2022-10-15"},{"lineNumber":40,"author":{"gitId":"comicalromance"},"content":"        descriptor.setEmail(student.getEmail());","lastModifiedDate":"2022-10-15"},{"lineNumber":41,"author":{"gitId":"comicalromance"},"content":"        descriptor.setModule(student.getModule());","lastModifiedDate":"2022-10-26"},{"lineNumber":42,"author":{"gitId":"dr-arrgghh"},"content":"        descriptor.setId(student.getId());","lastModifiedDate":"2022-10-25"},{"lineNumber":43,"author":{"gitId":"dr-arrgghh"},"content":"        descriptor.setGitName(student.getGitName());","lastModifiedDate":"2022-10-25"},{"lineNumber":44,"author":{"gitId":"dr-arrgghh"},"content":"        descriptor.setHandle(student.getTeleHandle());","lastModifiedDate":"2022-10-25"},{"lineNumber":45,"author":{"gitId":"comicalromance"},"content":"        descriptor.setTags(student.getTags());","lastModifiedDate":"2022-10-15"},{"lineNumber":46,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":47,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":48,"author":{"gitId":"comicalromance"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":49,"author":{"gitId":"comicalromance"},"content":"     * Sets the {@code Name} of the {@code EditStudentDescriptor} that we are building.","lastModifiedDate":"2022-10-15"},{"lineNumber":50,"author":{"gitId":"comicalromance"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":51,"author":{"gitId":"comicalromance"},"content":"    public EditStudentDescriptorBuilder withName(String name) {","lastModifiedDate":"2022-10-15"},{"lineNumber":52,"author":{"gitId":"comicalromance"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2022-10-15"},{"lineNumber":53,"author":{"gitId":"comicalromance"},"content":"        return this;","lastModifiedDate":"2022-10-15"},{"lineNumber":54,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":55,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":56,"author":{"gitId":"comicalromance"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":57,"author":{"gitId":"comicalromance"},"content":"     * Sets the {@code Phone} of the {@code EditStudentDescriptor} that we are building.","lastModifiedDate":"2022-10-15"},{"lineNumber":58,"author":{"gitId":"comicalromance"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":59,"author":{"gitId":"comicalromance"},"content":"    public EditStudentDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2022-10-15"},{"lineNumber":60,"author":{"gitId":"comicalromance"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2022-10-15"},{"lineNumber":61,"author":{"gitId":"comicalromance"},"content":"        return this;","lastModifiedDate":"2022-10-15"},{"lineNumber":62,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":63,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":64,"author":{"gitId":"comicalromance"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":65,"author":{"gitId":"comicalromance"},"content":"     * Sets the {@code Email} of the {@code EditStudentDescriptor} that we are building.","lastModifiedDate":"2022-10-15"},{"lineNumber":66,"author":{"gitId":"comicalromance"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":67,"author":{"gitId":"comicalromance"},"content":"    public EditStudentDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2022-10-15"},{"lineNumber":68,"author":{"gitId":"comicalromance"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2022-10-15"},{"lineNumber":69,"author":{"gitId":"comicalromance"},"content":"        return this;","lastModifiedDate":"2022-10-15"},{"lineNumber":70,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":71,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":72,"author":{"gitId":"comicalromance"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":73,"author":{"gitId":"comicalromance"},"content":"     * Sets the {@code Module} of the {@code EditStudentDescriptor} that we are building.","lastModifiedDate":"2022-10-26"},{"lineNumber":74,"author":{"gitId":"comicalromance"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":75,"author":{"gitId":"comicalromance"},"content":"    public EditStudentDescriptorBuilder withModule(String module) {","lastModifiedDate":"2022-10-26"},{"lineNumber":76,"author":{"gitId":"comicalromance"},"content":"        descriptor.setModule(new Module(module));","lastModifiedDate":"2022-10-26"},{"lineNumber":77,"author":{"gitId":"comicalromance"},"content":"        return this;","lastModifiedDate":"2022-10-26"},{"lineNumber":78,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":79,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":80,"author":{"gitId":"dr-arrgghh"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":81,"author":{"gitId":"dr-arrgghh"},"content":"     * Sets the {@code StudentId} of the {@code EditStudentDescriptor} that we are building.","lastModifiedDate":"2022-10-25"},{"lineNumber":82,"author":{"gitId":"dr-arrgghh"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":83,"author":{"gitId":"dr-arrgghh"},"content":"    public EditStudentDescriptorBuilder withId(String id) {","lastModifiedDate":"2022-10-25"},{"lineNumber":84,"author":{"gitId":"dr-arrgghh"},"content":"        descriptor.setId(new StudentID(id));","lastModifiedDate":"2022-10-25"},{"lineNumber":85,"author":{"gitId":"dr-arrgghh"},"content":"        return this;","lastModifiedDate":"2022-10-25"},{"lineNumber":86,"author":{"gitId":"dr-arrgghh"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":87,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":88,"author":{"gitId":"dr-arrgghh"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":89,"author":{"gitId":"dr-arrgghh"},"content":"     * Sets the {@code Git} of the {@code EditStudentDescriptor} that we are building.","lastModifiedDate":"2022-10-25"},{"lineNumber":90,"author":{"gitId":"dr-arrgghh"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":91,"author":{"gitId":"dr-arrgghh"},"content":"    public EditStudentDescriptorBuilder withGitName(String name) {","lastModifiedDate":"2022-10-25"},{"lineNumber":92,"author":{"gitId":"dr-arrgghh"},"content":"        descriptor.setGitName(new GitName(name));","lastModifiedDate":"2022-10-25"},{"lineNumber":93,"author":{"gitId":"dr-arrgghh"},"content":"        return this;","lastModifiedDate":"2022-10-25"},{"lineNumber":94,"author":{"gitId":"dr-arrgghh"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":95,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":96,"author":{"gitId":"dr-arrgghh"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":97,"author":{"gitId":"dr-arrgghh"},"content":"     * Sets the {@code Handle} of the {@code EditStudentDescriptor} that we are building.","lastModifiedDate":"2022-10-25"},{"lineNumber":98,"author":{"gitId":"dr-arrgghh"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":99,"author":{"gitId":"dr-arrgghh"},"content":"    public EditStudentDescriptorBuilder withTeleHandle(String teleHandle) {","lastModifiedDate":"2022-10-25"},{"lineNumber":100,"author":{"gitId":"dr-arrgghh"},"content":"        descriptor.setHandle(new TeleHandle(teleHandle));","lastModifiedDate":"2022-10-25"},{"lineNumber":101,"author":{"gitId":"dr-arrgghh"},"content":"        return this;","lastModifiedDate":"2022-10-25"},{"lineNumber":102,"author":{"gitId":"dr-arrgghh"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":103,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":104,"author":{"gitId":"comicalromance"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":105,"author":{"gitId":"comicalromance"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditStudentDescriptor}","lastModifiedDate":"2022-10-15"},{"lineNumber":106,"author":{"gitId":"comicalromance"},"content":"     * that we are building.","lastModifiedDate":"2022-10-15"},{"lineNumber":107,"author":{"gitId":"comicalromance"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":108,"author":{"gitId":"comicalromance"},"content":"    public EditStudentDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2022-10-15"},{"lineNumber":109,"author":{"gitId":"comicalromance"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2022-10-15"},{"lineNumber":110,"author":{"gitId":"comicalromance"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2022-10-15"},{"lineNumber":111,"author":{"gitId":"comicalromance"},"content":"        return this;","lastModifiedDate":"2022-10-15"},{"lineNumber":112,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":113,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":114,"author":{"gitId":"Piyotato"},"content":"    public EditCommandStudentEditor build() {","lastModifiedDate":"2022-10-20"},{"lineNumber":115,"author":{"gitId":"comicalromance"},"content":"        return descriptor;","lastModifiedDate":"2022-10-15"},{"lineNumber":116,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":117,"author":{"gitId":"comicalromance"},"content":"}","lastModifiedDate":"2022-10-15"}],"authorContributionMap":{"dr-arrgghh":34,"Piyotato":7,"comicalromance":76}},{"path":"src/test/java/seedu/studmap/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.testutil;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A class used to test serialization and deserialization","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SerializableTestClass {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2016-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"  }%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"}\");","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String name;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getNameTestValue() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return NAME_TEST_VALUE;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d getNameTestValue();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":71,"comicalromance":1}},{"path":"src/test/java/seedu/studmap/testutil/StudMapBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.testutil;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.StudMap;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.student.Student;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"comicalromance"},"content":" * A utility class to help with building StudMap objects.","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"comicalromance"},"content":" *     {@code StudMap sm \u003d new StudMapBuilder().withStudent(\"John\", \"Doe\").build();}","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"comicalromance"},"content":"public class StudMapBuilder {","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"comicalromance"},"content":"    private StudMap studMap;","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"comicalromance"},"content":"    public StudMapBuilder() {","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"comicalromance"},"content":"        studMap \u003d new StudMap();","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"comicalromance"},"content":"    public StudMapBuilder(StudMap studMap) {","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"comicalromance"},"content":"        this.studMap \u003d studMap;","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":24,"author":{"gitId":"comicalromance"},"content":"     * Adds a new {@code Student} to the {@code StudMap} that we are building.","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":26,"author":{"gitId":"comicalromance"},"content":"    public StudMapBuilder withStudent(Student student) {","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"comicalromance"},"content":"        studMap.addStudent(student);","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"comicalromance"},"content":"    public StudMap build() {","lastModifiedDate":"2022-10-15"},{"lineNumber":32,"author":{"gitId":"comicalromance"},"content":"        return studMap;","lastModifiedDate":"2022-10-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":18,"comicalromance":16}},{"path":"src/test/java/seedu/studmap/testutil/StudentBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.testutil;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"lpohsien"},"content":"import seedu.studmap.model.student.Assignment;","lastModifiedDate":"2022-10-23"},{"lineNumber":7,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.student.Attendance;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.student.Email;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"dr-arrgghh"},"content":"import seedu.studmap.model.student.GitName;","lastModifiedDate":"2022-10-25"},{"lineNumber":10,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.student.Module;","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.student.Name;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"highorbit25"},"content":"import seedu.studmap.model.student.Participation;","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.student.Phone;","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.student.Student;","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.student.StudentData;","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"dr-arrgghh"},"content":"import seedu.studmap.model.student.StudentID;","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"dr-arrgghh"},"content":"import seedu.studmap.model.student.TeleHandle;","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.tag.Tag;","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.util.SampleDataUtil;","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":22,"author":{"gitId":"comicalromance"},"content":" * A utility class to help with building Student objects.","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":24,"author":{"gitId":"comicalromance"},"content":"public class StudentBuilder {","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":27,"author":{"gitId":"Piyotato"},"content":"    public static final String DEFAULT_PHONE \u003d \"\";","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"Piyotato"},"content":"    public static final String DEFAULT_EMAIL \u003d \"\";","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"comicalromance"},"content":"    public static final String DEFAULT_MODULE \u003d \"CS2103T\";","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"dr-arrgghh"},"content":"    public static final String DEFAULT_ID \u003d \"E1234567\";","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"Piyotato"},"content":"    public static final String DEFAULT_GIT \u003d \"\";","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"Piyotato"},"content":"    public static final String DEFAULT_TELE \u003d \"\";","lastModifiedDate":"2022-10-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"comicalromance"},"content":"    private Module module;","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"dr-arrgghh"},"content":"    private StudentID id;","lastModifiedDate":"2022-10-25"},{"lineNumber":39,"author":{"gitId":"dr-arrgghh"},"content":"    private GitName gitName;","lastModifiedDate":"2022-10-25"},{"lineNumber":40,"author":{"gitId":"dr-arrgghh"},"content":"    private TeleHandle handle;","lastModifiedDate":"2022-10-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"comicalromance"},"content":"    private Set\u003cAttendance\u003e attendances;","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"lpohsien"},"content":"    private Set\u003cAssignment\u003e assignments;","lastModifiedDate":"2022-10-23"},{"lineNumber":44,"author":{"gitId":"highorbit25"},"content":"    private Set\u003cParticipation\u003e participations;","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":47,"author":{"gitId":"comicalromance"},"content":"     * Creates a {@code StudentBuilder} with the default details.","lastModifiedDate":"2022-10-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":49,"author":{"gitId":"comicalromance"},"content":"    public StudentBuilder() {","lastModifiedDate":"2022-10-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"comicalromance"},"content":"        module \u003d new Module(DEFAULT_MODULE);","lastModifiedDate":"2022-10-26"},{"lineNumber":54,"author":{"gitId":"dr-arrgghh"},"content":"        id \u003d new StudentID(DEFAULT_ID);","lastModifiedDate":"2022-10-25"},{"lineNumber":55,"author":{"gitId":"dr-arrgghh"},"content":"        gitName \u003d new GitName(DEFAULT_GIT);","lastModifiedDate":"2022-10-25"},{"lineNumber":56,"author":{"gitId":"dr-arrgghh"},"content":"        handle \u003d new TeleHandle(DEFAULT_TELE);","lastModifiedDate":"2022-10-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"comicalromance"},"content":"        attendances \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"lpohsien"},"content":"        assignments \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-23"},{"lineNumber":60,"author":{"gitId":"highorbit25"},"content":"        participations \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":64,"author":{"gitId":"comicalromance"},"content":"     * Initializes the StudentBuilder with the data of {@code studentToCopy}.","lastModifiedDate":"2022-10-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":66,"author":{"gitId":"comicalromance"},"content":"    public StudentBuilder(Student studentToCopy) {","lastModifiedDate":"2022-10-15"},{"lineNumber":67,"author":{"gitId":"comicalromance"},"content":"        name \u003d studentToCopy.getName();","lastModifiedDate":"2022-10-15"},{"lineNumber":68,"author":{"gitId":"comicalromance"},"content":"        phone \u003d studentToCopy.getPhone();","lastModifiedDate":"2022-10-15"},{"lineNumber":69,"author":{"gitId":"comicalromance"},"content":"        email \u003d studentToCopy.getEmail();","lastModifiedDate":"2022-10-15"},{"lineNumber":70,"author":{"gitId":"comicalromance"},"content":"        module \u003d studentToCopy.getModule();","lastModifiedDate":"2022-10-26"},{"lineNumber":71,"author":{"gitId":"dr-arrgghh"},"content":"        id \u003d studentToCopy.getId();","lastModifiedDate":"2022-10-25"},{"lineNumber":72,"author":{"gitId":"dr-arrgghh"},"content":"        gitName \u003d studentToCopy.getGitName();","lastModifiedDate":"2022-10-25"},{"lineNumber":73,"author":{"gitId":"dr-arrgghh"},"content":"        handle \u003d studentToCopy.getTeleHandle();","lastModifiedDate":"2022-10-25"},{"lineNumber":74,"author":{"gitId":"comicalromance"},"content":"        tags \u003d new HashSet\u003c\u003e(studentToCopy.getTags());","lastModifiedDate":"2022-10-15"},{"lineNumber":75,"author":{"gitId":"comicalromance"},"content":"        attendances \u003d new HashSet\u003c\u003e(studentToCopy.getAttendances());","lastModifiedDate":"2022-10-15"},{"lineNumber":76,"author":{"gitId":"lpohsien"},"content":"        assignments \u003d new HashSet\u003c\u003e(studentToCopy.getAssignments());","lastModifiedDate":"2022-10-23"},{"lineNumber":77,"author":{"gitId":"highorbit25"},"content":"        participations \u003d new HashSet\u003c\u003e(studentToCopy.getParticipations());","lastModifiedDate":"2022-10-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":81,"author":{"gitId":"comicalromance"},"content":"     * Sets the {@code Name} of the {@code Student} that we are building.","lastModifiedDate":"2022-10-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":83,"author":{"gitId":"comicalromance"},"content":"    public StudentBuilder withName(String name) {","lastModifiedDate":"2022-10-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":89,"author":{"gitId":"comicalromance"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Student} that we are building.","lastModifiedDate":"2022-10-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":91,"author":{"gitId":"comicalromance"},"content":"    public StudentBuilder withTags(String ... tags) {","lastModifiedDate":"2022-10-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":96,"author":{"gitId":"comicalromance"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"lpohsien"},"content":"     * Parses the {@code classNames} which the student has attended into a","lastModifiedDate":"2022-10-23"},{"lineNumber":98,"author":{"gitId":"comicalromance"},"content":"     * {@code Set\u003cAttendance\u003e} and adds it to the {@code Student} that we are building.","lastModifiedDate":"2022-10-15"},{"lineNumber":99,"author":{"gitId":"comicalromance"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":100,"author":{"gitId":"comicalromance"},"content":"    public StudentBuilder addAttended(String ... classNames) {","lastModifiedDate":"2022-10-15"},{"lineNumber":101,"author":{"gitId":"comicalromance"},"content":"        this.attendances.addAll(SampleDataUtil.getAttendedSet(classNames));","lastModifiedDate":"2022-10-10"},{"lineNumber":102,"author":{"gitId":"comicalromance"},"content":"        return this;","lastModifiedDate":"2022-10-10"},{"lineNumber":103,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":104,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":105,"author":{"gitId":"Piyotato"},"content":"    /**","lastModifiedDate":"2022-11-06"},{"lineNumber":106,"author":{"gitId":"Piyotato"},"content":"     * Adds attendances which the student has.","lastModifiedDate":"2022-11-06"},{"lineNumber":107,"author":{"gitId":"Piyotato"},"content":"     */","lastModifiedDate":"2022-11-06"},{"lineNumber":108,"author":{"gitId":"Piyotato"},"content":"    public StudentBuilder addAttendances(Attendance ... attendances) {","lastModifiedDate":"2022-11-06"},{"lineNumber":109,"author":{"gitId":"Piyotato"},"content":"        this.attendances.addAll(Set.of(attendances));","lastModifiedDate":"2022-11-06"},{"lineNumber":110,"author":{"gitId":"Piyotato"},"content":"        return this;","lastModifiedDate":"2022-11-06"},{"lineNumber":111,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":112,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":113,"author":{"gitId":"comicalromance"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":114,"author":{"gitId":"lpohsien"},"content":"     * Parses the {@code classNames} which the student has attended into a","lastModifiedDate":"2022-10-23"},{"lineNumber":115,"author":{"gitId":"comicalromance"},"content":"     * {@code Set\u003cAttendance\u003e} and adds it to the {@code Student} that we are building.","lastModifiedDate":"2022-10-15"},{"lineNumber":116,"author":{"gitId":"comicalromance"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":117,"author":{"gitId":"comicalromance"},"content":"    public StudentBuilder addNotAttended(String ... classNames) {","lastModifiedDate":"2022-10-15"},{"lineNumber":118,"author":{"gitId":"comicalromance"},"content":"        this.attendances.addAll(SampleDataUtil.getNotAttendedSet(classNames));","lastModifiedDate":"2022-10-10"},{"lineNumber":119,"author":{"gitId":"comicalromance"},"content":"        return this;","lastModifiedDate":"2022-10-10"},{"lineNumber":120,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":121,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":122,"author":{"gitId":"lpohsien"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":123,"author":{"gitId":"lpohsien"},"content":"     * Parses the {@code assignmentNames} which the user has not marked into a","lastModifiedDate":"2022-10-23"},{"lineNumber":124,"author":{"gitId":"lpohsien"},"content":"     * {@code Set\u003cAssignment\u003e} and adds it to the {@code Student} that we are building.","lastModifiedDate":"2022-10-23"},{"lineNumber":125,"author":{"gitId":"lpohsien"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":126,"author":{"gitId":"lpohsien"},"content":"    public StudentBuilder addAssignedNew(String ... assignmentNames) {","lastModifiedDate":"2022-10-23"},{"lineNumber":127,"author":{"gitId":"lpohsien"},"content":"        this.assignments.addAll(SampleDataUtil.getNewAssignments(assignmentNames));","lastModifiedDate":"2022-10-23"},{"lineNumber":128,"author":{"gitId":"lpohsien"},"content":"        return this;","lastModifiedDate":"2022-10-23"},{"lineNumber":129,"author":{"gitId":"lpohsien"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":130,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":131,"author":{"gitId":"lpohsien"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":132,"author":{"gitId":"lpohsien"},"content":"     * Parses the {@code assignmentNames} which the user has received into a","lastModifiedDate":"2022-10-23"},{"lineNumber":133,"author":{"gitId":"lpohsien"},"content":"     * {@code Set\u003cAssignment\u003e} and adds it to the {@code Student} that we are building.","lastModifiedDate":"2022-10-23"},{"lineNumber":134,"author":{"gitId":"lpohsien"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":135,"author":{"gitId":"lpohsien"},"content":"    public StudentBuilder addAssignedReceived(String ... assignmentNames) {","lastModifiedDate":"2022-10-23"},{"lineNumber":136,"author":{"gitId":"lpohsien"},"content":"        this.assignments.addAll(SampleDataUtil.getReceivedAssignments(assignmentNames));","lastModifiedDate":"2022-10-23"},{"lineNumber":137,"author":{"gitId":"lpohsien"},"content":"        return this;","lastModifiedDate":"2022-10-23"},{"lineNumber":138,"author":{"gitId":"lpohsien"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":139,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":140,"author":{"gitId":"lpohsien"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":141,"author":{"gitId":"lpohsien"},"content":"     * Parses the {@code assignmentNames} which the user has marked into a","lastModifiedDate":"2022-10-23"},{"lineNumber":142,"author":{"gitId":"lpohsien"},"content":"     * {@code Set\u003cAssignment\u003e} and adds it to the {@code Student} that we are building.","lastModifiedDate":"2022-10-23"},{"lineNumber":143,"author":{"gitId":"lpohsien"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":144,"author":{"gitId":"lpohsien"},"content":"    public StudentBuilder addAssignedMarked(String ... assignmentNames) {","lastModifiedDate":"2022-10-23"},{"lineNumber":145,"author":{"gitId":"lpohsien"},"content":"        this.assignments.addAll(SampleDataUtil.getMarkedAssignments(assignmentNames));","lastModifiedDate":"2022-10-23"},{"lineNumber":146,"author":{"gitId":"lpohsien"},"content":"        return this;","lastModifiedDate":"2022-10-23"},{"lineNumber":147,"author":{"gitId":"lpohsien"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":148,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":149,"author":{"gitId":"Piyotato"},"content":"    /**","lastModifiedDate":"2022-11-06"},{"lineNumber":150,"author":{"gitId":"Piyotato"},"content":"     * Adds participations which the student has.","lastModifiedDate":"2022-11-06"},{"lineNumber":151,"author":{"gitId":"Piyotato"},"content":"     */","lastModifiedDate":"2022-11-06"},{"lineNumber":152,"author":{"gitId":"Piyotato"},"content":"    public StudentBuilder addAssignments(Assignment ... assignments) {","lastModifiedDate":"2022-11-06"},{"lineNumber":153,"author":{"gitId":"Piyotato"},"content":"        this.assignments.addAll(Set.of(assignments));","lastModifiedDate":"2022-11-06"},{"lineNumber":154,"author":{"gitId":"Piyotato"},"content":"        return this;","lastModifiedDate":"2022-11-06"},{"lineNumber":155,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":156,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":157,"author":{"gitId":"comicalromance"},"content":"    public StudentBuilder setAttended(Set\u003cAttendance\u003e attendances) {","lastModifiedDate":"2022-10-15"},{"lineNumber":158,"author":{"gitId":"comicalromance"},"content":"        this.attendances \u003d attendances;","lastModifiedDate":"2022-10-10"},{"lineNumber":159,"author":{"gitId":"comicalromance"},"content":"        return this;","lastModifiedDate":"2022-10-10"},{"lineNumber":160,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":161,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":162,"author":{"gitId":"lpohsien"},"content":"    public StudentBuilder setAssigned(Set\u003cAssignment\u003e assignments) {","lastModifiedDate":"2022-10-23"},{"lineNumber":163,"author":{"gitId":"lpohsien"},"content":"        this.assignments \u003d assignments;","lastModifiedDate":"2022-10-23"},{"lineNumber":164,"author":{"gitId":"lpohsien"},"content":"        return this;","lastModifiedDate":"2022-10-23"},{"lineNumber":165,"author":{"gitId":"lpohsien"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":166,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":167,"author":{"gitId":"highorbit25"},"content":"    public StudentBuilder setParticipated(Set\u003cParticipation\u003e participations) {","lastModifiedDate":"2022-10-28"},{"lineNumber":168,"author":{"gitId":"highorbit25"},"content":"        this.participations \u003d participations;","lastModifiedDate":"2022-10-28"},{"lineNumber":169,"author":{"gitId":"highorbit25"},"content":"        return this;","lastModifiedDate":"2022-10-28"},{"lineNumber":170,"author":{"gitId":"highorbit25"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":171,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":172,"author":{"gitId":"highorbit25"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":173,"author":{"gitId":"highorbit25"},"content":"     * Parses the {@code participationComponent} which the student has participated into a","lastModifiedDate":"2022-10-27"},{"lineNumber":174,"author":{"gitId":"highorbit25"},"content":"     * {@code Set\u003cParticipation\u003e} and adds it to the {@code Student} that we are building.","lastModifiedDate":"2022-10-27"},{"lineNumber":175,"author":{"gitId":"highorbit25"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":176,"author":{"gitId":"Piyotato"},"content":"    public StudentBuilder addParticipations(String ... participationComponent) {","lastModifiedDate":"2022-11-06"},{"lineNumber":177,"author":{"gitId":"highorbit25"},"content":"        this.participations.addAll(SampleDataUtil.getParticipatedSet(participationComponent));","lastModifiedDate":"2022-10-27"},{"lineNumber":178,"author":{"gitId":"highorbit25"},"content":"        return this;","lastModifiedDate":"2022-10-27"},{"lineNumber":179,"author":{"gitId":"highorbit25"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":180,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":181,"author":{"gitId":"highorbit25"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":182,"author":{"gitId":"highorbit25"},"content":"     * Parses the {@code participationComponent} which the student has not participated into a","lastModifiedDate":"2022-10-27"},{"lineNumber":183,"author":{"gitId":"highorbit25"},"content":"     * {@code Set\u003cParticipation\u003e} and adds it to the {@code Student} that we are building.","lastModifiedDate":"2022-10-27"},{"lineNumber":184,"author":{"gitId":"highorbit25"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":185,"author":{"gitId":"highorbit25"},"content":"    public StudentBuilder addNotParticipated(String ... notParticipatedComponent) {","lastModifiedDate":"2022-10-27"},{"lineNumber":186,"author":{"gitId":"highorbit25"},"content":"        this.participations.addAll(SampleDataUtil.getNotParticipatedSet(notParticipatedComponent));","lastModifiedDate":"2022-10-27"},{"lineNumber":187,"author":{"gitId":"highorbit25"},"content":"        return this;","lastModifiedDate":"2022-10-27"},{"lineNumber":188,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":189,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":190,"author":{"gitId":"Piyotato"},"content":"    /**","lastModifiedDate":"2022-11-06"},{"lineNumber":191,"author":{"gitId":"Piyotato"},"content":"     * Adds participations which the student has.","lastModifiedDate":"2022-11-06"},{"lineNumber":192,"author":{"gitId":"Piyotato"},"content":"     */","lastModifiedDate":"2022-11-06"},{"lineNumber":193,"author":{"gitId":"Piyotato"},"content":"    public StudentBuilder addParticipation(Participation ... participations) {","lastModifiedDate":"2022-11-06"},{"lineNumber":194,"author":{"gitId":"Piyotato"},"content":"        this.participations.addAll(Set.of(participations));","lastModifiedDate":"2022-11-06"},{"lineNumber":195,"author":{"gitId":"Piyotato"},"content":"        return this;","lastModifiedDate":"2022-11-06"},{"lineNumber":196,"author":{"gitId":"highorbit25"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":197,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":199,"author":{"gitId":"comicalromance"},"content":"     * Sets the {@code Phone} of the {@code Student} that we are building.","lastModifiedDate":"2022-10-15"},{"lineNumber":200,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":201,"author":{"gitId":"comicalromance"},"content":"    public StudentBuilder withPhone(String phone) {","lastModifiedDate":"2022-10-15"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":207,"author":{"gitId":"comicalromance"},"content":"     * Sets the {@code Email} of the {@code Student} that we are building.","lastModifiedDate":"2022-10-15"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":209,"author":{"gitId":"comicalromance"},"content":"    public StudentBuilder withEmail(String email) {","lastModifiedDate":"2022-10-15"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":214,"author":{"gitId":"comicalromance"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":215,"author":{"gitId":"comicalromance"},"content":"     * Sets the {@code Module} of the {@code Student} that we are building.","lastModifiedDate":"2022-10-26"},{"lineNumber":216,"author":{"gitId":"comicalromance"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":217,"author":{"gitId":"comicalromance"},"content":"    public StudentBuilder withModule(String module) {","lastModifiedDate":"2022-10-26"},{"lineNumber":218,"author":{"gitId":"comicalromance"},"content":"        this.module \u003d new Module(module);","lastModifiedDate":"2022-10-26"},{"lineNumber":219,"author":{"gitId":"comicalromance"},"content":"        return this;","lastModifiedDate":"2022-10-26"},{"lineNumber":220,"author":{"gitId":"comicalromance"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":221,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":222,"author":{"gitId":"dr-arrgghh"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":223,"author":{"gitId":"dr-arrgghh"},"content":"     * Sets the {@code id} of the {@code StudentID} that we are building.","lastModifiedDate":"2022-10-26"},{"lineNumber":224,"author":{"gitId":"dr-arrgghh"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":225,"author":{"gitId":"dr-arrgghh"},"content":"    public StudentBuilder withId(String id) {","lastModifiedDate":"2022-10-25"},{"lineNumber":226,"author":{"gitId":"dr-arrgghh"},"content":"        this.id \u003d new StudentID(id);","lastModifiedDate":"2022-10-25"},{"lineNumber":227,"author":{"gitId":"dr-arrgghh"},"content":"        return this;","lastModifiedDate":"2022-10-25"},{"lineNumber":228,"author":{"gitId":"dr-arrgghh"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":229,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":230,"author":{"gitId":"dr-arrgghh"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":231,"author":{"gitId":"dr-arrgghh"},"content":"     * Sets the {@code gitName} of the {@code GitName} that we are building.","lastModifiedDate":"2022-10-26"},{"lineNumber":232,"author":{"gitId":"dr-arrgghh"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":233,"author":{"gitId":"dr-arrgghh"},"content":"    public StudentBuilder withGitName(String name) {","lastModifiedDate":"2022-10-25"},{"lineNumber":234,"author":{"gitId":"dr-arrgghh"},"content":"        this.gitName \u003d new GitName(name);","lastModifiedDate":"2022-10-25"},{"lineNumber":235,"author":{"gitId":"dr-arrgghh"},"content":"        return this;","lastModifiedDate":"2022-10-25"},{"lineNumber":236,"author":{"gitId":"dr-arrgghh"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":237,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":238,"author":{"gitId":"dr-arrgghh"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":239,"author":{"gitId":"dr-arrgghh"},"content":"     * Sets the {@code handle} of the {@code TeleHandle} that we are building.","lastModifiedDate":"2022-10-26"},{"lineNumber":240,"author":{"gitId":"dr-arrgghh"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":241,"author":{"gitId":"dr-arrgghh"},"content":"    public StudentBuilder withTeleHandle(String teleHandle) {","lastModifiedDate":"2022-10-25"},{"lineNumber":242,"author":{"gitId":"dr-arrgghh"},"content":"        this.handle \u003d new TeleHandle(teleHandle);","lastModifiedDate":"2022-10-25"},{"lineNumber":243,"author":{"gitId":"dr-arrgghh"},"content":"        return this;","lastModifiedDate":"2022-10-25"},{"lineNumber":244,"author":{"gitId":"dr-arrgghh"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":245,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":246,"author":{"gitId":"Piyotato"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":247,"author":{"gitId":"comicalromance"},"content":"     * Builds the student using the given parameters.","lastModifiedDate":"2022-10-15"},{"lineNumber":248,"author":{"gitId":"comicalromance"},"content":"     * @return New Student.","lastModifiedDate":"2022-10-15"},{"lineNumber":249,"author":{"gitId":"Piyotato"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":250,"author":{"gitId":"comicalromance"},"content":"    public Student build() {","lastModifiedDate":"2022-10-15"},{"lineNumber":251,"author":{"gitId":"comicalromance"},"content":"        StudentData studentData \u003d new StudentData();","lastModifiedDate":"2022-10-15"},{"lineNumber":252,"author":{"gitId":"comicalromance"},"content":"        studentData.setName(this.name);","lastModifiedDate":"2022-10-15"},{"lineNumber":253,"author":{"gitId":"comicalromance"},"content":"        studentData.setPhone(this.phone);","lastModifiedDate":"2022-10-15"},{"lineNumber":254,"author":{"gitId":"comicalromance"},"content":"        studentData.setEmail(this.email);","lastModifiedDate":"2022-10-15"},{"lineNumber":255,"author":{"gitId":"comicalromance"},"content":"        studentData.setModule(this.module);","lastModifiedDate":"2022-10-26"},{"lineNumber":256,"author":{"gitId":"dr-arrgghh"},"content":"        studentData.setId(this.id);","lastModifiedDate":"2022-10-25"},{"lineNumber":257,"author":{"gitId":"dr-arrgghh"},"content":"        studentData.setGitUser(this.gitName);","lastModifiedDate":"2022-10-25"},{"lineNumber":258,"author":{"gitId":"dr-arrgghh"},"content":"        studentData.setTeleHandle(this.handle);","lastModifiedDate":"2022-10-25"},{"lineNumber":259,"author":{"gitId":"comicalromance"},"content":"        studentData.setTags(this.tags);","lastModifiedDate":"2022-10-15"},{"lineNumber":260,"author":{"gitId":"comicalromance"},"content":"        studentData.setAttendances(this.attendances);","lastModifiedDate":"2022-10-15"},{"lineNumber":261,"author":{"gitId":"lpohsien"},"content":"        studentData.setAssignments(this.assignments);","lastModifiedDate":"2022-10-23"},{"lineNumber":262,"author":{"gitId":"highorbit25"},"content":"        studentData.setParticipations(this.participations);","lastModifiedDate":"2022-10-27"},{"lineNumber":263,"author":{"gitId":"comicalromance"},"content":"        return new Student(studentData);","lastModifiedDate":"2022-10-15"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":266,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"highorbit25":27,"dr-arrgghh":40,"Piyotato":31,"-":54,"comicalromance":75,"lpohsien":39}},{"path":"src/test/java/seedu/studmap/testutil/StudentUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.testutil;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"dr-arrgghh"},"content":"import static seedu.studmap.logic.parser.CliSyntax.PREFIX_GIT;","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"dr-arrgghh"},"content":"import static seedu.studmap.logic.parser.CliSyntax.PREFIX_HANDLE;","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"dr-arrgghh"},"content":"import static seedu.studmap.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":14,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.logic.commands.AddCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"Piyotato"},"content":"import seedu.studmap.logic.commands.EditCommand.EditCommandStudentEditor;","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.student.Student;","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.tag.Tag;","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"comicalromance"},"content":" * A utility class for Student.","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"comicalromance"},"content":"public class StudentUtil {","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"comicalromance"},"content":"     * Returns an add command string for adding the {@code student}.","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"comicalromance"},"content":"    public static String getAddCommand(Student student) {","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"comicalromance"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getstudentDetails(student);","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"comicalromance"},"content":"     * Returns the part of command string for the given {@code student}\u0027s details.","lastModifiedDate":"2022-10-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":34,"author":{"gitId":"comicalromance"},"content":"    public static String getstudentDetails(Student student) {","lastModifiedDate":"2022-10-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"comicalromance"},"content":"        sb.append(PREFIX_NAME + student.getName().fullName + \" \");","lastModifiedDate":"2022-10-15"},{"lineNumber":37,"author":{"gitId":"comicalromance"},"content":"        sb.append(PREFIX_PHONE + student.getPhone().value + \" \");","lastModifiedDate":"2022-10-15"},{"lineNumber":38,"author":{"gitId":"comicalromance"},"content":"        sb.append(PREFIX_EMAIL + student.getEmail().value + \" \");","lastModifiedDate":"2022-10-15"},{"lineNumber":39,"author":{"gitId":"comicalromance"},"content":"        sb.append(PREFIX_MODULE + student.getModule().value + \" \");","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"dr-arrgghh"},"content":"        sb.append(PREFIX_ID + student.getId().value + \" \");","lastModifiedDate":"2022-10-26"},{"lineNumber":41,"author":{"gitId":"dr-arrgghh"},"content":"        sb.append(PREFIX_GIT + student.getGitName().value + \" \");","lastModifiedDate":"2022-10-26"},{"lineNumber":42,"author":{"gitId":"dr-arrgghh"},"content":"        sb.append(PREFIX_HANDLE + student.getTeleHandle().value + \" \");","lastModifiedDate":"2022-10-26"},{"lineNumber":43,"author":{"gitId":"comicalromance"},"content":"        student.getTags().stream().forEach(","lastModifiedDate":"2022-10-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"comicalromance"},"content":"     * Returns the part of command string for the given {@code EditStudentDescriptor}\u0027s details.","lastModifiedDate":"2022-10-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"Piyotato"},"content":"    public static String getEditstudentDescriptorDetails(EditCommandStudentEditor descriptor) {","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"comicalromance"},"content":"        descriptor.getModule().ifPresent(module -\u003e sb.append(PREFIX_MODULE).append(module.value).append(\" \"));","lastModifiedDate":"2022-10-26"},{"lineNumber":58,"author":{"gitId":"dr-arrgghh"},"content":"        descriptor.getId().ifPresent(studentID -\u003e sb.append(PREFIX_ID).append(studentID.value).append(\" \"));","lastModifiedDate":"2022-10-26"},{"lineNumber":59,"author":{"gitId":"dr-arrgghh"},"content":"        descriptor.getGitName().ifPresent(gitName -\u003e sb.append(PREFIX_GIT).append(gitName.value).append(\" \"));","lastModifiedDate":"2022-10-26"},{"lineNumber":60,"author":{"gitId":"dr-arrgghh"},"content":"        descriptor.getHandle().ifPresent(teleHandle -\u003e sb.append(PREFIX_HANDLE).append(teleHandle.value).append(\" \"));","lastModifiedDate":"2022-10-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"dr-arrgghh":9,"Piyotato":2,"-":37,"comicalromance":23}},{"path":"src/test/java/seedu/studmap/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.testutil;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.commons.core.index.Index;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.Model;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.student.Student;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"comicalromance"},"content":"     * Returns the middle index of the student in the {@code model}\u0027s student list.","lastModifiedDate":"2022-10-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"comicalromance"},"content":"        return Index.fromOneBased(model.getFilteredStudentList().size() / 2);","lastModifiedDate":"2022-10-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"comicalromance"},"content":"     * Returns the last index of the student in the {@code model}\u0027s student list.","lastModifiedDate":"2022-10-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"comicalromance"},"content":"        return Index.fromOneBased(model.getFilteredStudentList().size());","lastModifiedDate":"2022-10-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"comicalromance"},"content":"     * Returns the student in the {@code model}\u0027s student list at {@code index}.","lastModifiedDate":"2022-10-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"comicalromance"},"content":"    public static Student getStudent(Model model, Index index) {","lastModifiedDate":"2022-10-15"},{"lineNumber":53,"author":{"gitId":"comicalromance"},"content":"        return model.getFilteredStudentList().get(index.getZeroBased());","lastModifiedDate":"2022-10-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":44,"comicalromance":11}},{"path":"src/test/java/seedu/studmap/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.testutil;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.commons.core.index.Index;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"comicalromance"},"content":"    public static final Index INDEX_FIRST_STUDENT \u003d Index.fromOneBased(1);","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"comicalromance"},"content":"    public static final Index INDEX_SECOND_STUDENT \u003d Index.fromOneBased(2);","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"comicalromance"},"content":"    public static final Index INDEX_THIRD_STUDENT \u003d Index.fromOneBased(3);","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"-":7,"comicalromance":5}},{"path":"src/test/java/seedu/studmap/testutil/TypicalStudents.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.testutil;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"dr-arrgghh"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.VALID_GIT_AMY;","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"dr-arrgghh"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.VALID_GIT_BOB;","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"dr-arrgghh"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.VALID_HANDLE_AMY;","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"dr-arrgghh"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.VALID_HANDLE_BOB;","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"dr-arrgghh"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.VALID_ID_AMY;","lastModifiedDate":"2022-10-25"},{"lineNumber":10,"author":{"gitId":"dr-arrgghh"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.VALID_ID_BOB;","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.VALID_MODULE_AMY;","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.VALID_MODULE_BOB;","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":24,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.StudMap;","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.model.student.Student;","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":28,"author":{"gitId":"comicalromance"},"content":" * A utility class containing a list of {@code Student} objects to be used in tests.","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":30,"author":{"gitId":"comicalromance"},"content":"public class TypicalStudents {","lastModifiedDate":"2022-10-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":32,"author":{"gitId":"comicalromance"},"content":"    public static final Student ALICE \u003d new StudentBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2022-10-15"},{"lineNumber":33,"author":{"gitId":"comicalromance"},"content":"            .withEmail(\"alice@example.com\").withId(\"E1234561\").withGitName(\"user1\")","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"comicalromance"},"content":"            .withTeleHandle(\"@user1\").withPhone(\"94351253\").withModule(\"CS2103T\")","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"Piyotato"},"content":"            .withTags(\"friends\")","lastModifiedDate":"2022-11-06"},{"lineNumber":36,"author":{"gitId":"Piyotato"},"content":"            .build();","lastModifiedDate":"2022-11-06"},{"lineNumber":37,"author":{"gitId":"comicalromance"},"content":"    public static final Student BENSON \u003d new StudentBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2022-10-15"},{"lineNumber":38,"author":{"gitId":"comicalromance"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\").withModule(\"CS2103T\")","lastModifiedDate":"2022-10-26"},{"lineNumber":39,"author":{"gitId":"dr-arrgghh"},"content":"            .withId(\"E1234562\").withGitName(\"user2\")","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"dr-arrgghh"},"content":"            .withTeleHandle(\"@user2\").withTags(\"owesMoney\", \"friends\")","lastModifiedDate":"2022-10-25"},{"lineNumber":41,"author":{"gitId":"comicalromance"},"content":"            .addAttended(\"T01\", \"T02\")","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"Piyotato"},"content":"            .addNotAttended(\"T03\")","lastModifiedDate":"2022-11-06"},{"lineNumber":43,"author":{"gitId":"Piyotato"},"content":"            .addParticipations(\"P01\")","lastModifiedDate":"2022-11-06"},{"lineNumber":44,"author":{"gitId":"Piyotato"},"content":"            .build();","lastModifiedDate":"2022-11-06"},{"lineNumber":45,"author":{"gitId":"comicalromance"},"content":"    public static final Student CARL \u003d new StudentBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2022-10-15"},{"lineNumber":46,"author":{"gitId":"comicalromance"},"content":"            .withEmail(\"heinz@example.com\").withModule(\"CS2103T\")","lastModifiedDate":"2022-10-26"},{"lineNumber":47,"author":{"gitId":"comicalromance"},"content":"            .withId(\"E1234563\").withGitName(\"user3\")","lastModifiedDate":"2022-10-26"},{"lineNumber":48,"author":{"gitId":"comicalromance"},"content":"            .withTeleHandle(\"@user3\").addAssignedMarked(\"A01\", \"A02\")","lastModifiedDate":"2022-10-26"},{"lineNumber":49,"author":{"gitId":"lpohsien"},"content":"            .addAssignedReceived(\"A03\")","lastModifiedDate":"2022-10-23"},{"lineNumber":50,"author":{"gitId":"lpohsien"},"content":"            .addAssignedNew(\"A04\").build();","lastModifiedDate":"2022-10-23"},{"lineNumber":51,"author":{"gitId":"comicalromance"},"content":"    public static final Student DANIEL \u003d new StudentBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2022-10-15"},{"lineNumber":52,"author":{"gitId":"comicalromance"},"content":"            .withEmail(\"cornelia@example.com\").withModule(\"CS2103T\").withId(\"E1234564\").withGitName(\"user4\")","lastModifiedDate":"2022-10-26"},{"lineNumber":53,"author":{"gitId":"highorbit25"},"content":"            .withTeleHandle(\"@user4\").withTags(\"friends\")","lastModifiedDate":"2022-10-27"},{"lineNumber":54,"author":{"gitId":"Piyotato"},"content":"            .addParticipations(\"P01\")","lastModifiedDate":"2022-11-06"},{"lineNumber":55,"author":{"gitId":"highorbit25"},"content":"            .addNotParticipated(\"P02\").build();","lastModifiedDate":"2022-10-27"},{"lineNumber":56,"author":{"gitId":"comicalromance"},"content":"    public static final Student ELLE \u003d new StudentBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2022-10-15"},{"lineNumber":57,"author":{"gitId":"comicalromance"},"content":"            .withEmail(\"werner@example.com\").withModule(\"CS2103T\").withId(\"E1234565\").withGitName(\"user5\")","lastModifiedDate":"2022-10-26"},{"lineNumber":58,"author":{"gitId":"comicalromance"},"content":"            .withTeleHandle(\"@user5\").build();","lastModifiedDate":"2022-10-26"},{"lineNumber":59,"author":{"gitId":"comicalromance"},"content":"    public static final Student FIONA \u003d new StudentBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2022-10-15"},{"lineNumber":60,"author":{"gitId":"comicalromance"},"content":"            .withEmail(\"lydia@example.com\").withModule(\"CS2103T\").withId(\"E1234566\").withGitName(\"user6\")","lastModifiedDate":"2022-10-26"},{"lineNumber":61,"author":{"gitId":"comicalromance"},"content":"            .withTeleHandle(\"@user6\").build();","lastModifiedDate":"2022-10-26"},{"lineNumber":62,"author":{"gitId":"comicalromance"},"content":"    public static final Student GEORGE \u003d new StudentBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2022-10-15"},{"lineNumber":63,"author":{"gitId":"comicalromance"},"content":"            .withEmail(\"anna@example.com\").withModule(\"CS2103T\").withId(\"E1234567\").withGitName(\"user7\")","lastModifiedDate":"2022-10-26"},{"lineNumber":64,"author":{"gitId":"comicalromance"},"content":"            .withTeleHandle(\"@user7\").build();","lastModifiedDate":"2022-10-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":67,"author":{"gitId":"comicalromance"},"content":"    public static final Student HOON \u003d new StudentBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2022-10-15"},{"lineNumber":68,"author":{"gitId":"comicalromance"},"content":"            .withEmail(\"stefan@example.com\").withModule(\"CS2103T\").withId(\"E1234568\").withGitName(\"user8\")","lastModifiedDate":"2022-10-26"},{"lineNumber":69,"author":{"gitId":"comicalromance"},"content":"            .withTeleHandle(\"@user8\").build();","lastModifiedDate":"2022-10-26"},{"lineNumber":70,"author":{"gitId":"comicalromance"},"content":"    public static final Student IDA \u003d new StudentBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2022-10-15"},{"lineNumber":71,"author":{"gitId":"comicalromance"},"content":"            .withEmail(\"hans@example.com\").withModule(\"CS2103T\").withId(\"E1234569\").withGitName(\"user9\")","lastModifiedDate":"2022-10-26"},{"lineNumber":72,"author":{"gitId":"comicalromance"},"content":"            .withTeleHandle(\"@user9\").build();","lastModifiedDate":"2022-10-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":74,"author":{"gitId":"comicalromance"},"content":"    // Manually added - Student\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2022-10-15"},{"lineNumber":75,"author":{"gitId":"comicalromance"},"content":"    public static final Student AMY \u003d new StudentBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2022-10-15"},{"lineNumber":76,"author":{"gitId":"comicalromance"},"content":"            .withEmail(VALID_EMAIL_AMY).withModule(VALID_MODULE_AMY).withId(VALID_ID_AMY).withGitName(VALID_GIT_AMY)","lastModifiedDate":"2022-10-26"},{"lineNumber":77,"author":{"gitId":"comicalromance"},"content":"            .withTeleHandle(VALID_HANDLE_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-26"},{"lineNumber":78,"author":{"gitId":"comicalromance"},"content":"    public static final Student BOB \u003d new StudentBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-10-15"},{"lineNumber":79,"author":{"gitId":"comicalromance"},"content":"            .withEmail(VALID_EMAIL_BOB).withModule(VALID_MODULE_BOB).withId(VALID_ID_BOB).withGitName(VALID_GIT_BOB)","lastModifiedDate":"2022-10-26"},{"lineNumber":80,"author":{"gitId":"comicalromance"},"content":"            .withTeleHandle(VALID_HANDLE_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2022-10-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":85,"author":{"gitId":"Piyotato"},"content":"    private TypicalStudents() {","lastModifiedDate":"2022-10-26"},{"lineNumber":86,"author":{"gitId":"Piyotato"},"content":"    } // prevents instantiation","lastModifiedDate":"2022-10-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":89,"author":{"gitId":"comicalromance"},"content":"     * Returns an {@code StudMap} with all the typical students.","lastModifiedDate":"2022-10-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":91,"author":{"gitId":"comicalromance"},"content":"    public static StudMap getTypicalStudMap() {","lastModifiedDate":"2022-10-15"},{"lineNumber":92,"author":{"gitId":"comicalromance"},"content":"        StudMap sm \u003d new StudMap();","lastModifiedDate":"2022-10-15"},{"lineNumber":93,"author":{"gitId":"comicalromance"},"content":"        for (Student student : getTypicalStudents()) {","lastModifiedDate":"2022-10-15"},{"lineNumber":94,"author":{"gitId":"comicalromance"},"content":"            sm.addStudent(student);","lastModifiedDate":"2022-10-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":96,"author":{"gitId":"comicalromance"},"content":"        return sm;","lastModifiedDate":"2022-10-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":99,"author":{"gitId":"comicalromance"},"content":"    public static List\u003cStudent\u003e getTypicalStudents() {","lastModifiedDate":"2022-10-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"highorbit25":2,"dr-arrgghh":8,"Piyotato":8,"-":26,"comicalromance":56,"lpohsien":2}},{"path":"src/test/java/seedu/studmap/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.ui;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.beans.DefaultProperty;","lastModifiedDate":"2016-12-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A test object which can be constructed via an FXML file.","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@DefaultProperty(\"text\")","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class TestFxmlObject {","lastModifiedDate":"2016-12-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private String text;","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public TestFxmlObject() {}","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public TestFxmlObject(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        setText(text);","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return text;","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setText(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.text \u003d text;","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-04-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                || (other instanceof TestFxmlObject // instanceof handles nulls","lastModifiedDate":"2017-04-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                        \u0026\u0026 text.equals(((TestFxmlObject) other).getText()));","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"-":34,"comicalromance":1}},{"path":"src/test/java/seedu/studmap/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"package seedu.studmap.ui;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"comicalromance"},"content":"import static seedu.studmap.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"comicalromance"},"content":"import seedu.studmap.MainApp;","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UiPartTest {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2016-12-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2016-12-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2016-12-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2016-12-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2019-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return testFileUrl;","lastModifiedDate":"2016-12-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * UiPart used for testing.","lastModifiedDate":"2016-12-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * It should only be used with invalid FXML files or the valid file located at {@link VALID_FILE_PATH}.","lastModifiedDate":"2016-12-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @FXML","lastModifiedDate":"2016-12-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2016-12-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2016-12-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","lastModifiedDate":"2016-12-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"-":111,"comicalromance":3}},{"path":"src/test/resources/view/UiPartTest/validFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"comicalromance"},"content":"\u003c?import seedu.studmap.ui.TestFxmlObject?\u003e","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"-":3,"comicalromance":1}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":3,"author":{"gitId":"comicalromance"},"content":"\u003cfx:root type\u003d\"seedu.studmap.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx\"","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"-":5,"comicalromance":1}}]
