[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"highorbit25"},"content":"[![CI Status](https://github.com/AY2223S1-CS2103T-W13-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S1-CS2103T-W13-1/tp/actions)","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":3,"author":{"gitId":"highorbit25"},"content":"StudMap (SM) is a desktop app for managing your students, optimized for use via a Command Line Interface (CLI)","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"dr-arrgghh"},"content":"while still having the benefits of a Graphical User Interface (GUI). If you can type fast, SM can get your student","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"dr-arrgghh"},"content":"management tasks done faster than traditional GUI apps.","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"highorbit25"},"content":"## Site Map","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"highorbit25"},"content":"* [About Us](docs/AboutUs.md)","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"highorbit25"},"content":"* [User Guide](docs/UserGuide.md)","lastModifiedDate":"2022-09-29"},{"lineNumber":13,"author":{"gitId":"highorbit25"},"content":"* [Developer Guide](docs/DeveloperGuide.md)","lastModifiedDate":"2022-09-29"},{"lineNumber":14,"author":{"gitId":"highorbit25"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":15,"author":{"gitId":"highorbit25"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2022-09-29"}],"authorContributionMap":{"highorbit25":9,"dr-arrgghh":3,"-":3}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"comicalromance"},"content":"### Sheyuan Yeo","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"comicalromance"},"content":"\u003cimg src\u003d\"images/piyotato.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"comicalromance"},"content":"[[github](https://github.com/Piyotato)]","lastModifiedDate":"2022-09-28"},{"lineNumber":17,"author":{"gitId":"comicalromance"},"content":"[[portfolio](team/piyotato.md)]","lastModifiedDate":"2022-09-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"comicalromance"},"content":"* Role: Developer","lastModifiedDate":"2022-09-28"},{"lineNumber":20,"author":{"gitId":"comicalromance"},"content":"* Responsibilities: [To Be Added]","lastModifiedDate":"2022-09-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"comicalromance"},"content":"### Silas Yeo","lastModifiedDate":"2022-09-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"comicalromance"},"content":"\u003cimg src\u003d\"images/comicalromance.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"comicalromance"},"content":"[[github](http://github.com/comicalromance)]","lastModifiedDate":"2022-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"comicalromance"},"content":"* Role: Developer","lastModifiedDate":"2022-09-28"},{"lineNumber":30,"author":{"gitId":"comicalromance"},"content":"* Responsibilities: [To Be Added]","lastModifiedDate":"2022-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"comicalromance"},"content":"### Po Hsien","lastModifiedDate":"2022-09-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"comicalromance"},"content":"\u003cimg src\u003d\"images/lpohsien.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"comicalromance"},"content":"[[github](http://github.com/lpohsien)]","lastModifiedDate":"2022-09-28"},{"lineNumber":37,"author":{"gitId":"comicalromance"},"content":"[[portfolio](team/lpohsien.md)]","lastModifiedDate":"2022-09-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"comicalromance"},"content":"* Responsibilities: [To Be Added]","lastModifiedDate":"2022-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"comicalromance"},"content":"### Lin Zizheng","lastModifiedDate":"2022-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"comicalromance"},"content":"\u003cimg src\u003d\"images/dr-arrgghh.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"comicalromance"},"content":"[[github](http://github.com/dr-arrgghh)]","lastModifiedDate":"2022-09-28"},{"lineNumber":47,"author":{"gitId":"comicalromance"},"content":"[[portfolio](team/dr-arrgghh.md)]","lastModifiedDate":"2022-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"comicalromance"},"content":"* Responsibilities: [To Be Added]","lastModifiedDate":"2022-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"comicalromance"},"content":"### Pang Bao Bin","lastModifiedDate":"2022-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"comicalromance"},"content":"\u003cimg src\u003d\"images/highorbit25.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"comicalromance"},"content":"[[github](http://github.com/highorbit25)]","lastModifiedDate":"2022-09-28"},{"lineNumber":57,"author":{"gitId":"comicalromance"},"content":"[[portfolio](team/highorbit25.md)]","lastModifiedDate":"2022-09-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"comicalromance"},"content":"* Responsibilities: [To Be Added]","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"-":34,"comicalromance":26}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"dr-arrgghh"},"content":"layout: page title: Developer Guide","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"dr-arrgghh"},"content":"* Table of Contents {:toc}","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"dr-arrgghh"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"dr-arrgghh"},"content":"  original source as well}","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"dr-arrgghh"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"dr-arrgghh"},"content":"the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"dr-arrgghh"},"content":"Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"dr-arrgghh"},"content":"diagrams.","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"dr-arrgghh"},"content":"**`Main`** has two classes","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"dr-arrgghh"},"content":"called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java)","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"dr-arrgghh"},"content":"and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"dr-arrgghh"},"content":"is responsible for,","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"dr-arrgghh"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues","lastModifiedDate":"2022-10-09"},{"lineNumber":62,"author":{"gitId":"dr-arrgghh"},"content":"the command `delete 1`.","lastModifiedDate":"2022-10-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"dr-arrgghh"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding","lastModifiedDate":"2022-10-09"},{"lineNumber":70,"author":{"gitId":"dr-arrgghh"},"content":"  API `interface` mentioned in the previous point.","lastModifiedDate":"2022-10-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"dr-arrgghh"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using","lastModifiedDate":"2022-10-09"},{"lineNumber":73,"author":{"gitId":"dr-arrgghh"},"content":"the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component","lastModifiedDate":"2022-10-09"},{"lineNumber":74,"author":{"gitId":"dr-arrgghh"},"content":"through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the","lastModifiedDate":"2022-10-09"},{"lineNumber":75,"author":{"gitId":"dr-arrgghh"},"content":"implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2022-10-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"dr-arrgghh"},"content":"The **API** of this component is specified","lastModifiedDate":"2022-10-09"},{"lineNumber":84,"author":{"gitId":"dr-arrgghh"},"content":"in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2022-10-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"dr-arrgghh"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`","lastModifiedDate":"2022-10-09"},{"lineNumber":89,"author":{"gitId":"dr-arrgghh"},"content":", `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures","lastModifiedDate":"2022-10-09"},{"lineNumber":90,"author":{"gitId":"dr-arrgghh"},"content":"the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2022-10-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"dr-arrgghh"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that","lastModifiedDate":"2022-10-09"},{"lineNumber":93,"author":{"gitId":"dr-arrgghh"},"content":"are in the `src/main/resources/view` folder. For example, the layout of","lastModifiedDate":"2022-10-09"},{"lineNumber":94,"author":{"gitId":"dr-arrgghh"},"content":"the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java)","lastModifiedDate":"2022-10-09"},{"lineNumber":95,"author":{"gitId":"dr-arrgghh"},"content":"is specified","lastModifiedDate":"2022-10-09"},{"lineNumber":96,"author":{"gitId":"dr-arrgghh"},"content":"in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2022-10-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"dr-arrgghh"},"content":"**","lastModifiedDate":"2022-10-09"},{"lineNumber":108,"author":{"gitId":"dr-arrgghh"},"content":"API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2022-10-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":116,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"dr-arrgghh"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is","lastModifiedDate":"2022-10-09"},{"lineNumber":118,"author":{"gitId":"dr-arrgghh"},"content":"   executed by the `LogicManager`.","lastModifiedDate":"2022-10-09"},{"lineNumber":119,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":122,"author":{"gitId":"dr-arrgghh"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API","lastModifiedDate":"2022-10-09"},{"lineNumber":123,"author":{"gitId":"dr-arrgghh"},"content":"call.","lastModifiedDate":"2022-10-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":135,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":136,"author":{"gitId":"dr-arrgghh"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a","lastModifiedDate":"2022-10-09"},{"lineNumber":137,"author":{"gitId":"dr-arrgghh"},"content":"  placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse","lastModifiedDate":"2022-10-09"},{"lineNumber":138,"author":{"gitId":"dr-arrgghh"},"content":"  the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as","lastModifiedDate":"2022-10-09"},{"lineNumber":139,"author":{"gitId":"dr-arrgghh"},"content":"  a `Command` object.","lastModifiedDate":"2022-10-09"},{"lineNumber":140,"author":{"gitId":"dr-arrgghh"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser`","lastModifiedDate":"2022-10-09"},{"lineNumber":141,"author":{"gitId":"dr-arrgghh"},"content":"  interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2022-10-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":145,"author":{"gitId":"dr-arrgghh"},"content":"**","lastModifiedDate":"2022-10-09"},{"lineNumber":146,"author":{"gitId":"dr-arrgghh"},"content":"API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2022-10-09"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"dr-arrgghh"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which","lastModifiedDate":"2022-10-09"},{"lineNumber":155,"author":{"gitId":"dr-arrgghh"},"content":"  is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to","lastModifiedDate":"2022-10-09"},{"lineNumber":156,"author":{"gitId":"dr-arrgghh"},"content":"  this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2022-10-09"},{"lineNumber":157,"author":{"gitId":"dr-arrgghh"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as","lastModifiedDate":"2022-10-09"},{"lineNumber":158,"author":{"gitId":"dr-arrgghh"},"content":"  a `ReadOnlyUserPref` objects.","lastModifiedDate":"2022-10-09"},{"lineNumber":159,"author":{"gitId":"dr-arrgghh"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they","lastModifiedDate":"2022-10-09"},{"lineNumber":160,"author":{"gitId":"dr-arrgghh"},"content":"  should make sense on their own without depending on other components)","lastModifiedDate":"2022-10-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"dr-arrgghh"},"content":"**","lastModifiedDate":"2022-10-09"},{"lineNumber":171,"author":{"gitId":"dr-arrgghh"},"content":"API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2022-10-09"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":177,"author":{"gitId":"dr-arrgghh"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding","lastModifiedDate":"2022-10-09"},{"lineNumber":178,"author":{"gitId":"dr-arrgghh"},"content":"  objects.","lastModifiedDate":"2022-10-09"},{"lineNumber":179,"author":{"gitId":"dr-arrgghh"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only","lastModifiedDate":"2022-10-09"},{"lineNumber":180,"author":{"gitId":"dr-arrgghh"},"content":"  the functionality of only one is needed).","lastModifiedDate":"2022-10-09"},{"lineNumber":181,"author":{"gitId":"dr-arrgghh"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects","lastModifiedDate":"2022-10-09"},{"lineNumber":182,"author":{"gitId":"dr-arrgghh"},"content":"  that belong to the `Model`)","lastModifiedDate":"2022-10-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"dr-arrgghh"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo","lastModifiedDate":"2022-10-09"},{"lineNumber":199,"author":{"gitId":"dr-arrgghh"},"content":"history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the","lastModifiedDate":"2022-10-09"},{"lineNumber":200,"author":{"gitId":"dr-arrgghh"},"content":"following operations:","lastModifiedDate":"2022-10-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"dr-arrgghh"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2022-10-09"},{"lineNumber":203,"author":{"gitId":"dr-arrgghh"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2022-10-09"},{"lineNumber":204,"author":{"gitId":"dr-arrgghh"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2022-10-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"dr-arrgghh"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()`","lastModifiedDate":"2022-10-09"},{"lineNumber":207,"author":{"gitId":"dr-arrgghh"},"content":"and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2022-10-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"dr-arrgghh"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the","lastModifiedDate":"2022-10-09"},{"lineNumber":212,"author":{"gitId":"dr-arrgghh"},"content":"initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2022-10-09"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"dr-arrgghh"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command","lastModifiedDate":"2022-10-09"},{"lineNumber":217,"author":{"gitId":"dr-arrgghh"},"content":"calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes","lastModifiedDate":"2022-10-09"},{"lineNumber":218,"author":{"gitId":"dr-arrgghh"},"content":"to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book","lastModifiedDate":"2022-10-09"},{"lineNumber":219,"author":{"gitId":"dr-arrgghh"},"content":"state.","lastModifiedDate":"2022-10-09"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"dr-arrgghh"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`","lastModifiedDate":"2022-10-09"},{"lineNumber":224,"author":{"gitId":"dr-arrgghh"},"content":", causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2022-10-09"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"dr-arrgghh"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing","lastModifiedDate":"2022-10-09"},{"lineNumber":233,"author":{"gitId":"dr-arrgghh"},"content":"the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer`","lastModifiedDate":"2022-10-09"},{"lineNumber":234,"author":{"gitId":"dr-arrgghh"},"content":"once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2022-10-09"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"dr-arrgghh"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once","lastModifiedDate":"2022-10-09"},{"lineNumber":252,"author":{"gitId":"dr-arrgghh"},"content":"to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2022-10-09"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"dr-arrgghh"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such","lastModifiedDate":"2022-10-09"},{"lineNumber":259,"author":{"gitId":"dr-arrgghh"},"content":"as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`.","lastModifiedDate":"2022-10-09"},{"lineNumber":260,"author":{"gitId":"dr-arrgghh"},"content":"Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2022-10-09"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"dr-arrgghh"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not","lastModifiedDate":"2022-10-09"},{"lineNumber":265,"author":{"gitId":"dr-arrgghh"},"content":"pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be","lastModifiedDate":"2022-10-09"},{"lineNumber":266,"author":{"gitId":"dr-arrgghh"},"content":"purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern","lastModifiedDate":"2022-10-09"},{"lineNumber":267,"author":{"gitId":"dr-arrgghh"},"content":"desktop applications follow.","lastModifiedDate":"2022-10-09"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"dr-arrgghh"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by itself.","lastModifiedDate":"2022-10-09"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":299,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":300,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":301,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":302,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"Piyotato"},"content":"* is a tutor","lastModifiedDate":"2022-09-29"},{"lineNumber":313,"author":{"gitId":"Piyotato"},"content":"* has a need to manage a significant number of students","lastModifiedDate":"2022-09-29"},{"lineNumber":314,"author":{"gitId":"Piyotato"},"content":"* wants to organise their class in multiple ways","lastModifiedDate":"2022-09-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":318,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"Piyotato"},"content":"**Value proposition**: help tutors better keep track of their students’ progress in their assigned module.","lastModifiedDate":"2022-09-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"| Priority | As a …​                                     | I want to …​                                         | So that I can…​                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"Piyotato"},"content":"|----------|---------------------------------------------|------------------------------------------------------|------------------------------------------------------------------------|","lastModifiedDate":"2022-09-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"| `* * *`  | new user                                    | see usage instructions                               | refer to instructions when I forget how to use the App                 |","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"Piyotato"},"content":"| `* * *`  | tutor                                       | add a new student                                    |                                                                        |","lastModifiedDate":"2022-09-29"},{"lineNumber":330,"author":{"gitId":"Piyotato"},"content":"| `* * *`  | tutor                                       | delete a student                                     | remove entries that I no longer need                                   |","lastModifiedDate":"2022-09-29"},{"lineNumber":331,"author":{"gitId":"Piyotato"},"content":"| `* * *`  | tutor                                       | mark students who are present and absent from class  | keep track of attendance using this application                        |","lastModifiedDate":"2022-09-29"},{"lineNumber":332,"author":{"gitId":"Piyotato"},"content":"| `* * *`  | tutor                                       | find a student by name                               | locate details of persons without having to go through the entire list |","lastModifiedDate":"2022-09-29"},{"lineNumber":333,"author":{"gitId":"Piyotato"},"content":"| `* *`    | tutor with many persons in the address book | sort students by name                                | locate a student easily                                                |","lastModifiedDate":"2022-09-29"},{"lineNumber":334,"author":{"gitId":"Piyotato"},"content":"| `* *`    | tutor                                       | filter the students by attribute                     | locate a student easily                                                |","lastModifiedDate":"2022-09-29"},{"lineNumber":335,"author":{"gitId":"Piyotato"},"content":"| `* *`    | tutor                                       | create new labels to tag my students with            | better differentiate the students                                      |","lastModifiedDate":"2022-09-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"comicalromance"},"content":"(For all use cases below, the **System** is the `StudMap` and the **Actor** is the `Tutor`, unless specified otherwise)","lastModifiedDate":"2022-09-30"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"comicalromance"},"content":"**Use case: Delete a Student**","lastModifiedDate":"2022-09-30"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"comicalromance"},"content":"1. Tutor requests to list students","lastModifiedDate":"2022-09-30"},{"lineNumber":346,"author":{"gitId":"comicalromance"},"content":"2. StudMap shows a list of students","lastModifiedDate":"2022-09-30"},{"lineNumber":347,"author":{"gitId":"comicalromance"},"content":"3. Tutor requests to delete a specific student in the list","lastModifiedDate":"2022-09-30"},{"lineNumber":348,"author":{"gitId":"comicalromance"},"content":"4. StudMap deletes the student","lastModifiedDate":"2022-09-30"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":354,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"comicalromance"},"content":"    * 3a1. StudMap shows an error message.","lastModifiedDate":"2022-09-30"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"comicalromance"},"content":"**Use case: Add a Student**","lastModifiedDate":"2022-09-30"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":366,"author":{"gitId":"comicalromance"},"content":"**MSS**","lastModifiedDate":"2022-09-30"},{"lineNumber":367,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":368,"author":{"gitId":"comicalromance"},"content":"1. Tutor requests to add a student","lastModifiedDate":"2022-09-30"},{"lineNumber":369,"author":{"gitId":"comicalromance"},"content":"2. StudMap adds the student","lastModifiedDate":"2022-09-30"},{"lineNumber":370,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":371,"author":{"gitId":"comicalromance"},"content":"   Use case ends.","lastModifiedDate":"2022-09-30"},{"lineNumber":372,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":373,"author":{"gitId":"comicalromance"},"content":"**Extensions**","lastModifiedDate":"2022-09-30"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":375,"author":{"gitId":"comicalromance"},"content":"* 1a. The given format for users is invalid","lastModifiedDate":"2022-09-30"},{"lineNumber":376,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":377,"author":{"gitId":"comicalromance"},"content":"    * 1a1. StudMap shows an error message.","lastModifiedDate":"2022-09-30"},{"lineNumber":378,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":379,"author":{"gitId":"comicalromance"},"content":"      Use case ends.","lastModifiedDate":"2022-09-30"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":381,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"Piyotato"},"content":"1. The software should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2022-09-29"},{"lineNumber":386,"author":{"gitId":"dr-arrgghh"},"content":"2. The software should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical","lastModifiedDate":"2022-10-09"},{"lineNumber":387,"author":{"gitId":"dr-arrgghh"},"content":"   usage.","lastModifiedDate":"2022-10-09"},{"lineNumber":388,"author":{"gitId":"Piyotato"},"content":"3. The software should be able to start up in 30 seconds.","lastModifiedDate":"2022-09-29"},{"lineNumber":389,"author":{"gitId":"dr-arrgghh"},"content":"4. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be","lastModifiedDate":"2022-10-09"},{"lineNumber":390,"author":{"gitId":"dr-arrgghh"},"content":"   able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2022-10-09"},{"lineNumber":391,"author":{"gitId":"Piyotato"},"content":"5. The software should be able to be used without an installer.","lastModifiedDate":"2022-09-29"},{"lineNumber":392,"author":{"gitId":"Piyotato"},"content":"6. The software should not depend on a remote server.","lastModifiedDate":"2022-09-29"},{"lineNumber":393,"author":{"gitId":"Piyotato"},"content":"7. If the software crashes or becomes unresponsive, the student records should not be lost.","lastModifiedDate":"2022-09-29"},{"lineNumber":394,"author":{"gitId":"dr-arrgghh"},"content":"8. The GUI should work well (i.e., should not cause any resolution-related inconveniences to the user) for standard","lastModifiedDate":"2022-10-09"},{"lineNumber":395,"author":{"gitId":"dr-arrgghh"},"content":"   screen resolutions 1920x1080 and higher and for screen scales 100% and 125%.","lastModifiedDate":"2022-10-09"},{"lineNumber":396,"author":{"gitId":"dr-arrgghh"},"content":"9. The GUI should be usable (i.e., all functions can be used even if the user experience is not optimal) for resolutions","lastModifiedDate":"2022-10-09"},{"lineNumber":397,"author":{"gitId":"dr-arrgghh"},"content":"   1280x720 and higher and for screen scales 150%.","lastModifiedDate":"2022-10-09"},{"lineNumber":398,"author":{"gitId":"Piyotato"},"content":"10. The software should be packaged into a single JAR file.","lastModifiedDate":"2022-09-29"},{"lineNumber":399,"author":{"gitId":"Piyotato"},"content":"11. The software should not exceed 100MB in size.","lastModifiedDate":"2022-09-29"},{"lineNumber":400,"author":{"gitId":"Piyotato"},"content":"12. The documentation should not exceed 15MB per file.","lastModifiedDate":"2022-09-29"},{"lineNumber":401,"author":{"gitId":"Piyotato"},"content":"13. The software and documentation should be accessible for users who have a basic command of the English language.","lastModifiedDate":"2022-09-29"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"Piyotato"},"content":"* **Tutor**: Teaching assistant for the specific module","lastModifiedDate":"2022-09-29"},{"lineNumber":406,"author":{"gitId":"Piyotato"},"content":"* **Student**: A person that is partaking in a module.","lastModifiedDate":"2022-09-29"},{"lineNumber":407,"author":{"gitId":"dr-arrgghh"},"content":"* **Module**: The university class that the student is enrolled in, encoded by a unique module code consisting of a 2-3","lastModifiedDate":"2022-10-09"},{"lineNumber":408,"author":{"gitId":"dr-arrgghh"},"content":"  letter prefix that generally denotes the discipline, and 4 digits at the back, the first of which indicates the level","lastModifiedDate":"2022-10-09"},{"lineNumber":409,"author":{"gitId":"dr-arrgghh"},"content":"  of the module.","lastModifiedDate":"2022-10-09"},{"lineNumber":410,"author":{"gitId":"dr-arrgghh"},"content":"* **JAR file**: package file format typically used to aggregate many Java class files and associated metadata and","lastModifiedDate":"2022-10-09"},{"lineNumber":411,"author":{"gitId":"dr-arrgghh"},"content":"  resources into one file for distribution.","lastModifiedDate":"2022-10-09"},{"lineNumber":412,"author":{"gitId":"Piyotato"},"content":"* **GUI**: main interface that the user interacts with to input commands and view results.","lastModifiedDate":"2022-09-29"},{"lineNumber":413,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"Piyotato"},"content":"* **Tag**: A label for students defined by the user, possibly shared by multiple students.","lastModifiedDate":"2022-09-29"},{"lineNumber":415,"author":{"gitId":"Piyotato"},"content":"* **Attribute**: Characteristics of students that all students have.","lastModifiedDate":"2022-09-29"},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":417,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"    1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"dr-arrgghh"},"content":"    1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be","lastModifiedDate":"2022-10-09"},{"lineNumber":435,"author":{"gitId":"dr-arrgghh"},"content":"       optimum.","lastModifiedDate":"2022-10-09"},{"lineNumber":436,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"    1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"-"},"content":"    1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"    1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"-"},"content":"    1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"dr-arrgghh"},"content":"       Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message.","lastModifiedDate":"2022-10-09"},{"lineNumber":454,"author":{"gitId":"dr-arrgghh"},"content":"       Timestamp in the status bar is updated.","lastModifiedDate":"2022-10-09"},{"lineNumber":455,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"-"},"content":"    1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"       Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"-"},"content":"    1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"-"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"-"},"content":"    1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":470,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"dr-arrgghh":111,"Piyotato":26,"-":312,"comicalromance":21}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"dr-arrgghh"},"content":"layout: page title: User Guide","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"dr-arrgghh"},"content":"StudMap (SM) is a desktop app for managing your students, optimized for use via a Command Line Interface (CLI) while","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"dr-arrgghh"},"content":"still having the benefits of a Graphical User Interface (GUI). If you can type fast, SM can get your student management","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"dr-arrgghh"},"content":"tasks done faster than traditional GUI apps.","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"dr-arrgghh"},"content":"* Table of Contents {:toc}","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"lpohsien"},"content":"1. Download the latest `studmap.jar` [Coming soon].","lastModifiedDate":"2022-09-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"lpohsien"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your StudMap.","lastModifiedDate":"2022-09-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"dr-arrgghh"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"dr-arrgghh"},"content":"   contains some sample data.\u003cbr\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"lpohsien"},"content":"   \u003c!-- TODO: ![Ui](images/Ui.png) --\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":24,"author":{"gitId":"lpohsien"},"content":"   [Sample UI To be added]","lastModifiedDate":"2022-09-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"dr-arrgghh"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"dr-arrgghh"},"content":"   open the help window.\u003cbr\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"lpohsien"},"content":"    * **`list`** : Lists all students.","lastModifiedDate":"2022-09-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"dr-arrgghh"},"content":"    * **`add`**`n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01` : Adds a student","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"dr-arrgghh"},"content":"      named `John Doe` to the StudMap.","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"lpohsien"},"content":"    * **`delete`**`3` : Deletes the 3rd student shown in the current list.","lastModifiedDate":"2022-09-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"lpohsien"},"content":"    * **`clear`** : Deletes all students.","lastModifiedDate":"2022-09-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"dr-arrgghh"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of","lastModifiedDate":"2022-10-09"},{"lineNumber":64,"author":{"gitId":"dr-arrgghh"},"content":"  the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":67,"author":{"gitId":"dr-arrgghh"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be","lastModifiedDate":"2022-10-09"},{"lineNumber":68,"author":{"gitId":"dr-arrgghh"},"content":"  ignored.\u003cbr\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"Shows a message explaning how to access the help page.","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"lpohsien"},"content":"\u003c!-- TODO: ![help message](images/helpMessage.png) --\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":78,"author":{"gitId":"lpohsien"},"content":"[Sample UI To be added]","lastModifiedDate":"2022-09-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"lpohsien"},"content":"### Adding a student: `add`","lastModifiedDate":"2022-09-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"lpohsien"},"content":"Adds a student to the StudMap.","lastModifiedDate":"2022-09-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​`","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"lpohsien"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: \u003cb\u003eTip:\u003c/b\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":89,"author":{"gitId":"lpohsien"},"content":"A student can have any number of tags (including 0)","lastModifiedDate":"2022-09-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01`","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"* `add n/Betsy Crowe t/friend e/betsycrowe@example.com a/Newgate Prison p/1234567 t/criminal`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"lpohsien"},"content":"### Listing all students : `list`","lastModifiedDate":"2022-09-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"lpohsien"},"content":"Shows a list of all students in the StudMap.","lastModifiedDate":"2022-09-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"lpohsien"},"content":"### Editing a student : `edit`","lastModifiedDate":"2022-09-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"lpohsien"},"content":"Edits an existing student in the StudMap.","lastModifiedDate":"2022-09-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"dr-arrgghh"},"content":"* Edits the student at the specified `INDEX`. The index refers to the index number shown in the displayed student list.","lastModifiedDate":"2022-10-09"},{"lineNumber":110,"author":{"gitId":"dr-arrgghh"},"content":"  The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-10-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"lpohsien"},"content":"* When editing tags, the existing tags of the student will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2022-09-29"},{"lineNumber":114,"author":{"gitId":"dr-arrgghh"},"content":"* You can remove all the student\u0027s tags by typing `t/` without specifying any tags after it.","lastModifiedDate":"2022-10-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":118,"author":{"gitId":"dr-arrgghh"},"content":"* `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st student to be `91234567`","lastModifiedDate":"2022-10-09"},{"lineNumber":119,"author":{"gitId":"dr-arrgghh"},"content":"  and `johndoe@example.com` respectively.","lastModifiedDate":"2022-10-09"},{"lineNumber":120,"author":{"gitId":"lpohsien"},"content":"* `edit 2 n/Betsy Crower t/` Edits the name of the 2nd student to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2022-09-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"lpohsien"},"content":"### Locating students by name: `find`","lastModifiedDate":"2022-09-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"lpohsien"},"content":"Finds students whose names contain any of the given keywords.","lastModifiedDate":"2022-09-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"dr-arrgghh"},"content":"* Students matching at least one keyword will be returned (i.e. `OR` search). e.g. `Hans Bo` will return `Hans Gruber`","lastModifiedDate":"2022-10-09"},{"lineNumber":133,"author":{"gitId":"dr-arrgghh"},"content":"  , `Bo Yang`","lastModifiedDate":"2022-10-09"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":137,"author":{"gitId":"-"},"content":"* `find John` returns `john` and `John Doe`","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"* `find alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"lpohsien"},"content":"  \u003c!-- TODO: ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png) --\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":140,"author":{"gitId":"lpohsien"},"content":"  [Sample UI To be added]","lastModifiedDate":"2022-09-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"lpohsien"},"content":"### Deleting a student : `delete`","lastModifiedDate":"2022-09-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"lpohsien"},"content":"Deletes the specified student from the StudMap.","lastModifiedDate":"2022-09-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"lpohsien"},"content":"* Deletes the student at the specified `INDEX`.","lastModifiedDate":"2022-09-29"},{"lineNumber":149,"author":{"gitId":"lpohsien"},"content":"* The index refers to the index number shown in the displayed student list.","lastModifiedDate":"2022-09-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":154,"author":{"gitId":"lpohsien"},"content":"* `list` followed by `delete 2` deletes the 2nd student in the StudMap.","lastModifiedDate":"2022-09-29"},{"lineNumber":155,"author":{"gitId":"lpohsien"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st student in the results of the `find` command.","lastModifiedDate":"2022-09-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"lpohsien"},"content":"Clears all entries from the StudMap.","lastModifiedDate":"2022-09-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"dr-arrgghh"},"content":"StudMap data are saved in the hard disk automatically after any command that changes the data. There is no need to save","lastModifiedDate":"2022-10-09"},{"lineNumber":172,"author":{"gitId":"dr-arrgghh"},"content":"manually.","lastModifiedDate":"2022-10-09"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":176,"author":{"gitId":"dr-arrgghh"},"content":"StudMap data are saved as a JSON file `[JAR file location]/data/studmap.json`. Advanced users are welcome to update data","lastModifiedDate":"2022-10-09"},{"lineNumber":177,"author":{"gitId":"dr-arrgghh"},"content":"directly by editing that data file.","lastModifiedDate":"2022-10-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":179,"author":{"gitId":"lpohsien"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: \u003cb\u003eCaution:\u003c/b\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":180,"author":{"gitId":"lpohsien"},"content":"If your changes to the data file makes its format invalid, StudMap will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2022-09-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":183,"author":{"gitId":"lpohsien"},"content":"### Sorting the students: `sort`","lastModifiedDate":"2022-09-29"},{"lineNumber":184,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":185,"author":{"gitId":"lpohsien"},"content":"[Coming soon]","lastModifiedDate":"2022-09-29"},{"lineNumber":186,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":187,"author":{"gitId":"lpohsien"},"content":"### Filtering the students: `filter`","lastModifiedDate":"2022-09-29"},{"lineNumber":188,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":189,"author":{"gitId":"lpohsien"},"content":"[Coming soon]","lastModifiedDate":"2022-09-29"},{"lineNumber":190,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":191,"author":{"gitId":"lpohsien"},"content":"### Mark student as present: `mark`","lastModifiedDate":"2022-09-29"},{"lineNumber":192,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":193,"author":{"gitId":"lpohsien"},"content":"[Coming soon]","lastModifiedDate":"2022-09-29"},{"lineNumber":194,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":195,"author":{"gitId":"lpohsien"},"content":"### Unmark attendance of a student: `unmark`","lastModifiedDate":"2022-09-29"},{"lineNumber":196,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":197,"author":{"gitId":"lpohsien"},"content":"[Coming soon]","lastModifiedDate":"2022-09-29"},{"lineNumber":198,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":199,"author":{"gitId":"lpohsien"},"content":"### Add tag to a student: `addtag`","lastModifiedDate":"2022-09-29"},{"lineNumber":200,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":201,"author":{"gitId":"lpohsien"},"content":"[Coming soon]","lastModifiedDate":"2022-09-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"dr-arrgghh"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains","lastModifiedDate":"2022-10-09"},{"lineNumber":210,"author":{"gitId":"dr-arrgghh"},"content":"the data of your previous StudMap home folder.","lastModifiedDate":"2022-10-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"dr-arrgghh"},"content":"**","lastModifiedDate":"2022-10-09"},{"lineNumber":219,"author":{"gitId":"dr-arrgghh"},"content":"Add** | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​` \u003cbr\u003e e.g., `add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 t/friend t/colleague`","lastModifiedDate":"2022-10-09"},{"lineNumber":220,"author":{"gitId":"-"},"content":"**Clear** | `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"**Delete** | `delete INDEX`\u003cbr\u003e e.g., `delete 3`","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"dr-arrgghh"},"content":"**","lastModifiedDate":"2022-10-09"},{"lineNumber":223,"author":{"gitId":"dr-arrgghh"},"content":"Edit** | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`","lastModifiedDate":"2022-10-09"},{"lineNumber":224,"author":{"gitId":"-"},"content":"**Find** | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find James Jake`","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"**List** | `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"**Help** | `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"lpohsien"},"content":"**Sort** | `sort`","lastModifiedDate":"2022-09-29"},{"lineNumber":228,"author":{"gitId":"lpohsien"},"content":"**Filter** | `filter`","lastModifiedDate":"2022-09-29"},{"lineNumber":229,"author":{"gitId":"lpohsien"},"content":"**Mark** | `mark`","lastModifiedDate":"2022-09-29"},{"lineNumber":230,"author":{"gitId":"lpohsien"},"content":"**Unmark** | `unmark`","lastModifiedDate":"2022-09-29"},{"lineNumber":231,"author":{"gitId":"lpohsien"},"content":"**Add tag** | `addtag`","lastModifiedDate":"2022-09-29"}],"authorContributionMap":{"dr-arrgghh":40,"-":140,"lpohsien":51}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"comicalromance"},"content":"title: StudMap","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"comicalromance"},"content":"[![CI Status](https://github.com/AY2223S1-CS2103T-W13-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S1-CS2103T-W13-1/tp/actions)","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2223S1-CS2103T-W13-1/tp/branch/master/graph/badge.svg?token\u003dOWNSY6SWHW)](https://codecov.io/gh/AY2223S1-CS2103T-W13-1/tp)","lastModifiedDate":"2022-09-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"comicalromance"},"content":"**StudMap (SM) is a desktop app for managing your students, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI).** If you can type fast, SM can get your student management tasks done faster than traditional GUI apps.","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"comicalromance"},"content":"* If you are interested in using StudMap, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"comicalromance"},"content":"* If you are interested about developing StudMap, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":14,"comicalromance":5}},{"path":"docs/team/comicalromance.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":2,"author":{"gitId":"comicalromance"},"content":"layout: page","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"comicalromance"},"content":"title: Silas\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"comicalromance"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"comicalromance"},"content":"### Project: StudMap","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"comicalromance"},"content":"[To be added]","lastModifiedDate":"2022-09-28"},{"lineNumber":9,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":10,"author":{"gitId":"comicalromance"},"content":"* **New Feature**: [To be added]","lastModifiedDate":"2022-09-28"},{"lineNumber":11,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":12,"author":{"gitId":"comicalromance"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":14,"author":{"gitId":"comicalromance"},"content":"* **Project management**:","lastModifiedDate":"2022-09-28"},{"lineNumber":15,"author":{"gitId":"comicalromance"},"content":"  * [To be added]","lastModifiedDate":"2022-09-28"},{"lineNumber":16,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":17,"author":{"gitId":"comicalromance"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-28"},{"lineNumber":18,"author":{"gitId":"comicalromance"},"content":"  * [To be added]","lastModifiedDate":"2022-09-28"},{"lineNumber":19,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":20,"author":{"gitId":"comicalromance"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-28"},{"lineNumber":21,"author":{"gitId":"comicalromance"},"content":"  * [To be added]","lastModifiedDate":"2022-09-28"},{"lineNumber":22,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":23,"author":{"gitId":"comicalromance"},"content":"* **Community**:","lastModifiedDate":"2022-09-28"},{"lineNumber":24,"author":{"gitId":"comicalromance"},"content":"  * [To be added]","lastModifiedDate":"2022-09-28"},{"lineNumber":25,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":26,"author":{"gitId":"comicalromance"},"content":"* **Tools**:","lastModifiedDate":"2022-09-28"},{"lineNumber":27,"author":{"gitId":"comicalromance"},"content":"  * [To be added]","lastModifiedDate":"2022-09-28"},{"lineNumber":28,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":29,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"comicalromance":29}},{"path":"docs/team/dr-arrgghh.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":2,"author":{"gitId":"comicalromance"},"content":"layout: page","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"comicalromance"},"content":"title: Zizheng\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"comicalromance"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"comicalromance"},"content":"### Project: StudMap","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"comicalromance"},"content":"[To be added]","lastModifiedDate":"2022-09-28"},{"lineNumber":9,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":10,"author":{"gitId":"comicalromance"},"content":"* **New Feature**: [To be added]","lastModifiedDate":"2022-09-28"},{"lineNumber":11,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":12,"author":{"gitId":"comicalromance"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":14,"author":{"gitId":"comicalromance"},"content":"* **Project management**:","lastModifiedDate":"2022-09-28"},{"lineNumber":15,"author":{"gitId":"comicalromance"},"content":"  * [To be added]","lastModifiedDate":"2022-09-28"},{"lineNumber":16,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":17,"author":{"gitId":"comicalromance"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-28"},{"lineNumber":18,"author":{"gitId":"comicalromance"},"content":"  * [To be added]","lastModifiedDate":"2022-09-28"},{"lineNumber":19,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":20,"author":{"gitId":"comicalromance"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-28"},{"lineNumber":21,"author":{"gitId":"comicalromance"},"content":"  * [To be added]","lastModifiedDate":"2022-09-28"},{"lineNumber":22,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":23,"author":{"gitId":"comicalromance"},"content":"* **Community**:","lastModifiedDate":"2022-09-28"},{"lineNumber":24,"author":{"gitId":"comicalromance"},"content":"  * [To be added]","lastModifiedDate":"2022-09-28"},{"lineNumber":25,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":26,"author":{"gitId":"comicalromance"},"content":"* **Tools**:","lastModifiedDate":"2022-09-28"},{"lineNumber":27,"author":{"gitId":"comicalromance"},"content":"  * [To be added]","lastModifiedDate":"2022-09-28"},{"lineNumber":28,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":29,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"comicalromance":29}},{"path":"docs/team/highorbit25.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":2,"author":{"gitId":"comicalromance"},"content":"layout: page","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"comicalromance"},"content":"title: Bao Bin\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"comicalromance"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"comicalromance"},"content":"### Project: StudMap","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"comicalromance"},"content":"[To be added]","lastModifiedDate":"2022-09-28"},{"lineNumber":9,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":10,"author":{"gitId":"comicalromance"},"content":"* **New Feature**: [To be added]","lastModifiedDate":"2022-09-28"},{"lineNumber":11,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":12,"author":{"gitId":"comicalromance"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":14,"author":{"gitId":"comicalromance"},"content":"* **Project management**:","lastModifiedDate":"2022-09-28"},{"lineNumber":15,"author":{"gitId":"comicalromance"},"content":"  * [To be added]","lastModifiedDate":"2022-09-28"},{"lineNumber":16,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":17,"author":{"gitId":"comicalromance"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-28"},{"lineNumber":18,"author":{"gitId":"comicalromance"},"content":"  * [To be added]","lastModifiedDate":"2022-09-28"},{"lineNumber":19,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":20,"author":{"gitId":"comicalromance"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-28"},{"lineNumber":21,"author":{"gitId":"comicalromance"},"content":"  * [To be added]","lastModifiedDate":"2022-09-28"},{"lineNumber":22,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":23,"author":{"gitId":"comicalromance"},"content":"* **Community**:","lastModifiedDate":"2022-09-28"},{"lineNumber":24,"author":{"gitId":"comicalromance"},"content":"  * [To be added]","lastModifiedDate":"2022-09-28"},{"lineNumber":25,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":26,"author":{"gitId":"comicalromance"},"content":"* **Tools**:","lastModifiedDate":"2022-09-28"},{"lineNumber":27,"author":{"gitId":"comicalromance"},"content":"  * [To be added]","lastModifiedDate":"2022-09-28"},{"lineNumber":28,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":29,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"comicalromance":29}},{"path":"docs/team/lpohsien.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":2,"author":{"gitId":"comicalromance"},"content":"layout: page","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"comicalromance"},"content":"title: Po Hsien\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"comicalromance"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"comicalromance"},"content":"### Project: StudMap","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"comicalromance"},"content":"[To be added]","lastModifiedDate":"2022-09-28"},{"lineNumber":9,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":10,"author":{"gitId":"comicalromance"},"content":"* **New Feature**: [To be added]","lastModifiedDate":"2022-09-28"},{"lineNumber":11,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":12,"author":{"gitId":"comicalromance"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":14,"author":{"gitId":"comicalromance"},"content":"* **Project management**:","lastModifiedDate":"2022-09-28"},{"lineNumber":15,"author":{"gitId":"comicalromance"},"content":"  * [To be added]","lastModifiedDate":"2022-09-28"},{"lineNumber":16,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":17,"author":{"gitId":"comicalromance"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-28"},{"lineNumber":18,"author":{"gitId":"comicalromance"},"content":"  * [To be added]","lastModifiedDate":"2022-09-28"},{"lineNumber":19,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":20,"author":{"gitId":"comicalromance"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-28"},{"lineNumber":21,"author":{"gitId":"comicalromance"},"content":"  * [To be added]","lastModifiedDate":"2022-09-28"},{"lineNumber":22,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":23,"author":{"gitId":"comicalromance"},"content":"* **Community**:","lastModifiedDate":"2022-09-28"},{"lineNumber":24,"author":{"gitId":"comicalromance"},"content":"  * [To be added]","lastModifiedDate":"2022-09-28"},{"lineNumber":25,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":26,"author":{"gitId":"comicalromance"},"content":"* **Tools**:","lastModifiedDate":"2022-09-28"},{"lineNumber":27,"author":{"gitId":"comicalromance"},"content":"  * [To be added]","lastModifiedDate":"2022-09-28"},{"lineNumber":28,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":29,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"comicalromance":29}},{"path":"docs/team/piyotato.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"comicalromance"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":2,"author":{"gitId":"comicalromance"},"content":"layout: page","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"comicalromance"},"content":"title: Sheyuan\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"comicalromance"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"comicalromance"},"content":"### Project: StudMap","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"comicalromance"},"content":"[To be added]","lastModifiedDate":"2022-09-28"},{"lineNumber":9,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":10,"author":{"gitId":"comicalromance"},"content":"* **New Feature**: [To be added]","lastModifiedDate":"2022-09-28"},{"lineNumber":11,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":12,"author":{"gitId":"comicalromance"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":14,"author":{"gitId":"comicalromance"},"content":"* **Project management**:","lastModifiedDate":"2022-09-28"},{"lineNumber":15,"author":{"gitId":"comicalromance"},"content":"  * [To be added]","lastModifiedDate":"2022-09-28"},{"lineNumber":16,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":17,"author":{"gitId":"comicalromance"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-28"},{"lineNumber":18,"author":{"gitId":"comicalromance"},"content":"  * [To be added]","lastModifiedDate":"2022-09-28"},{"lineNumber":19,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":20,"author":{"gitId":"comicalromance"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-28"},{"lineNumber":21,"author":{"gitId":"comicalromance"},"content":"  * [To be added]","lastModifiedDate":"2022-09-28"},{"lineNumber":22,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":23,"author":{"gitId":"comicalromance"},"content":"* **Community**:","lastModifiedDate":"2022-09-28"},{"lineNumber":24,"author":{"gitId":"comicalromance"},"content":"  * [To be added]","lastModifiedDate":"2022-09-28"},{"lineNumber":25,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":26,"author":{"gitId":"comicalromance"},"content":"* **Tools**:","lastModifiedDate":"2022-09-28"},{"lineNumber":27,"author":{"gitId":"comicalromance"},"content":"  * [To be added]","lastModifiedDate":"2022-09-28"},{"lineNumber":28,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":29,"author":{"gitId":"comicalromance"},"content":"","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"comicalromance":29}},{"path":"src/main/java/seedu/address/logic/commands/AddTagCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lpohsien"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-08"},{"lineNumber":2,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":3,"author":{"gitId":"lpohsien"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-08"},{"lineNumber":4,"author":{"gitId":"lpohsien"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-08"},{"lineNumber":5,"author":{"gitId":"lpohsien"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-10-08"},{"lineNumber":6,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":7,"author":{"gitId":"lpohsien"},"content":"import java.util.List;","lastModifiedDate":"2022-10-08"},{"lineNumber":8,"author":{"gitId":"lpohsien"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-08"},{"lineNumber":9,"author":{"gitId":"lpohsien"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-08"},{"lineNumber":10,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":11,"author":{"gitId":"lpohsien"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2022-10-08"},{"lineNumber":12,"author":{"gitId":"lpohsien"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-10-08"},{"lineNumber":13,"author":{"gitId":"lpohsien"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-08"},{"lineNumber":14,"author":{"gitId":"lpohsien"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-08"},{"lineNumber":15,"author":{"gitId":"lpohsien"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2022-10-08"},{"lineNumber":16,"author":{"gitId":"lpohsien"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-08"},{"lineNumber":17,"author":{"gitId":"lpohsien"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-08"},{"lineNumber":18,"author":{"gitId":"lpohsien"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-08"},{"lineNumber":19,"author":{"gitId":"lpohsien"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-10-08"},{"lineNumber":20,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":21,"author":{"gitId":"lpohsien"},"content":"/**","lastModifiedDate":"2022-10-08"},{"lineNumber":22,"author":{"gitId":"lpohsien"},"content":" * Add tag for an existing person in the address book.","lastModifiedDate":"2022-10-08"},{"lineNumber":23,"author":{"gitId":"lpohsien"},"content":" */","lastModifiedDate":"2022-10-08"},{"lineNumber":24,"author":{"gitId":"lpohsien"},"content":"public class AddTagCommand extends Command {","lastModifiedDate":"2022-10-08"},{"lineNumber":25,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":26,"author":{"gitId":"lpohsien"},"content":"    public static final Logger LOGGER \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2022-10-08"},{"lineNumber":27,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":28,"author":{"gitId":"lpohsien"},"content":"    public static final String COMMAND_WORD \u003d \"addtag\";","lastModifiedDate":"2022-10-08"},{"lineNumber":29,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":30,"author":{"gitId":"lpohsien"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$s, new tag: %2$s\";","lastModifiedDate":"2022-10-08"},{"lineNumber":31,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":32,"author":{"gitId":"lpohsien"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Add tags for a person in the address book.\\n\"","lastModifiedDate":"2022-10-08"},{"lineNumber":33,"author":{"gitId":"lpohsien"},"content":"        + \"Parameters:\\n\"","lastModifiedDate":"2022-10-08"},{"lineNumber":34,"author":{"gitId":"lpohsien"},"content":"        + \"  INDEX (must be a positive integer or use \\\"all\\\" to add tags for everyone in the list) \\n\"","lastModifiedDate":"2022-10-08"},{"lineNumber":35,"author":{"gitId":"lpohsien"},"content":"        + \"  [\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2022-10-08"},{"lineNumber":36,"author":{"gitId":"lpohsien"},"content":"        + \"Example:\\n\" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2022-10-08"},{"lineNumber":37,"author":{"gitId":"lpohsien"},"content":"        + PREFIX_TAG + \"lab \"","lastModifiedDate":"2022-10-08"},{"lineNumber":38,"author":{"gitId":"lpohsien"},"content":"        + PREFIX_TAG + \"goodProgress\"","lastModifiedDate":"2022-10-08"},{"lineNumber":39,"author":{"gitId":"lpohsien"},"content":"        + \"\\nor\\n\" + COMMAND_WORD + \" all \"","lastModifiedDate":"2022-10-08"},{"lineNumber":40,"author":{"gitId":"lpohsien"},"content":"        + PREFIX_TAG + \"tutorial \"","lastModifiedDate":"2022-10-08"},{"lineNumber":41,"author":{"gitId":"lpohsien"},"content":"        + PREFIX_TAG + \"needRemedial\";","lastModifiedDate":"2022-10-08"},{"lineNumber":42,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":43,"author":{"gitId":"lpohsien"},"content":"    public static final String MESSAGE_SINGLE_ADD_TAGS_SUCCESS \u003d \"Added tags %1$s Person: %2$s\";","lastModifiedDate":"2022-10-08"},{"lineNumber":44,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":45,"author":{"gitId":"lpohsien"},"content":"    public static final String MESSAGE_MULTI_ADD_TAGS_SUCCESS \u003d \"Added tags %1$s for %2$d persons\";","lastModifiedDate":"2022-10-08"},{"lineNumber":46,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":47,"author":{"gitId":"lpohsien"},"content":"    public static final String MESSAGE_TAGS_NOT_ADDED \u003d \"At least one tag must be added\";","lastModifiedDate":"2022-10-08"},{"lineNumber":48,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":49,"author":{"gitId":"lpohsien"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2022-10-08"},{"lineNumber":50,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":51,"author":{"gitId":"lpohsien"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":52,"author":{"gitId":"lpohsien"},"content":"     * Index of the person to add the tags for.","lastModifiedDate":"2022-10-08"},{"lineNumber":53,"author":{"gitId":"lpohsien"},"content":"     * If index is null, the tags will be added for every person in the list.","lastModifiedDate":"2022-10-08"},{"lineNumber":54,"author":{"gitId":"lpohsien"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":55,"author":{"gitId":"lpohsien"},"content":"    private Index index;","lastModifiedDate":"2022-10-08"},{"lineNumber":56,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":57,"author":{"gitId":"lpohsien"},"content":"    /** The tags to be added.*/","lastModifiedDate":"2022-10-08"},{"lineNumber":58,"author":{"gitId":"lpohsien"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2022-10-08"},{"lineNumber":59,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":60,"author":{"gitId":"lpohsien"},"content":"    private String toBeAddedTagsStr;","lastModifiedDate":"2022-10-08"},{"lineNumber":61,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":62,"author":{"gitId":"lpohsien"},"content":"    /** The tags to be added.*/","lastModifiedDate":"2022-10-08"},{"lineNumber":63,"author":{"gitId":"lpohsien"},"content":"    private boolean isAddToAll;","lastModifiedDate":"2022-10-08"},{"lineNumber":64,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":65,"author":{"gitId":"lpohsien"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":66,"author":{"gitId":"lpohsien"},"content":"     * Constructs AddTagCommand that will add specified tag to all persons in the","lastModifiedDate":"2022-10-08"},{"lineNumber":67,"author":{"gitId":"lpohsien"},"content":"     * displayed list.","lastModifiedDate":"2022-10-08"},{"lineNumber":68,"author":{"gitId":"lpohsien"},"content":"     * @param index of the person in the filtered person list to add the tag","lastModifiedDate":"2022-10-08"},{"lineNumber":69,"author":{"gitId":"lpohsien"},"content":"     * @param tags of the person to be added","lastModifiedDate":"2022-10-08"},{"lineNumber":70,"author":{"gitId":"lpohsien"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":71,"author":{"gitId":"lpohsien"},"content":"    public AddTagCommand(Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-10-08"},{"lineNumber":72,"author":{"gitId":"lpohsien"},"content":"        requireNonNull(tags);","lastModifiedDate":"2022-10-08"},{"lineNumber":73,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":74,"author":{"gitId":"lpohsien"},"content":"        this.isAddToAll \u003d true;","lastModifiedDate":"2022-10-08"},{"lineNumber":75,"author":{"gitId":"lpohsien"},"content":"        this.tags \u003d tags;","lastModifiedDate":"2022-10-08"},{"lineNumber":76,"author":{"gitId":"lpohsien"},"content":"        this.toBeAddedTagsStr \u003d tagSetToSting(tags);","lastModifiedDate":"2022-10-08"},{"lineNumber":77,"author":{"gitId":"lpohsien"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":78,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":79,"author":{"gitId":"lpohsien"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":80,"author":{"gitId":"lpohsien"},"content":"     * @param index of the person in the filtered person list to add the tag","lastModifiedDate":"2022-10-08"},{"lineNumber":81,"author":{"gitId":"lpohsien"},"content":"     * @param tags of the person to be added","lastModifiedDate":"2022-10-08"},{"lineNumber":82,"author":{"gitId":"lpohsien"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":83,"author":{"gitId":"lpohsien"},"content":"    public AddTagCommand(Index index, Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-10-08"},{"lineNumber":84,"author":{"gitId":"lpohsien"},"content":"        requireNonNull(tags);","lastModifiedDate":"2022-10-08"},{"lineNumber":85,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":86,"author":{"gitId":"lpohsien"},"content":"        this.isAddToAll \u003d false;","lastModifiedDate":"2022-10-08"},{"lineNumber":87,"author":{"gitId":"lpohsien"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-10-08"},{"lineNumber":88,"author":{"gitId":"lpohsien"},"content":"        this.tags \u003d tags;","lastModifiedDate":"2022-10-08"},{"lineNumber":89,"author":{"gitId":"lpohsien"},"content":"        this.toBeAddedTagsStr \u003d tagSetToSting(tags);","lastModifiedDate":"2022-10-08"},{"lineNumber":90,"author":{"gitId":"lpohsien"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":91,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":92,"author":{"gitId":"lpohsien"},"content":"    @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":93,"author":{"gitId":"lpohsien"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-08"},{"lineNumber":94,"author":{"gitId":"lpohsien"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-08"},{"lineNumber":95,"author":{"gitId":"lpohsien"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-10-08"},{"lineNumber":96,"author":{"gitId":"lpohsien"},"content":"        if (this.isAddToAll) {","lastModifiedDate":"2022-10-08"},{"lineNumber":97,"author":{"gitId":"lpohsien"},"content":"            int numOfPersonUpdated \u003d 0;","lastModifiedDate":"2022-10-08"},{"lineNumber":98,"author":{"gitId":"lpohsien"},"content":"            for (int idx \u003d 0; idx \u003c lastShownList.size(); idx++) {","lastModifiedDate":"2022-10-08"},{"lineNumber":99,"author":{"gitId":"lpohsien"},"content":"                Person personToEdit \u003d lastShownList.get(idx);","lastModifiedDate":"2022-10-08"},{"lineNumber":100,"author":{"gitId":"lpohsien"},"content":"                executeSingle(model, Index.fromZeroBased(idx), personToEdit);","lastModifiedDate":"2022-10-08"},{"lineNumber":101,"author":{"gitId":"lpohsien"},"content":"                numOfPersonUpdated +\u003d 1;","lastModifiedDate":"2022-10-08"},{"lineNumber":102,"author":{"gitId":"lpohsien"},"content":"            }","lastModifiedDate":"2022-10-08"},{"lineNumber":103,"author":{"gitId":"lpohsien"},"content":"            model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-10-08"},{"lineNumber":104,"author":{"gitId":"lpohsien"},"content":"            return new CommandResult(String.format(","lastModifiedDate":"2022-10-08"},{"lineNumber":105,"author":{"gitId":"lpohsien"},"content":"                    MESSAGE_MULTI_ADD_TAGS_SUCCESS,","lastModifiedDate":"2022-10-08"},{"lineNumber":106,"author":{"gitId":"lpohsien"},"content":"                    toBeAddedTagsStr,","lastModifiedDate":"2022-10-08"},{"lineNumber":107,"author":{"gitId":"lpohsien"},"content":"                    numOfPersonUpdated));","lastModifiedDate":"2022-10-08"},{"lineNumber":108,"author":{"gitId":"lpohsien"},"content":"        }","lastModifiedDate":"2022-10-08"},{"lineNumber":109,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":110,"author":{"gitId":"lpohsien"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-08"},{"lineNumber":111,"author":{"gitId":"lpohsien"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-08"},{"lineNumber":112,"author":{"gitId":"lpohsien"},"content":"        }","lastModifiedDate":"2022-10-08"},{"lineNumber":113,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":114,"author":{"gitId":"lpohsien"},"content":"        assert !this.isAddToAll \u0026\u0026 this.index !\u003d null","lastModifiedDate":"2022-10-08"},{"lineNumber":115,"author":{"gitId":"lpohsien"},"content":"                : \"[AddTagCommand] index should not be null if it is not all\";","lastModifiedDate":"2022-10-08"},{"lineNumber":116,"author":{"gitId":"lpohsien"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-10-08"},{"lineNumber":117,"author":{"gitId":"lpohsien"},"content":"        CommandResult res \u003d executeSingle(model, this.index, personToEdit);","lastModifiedDate":"2022-10-08"},{"lineNumber":118,"author":{"gitId":"lpohsien"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-10-08"},{"lineNumber":119,"author":{"gitId":"lpohsien"},"content":"        return res;","lastModifiedDate":"2022-10-08"},{"lineNumber":120,"author":{"gitId":"lpohsien"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":121,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":122,"author":{"gitId":"lpohsien"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":123,"author":{"gitId":"lpohsien"},"content":"     * Adds tags for a single person in the displayed list.","lastModifiedDate":"2022-10-08"},{"lineNumber":124,"author":{"gitId":"lpohsien"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2022-10-08"},{"lineNumber":125,"author":{"gitId":"lpohsien"},"content":"     * @param index of the person for whom the tags will be added.","lastModifiedDate":"2022-10-08"},{"lineNumber":126,"author":{"gitId":"lpohsien"},"content":"     * @param personToEdit for whom the tags will be added.","lastModifiedDate":"2022-10-08"},{"lineNumber":127,"author":{"gitId":"lpohsien"},"content":"     * @return feedback message of the operation result for display.","lastModifiedDate":"2022-10-08"},{"lineNumber":128,"author":{"gitId":"lpohsien"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2022-10-08"},{"lineNumber":129,"author":{"gitId":"lpohsien"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":130,"author":{"gitId":"lpohsien"},"content":"    public CommandResult executeSingle(","lastModifiedDate":"2022-10-08"},{"lineNumber":131,"author":{"gitId":"lpohsien"},"content":"                Model model, Index index, Person personToEdit) throws CommandException {","lastModifiedDate":"2022-10-08"},{"lineNumber":132,"author":{"gitId":"lpohsien"},"content":"        Set\u003cTag\u003e existingTags \u003d personToEdit.getTags();","lastModifiedDate":"2022-10-08"},{"lineNumber":133,"author":{"gitId":"lpohsien"},"content":"        for (Tag tag : existingTags) {","lastModifiedDate":"2022-10-08"},{"lineNumber":134,"author":{"gitId":"lpohsien"},"content":"            if (!this.tags.contains(tag)) {","lastModifiedDate":"2022-10-08"},{"lineNumber":135,"author":{"gitId":"lpohsien"},"content":"                this.tags.add(tag);","lastModifiedDate":"2022-10-08"},{"lineNumber":136,"author":{"gitId":"lpohsien"},"content":"            }","lastModifiedDate":"2022-10-08"},{"lineNumber":137,"author":{"gitId":"lpohsien"},"content":"        }","lastModifiedDate":"2022-10-08"},{"lineNumber":138,"author":{"gitId":"lpohsien"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2022-10-08"},{"lineNumber":139,"author":{"gitId":"lpohsien"},"content":"        editPersonDescriptor.setTags(this.tags);","lastModifiedDate":"2022-10-08"},{"lineNumber":140,"author":{"gitId":"lpohsien"},"content":"        CommandResult editPersonResult \u003d (new EditCommand(index, editPersonDescriptor)).executeNoRefresh(model);","lastModifiedDate":"2022-10-08"},{"lineNumber":141,"author":{"gitId":"lpohsien"},"content":"        LOGGER.info(editPersonResult.getFeedbackToUser());","lastModifiedDate":"2022-10-08"},{"lineNumber":142,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":143,"author":{"gitId":"lpohsien"},"content":"        assert index !\u003d null : \"[AddTagCommand] Index in executeSingle should not be null\";","lastModifiedDate":"2022-10-08"},{"lineNumber":144,"author":{"gitId":"lpohsien"},"content":"        return new CommandResult(String.format(","lastModifiedDate":"2022-10-08"},{"lineNumber":145,"author":{"gitId":"lpohsien"},"content":"                MESSAGE_SINGLE_ADD_TAGS_SUCCESS,","lastModifiedDate":"2022-10-08"},{"lineNumber":146,"author":{"gitId":"lpohsien"},"content":"                toBeAddedTagsStr,","lastModifiedDate":"2022-10-08"},{"lineNumber":147,"author":{"gitId":"lpohsien"},"content":"                personToEdit.getName()));","lastModifiedDate":"2022-10-08"},{"lineNumber":148,"author":{"gitId":"lpohsien"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":149,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":150,"author":{"gitId":"lpohsien"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":151,"author":{"gitId":"lpohsien"},"content":"     * Formats the tag set to be more user friendly string.","lastModifiedDate":"2022-10-08"},{"lineNumber":152,"author":{"gitId":"lpohsien"},"content":"     * @param tags set to be formatted.","lastModifiedDate":"2022-10-08"},{"lineNumber":153,"author":{"gitId":"lpohsien"},"content":"     * @return the fomatted list of tags/","lastModifiedDate":"2022-10-08"},{"lineNumber":154,"author":{"gitId":"lpohsien"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":155,"author":{"gitId":"lpohsien"},"content":"    public static String tagSetToSting(Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-10-08"},{"lineNumber":156,"author":{"gitId":"lpohsien"},"content":"        String res \u003d \"\";","lastModifiedDate":"2022-10-08"},{"lineNumber":157,"author":{"gitId":"lpohsien"},"content":"        for (Tag tag : tags) {","lastModifiedDate":"2022-10-08"},{"lineNumber":158,"author":{"gitId":"lpohsien"},"content":"            res +\u003d tag.toString() + \", \";","lastModifiedDate":"2022-10-08"},{"lineNumber":159,"author":{"gitId":"lpohsien"},"content":"        }","lastModifiedDate":"2022-10-08"},{"lineNumber":160,"author":{"gitId":"lpohsien"},"content":"        return res.substring(0, res.length() - 2);","lastModifiedDate":"2022-10-08"},{"lineNumber":161,"author":{"gitId":"lpohsien"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":162,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":163,"author":{"gitId":"lpohsien"},"content":"    @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":164,"author":{"gitId":"lpohsien"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-08"},{"lineNumber":165,"author":{"gitId":"lpohsien"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-08"},{"lineNumber":166,"author":{"gitId":"lpohsien"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-08"},{"lineNumber":167,"author":{"gitId":"lpohsien"},"content":"            return true;","lastModifiedDate":"2022-10-08"},{"lineNumber":168,"author":{"gitId":"lpohsien"},"content":"        }","lastModifiedDate":"2022-10-08"},{"lineNumber":169,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":170,"author":{"gitId":"lpohsien"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-08"},{"lineNumber":171,"author":{"gitId":"lpohsien"},"content":"        if (!(other instanceof AddTagCommand)) {","lastModifiedDate":"2022-10-08"},{"lineNumber":172,"author":{"gitId":"lpohsien"},"content":"            return false;","lastModifiedDate":"2022-10-08"},{"lineNumber":173,"author":{"gitId":"lpohsien"},"content":"        }","lastModifiedDate":"2022-10-08"},{"lineNumber":174,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":175,"author":{"gitId":"lpohsien"},"content":"        // state check","lastModifiedDate":"2022-10-08"},{"lineNumber":176,"author":{"gitId":"lpohsien"},"content":"        AddTagCommand e \u003d (AddTagCommand) other;","lastModifiedDate":"2022-10-08"},{"lineNumber":177,"author":{"gitId":"lpohsien"},"content":"        return index.equals(e.index)","lastModifiedDate":"2022-10-08"},{"lineNumber":178,"author":{"gitId":"lpohsien"},"content":"                \u0026\u0026 this.tags.equals(e.tags);","lastModifiedDate":"2022-10-08"},{"lineNumber":179,"author":{"gitId":"lpohsien"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":180,"author":{"gitId":"lpohsien"},"content":"}","lastModifiedDate":"2022-10-08"}],"authorContributionMap":{"lpohsien":180}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":26,"author":{"gitId":"Piyotato"},"content":"import seedu.address.model.person.PersonData;","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":90,"author":{"gitId":"lpohsien"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":91,"author":{"gitId":"lpohsien"},"content":"     * Edits the person without returning to the full persons list.","lastModifiedDate":"2022-10-08"},{"lineNumber":92,"author":{"gitId":"lpohsien"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2022-10-08"},{"lineNumber":93,"author":{"gitId":"lpohsien"},"content":"     * @return feedback message of the operation result for display.","lastModifiedDate":"2022-10-08"},{"lineNumber":94,"author":{"gitId":"lpohsien"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2022-10-08"},{"lineNumber":95,"author":{"gitId":"lpohsien"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":96,"author":{"gitId":"lpohsien"},"content":"    public CommandResult executeNoRefresh(Model model) throws CommandException {","lastModifiedDate":"2022-10-08"},{"lineNumber":97,"author":{"gitId":"lpohsien"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-08"},{"lineNumber":98,"author":{"gitId":"lpohsien"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-10-08"},{"lineNumber":99,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":100,"author":{"gitId":"lpohsien"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-08"},{"lineNumber":101,"author":{"gitId":"lpohsien"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-08"},{"lineNumber":102,"author":{"gitId":"lpohsien"},"content":"        }","lastModifiedDate":"2022-10-08"},{"lineNumber":103,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":104,"author":{"gitId":"lpohsien"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-10-08"},{"lineNumber":105,"author":{"gitId":"lpohsien"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2022-10-08"},{"lineNumber":106,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":107,"author":{"gitId":"lpohsien"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2022-10-08"},{"lineNumber":108,"author":{"gitId":"lpohsien"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-10-08"},{"lineNumber":109,"author":{"gitId":"lpohsien"},"content":"        }","lastModifiedDate":"2022-10-08"},{"lineNumber":110,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":111,"author":{"gitId":"lpohsien"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2022-10-08"},{"lineNumber":112,"author":{"gitId":"lpohsien"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2022-10-08"},{"lineNumber":113,"author":{"gitId":"lpohsien"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":114,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":122,"author":{"gitId":"Piyotato"},"content":"        PersonData personData \u003d new PersonData();","lastModifiedDate":"2022-10-09"},{"lineNumber":123,"author":{"gitId":"Piyotato"},"content":"        personData.setName(editPersonDescriptor.getName().orElse(personToEdit.getName()));","lastModifiedDate":"2022-10-09"},{"lineNumber":124,"author":{"gitId":"Piyotato"},"content":"        personData.setPhone(editPersonDescriptor.getPhone().orElse(personToEdit.getPhone()));","lastModifiedDate":"2022-10-09"},{"lineNumber":125,"author":{"gitId":"Piyotato"},"content":"        personData.setEmail(editPersonDescriptor.getEmail().orElse(personToEdit.getEmail()));","lastModifiedDate":"2022-10-09"},{"lineNumber":126,"author":{"gitId":"Piyotato"},"content":"        personData.setAddress(editPersonDescriptor.getAddress().orElse(personToEdit.getAddress()));","lastModifiedDate":"2022-10-09"},{"lineNumber":127,"author":{"gitId":"Piyotato"},"content":"        personData.setTags(editPersonDescriptor.getTags().orElse(personToEdit.getTags()));","lastModifiedDate":"2022-10-09"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":129,"author":{"gitId":"Piyotato"},"content":"        return new Person(personData);","lastModifiedDate":"2022-10-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":164,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":165,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":166,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags);","lastModifiedDate":"2018-08-14"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":215,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":216,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":217,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":223,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":224,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":225,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":226,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":234,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":235,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":236,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":238,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":239,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":240,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":241,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":243,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":244,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":246,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":247,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":248,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":249,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":250,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"Piyotato":8,"-":220,"lpohsien":25}},{"path":"src/main/java/seedu/address/logic/commands/FilterCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dr-arrgghh"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"dr-arrgghh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"dr-arrgghh"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"dr-arrgghh"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"dr-arrgghh"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"dr-arrgghh"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"dr-arrgghh"},"content":" * Filters and list all persons in the address book","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"dr-arrgghh"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"dr-arrgghh"},"content":"public class FilterCommand extends Command {","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"dr-arrgghh"},"content":"    public static final String COMMAND_WORD \u003d \"filter\";","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"dr-arrgghh"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Filters all persons whose names contain any of \"","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"dr-arrgghh"},"content":"            + \"the specified alphabets (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"dr-arrgghh"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"dr-arrgghh"},"content":"            + \"Example: \" + COMMAND_WORD + \" alex\";","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"dr-arrgghh"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"dr-arrgghh"},"content":"    public FilterCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"dr-arrgghh"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"dr-arrgghh"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"dr-arrgghh"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"dr-arrgghh"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"dr-arrgghh"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"dr-arrgghh"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"dr-arrgghh"},"content":"        return new CommandResult(","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"dr-arrgghh"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"dr-arrgghh"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"dr-arrgghh"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"dr-arrgghh":35}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":15,"author":{"gitId":"Piyotato"},"content":"import seedu.address.model.person.PersonData;","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"Piyotato"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"Piyotato"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"Piyotato"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"Piyotato"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"Piyotato"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"Piyotato"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"Piyotato"},"content":"     *","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2017-06-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2017-12-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":45,"author":{"gitId":"Piyotato"},"content":"        PersonData personData \u003d new PersonData();","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":47,"author":{"gitId":"Piyotato"},"content":"        personData.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"Piyotato"},"content":"        personData.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"Piyotato"},"content":"        personData.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"Piyotato"},"content":"        personData.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"Piyotato"},"content":"        personData.setTags(ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG)));","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":53,"author":{"gitId":"Piyotato"},"content":"        Person person \u003d new Person(personData);","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":55,"author":{"gitId":"Piyotato"},"content":"        return new AddCommand(person);","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"Piyotato":18,"-":40}},{"path":"src/main/java/seedu/address/logic/parser/AddTagCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lpohsien"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-08"},{"lineNumber":2,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":3,"author":{"gitId":"lpohsien"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-08"},{"lineNumber":4,"author":{"gitId":"lpohsien"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-08"},{"lineNumber":5,"author":{"gitId":"lpohsien"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-08"},{"lineNumber":6,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":7,"author":{"gitId":"lpohsien"},"content":"import java.util.Collection;","lastModifiedDate":"2022-10-08"},{"lineNumber":8,"author":{"gitId":"lpohsien"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-08"},{"lineNumber":9,"author":{"gitId":"lpohsien"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-08"},{"lineNumber":10,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":11,"author":{"gitId":"lpohsien"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-08"},{"lineNumber":12,"author":{"gitId":"lpohsien"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-08"},{"lineNumber":13,"author":{"gitId":"lpohsien"},"content":"import seedu.address.logic.commands.AddTagCommand;","lastModifiedDate":"2022-10-08"},{"lineNumber":14,"author":{"gitId":"lpohsien"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-08"},{"lineNumber":15,"author":{"gitId":"lpohsien"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-10-08"},{"lineNumber":16,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":17,"author":{"gitId":"lpohsien"},"content":"/**","lastModifiedDate":"2022-10-08"},{"lineNumber":18,"author":{"gitId":"lpohsien"},"content":" * Parses input arguments and creates a new AddTagCommand object","lastModifiedDate":"2022-10-08"},{"lineNumber":19,"author":{"gitId":"lpohsien"},"content":" */","lastModifiedDate":"2022-10-08"},{"lineNumber":20,"author":{"gitId":"lpohsien"},"content":"public class AddTagCommandParser implements Parser\u003cAddTagCommand\u003e {","lastModifiedDate":"2022-10-08"},{"lineNumber":21,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":22,"author":{"gitId":"lpohsien"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":23,"author":{"gitId":"lpohsien"},"content":"     * Parses the given {@code String} of arguments in the context of the AddTagCommand","lastModifiedDate":"2022-10-08"},{"lineNumber":24,"author":{"gitId":"lpohsien"},"content":"     * and returns an AddTagCommand object for execution.","lastModifiedDate":"2022-10-08"},{"lineNumber":25,"author":{"gitId":"lpohsien"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-08"},{"lineNumber":26,"author":{"gitId":"lpohsien"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":27,"author":{"gitId":"lpohsien"},"content":"    public AddTagCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-08"},{"lineNumber":28,"author":{"gitId":"lpohsien"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-10-08"},{"lineNumber":29,"author":{"gitId":"lpohsien"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_TAG);","lastModifiedDate":"2022-10-08"},{"lineNumber":30,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":31,"author":{"gitId":"lpohsien"},"content":"        Index index;","lastModifiedDate":"2022-10-08"},{"lineNumber":32,"author":{"gitId":"lpohsien"},"content":"        Set\u003cTag\u003e tags;","lastModifiedDate":"2022-10-08"},{"lineNumber":33,"author":{"gitId":"lpohsien"},"content":"        try {","lastModifiedDate":"2022-10-08"},{"lineNumber":34,"author":{"gitId":"lpohsien"},"content":"            tags \u003d parseTagsSet(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2022-10-08"},{"lineNumber":35,"author":{"gitId":"lpohsien"},"content":"            if (tags.size() \u003d\u003d 0) {","lastModifiedDate":"2022-10-08"},{"lineNumber":36,"author":{"gitId":"lpohsien"},"content":"                throw new ParseException(AddTagCommand.MESSAGE_TAGS_NOT_ADDED);","lastModifiedDate":"2022-10-08"},{"lineNumber":37,"author":{"gitId":"lpohsien"},"content":"            }","lastModifiedDate":"2022-10-08"},{"lineNumber":38,"author":{"gitId":"lpohsien"},"content":"            if (argMultimap.getPreamble().equalsIgnoreCase(\"all\")) {","lastModifiedDate":"2022-10-08"},{"lineNumber":39,"author":{"gitId":"lpohsien"},"content":"                return new AddTagCommand(tags);","lastModifiedDate":"2022-10-08"},{"lineNumber":40,"author":{"gitId":"lpohsien"},"content":"            }","lastModifiedDate":"2022-10-08"},{"lineNumber":41,"author":{"gitId":"lpohsien"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-10-08"},{"lineNumber":42,"author":{"gitId":"lpohsien"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2022-10-08"},{"lineNumber":43,"author":{"gitId":"lpohsien"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-08"},{"lineNumber":44,"author":{"gitId":"lpohsien"},"content":"                    AddTagCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2022-10-08"},{"lineNumber":45,"author":{"gitId":"lpohsien"},"content":"        }","lastModifiedDate":"2022-10-08"},{"lineNumber":46,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":47,"author":{"gitId":"lpohsien"},"content":"        return new AddTagCommand(index, tags);","lastModifiedDate":"2022-10-08"},{"lineNumber":48,"author":{"gitId":"lpohsien"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":49,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":50,"author":{"gitId":"lpohsien"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":51,"author":{"gitId":"lpohsien"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2022-10-08"},{"lineNumber":52,"author":{"gitId":"lpohsien"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2022-10-08"},{"lineNumber":53,"author":{"gitId":"lpohsien"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2022-10-08"},{"lineNumber":54,"author":{"gitId":"lpohsien"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":55,"author":{"gitId":"lpohsien"},"content":"    private Set\u003cTag\u003e parseTagsSet(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2022-10-08"},{"lineNumber":56,"author":{"gitId":"lpohsien"},"content":"        assert tags !\u003d null \u0026\u0026 !tags.isEmpty();","lastModifiedDate":"2022-10-08"},{"lineNumber":57,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":58,"author":{"gitId":"lpohsien"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2022-10-08"},{"lineNumber":59,"author":{"gitId":"lpohsien"},"content":"        return ParserUtil.parseTags(tagSet);","lastModifiedDate":"2022-10-08"},{"lineNumber":60,"author":{"gitId":"lpohsien"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":61,"author":{"gitId":"lpohsien"},"content":"}","lastModifiedDate":"2022-10-08"}],"authorContributionMap":{"lpohsien":61}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"lpohsien"},"content":"import seedu.address.logic.commands.AddTagCommand;","lastModifiedDate":"2022-10-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"dr-arrgghh"},"content":"import seedu.address.logic.commands.FilterCommand;","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"lpohsien"},"content":"        case AddTagCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-08"},{"lineNumber":71,"author":{"gitId":"lpohsien"},"content":"            return new AddTagCommandParser().parse(arguments);","lastModifiedDate":"2022-10-08"},{"lineNumber":72,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":76,"author":{"gitId":"dr-arrgghh"},"content":"        case FilterCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-05"},{"lineNumber":77,"author":{"gitId":"dr-arrgghh"},"content":"            return new FilterCommandParser().parse(arguments);","lastModifiedDate":"2022-10-05"},{"lineNumber":78,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"dr-arrgghh":4,"-":76,"lpohsien":4}},{"path":"src/main/java/seedu/address/logic/parser/FilterCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dr-arrgghh"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"dr-arrgghh"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"dr-arrgghh"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"dr-arrgghh"},"content":"import seedu.address.logic.commands.FilterCommand;","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"dr-arrgghh"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"dr-arrgghh"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"dr-arrgghh"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"dr-arrgghh"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"dr-arrgghh"},"content":" * Parses input arguments and create a new FilterCommand object","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"dr-arrgghh"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"dr-arrgghh"},"content":"public class FilterCommandParser implements Parser\u003cFilterCommand\u003e {","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"dr-arrgghh"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"dr-arrgghh"},"content":"     * Parses the given {@code String} of arguments in the context of the FilterCommand","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"dr-arrgghh"},"content":"     * and returns a FilterCommand object for execution.","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"dr-arrgghh"},"content":"     *","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"dr-arrgghh"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"dr-arrgghh"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"dr-arrgghh"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"dr-arrgghh"},"content":"    public FilterCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"dr-arrgghh"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"dr-arrgghh"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"dr-arrgghh"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"dr-arrgghh"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"dr-arrgghh"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"dr-arrgghh"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"dr-arrgghh"},"content":"        return new FilterCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"dr-arrgghh"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"dr-arrgghh"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"dr-arrgghh":36}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":87,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":88,"author":{"gitId":"dr-arrgghh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"dr-arrgghh":2,"-":87}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"Piyotato"},"content":"     * Constructor using a PersonData parameter object.","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"Piyotato"},"content":"     * Requires name, phone, email, address, tags to be non-null.","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"Piyotato"},"content":"     *","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"Piyotato"},"content":"     * @param personData PersonData parameter object.","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"Piyotato"},"content":"    public Person(PersonData personData) {","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"Piyotato"},"content":"        requireAllNonNull(personData.getName(), personData.getPhone(),","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"Piyotato"},"content":"                personData.getEmail(), personData.getAddress(), personData.getTags());","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"Piyotato"},"content":"        this.name \u003d personData.getName();","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"Piyotato"},"content":"        this.phone \u003d personData.getPhone();","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"Piyotato"},"content":"        this.email \u003d personData.getEmail();","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"Piyotato"},"content":"        this.address \u003d personData.getAddress();","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"Piyotato"},"content":"        this.tags.addAll(personData.getTags());","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"Piyotato"},"content":"        return otherPerson !\u003d null \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2022-10-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getAddress().equals(getAddress())","lastModifiedDate":"2018-08-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags());","lastModifiedDate":"2018-08-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return Objects.hash(name, phone, email, address, tags);","lastModifiedDate":"2016-08-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":111,"author":{"gitId":"Piyotato"},"content":"        builder.append(getName()).append(\"; Phone: \").append(getPhone()).append(\"; Email: \")","lastModifiedDate":"2022-10-09"},{"lineNumber":112,"author":{"gitId":"Piyotato"},"content":"                .append(getEmail()).append(\"; Address: \").append(getAddress());","lastModifiedDate":"2022-10-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Piyotato":16,"-":106}},{"path":"src/main/java/seedu/address/model/person/PersonData.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Piyotato"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"Piyotato"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"Piyotato"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"Piyotato"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"Piyotato"},"content":" * A parameter object for Person constructor.","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"Piyotato"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"Piyotato"},"content":"public class PersonData {","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"Piyotato"},"content":"    private Name name;","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"Piyotato"},"content":"    private Phone phone;","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"Piyotato"},"content":"    private Email email;","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"Piyotato"},"content":"    private Address address;","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"Piyotato"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"Piyotato"},"content":"    public Name getName() {","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"Piyotato"},"content":"        return name;","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"Piyotato"},"content":"    public void setName(Name name) {","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"Piyotato"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"Piyotato"},"content":"    public Phone getPhone() {","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"Piyotato"},"content":"        return phone;","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"Piyotato"},"content":"    public void setPhone(Phone phone) {","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"Piyotato"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"Piyotato"},"content":"    public Email getEmail() {","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"Piyotato"},"content":"        return email;","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"Piyotato"},"content":"    public void setEmail(Email email) {","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"Piyotato"},"content":"        this.email \u003d email;","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"Piyotato"},"content":"    public Address getAddress() {","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"Piyotato"},"content":"        return address;","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"Piyotato"},"content":"    public void setAddress(Address address) {","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"Piyotato"},"content":"        this.address \u003d address;","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"Piyotato"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"Piyotato"},"content":"        return tags;","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"Piyotato"},"content":"    public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"Piyotato"},"content":"        this.tags \u003d tags;","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"Piyotato"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"Piyotato"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"Piyotato":56}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"Piyotato"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":14,"author":{"gitId":"Piyotato"},"content":"import seedu.address.model.person.PersonData;","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":23,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"Piyotato"},"content":"        PersonData personData;","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"Piyotato"},"content":"        ArrayList\u003cPersonData\u003e personDatas \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"Piyotato"},"content":"        personData \u003d new PersonData();;","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"Piyotato"},"content":"        personData.setName(new Name(\"Alex Yeoh\"));","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"Piyotato"},"content":"        personData.setPhone(new Phone(\"87438807\"));","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"Piyotato"},"content":"        personData.setEmail(new Email(\"alexyeoh@example.com\"));","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"Piyotato"},"content":"        personData.setAddress(new Address(\"Blk 30 Geylang Street 29, #06-40\"));","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"Piyotato"},"content":"        personData.setTags(getTagSet(\"friends\"));","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"Piyotato"},"content":"        personDatas.add(personData);","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"Piyotato"},"content":"        personData \u003d new PersonData();;","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"Piyotato"},"content":"        personData.setName(new Name(\"Bernice Yu\"));","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"Piyotato"},"content":"        personData.setPhone(new Phone(\"99272758\"));","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"Piyotato"},"content":"        personData.setEmail(new Email(\"berniceyu@example.com\"));","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"Piyotato"},"content":"        personData.setAddress(new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"));","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"Piyotato"},"content":"        personData.setTags(getTagSet(\"colleagues\", \"friends\"));","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"Piyotato"},"content":"        personDatas.add(personData);","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"Piyotato"},"content":"        personData \u003d new PersonData();;","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"Piyotato"},"content":"        personData.setName(new Name(\"Charlotte Oliveiro\"));","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"Piyotato"},"content":"        personData.setPhone(new Phone(\"93210283\"));","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"Piyotato"},"content":"        personData.setEmail(new Email(\"charlotte@example.com\"));","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"Piyotato"},"content":"        personData.setAddress(new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"));","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"Piyotato"},"content":"        personData.setTags(getTagSet(\"neighbours\"));","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"Piyotato"},"content":"        personDatas.add(personData);","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"Piyotato"},"content":"        personData \u003d new PersonData();;","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"Piyotato"},"content":"        personData.setName(new Name(\"David Li\"));","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"Piyotato"},"content":"        personData.setPhone(new Phone(\"91031282\"));","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"Piyotato"},"content":"        personData.setEmail(new Email(\"lidavid@example.com\"));","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"Piyotato"},"content":"        personData.setAddress(new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"));","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"Piyotato"},"content":"        personData.setTags(getTagSet(\"family\"));","lastModifiedDate":"2022-10-09"},{"lineNumber":57,"author":{"gitId":"Piyotato"},"content":"        personDatas.add(personData);","lastModifiedDate":"2022-10-09"},{"lineNumber":58,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"Piyotato"},"content":"        personData \u003d new PersonData();;","lastModifiedDate":"2022-10-09"},{"lineNumber":60,"author":{"gitId":"Piyotato"},"content":"        personData.setName(new Name(\"Irfan Ibrahim\"));","lastModifiedDate":"2022-10-09"},{"lineNumber":61,"author":{"gitId":"Piyotato"},"content":"        personData.setPhone(new Phone(\"92492021\"));","lastModifiedDate":"2022-10-09"},{"lineNumber":62,"author":{"gitId":"Piyotato"},"content":"        personData.setEmail(new Email(\"irfan@example.com\"));","lastModifiedDate":"2022-10-09"},{"lineNumber":63,"author":{"gitId":"Piyotato"},"content":"        personData.setAddress(new Address(\"Blk 47 Tampines Street 20, #17-35\"));","lastModifiedDate":"2022-10-09"},{"lineNumber":64,"author":{"gitId":"Piyotato"},"content":"        personData.setTags(getTagSet(\"classmates\"));","lastModifiedDate":"2022-10-09"},{"lineNumber":65,"author":{"gitId":"Piyotato"},"content":"        personDatas.add(personData);","lastModifiedDate":"2022-10-09"},{"lineNumber":66,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":67,"author":{"gitId":"Piyotato"},"content":"        personData \u003d new PersonData();;","lastModifiedDate":"2022-10-09"},{"lineNumber":68,"author":{"gitId":"Piyotato"},"content":"        personData.setName(new Name(\"Roy Balakrishnan\"));","lastModifiedDate":"2022-10-09"},{"lineNumber":69,"author":{"gitId":"Piyotato"},"content":"        personData.setPhone(new Phone(\"92624417\"));","lastModifiedDate":"2022-10-09"},{"lineNumber":70,"author":{"gitId":"Piyotato"},"content":"        personData.setEmail(new Email(\"royb@example.com\"));","lastModifiedDate":"2022-10-09"},{"lineNumber":71,"author":{"gitId":"Piyotato"},"content":"        personData.setAddress(new Address(\"Blk 45 Aljunied Street 85, #11-31\"));","lastModifiedDate":"2022-10-09"},{"lineNumber":72,"author":{"gitId":"Piyotato"},"content":"        personData.setTags(getTagSet(\"colleagues\"));","lastModifiedDate":"2022-10-09"},{"lineNumber":73,"author":{"gitId":"Piyotato"},"content":"        personDatas.add(personData);","lastModifiedDate":"2022-10-09"},{"lineNumber":74,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":75,"author":{"gitId":"Piyotato"},"content":"        return (Person[]) personDatas.stream().map(x -\u003e new Person(x)).toArray();","lastModifiedDate":"2022-10-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"Piyotato":55,"-":40}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"Piyotato"},"content":"import seedu.address.model.person.PersonData;","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"Piyotato"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":108,"author":{"gitId":"Piyotato"},"content":"        PersonData personData \u003d new PersonData();","lastModifiedDate":"2022-10-09"},{"lineNumber":109,"author":{"gitId":"Piyotato"},"content":"        personData.setName(modelName);","lastModifiedDate":"2022-10-09"},{"lineNumber":110,"author":{"gitId":"Piyotato"},"content":"        personData.setPhone(modelPhone);","lastModifiedDate":"2022-10-09"},{"lineNumber":111,"author":{"gitId":"Piyotato"},"content":"        personData.setEmail(modelEmail);","lastModifiedDate":"2022-10-09"},{"lineNumber":112,"author":{"gitId":"Piyotato"},"content":"        personData.setAddress(modelAddress);","lastModifiedDate":"2022-10-09"},{"lineNumber":113,"author":{"gitId":"Piyotato"},"content":"        personData.setTags(modelTags);","lastModifiedDate":"2022-10-09"},{"lineNumber":114,"author":{"gitId":"Piyotato"},"content":"        return new Person(personData);","lastModifiedDate":"2022-10-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Piyotato":9,"-":108}},{"path":"src/test/java/seedu/address/logic/commands/AddTagCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lpohsien"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-08"},{"lineNumber":2,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":3,"author":{"gitId":"lpohsien"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-08"},{"lineNumber":4,"author":{"gitId":"lpohsien"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-08"},{"lineNumber":5,"author":{"gitId":"lpohsien"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-10-08"},{"lineNumber":6,"author":{"gitId":"lpohsien"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-08"},{"lineNumber":7,"author":{"gitId":"lpohsien"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_STUDENT;","lastModifiedDate":"2022-10-08"},{"lineNumber":8,"author":{"gitId":"lpohsien"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-08"},{"lineNumber":9,"author":{"gitId":"lpohsien"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-08"},{"lineNumber":10,"author":{"gitId":"lpohsien"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2022-10-08"},{"lineNumber":11,"author":{"gitId":"lpohsien"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-08"},{"lineNumber":12,"author":{"gitId":"lpohsien"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2022-10-08"},{"lineNumber":13,"author":{"gitId":"lpohsien"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-10-08"},{"lineNumber":14,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":15,"author":{"gitId":"lpohsien"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-08"},{"lineNumber":16,"author":{"gitId":"lpohsien"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-08"},{"lineNumber":17,"author":{"gitId":"lpohsien"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-08"},{"lineNumber":18,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":19,"author":{"gitId":"lpohsien"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-08"},{"lineNumber":20,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":21,"author":{"gitId":"lpohsien"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-08"},{"lineNumber":22,"author":{"gitId":"lpohsien"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-08"},{"lineNumber":23,"author":{"gitId":"lpohsien"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-10-08"},{"lineNumber":24,"author":{"gitId":"lpohsien"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-08"},{"lineNumber":25,"author":{"gitId":"lpohsien"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-10-08"},{"lineNumber":26,"author":{"gitId":"lpohsien"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-10-08"},{"lineNumber":27,"author":{"gitId":"lpohsien"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-08"},{"lineNumber":28,"author":{"gitId":"lpohsien"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-10-08"},{"lineNumber":29,"author":{"gitId":"lpohsien"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-10-08"},{"lineNumber":30,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":31,"author":{"gitId":"lpohsien"},"content":"/**","lastModifiedDate":"2022-10-08"},{"lineNumber":32,"author":{"gitId":"lpohsien"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2022-10-08"},{"lineNumber":33,"author":{"gitId":"lpohsien"},"content":" * EditCommand.","lastModifiedDate":"2022-10-08"},{"lineNumber":34,"author":{"gitId":"lpohsien"},"content":" */","lastModifiedDate":"2022-10-08"},{"lineNumber":35,"author":{"gitId":"lpohsien"},"content":"public class AddTagCommandTest {","lastModifiedDate":"2022-10-08"},{"lineNumber":36,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":37,"author":{"gitId":"lpohsien"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-08"},{"lineNumber":38,"author":{"gitId":"lpohsien"},"content":"    private Set\u003cTag\u003e singleTagSet \u003d Stream.of(VALID_TAG_FRIEND).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2022-10-08"},{"lineNumber":39,"author":{"gitId":"lpohsien"},"content":"    private Set\u003cTag\u003e multiTagSet \u003d Stream.of(VALID_TAG_FRIEND, VALID_TAG_STUDENT).map(Tag::new)","lastModifiedDate":"2022-10-08"},{"lineNumber":40,"author":{"gitId":"lpohsien"},"content":"            .collect(Collectors.toSet());","lastModifiedDate":"2022-10-08"},{"lineNumber":41,"author":{"gitId":"lpohsien"},"content":"    private Set\u003cTag\u003e multiTagSetReversed \u003d Stream.of(VALID_TAG_STUDENT, VALID_TAG_FRIEND).map(Tag::new)","lastModifiedDate":"2022-10-08"},{"lineNumber":42,"author":{"gitId":"lpohsien"},"content":"            .collect(Collectors.toSet());","lastModifiedDate":"2022-10-08"},{"lineNumber":43,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":44,"author":{"gitId":"lpohsien"},"content":"    @Test","lastModifiedDate":"2022-10-08"},{"lineNumber":45,"author":{"gitId":"lpohsien"},"content":"    public void execute_addSingleTagUnfilteredList_success() {","lastModifiedDate":"2022-10-08"},{"lineNumber":46,"author":{"gitId":"lpohsien"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2022-10-08"},{"lineNumber":47,"author":{"gitId":"lpohsien"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2022-10-08"},{"lineNumber":48,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":49,"author":{"gitId":"lpohsien"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2022-10-08"},{"lineNumber":50,"author":{"gitId":"lpohsien"},"content":"        Person editedPersonBase \u003d personInList.withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-10-08"},{"lineNumber":51,"author":{"gitId":"lpohsien"},"content":"        Person editedPersonExpected \u003d personInList.withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-08"},{"lineNumber":52,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":53,"author":{"gitId":"lpohsien"},"content":"        Model baseModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-10-08"},{"lineNumber":54,"author":{"gitId":"lpohsien"},"content":"        baseModel.setPerson(lastPerson, editedPersonBase);","lastModifiedDate":"2022-10-08"},{"lineNumber":55,"author":{"gitId":"lpohsien"},"content":"        AddTagCommand addTagCommand \u003d new AddTagCommand(indexLastPerson, singleTagSet);","lastModifiedDate":"2022-10-08"},{"lineNumber":56,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":57,"author":{"gitId":"lpohsien"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-10-08"},{"lineNumber":58,"author":{"gitId":"lpohsien"},"content":"        expectedModel.setPerson(lastPerson, editedPersonExpected);","lastModifiedDate":"2022-10-08"},{"lineNumber":59,"author":{"gitId":"lpohsien"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2022-10-08"},{"lineNumber":60,"author":{"gitId":"lpohsien"},"content":"                AddTagCommand.MESSAGE_SINGLE_ADD_TAGS_SUCCESS,","lastModifiedDate":"2022-10-08"},{"lineNumber":61,"author":{"gitId":"lpohsien"},"content":"                AddTagCommand.tagSetToSting(singleTagSet),","lastModifiedDate":"2022-10-08"},{"lineNumber":62,"author":{"gitId":"lpohsien"},"content":"                editedPersonBase.getName());","lastModifiedDate":"2022-10-08"},{"lineNumber":63,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":64,"author":{"gitId":"lpohsien"},"content":"        assertCommandSuccess(addTagCommand, baseModel, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-08"},{"lineNumber":65,"author":{"gitId":"lpohsien"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":66,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":67,"author":{"gitId":"lpohsien"},"content":"    @Test","lastModifiedDate":"2022-10-08"},{"lineNumber":68,"author":{"gitId":"lpohsien"},"content":"    public void execute_addMultiTagUnfilteredList_success() {","lastModifiedDate":"2022-10-08"},{"lineNumber":69,"author":{"gitId":"lpohsien"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2022-10-08"},{"lineNumber":70,"author":{"gitId":"lpohsien"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2022-10-08"},{"lineNumber":71,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":72,"author":{"gitId":"lpohsien"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2022-10-08"},{"lineNumber":73,"author":{"gitId":"lpohsien"},"content":"        Person editedPersonBase \u003d personInList.withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-10-08"},{"lineNumber":74,"author":{"gitId":"lpohsien"},"content":"        Person editedPersonExpected \u003d personInList.withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND, VALID_TAG_STUDENT)","lastModifiedDate":"2022-10-08"},{"lineNumber":75,"author":{"gitId":"lpohsien"},"content":"                .build();","lastModifiedDate":"2022-10-08"},{"lineNumber":76,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":77,"author":{"gitId":"lpohsien"},"content":"        Model baseModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-10-08"},{"lineNumber":78,"author":{"gitId":"lpohsien"},"content":"        baseModel.setPerson(lastPerson, editedPersonBase);","lastModifiedDate":"2022-10-08"},{"lineNumber":79,"author":{"gitId":"lpohsien"},"content":"        AddTagCommand addTagCommand \u003d new AddTagCommand(indexLastPerson, multiTagSet);","lastModifiedDate":"2022-10-08"},{"lineNumber":80,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":81,"author":{"gitId":"lpohsien"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-10-08"},{"lineNumber":82,"author":{"gitId":"lpohsien"},"content":"        expectedModel.setPerson(lastPerson, editedPersonExpected);","lastModifiedDate":"2022-10-08"},{"lineNumber":83,"author":{"gitId":"lpohsien"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2022-10-08"},{"lineNumber":84,"author":{"gitId":"lpohsien"},"content":"                AddTagCommand.MESSAGE_SINGLE_ADD_TAGS_SUCCESS,","lastModifiedDate":"2022-10-08"},{"lineNumber":85,"author":{"gitId":"lpohsien"},"content":"                AddTagCommand.tagSetToSting(multiTagSet),","lastModifiedDate":"2022-10-08"},{"lineNumber":86,"author":{"gitId":"lpohsien"},"content":"                editedPersonBase.getName());","lastModifiedDate":"2022-10-08"},{"lineNumber":87,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":88,"author":{"gitId":"lpohsien"},"content":"        assertCommandSuccess(addTagCommand, baseModel, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-08"},{"lineNumber":89,"author":{"gitId":"lpohsien"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":90,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":91,"author":{"gitId":"lpohsien"},"content":"    @Test","lastModifiedDate":"2022-10-08"},{"lineNumber":92,"author":{"gitId":"lpohsien"},"content":"    public void execute_addSingleTagAllUnfilteredList_success() {","lastModifiedDate":"2022-10-08"},{"lineNumber":93,"author":{"gitId":"lpohsien"},"content":"        PersonBuilder personInList;","lastModifiedDate":"2022-10-08"},{"lineNumber":94,"author":{"gitId":"lpohsien"},"content":"        Person editedPersonBase;","lastModifiedDate":"2022-10-08"},{"lineNumber":95,"author":{"gitId":"lpohsien"},"content":"        Person editedPersonExpected;","lastModifiedDate":"2022-10-08"},{"lineNumber":96,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":97,"author":{"gitId":"lpohsien"},"content":"        Model baseModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-10-08"},{"lineNumber":98,"author":{"gitId":"lpohsien"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-10-08"},{"lineNumber":99,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":100,"author":{"gitId":"lpohsien"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2022-10-08"},{"lineNumber":101,"author":{"gitId":"lpohsien"},"content":"                AddTagCommand.MESSAGE_MULTI_ADD_TAGS_SUCCESS,","lastModifiedDate":"2022-10-08"},{"lineNumber":102,"author":{"gitId":"lpohsien"},"content":"                AddTagCommand.tagSetToSting(singleTagSet),","lastModifiedDate":"2022-10-08"},{"lineNumber":103,"author":{"gitId":"lpohsien"},"content":"                model.getFilteredPersonList().size());","lastModifiedDate":"2022-10-08"},{"lineNumber":104,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":105,"author":{"gitId":"lpohsien"},"content":"        for (Person person : model.getFilteredPersonList()) {","lastModifiedDate":"2022-10-08"},{"lineNumber":106,"author":{"gitId":"lpohsien"},"content":"            personInList \u003d new PersonBuilder(person);","lastModifiedDate":"2022-10-08"},{"lineNumber":107,"author":{"gitId":"lpohsien"},"content":"            editedPersonBase \u003d personInList.withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-10-08"},{"lineNumber":108,"author":{"gitId":"lpohsien"},"content":"            baseModel.setPerson(person, editedPersonBase);","lastModifiedDate":"2022-10-08"},{"lineNumber":109,"author":{"gitId":"lpohsien"},"content":"            editedPersonExpected \u003d personInList.withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-08"},{"lineNumber":110,"author":{"gitId":"lpohsien"},"content":"            expectedModel.setPerson(person, editedPersonExpected);","lastModifiedDate":"2022-10-08"},{"lineNumber":111,"author":{"gitId":"lpohsien"},"content":"        }","lastModifiedDate":"2022-10-08"},{"lineNumber":112,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":113,"author":{"gitId":"lpohsien"},"content":"        AddTagCommand addTagCommand \u003d new AddTagCommand(singleTagSet);","lastModifiedDate":"2022-10-08"},{"lineNumber":114,"author":{"gitId":"lpohsien"},"content":"        assertCommandSuccess(addTagCommand, baseModel, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-08"},{"lineNumber":115,"author":{"gitId":"lpohsien"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":116,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":117,"author":{"gitId":"lpohsien"},"content":"    @Test","lastModifiedDate":"2022-10-08"},{"lineNumber":118,"author":{"gitId":"lpohsien"},"content":"    public void execute_addMultiTagAllUnfilteredList_success() {","lastModifiedDate":"2022-10-08"},{"lineNumber":119,"author":{"gitId":"lpohsien"},"content":"        PersonBuilder personInList;","lastModifiedDate":"2022-10-08"},{"lineNumber":120,"author":{"gitId":"lpohsien"},"content":"        Person editedPersonBase;","lastModifiedDate":"2022-10-08"},{"lineNumber":121,"author":{"gitId":"lpohsien"},"content":"        Person editedPersonExpected;","lastModifiedDate":"2022-10-08"},{"lineNumber":122,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":123,"author":{"gitId":"lpohsien"},"content":"        Model baseModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-10-08"},{"lineNumber":124,"author":{"gitId":"lpohsien"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-10-08"},{"lineNumber":125,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":126,"author":{"gitId":"lpohsien"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2022-10-08"},{"lineNumber":127,"author":{"gitId":"lpohsien"},"content":"                AddTagCommand.MESSAGE_MULTI_ADD_TAGS_SUCCESS,","lastModifiedDate":"2022-10-08"},{"lineNumber":128,"author":{"gitId":"lpohsien"},"content":"                AddTagCommand.tagSetToSting(multiTagSet),","lastModifiedDate":"2022-10-08"},{"lineNumber":129,"author":{"gitId":"lpohsien"},"content":"                model.getFilteredPersonList().size());","lastModifiedDate":"2022-10-08"},{"lineNumber":130,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":131,"author":{"gitId":"lpohsien"},"content":"        for (Person person : model.getFilteredPersonList()) {","lastModifiedDate":"2022-10-08"},{"lineNumber":132,"author":{"gitId":"lpohsien"},"content":"            personInList \u003d new PersonBuilder(person);","lastModifiedDate":"2022-10-08"},{"lineNumber":133,"author":{"gitId":"lpohsien"},"content":"            editedPersonBase \u003d personInList.withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-10-08"},{"lineNumber":134,"author":{"gitId":"lpohsien"},"content":"            baseModel.setPerson(person, editedPersonBase);","lastModifiedDate":"2022-10-08"},{"lineNumber":135,"author":{"gitId":"lpohsien"},"content":"            editedPersonExpected \u003d personInList.withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND, VALID_TAG_STUDENT)","lastModifiedDate":"2022-10-08"},{"lineNumber":136,"author":{"gitId":"lpohsien"},"content":"                    .build();","lastModifiedDate":"2022-10-08"},{"lineNumber":137,"author":{"gitId":"lpohsien"},"content":"            expectedModel.setPerson(person, editedPersonExpected);","lastModifiedDate":"2022-10-08"},{"lineNumber":138,"author":{"gitId":"lpohsien"},"content":"        }","lastModifiedDate":"2022-10-08"},{"lineNumber":139,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":140,"author":{"gitId":"lpohsien"},"content":"        AddTagCommand addTagCommand \u003d new AddTagCommand(multiTagSet);","lastModifiedDate":"2022-10-08"},{"lineNumber":141,"author":{"gitId":"lpohsien"},"content":"        assertCommandSuccess(addTagCommand, baseModel, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-08"},{"lineNumber":142,"author":{"gitId":"lpohsien"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":143,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":144,"author":{"gitId":"lpohsien"},"content":"    @Test","lastModifiedDate":"2022-10-08"},{"lineNumber":145,"author":{"gitId":"lpohsien"},"content":"    public void execute_addDuplicateTagUnfilteredList_success() {","lastModifiedDate":"2022-10-08"},{"lineNumber":146,"author":{"gitId":"lpohsien"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2022-10-08"},{"lineNumber":147,"author":{"gitId":"lpohsien"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2022-10-08"},{"lineNumber":148,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":149,"author":{"gitId":"lpohsien"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2022-10-08"},{"lineNumber":150,"author":{"gitId":"lpohsien"},"content":"        Person editedPersonBase \u003d personInList.withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-08"},{"lineNumber":151,"author":{"gitId":"lpohsien"},"content":"        Person editedPersonModel \u003d personInList.withTags(VALID_TAG_FRIEND, VALID_TAG_STUDENT).build();","lastModifiedDate":"2022-10-08"},{"lineNumber":152,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":153,"author":{"gitId":"lpohsien"},"content":"        Model baseModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-10-08"},{"lineNumber":154,"author":{"gitId":"lpohsien"},"content":"        baseModel.setPerson(lastPerson, editedPersonBase);","lastModifiedDate":"2022-10-08"},{"lineNumber":155,"author":{"gitId":"lpohsien"},"content":"        AddTagCommand addTagCommand \u003d new AddTagCommand(indexLastPerson, multiTagSet);","lastModifiedDate":"2022-10-08"},{"lineNumber":156,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":157,"author":{"gitId":"lpohsien"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-10-08"},{"lineNumber":158,"author":{"gitId":"lpohsien"},"content":"        expectedModel.setPerson(lastPerson, editedPersonModel);","lastModifiedDate":"2022-10-08"},{"lineNumber":159,"author":{"gitId":"lpohsien"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2022-10-08"},{"lineNumber":160,"author":{"gitId":"lpohsien"},"content":"                AddTagCommand.MESSAGE_SINGLE_ADD_TAGS_SUCCESS,","lastModifiedDate":"2022-10-08"},{"lineNumber":161,"author":{"gitId":"lpohsien"},"content":"                AddTagCommand.tagSetToSting(multiTagSet),","lastModifiedDate":"2022-10-08"},{"lineNumber":162,"author":{"gitId":"lpohsien"},"content":"                editedPersonBase.getName());","lastModifiedDate":"2022-10-08"},{"lineNumber":163,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":164,"author":{"gitId":"lpohsien"},"content":"        assertCommandSuccess(addTagCommand, baseModel, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-08"},{"lineNumber":165,"author":{"gitId":"lpohsien"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":166,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":167,"author":{"gitId":"lpohsien"},"content":"    @Test","lastModifiedDate":"2022-10-08"},{"lineNumber":168,"author":{"gitId":"lpohsien"},"content":"    public void execute_addToNewSingleTagUnfilteredList_success() {","lastModifiedDate":"2022-10-08"},{"lineNumber":169,"author":{"gitId":"lpohsien"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2022-10-08"},{"lineNumber":170,"author":{"gitId":"lpohsien"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2022-10-08"},{"lineNumber":171,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":172,"author":{"gitId":"lpohsien"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2022-10-08"},{"lineNumber":173,"author":{"gitId":"lpohsien"},"content":"        Person editedPersonBase \u003d personInList.withTags().build();","lastModifiedDate":"2022-10-08"},{"lineNumber":174,"author":{"gitId":"lpohsien"},"content":"        Person editedPersonModel \u003d personInList.withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-08"},{"lineNumber":175,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":176,"author":{"gitId":"lpohsien"},"content":"        Model baseModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-10-08"},{"lineNumber":177,"author":{"gitId":"lpohsien"},"content":"        baseModel.setPerson(lastPerson, editedPersonBase);","lastModifiedDate":"2022-10-08"},{"lineNumber":178,"author":{"gitId":"lpohsien"},"content":"        AddTagCommand addTagCommand \u003d new AddTagCommand(indexLastPerson, singleTagSet);","lastModifiedDate":"2022-10-08"},{"lineNumber":179,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":180,"author":{"gitId":"lpohsien"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-10-08"},{"lineNumber":181,"author":{"gitId":"lpohsien"},"content":"        expectedModel.setPerson(lastPerson, editedPersonModel);","lastModifiedDate":"2022-10-08"},{"lineNumber":182,"author":{"gitId":"lpohsien"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2022-10-08"},{"lineNumber":183,"author":{"gitId":"lpohsien"},"content":"                AddTagCommand.MESSAGE_SINGLE_ADD_TAGS_SUCCESS,","lastModifiedDate":"2022-10-08"},{"lineNumber":184,"author":{"gitId":"lpohsien"},"content":"                AddTagCommand.tagSetToSting(singleTagSet),","lastModifiedDate":"2022-10-08"},{"lineNumber":185,"author":{"gitId":"lpohsien"},"content":"                editedPersonBase.getName());","lastModifiedDate":"2022-10-08"},{"lineNumber":186,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":187,"author":{"gitId":"lpohsien"},"content":"        assertCommandSuccess(addTagCommand, baseModel, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-08"},{"lineNumber":188,"author":{"gitId":"lpohsien"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":189,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":190,"author":{"gitId":"lpohsien"},"content":"    @Test","lastModifiedDate":"2022-10-08"},{"lineNumber":191,"author":{"gitId":"lpohsien"},"content":"    public void execute_addSingleTagAllFilteredList_success() {","lastModifiedDate":"2022-10-08"},{"lineNumber":192,"author":{"gitId":"lpohsien"},"content":"        showPersonAtIndex(model, INDEX_SECOND_PERSON);","lastModifiedDate":"2022-10-08"},{"lineNumber":193,"author":{"gitId":"lpohsien"},"content":"        PersonBuilder personInList;","lastModifiedDate":"2022-10-08"},{"lineNumber":194,"author":{"gitId":"lpohsien"},"content":"        Person editedPersonBase;","lastModifiedDate":"2022-10-08"},{"lineNumber":195,"author":{"gitId":"lpohsien"},"content":"        Person editedPersonExpected;","lastModifiedDate":"2022-10-08"},{"lineNumber":196,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":197,"author":{"gitId":"lpohsien"},"content":"        Model baseModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-10-08"},{"lineNumber":198,"author":{"gitId":"lpohsien"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-10-08"},{"lineNumber":199,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":200,"author":{"gitId":"lpohsien"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2022-10-08"},{"lineNumber":201,"author":{"gitId":"lpohsien"},"content":"                AddTagCommand.MESSAGE_MULTI_ADD_TAGS_SUCCESS,","lastModifiedDate":"2022-10-08"},{"lineNumber":202,"author":{"gitId":"lpohsien"},"content":"                AddTagCommand.tagSetToSting(singleTagSet),","lastModifiedDate":"2022-10-08"},{"lineNumber":203,"author":{"gitId":"lpohsien"},"content":"                model.getFilteredPersonList().size());","lastModifiedDate":"2022-10-08"},{"lineNumber":204,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":205,"author":{"gitId":"lpohsien"},"content":"        for (Person person : model.getFilteredPersonList()) {","lastModifiedDate":"2022-10-08"},{"lineNumber":206,"author":{"gitId":"lpohsien"},"content":"            personInList \u003d new PersonBuilder(person);","lastModifiedDate":"2022-10-08"},{"lineNumber":207,"author":{"gitId":"lpohsien"},"content":"            editedPersonBase \u003d personInList.withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-10-08"},{"lineNumber":208,"author":{"gitId":"lpohsien"},"content":"            baseModel.setPerson(person, editedPersonBase);","lastModifiedDate":"2022-10-08"},{"lineNumber":209,"author":{"gitId":"lpohsien"},"content":"            editedPersonExpected \u003d personInList.withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-08"},{"lineNumber":210,"author":{"gitId":"lpohsien"},"content":"            expectedModel.setPerson(person, editedPersonExpected);","lastModifiedDate":"2022-10-08"},{"lineNumber":211,"author":{"gitId":"lpohsien"},"content":"        }","lastModifiedDate":"2022-10-08"},{"lineNumber":212,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":213,"author":{"gitId":"lpohsien"},"content":"        showPersonAtIndex(baseModel, INDEX_SECOND_PERSON);","lastModifiedDate":"2022-10-08"},{"lineNumber":214,"author":{"gitId":"lpohsien"},"content":"        AddTagCommand addTagCommand \u003d new AddTagCommand(singleTagSet);","lastModifiedDate":"2022-10-08"},{"lineNumber":215,"author":{"gitId":"lpohsien"},"content":"        assertCommandSuccess(addTagCommand, baseModel, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-08"},{"lineNumber":216,"author":{"gitId":"lpohsien"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":217,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":218,"author":{"gitId":"lpohsien"},"content":"    @Test","lastModifiedDate":"2022-10-08"},{"lineNumber":219,"author":{"gitId":"lpohsien"},"content":"    public void execute_addMultiTagFilteredList_success() {","lastModifiedDate":"2022-10-08"},{"lineNumber":220,"author":{"gitId":"lpohsien"},"content":"        showPersonAtIndex(model, INDEX_SECOND_PERSON);","lastModifiedDate":"2022-10-08"},{"lineNumber":221,"author":{"gitId":"lpohsien"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2022-10-08"},{"lineNumber":222,"author":{"gitId":"lpohsien"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2022-10-08"},{"lineNumber":223,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":224,"author":{"gitId":"lpohsien"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2022-10-08"},{"lineNumber":225,"author":{"gitId":"lpohsien"},"content":"        Person editedPersonBase \u003d personInList.withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-10-08"},{"lineNumber":226,"author":{"gitId":"lpohsien"},"content":"        Person editedPersonExpected \u003d personInList.withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-08"},{"lineNumber":227,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":228,"author":{"gitId":"lpohsien"},"content":"        Model baseModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-10-08"},{"lineNumber":229,"author":{"gitId":"lpohsien"},"content":"        baseModel.setPerson(lastPerson, editedPersonBase);","lastModifiedDate":"2022-10-08"},{"lineNumber":230,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":231,"author":{"gitId":"lpohsien"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-10-08"},{"lineNumber":232,"author":{"gitId":"lpohsien"},"content":"        expectedModel.setPerson(lastPerson, editedPersonExpected);","lastModifiedDate":"2022-10-08"},{"lineNumber":233,"author":{"gitId":"lpohsien"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2022-10-08"},{"lineNumber":234,"author":{"gitId":"lpohsien"},"content":"                AddTagCommand.MESSAGE_SINGLE_ADD_TAGS_SUCCESS,","lastModifiedDate":"2022-10-08"},{"lineNumber":235,"author":{"gitId":"lpohsien"},"content":"                AddTagCommand.tagSetToSting(singleTagSet),","lastModifiedDate":"2022-10-08"},{"lineNumber":236,"author":{"gitId":"lpohsien"},"content":"                editedPersonBase.getName());","lastModifiedDate":"2022-10-08"},{"lineNumber":237,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":238,"author":{"gitId":"lpohsien"},"content":"        showPersonAtIndex(baseModel, INDEX_SECOND_PERSON);","lastModifiedDate":"2022-10-08"},{"lineNumber":239,"author":{"gitId":"lpohsien"},"content":"        AddTagCommand addTagCommand \u003d new AddTagCommand(indexLastPerson, singleTagSet);","lastModifiedDate":"2022-10-08"},{"lineNumber":240,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":241,"author":{"gitId":"lpohsien"},"content":"        assertCommandSuccess(addTagCommand, baseModel, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-08"},{"lineNumber":242,"author":{"gitId":"lpohsien"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":243,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":244,"author":{"gitId":"lpohsien"},"content":"    @Test","lastModifiedDate":"2022-10-08"},{"lineNumber":245,"author":{"gitId":"lpohsien"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2022-10-08"},{"lineNumber":246,"author":{"gitId":"lpohsien"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2022-10-08"},{"lineNumber":247,"author":{"gitId":"lpohsien"},"content":"        AddTagCommand addTagCommand \u003d new AddTagCommand(outOfBoundIndex, singleTagSet);","lastModifiedDate":"2022-10-08"},{"lineNumber":248,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":249,"author":{"gitId":"lpohsien"},"content":"        assertCommandFailure(addTagCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-08"},{"lineNumber":250,"author":{"gitId":"lpohsien"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":251,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":252,"author":{"gitId":"lpohsien"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":253,"author":{"gitId":"lpohsien"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2022-10-08"},{"lineNumber":254,"author":{"gitId":"lpohsien"},"content":"     * but smaller than size of address book","lastModifiedDate":"2022-10-08"},{"lineNumber":255,"author":{"gitId":"lpohsien"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":256,"author":{"gitId":"lpohsien"},"content":"    @Test","lastModifiedDate":"2022-10-08"},{"lineNumber":257,"author":{"gitId":"lpohsien"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2022-10-08"},{"lineNumber":258,"author":{"gitId":"lpohsien"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-08"},{"lineNumber":259,"author":{"gitId":"lpohsien"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2022-10-08"},{"lineNumber":260,"author":{"gitId":"lpohsien"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2022-10-08"},{"lineNumber":261,"author":{"gitId":"lpohsien"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2022-10-08"},{"lineNumber":262,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":263,"author":{"gitId":"lpohsien"},"content":"        AddTagCommand addTagCommand \u003d new AddTagCommand(outOfBoundIndex, singleTagSet);","lastModifiedDate":"2022-10-08"},{"lineNumber":264,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":265,"author":{"gitId":"lpohsien"},"content":"        assertCommandFailure(addTagCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-08"},{"lineNumber":266,"author":{"gitId":"lpohsien"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":267,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":268,"author":{"gitId":"lpohsien"},"content":"    @Test","lastModifiedDate":"2022-10-08"},{"lineNumber":269,"author":{"gitId":"lpohsien"},"content":"    public void equals() {","lastModifiedDate":"2022-10-08"},{"lineNumber":270,"author":{"gitId":"lpohsien"},"content":"        final AddTagCommand standardSingleCommand \u003d new AddTagCommand(INDEX_FIRST_PERSON, singleTagSet);","lastModifiedDate":"2022-10-08"},{"lineNumber":271,"author":{"gitId":"lpohsien"},"content":"        final AddTagCommand standardMultiCommand \u003d new AddTagCommand(INDEX_FIRST_PERSON, multiTagSetReversed);","lastModifiedDate":"2022-10-08"},{"lineNumber":272,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":273,"author":{"gitId":"lpohsien"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-08"},{"lineNumber":274,"author":{"gitId":"lpohsien"},"content":"        AddTagCommand commandWithSameValues \u003d new AddTagCommand(INDEX_FIRST_PERSON, singleTagSet);","lastModifiedDate":"2022-10-08"},{"lineNumber":275,"author":{"gitId":"lpohsien"},"content":"        assertTrue(standardSingleCommand.equals(commandWithSameValues));","lastModifiedDate":"2022-10-08"},{"lineNumber":276,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":277,"author":{"gitId":"lpohsien"},"content":"        // same values but different order -\u003e returns true","lastModifiedDate":"2022-10-08"},{"lineNumber":278,"author":{"gitId":"lpohsien"},"content":"        AddTagCommand commandWithSameMultiValues \u003d new AddTagCommand(INDEX_FIRST_PERSON, multiTagSetReversed);","lastModifiedDate":"2022-10-08"},{"lineNumber":279,"author":{"gitId":"lpohsien"},"content":"        assertTrue(standardMultiCommand.equals(commandWithSameMultiValues));","lastModifiedDate":"2022-10-08"},{"lineNumber":280,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":281,"author":{"gitId":"lpohsien"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-08"},{"lineNumber":282,"author":{"gitId":"lpohsien"},"content":"        assertTrue(standardSingleCommand.equals(standardSingleCommand));","lastModifiedDate":"2022-10-08"},{"lineNumber":283,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":284,"author":{"gitId":"lpohsien"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-08"},{"lineNumber":285,"author":{"gitId":"lpohsien"},"content":"        assertFalse(standardSingleCommand.equals(null));","lastModifiedDate":"2022-10-08"},{"lineNumber":286,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":287,"author":{"gitId":"lpohsien"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-08"},{"lineNumber":288,"author":{"gitId":"lpohsien"},"content":"        assertFalse(standardSingleCommand.equals(new ClearCommand()));","lastModifiedDate":"2022-10-08"},{"lineNumber":289,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":290,"author":{"gitId":"lpohsien"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2022-10-08"},{"lineNumber":291,"author":{"gitId":"lpohsien"},"content":"        assertFalse(standardSingleCommand.equals(new AddTagCommand(INDEX_SECOND_PERSON, singleTagSet)));","lastModifiedDate":"2022-10-08"},{"lineNumber":292,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":293,"author":{"gitId":"lpohsien"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2022-10-08"},{"lineNumber":294,"author":{"gitId":"lpohsien"},"content":"        assertFalse(standardSingleCommand.equals(new AddTagCommand(INDEX_FIRST_PERSON, multiTagSet)));","lastModifiedDate":"2022-10-08"},{"lineNumber":295,"author":{"gitId":"lpohsien"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":296,"author":{"gitId":"lpohsien"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":297,"author":{"gitId":"lpohsien"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-10-08"},{"lineNumber":298,"author":{"gitId":"lpohsien"},"content":"        AddTagCommandTest test \u003d new AddTagCommandTest();","lastModifiedDate":"2022-10-08"},{"lineNumber":299,"author":{"gitId":"lpohsien"},"content":"        test.execute_invalidPersonIndexFilteredList_failure();","lastModifiedDate":"2022-10-08"},{"lineNumber":300,"author":{"gitId":"lpohsien"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":301,"author":{"gitId":"lpohsien"},"content":"}","lastModifiedDate":"2022-10-08"}],"authorContributionMap":{"lpohsien":301}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"lpohsien"},"content":"    public static final String VALID_TAG_STUDENT \u003d \"student\";","lastModifiedDate":"2022-10-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"-":128,"lpohsien":1}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":10,"author":{"gitId":"Piyotato"},"content":"import seedu.address.model.person.PersonData;","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":93,"author":{"gitId":"Piyotato"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":94,"author":{"gitId":"Piyotato"},"content":"     * Builds the person using the given parameters.","lastModifiedDate":"2022-10-09"},{"lineNumber":95,"author":{"gitId":"Piyotato"},"content":"     * @return New Person.","lastModifiedDate":"2022-10-09"},{"lineNumber":96,"author":{"gitId":"Piyotato"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":98,"author":{"gitId":"Piyotato"},"content":"        PersonData personData \u003d new PersonData();","lastModifiedDate":"2022-10-09"},{"lineNumber":99,"author":{"gitId":"Piyotato"},"content":"        personData.setName(this.name);","lastModifiedDate":"2022-10-09"},{"lineNumber":100,"author":{"gitId":"Piyotato"},"content":"        personData.setPhone(this.phone);","lastModifiedDate":"2022-10-09"},{"lineNumber":101,"author":{"gitId":"Piyotato"},"content":"        personData.setEmail(this.email);","lastModifiedDate":"2022-10-09"},{"lineNumber":102,"author":{"gitId":"Piyotato"},"content":"        personData.setAddress(this.address);","lastModifiedDate":"2022-10-09"},{"lineNumber":103,"author":{"gitId":"Piyotato"},"content":"        personData.setTags(this.tags);","lastModifiedDate":"2022-10-09"},{"lineNumber":104,"author":{"gitId":"Piyotato"},"content":"        return new Person(personData);","lastModifiedDate":"2022-10-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"Piyotato":12,"-":95}}]
