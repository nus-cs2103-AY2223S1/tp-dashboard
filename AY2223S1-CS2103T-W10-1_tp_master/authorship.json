[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/se-edu/addressbook-level3/actions)","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"CedricChia123"},"content":"[![codecov](https://codecov.io/gh/AY2223S1-CS2103T-W10-1/tp/branch/master/graph/badge.svg?token\u003dSQQ4K5J7N0)](https://codecov.io/gh/AY2223S1-CS2103T-W10-1/tp)","lastModifiedDate":"2022-09-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"CedricChia123"},"content":"# TABS","lastModifiedDate":"2022-09-27"},{"lineNumber":7,"author":{"gitId":"CedricChia123"},"content":"* This is **a project for Software Engineering (SE) students**.\u003cbr\u003e","lastModifiedDate":"2022-09-27"},{"lineNumber":8,"author":{"gitId":"CedricChia123"},"content":"* The project simulates an ongoing software project for a desktop application designed for *project team leaders* used for assigning tasks and groups.","lastModifiedDate":"2022-09-27"},{"lineNumber":9,"author":{"gitId":"CedricChia123"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"CedricChia123"},"content":"With TABs, project team leaders can:","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"CedricChia123"},"content":"* view information of which group members are in their project.","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"CedricChia123"},"content":"* track which tasks have been assigned to which members.","lastModifiedDate":"2022-09-29"},{"lineNumber":13,"author":{"gitId":"CedricChia123"},"content":"* see an estimate of how much workload each member has.","lastModifiedDate":"2022-09-29"},{"lineNumber":14,"author":{"gitId":"CedricChia123"},"content":"* receive information regarding upcoming deadlines.","lastModifiedDate":"2022-09-29"},{"lineNumber":15,"author":{"gitId":"CedricChia123"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":16,"author":{"gitId":"CedricChia123"},"content":"For the detailed documentation of this project, see the **[TABS Product Website](https://ay2223s1-cs2103t-w10-1.github.io/tp/)**. ","lastModifiedDate":"2022-09-29"},{"lineNumber":17,"author":{"gitId":"CedricChia123"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":18,"author":{"gitId":"CedricChia123"},"content":"# Adapted from AddressBook-Level3","lastModifiedDate":"2022-09-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* For the detailed documentation of this project, see the **[Address Book Product Website](https://se-education.org/addressbook-level3)**.","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* This project is a **part of the se-education.org** initiative. If you would like to contribute code to this project, see [se-education.org](https://se-education.org#https://se-education.org/#contributing) for more info.","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"CedricChia123"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2022-09-27"}],"authorContributionMap":{"CedricChia123":15,"-":6}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"zylee348"},"content":"### Tan Jin Waye","lastModifiedDate":"2022-09-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"zylee348"},"content":"\u003cimg src\u003d\"images/tan-jin-waye.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"zylee348"},"content":"[[github](https://github.com/Tan-Jin-Waye)]","lastModifiedDate":"2022-09-27"},{"lineNumber":17,"author":{"gitId":"Tan-Jin-Waye"},"content":"[[portfolio](team/tan-jin-waye.md)]","lastModifiedDate":"2022-10-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"zylee348"},"content":"* Role: TBC","lastModifiedDate":"2022-09-27"},{"lineNumber":20,"author":{"gitId":"zylee348"},"content":"* Responsibilities: TBC","lastModifiedDate":"2022-09-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"Tan-Jin-Waye"},"content":"### Lian Guo Yang","lastModifiedDate":"2022-10-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"zylee348"},"content":"\u003cimg src\u003d\"images/lianguoyang.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"zylee348"},"content":"[[github](http://github.com/LianGuoYang)]","lastModifiedDate":"2022-09-27"},{"lineNumber":27,"author":{"gitId":"zylee348"},"content":"[[portfolio](team/lianguoyang.md)]","lastModifiedDate":"2022-09-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"zylee348"},"content":"* Role: TBC","lastModifiedDate":"2022-09-27"},{"lineNumber":30,"author":{"gitId":"zylee348"},"content":"* Responsibilities: TBC","lastModifiedDate":"2022-09-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"zylee348"},"content":"### Cedric Chia","lastModifiedDate":"2022-09-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"zylee348"},"content":"\u003cimg src\u003d\"images/cedricchia123.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"zylee348"},"content":"[[github](http://github.com/CedricChia123)]","lastModifiedDate":"2022-09-29"},{"lineNumber":37,"author":{"gitId":"CedricChia123"},"content":"[[portfolio](team/cedricchia123.md)]","lastModifiedDate":"2022-10-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"zylee348"},"content":"* Role: TBC","lastModifiedDate":"2022-09-27"},{"lineNumber":40,"author":{"gitId":"zylee348"},"content":"* Responsibilities: TBC","lastModifiedDate":"2022-09-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"zylee348"},"content":"### Aloysius Neo","lastModifiedDate":"2022-09-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"zylee348"},"content":"\u003cimg src\u003d\"images/aloynz.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"zylee348"},"content":"[[github](http://github.com/Aloynz)]","lastModifiedDate":"2022-09-27"},{"lineNumber":47,"author":{"gitId":"zylee348"},"content":"[[portfolio](team/aloynz.md)]","lastModifiedDate":"2022-09-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"zylee348"},"content":"* Role: TBC","lastModifiedDate":"2022-09-27"},{"lineNumber":50,"author":{"gitId":"zylee348"},"content":"* Responsibilities: TBC","lastModifiedDate":"2022-09-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"zylee348"},"content":"### Lee Zi Yang","lastModifiedDate":"2022-09-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"zylee348"},"content":"\u003cimg src\u003d\"images/zylee348.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"zylee348"},"content":"[[github](http://github.com/zylee348)]","lastModifiedDate":"2022-09-27"},{"lineNumber":57,"author":{"gitId":"zylee348"},"content":"[[portfolio](team/zylee348.md)]","lastModifiedDate":"2022-09-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"zylee348"},"content":"* Role: TBC","lastModifiedDate":"2022-09-27"},{"lineNumber":60,"author":{"gitId":"zylee348"},"content":"* Responsibilities: TBC","lastModifiedDate":"2022-09-27"}],"authorContributionMap":{"zylee348":27,"CedricChia123":1,"-":30,"Tan-Jin-Waye":2}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2022-09-29"},{"lineNumber":3,"author":{"gitId":"zylee348"},"content":"title: Developer guide","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2022-09-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"Tan-Jin-Waye"},"content":"## Product Scope","lastModifiedDate":"2022-09-27"},{"lineNumber":7,"author":{"gitId":"Tan-Jin-Waye"},"content":"### Target user profile","lastModifiedDate":"2022-09-27"},{"lineNumber":8,"author":{"gitId":"Tan-Jin-Waye"},"content":"Project team leaders with many projects, members and tasks to assign.","lastModifiedDate":"2022-09-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"Tan-Jin-Waye"},"content":"### Value proposition","lastModifiedDate":"2022-09-27"},{"lineNumber":11,"author":{"gitId":"Tan-Jin-Waye"},"content":"Project team leaders can:","lastModifiedDate":"2022-09-27"},{"lineNumber":12,"author":{"gitId":"Tan-Jin-Waye"},"content":"* view information of which group members are in their project.","lastModifiedDate":"2022-09-27"},{"lineNumber":13,"author":{"gitId":"Tan-Jin-Waye"},"content":"* track which tasks have been assigned to which members.","lastModifiedDate":"2022-09-27"},{"lineNumber":14,"author":{"gitId":"Tan-Jin-Waye"},"content":"* see an estimate of how much workload each member has.","lastModifiedDate":"2022-09-27"},{"lineNumber":15,"author":{"gitId":"Tan-Jin-Waye"},"content":"* receive information regarding upcoming deadlines.","lastModifiedDate":"2022-09-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"LianGuoYang"},"content":"---","lastModifiedDate":"2022-09-27"},{"lineNumber":18,"author":{"gitId":"LianGuoYang"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":19,"author":{"gitId":"LianGuoYang"},"content":"## User stories","lastModifiedDate":"2022-09-27"},{"lineNumber":20,"author":{"gitId":"LianGuoYang"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":21,"author":{"gitId":"Tan-Jin-Waye"},"content":"#### Priorities:","lastModifiedDate":"2022-09-29"},{"lineNumber":22,"author":{"gitId":"LianGuoYang"},"content":"- High (must have) \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;- `* * *`","lastModifiedDate":"2022-09-29"},{"lineNumber":23,"author":{"gitId":"Tan-Jin-Waye"},"content":"- Medium (nice to have) - `* *`","lastModifiedDate":"2022-09-29"},{"lineNumber":24,"author":{"gitId":"LianGuoYang"},"content":"- Low (unlikely to have) \u0026nbsp;- `*`","lastModifiedDate":"2022-09-29"},{"lineNumber":25,"author":{"gitId":"LianGuoYang"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":26,"author":{"gitId":"LianGuoYang"},"content":"| Priority  | As a ...          | I want to ...                                                                  | So that I can ...                                                                      |","lastModifiedDate":"2022-09-27"},{"lineNumber":27,"author":{"gitId":"LianGuoYang"},"content":"|:----------|:------------------|:-------------------------------------------------------------------------------|:---------------------------------------------------------------------------------------|","lastModifiedDate":"2022-09-27"},{"lineNumber":28,"author":{"gitId":"LianGuoYang"},"content":"| ``* * *`` | beginner user     | add contacts to my app                                                         |                                                                                        |","lastModifiedDate":"2022-09-29"},{"lineNumber":29,"author":{"gitId":"LianGuoYang"},"content":"| `* * *`   | beginner user     | remove existing contacts on my app                                             | remove entries that I no longer need                                                   |","lastModifiedDate":"2022-09-27"},{"lineNumber":30,"author":{"gitId":"LianGuoYang"},"content":"| `* * *`   | beginner user     | create a group                                                                 |                                                                                        |","lastModifiedDate":"2022-09-29"},{"lineNumber":31,"author":{"gitId":"LianGuoYang"},"content":"| `* * *`   | beginner user     | add members to a group                                                         |                                                                                        |","lastModifiedDate":"2022-09-27"},{"lineNumber":32,"author":{"gitId":"LianGuoYang"},"content":"| `* *`     | intermediate user | locate a particular contact                                                    | quickly find a member                                                                  |","lastModifiedDate":"2022-09-27"},{"lineNumber":33,"author":{"gitId":"LianGuoYang"},"content":"| `* * *`   | intermediate user | assign tasks to members                                                        |                                                                                        |","lastModifiedDate":"2022-09-29"},{"lineNumber":34,"author":{"gitId":"LianGuoYang"},"content":"| `* *`     | intermediate user | have a quick overview of tasks assigned to members in the group                |                                                                                        |","lastModifiedDate":"2022-09-29"},{"lineNumber":35,"author":{"gitId":"LianGuoYang"},"content":"| `* *`     | intermediate user | create a tag specific to the group project                                     | quickly assign tags to members                                                         |","lastModifiedDate":"2022-09-27"},{"lineNumber":36,"author":{"gitId":"LianGuoYang"},"content":"| `* *`     | intermediate user | place tags on group members                                                    | better identify their role                                                             |","lastModifiedDate":"2022-09-27"},{"lineNumber":37,"author":{"gitId":"LianGuoYang"},"content":"| `* *`     | intermediate user | assign multiple tags to a user if needed                                       | identify their roles more specifically                                                 |","lastModifiedDate":"2022-09-27"},{"lineNumber":38,"author":{"gitId":"LianGuoYang"},"content":"| `* *`     | intermediate user | filter and search for groups                                                   | quickly identify the one in particular                                                 |","lastModifiedDate":"2022-09-27"},{"lineNumber":39,"author":{"gitId":"LianGuoYang"},"content":"| `* *`     | advanced user     | view deadlines for each project                                                | periodically use this for self-reminder                                                |","lastModifiedDate":"2022-09-27"},{"lineNumber":40,"author":{"gitId":"LianGuoYang"},"content":"| `* *`     | advanced user     | have a rough sense of the workload of every member in the group                | assign future tasks with more confidence                                               |","lastModifiedDate":"2022-09-27"},{"lineNumber":41,"author":{"gitId":"LianGuoYang"},"content":"| `*`       | advanced user     | view a member’s tasks in more detail                                           | assign future tasks to them with more confidence                                       |","lastModifiedDate":"2022-09-27"},{"lineNumber":42,"author":{"gitId":"LianGuoYang"},"content":"| `* * *`   | advanced user     | add more tasks to a member                                                     |                                                                                        |                       ","lastModifiedDate":"2022-09-27"},{"lineNumber":43,"author":{"gitId":"LianGuoYang"},"content":"| `* * *`   | advanced user     | delete tasks from a member                                                     |                                                                                        |","lastModifiedDate":"2022-09-27"},{"lineNumber":44,"author":{"gitId":"LianGuoYang"},"content":"| `*`       | advanced user     | categorise the tasks assigned into different levels of intensity               | not judge workload based solely on the number of tasks per member                      |","lastModifiedDate":"2022-09-27"},{"lineNumber":45,"author":{"gitId":"LianGuoYang"},"content":"| `* * *`   | advanced user     | delete unused groups after the project is completed                            | declutter my app                                                                       |","lastModifiedDate":"2022-09-27"},{"lineNumber":46,"author":{"gitId":"LianGuoYang"},"content":"| `* * *`   | advanced user     | delete existing tags if they are no longer relevant                            | declutter my app                                                                       |","lastModifiedDate":"2022-09-27"},{"lineNumber":47,"author":{"gitId":"LianGuoYang"},"content":"| `*`       | advanced user     | reuse existing tags in groups for future projects                              | establish new projects under my management style                                       |","lastModifiedDate":"2022-09-27"},{"lineNumber":48,"author":{"gitId":"LianGuoYang"},"content":"| `*`       | advanced user     | move tags and assignments from one user to another easily                      | ensure that members can ‘swap’ roles hassle-free                                       |","lastModifiedDate":"2022-09-27"},{"lineNumber":49,"author":{"gitId":"LianGuoYang"},"content":"| `* *`     | expert user       | perform group-wide addition of tags and assignments                            | ensure that repetitive new assignments are made as quickly and accurately as possible. |","lastModifiedDate":"2022-09-27"},{"lineNumber":50,"author":{"gitId":"LianGuoYang"},"content":"| `* *`     | expert user       | perform group-wide removal of tags and assignments                             | ensure that group members’ roles are quickly cleared owing to new demands              |","lastModifiedDate":"2022-09-27"},{"lineNumber":51,"author":{"gitId":"LianGuoYang"},"content":"| `*`       | expert user       | be notified when a member completes his task or when a deadline is approaching | better manage my time                                                                  |","lastModifiedDate":"2022-09-27"},{"lineNumber":52,"author":{"gitId":"LianGuoYang"},"content":"| `*`       | expert user       | create shortcuts and pin most important projects on the top of the app         | access these projects faster                                                           |","lastModifiedDate":"2022-09-27"},{"lineNumber":53,"author":{"gitId":"LianGuoYang"},"content":"| `*`       | expert user       | have the choice of deleting users from the app when a project completes        | quickly declutter my app                                                               |","lastModifiedDate":"2022-09-27"},{"lineNumber":54,"author":{"gitId":"LianGuoYang"},"content":"| `*`       | expert user       | set timers to add/delete groups after a project ends                           | ensure that I do not have too many groups cluttering the database                      |","lastModifiedDate":"2022-09-27"},{"lineNumber":55,"author":{"gitId":"LianGuoYang"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":56,"author":{"gitId":"Aloynz"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":57,"author":{"gitId":"Aloynz"},"content":"## Use cases ","lastModifiedDate":"2022-09-28"},{"lineNumber":58,"author":{"gitId":"Aloynz"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":59,"author":{"gitId":"Aloynz"},"content":"For all use cases below, the **System** is TABS and the **Actor** is the user, unless specified otherwise.","lastModifiedDate":"2022-09-28"},{"lineNumber":60,"author":{"gitId":"Aloynz"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":61,"author":{"gitId":"Aloynz"},"content":"### UC1: Help","lastModifiedDate":"2022-09-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":63,"author":{"gitId":"Aloynz"},"content":"**MSS**","lastModifiedDate":"2022-09-28"},{"lineNumber":64,"author":{"gitId":"Aloynz"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":65,"author":{"gitId":"Aloynz"},"content":"1. User indicates they want help.","lastModifiedDate":"2022-09-28"},{"lineNumber":66,"author":{"gitId":"Aloynz"},"content":"2. TABS Displays UG link.","lastModifiedDate":"2022-09-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":68,"author":{"gitId":"Tan-Jin-Waye"},"content":"\u0026nbsp;\u0026nbsp;","lastModifiedDate":"2022-09-29"},{"lineNumber":69,"author":{"gitId":"Tan-Jin-Waye"},"content":"Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":71,"author":{"gitId":"Aloynz"},"content":"### UC2: Add a person","lastModifiedDate":"2022-09-28"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":73,"author":{"gitId":"Aloynz"},"content":"**MSS**","lastModifiedDate":"2022-09-28"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":75,"author":{"gitId":"Aloynz"},"content":"1. User requests add a person.","lastModifiedDate":"2022-09-28"},{"lineNumber":76,"author":{"gitId":"Aloynz"},"content":"2. TABS display that person is successfully added.","lastModifiedDate":"2022-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":78,"author":{"gitId":"Tan-Jin-Waye"},"content":"\u0026nbsp;\u0026nbsp;","lastModifiedDate":"2022-09-29"},{"lineNumber":79,"author":{"gitId":"Tan-Jin-Waye"},"content":"Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":81,"author":{"gitId":"Aloynz"},"content":"**Extensions:**","lastModifiedDate":"2022-09-28"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":83,"author":{"gitId":"Tan-Jin-Waye"},"content":"\u0026nbsp;\u0026nbsp;","lastModifiedDate":"2022-09-29"},{"lineNumber":84,"author":{"gitId":"Aloynz"},"content":"1a. The contact already exists in TABS.","lastModifiedDate":"2022-09-28"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":86,"author":{"gitId":"Tan-Jin-Waye"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;","lastModifiedDate":"2022-09-29"},{"lineNumber":87,"author":{"gitId":"Tan-Jin-Waye"},"content":"1a1. TABS displays that the person already exists in the program.","lastModifiedDate":"2022-09-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":89,"author":{"gitId":"Tan-Jin-Waye"},"content":"\u0026nbsp;\u0026nbsp;","lastModifiedDate":"2022-09-29"},{"lineNumber":90,"author":{"gitId":"Tan-Jin-Waye"},"content":"Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":92,"author":{"gitId":"Aloynz"},"content":"### UC3: Edit a person’s details","lastModifiedDate":"2022-09-28"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":94,"author":{"gitId":"Aloynz"},"content":"**MSS**","lastModifiedDate":"2022-09-28"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":96,"author":{"gitId":"Aloynz"},"content":"1. User requests to edit an existing contact.","lastModifiedDate":"2022-09-28"},{"lineNumber":97,"author":{"gitId":"Aloynz"},"content":"2. TABS displays the modified contact.","lastModifiedDate":"2022-09-28"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":99,"author":{"gitId":"Tan-Jin-Waye"},"content":"\u0026nbsp;\u0026nbsp;","lastModifiedDate":"2022-09-29"},{"lineNumber":100,"author":{"gitId":"Tan-Jin-Waye"},"content":"Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":102,"author":{"gitId":"Aloynz"},"content":"**Extensions:**","lastModifiedDate":"2022-09-28"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":104,"author":{"gitId":"Tan-Jin-Waye"},"content":"\u0026nbsp;\u0026nbsp;","lastModifiedDate":"2022-09-29"},{"lineNumber":105,"author":{"gitId":"Aloynz"},"content":"1a. The contact specified is not found in TABS.","lastModifiedDate":"2022-09-28"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":107,"author":{"gitId":"Tan-Jin-Waye"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;","lastModifiedDate":"2022-09-29"},{"lineNumber":108,"author":{"gitId":"Tan-Jin-Waye"},"content":"1a1. TABS terminates the operation by the user and displays error messages.","lastModifiedDate":"2022-09-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":110,"author":{"gitId":"Tan-Jin-Waye"},"content":"\u0026nbsp;\u0026nbsp;","lastModifiedDate":"2022-09-29"},{"lineNumber":111,"author":{"gitId":"Tan-Jin-Waye"},"content":"Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":113,"author":{"gitId":"Aloynz"},"content":"### UC4: Find a person","lastModifiedDate":"2022-09-28"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":115,"author":{"gitId":"Aloynz"},"content":"**MSS**","lastModifiedDate":"2022-09-28"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":117,"author":{"gitId":"Aloynz"},"content":"1. User requests to find an existing contact.","lastModifiedDate":"2022-09-28"},{"lineNumber":118,"author":{"gitId":"Aloynz"},"content":"2. TABS displays the contacts found.","lastModifiedDate":"2022-09-28"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":120,"author":{"gitId":"Tan-Jin-Waye"},"content":"\u0026nbsp;\u0026nbsp;","lastModifiedDate":"2022-09-29"},{"lineNumber":121,"author":{"gitId":"Tan-Jin-Waye"},"content":"Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":123,"author":{"gitId":"Aloynz"},"content":"**Extensions**","lastModifiedDate":"2022-09-28"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":125,"author":{"gitId":"Tan-Jin-Waye"},"content":"\u0026nbsp;\u0026nbsp;","lastModifiedDate":"2022-09-29"},{"lineNumber":126,"author":{"gitId":"Aloynz"},"content":"2a. The list is empty.","lastModifiedDate":"2022-09-28"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":128,"author":{"gitId":"Tan-Jin-Waye"},"content":"\u0026nbsp;\u0026nbsp;","lastModifiedDate":"2022-09-29"},{"lineNumber":129,"author":{"gitId":"Aloynz"},"content":"Use case ends.","lastModifiedDate":"2022-09-28"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":131,"author":{"gitId":"Aloynz"},"content":"### UC5: Delete a person","lastModifiedDate":"2022-09-28"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":133,"author":{"gitId":"Aloynz"},"content":"**MSS**","lastModifiedDate":"2022-09-28"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":135,"author":{"gitId":"Aloynz"},"content":"1. User requests to delete an existing contact.","lastModifiedDate":"2022-09-28"},{"lineNumber":136,"author":{"gitId":"Aloynz"},"content":"2. TABS displays that the contact is successfully deleted.","lastModifiedDate":"2022-09-28"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":138,"author":{"gitId":"Tan-Jin-Waye"},"content":"\u0026nbsp;\u0026nbsp;","lastModifiedDate":"2022-09-29"},{"lineNumber":139,"author":{"gitId":"Tan-Jin-Waye"},"content":"Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":141,"author":{"gitId":"Aloynz"},"content":"**Extensions:**","lastModifiedDate":"2022-09-28"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":143,"author":{"gitId":"Tan-Jin-Waye"},"content":"\u0026nbsp;\u0026nbsp;","lastModifiedDate":"2022-09-29"},{"lineNumber":144,"author":{"gitId":"Aloynz"},"content":"1a. The contact specified is not found in TABS.","lastModifiedDate":"2022-09-28"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":146,"author":{"gitId":"Tan-Jin-Waye"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;","lastModifiedDate":"2022-09-29"},{"lineNumber":147,"author":{"gitId":"Tan-Jin-Waye"},"content":"1a1. TABS terminates the operation by the user and indicates error messages.","lastModifiedDate":"2022-09-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":149,"author":{"gitId":"Tan-Jin-Waye"},"content":"\u0026nbsp;\u0026nbsp;","lastModifiedDate":"2022-09-29"},{"lineNumber":150,"author":{"gitId":"Tan-Jin-Waye"},"content":"Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":152,"author":{"gitId":"Aloynz"},"content":"### UC6: Add a group","lastModifiedDate":"2022-09-28"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":154,"author":{"gitId":"Aloynz"},"content":"**MSS**","lastModifiedDate":"2022-09-28"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":156,"author":{"gitId":"Aloynz"},"content":"1. User requests add a group.","lastModifiedDate":"2022-09-28"},{"lineNumber":157,"author":{"gitId":"Aloynz"},"content":"2. TABS displays the added group.","lastModifiedDate":"2022-09-28"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":159,"author":{"gitId":"Tan-Jin-Waye"},"content":"\u0026nbsp;\u0026nbsp;","lastModifiedDate":"2022-09-29"},{"lineNumber":160,"author":{"gitId":"Tan-Jin-Waye"},"content":"Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":162,"author":{"gitId":"Aloynz"},"content":"**Extensions:**","lastModifiedDate":"2022-09-28"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":164,"author":{"gitId":"Tan-Jin-Waye"},"content":"\u0026nbsp;\u0026nbsp;","lastModifiedDate":"2022-09-29"},{"lineNumber":165,"author":{"gitId":"Aloynz"},"content":"1a. The group already exists in TABS.","lastModifiedDate":"2022-09-28"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":167,"author":{"gitId":"Tan-Jin-Waye"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;","lastModifiedDate":"2022-09-29"},{"lineNumber":168,"author":{"gitId":"Tan-Jin-Waye"},"content":"1a1. TABS displays that the group already exists inside TABS.","lastModifiedDate":"2022-09-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":170,"author":{"gitId":"Tan-Jin-Waye"},"content":"\u0026nbsp;\u0026nbsp;","lastModifiedDate":"2022-09-29"},{"lineNumber":171,"author":{"gitId":"Tan-Jin-Waye"},"content":"Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":173,"author":{"gitId":"Aloynz"},"content":"### UC7: Display a group","lastModifiedDate":"2022-09-28"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":175,"author":{"gitId":"Aloynz"},"content":"**MSS**","lastModifiedDate":"2022-09-28"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":177,"author":{"gitId":"Aloynz"},"content":"1. User requests to display an existing group.","lastModifiedDate":"2022-09-28"},{"lineNumber":178,"author":{"gitId":"Aloynz"},"content":"2. TABS displays the group with its members.","lastModifiedDate":"2022-09-28"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":180,"author":{"gitId":"Tan-Jin-Waye"},"content":"\u0026nbsp;\u0026nbsp;","lastModifiedDate":"2022-09-29"},{"lineNumber":181,"author":{"gitId":"Tan-Jin-Waye"},"content":"Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":183,"author":{"gitId":"Aloynz"},"content":"**Extensions:**","lastModifiedDate":"2022-09-28"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":185,"author":{"gitId":"Tan-Jin-Waye"},"content":"\u0026nbsp;\u0026nbsp;","lastModifiedDate":"2022-09-29"},{"lineNumber":186,"author":{"gitId":"Aloynz"},"content":"1a. The group specified is not found in TABS.","lastModifiedDate":"2022-09-28"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":188,"author":{"gitId":"Tan-Jin-Waye"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;","lastModifiedDate":"2022-09-29"},{"lineNumber":189,"author":{"gitId":"Tan-Jin-Waye"},"content":"1a1. TABS terminates the operation by the user and displays error messages.","lastModifiedDate":"2022-09-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":191,"author":{"gitId":"Tan-Jin-Waye"},"content":"\u0026nbsp;\u0026nbsp;","lastModifiedDate":"2022-09-29"},{"lineNumber":192,"author":{"gitId":"Tan-Jin-Waye"},"content":"Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":194,"author":{"gitId":"Aloynz"},"content":"### UC8: Find a group","lastModifiedDate":"2022-09-28"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":196,"author":{"gitId":"Aloynz"},"content":"**MSS**","lastModifiedDate":"2022-09-28"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":198,"author":{"gitId":"Aloynz"},"content":"1. User requests to find an existing group.","lastModifiedDate":"2022-09-28"},{"lineNumber":199,"author":{"gitId":"Aloynz"},"content":"2. TABS displays the groups found.","lastModifiedDate":"2022-09-28"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":201,"author":{"gitId":"Tan-Jin-Waye"},"content":"\u0026nbsp;\u0026nbsp;","lastModifiedDate":"2022-09-29"},{"lineNumber":202,"author":{"gitId":"Tan-Jin-Waye"},"content":"Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":204,"author":{"gitId":"Aloynz"},"content":"**Extensions:**","lastModifiedDate":"2022-09-28"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":206,"author":{"gitId":"Tan-Jin-Waye"},"content":"\u0026nbsp;\u0026nbsp;","lastModifiedDate":"2022-09-29"},{"lineNumber":207,"author":{"gitId":"Aloynz"},"content":"2a. The list is empty.","lastModifiedDate":"2022-09-28"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":209,"author":{"gitId":"Tan-Jin-Waye"},"content":"\u0026nbsp;\u0026nbsp;","lastModifiedDate":"2022-09-29"},{"lineNumber":210,"author":{"gitId":"Aloynz"},"content":"Use case ends.","lastModifiedDate":"2022-09-28"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":212,"author":{"gitId":"Aloynz"},"content":"### UC9: Delete a group","lastModifiedDate":"2022-09-28"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":214,"author":{"gitId":"Aloynz"},"content":"**MSS**","lastModifiedDate":"2022-09-28"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":216,"author":{"gitId":"Aloynz"},"content":"1. User requests to delete an existing group.","lastModifiedDate":"2022-09-28"},{"lineNumber":217,"author":{"gitId":"Aloynz"},"content":"2. TABS displays that the group is successfully deleted.","lastModifiedDate":"2022-09-28"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":219,"author":{"gitId":"Tan-Jin-Waye"},"content":"\u0026nbsp;\u0026nbsp;","lastModifiedDate":"2022-09-29"},{"lineNumber":220,"author":{"gitId":"Tan-Jin-Waye"},"content":"Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":222,"author":{"gitId":"Aloynz"},"content":"**Extensions:**","lastModifiedDate":"2022-09-28"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":224,"author":{"gitId":"Tan-Jin-Waye"},"content":"\u0026nbsp;\u0026nbsp;","lastModifiedDate":"2022-09-29"},{"lineNumber":225,"author":{"gitId":"Aloynz"},"content":"1a. The contact specified is not found in TABS.","lastModifiedDate":"2022-09-28"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":227,"author":{"gitId":"Tan-Jin-Waye"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;","lastModifiedDate":"2022-09-29"},{"lineNumber":228,"author":{"gitId":"Tan-Jin-Waye"},"content":"1a1. TABS terminates the operation by the user.","lastModifiedDate":"2022-09-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":230,"author":{"gitId":"Tan-Jin-Waye"},"content":"\u0026nbsp;\u0026nbsp;","lastModifiedDate":"2022-09-29"},{"lineNumber":231,"author":{"gitId":"Tan-Jin-Waye"},"content":"Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":233,"author":{"gitId":"Aloynz"},"content":"### UC10: Add a person to group","lastModifiedDate":"2022-09-28"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":235,"author":{"gitId":"Aloynz"},"content":"**MSS**","lastModifiedDate":"2022-09-28"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":237,"author":{"gitId":"Aloynz"},"content":"1. User requests to add an existing contact to an existing group.","lastModifiedDate":"2022-09-28"},{"lineNumber":238,"author":{"gitId":"Aloynz"},"content":"2. TABS displays that the contact specified is added to the group.","lastModifiedDate":"2022-09-28"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":240,"author":{"gitId":"Tan-Jin-Waye"},"content":"\u0026nbsp;\u0026nbsp;","lastModifiedDate":"2022-09-29"},{"lineNumber":241,"author":{"gitId":"Tan-Jin-Waye"},"content":"Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":243,"author":{"gitId":"Aloynz"},"content":"**Extensions:**","lastModifiedDate":"2022-09-28"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":245,"author":{"gitId":"Tan-Jin-Waye"},"content":"\u0026nbsp;\u0026nbsp;","lastModifiedDate":"2022-09-29"},{"lineNumber":246,"author":{"gitId":"Aloynz"},"content":"1a. The contact specified is not found in TABS.","lastModifiedDate":"2022-09-28"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":248,"author":{"gitId":"Tan-Jin-Waye"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;","lastModifiedDate":"2022-09-29"},{"lineNumber":249,"author":{"gitId":"Tan-Jin-Waye"},"content":"1a1. TABS terminates the operation by the user.","lastModifiedDate":"2022-09-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":251,"author":{"gitId":"Tan-Jin-Waye"},"content":"\u0026nbsp;\u0026nbsp;","lastModifiedDate":"2022-09-29"},{"lineNumber":252,"author":{"gitId":"Tan-Jin-Waye"},"content":"Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":254,"author":{"gitId":"Tan-Jin-Waye"},"content":"\u0026nbsp;\u0026nbsp;","lastModifiedDate":"2022-09-29"},{"lineNumber":255,"author":{"gitId":"Aloynz"},"content":"1b. The group specified is not found in TABS.","lastModifiedDate":"2022-09-28"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":257,"author":{"gitId":"Tan-Jin-Waye"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;","lastModifiedDate":"2022-09-29"},{"lineNumber":258,"author":{"gitId":"Tan-Jin-Waye"},"content":"1b1. TABS terminates the operation by the user.","lastModifiedDate":"2022-09-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":260,"author":{"gitId":"Tan-Jin-Waye"},"content":"\u0026nbsp;\u0026nbsp;","lastModifiedDate":"2022-09-29"},{"lineNumber":261,"author":{"gitId":"Tan-Jin-Waye"},"content":"Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":263,"author":{"gitId":"Aloynz"},"content":"### UC11: Remove a person from group","lastModifiedDate":"2022-09-28"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":265,"author":{"gitId":"Aloynz"},"content":"**MSS**","lastModifiedDate":"2022-09-28"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":267,"author":{"gitId":"Aloynz"},"content":"1. User requests to remove an existing contact from an existing group.","lastModifiedDate":"2022-09-28"},{"lineNumber":268,"author":{"gitId":"Aloynz"},"content":"2. TABS displays that the contact specified is removed from the group.","lastModifiedDate":"2022-09-28"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":270,"author":{"gitId":"Tan-Jin-Waye"},"content":"\u0026nbsp;\u0026nbsp;","lastModifiedDate":"2022-09-29"},{"lineNumber":271,"author":{"gitId":"Tan-Jin-Waye"},"content":"Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":273,"author":{"gitId":"Aloynz"},"content":"**Extensions:**","lastModifiedDate":"2022-09-28"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":275,"author":{"gitId":"Tan-Jin-Waye"},"content":"\u0026nbsp;\u0026nbsp;","lastModifiedDate":"2022-09-29"},{"lineNumber":276,"author":{"gitId":"Aloynz"},"content":"1a. The contact specified is not found in TABS.","lastModifiedDate":"2022-09-28"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":278,"author":{"gitId":"Tan-Jin-Waye"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;","lastModifiedDate":"2022-09-29"},{"lineNumber":279,"author":{"gitId":"Tan-Jin-Waye"},"content":"1a1. TABS terminates the operation by the user.","lastModifiedDate":"2022-09-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":281,"author":{"gitId":"Tan-Jin-Waye"},"content":"\u0026nbsp;\u0026nbsp;","lastModifiedDate":"2022-09-29"},{"lineNumber":282,"author":{"gitId":"Tan-Jin-Waye"},"content":"Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":284,"author":{"gitId":"Tan-Jin-Waye"},"content":"\u0026nbsp;\u0026nbsp;","lastModifiedDate":"2022-09-29"},{"lineNumber":285,"author":{"gitId":"Aloynz"},"content":"1b. The group specified is not found in TABS.","lastModifiedDate":"2022-09-28"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":287,"author":{"gitId":"Tan-Jin-Waye"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;","lastModifiedDate":"2022-09-29"},{"lineNumber":288,"author":{"gitId":"Tan-Jin-Waye"},"content":"1b1. TABS terminates the operation by the user.","lastModifiedDate":"2022-09-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":290,"author":{"gitId":"Tan-Jin-Waye"},"content":"\u0026nbsp;\u0026nbsp;","lastModifiedDate":"2022-09-29"},{"lineNumber":291,"author":{"gitId":"Tan-Jin-Waye"},"content":"Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":293,"author":{"gitId":"Aloynz"},"content":"### UC12: Assign a task to a member","lastModifiedDate":"2022-09-28"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":295,"author":{"gitId":"Aloynz"},"content":"**MSS**","lastModifiedDate":"2022-09-28"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":297,"author":{"gitId":"Aloynz"},"content":"1. User requests to assign a task.","lastModifiedDate":"2022-09-28"},{"lineNumber":298,"author":{"gitId":"Aloynz"},"content":"2. TABS displays that the task is tagged to the person specified under the group.","lastModifiedDate":"2022-09-28"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":300,"author":{"gitId":"Tan-Jin-Waye"},"content":"\u0026nbsp;\u0026nbsp;","lastModifiedDate":"2022-09-29"},{"lineNumber":301,"author":{"gitId":"Tan-Jin-Waye"},"content":"Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":303,"author":{"gitId":"Aloynz"},"content":"**Extensions:**","lastModifiedDate":"2022-09-28"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":305,"author":{"gitId":"Tan-Jin-Waye"},"content":"\u0026nbsp;\u0026nbsp;","lastModifiedDate":"2022-09-29"},{"lineNumber":306,"author":{"gitId":"Aloynz"},"content":"1a. The contact specified is not found in TABS.","lastModifiedDate":"2022-09-28"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":308,"author":{"gitId":"Tan-Jin-Waye"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;","lastModifiedDate":"2022-09-29"},{"lineNumber":309,"author":{"gitId":"Tan-Jin-Waye"},"content":"1a1. TABS terminates the operation by the user.","lastModifiedDate":"2022-09-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":311,"author":{"gitId":"Tan-Jin-Waye"},"content":"\u0026nbsp;\u0026nbsp;","lastModifiedDate":"2022-09-29"},{"lineNumber":312,"author":{"gitId":"Tan-Jin-Waye"},"content":"Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":314,"author":{"gitId":"Tan-Jin-Waye"},"content":"\u0026nbsp;\u0026nbsp;","lastModifiedDate":"2022-09-29"},{"lineNumber":315,"author":{"gitId":"Aloynz"},"content":"1b. The group specified is not found in TABS.","lastModifiedDate":"2022-09-28"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":317,"author":{"gitId":"Tan-Jin-Waye"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;","lastModifiedDate":"2022-09-29"},{"lineNumber":318,"author":{"gitId":"Tan-Jin-Waye"},"content":"1b1. TABS terminates the operation by the user.","lastModifiedDate":"2022-09-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":320,"author":{"gitId":"Tan-Jin-Waye"},"content":"\u0026nbsp;\u0026nbsp;","lastModifiedDate":"2022-09-29"},{"lineNumber":321,"author":{"gitId":"Tan-Jin-Waye"},"content":"Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":323,"author":{"gitId":"Aloynz"},"content":"### UC13: Remove a task from a person","lastModifiedDate":"2022-09-28"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":325,"author":{"gitId":"Aloynz"},"content":"**MSS**","lastModifiedDate":"2022-09-28"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":327,"author":{"gitId":"Aloynz"},"content":"1. User requests to remove a task from a person.","lastModifiedDate":"2022-09-28"},{"lineNumber":328,"author":{"gitId":"Aloynz"},"content":"2. TABS displays that the task is successfully removed.","lastModifiedDate":"2022-09-28"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":330,"author":{"gitId":"Tan-Jin-Waye"},"content":"\u0026nbsp;\u0026nbsp;","lastModifiedDate":"2022-09-29"},{"lineNumber":331,"author":{"gitId":"Tan-Jin-Waye"},"content":"Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":333,"author":{"gitId":"Aloynz"},"content":"**Extensions:**","lastModifiedDate":"2022-09-28"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":335,"author":{"gitId":"Tan-Jin-Waye"},"content":"\u0026nbsp;\u0026nbsp;","lastModifiedDate":"2022-09-29"},{"lineNumber":336,"author":{"gitId":"Aloynz"},"content":"2a. The person specified is not found in TABS.","lastModifiedDate":"2022-09-28"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":338,"author":{"gitId":"Tan-Jin-Waye"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;","lastModifiedDate":"2022-09-29"},{"lineNumber":339,"author":{"gitId":"Tan-Jin-Waye"},"content":"2a1. TABS terminates the operation by the user.","lastModifiedDate":"2022-09-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":341,"author":{"gitId":"Tan-Jin-Waye"},"content":"\u0026nbsp;\u0026nbsp;","lastModifiedDate":"2022-09-29"},{"lineNumber":342,"author":{"gitId":"Tan-Jin-Waye"},"content":"Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":344,"author":{"gitId":"Tan-Jin-Waye"},"content":"\u0026nbsp;\u0026nbsp;","lastModifiedDate":"2022-09-29"},{"lineNumber":345,"author":{"gitId":"Aloynz"},"content":"3a. The person does not have the specified task.","lastModifiedDate":"2022-09-28"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":347,"author":{"gitId":"Tan-Jin-Waye"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;","lastModifiedDate":"2022-09-29"},{"lineNumber":348,"author":{"gitId":"Tan-Jin-Waye"},"content":"3a1. TABS terminates the operation by the user.","lastModifiedDate":"2022-09-29"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":350,"author":{"gitId":"Tan-Jin-Waye"},"content":"\u0026nbsp;\u0026nbsp;","lastModifiedDate":"2022-09-29"},{"lineNumber":351,"author":{"gitId":"Tan-Jin-Waye"},"content":"Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":353,"author":{"gitId":"Aloynz"},"content":"### UC14: Assign a tag to a person","lastModifiedDate":"2022-09-28"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":355,"author":{"gitId":"Aloynz"},"content":"**MSS**","lastModifiedDate":"2022-09-28"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":357,"author":{"gitId":"Aloynz"},"content":"1. User requests to assign a tag to a person in TABS.","lastModifiedDate":"2022-09-28"},{"lineNumber":358,"author":{"gitId":"Aloynz"},"content":"2. TABS displays that the tag is added to the person specified.","lastModifiedDate":"2022-09-28"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":360,"author":{"gitId":"Tan-Jin-Waye"},"content":"\u0026nbsp;\u0026nbsp;","lastModifiedDate":"2022-09-29"},{"lineNumber":361,"author":{"gitId":"Tan-Jin-Waye"},"content":"Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":363,"author":{"gitId":"Aloynz"},"content":"**Extensions:**","lastModifiedDate":"2022-09-28"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":365,"author":{"gitId":"Tan-Jin-Waye"},"content":"\u0026nbsp;\u0026nbsp;","lastModifiedDate":"2022-09-29"},{"lineNumber":366,"author":{"gitId":"Aloynz"},"content":"1a. The contact specified is not found in TABS.","lastModifiedDate":"2022-09-28"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":368,"author":{"gitId":"Tan-Jin-Waye"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;","lastModifiedDate":"2022-09-29"},{"lineNumber":369,"author":{"gitId":"Tan-Jin-Waye"},"content":"1a1. TABS terminates the operation by the user.","lastModifiedDate":"2022-09-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":371,"author":{"gitId":"Tan-Jin-Waye"},"content":"\u0026nbsp;\u0026nbsp;","lastModifiedDate":"2022-09-29"},{"lineNumber":372,"author":{"gitId":"Tan-Jin-Waye"},"content":"Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":374,"author":{"gitId":"Aloynz"},"content":"### UC15: Remove a tag from a person","lastModifiedDate":"2022-09-28"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":376,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2022-09-28"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":378,"author":{"gitId":"Aloynz"},"content":"1. User requests to remove a tag from a person.","lastModifiedDate":"2022-09-28"},{"lineNumber":379,"author":{"gitId":"Aloynz"},"content":"2. TABS displays that the tag is successfully removed.","lastModifiedDate":"2022-09-28"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":381,"author":{"gitId":"Tan-Jin-Waye"},"content":"\u0026nbsp;\u0026nbsp;","lastModifiedDate":"2022-09-29"},{"lineNumber":382,"author":{"gitId":"Tan-Jin-Waye"},"content":"Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":384,"author":{"gitId":"Aloynz"},"content":"**Extensions:**","lastModifiedDate":"2022-09-28"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":386,"author":{"gitId":"Tan-Jin-Waye"},"content":"\u0026nbsp;\u0026nbsp;","lastModifiedDate":"2022-09-29"},{"lineNumber":387,"author":{"gitId":"Tan-Jin-Waye"},"content":"1a. The person specified is not found in TABS.","lastModifiedDate":"2022-09-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":389,"author":{"gitId":"Tan-Jin-Waye"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;","lastModifiedDate":"2022-09-29"},{"lineNumber":390,"author":{"gitId":"Tan-Jin-Waye"},"content":"1a1. TABS terminates the operation by the user.","lastModifiedDate":"2022-09-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":392,"author":{"gitId":"Tan-Jin-Waye"},"content":"\u0026nbsp;\u0026nbsp;","lastModifiedDate":"2022-09-29"},{"lineNumber":393,"author":{"gitId":"Tan-Jin-Waye"},"content":"Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":395,"author":{"gitId":"Tan-Jin-Waye"},"content":"\u0026nbsp;\u0026nbsp;","lastModifiedDate":"2022-09-29"},{"lineNumber":396,"author":{"gitId":"Tan-Jin-Waye"},"content":"1a. The person does not have the specified tag.","lastModifiedDate":"2022-09-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":398,"author":{"gitId":"Tan-Jin-Waye"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;","lastModifiedDate":"2022-09-29"},{"lineNumber":399,"author":{"gitId":"Tan-Jin-Waye"},"content":"1a1. TABS terminates the operation by the user.","lastModifiedDate":"2022-09-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":401,"author":{"gitId":"Tan-Jin-Waye"},"content":"\u0026nbsp;\u0026nbsp;","lastModifiedDate":"2022-09-29"},{"lineNumber":402,"author":{"gitId":"Tan-Jin-Waye"},"content":"Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":403,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":404,"author":{"gitId":"Aloynz"},"content":"### UC16: Group assignment of task","lastModifiedDate":"2022-09-28"},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":406,"author":{"gitId":"Aloynz"},"content":"**MSS**","lastModifiedDate":"2022-09-28"},{"lineNumber":407,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":408,"author":{"gitId":"Aloynz"},"content":"1. User requests to add a task to a group.","lastModifiedDate":"2022-09-28"},{"lineNumber":409,"author":{"gitId":"Aloynz"},"content":"2. TABS displays that the task is successfully added.","lastModifiedDate":"2022-09-28"},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":411,"author":{"gitId":"Tan-Jin-Waye"},"content":"\u0026nbsp;\u0026nbsp;","lastModifiedDate":"2022-09-29"},{"lineNumber":412,"author":{"gitId":"Tan-Jin-Waye"},"content":"Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":414,"author":{"gitId":"Aloynz"},"content":"**Extensions:**","lastModifiedDate":"2022-09-28"},{"lineNumber":415,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":416,"author":{"gitId":"Tan-Jin-Waye"},"content":"\u0026nbsp;\u0026nbsp;","lastModifiedDate":"2022-09-29"},{"lineNumber":417,"author":{"gitId":"Tan-Jin-Waye"},"content":"1a. The group specified is not found in TABS.","lastModifiedDate":"2022-09-29"},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":419,"author":{"gitId":"Tan-Jin-Waye"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;","lastModifiedDate":"2022-09-29"},{"lineNumber":420,"author":{"gitId":"Tan-Jin-Waye"},"content":"1a1. TABS terminates the operation by the user.","lastModifiedDate":"2022-09-29"},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":422,"author":{"gitId":"Tan-Jin-Waye"},"content":"\u0026nbsp;\u0026nbsp;","lastModifiedDate":"2022-09-29"},{"lineNumber":423,"author":{"gitId":"Tan-Jin-Waye"},"content":"Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":425,"author":{"gitId":"Aloynz"},"content":"### UC17: Group removal of task","lastModifiedDate":"2022-09-28"},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":427,"author":{"gitId":"Aloynz"},"content":"**MSS**","lastModifiedDate":"2022-09-28"},{"lineNumber":428,"author":{"gitId":"Aloynz"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":429,"author":{"gitId":"Aloynz"},"content":"1. User requests to remove a task from a group.","lastModifiedDate":"2022-09-28"},{"lineNumber":430,"author":{"gitId":"Tan-Jin-Waye"},"content":"2. TABS displays that the task is successfully removed.","lastModifiedDate":"2022-09-29"},{"lineNumber":431,"author":{"gitId":"Aloynz"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":432,"author":{"gitId":"Tan-Jin-Waye"},"content":"\u0026nbsp;\u0026nbsp;","lastModifiedDate":"2022-09-29"},{"lineNumber":433,"author":{"gitId":"Tan-Jin-Waye"},"content":"Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":434,"author":{"gitId":"Aloynz"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":435,"author":{"gitId":"Aloynz"},"content":"**Extensions:**","lastModifiedDate":"2022-09-28"},{"lineNumber":436,"author":{"gitId":"Aloynz"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":437,"author":{"gitId":"Tan-Jin-Waye"},"content":"\u0026nbsp;\u0026nbsp;","lastModifiedDate":"2022-09-29"},{"lineNumber":438,"author":{"gitId":"Tan-Jin-Waye"},"content":"1a. The group specified is not found in TABS.","lastModifiedDate":"2022-09-29"},{"lineNumber":439,"author":{"gitId":"Aloynz"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":440,"author":{"gitId":"Tan-Jin-Waye"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;","lastModifiedDate":"2022-09-29"},{"lineNumber":441,"author":{"gitId":"Tan-Jin-Waye"},"content":"1a1. TABS terminates the operation by the user.","lastModifiedDate":"2022-09-29"},{"lineNumber":442,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":443,"author":{"gitId":"Tan-Jin-Waye"},"content":"\u0026nbsp;\u0026nbsp;","lastModifiedDate":"2022-09-29"},{"lineNumber":444,"author":{"gitId":"Tan-Jin-Waye"},"content":"Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":446,"author":{"gitId":"Tan-Jin-Waye"},"content":"\u0026nbsp;\u0026nbsp;","lastModifiedDate":"2022-09-29"},{"lineNumber":447,"author":{"gitId":"Tan-Jin-Waye"},"content":"1a. The person does not have the specified task.","lastModifiedDate":"2022-09-29"},{"lineNumber":448,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":449,"author":{"gitId":"Tan-Jin-Waye"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;","lastModifiedDate":"2022-09-29"},{"lineNumber":450,"author":{"gitId":"Tan-Jin-Waye"},"content":"1a1. TABS moves on to the next person in the group.","lastModifiedDate":"2022-09-29"},{"lineNumber":451,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":452,"author":{"gitId":"Tan-Jin-Waye"},"content":"\u0026nbsp;\u0026nbsp;","lastModifiedDate":"2022-09-29"},{"lineNumber":453,"author":{"gitId":"Tan-Jin-Waye"},"content":"Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":454,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":455,"author":{"gitId":"Aloynz"},"content":"### UC18: Group assignment of tag","lastModifiedDate":"2022-09-28"},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":457,"author":{"gitId":"Aloynz"},"content":"**MSS**","lastModifiedDate":"2022-09-28"},{"lineNumber":458,"author":{"gitId":"Aloynz"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":459,"author":{"gitId":"Aloynz"},"content":"1. User requests to add a tag to a group.","lastModifiedDate":"2022-09-28"},{"lineNumber":460,"author":{"gitId":"Aloynz"},"content":"2. TABS displays that the tag is successfully added.","lastModifiedDate":"2022-09-28"},{"lineNumber":461,"author":{"gitId":"Aloynz"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":462,"author":{"gitId":"Tan-Jin-Waye"},"content":"\u0026nbsp;\u0026nbsp;","lastModifiedDate":"2022-09-29"},{"lineNumber":463,"author":{"gitId":"Tan-Jin-Waye"},"content":"Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":464,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":465,"author":{"gitId":"Aloynz"},"content":"Extensions:","lastModifiedDate":"2022-09-28"},{"lineNumber":466,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":467,"author":{"gitId":"Tan-Jin-Waye"},"content":"\u0026nbsp;\u0026nbsp;","lastModifiedDate":"2022-09-29"},{"lineNumber":468,"author":{"gitId":"Tan-Jin-Waye"},"content":"1a. The group specified is not found in TABS.","lastModifiedDate":"2022-09-29"},{"lineNumber":469,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":470,"author":{"gitId":"Tan-Jin-Waye"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;","lastModifiedDate":"2022-09-29"},{"lineNumber":471,"author":{"gitId":"Tan-Jin-Waye"},"content":"1a1. TABS terminates the operation by the user.","lastModifiedDate":"2022-09-29"},{"lineNumber":472,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":473,"author":{"gitId":"Tan-Jin-Waye"},"content":"\u0026nbsp;\u0026nbsp;","lastModifiedDate":"2022-09-29"},{"lineNumber":474,"author":{"gitId":"Tan-Jin-Waye"},"content":"Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":475,"author":{"gitId":"Aloynz"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":476,"author":{"gitId":"Aloynz"},"content":"### UC19: Group removal of tag","lastModifiedDate":"2022-09-28"},{"lineNumber":477,"author":{"gitId":"Aloynz"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":478,"author":{"gitId":"Aloynz"},"content":"**MSS**","lastModifiedDate":"2022-09-28"},{"lineNumber":479,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":480,"author":{"gitId":"Aloynz"},"content":"1. User requests to remove a tag from a group.","lastModifiedDate":"2022-09-28"},{"lineNumber":481,"author":{"gitId":"Aloynz"},"content":"2. TABS displays that the tag is successfully removed.","lastModifiedDate":"2022-09-28"},{"lineNumber":482,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":483,"author":{"gitId":"Tan-Jin-Waye"},"content":"\u0026nbsp;\u0026nbsp;","lastModifiedDate":"2022-09-29"},{"lineNumber":484,"author":{"gitId":"Tan-Jin-Waye"},"content":"Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":485,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":486,"author":{"gitId":"Aloynz"},"content":"**Extensions:**","lastModifiedDate":"2022-09-28"},{"lineNumber":487,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":488,"author":{"gitId":"Tan-Jin-Waye"},"content":"\u0026nbsp;\u0026nbsp;","lastModifiedDate":"2022-09-29"},{"lineNumber":489,"author":{"gitId":"Tan-Jin-Waye"},"content":"1a. The group specified is not found in TABS.","lastModifiedDate":"2022-09-29"},{"lineNumber":490,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":491,"author":{"gitId":"Tan-Jin-Waye"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;","lastModifiedDate":"2022-09-29"},{"lineNumber":492,"author":{"gitId":"Tan-Jin-Waye"},"content":"1a1. TABS terminates the operation by the user.","lastModifiedDate":"2022-09-29"},{"lineNumber":493,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":494,"author":{"gitId":"Tan-Jin-Waye"},"content":"\u0026nbsp;\u0026nbsp;","lastModifiedDate":"2022-09-29"},{"lineNumber":495,"author":{"gitId":"Tan-Jin-Waye"},"content":"Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":496,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":497,"author":{"gitId":"Tan-Jin-Waye"},"content":"\u0026nbsp;\u0026nbsp;","lastModifiedDate":"2022-09-29"},{"lineNumber":498,"author":{"gitId":"Tan-Jin-Waye"},"content":"1a. The person does not have the specified tag.","lastModifiedDate":"2022-09-29"},{"lineNumber":499,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":500,"author":{"gitId":"Tan-Jin-Waye"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;","lastModifiedDate":"2022-09-29"},{"lineNumber":501,"author":{"gitId":"Tan-Jin-Waye"},"content":"1a1. TABS moves on to the next person in the group.","lastModifiedDate":"2022-09-29"},{"lineNumber":502,"author":{"gitId":"Aloynz"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":503,"author":{"gitId":"Tan-Jin-Waye"},"content":"\u0026nbsp;\u0026nbsp;","lastModifiedDate":"2022-09-29"},{"lineNumber":504,"author":{"gitId":"Tan-Jin-Waye"},"content":"Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":505,"author":{"gitId":"Aloynz"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":506,"author":{"gitId":"Aloynz"},"content":"### UC20: Notifications","lastModifiedDate":"2022-09-28"},{"lineNumber":507,"author":{"gitId":"Aloynz"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":508,"author":{"gitId":"Aloynz"},"content":"**MSS**","lastModifiedDate":"2022-09-28"},{"lineNumber":509,"author":{"gitId":"Aloynz"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":510,"author":{"gitId":"Aloynz"},"content":"1. User boots up the application/requests for notifications.","lastModifiedDate":"2022-09-28"},{"lineNumber":511,"author":{"gitId":"Aloynz"},"content":"2. TABS provides notifications on upcoming deadlines/completed tasks.","lastModifiedDate":"2022-09-28"},{"lineNumber":512,"author":{"gitId":"Aloynz"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":513,"author":{"gitId":"Tan-Jin-Waye"},"content":"\u0026nbsp;\u0026nbsp;","lastModifiedDate":"2022-09-29"},{"lineNumber":514,"author":{"gitId":"Tan-Jin-Waye"},"content":"Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":515,"author":{"gitId":"Aloynz"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":516,"author":{"gitId":"Aloynz"},"content":"**Extensions:**","lastModifiedDate":"2022-09-28"},{"lineNumber":517,"author":{"gitId":"Aloynz"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":518,"author":{"gitId":"Tan-Jin-Waye"},"content":"\u0026nbsp;\u0026nbsp;","lastModifiedDate":"2022-09-29"},{"lineNumber":519,"author":{"gitId":"Aloynz"},"content":"1a. List is empty.","lastModifiedDate":"2022-09-28"},{"lineNumber":520,"author":{"gitId":"LianGuoYang"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":521,"author":{"gitId":"Tan-Jin-Waye"},"content":"\u0026nbsp;\u0026nbsp;","lastModifiedDate":"2022-09-29"},{"lineNumber":522,"author":{"gitId":"Aloynz"},"content":"Use case ends.","lastModifiedDate":"2022-09-28"},{"lineNumber":523,"author":{"gitId":"LianGuoYang"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":524,"author":{"gitId":"Tan-Jin-Waye"},"content":"---","lastModifiedDate":"2022-09-27"},{"lineNumber":525,"author":{"gitId":"Tan-Jin-Waye"},"content":"## Non-functional requirements","lastModifiedDate":"2022-09-27"},{"lineNumber":526,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":527,"author":{"gitId":"Tan-Jin-Waye"},"content":"1. Should work on any **mainstream** OS (Windows, Linux, Unix, OS-X) as long as it has `Java 11` or above installed.","lastModifiedDate":"2022-09-27"},{"lineNumber":528,"author":{"gitId":"Tan-Jin-Waye"},"content":"2. Should be able to hold up to 500 persons and/or 10 groups without noticeable sluggishness in performance.","lastModifiedDate":"2022-09-27"},{"lineNumber":529,"author":{"gitId":"Tan-Jin-Waye"},"content":"3. Bulk assignments/removals should be able to handle up to 20 persons without noticeable sluggishness in performance.","lastModifiedDate":"2022-09-27"},{"lineNumber":530,"author":{"gitId":"Tan-Jin-Waye"},"content":"4. Workload indicators, if using colours, should be easily distinguishable.","lastModifiedDate":"2022-09-27"},{"lineNumber":531,"author":{"gitId":"Tan-Jin-Waye"},"content":"5. Content should be saved to a save file that can be opened and edited with mainstream text editors e.g. Notepad.","lastModifiedDate":"2022-09-27"}],"authorContributionMap":{"zylee348":1,"-":163,"Aloynz":140,"Tan-Jin-Waye":188,"LianGuoYang":39}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2022-09-29"},{"lineNumber":3,"author":{"gitId":"zylee348"},"content":"title: User guide","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"Aloynz"},"content":"TABS helps project team leaders **overview tasks assigned to group members**. It is targeted at individuals with less programming background i.e. **less CLI-intensive** in nature.","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"zylee348"},"content":"- [`Quick start`](#quick-start)","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"zylee348"},"content":"- [`Features`](#features)","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"zylee348"},"content":"  - Adding a person: [`adduser`](#adding-a-person-adduser)","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"zylee348"},"content":"  - Listing all persons: [`list`](#listing-all-persons--list)","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"zylee348"},"content":"  - Edit a person: [`edituser`](#editing-a-person--edituser)","lastModifiedDate":"2022-09-29"},{"lineNumber":13,"author":{"gitId":"zylee348"},"content":"  - Locating persons by name: [`finduser`](#locating-persons-by-name-finduser)","lastModifiedDate":"2022-09-29"},{"lineNumber":14,"author":{"gitId":"zylee348"},"content":"  - Deleting a person : [`deleteuser`](#deleting-a-person--deleteuser)","lastModifiedDate":"2022-09-29"},{"lineNumber":15,"author":{"gitId":"zylee348"},"content":"  - Adding a group: [`addgroup`](#creating-a-group--addgroup)","lastModifiedDate":"2022-09-29"},{"lineNumber":16,"author":{"gitId":"zylee348"},"content":"  - Add member to  group: [`addmember`](#adding-a-member--addmember)","lastModifiedDate":"2022-09-29"},{"lineNumber":17,"author":{"gitId":"zylee348"},"content":"  - Assign member a task: [`assigntask`](#assigning-a-task-to-a-user-assigntask)","lastModifiedDate":"2022-09-29"},{"lineNumber":18,"author":{"gitId":"zylee348"},"content":"  - Locate group by name: [`display`](#display-a-group--display)","lastModifiedDate":"2022-09-29"},{"lineNumber":19,"author":{"gitId":"zylee348"},"content":"  - Delete a group: [`deletegroup`](#deleting-a-group--deletegroup)","lastModifiedDate":"2022-09-29"},{"lineNumber":20,"author":{"gitId":"zylee348"},"content":"  - Exiting the program : [`exit`](#exiting-the-program--exit)","lastModifiedDate":"2022-09-29"},{"lineNumber":21,"author":{"gitId":"zylee348"},"content":"- [`Command summary`](#command-summary)","lastModifiedDate":"2022-09-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":24,"author":{"gitId":"Aloynz"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2022-09-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":27,"author":{"gitId":"LianGuoYang"},"content":"1. Ensure you have Java 11 or above installed in your Computer.","lastModifiedDate":"2022-09-27"},{"lineNumber":28,"author":{"gitId":"LianGuoYang"},"content":"2. Download the latest TABS.jar.","lastModifiedDate":"2022-09-27"},{"lineNumber":29,"author":{"gitId":"LianGuoYang"},"content":"3. Copy the file to the folder you want to use as the home folder for your TABS.","lastModifiedDate":"2022-09-27"},{"lineNumber":30,"author":{"gitId":"LianGuoYang"},"content":"4. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds.","lastModifiedDate":"2022-09-29"},{"lineNumber":31,"author":{"gitId":"LianGuoYang"},"content":"Note how the app contains some sample data.","lastModifiedDate":"2022-09-29"},{"lineNumber":32,"author":{"gitId":"LianGuoYang"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":33,"author":{"gitId":"LianGuoYang"},"content":"![TABS example](Ui.png)","lastModifiedDate":"2022-09-27"},{"lineNumber":34,"author":{"gitId":"LianGuoYang"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":35,"author":{"gitId":"LianGuoYang"},"content":"5. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2022-09-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"Tan-Jin-Waye"},"content":"  e.g. in `adduser n/NAME`, `NAME` is a parameter which can be used as `adduser n/John Doe`.","lastModifiedDate":"2022-09-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":61,"author":{"gitId":"Tan-Jin-Waye"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2022-09-27"},{"lineNumber":62,"author":{"gitId":"Tan-Jin-Waye"},"content":"  e.g. if the command specifies `list 123`, it will be interpreted as `list`.","lastModifiedDate":"2022-09-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"Tan-Jin-Waye"},"content":"### Adding a person: `adduser`","lastModifiedDate":"2022-09-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"Adds a person to the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"Tan-Jin-Waye"},"content":"Format: `adduser n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​`","lastModifiedDate":"2022-09-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"Tan-Jin-Waye"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb:","lastModifiedDate":"2022-09-29"},{"lineNumber":73,"author":{"gitId":"Tan-Jin-Waye"},"content":"\u003cb\u003eTip:\u003c/b\u003e A person can have any number of tags (including 0)","lastModifiedDate":"2022-09-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"Tan-Jin-Waye"},"content":"* `adduser n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01`","lastModifiedDate":"2022-09-27"},{"lineNumber":78,"author":{"gitId":"Tan-Jin-Waye"},"content":"* `adduser n/Betsy Crowe t/friend e/betsycrowe@example.com a/Newgate Prison p/1234567 t/criminal`","lastModifiedDate":"2022-09-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"### Listing all persons : `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"Shows a list of all persons in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"Tan-Jin-Waye"},"content":"### Editing a person : `edituser`","lastModifiedDate":"2022-09-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Edits an existing person in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"Tan-Jin-Waye"},"content":"Format: `edituser NAME [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`","lastModifiedDate":"2022-09-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"Tan-Jin-Waye"},"content":"* Edits the person with the specified `NAME`. The person with this `NAME` must already exist in the app.","lastModifiedDate":"2022-09-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"* When editing tags, the existing tags of the person will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"* You can remove all the person’s tags by typing `t/` without","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    specifying any tags after it.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"Tan-Jin-Waye"},"content":"*  `edituser John Doe p/91234567 e/johndoe@example.com` Edits the phone number and email address of `John Doe` to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2022-09-27"},{"lineNumber":101,"author":{"gitId":"Tan-Jin-Waye"},"content":"*  `edituser BetsyCrower n/Betsy Crower t/` Edits the name of `BetsyCrower` to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2022-09-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"Tan-Jin-Waye"},"content":"### Locating persons by name: `finduser`","lastModifiedDate":"2022-09-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"Finds persons whose names contain any of the given keywords.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"Tan-Jin-Waye"},"content":"Format: `finduser KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2022-09-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"Tan-Jin-Waye"},"content":"* `finduser John` returns `john` and `John Doe`","lastModifiedDate":"2022-09-27"},{"lineNumber":118,"author":{"gitId":"Tan-Jin-Waye"},"content":"* `finduser alex david` returns `Alex Yeoh`, `David Li`","lastModifiedDate":"2022-09-29"},{"lineNumber":119,"author":{"gitId":"Tan-Jin-Waye"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":120,"author":{"gitId":"Tan-Jin-Waye"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"Tan-Jin-Waye"},"content":"### Deleting a person : `deleteuser`","lastModifiedDate":"2022-09-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"Deletes the specified person from the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"Tan-Jin-Waye"},"content":"Format: `deleteuser NAME`","lastModifiedDate":"2022-09-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"Tan-Jin-Waye"},"content":"* Deletes the person with the specified `NAME`. The person with this `NAME` must already exist in the app.","lastModifiedDate":"2022-09-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"Tan-Jin-Waye"},"content":"* `deleteuser Betsy` deletes the person with the username `Betsy`.","lastModifiedDate":"2022-09-27"},{"lineNumber":133,"author":{"gitId":"Tan-Jin-Waye"},"content":"* `deleteuser Betsy Hoover` deletes the person with the username `Betsy Hoover`.","lastModifiedDate":"2022-09-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":135,"author":{"gitId":"CedricChia123"},"content":"### Creating a group : `addgroup`","lastModifiedDate":"2022-09-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":137,"author":{"gitId":"CedricChia123"},"content":"Creates a new group with no members.","lastModifiedDate":"2022-09-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":139,"author":{"gitId":"CedricChia123"},"content":"Format: `addgroup  GROUP`","lastModifiedDate":"2022-09-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":141,"author":{"gitId":"CedricChia123"},"content":"* Creates a group with the specified `GROUP`","lastModifiedDate":"2022-09-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":143,"author":{"gitId":"CedricChia123"},"content":"Examples:","lastModifiedDate":"2022-09-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":145,"author":{"gitId":"CedricChia123"},"content":"* `addgroup CS2103T`","lastModifiedDate":"2022-09-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":147,"author":{"gitId":"CedricChia123"},"content":"### Adding a member : `addmember`","lastModifiedDate":"2022-09-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":149,"author":{"gitId":"CedricChia123"},"content":"Adds an existing person to an existing group in TABS.","lastModifiedDate":"2022-09-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":151,"author":{"gitId":"CedricChia123"},"content":"Format: `addmember GROUP NAME`","lastModifiedDate":"2022-09-27"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":153,"author":{"gitId":"CedricChia123"},"content":"Examples:","lastModifiedDate":"2022-09-27"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":155,"author":{"gitId":"CedricChia123"},"content":"* `addmember CS2103T UserName`","lastModifiedDate":"2022-09-29"},{"lineNumber":156,"author":{"gitId":"CedricChia123"},"content":"* `addmember CS2101 DefaultUser`","lastModifiedDate":"2022-09-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":158,"author":{"gitId":"CedricChia123"},"content":"### Assigning a task to a person: `assigntask`","lastModifiedDate":"2022-09-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":160,"author":{"gitId":"CedricChia123"},"content":"Assigns a task to a person in TABS.","lastModifiedDate":"2022-09-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":162,"author":{"gitId":"CedricChia123"},"content":"Format: `assigntask NAME t/TASK`","lastModifiedDate":"2022-09-27"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":164,"author":{"gitId":"CedricChia123"},"content":"* Assigns a `TASK` to a person with the specified `NAME`.","lastModifiedDate":"2022-09-29"},{"lineNumber":165,"author":{"gitId":"CedricChia123"},"content":"* `TASK` is of type String.","lastModifiedDate":"2022-09-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":167,"author":{"gitId":"CedricChia123"},"content":"Examples:","lastModifiedDate":"2022-09-27"},{"lineNumber":168,"author":{"gitId":"CedricChia123"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":169,"author":{"gitId":"CedricChia123"},"content":"* `assigntask n/John t/TeamProject` assigns TeamProject task to person John.","lastModifiedDate":"2022-09-29"},{"lineNumber":170,"author":{"gitId":"CedricChia123"},"content":"* `assigntask n/Billy Tom t/Team Delta Project` assigns Team Delta Project to person Billy Tom.","lastModifiedDate":"2022-09-29"},{"lineNumber":171,"author":{"gitId":"CedricChia123"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":172,"author":{"gitId":"CedricChia123"},"content":"### Display a group : `display`","lastModifiedDate":"2022-09-27"},{"lineNumber":173,"author":{"gitId":"CedricChia123"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":174,"author":{"gitId":"CedricChia123"},"content":"Displays the group members allocated to the specified group. Instead of details, assigned tasks will be listed.","lastModifiedDate":"2022-09-27"},{"lineNumber":175,"author":{"gitId":"CedricChia123"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":176,"author":{"gitId":"CedricChia123"},"content":"![TABS example](Ui.png)","lastModifiedDate":"2022-09-27"},{"lineNumber":177,"author":{"gitId":"CedricChia123"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":178,"author":{"gitId":"CedricChia123"},"content":"Format: `display GROUP`","lastModifiedDate":"2022-09-27"},{"lineNumber":179,"author":{"gitId":"CedricChia123"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":180,"author":{"gitId":"CedricChia123"},"content":"Lists the members associated with the `GROUP` and their tasks.","lastModifiedDate":"2022-09-29"},{"lineNumber":181,"author":{"gitId":"CedricChia123"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":182,"author":{"gitId":"CedricChia123"},"content":"Examples:","lastModifiedDate":"2022-09-27"},{"lineNumber":183,"author":{"gitId":"CedricChia123"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":184,"author":{"gitId":"CedricChia123"},"content":"* `display CS2103T` displays the users under group CS2103T","lastModifiedDate":"2022-09-29"},{"lineNumber":185,"author":{"gitId":"CedricChia123"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":186,"author":{"gitId":"CedricChia123"},"content":"### Deleting a group : `deletegroup`","lastModifiedDate":"2022-09-27"},{"lineNumber":187,"author":{"gitId":"CedricChia123"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":188,"author":{"gitId":"CedricChia123"},"content":"Deletes the specified group from the address book.","lastModifiedDate":"2022-09-27"},{"lineNumber":189,"author":{"gitId":"CedricChia123"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":190,"author":{"gitId":"CedricChia123"},"content":"Format: `deletegroup GROUP`","lastModifiedDate":"2022-09-27"},{"lineNumber":191,"author":{"gitId":"CedricChia123"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":192,"author":{"gitId":"CedricChia123"},"content":"Deletes the group with the group name `GROUP`.","lastModifiedDate":"2022-09-29"},{"lineNumber":193,"author":{"gitId":"CedricChia123"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":194,"author":{"gitId":"CedricChia123"},"content":"Examples:","lastModifiedDate":"2022-09-27"},{"lineNumber":195,"author":{"gitId":"CedricChia123"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":196,"author":{"gitId":"CedricChia123"},"content":"* `deletegroup CS2103T` deletes the group CS2103T","lastModifiedDate":"2022-09-29"},{"lineNumber":197,"author":{"gitId":"CedricChia123"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":198,"author":{"gitId":"CedricChia123"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2022-09-27"},{"lineNumber":199,"author":{"gitId":"CedricChia123"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":200,"author":{"gitId":"CedricChia123"},"content":"Exits the program.","lastModifiedDate":"2022-09-27"},{"lineNumber":201,"author":{"gitId":"CedricChia123"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":202,"author":{"gitId":"CedricChia123"},"content":"Format: `exit`","lastModifiedDate":"2022-09-27"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":204,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-09-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2022-09-27"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":208,"author":{"gitId":"zylee348"},"content":" Action | Format, Examples","lastModifiedDate":"2022-09-29"},{"lineNumber":209,"author":{"gitId":"zylee348"},"content":"-------------------|------------------","lastModifiedDate":"2022-09-29"},{"lineNumber":210,"author":{"gitId":"zylee348"},"content":"**Add User** | `adduser [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]…` \u003cbr\u003e e.g. `adduser n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 t/friend t/colleague`","lastModifiedDate":"2022-09-29"},{"lineNumber":211,"author":{"gitId":"zylee348"},"content":"**Delete User** | `deleteuser NAME`\u003cbr\u003e e.g. `deleteuser James Ho`","lastModifiedDate":"2022-09-29"},{"lineNumber":212,"author":{"gitId":"zylee348"},"content":"**Edit User** | `edituser NAME [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]…`\u003cbr\u003e e.g. `edituser 2 n/James Lee e/jameslee@example.com`","lastModifiedDate":"2022-09-29"},{"lineNumber":213,"author":{"gitId":"zylee348"},"content":"**Find User** | `finduser KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g. `finduser James Jake`","lastModifiedDate":"2022-09-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"**List** | `list`","lastModifiedDate":"2022-09-29"},{"lineNumber":215,"author":{"gitId":"zylee348"},"content":"**Add Group** | `addgroup GROUP` \u003cbr\u003e e.g. `addgroup CS2103T`","lastModifiedDate":"2022-09-29"},{"lineNumber":216,"author":{"gitId":"zylee348"},"content":"**Add Member** | `addmember [g/GROUP] [n/NAME]` \u003cbr\u003e e.g. `addmember g/CS2103T n/James Lee, addmember g/CS2101 n/DefaultUser`","lastModifiedDate":"2022-09-29"},{"lineNumber":217,"author":{"gitId":"zylee348"},"content":"**Assign Task** | `assigntask [n/NAME] [t/TASK]` \u003cbr\u003e e.g. `assigntask n/John t/TeamProject`","lastModifiedDate":"2022-09-29"},{"lineNumber":218,"author":{"gitId":"zylee348"},"content":"**Display Group** | `display GROUP` \u003cbr\u003e e.g. `display CS2103T`","lastModifiedDate":"2022-09-29"},{"lineNumber":219,"author":{"gitId":"zylee348"},"content":"**Delete Group** | `deletegroup GROUP` \u003cbr\u003e e.g. `deletegroup CS2103T`","lastModifiedDate":"2022-09-29"},{"lineNumber":220,"author":{"gitId":"zylee348"},"content":"**Exit** | `exit`","lastModifiedDate":"2022-09-29"}],"authorContributionMap":{"zylee348":27,"CedricChia123":53,"-":104,"Aloynz":2,"Tan-Jin-Waye":25,"LianGuoYang":9}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"zylee348"},"content":"    content: \"TABS\";","lastModifiedDate":"2022-09-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"zylee348":1,"-":294}},{"path":"docs/team/aloynz.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Aloynz"},"content":"---","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"Aloynz"},"content":"layout: page","lastModifiedDate":"2022-09-29"},{"lineNumber":3,"author":{"gitId":"Aloynz"},"content":"title: Aloysius Neo Ze En\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"Aloynz"},"content":"---","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"Aloynz"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"Aloynz"},"content":"### Project: TABS","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"Aloynz"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"Aloynz"},"content":"TABS is a desktop scheduler application used by people managing team projects. It allows the user to view a project\u0027s members and their workload, allocate tasks to them and get reminders on upcoming deadlines or deliverables.","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"Aloynz"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"Aloynz"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"Aloynz"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"Aloynz"},"content":"* **New Feature**: to be added soon","lastModifiedDate":"2022-09-29"},{"lineNumber":13,"author":{"gitId":"Aloynz"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":14,"author":{"gitId":"Aloynz"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003daloynz\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-09-29"},{"lineNumber":15,"author":{"gitId":"Aloynz"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":16,"author":{"gitId":"Aloynz"},"content":"* **Project management**:","lastModifiedDate":"2022-09-29"},{"lineNumber":17,"author":{"gitId":"Aloynz"},"content":"    * to be added soon","lastModifiedDate":"2022-09-29"},{"lineNumber":18,"author":{"gitId":"Aloynz"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":19,"author":{"gitId":"Aloynz"},"content":"* **Contribution to team-based Tasks**","lastModifiedDate":"2022-09-29"},{"lineNumber":20,"author":{"gitId":"Aloynz"},"content":"    * to be added soon","lastModifiedDate":"2022-09-29"},{"lineNumber":21,"author":{"gitId":"Aloynz"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":22,"author":{"gitId":"Aloynz"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-29"},{"lineNumber":23,"author":{"gitId":"Aloynz"},"content":"    * to be added soon","lastModifiedDate":"2022-09-29"},{"lineNumber":24,"author":{"gitId":"Aloynz"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":25,"author":{"gitId":"Aloynz"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-29"},{"lineNumber":26,"author":{"gitId":"Aloynz"},"content":"    * User Guide:","lastModifiedDate":"2022-09-29"},{"lineNumber":27,"author":{"gitId":"Aloynz"},"content":"        * to be added soon","lastModifiedDate":"2022-09-29"},{"lineNumber":28,"author":{"gitId":"Aloynz"},"content":"    * Developer Guide:","lastModifiedDate":"2022-09-29"},{"lineNumber":29,"author":{"gitId":"Aloynz"},"content":"        * to be added soon","lastModifiedDate":"2022-09-29"},{"lineNumber":30,"author":{"gitId":"Aloynz"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":31,"author":{"gitId":"Aloynz"},"content":"* **Community**:","lastModifiedDate":"2022-09-29"},{"lineNumber":32,"author":{"gitId":"Aloynz"},"content":"    * to be added soon","lastModifiedDate":"2022-09-29"},{"lineNumber":33,"author":{"gitId":"Aloynz"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":34,"author":{"gitId":"Aloynz"},"content":"* **Tools**:","lastModifiedDate":"2022-09-29"},{"lineNumber":35,"author":{"gitId":"Aloynz"},"content":"    * to be added soon","lastModifiedDate":"2022-09-29"},{"lineNumber":36,"author":{"gitId":"Aloynz"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":37,"author":{"gitId":"Aloynz"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2022-09-29"}],"authorContributionMap":{"Aloynz":37}},{"path":"docs/team/cedricchia123.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"CedricChia123"},"content":"---","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"CedricChia123"},"content":"layout: page","lastModifiedDate":"2022-09-29"},{"lineNumber":3,"author":{"gitId":"CedricChia123"},"content":"title: Cedric Chia\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"CedricChia123"},"content":"---","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"CedricChia123"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"CedricChia123"},"content":"### Project: TABS","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"CedricChia123"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"CedricChia123"},"content":"**TABS -- to be added soon**","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"CedricChia123"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"CedricChia123"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"CedricChia123"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"CedricChia123"},"content":"## Contributions","lastModifiedDate":"2022-09-29"},{"lineNumber":13,"author":{"gitId":"CedricChia123"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":14,"author":{"gitId":"CedricChia123"},"content":"To be updated.","lastModifiedDate":"2022-09-29"}],"authorContributionMap":{"CedricChia123":14}},{"path":"docs/team/lianguoyang.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"LianGuoYang"},"content":"---","lastModifiedDate":"2022-09-27"},{"lineNumber":2,"author":{"gitId":"LianGuoYang"},"content":"layout: page","lastModifiedDate":"2022-09-27"},{"lineNumber":3,"author":{"gitId":"LianGuoYang"},"content":"title: Lian Guo Yang\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-27"},{"lineNumber":4,"author":{"gitId":"LianGuoYang"},"content":"---","lastModifiedDate":"2022-09-27"},{"lineNumber":5,"author":{"gitId":"LianGuoYang"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":6,"author":{"gitId":"LianGuoYang"},"content":"### Project: TABS","lastModifiedDate":"2022-09-27"},{"lineNumber":7,"author":{"gitId":"LianGuoYang"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":8,"author":{"gitId":"LianGuoYang"},"content":"**TABS -- to be added soon**","lastModifiedDate":"2022-09-27"},{"lineNumber":9,"author":{"gitId":"LianGuoYang"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":10,"author":{"gitId":"LianGuoYang"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-27"},{"lineNumber":11,"author":{"gitId":"LianGuoYang"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":12,"author":{"gitId":"LianGuoYang"},"content":"## Contributions","lastModifiedDate":"2022-09-27"},{"lineNumber":13,"author":{"gitId":"LianGuoYang"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":14,"author":{"gitId":"LianGuoYang"},"content":"To be updated.","lastModifiedDate":"2022-09-27"}],"authorContributionMap":{"LianGuoYang":14}},{"path":"docs/team/tan-jin-waye.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Tan-Jin-Waye"},"content":"---","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"Tan-Jin-Waye"},"content":"layout: page","lastModifiedDate":"2022-09-29"},{"lineNumber":3,"author":{"gitId":"Tan-Jin-Waye"},"content":"title: Tan Jin Waye\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"Tan-Jin-Waye"},"content":"---","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"Tan-Jin-Waye"},"content":"### Project: TABS","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"Tan-Jin-Waye"},"content":"TABS is a desktop scheduler application used by people managing team projects. It allows the user to view a project\u0027s members and their workload, allocate tasks to them and get reminders on upcoming deadlines or deliverables.","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"Tan-Jin-Waye"},"content":"### Contributions","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"Tan-Jin-Waye"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-29"},{"lineNumber":13,"author":{"gitId":"Tan-Jin-Waye"},"content":"* **Code contributed**:","lastModifiedDate":"2022-10-01"},{"lineNumber":14,"author":{"gitId":"Tan-Jin-Waye"},"content":"  * [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dtan-jin-waye)","lastModifiedDate":"2022-10-01"},{"lineNumber":15,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":16,"author":{"gitId":"Tan-Jin-Waye"},"content":"* **New Features**:","lastModifiedDate":"2022-09-29"},{"lineNumber":17,"author":{"gitId":"Tan-Jin-Waye"},"content":"  * To be updated.","lastModifiedDate":"2022-09-29"},{"lineNumber":18,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":19,"author":{"gitId":"Tan-Jin-Waye"},"content":"* **Project management**:","lastModifiedDate":"2022-09-29"},{"lineNumber":20,"author":{"gitId":"Tan-Jin-Waye"},"content":"  * To be updated.","lastModifiedDate":"2022-09-29"},{"lineNumber":21,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":22,"author":{"gitId":"Tan-Jin-Waye"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-29"},{"lineNumber":23,"author":{"gitId":"Tan-Jin-Waye"},"content":"  * To be updated","lastModifiedDate":"2022-09-29"},{"lineNumber":24,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":25,"author":{"gitId":"Tan-Jin-Waye"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-29"},{"lineNumber":26,"author":{"gitId":"Tan-Jin-Waye"},"content":"  * To be updated","lastModifiedDate":"2022-09-29"},{"lineNumber":27,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":28,"author":{"gitId":"Tan-Jin-Waye"},"content":"* **Community**:","lastModifiedDate":"2022-09-29"},{"lineNumber":29,"author":{"gitId":"Tan-Jin-Waye"},"content":"  * To be updated","lastModifiedDate":"2022-09-29"},{"lineNumber":30,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":31,"author":{"gitId":"Tan-Jin-Waye"},"content":"* **Tools**:","lastModifiedDate":"2022-09-29"},{"lineNumber":32,"author":{"gitId":"Tan-Jin-Waye"},"content":"  * To be updated","lastModifiedDate":"2022-09-29"},{"lineNumber":33,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-09-29"}],"authorContributionMap":{"Tan-Jin-Waye":33}},{"path":"docs/team/zylee348.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"zylee348"},"content":"---","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"zylee348"},"content":"layout: page","lastModifiedDate":"2022-09-29"},{"lineNumber":3,"author":{"gitId":"zylee348"},"content":"title: Lee Zi Yang\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"zylee348"},"content":"---","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"zylee348"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"zylee348"},"content":"### Project: TABS","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"zylee348"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"zylee348"},"content":"TABS is a desktop scheduler application used by people managing team projects. It allows the user to view a project\u0027s members and their workload, allocate tasks to them ","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"zylee348"},"content":"and get reminders on upcoming deadlines or deliverables.","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"zylee348"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"zylee348"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"zylee348"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":13,"author":{"gitId":"zylee348"},"content":"* **New Feature**: ","lastModifiedDate":"2022-09-29"},{"lineNumber":14,"author":{"gitId":"zylee348"},"content":"  * ``` to be added ```","lastModifiedDate":"2022-09-29"},{"lineNumber":15,"author":{"gitId":"zylee348"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":16,"author":{"gitId":"zylee348"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dzylee348\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2022-09-16)","lastModifiedDate":"2022-09-29"},{"lineNumber":17,"author":{"gitId":"zylee348"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":18,"author":{"gitId":"zylee348"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":19,"author":{"gitId":"zylee348"},"content":"* **Project management**:","lastModifiedDate":"2022-09-29"},{"lineNumber":20,"author":{"gitId":"zylee348"},"content":"    * ``` to be added ```","lastModifiedDate":"2022-09-29"},{"lineNumber":21,"author":{"gitId":"zylee348"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":22,"author":{"gitId":"zylee348"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-29"},{"lineNumber":23,"author":{"gitId":"zylee348"},"content":"    * ``` to be added ```","lastModifiedDate":"2022-09-29"},{"lineNumber":24,"author":{"gitId":"zylee348"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":25,"author":{"gitId":"zylee348"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-29"},{"lineNumber":26,"author":{"gitId":"zylee348"},"content":"    * User Guide:","lastModifiedDate":"2022-09-29"},{"lineNumber":27,"author":{"gitId":"zylee348"},"content":"        * Updated the command summary","lastModifiedDate":"2022-09-29"},{"lineNumber":28,"author":{"gitId":"zylee348"},"content":"    * Developer Guide:","lastModifiedDate":"2022-09-29"},{"lineNumber":29,"author":{"gitId":"zylee348"},"content":"        * ``` to be added ```","lastModifiedDate":"2022-09-29"},{"lineNumber":30,"author":{"gitId":"zylee348"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":31,"author":{"gitId":"zylee348"},"content":"* **Community**:","lastModifiedDate":"2022-09-29"},{"lineNumber":32,"author":{"gitId":"zylee348"},"content":"    * ``` to be added ```","lastModifiedDate":"2022-09-29"},{"lineNumber":33,"author":{"gitId":"zylee348"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":34,"author":{"gitId":"zylee348"},"content":"* **Tools**:","lastModifiedDate":"2022-09-29"},{"lineNumber":35,"author":{"gitId":"zylee348"},"content":"    * ``` to be added ```","lastModifiedDate":"2022-09-29"},{"lineNumber":36,"author":{"gitId":"zylee348"},"content":"  ","lastModifiedDate":"2022-09-29"},{"lineNumber":37,"author":{"gitId":"zylee348"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":38,"author":{"gitId":"zylee348"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2022-09-29"}],"authorContributionMap":{"zylee348":38}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"CedricChia123"},"content":"    public static final String MESSAGE_INVALID_PERSON_NAME \u003d \"That person cannot be found!\";","lastModifiedDate":"2022-10-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"CedricChia123":1,"-":12}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"Tan-Jin-Waye"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":37,"author":{"gitId":"Tan-Jin-Waye"},"content":"    /** Returns an unmodifiable view of the filtered list of groups */","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"Tan-Jin-Waye"},"content":"    ObservableList\u003cGroup\u003e getFilteredGroupList();","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"-":50,"Tan-Jin-Waye":4}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":17,"author":{"gitId":"Tan-Jin-Waye"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":68,"author":{"gitId":"Tan-Jin-Waye"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":69,"author":{"gitId":"Tan-Jin-Waye"},"content":"    public ObservableList\u003cGroup\u003e getFilteredGroupList() {","lastModifiedDate":"2022-10-06"},{"lineNumber":70,"author":{"gitId":"Tan-Jin-Waye"},"content":"        return model.getFilteredGroupList();","lastModifiedDate":"2022-10-06"},{"lineNumber":71,"author":{"gitId":"Tan-Jin-Waye"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":72,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"-":81,"Tan-Jin-Waye":6}},{"path":"src/main/java/seedu/address/logic/commands/AddGroupCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tan-Jin-Waye"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"Tan-Jin-Waye"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"Tan-Jin-Waye"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUP;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"Tan-Jin-Waye"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"Tan-Jin-Waye"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"Tan-Jin-Waye"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"Tan-Jin-Waye"},"content":"/**","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"Tan-Jin-Waye"},"content":" * Adds a group to the address book.","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"Tan-Jin-Waye"},"content":" */","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"Tan-Jin-Waye"},"content":"public class AddGroupCommand extends Command {","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"Tan-Jin-Waye"},"content":"    public static final String COMMAND_WORD \u003d \"addgroup\";","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"Tan-Jin-Waye"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds an empty group to the address book. \"","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"Tan-Jin-Waye"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"Tan-Jin-Waye"},"content":"            + PREFIX_GROUP + \"GROUPNAME\\n\"","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"Tan-Jin-Waye"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"Tan-Jin-Waye"},"content":"            + PREFIX_GROUP + \"CS2103T Team Project\";","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"Tan-Jin-Waye"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New group added: %1$s\";","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"Tan-Jin-Waye"},"content":"    public static final String MESSAGE_DUPLICATE_GROUP \u003d \"This group already exists in the address book\";","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"Tan-Jin-Waye"},"content":"    private final Group toAdd;","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"Tan-Jin-Waye"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"Tan-Jin-Waye"},"content":"     * Creates an AddGroupCommand to add the specified {@code Group}","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"Tan-Jin-Waye"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"Tan-Jin-Waye"},"content":"    public AddGroupCommand(Group group) {","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"Tan-Jin-Waye"},"content":"        requireNonNull(group);","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"Tan-Jin-Waye"},"content":"        toAdd \u003d group;","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"Tan-Jin-Waye"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"Tan-Jin-Waye"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"Tan-Jin-Waye"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"Tan-Jin-Waye"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"Tan-Jin-Waye"},"content":"        if (model.hasGroup(toAdd)) {","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"Tan-Jin-Waye"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_GROUP);","lastModifiedDate":"2022-10-06"},{"lineNumber":42,"author":{"gitId":"Tan-Jin-Waye"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"Tan-Jin-Waye"},"content":"        model.addGroup(toAdd);","lastModifiedDate":"2022-10-06"},{"lineNumber":45,"author":{"gitId":"Tan-Jin-Waye"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2022-10-06"},{"lineNumber":46,"author":{"gitId":"Tan-Jin-Waye"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":47,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":48,"author":{"gitId":"Tan-Jin-Waye"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":49,"author":{"gitId":"Tan-Jin-Waye"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-06"},{"lineNumber":50,"author":{"gitId":"Tan-Jin-Waye"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2022-10-06"},{"lineNumber":51,"author":{"gitId":"Tan-Jin-Waye"},"content":"                || (other instanceof AddGroupCommand","lastModifiedDate":"2022-10-06"},{"lineNumber":52,"author":{"gitId":"Tan-Jin-Waye"},"content":"                \u0026\u0026 toAdd.equals(((AddGroupCommand) other).toAdd));","lastModifiedDate":"2022-10-06"},{"lineNumber":53,"author":{"gitId":"Tan-Jin-Waye"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":54,"author":{"gitId":"Tan-Jin-Waye"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"Tan-Jin-Waye":54}},{"path":"src/main/java/seedu/address/logic/commands/AddUserCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"zylee348"},"content":"public class AddUserCommand extends Command {","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"zylee348"},"content":"    public static final String COMMAND_WORD \u003d \"adduser\";","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"zylee348"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a user to the address book. \"","lastModifiedDate":"2022-10-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"zylee348"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New user added: %1$s\";","lastModifiedDate":"2022-10-03"},{"lineNumber":37,"author":{"gitId":"zylee348"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This user already exists in the address book\";","lastModifiedDate":"2022-10-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"zylee348"},"content":"    public AddUserCommand(Person person) {","lastModifiedDate":"2022-10-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"zylee348"},"content":"                || (other instanceof AddUserCommand // instanceof handles nulls","lastModifiedDate":"2022-10-03"},{"lineNumber":65,"author":{"gitId":"zylee348"},"content":"                \u0026\u0026 toAdd.equals(((AddUserCommand) other).toAdd));","lastModifiedDate":"2022-10-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"zylee348":8,"-":59}},{"path":"src/main/java/seedu/address/logic/commands/AssignTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LianGuoYang"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"LianGuoYang"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"LianGuoYang"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"LianGuoYang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUP;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"LianGuoYang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"LianGuoYang"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"LianGuoYang"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"LianGuoYang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"LianGuoYang"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"LianGuoYang"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"LianGuoYang"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"LianGuoYang"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"LianGuoYang"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"LianGuoYang"},"content":"import seedu.address.model.assignment.Assignment;","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"LianGuoYang"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"LianGuoYang"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"LianGuoYang"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"LianGuoYang"},"content":"/**","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"LianGuoYang"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"LianGuoYang"},"content":" */","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"LianGuoYang"},"content":"public class AssignTaskCommand extends Command {","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"LianGuoYang"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"LianGuoYang"},"content":"    public static final String COMMAND_WORD \u003d \"assigntask\";","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"LianGuoYang"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"LianGuoYang"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Assign task to a user with the given name in a group\"","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"LianGuoYang"},"content":"            + \"Parameters: NAME \" + PREFIX_GROUP + \"GROUP \" + PREFIX_TASK + \"TASK\\n\"","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"LianGuoYang"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice g/Group Alpha task/Coursework 0\";","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"LianGuoYang"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"LianGuoYang"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Name: %1$s, Group: %2$s Task: %3$s\";","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"LianGuoYang"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"LianGuoYang"},"content":"    public static final String MESSAGE_INVALID_PERSON \u003d \"This person is not in the address book.\";","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"LianGuoYang"},"content":"    public static final String MESSAGE_ASSIGN_TASK_SUCCESS \u003d \"New task added for the following person.\";","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"LianGuoYang"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"LianGuoYang"},"content":"    private final Name name;","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"LianGuoYang"},"content":"    private final String group;","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"LianGuoYang"},"content":"    private final Assignment task;","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"LianGuoYang"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"LianGuoYang"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"LianGuoYang"},"content":"     * @param name of the person in the filtered person list to edit the remark","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"LianGuoYang"},"content":"     * @param task of the person to be updated to","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"LianGuoYang"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"LianGuoYang"},"content":"    public AssignTaskCommand(String name, String group, String task) {","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"LianGuoYang"},"content":"        requireAllNonNull(name, group, task);","lastModifiedDate":"2022-10-04"},{"lineNumber":44,"author":{"gitId":"LianGuoYang"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2022-10-04"},{"lineNumber":45,"author":{"gitId":"LianGuoYang"},"content":"        this.group \u003d group;","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"LianGuoYang"},"content":"        this.task \u003d new Assignment(task);","lastModifiedDate":"2022-10-04"},{"lineNumber":47,"author":{"gitId":"LianGuoYang"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":48,"author":{"gitId":"LianGuoYang"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":49,"author":{"gitId":"LianGuoYang"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":50,"author":{"gitId":"LianGuoYang"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-04"},{"lineNumber":51,"author":{"gitId":"LianGuoYang"},"content":"        ObservableList\u003cPerson\u003e personList \u003d model.getPersonWithName(this.name);","lastModifiedDate":"2022-10-04"},{"lineNumber":52,"author":{"gitId":"LianGuoYang"},"content":"        Person personToAssignTask;","lastModifiedDate":"2022-10-04"},{"lineNumber":53,"author":{"gitId":"LianGuoYang"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":54,"author":{"gitId":"LianGuoYang"},"content":"        try {","lastModifiedDate":"2022-10-04"},{"lineNumber":55,"author":{"gitId":"LianGuoYang"},"content":"            personToAssignTask \u003d personList.get(0);","lastModifiedDate":"2022-10-04"},{"lineNumber":56,"author":{"gitId":"LianGuoYang"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-10-04"},{"lineNumber":57,"author":{"gitId":"LianGuoYang"},"content":"            throw new CommandException(MESSAGE_INVALID_PERSON);","lastModifiedDate":"2022-10-04"},{"lineNumber":58,"author":{"gitId":"LianGuoYang"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":59,"author":{"gitId":"LianGuoYang"},"content":"        HashMap\u003cString, ArrayList\u003cAssignment\u003e\u003e assignments \u003d personToAssignTask.getAssignments();","lastModifiedDate":"2022-10-04"},{"lineNumber":60,"author":{"gitId":"LianGuoYang"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":61,"author":{"gitId":"LianGuoYang"},"content":"        ArrayList\u003cAssignment\u003e listOfAssignment;","lastModifiedDate":"2022-10-04"},{"lineNumber":62,"author":{"gitId":"LianGuoYang"},"content":"        if (assignments.containsKey(group)) {","lastModifiedDate":"2022-10-04"},{"lineNumber":63,"author":{"gitId":"LianGuoYang"},"content":"            listOfAssignment \u003d assignments.get(group);","lastModifiedDate":"2022-10-04"},{"lineNumber":64,"author":{"gitId":"LianGuoYang"},"content":"        } else {","lastModifiedDate":"2022-10-04"},{"lineNumber":65,"author":{"gitId":"LianGuoYang"},"content":"            listOfAssignment \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-04"},{"lineNumber":66,"author":{"gitId":"LianGuoYang"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":67,"author":{"gitId":"LianGuoYang"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":68,"author":{"gitId":"LianGuoYang"},"content":"        listOfAssignment.add(task);","lastModifiedDate":"2022-10-04"},{"lineNumber":69,"author":{"gitId":"LianGuoYang"},"content":"        assignments.put(group, listOfAssignment);","lastModifiedDate":"2022-10-04"},{"lineNumber":70,"author":{"gitId":"LianGuoYang"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":71,"author":{"gitId":"LianGuoYang"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2022-10-04"},{"lineNumber":72,"author":{"gitId":"LianGuoYang"},"content":"                personToAssignTask.getName(), personToAssignTask.getPhone(), personToAssignTask.getEmail(),","lastModifiedDate":"2022-10-04"},{"lineNumber":73,"author":{"gitId":"LianGuoYang"},"content":"                personToAssignTask.getAddress(), personToAssignTask.getTags(), assignments);","lastModifiedDate":"2022-10-04"},{"lineNumber":74,"author":{"gitId":"LianGuoYang"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":75,"author":{"gitId":"LianGuoYang"},"content":"        if (!personToAssignTask.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2022-10-04"},{"lineNumber":76,"author":{"gitId":"LianGuoYang"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-10-04"},{"lineNumber":77,"author":{"gitId":"LianGuoYang"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":78,"author":{"gitId":"LianGuoYang"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":79,"author":{"gitId":"LianGuoYang"},"content":"        model.setPerson(personToAssignTask, editedPerson);","lastModifiedDate":"2022-10-04"},{"lineNumber":80,"author":{"gitId":"LianGuoYang"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-10-04"},{"lineNumber":81,"author":{"gitId":"LianGuoYang"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":82,"author":{"gitId":"LianGuoYang"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":83,"author":{"gitId":"LianGuoYang"},"content":"        return new CommandResult(String.format(MESSAGE_ASSIGN_TASK_SUCCESS + \"\\n\" + MESSAGE_ARGUMENTS,","lastModifiedDate":"2022-10-11"},{"lineNumber":84,"author":{"gitId":"LianGuoYang"},"content":"                this.name, this.group, this.task));","lastModifiedDate":"2022-10-11"},{"lineNumber":85,"author":{"gitId":"LianGuoYang"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":86,"author":{"gitId":"LianGuoYang"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":87,"author":{"gitId":"LianGuoYang"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":88,"author":{"gitId":"LianGuoYang"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-04"},{"lineNumber":89,"author":{"gitId":"LianGuoYang"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-04"},{"lineNumber":90,"author":{"gitId":"LianGuoYang"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-04"},{"lineNumber":91,"author":{"gitId":"LianGuoYang"},"content":"            return true;","lastModifiedDate":"2022-10-04"},{"lineNumber":92,"author":{"gitId":"LianGuoYang"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":93,"author":{"gitId":"LianGuoYang"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":94,"author":{"gitId":"LianGuoYang"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-04"},{"lineNumber":95,"author":{"gitId":"LianGuoYang"},"content":"        if (!(other instanceof AssignTaskCommand)) {","lastModifiedDate":"2022-10-04"},{"lineNumber":96,"author":{"gitId":"LianGuoYang"},"content":"            return false;","lastModifiedDate":"2022-10-04"},{"lineNumber":97,"author":{"gitId":"LianGuoYang"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":98,"author":{"gitId":"LianGuoYang"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":99,"author":{"gitId":"LianGuoYang"},"content":"        // state check","lastModifiedDate":"2022-10-04"},{"lineNumber":100,"author":{"gitId":"LianGuoYang"},"content":"        AssignTaskCommand e \u003d (AssignTaskCommand) other;","lastModifiedDate":"2022-10-04"},{"lineNumber":101,"author":{"gitId":"LianGuoYang"},"content":"        return name.equals(e.name)","lastModifiedDate":"2022-10-04"},{"lineNumber":102,"author":{"gitId":"LianGuoYang"},"content":"                \u0026\u0026 group.equals(e.group)","lastModifiedDate":"2022-10-04"},{"lineNumber":103,"author":{"gitId":"LianGuoYang"},"content":"                \u0026\u0026 task.equals(e.task);","lastModifiedDate":"2022-10-04"},{"lineNumber":104,"author":{"gitId":"LianGuoYang"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":105,"author":{"gitId":"LianGuoYang"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"LianGuoYang":105}},{"path":"src/main/java/seedu/address/logic/commands/DeleteGroupCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tan-Jin-Waye"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"Tan-Jin-Waye"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"Tan-Jin-Waye"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUP;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"Tan-Jin-Waye"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"Tan-Jin-Waye"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"Tan-Jin-Waye"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"Tan-Jin-Waye"},"content":"/**","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"Tan-Jin-Waye"},"content":" * Deletes a group identified using a string name from the address book.","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"Tan-Jin-Waye"},"content":" */","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"Tan-Jin-Waye"},"content":"public class DeleteGroupCommand extends Command {","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"Tan-Jin-Waye"},"content":"    public static final String COMMAND_WORD \u003d \"deletegroup\";","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"Tan-Jin-Waye"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"Tan-Jin-Waye"},"content":"            + \": Deletes the group identified by the GROUPNAME used.\\n\"","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"Tan-Jin-Waye"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"Tan-Jin-Waye"},"content":"            + PREFIX_GROUP + \"GROUPNAME \"","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"Tan-Jin-Waye"},"content":"            + \"(must be one currently in Address Book)\\n\"","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"Tan-Jin-Waye"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"Tan-Jin-Waye"},"content":"            + PREFIX_GROUP + \"CS2103T Team Project\";","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"Tan-Jin-Waye"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Deleted group: %1$s\";","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"Tan-Jin-Waye"},"content":"    private static final String MESSAGE_UNKNOWN_GROUP \u003d \"The group with this GROUPNAME does not exist.\";","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"Tan-Jin-Waye"},"content":"    private final Group targetGroup;","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"Tan-Jin-Waye"},"content":"    public DeleteGroupCommand(Group targetGroup) {","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"Tan-Jin-Waye"},"content":"        this.targetGroup \u003d targetGroup;","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"Tan-Jin-Waye"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"Tan-Jin-Waye"},"content":"    /** Executes DeleteGroupCommand */","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"Tan-Jin-Waye"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"Tan-Jin-Waye"},"content":"        //todo remove assignments from members when group is deleted","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"Tan-Jin-Waye"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"Tan-Jin-Waye"},"content":"        if (!model.hasGroup(targetGroup)) {","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"Tan-Jin-Waye"},"content":"            throw new CommandException(MESSAGE_UNKNOWN_GROUP);","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"Tan-Jin-Waye"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":42,"author":{"gitId":"Tan-Jin-Waye"},"content":"        model.deleteGroup(targetGroup);","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"Tan-Jin-Waye"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, targetGroup));","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"Tan-Jin-Waye"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":45,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":46,"author":{"gitId":"Tan-Jin-Waye"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":47,"author":{"gitId":"Tan-Jin-Waye"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-06"},{"lineNumber":48,"author":{"gitId":"Tan-Jin-Waye"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2022-10-06"},{"lineNumber":49,"author":{"gitId":"Tan-Jin-Waye"},"content":"                || (other instanceof DeleteGroupCommand","lastModifiedDate":"2022-10-06"},{"lineNumber":50,"author":{"gitId":"Tan-Jin-Waye"},"content":"                \u0026\u0026 targetGroup.equals(((DeleteGroupCommand) other).targetGroup));","lastModifiedDate":"2022-10-06"},{"lineNumber":51,"author":{"gitId":"Tan-Jin-Waye"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":52,"author":{"gitId":"Tan-Jin-Waye"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"Tan-Jin-Waye":52}},{"path":"src/main/java/seedu/address/logic/commands/DeleteUserByNameCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Aloynz"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-08"},{"lineNumber":2,"author":{"gitId":"Aloynz"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":3,"author":{"gitId":"Aloynz"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-08"},{"lineNumber":4,"author":{"gitId":"Aloynz"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"Aloynz"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":6,"author":{"gitId":"Aloynz"},"content":"import java.util.List;","lastModifiedDate":"2022-10-08"},{"lineNumber":7,"author":{"gitId":"Aloynz"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":8,"author":{"gitId":"Aloynz"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-08"},{"lineNumber":9,"author":{"gitId":"Aloynz"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-08"},{"lineNumber":10,"author":{"gitId":"Aloynz"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-08"},{"lineNumber":11,"author":{"gitId":"Aloynz"},"content":"import seedu.address.model.person.FullNamePredicate;","lastModifiedDate":"2022-10-08"},{"lineNumber":12,"author":{"gitId":"Aloynz"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-08"},{"lineNumber":13,"author":{"gitId":"Aloynz"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":14,"author":{"gitId":"Aloynz"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"Aloynz"},"content":" * Deletes a person identified using the displayed name from the address book.","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"Aloynz"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"Aloynz"},"content":"public class DeleteUserByNameCommand extends Command {","lastModifiedDate":"2022-10-08"},{"lineNumber":18,"author":{"gitId":"Aloynz"},"content":"    public static final String COMMAND_WORD \u003d \"deletebyname\";","lastModifiedDate":"2022-10-08"},{"lineNumber":19,"author":{"gitId":"Aloynz"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":20,"author":{"gitId":"Aloynz"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-08"},{"lineNumber":21,"author":{"gitId":"Aloynz"},"content":"        + \": Deletes the person identified by name of the person in the displayed person list.\\n\"","lastModifiedDate":"2022-10-08"},{"lineNumber":22,"author":{"gitId":"Aloynz"},"content":"        + \"Parameters: NAME (must be exactly the same as person\u0027s name)\\n\"","lastModifiedDate":"2022-10-08"},{"lineNumber":23,"author":{"gitId":"Aloynz"},"content":"        + \"Example: \" + COMMAND_WORD + \" UserName \";","lastModifiedDate":"2022-10-08"},{"lineNumber":24,"author":{"gitId":"Aloynz"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":25,"author":{"gitId":"Aloynz"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2022-10-08"},{"lineNumber":26,"author":{"gitId":"Aloynz"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":27,"author":{"gitId":"Aloynz"},"content":"    private final FullNamePredicate predicate;","lastModifiedDate":"2022-10-08"},{"lineNumber":28,"author":{"gitId":"Aloynz"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":29,"author":{"gitId":"Aloynz"},"content":"    public DeleteUserByNameCommand(FullNamePredicate predicate) {","lastModifiedDate":"2022-10-08"},{"lineNumber":30,"author":{"gitId":"Aloynz"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2022-10-08"},{"lineNumber":31,"author":{"gitId":"Aloynz"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":32,"author":{"gitId":"Aloynz"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":33,"author":{"gitId":"Aloynz"},"content":"    @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":34,"author":{"gitId":"Aloynz"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-08"},{"lineNumber":35,"author":{"gitId":"Aloynz"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-08"},{"lineNumber":36,"author":{"gitId":"Aloynz"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-10-08"},{"lineNumber":37,"author":{"gitId":"Aloynz"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-10-08"},{"lineNumber":38,"author":{"gitId":"Aloynz"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":39,"author":{"gitId":"Aloynz"},"content":"        int targetIndex \u003d -1;","lastModifiedDate":"2022-10-08"},{"lineNumber":40,"author":{"gitId":"Aloynz"},"content":"        for (int i \u003d 0; i \u003c lastShownList.size(); i++) {","lastModifiedDate":"2022-10-08"},{"lineNumber":41,"author":{"gitId":"Aloynz"},"content":"            Person currentPerson \u003d lastShownList.get(i);","lastModifiedDate":"2022-10-08"},{"lineNumber":42,"author":{"gitId":"Aloynz"},"content":"            if (predicate.test(currentPerson)) {","lastModifiedDate":"2022-10-08"},{"lineNumber":43,"author":{"gitId":"Aloynz"},"content":"                targetIndex \u003d i;","lastModifiedDate":"2022-10-08"},{"lineNumber":44,"author":{"gitId":"Aloynz"},"content":"                break;","lastModifiedDate":"2022-10-08"},{"lineNumber":45,"author":{"gitId":"Aloynz"},"content":"            }","lastModifiedDate":"2022-10-08"},{"lineNumber":46,"author":{"gitId":"Aloynz"},"content":"        }","lastModifiedDate":"2022-10-08"},{"lineNumber":47,"author":{"gitId":"Aloynz"},"content":"        if (targetIndex \u003d\u003d -1) {","lastModifiedDate":"2022-10-08"},{"lineNumber":48,"author":{"gitId":"Aloynz"},"content":"            throw new CommandException(String.format(Messages.MESSAGE_INVALID_PERSON_NAME));","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"Aloynz"},"content":"        }","lastModifiedDate":"2022-10-08"},{"lineNumber":50,"author":{"gitId":"Aloynz"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":51,"author":{"gitId":"Aloynz"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex);","lastModifiedDate":"2022-10-08"},{"lineNumber":52,"author":{"gitId":"Aloynz"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2022-10-08"},{"lineNumber":53,"author":{"gitId":"Aloynz"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete));","lastModifiedDate":"2022-10-08"},{"lineNumber":54,"author":{"gitId":"Aloynz"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":55,"author":{"gitId":"Aloynz"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":56,"author":{"gitId":"Aloynz"},"content":"    @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":57,"author":{"gitId":"Aloynz"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-08"},{"lineNumber":58,"author":{"gitId":"Aloynz"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-08"},{"lineNumber":59,"author":{"gitId":"Aloynz"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-08"},{"lineNumber":60,"author":{"gitId":"Aloynz"},"content":"            return true;","lastModifiedDate":"2022-10-08"},{"lineNumber":61,"author":{"gitId":"Aloynz"},"content":"        }","lastModifiedDate":"2022-10-08"},{"lineNumber":62,"author":{"gitId":"Aloynz"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":63,"author":{"gitId":"Aloynz"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-08"},{"lineNumber":64,"author":{"gitId":"Aloynz"},"content":"        if (!(other instanceof DeleteUserByNameCommand)) {","lastModifiedDate":"2022-10-08"},{"lineNumber":65,"author":{"gitId":"Aloynz"},"content":"            return false;","lastModifiedDate":"2022-10-08"},{"lineNumber":66,"author":{"gitId":"Aloynz"},"content":"        }","lastModifiedDate":"2022-10-08"},{"lineNumber":67,"author":{"gitId":"Aloynz"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":68,"author":{"gitId":"Aloynz"},"content":"        // state check","lastModifiedDate":"2022-10-08"},{"lineNumber":69,"author":{"gitId":"Aloynz"},"content":"        DeleteUserByNameCommand e \u003d (DeleteUserByNameCommand) other;","lastModifiedDate":"2022-10-08"},{"lineNumber":70,"author":{"gitId":"Aloynz"},"content":"        return predicate.equals((e.predicate));","lastModifiedDate":"2022-10-08"},{"lineNumber":71,"author":{"gitId":"Aloynz"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":72,"author":{"gitId":"Aloynz"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":73,"author":{"gitId":"Aloynz"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":74,"author":{"gitId":"Aloynz"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":75,"author":{"gitId":"Aloynz"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":76,"author":{"gitId":"Aloynz"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":77,"author":{"gitId":"Aloynz"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":78,"author":{"gitId":"Aloynz"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":79,"author":{"gitId":"Aloynz"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":80,"author":{"gitId":"Aloynz"},"content":"}","lastModifiedDate":"2022-10-08"}],"authorContributionMap":{"Aloynz":80}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"LianGuoYang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"LianGuoYang"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":24,"author":{"gitId":"LianGuoYang"},"content":"import seedu.address.model.assignment.Assignment;","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":104,"author":{"gitId":"LianGuoYang"},"content":"        HashMap\u003cString, ArrayList\u003cAssignment\u003e\u003e updateAssignments \u003d personToEdit.getAssignments();","lastModifiedDate":"2022-10-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":106,"author":{"gitId":"LianGuoYang"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTags, updateAssignments);","lastModifiedDate":"2022-10-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":137,"author":{"gitId":"LianGuoYang"},"content":"        private HashMap\u003cString, ArrayList\u003cAssignment\u003e\u003e assignments;","lastModifiedDate":"2022-10-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":143,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":144,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags);","lastModifiedDate":"2018-08-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":193,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":194,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":195,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":201,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":202,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":203,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":204,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":213,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":218,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":225,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":226,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":227,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":228,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2022-10-05"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":231,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"-":225,"LianGuoYang":6}},{"path":"src/main/java/seedu/address/logic/commands/EditUserByNameCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CedricChia123"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-08"},{"lineNumber":2,"author":{"gitId":"CedricChia123"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":3,"author":{"gitId":"CedricChia123"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-08"},{"lineNumber":4,"author":{"gitId":"CedricChia123"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-08"},{"lineNumber":5,"author":{"gitId":"CedricChia123"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-08"},{"lineNumber":6,"author":{"gitId":"CedricChia123"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-08"},{"lineNumber":7,"author":{"gitId":"CedricChia123"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-08"},{"lineNumber":8,"author":{"gitId":"CedricChia123"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-08"},{"lineNumber":9,"author":{"gitId":"CedricChia123"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-10-08"},{"lineNumber":10,"author":{"gitId":"CedricChia123"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":11,"author":{"gitId":"CedricChia123"},"content":"import java.util.List;","lastModifiedDate":"2022-10-08"},{"lineNumber":12,"author":{"gitId":"CedricChia123"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-08"},{"lineNumber":13,"author":{"gitId":"CedricChia123"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":14,"author":{"gitId":"CedricChia123"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-08"},{"lineNumber":15,"author":{"gitId":"CedricChia123"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-08"},{"lineNumber":16,"author":{"gitId":"CedricChia123"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-08"},{"lineNumber":17,"author":{"gitId":"CedricChia123"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-10-08"},{"lineNumber":18,"author":{"gitId":"CedricChia123"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-10-08"},{"lineNumber":19,"author":{"gitId":"CedricChia123"},"content":"import seedu.address.model.person.FullNamePredicate;","lastModifiedDate":"2022-10-08"},{"lineNumber":20,"author":{"gitId":"CedricChia123"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-10-08"},{"lineNumber":21,"author":{"gitId":"CedricChia123"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-08"},{"lineNumber":22,"author":{"gitId":"CedricChia123"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-10-08"},{"lineNumber":23,"author":{"gitId":"CedricChia123"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-10-08"},{"lineNumber":24,"author":{"gitId":"CedricChia123"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":25,"author":{"gitId":"CedricChia123"},"content":"/**","lastModifiedDate":"2022-10-08"},{"lineNumber":26,"author":{"gitId":"CedricChia123"},"content":" * Edits the details of an existing person in the address book when user provides a name.","lastModifiedDate":"2022-10-08"},{"lineNumber":27,"author":{"gitId":"CedricChia123"},"content":" */","lastModifiedDate":"2022-10-08"},{"lineNumber":28,"author":{"gitId":"CedricChia123"},"content":"public class EditUserByNameCommand extends Command {","lastModifiedDate":"2022-10-08"},{"lineNumber":29,"author":{"gitId":"CedricChia123"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":30,"author":{"gitId":"CedricChia123"},"content":"    public static final String COMMAND_WORD \u003d \"editbyname\";","lastModifiedDate":"2022-10-08"},{"lineNumber":31,"author":{"gitId":"CedricChia123"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":32,"author":{"gitId":"CedricChia123"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2022-10-08"},{"lineNumber":33,"author":{"gitId":"CedricChia123"},"content":"            + \"by their full name. \"","lastModifiedDate":"2022-10-08"},{"lineNumber":34,"author":{"gitId":"CedricChia123"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2022-10-08"},{"lineNumber":35,"author":{"gitId":"CedricChia123"},"content":"            + \"Parameters: NAME (must be exactly the same as person\u0027s name) \"","lastModifiedDate":"2022-10-08"},{"lineNumber":36,"author":{"gitId":"CedricChia123"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2022-10-08"},{"lineNumber":37,"author":{"gitId":"CedricChia123"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2022-10-08"},{"lineNumber":38,"author":{"gitId":"CedricChia123"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2022-10-08"},{"lineNumber":39,"author":{"gitId":"CedricChia123"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2022-10-08"},{"lineNumber":40,"author":{"gitId":"CedricChia123"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2022-10-08"},{"lineNumber":41,"author":{"gitId":"CedricChia123"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2022-10-08"},{"lineNumber":42,"author":{"gitId":"CedricChia123"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2022-10-08"},{"lineNumber":43,"author":{"gitId":"CedricChia123"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2022-10-08"},{"lineNumber":44,"author":{"gitId":"CedricChia123"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":45,"author":{"gitId":"CedricChia123"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2022-10-08"},{"lineNumber":46,"author":{"gitId":"CedricChia123"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2022-10-08"},{"lineNumber":47,"author":{"gitId":"CedricChia123"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2022-10-08"},{"lineNumber":48,"author":{"gitId":"CedricChia123"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":49,"author":{"gitId":"CedricChia123"},"content":"    private final EditCommand.EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2022-10-08"},{"lineNumber":50,"author":{"gitId":"CedricChia123"},"content":"    private final FullNamePredicate predicate;","lastModifiedDate":"2022-10-08"},{"lineNumber":51,"author":{"gitId":"CedricChia123"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":52,"author":{"gitId":"CedricChia123"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":53,"author":{"gitId":"CedricChia123"},"content":"     * @param predicate condition to test if queried person has same name as that in the list","lastModifiedDate":"2022-10-08"},{"lineNumber":54,"author":{"gitId":"CedricChia123"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2022-10-08"},{"lineNumber":55,"author":{"gitId":"CedricChia123"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":56,"author":{"gitId":"CedricChia123"},"content":"    public EditUserByNameCommand(FullNamePredicate predicate, EditCommand.EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2022-10-08"},{"lineNumber":57,"author":{"gitId":"CedricChia123"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2022-10-08"},{"lineNumber":58,"author":{"gitId":"CedricChia123"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":59,"author":{"gitId":"CedricChia123"},"content":"        this.editPersonDescriptor \u003d new EditCommand.EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2022-10-08"},{"lineNumber":60,"author":{"gitId":"CedricChia123"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2022-10-08"},{"lineNumber":61,"author":{"gitId":"CedricChia123"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":62,"author":{"gitId":"CedricChia123"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":63,"author":{"gitId":"CedricChia123"},"content":"    @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":64,"author":{"gitId":"CedricChia123"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-08"},{"lineNumber":65,"author":{"gitId":"CedricChia123"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-08"},{"lineNumber":66,"author":{"gitId":"CedricChia123"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-10-08"},{"lineNumber":67,"author":{"gitId":"CedricChia123"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-10-08"},{"lineNumber":68,"author":{"gitId":"CedricChia123"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":69,"author":{"gitId":"CedricChia123"},"content":"        int targetIndex \u003d -1;","lastModifiedDate":"2022-10-08"},{"lineNumber":70,"author":{"gitId":"CedricChia123"},"content":"        for (int i \u003d 0; i \u003c lastShownList.size(); i++) {","lastModifiedDate":"2022-10-08"},{"lineNumber":71,"author":{"gitId":"CedricChia123"},"content":"            Person currentPerson \u003d lastShownList.get(i);","lastModifiedDate":"2022-10-08"},{"lineNumber":72,"author":{"gitId":"CedricChia123"},"content":"            if (predicate.test(currentPerson)) {","lastModifiedDate":"2022-10-08"},{"lineNumber":73,"author":{"gitId":"CedricChia123"},"content":"                targetIndex \u003d i;","lastModifiedDate":"2022-10-08"},{"lineNumber":74,"author":{"gitId":"CedricChia123"},"content":"                break;","lastModifiedDate":"2022-10-08"},{"lineNumber":75,"author":{"gitId":"CedricChia123"},"content":"            }","lastModifiedDate":"2022-10-08"},{"lineNumber":76,"author":{"gitId":"CedricChia123"},"content":"        }","lastModifiedDate":"2022-10-08"},{"lineNumber":77,"author":{"gitId":"CedricChia123"},"content":"        if (targetIndex \u003d\u003d -1) {","lastModifiedDate":"2022-10-08"},{"lineNumber":78,"author":{"gitId":"CedricChia123"},"content":"            return new CommandResult(Messages.MESSAGE_INVALID_PERSON_NAME);","lastModifiedDate":"2022-10-08"},{"lineNumber":79,"author":{"gitId":"CedricChia123"},"content":"        }","lastModifiedDate":"2022-10-08"},{"lineNumber":80,"author":{"gitId":"CedricChia123"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":81,"author":{"gitId":"CedricChia123"},"content":"        Person personToEdit \u003d lastShownList.get(targetIndex);","lastModifiedDate":"2022-10-08"},{"lineNumber":82,"author":{"gitId":"CedricChia123"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2022-10-08"},{"lineNumber":83,"author":{"gitId":"CedricChia123"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":84,"author":{"gitId":"CedricChia123"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2022-10-08"},{"lineNumber":85,"author":{"gitId":"CedricChia123"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-10-08"},{"lineNumber":86,"author":{"gitId":"CedricChia123"},"content":"        }","lastModifiedDate":"2022-10-08"},{"lineNumber":87,"author":{"gitId":"CedricChia123"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":88,"author":{"gitId":"CedricChia123"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2022-10-08"},{"lineNumber":89,"author":{"gitId":"CedricChia123"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-10-08"},{"lineNumber":90,"author":{"gitId":"CedricChia123"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2022-10-08"},{"lineNumber":91,"author":{"gitId":"CedricChia123"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":92,"author":{"gitId":"CedricChia123"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":93,"author":{"gitId":"CedricChia123"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":94,"author":{"gitId":"CedricChia123"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2022-10-08"},{"lineNumber":95,"author":{"gitId":"CedricChia123"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2022-10-08"},{"lineNumber":96,"author":{"gitId":"CedricChia123"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":97,"author":{"gitId":"CedricChia123"},"content":"    private static Person createEditedPerson(Person personToEdit, EditCommand.EditPersonDescriptor","lastModifiedDate":"2022-10-08"},{"lineNumber":98,"author":{"gitId":"CedricChia123"},"content":"            editPersonDescriptor) {","lastModifiedDate":"2022-10-08"},{"lineNumber":99,"author":{"gitId":"CedricChia123"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2022-10-08"},{"lineNumber":100,"author":{"gitId":"CedricChia123"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":101,"author":{"gitId":"CedricChia123"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2022-10-08"},{"lineNumber":102,"author":{"gitId":"CedricChia123"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2022-10-08"},{"lineNumber":103,"author":{"gitId":"CedricChia123"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2022-10-08"},{"lineNumber":104,"author":{"gitId":"CedricChia123"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2022-10-08"},{"lineNumber":105,"author":{"gitId":"CedricChia123"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2022-10-08"},{"lineNumber":106,"author":{"gitId":"CedricChia123"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":107,"author":{"gitId":"CedricChia123"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTags,","lastModifiedDate":"2022-10-08"},{"lineNumber":108,"author":{"gitId":"CedricChia123"},"content":"                personToEdit.getAssignments());","lastModifiedDate":"2022-10-08"},{"lineNumber":109,"author":{"gitId":"CedricChia123"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":110,"author":{"gitId":"CedricChia123"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":111,"author":{"gitId":"CedricChia123"},"content":"    @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":112,"author":{"gitId":"CedricChia123"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-08"},{"lineNumber":113,"author":{"gitId":"CedricChia123"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-08"},{"lineNumber":114,"author":{"gitId":"CedricChia123"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-08"},{"lineNumber":115,"author":{"gitId":"CedricChia123"},"content":"            return true;","lastModifiedDate":"2022-10-08"},{"lineNumber":116,"author":{"gitId":"CedricChia123"},"content":"        }","lastModifiedDate":"2022-10-08"},{"lineNumber":117,"author":{"gitId":"CedricChia123"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":118,"author":{"gitId":"CedricChia123"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-08"},{"lineNumber":119,"author":{"gitId":"CedricChia123"},"content":"        if (!(other instanceof EditUserByNameCommand)) {","lastModifiedDate":"2022-10-08"},{"lineNumber":120,"author":{"gitId":"CedricChia123"},"content":"            return false;","lastModifiedDate":"2022-10-08"},{"lineNumber":121,"author":{"gitId":"CedricChia123"},"content":"        }","lastModifiedDate":"2022-10-08"},{"lineNumber":122,"author":{"gitId":"CedricChia123"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":123,"author":{"gitId":"CedricChia123"},"content":"        // state check","lastModifiedDate":"2022-10-08"},{"lineNumber":124,"author":{"gitId":"CedricChia123"},"content":"        EditUserByNameCommand e \u003d (EditUserByNameCommand) other;","lastModifiedDate":"2022-10-08"},{"lineNumber":125,"author":{"gitId":"CedricChia123"},"content":"        return predicate.equals((e.predicate))","lastModifiedDate":"2022-10-08"},{"lineNumber":126,"author":{"gitId":"CedricChia123"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2022-10-08"},{"lineNumber":127,"author":{"gitId":"CedricChia123"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":128,"author":{"gitId":"CedricChia123"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":129,"author":{"gitId":"CedricChia123"},"content":"}","lastModifiedDate":"2022-10-08"}],"authorContributionMap":{"CedricChia123":129}},{"path":"src/main/java/seedu/address/logic/commands/FindUserCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2018-04-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"zylee348"},"content":" * Keyword matching is case-insensitive.","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"zylee348"},"content":"public class FindUserCommand extends Command {","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"zylee348"},"content":"    public static final String COMMAND_WORD \u003d \"finduser\";","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"zylee348"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all users whose names contain any of \"","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"zylee348"},"content":"    public FindUserCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2022-10-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"zylee348"},"content":"                || (other instanceof FindUserCommand // instanceof handles nulls","lastModifiedDate":"2022-10-03"},{"lineNumber":40,"author":{"gitId":"zylee348"},"content":"                \u0026\u0026 predicate.equals(((FindUserCommand) other).predicate)); // state check","lastModifiedDate":"2022-10-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"zylee348":7,"-":35}},{"path":"src/main/java/seedu/address/logic/parser/AddGroupCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tan-Jin-Waye"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"Tan-Jin-Waye"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"Tan-Jin-Waye"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUP;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"Tan-Jin-Waye"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"Tan-Jin-Waye"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"Tan-Jin-Waye"},"content":"import seedu.address.logic.commands.AddGroupCommand;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"Tan-Jin-Waye"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"Tan-Jin-Waye"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"Tan-Jin-Waye"},"content":"import seedu.address.model.group.GroupName;","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"Tan-Jin-Waye"},"content":"/** Parses the user input in context of AddGroupCommand */","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"Tan-Jin-Waye"},"content":"public class AddGroupCommandParser implements Parser\u003cAddGroupCommand\u003e {","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"Tan-Jin-Waye"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"Tan-Jin-Waye"},"content":"     * Parses the given {@code String} of arguments in the context of the AddGroupCommand","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"Tan-Jin-Waye"},"content":"     * and returns an AddGroupCommand object for execution.","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"Tan-Jin-Waye"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"Tan-Jin-Waye"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"Tan-Jin-Waye"},"content":"    public AddGroupCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"Tan-Jin-Waye"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"Tan-Jin-Waye"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_GROUP);","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"Tan-Jin-Waye"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_GROUP) || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"Tan-Jin-Waye"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddGroupCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"Tan-Jin-Waye"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"Tan-Jin-Waye"},"content":"        GroupName name \u003d ParserUtil.parseGroupName(argMultimap.getValue(PREFIX_GROUP).get());","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"Tan-Jin-Waye"},"content":"        Group group \u003d new Group(name, new HashSet\u003c\u003e());","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"Tan-Jin-Waye"},"content":"        return new AddGroupCommand(group);","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"Tan-Jin-Waye"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"Tan-Jin-Waye"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"Tan-Jin-Waye"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"Tan-Jin-Waye"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"Tan-Jin-Waye"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"Tan-Jin-Waye"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-10-06"},{"lineNumber":42,"author":{"gitId":"Tan-Jin-Waye"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"Tan-Jin-Waye"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"Tan-Jin-Waye"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"Tan-Jin-Waye":44}},{"path":"src/main/java/seedu/address/logic/parser/AddUserCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"LianGuoYang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"LianGuoYang"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"zylee348"},"content":"import seedu.address.logic.commands.AddUserCommand;","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"LianGuoYang"},"content":"import seedu.address.model.assignment.Assignment;","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"zylee348"},"content":"public class AddUserCommandParser implements Parser\u003cAddUserCommand\u003e {","lastModifiedDate":"2022-10-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"zylee348"},"content":"    public AddUserCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2017-06-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2017-12-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":41,"author":{"gitId":"zylee348"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddUserCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":49,"author":{"gitId":"LianGuoYang"},"content":"        HashMap\u003cString, ArrayList\u003cAssignment\u003e\u003e assignments \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-10-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":51,"author":{"gitId":"LianGuoYang"},"content":"        Person person \u003d new Person(name, phone, email, address, tagList, assignments);","lastModifiedDate":"2022-10-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":53,"author":{"gitId":"zylee348"},"content":"        return new AddUserCommand(person);","lastModifiedDate":"2022-10-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"zylee348":5,"-":54,"LianGuoYang":5}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"Tan-Jin-Waye"},"content":"import seedu.address.logic.commands.AddGroupCommand;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"zylee348"},"content":"import seedu.address.logic.commands.AddUserCommand;","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"LianGuoYang"},"content":"import seedu.address.logic.commands.AssignTaskCommand;","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"Tan-Jin-Waye"},"content":"import seedu.address.logic.commands.DeleteGroupCommand;","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"Aloynz"},"content":"import seedu.address.logic.commands.DeleteUserByNameCommand;","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"CedricChia123"},"content":"import seedu.address.logic.commands.EditUserByNameCommand;","lastModifiedDate":"2022-10-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"zylee348"},"content":"import seedu.address.logic.commands.FindUserCommand;","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"zylee348"},"content":"        case AddUserCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-03"},{"lineNumber":53,"author":{"gitId":"zylee348"},"content":"            return new AddUserCommandParser().parse(arguments);","lastModifiedDate":"2022-10-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"LianGuoYang"},"content":"        case AssignTaskCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-04"},{"lineNumber":56,"author":{"gitId":"LianGuoYang"},"content":"            return new AssignTaskCommandParser().parse(arguments);","lastModifiedDate":"2022-10-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"CedricChia123"},"content":"        case EditUserByNameCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-08"},{"lineNumber":62,"author":{"gitId":"CedricChia123"},"content":"            return new EditByNameCommandParser().parse(arguments);","lastModifiedDate":"2022-10-08"},{"lineNumber":63,"author":{"gitId":"CedricChia123"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"Aloynz"},"content":"        case DeleteUserByNameCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-08"},{"lineNumber":68,"author":{"gitId":"Aloynz"},"content":"            return new DeleteUserByNameCommandParser().parse(arguments);","lastModifiedDate":"2022-10-08"},{"lineNumber":69,"author":{"gitId":"Aloynz"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"zylee348"},"content":"        case FindUserCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-03"},{"lineNumber":74,"author":{"gitId":"zylee348"},"content":"            return new FindUserCommandParser().parse(arguments);","lastModifiedDate":"2022-10-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":85,"author":{"gitId":"Tan-Jin-Waye"},"content":"        case AddGroupCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-06"},{"lineNumber":86,"author":{"gitId":"Tan-Jin-Waye"},"content":"            return new AddGroupCommandParser().parse(arguments);","lastModifiedDate":"2022-10-06"},{"lineNumber":87,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":88,"author":{"gitId":"Tan-Jin-Waye"},"content":"        case DeleteGroupCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-06"},{"lineNumber":89,"author":{"gitId":"Tan-Jin-Waye"},"content":"            return new DeleteGroupCommandParser().parse(arguments);","lastModifiedDate":"2022-10-06"},{"lineNumber":90,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"zylee348":6,"CedricChia123":4,"-":71,"Aloynz":4,"Tan-Jin-Waye":8,"LianGuoYang":3}},{"path":"src/main/java/seedu/address/logic/parser/AssignTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LianGuoYang"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"LianGuoYang"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"LianGuoYang"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"LianGuoYang"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"LianGuoYang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUP;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"LianGuoYang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK;","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"LianGuoYang"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"LianGuoYang"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"LianGuoYang"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"LianGuoYang"},"content":"import seedu.address.logic.commands.AssignTaskCommand;","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"LianGuoYang"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"LianGuoYang"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"LianGuoYang"},"content":"/**","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"LianGuoYang"},"content":" * Parses input arguments and creates a new {@code AssignTaskCommand} object","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"LianGuoYang"},"content":" */","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"LianGuoYang"},"content":"public class AssignTaskCommandParser implements Parser\u003cAssignTaskCommand\u003e {","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"LianGuoYang"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"LianGuoYang"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code AssignTaskCommand}","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"LianGuoYang"},"content":"     * and returns a {@code AssignTaskCommand} object for execution.","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"LianGuoYang"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"LianGuoYang"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"LianGuoYang"},"content":"    public AssignTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"LianGuoYang"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"LianGuoYang"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"LianGuoYang"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_GROUP, PREFIX_TASK);","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"LianGuoYang"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"LianGuoYang"},"content":"        String name;","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"LianGuoYang"},"content":"        String group;","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"LianGuoYang"},"content":"        String task;","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"LianGuoYang"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"LianGuoYang"},"content":"        try {","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"LianGuoYang"},"content":"            name \u003d argMultimap.getPreamble();","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"LianGuoYang"},"content":"            group \u003d argMultimap.getValue(PREFIX_GROUP).get();","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"LianGuoYang"},"content":"            task \u003d argMultimap.getValue(PREFIX_TASK).get();","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"LianGuoYang"},"content":"        } catch (NoSuchElementException e) {","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"LianGuoYang"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AssignTaskCommand.MESSAGE_USAGE), e);","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"LianGuoYang"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"LianGuoYang"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"LianGuoYang"},"content":"        return new AssignTaskCommand(name, group, task);","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"LianGuoYang"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"LianGuoYang"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"LianGuoYang":41}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"LianGuoYang"},"content":"    public static final Prefix PREFIX_TASK \u003d new Prefix(\"t/\");","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"LianGuoYang"},"content":"    public static final Prefix PREFIX_GROUP \u003d new Prefix(\"g/\");","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"-":15,"LianGuoYang":2}},{"path":"src/main/java/seedu/address/logic/parser/DeleteGroupCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tan-Jin-Waye"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"Tan-Jin-Waye"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"Tan-Jin-Waye"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUP;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"Tan-Jin-Waye"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"Tan-Jin-Waye"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"Tan-Jin-Waye"},"content":"import seedu.address.logic.commands.DeleteGroupCommand;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"Tan-Jin-Waye"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"Tan-Jin-Waye"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"Tan-Jin-Waye"},"content":"import seedu.address.model.group.GroupName;","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"Tan-Jin-Waye"},"content":"/** Parses user input in context of DeleteGroupCommand */","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"Tan-Jin-Waye"},"content":"public class DeleteGroupCommandParser implements Parser\u003cDeleteGroupCommand\u003e {","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"Tan-Jin-Waye"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"Tan-Jin-Waye"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteGroupCommand","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"Tan-Jin-Waye"},"content":"     * and returns a DeleteGroupCommand object for execution.","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"Tan-Jin-Waye"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"Tan-Jin-Waye"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"Tan-Jin-Waye"},"content":"    public DeleteGroupCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"Tan-Jin-Waye"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"Tan-Jin-Waye"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_GROUP);","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"Tan-Jin-Waye"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_GROUP) || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"Tan-Jin-Waye"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteGroupCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"Tan-Jin-Waye"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"Tan-Jin-Waye"},"content":"        GroupName name \u003d ParserUtil.parseGroupName(argMultimap.getValue(PREFIX_GROUP).get());","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"Tan-Jin-Waye"},"content":"        Group group \u003d new Group(name, new HashSet\u003c\u003e());","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"Tan-Jin-Waye"},"content":"        return new DeleteGroupCommand(group);","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"Tan-Jin-Waye"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"Tan-Jin-Waye"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"Tan-Jin-Waye"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"Tan-Jin-Waye"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"Tan-Jin-Waye"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"Tan-Jin-Waye"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-10-06"},{"lineNumber":42,"author":{"gitId":"Tan-Jin-Waye"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"Tan-Jin-Waye"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"Tan-Jin-Waye"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"Tan-Jin-Waye":44}},{"path":"src/main/java/seedu/address/logic/parser/DeleteUserByNameCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Aloynz"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-08"},{"lineNumber":2,"author":{"gitId":"Aloynz"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":3,"author":{"gitId":"Aloynz"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-08"},{"lineNumber":4,"author":{"gitId":"Aloynz"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":5,"author":{"gitId":"Aloynz"},"content":"import seedu.address.logic.commands.DeleteUserByNameCommand;","lastModifiedDate":"2022-10-08"},{"lineNumber":6,"author":{"gitId":"Aloynz"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"Aloynz"},"content":"import seedu.address.model.person.FullNamePredicate;","lastModifiedDate":"2022-10-08"},{"lineNumber":8,"author":{"gitId":"Aloynz"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":9,"author":{"gitId":"Aloynz"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"Aloynz"},"content":" * Parses input arguments and creates a new DeleteUserByNameCommand object","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"Aloynz"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"Aloynz"},"content":"public class DeleteUserByNameCommandParser implements Parser\u003cDeleteUserByNameCommand\u003e {","lastModifiedDate":"2022-10-08"},{"lineNumber":13,"author":{"gitId":"Aloynz"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":14,"author":{"gitId":"Aloynz"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"Aloynz"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteUserByNameCommand","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"Aloynz"},"content":"     * and returns a DeleteUserByNameCommand object for execution.","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"Aloynz"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"Aloynz"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"Aloynz"},"content":"    public DeleteUserByNameCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-08"},{"lineNumber":20,"author":{"gitId":"Aloynz"},"content":"        ArgumentMultimap argumentMultimap \u003d ArgumentTokenizer.tokenize(args);","lastModifiedDate":"2022-10-08"},{"lineNumber":21,"author":{"gitId":"Aloynz"},"content":"        if (argumentMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-10-08"},{"lineNumber":22,"author":{"gitId":"Aloynz"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"Aloynz"},"content":"                DeleteUserByNameCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"Aloynz"},"content":"        }","lastModifiedDate":"2022-10-08"},{"lineNumber":25,"author":{"gitId":"Aloynz"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":26,"author":{"gitId":"Aloynz"},"content":"        String name \u003d argumentMultimap.getPreamble();","lastModifiedDate":"2022-10-08"},{"lineNumber":27,"author":{"gitId":"Aloynz"},"content":"        return new DeleteUserByNameCommand(new FullNamePredicate(name));","lastModifiedDate":"2022-10-08"},{"lineNumber":28,"author":{"gitId":"Aloynz"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":29,"author":{"gitId":"Aloynz"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":30,"author":{"gitId":"Aloynz"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":31,"author":{"gitId":"Aloynz"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":32,"author":{"gitId":"Aloynz"},"content":"}","lastModifiedDate":"2022-10-08"}],"authorContributionMap":{"Aloynz":32}},{"path":"src/main/java/seedu/address/logic/parser/EditByNameCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CedricChia123"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-08"},{"lineNumber":2,"author":{"gitId":"CedricChia123"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":3,"author":{"gitId":"CedricChia123"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-08"},{"lineNumber":4,"author":{"gitId":"CedricChia123"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-08"},{"lineNumber":5,"author":{"gitId":"CedricChia123"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-08"},{"lineNumber":6,"author":{"gitId":"CedricChia123"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-08"},{"lineNumber":7,"author":{"gitId":"CedricChia123"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-08"},{"lineNumber":8,"author":{"gitId":"CedricChia123"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-08"},{"lineNumber":9,"author":{"gitId":"CedricChia123"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":10,"author":{"gitId":"CedricChia123"},"content":"import java.util.Collection;","lastModifiedDate":"2022-10-08"},{"lineNumber":11,"author":{"gitId":"CedricChia123"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-08"},{"lineNumber":12,"author":{"gitId":"CedricChia123"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-08"},{"lineNumber":13,"author":{"gitId":"CedricChia123"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-08"},{"lineNumber":14,"author":{"gitId":"CedricChia123"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":15,"author":{"gitId":"CedricChia123"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2022-10-08"},{"lineNumber":16,"author":{"gitId":"CedricChia123"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2022-10-08"},{"lineNumber":17,"author":{"gitId":"CedricChia123"},"content":"import seedu.address.logic.commands.EditUserByNameCommand;","lastModifiedDate":"2022-10-08"},{"lineNumber":18,"author":{"gitId":"CedricChia123"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-08"},{"lineNumber":19,"author":{"gitId":"CedricChia123"},"content":"import seedu.address.model.person.FullNamePredicate;","lastModifiedDate":"2022-10-08"},{"lineNumber":20,"author":{"gitId":"CedricChia123"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-10-08"},{"lineNumber":21,"author":{"gitId":"CedricChia123"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":22,"author":{"gitId":"CedricChia123"},"content":"/**","lastModifiedDate":"2022-10-08"},{"lineNumber":23,"author":{"gitId":"CedricChia123"},"content":" * Parses input arguments and creates a new EditByNameCommand object","lastModifiedDate":"2022-10-08"},{"lineNumber":24,"author":{"gitId":"CedricChia123"},"content":" */","lastModifiedDate":"2022-10-08"},{"lineNumber":25,"author":{"gitId":"CedricChia123"},"content":"public class EditByNameCommandParser implements Parser\u003cEditUserByNameCommand\u003e {","lastModifiedDate":"2022-10-08"},{"lineNumber":26,"author":{"gitId":"CedricChia123"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":27,"author":{"gitId":"CedricChia123"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":28,"author":{"gitId":"CedricChia123"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2022-10-08"},{"lineNumber":29,"author":{"gitId":"CedricChia123"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2022-10-08"},{"lineNumber":30,"author":{"gitId":"CedricChia123"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-08"},{"lineNumber":31,"author":{"gitId":"CedricChia123"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":32,"author":{"gitId":"CedricChia123"},"content":"    public EditUserByNameCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-08"},{"lineNumber":33,"author":{"gitId":"CedricChia123"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-10-08"},{"lineNumber":34,"author":{"gitId":"CedricChia123"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-10-08"},{"lineNumber":35,"author":{"gitId":"CedricChia123"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2022-10-08"},{"lineNumber":36,"author":{"gitId":"CedricChia123"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":37,"author":{"gitId":"CedricChia123"},"content":"        String name \u003d argMultimap.getPreamble();","lastModifiedDate":"2022-10-08"},{"lineNumber":38,"author":{"gitId":"CedricChia123"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":39,"author":{"gitId":"CedricChia123"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2022-10-08"},{"lineNumber":40,"author":{"gitId":"CedricChia123"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2022-10-08"},{"lineNumber":41,"author":{"gitId":"CedricChia123"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2022-10-08"},{"lineNumber":42,"author":{"gitId":"CedricChia123"},"content":"        }","lastModifiedDate":"2022-10-08"},{"lineNumber":43,"author":{"gitId":"CedricChia123"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2022-10-08"},{"lineNumber":44,"author":{"gitId":"CedricChia123"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2022-10-08"},{"lineNumber":45,"author":{"gitId":"CedricChia123"},"content":"        }","lastModifiedDate":"2022-10-08"},{"lineNumber":46,"author":{"gitId":"CedricChia123"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2022-10-08"},{"lineNumber":47,"author":{"gitId":"CedricChia123"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2022-10-08"},{"lineNumber":48,"author":{"gitId":"CedricChia123"},"content":"        }","lastModifiedDate":"2022-10-08"},{"lineNumber":49,"author":{"gitId":"CedricChia123"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2022-10-08"},{"lineNumber":50,"author":{"gitId":"CedricChia123"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2022-10-08"},{"lineNumber":51,"author":{"gitId":"CedricChia123"},"content":"        }","lastModifiedDate":"2022-10-08"},{"lineNumber":52,"author":{"gitId":"CedricChia123"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2022-10-08"},{"lineNumber":53,"author":{"gitId":"CedricChia123"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":54,"author":{"gitId":"CedricChia123"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2022-10-08"},{"lineNumber":55,"author":{"gitId":"CedricChia123"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-10-08"},{"lineNumber":56,"author":{"gitId":"CedricChia123"},"content":"        }","lastModifiedDate":"2022-10-08"},{"lineNumber":57,"author":{"gitId":"CedricChia123"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":58,"author":{"gitId":"CedricChia123"},"content":"        return new EditUserByNameCommand(new FullNamePredicate(name), editPersonDescriptor);","lastModifiedDate":"2022-10-08"},{"lineNumber":59,"author":{"gitId":"CedricChia123"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":60,"author":{"gitId":"CedricChia123"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":61,"author":{"gitId":"CedricChia123"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":62,"author":{"gitId":"CedricChia123"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2022-10-08"},{"lineNumber":63,"author":{"gitId":"CedricChia123"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2022-10-08"},{"lineNumber":64,"author":{"gitId":"CedricChia123"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2022-10-08"},{"lineNumber":65,"author":{"gitId":"CedricChia123"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":66,"author":{"gitId":"CedricChia123"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2022-10-08"},{"lineNumber":67,"author":{"gitId":"CedricChia123"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2022-10-08"},{"lineNumber":68,"author":{"gitId":"CedricChia123"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":69,"author":{"gitId":"CedricChia123"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2022-10-08"},{"lineNumber":70,"author":{"gitId":"CedricChia123"},"content":"            return Optional.empty();","lastModifiedDate":"2022-10-08"},{"lineNumber":71,"author":{"gitId":"CedricChia123"},"content":"        }","lastModifiedDate":"2022-10-08"},{"lineNumber":72,"author":{"gitId":"CedricChia123"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2022-10-08"},{"lineNumber":73,"author":{"gitId":"CedricChia123"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2022-10-08"},{"lineNumber":74,"author":{"gitId":"CedricChia123"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":75,"author":{"gitId":"CedricChia123"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":76,"author":{"gitId":"CedricChia123"},"content":"}","lastModifiedDate":"2022-10-08"}],"authorContributionMap":{"CedricChia123":76}},{"path":"src/main/java/seedu/address/logic/parser/FindUserCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"zylee348"},"content":"import seedu.address.logic.commands.FindUserCommand;","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"zylee348"},"content":" * Parses input arguments and creates a new FindUserCommand object","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"zylee348"},"content":"public class FindUserCommandParser implements Parser\u003cFindUserCommand\u003e {","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"zylee348"},"content":"     * Parses the given {@code String} of arguments in the context of the FindUserCommand","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"zylee348"},"content":"     * and returns a FindUserCommand object for execution.","lastModifiedDate":"2022-10-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"zylee348"},"content":"    public FindUserCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"zylee348"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindUserCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"zylee348"},"content":"        return new FindUserCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2022-10-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"zylee348":8,"-":25}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"LianGuoYang"},"content":"import seedu.address.model.assignment.Assignment;","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"Tan-Jin-Waye"},"content":"import seedu.address.model.group.GroupName;","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":126,"author":{"gitId":"LianGuoYang"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":127,"author":{"gitId":"LianGuoYang"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":128,"author":{"gitId":"LianGuoYang"},"content":"     * Parses a {@code String assignment} into a {@code Assignment}.","lastModifiedDate":"2022-10-04"},{"lineNumber":129,"author":{"gitId":"LianGuoYang"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-04"},{"lineNumber":130,"author":{"gitId":"LianGuoYang"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":131,"author":{"gitId":"LianGuoYang"},"content":"    public static Assignment parseAssignment(String assignment) {","lastModifiedDate":"2022-10-05"},{"lineNumber":132,"author":{"gitId":"LianGuoYang"},"content":"        requireNonNull(assignment);","lastModifiedDate":"2022-10-04"},{"lineNumber":133,"author":{"gitId":"LianGuoYang"},"content":"        String trimmedAssignment \u003d assignment.trim();","lastModifiedDate":"2022-10-04"},{"lineNumber":134,"author":{"gitId":"LianGuoYang"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":135,"author":{"gitId":"LianGuoYang"},"content":"        return new Assignment(trimmedAssignment);","lastModifiedDate":"2022-10-04"},{"lineNumber":136,"author":{"gitId":"LianGuoYang"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":137,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":138,"author":{"gitId":"Tan-Jin-Waye"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":139,"author":{"gitId":"Tan-Jin-Waye"},"content":"     * Parses a {@code String groupname} into a {@code GroupName}.","lastModifiedDate":"2022-10-06"},{"lineNumber":140,"author":{"gitId":"Tan-Jin-Waye"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-06"},{"lineNumber":141,"author":{"gitId":"Tan-Jin-Waye"},"content":"     *","lastModifiedDate":"2022-10-06"},{"lineNumber":142,"author":{"gitId":"Tan-Jin-Waye"},"content":"     * @throws ParseException if the given {@code groupname} is invalid.","lastModifiedDate":"2022-10-06"},{"lineNumber":143,"author":{"gitId":"Tan-Jin-Waye"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":144,"author":{"gitId":"Tan-Jin-Waye"},"content":"    public static GroupName parseGroupName(String groupname) throws ParseException {","lastModifiedDate":"2022-10-06"},{"lineNumber":145,"author":{"gitId":"Tan-Jin-Waye"},"content":"        requireNonNull(groupname);","lastModifiedDate":"2022-10-06"},{"lineNumber":146,"author":{"gitId":"Tan-Jin-Waye"},"content":"        String trimmedName \u003d groupname.trim();","lastModifiedDate":"2022-10-06"},{"lineNumber":147,"author":{"gitId":"Tan-Jin-Waye"},"content":"        if (!GroupName.isValidName(trimmedName)) {","lastModifiedDate":"2022-10-06"},{"lineNumber":148,"author":{"gitId":"Tan-Jin-Waye"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-06"},{"lineNumber":149,"author":{"gitId":"Tan-Jin-Waye"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":150,"author":{"gitId":"Tan-Jin-Waye"},"content":"        return new GroupName(trimmedName);","lastModifiedDate":"2022-10-06"},{"lineNumber":151,"author":{"gitId":"Tan-Jin-Waye"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":152,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"-":124,"Tan-Jin-Waye":16,"LianGuoYang":12}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"Tan-Jin-Waye"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"Tan-Jin-Waye"},"content":"import seedu.address.model.group.UniqueGroupList;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":20,"author":{"gitId":"Tan-Jin-Waye"},"content":"    private final UniqueGroupList groups;","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":31,"author":{"gitId":"Tan-Jin-Waye"},"content":"        groups \u003d new UniqueGroupList();","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"Tan-Jin-Waye"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":55,"author":{"gitId":"Tan-Jin-Waye"},"content":"     * Replaces the contents of the group list with {@code groups}.","lastModifiedDate":"2022-10-06"},{"lineNumber":56,"author":{"gitId":"Tan-Jin-Waye"},"content":"     * {@code groups} must not contain duplicate persons.","lastModifiedDate":"2022-10-06"},{"lineNumber":57,"author":{"gitId":"Tan-Jin-Waye"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":58,"author":{"gitId":"Tan-Jin-Waye"},"content":"    public void setGroups(List\u003cGroup\u003e groups) {","lastModifiedDate":"2022-10-06"},{"lineNumber":59,"author":{"gitId":"Tan-Jin-Waye"},"content":"        this.groups.setGroups(groups);","lastModifiedDate":"2022-10-06"},{"lineNumber":60,"author":{"gitId":"Tan-Jin-Waye"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":61,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":69,"author":{"gitId":"Tan-Jin-Waye"},"content":"        setGroups(newData.getGroupList());","lastModifiedDate":"2022-10-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"Tan-Jin-Waye"},"content":"    //// group-level operations","lastModifiedDate":"2022-10-06"},{"lineNumber":110,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":111,"author":{"gitId":"Tan-Jin-Waye"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":112,"author":{"gitId":"Tan-Jin-Waye"},"content":"     * Returns true if a group with the same identity as {@code group} exists in the address book.","lastModifiedDate":"2022-10-06"},{"lineNumber":113,"author":{"gitId":"Tan-Jin-Waye"},"content":"     * @param group","lastModifiedDate":"2022-10-06"},{"lineNumber":114,"author":{"gitId":"Tan-Jin-Waye"},"content":"     * @return","lastModifiedDate":"2022-10-06"},{"lineNumber":115,"author":{"gitId":"Tan-Jin-Waye"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":116,"author":{"gitId":"Tan-Jin-Waye"},"content":"    public boolean hasGroup(Group group) {","lastModifiedDate":"2022-10-06"},{"lineNumber":117,"author":{"gitId":"Tan-Jin-Waye"},"content":"        requireNonNull(group);","lastModifiedDate":"2022-10-06"},{"lineNumber":118,"author":{"gitId":"Tan-Jin-Waye"},"content":"        return groups.contains(group);","lastModifiedDate":"2022-10-06"},{"lineNumber":119,"author":{"gitId":"Tan-Jin-Waye"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":120,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":121,"author":{"gitId":"Tan-Jin-Waye"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":122,"author":{"gitId":"Tan-Jin-Waye"},"content":"     * Adds a group to the address book.","lastModifiedDate":"2022-10-06"},{"lineNumber":123,"author":{"gitId":"Tan-Jin-Waye"},"content":"     * The group must not already exist in the address book.","lastModifiedDate":"2022-10-06"},{"lineNumber":124,"author":{"gitId":"Tan-Jin-Waye"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":125,"author":{"gitId":"Tan-Jin-Waye"},"content":"    public void addGroup(Group g) {","lastModifiedDate":"2022-10-06"},{"lineNumber":126,"author":{"gitId":"Tan-Jin-Waye"},"content":"        groups.add(g);","lastModifiedDate":"2022-10-06"},{"lineNumber":127,"author":{"gitId":"Tan-Jin-Waye"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":128,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":129,"author":{"gitId":"Tan-Jin-Waye"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":130,"author":{"gitId":"Tan-Jin-Waye"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2022-10-06"},{"lineNumber":131,"author":{"gitId":"Tan-Jin-Waye"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2022-10-06"},{"lineNumber":132,"author":{"gitId":"Tan-Jin-Waye"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":133,"author":{"gitId":"Tan-Jin-Waye"},"content":"    public void removeGroup(Group key) {","lastModifiedDate":"2022-10-06"},{"lineNumber":134,"author":{"gitId":"Tan-Jin-Waye"},"content":"        groups.remove(key);","lastModifiedDate":"2022-10-06"},{"lineNumber":135,"author":{"gitId":"Tan-Jin-Waye"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":136,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":137,"author":{"gitId":"Tan-Jin-Waye"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":138,"author":{"gitId":"Tan-Jin-Waye"},"content":"     * Replaces the given group {@code target} in the list with {@code editedGroup}.","lastModifiedDate":"2022-10-08"},{"lineNumber":139,"author":{"gitId":"Tan-Jin-Waye"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2022-10-08"},{"lineNumber":140,"author":{"gitId":"Tan-Jin-Waye"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":141,"author":{"gitId":"Tan-Jin-Waye"},"content":"    public void setGroup(Group target, Group editedGroup) {","lastModifiedDate":"2022-10-08"},{"lineNumber":142,"author":{"gitId":"Tan-Jin-Waye"},"content":"        requireNonNull(editedGroup);","lastModifiedDate":"2022-10-08"},{"lineNumber":143,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":144,"author":{"gitId":"Tan-Jin-Waye"},"content":"        groups.setGroup(target, editedGroup);","lastModifiedDate":"2022-10-08"},{"lineNumber":145,"author":{"gitId":"Tan-Jin-Waye"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":146,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2018-04-05"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":160,"author":{"gitId":"Tan-Jin-Waye"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":161,"author":{"gitId":"Tan-Jin-Waye"},"content":"    public ObservableList\u003cGroup\u003e getGroupList() {","lastModifiedDate":"2022-10-06"},{"lineNumber":162,"author":{"gitId":"Tan-Jin-Waye"},"content":"        return groups.asUnmodifiableObservableList();","lastModifiedDate":"2022-10-06"},{"lineNumber":163,"author":{"gitId":"Tan-Jin-Waye"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":164,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":169,"author":{"gitId":"Tan-Jin-Waye"},"content":"                \u0026\u0026 persons.equals(((AddressBook) other).persons)","lastModifiedDate":"2022-10-06"},{"lineNumber":170,"author":{"gitId":"Tan-Jin-Waye"},"content":"                \u0026\u0026 groups.equals(((AddressBook) other).groups));","lastModifiedDate":"2022-10-06"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":119,"Tan-Jin-Waye":58}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"Tan-Jin-Waye"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"LianGuoYang"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"Tan-Jin-Waye"},"content":"    Predicate\u003cGroup\u003e PREDICATE_SHOW_ALL_GROUPS \u003d unused -\u003e true;","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"Tan-Jin-Waye"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Person Related Functions \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-06"},{"lineNumber":59,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":92,"author":{"gitId":"LianGuoYang"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":93,"author":{"gitId":"LianGuoYang"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":94,"author":{"gitId":"LianGuoYang"},"content":"     * Get a particular people with that name","lastModifiedDate":"2022-10-04"},{"lineNumber":95,"author":{"gitId":"LianGuoYang"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":96,"author":{"gitId":"LianGuoYang"},"content":"    ObservableList\u003cPerson\u003e getPersonWithName(Name name);","lastModifiedDate":"2022-10-04"},{"lineNumber":97,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":98,"author":{"gitId":"Tan-Jin-Waye"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Group Related Functions \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-06"},{"lineNumber":99,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":100,"author":{"gitId":"Tan-Jin-Waye"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":101,"author":{"gitId":"Tan-Jin-Waye"},"content":"     * Returns true if a group with the same identity as {@code group} exists in the address book.","lastModifiedDate":"2022-10-06"},{"lineNumber":102,"author":{"gitId":"Tan-Jin-Waye"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":103,"author":{"gitId":"Tan-Jin-Waye"},"content":"    boolean hasGroup(Group group);","lastModifiedDate":"2022-10-06"},{"lineNumber":104,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":105,"author":{"gitId":"Tan-Jin-Waye"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":106,"author":{"gitId":"Tan-Jin-Waye"},"content":"     * Deletes the given group.","lastModifiedDate":"2022-10-06"},{"lineNumber":107,"author":{"gitId":"Tan-Jin-Waye"},"content":"     * The group must exist in the address book.","lastModifiedDate":"2022-10-06"},{"lineNumber":108,"author":{"gitId":"Tan-Jin-Waye"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":109,"author":{"gitId":"Tan-Jin-Waye"},"content":"    void deleteGroup(Group group);","lastModifiedDate":"2022-10-06"},{"lineNumber":110,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":111,"author":{"gitId":"Tan-Jin-Waye"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":112,"author":{"gitId":"Tan-Jin-Waye"},"content":"     * Adds the given group.","lastModifiedDate":"2022-10-06"},{"lineNumber":113,"author":{"gitId":"Tan-Jin-Waye"},"content":"     * {@code group} must not already exist in the address book.","lastModifiedDate":"2022-10-06"},{"lineNumber":114,"author":{"gitId":"Tan-Jin-Waye"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":115,"author":{"gitId":"Tan-Jin-Waye"},"content":"    void addGroup(Group group);","lastModifiedDate":"2022-10-06"},{"lineNumber":116,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":117,"author":{"gitId":"Tan-Jin-Waye"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":118,"author":{"gitId":"Tan-Jin-Waye"},"content":"     * Replaces the given group {@code target} with {@code editedGroup}.","lastModifiedDate":"2022-10-08"},{"lineNumber":119,"author":{"gitId":"Tan-Jin-Waye"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2022-10-08"},{"lineNumber":120,"author":{"gitId":"Tan-Jin-Waye"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":121,"author":{"gitId":"Tan-Jin-Waye"},"content":"    void setGroup(Group target, Group editedGroup);","lastModifiedDate":"2022-10-08"},{"lineNumber":122,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":123,"author":{"gitId":"Tan-Jin-Waye"},"content":"    /** Returns an unmodifiable view of the filtered group list */","lastModifiedDate":"2022-10-06"},{"lineNumber":124,"author":{"gitId":"Tan-Jin-Waye"},"content":"    ObservableList\u003cGroup\u003e getFilteredGroupList();","lastModifiedDate":"2022-10-06"},{"lineNumber":125,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":126,"author":{"gitId":"Tan-Jin-Waye"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":127,"author":{"gitId":"Tan-Jin-Waye"},"content":"     * Updates the filter of the filtered group list to filter by the given {@code predicate}.","lastModifiedDate":"2022-10-06"},{"lineNumber":128,"author":{"gitId":"Tan-Jin-Waye"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2022-10-06"},{"lineNumber":129,"author":{"gitId":"Tan-Jin-Waye"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":130,"author":{"gitId":"Tan-Jin-Waye"},"content":"    void updateFilteredGroupList(Predicate\u003cGroup\u003e predicate);","lastModifiedDate":"2022-10-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"-":87,"Tan-Jin-Waye":38,"LianGuoYang":6}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"Tan-Jin-Waye"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"LianGuoYang"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"Tan-Jin-Waye"},"content":"    private final FilteredList\u003cGroup\u003e filteredGroups;","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"Tan-Jin-Waye"},"content":"        filteredGroups \u003d new FilteredList\u003c\u003e(this.addressBook.getGroupList());","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"Tan-Jin-Waye"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Person Related Functions \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-06"},{"lineNumber":95,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":96,"author":{"gitId":"LianGuoYang"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":97,"author":{"gitId":"LianGuoYang"},"content":"    public ObservableList\u003cPerson\u003e getPersonWithName(Name name) {","lastModifiedDate":"2022-10-04"},{"lineNumber":98,"author":{"gitId":"LianGuoYang"},"content":"        ObservableList\u003cPerson\u003e personList \u003d getAddressBook().getPersonList();","lastModifiedDate":"2022-10-04"},{"lineNumber":99,"author":{"gitId":"LianGuoYang"},"content":"        Predicate\u003cPerson\u003e namePredicate \u003d curr -\u003e (curr.getName().equals(name));","lastModifiedDate":"2022-10-04"},{"lineNumber":100,"author":{"gitId":"LianGuoYang"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":101,"author":{"gitId":"LianGuoYang"},"content":"        return personList.filtered(namePredicate);","lastModifiedDate":"2022-10-04"},{"lineNumber":102,"author":{"gitId":"LianGuoYang"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":103,"author":{"gitId":"LianGuoYang"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":145,"author":{"gitId":"Tan-Jin-Waye"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Group Related Functions \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-06"},{"lineNumber":146,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":147,"author":{"gitId":"Tan-Jin-Waye"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":148,"author":{"gitId":"Tan-Jin-Waye"},"content":"    public boolean hasGroup(Group group) {","lastModifiedDate":"2022-10-06"},{"lineNumber":149,"author":{"gitId":"Tan-Jin-Waye"},"content":"        requireNonNull(group);","lastModifiedDate":"2022-10-06"},{"lineNumber":150,"author":{"gitId":"Tan-Jin-Waye"},"content":"        return addressBook.hasGroup(group);","lastModifiedDate":"2022-10-06"},{"lineNumber":151,"author":{"gitId":"Tan-Jin-Waye"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":152,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":153,"author":{"gitId":"Tan-Jin-Waye"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":154,"author":{"gitId":"Tan-Jin-Waye"},"content":"    public void deleteGroup(Group target) {","lastModifiedDate":"2022-10-06"},{"lineNumber":155,"author":{"gitId":"Tan-Jin-Waye"},"content":"        addressBook.removeGroup(target);","lastModifiedDate":"2022-10-06"},{"lineNumber":156,"author":{"gitId":"Tan-Jin-Waye"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":157,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":158,"author":{"gitId":"Tan-Jin-Waye"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":159,"author":{"gitId":"Tan-Jin-Waye"},"content":"    public void addGroup(Group group) {","lastModifiedDate":"2022-10-06"},{"lineNumber":160,"author":{"gitId":"Tan-Jin-Waye"},"content":"        addressBook.addGroup(group);","lastModifiedDate":"2022-10-06"},{"lineNumber":161,"author":{"gitId":"Tan-Jin-Waye"},"content":"        updateFilteredGroupList(PREDICATE_SHOW_ALL_GROUPS);","lastModifiedDate":"2022-10-06"},{"lineNumber":162,"author":{"gitId":"Tan-Jin-Waye"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":163,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":164,"author":{"gitId":"Tan-Jin-Waye"},"content":"    @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":165,"author":{"gitId":"Tan-Jin-Waye"},"content":"    public void setGroup(Group target, Group editedGroup) {","lastModifiedDate":"2022-10-08"},{"lineNumber":166,"author":{"gitId":"Tan-Jin-Waye"},"content":"        requireAllNonNull(target, editedGroup);","lastModifiedDate":"2022-10-08"},{"lineNumber":167,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":168,"author":{"gitId":"Tan-Jin-Waye"},"content":"        addressBook.setGroup(target, editedGroup);","lastModifiedDate":"2022-10-08"},{"lineNumber":169,"author":{"gitId":"Tan-Jin-Waye"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":170,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":171,"author":{"gitId":"Tan-Jin-Waye"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Group List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-06"},{"lineNumber":172,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":173,"author":{"gitId":"Tan-Jin-Waye"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":174,"author":{"gitId":"Tan-Jin-Waye"},"content":"    public ObservableList\u003cGroup\u003e getFilteredGroupList() {","lastModifiedDate":"2022-10-06"},{"lineNumber":175,"author":{"gitId":"Tan-Jin-Waye"},"content":"        return filteredGroups;","lastModifiedDate":"2022-10-06"},{"lineNumber":176,"author":{"gitId":"Tan-Jin-Waye"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":177,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":178,"author":{"gitId":"Tan-Jin-Waye"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":179,"author":{"gitId":"Tan-Jin-Waye"},"content":"    public void updateFilteredGroupList(Predicate\u003cGroup\u003e predicate) {","lastModifiedDate":"2022-10-06"},{"lineNumber":180,"author":{"gitId":"Tan-Jin-Waye"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2022-10-06"},{"lineNumber":181,"author":{"gitId":"Tan-Jin-Waye"},"content":"        filteredGroups.setPredicate(predicate);","lastModifiedDate":"2022-10-06"},{"lineNumber":182,"author":{"gitId":"Tan-Jin-Waye"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":183,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":199,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":200,"author":{"gitId":"Tan-Jin-Waye"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons)","lastModifiedDate":"2022-10-06"},{"lineNumber":201,"author":{"gitId":"Tan-Jin-Waye"},"content":"                \u0026\u0026 filteredGroups.equals(other.filteredGroups);","lastModifiedDate":"2022-10-06"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":149,"Tan-Jin-Waye":46,"LianGuoYang":9}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"Tan-Jin-Waye"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"Tan-Jin-Waye"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"Tan-Jin-Waye"},"content":"     * Returns an unmodifiable view of the groups list.","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"Tan-Jin-Waye"},"content":"     * This list will not contain any duplicate groups.","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"Tan-Jin-Waye"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"Tan-Jin-Waye"},"content":"    ObservableList\u003cGroup\u003e getGroupList();","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":17,"Tan-Jin-Waye":7}},{"path":"src/main/java/seedu/address/model/assignment/Assignment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LianGuoYang"},"content":"package seedu.address.model.assignment;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"LianGuoYang"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"LianGuoYang"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"LianGuoYang"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"LianGuoYang"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"LianGuoYang"},"content":"/**","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"LianGuoYang"},"content":" * Represents a Person\u0027s remark in the address book.","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"LianGuoYang"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAssignment(String)}","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"LianGuoYang"},"content":" */","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"LianGuoYang"},"content":"public class Assignment {","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"LianGuoYang"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"LianGuoYang"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Assignment can take any values, and it should not be blank\";","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"LianGuoYang"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"LianGuoYang"},"content":"    /*","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"LianGuoYang"},"content":"     * The first character of the remark must not be a whitespace,","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"LianGuoYang"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"LianGuoYang"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"LianGuoYang"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"LianGuoYang"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"LianGuoYang"},"content":"    private String value;","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"LianGuoYang"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"LianGuoYang"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"LianGuoYang"},"content":"     * Empty constructor to prevent error reading from jsonFile.","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"LianGuoYang"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"LianGuoYang"},"content":"    public Assignment() {};","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"LianGuoYang"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"LianGuoYang"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"LianGuoYang"},"content":"     * Constructs an {@code Remark}.","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"LianGuoYang"},"content":"     *","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"LianGuoYang"},"content":"     * @param name A valid Remark.","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"LianGuoYang"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"LianGuoYang"},"content":"    public Assignment(String name) {","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"LianGuoYang"},"content":"        requireNonNull(name);","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"LianGuoYang"},"content":"        checkArgument(isValidAssignment(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"LianGuoYang"},"content":"        value \u003d name;","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"LianGuoYang"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"LianGuoYang"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"LianGuoYang"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"LianGuoYang"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"LianGuoYang"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"LianGuoYang"},"content":"    public static boolean isValidAssignment(String test) {","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"LianGuoYang"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"LianGuoYang"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":44,"author":{"gitId":"LianGuoYang"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":45,"author":{"gitId":"LianGuoYang"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"LianGuoYang"},"content":"     * Get name of assignment","lastModifiedDate":"2022-10-04"},{"lineNumber":47,"author":{"gitId":"LianGuoYang"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":48,"author":{"gitId":"LianGuoYang"},"content":"    public String getAssignment() {","lastModifiedDate":"2022-10-04"},{"lineNumber":49,"author":{"gitId":"LianGuoYang"},"content":"        return value;","lastModifiedDate":"2022-10-04"},{"lineNumber":50,"author":{"gitId":"LianGuoYang"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":51,"author":{"gitId":"LianGuoYang"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":52,"author":{"gitId":"LianGuoYang"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":53,"author":{"gitId":"LianGuoYang"},"content":"    public String toString() {","lastModifiedDate":"2022-10-04"},{"lineNumber":54,"author":{"gitId":"LianGuoYang"},"content":"        return value;","lastModifiedDate":"2022-10-04"},{"lineNumber":55,"author":{"gitId":"LianGuoYang"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":56,"author":{"gitId":"LianGuoYang"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":57,"author":{"gitId":"LianGuoYang"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":58,"author":{"gitId":"LianGuoYang"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-04"},{"lineNumber":59,"author":{"gitId":"LianGuoYang"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-04"},{"lineNumber":60,"author":{"gitId":"LianGuoYang"},"content":"                || (other instanceof Assignment // instanceof handles nulls","lastModifiedDate":"2022-10-04"},{"lineNumber":61,"author":{"gitId":"LianGuoYang"},"content":"                \u0026\u0026 value.equals(((Assignment) other).value)); // state check","lastModifiedDate":"2022-10-04"},{"lineNumber":62,"author":{"gitId":"LianGuoYang"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":63,"author":{"gitId":"LianGuoYang"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":64,"author":{"gitId":"LianGuoYang"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":65,"author":{"gitId":"LianGuoYang"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-04"},{"lineNumber":66,"author":{"gitId":"LianGuoYang"},"content":"        return value.hashCode();","lastModifiedDate":"2022-10-04"},{"lineNumber":67,"author":{"gitId":"LianGuoYang"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":68,"author":{"gitId":"LianGuoYang"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":69,"author":{"gitId":"LianGuoYang"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"LianGuoYang":69}},{"path":"src/main/java/seedu/address/model/assignment/exceptions/AssignmentNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LianGuoYang"},"content":"package seedu.address.model.assignment.exceptions;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"LianGuoYang"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"LianGuoYang"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"LianGuoYang"},"content":" * Signals that the operation is unable to find the specified assignment.","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"LianGuoYang"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"LianGuoYang"},"content":"public class AssignmentNotFoundException extends RuntimeException {","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"LianGuoYang"},"content":"    public AssignmentNotFoundException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"LianGuoYang"},"content":"        super(\"Assignment is not found in this person!\");","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"LianGuoYang"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"LianGuoYang"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"LianGuoYang":10}},{"path":"src/main/java/seedu/address/model/group/Group.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tan-Jin-Waye"},"content":"package seedu.address.model.group;","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"Tan-Jin-Waye"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"Tan-Jin-Waye"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"Tan-Jin-Waye"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"Tan-Jin-Waye"},"content":"import java.util.Objects;","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"Tan-Jin-Waye"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"Tan-Jin-Waye"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"Tan-Jin-Waye"},"content":"/**","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"Tan-Jin-Waye"},"content":" * Represents a Group in the address book","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"Tan-Jin-Waye"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"Tan-Jin-Waye"},"content":" */","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"Tan-Jin-Waye"},"content":"public class Group {","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"Tan-Jin-Waye"},"content":"    private final GroupName name;","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"Tan-Jin-Waye"},"content":"    private final Set\u003cPerson\u003e members \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"Tan-Jin-Waye"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"Tan-Jin-Waye"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"Tan-Jin-Waye"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"Tan-Jin-Waye"},"content":"    public Group(GroupName name, Set\u003cPerson\u003e members) {","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"Tan-Jin-Waye"},"content":"        requireAllNonNull(name, members);","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"Tan-Jin-Waye"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"Tan-Jin-Waye"},"content":"        this.members.addAll(members);","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"Tan-Jin-Waye"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"Tan-Jin-Waye"},"content":"    public GroupName getName() {","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"Tan-Jin-Waye"},"content":"        return name;","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"Tan-Jin-Waye"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"Tan-Jin-Waye"},"content":"    public Set\u003cPerson\u003e getMembers() {","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"Tan-Jin-Waye"},"content":"        return Collections.unmodifiableSet(members);","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"Tan-Jin-Waye"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"Tan-Jin-Waye"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"Tan-Jin-Waye"},"content":"     * Returns true if both groups have the same name.","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"Tan-Jin-Waye"},"content":"     * This defines a weaker notion of equality between two groups.","lastModifiedDate":"2022-10-06"},{"lineNumber":42,"author":{"gitId":"Tan-Jin-Waye"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"Tan-Jin-Waye"},"content":"    public boolean isSameGroup(Group otherGroup) {","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"Tan-Jin-Waye"},"content":"        if (otherGroup \u003d\u003d this) {","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"Tan-Jin-Waye"},"content":"            return true;","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"Tan-Jin-Waye"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"Tan-Jin-Waye"},"content":"        return otherGroup !\u003d null","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"Tan-Jin-Waye"},"content":"                \u0026\u0026 otherGroup.getName().equals(getName());","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"Tan-Jin-Waye"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"Tan-Jin-Waye"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":53,"author":{"gitId":"Tan-Jin-Waye"},"content":"     * Returns true if both groups have same GroupName and every member exhibits equality.","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"Tan-Jin-Waye"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":55,"author":{"gitId":"Tan-Jin-Waye"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"Tan-Jin-Waye"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-05"},{"lineNumber":57,"author":{"gitId":"Tan-Jin-Waye"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-05"},{"lineNumber":58,"author":{"gitId":"Tan-Jin-Waye"},"content":"            return true;","lastModifiedDate":"2022-10-05"},{"lineNumber":59,"author":{"gitId":"Tan-Jin-Waye"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":60,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":61,"author":{"gitId":"Tan-Jin-Waye"},"content":"        if (!(other instanceof Group)) {","lastModifiedDate":"2022-10-05"},{"lineNumber":62,"author":{"gitId":"Tan-Jin-Waye"},"content":"            return false;","lastModifiedDate":"2022-10-05"},{"lineNumber":63,"author":{"gitId":"Tan-Jin-Waye"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":64,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":65,"author":{"gitId":"Tan-Jin-Waye"},"content":"        Group otherGroup \u003d (Group) other;","lastModifiedDate":"2022-10-05"},{"lineNumber":66,"author":{"gitId":"Tan-Jin-Waye"},"content":"        return otherGroup.getName().equals(getName())","lastModifiedDate":"2022-10-05"},{"lineNumber":67,"author":{"gitId":"Tan-Jin-Waye"},"content":"                \u0026\u0026 otherGroup.getMembers().equals(getMembers());","lastModifiedDate":"2022-10-05"},{"lineNumber":68,"author":{"gitId":"Tan-Jin-Waye"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":69,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":70,"author":{"gitId":"Tan-Jin-Waye"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":71,"author":{"gitId":"Tan-Jin-Waye"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-05"},{"lineNumber":72,"author":{"gitId":"Tan-Jin-Waye"},"content":"        return Objects.hash(name, members);","lastModifiedDate":"2022-10-05"},{"lineNumber":73,"author":{"gitId":"Tan-Jin-Waye"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":74,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":75,"author":{"gitId":"Tan-Jin-Waye"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":76,"author":{"gitId":"Tan-Jin-Waye"},"content":"    public String toString() {","lastModifiedDate":"2022-10-05"},{"lineNumber":77,"author":{"gitId":"Tan-Jin-Waye"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-10-05"},{"lineNumber":78,"author":{"gitId":"Tan-Jin-Waye"},"content":"        builder.append(getName());","lastModifiedDate":"2022-10-05"},{"lineNumber":79,"author":{"gitId":"Tan-Jin-Waye"},"content":"        builder.append(\" | Members: \");","lastModifiedDate":"2022-10-06"},{"lineNumber":80,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":81,"author":{"gitId":"Tan-Jin-Waye"},"content":"        if (!getMembers().isEmpty()) {","lastModifiedDate":"2022-10-05"},{"lineNumber":82,"author":{"gitId":"Tan-Jin-Waye"},"content":"            for (Person p : getMembers()) {","lastModifiedDate":"2022-10-05"},{"lineNumber":83,"author":{"gitId":"Tan-Jin-Waye"},"content":"                builder.append(p.getName());","lastModifiedDate":"2022-10-05"},{"lineNumber":84,"author":{"gitId":"Tan-Jin-Waye"},"content":"                builder.append(\" | \");","lastModifiedDate":"2022-10-05"},{"lineNumber":85,"author":{"gitId":"Tan-Jin-Waye"},"content":"            }","lastModifiedDate":"2022-10-05"},{"lineNumber":86,"author":{"gitId":"Tan-Jin-Waye"},"content":"        } else {","lastModifiedDate":"2022-10-05"},{"lineNumber":87,"author":{"gitId":"Tan-Jin-Waye"},"content":"            builder.append(\"None | \");","lastModifiedDate":"2022-10-06"},{"lineNumber":88,"author":{"gitId":"Tan-Jin-Waye"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":89,"author":{"gitId":"Tan-Jin-Waye"},"content":"        return builder.toString();","lastModifiedDate":"2022-10-05"},{"lineNumber":90,"author":{"gitId":"Tan-Jin-Waye"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":91,"author":{"gitId":"Tan-Jin-Waye"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"Tan-Jin-Waye":91}},{"path":"src/main/java/seedu/address/model/group/GroupName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tan-Jin-Waye"},"content":"package seedu.address.model.group;","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"Tan-Jin-Waye"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"Tan-Jin-Waye"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"Tan-Jin-Waye"},"content":"/**","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"Tan-Jin-Waye"},"content":" * Represents a Group\u0027s name in the address book.","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"Tan-Jin-Waye"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"Tan-Jin-Waye"},"content":" */","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"Tan-Jin-Waye"},"content":"public class GroupName {","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"Tan-Jin-Waye"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"Tan-Jin-Waye"},"content":"            \"Group names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"Tan-Jin-Waye"},"content":"    /*","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"Tan-Jin-Waye"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"Tan-Jin-Waye"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"Tan-Jin-Waye"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"Tan-Jin-Waye"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"Tan-Jin-Waye"},"content":"    public final String groupName;","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"Tan-Jin-Waye"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"Tan-Jin-Waye"},"content":"     * Constructs a {@code GroupName}.","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"Tan-Jin-Waye"},"content":"     * @param name A valid name.","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"Tan-Jin-Waye"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"Tan-Jin-Waye"},"content":"    public GroupName(String name) {","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"Tan-Jin-Waye"},"content":"        requireNonNull(name);","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"Tan-Jin-Waye"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"Tan-Jin-Waye"},"content":"        groupName \u003d name;","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"Tan-Jin-Waye"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"Tan-Jin-Waye"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"Tan-Jin-Waye"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"Tan-Jin-Waye"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"Tan-Jin-Waye"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"Tan-Jin-Waye"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"Tan-Jin-Waye"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"Tan-Jin-Waye"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"Tan-Jin-Waye"},"content":"    public String toString() {","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"Tan-Jin-Waye"},"content":"        return groupName;","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"Tan-Jin-Waye"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"Tan-Jin-Waye"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"Tan-Jin-Waye"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"Tan-Jin-Waye"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"Tan-Jin-Waye"},"content":"                || (other instanceof GroupName)","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"Tan-Jin-Waye"},"content":"                \u0026\u0026 groupName.equals(((GroupName) other).groupName);","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"Tan-Jin-Waye"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"Tan-Jin-Waye"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":53,"author":{"gitId":"Tan-Jin-Waye"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"Tan-Jin-Waye"},"content":"        return groupName.hashCode();","lastModifiedDate":"2022-10-05"},{"lineNumber":55,"author":{"gitId":"Tan-Jin-Waye"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"Tan-Jin-Waye"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"Tan-Jin-Waye":56}},{"path":"src/main/java/seedu/address/model/group/UniqueGroupList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tan-Jin-Waye"},"content":"package seedu.address.model.group;","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"Tan-Jin-Waye"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"Tan-Jin-Waye"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-08"},{"lineNumber":5,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"Tan-Jin-Waye"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"Tan-Jin-Waye"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"Tan-Jin-Waye"},"content":"import java.util.List;","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"Tan-Jin-Waye"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"Tan-Jin-Waye"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"Tan-Jin-Waye"},"content":"import seedu.address.model.group.exceptions.DuplicateGroupException;","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"Tan-Jin-Waye"},"content":"import seedu.address.model.group.exceptions.GroupNotFoundException;","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"Tan-Jin-Waye"},"content":"/**","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"Tan-Jin-Waye"},"content":" * A list of groups that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"Tan-Jin-Waye"},"content":" */","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"Tan-Jin-Waye"},"content":"public class UniqueGroupList implements Iterable\u003cGroup\u003e {","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"Tan-Jin-Waye"},"content":"    private final ObservableList\u003cGroup\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"Tan-Jin-Waye"},"content":"    private final ObservableList\u003cGroup\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"Tan-Jin-Waye"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"Tan-Jin-Waye"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"Tan-Jin-Waye"},"content":"     * Returns true if the list contains an equivalent group as the given argument.","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"Tan-Jin-Waye"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"Tan-Jin-Waye"},"content":"    public boolean contains(Group toCheck) {","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"Tan-Jin-Waye"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"Tan-Jin-Waye"},"content":"        return internalList.stream().anyMatch(toCheck::isSameGroup);","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"Tan-Jin-Waye"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"Tan-Jin-Waye"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"Tan-Jin-Waye"},"content":"     * Adds a group to the list.","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"Tan-Jin-Waye"},"content":"     * The group must not already exist in the list.","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"Tan-Jin-Waye"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"Tan-Jin-Waye"},"content":"    public void add(Group toAdd) {","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"Tan-Jin-Waye"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"Tan-Jin-Waye"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"Tan-Jin-Waye"},"content":"            throw new DuplicateGroupException();","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"Tan-Jin-Waye"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"Tan-Jin-Waye"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"Tan-Jin-Waye"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"Tan-Jin-Waye"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":45,"author":{"gitId":"Tan-Jin-Waye"},"content":"     * Replaces the group {@code target} in the list with {@code editedGroup}.","lastModifiedDate":"2022-10-08"},{"lineNumber":46,"author":{"gitId":"Tan-Jin-Waye"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2022-10-08"},{"lineNumber":47,"author":{"gitId":"Tan-Jin-Waye"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":48,"author":{"gitId":"Tan-Jin-Waye"},"content":"    public void setGroup(Group target, Group editedGroup) {","lastModifiedDate":"2022-10-08"},{"lineNumber":49,"author":{"gitId":"Tan-Jin-Waye"},"content":"        requireAllNonNull(target, editedGroup);","lastModifiedDate":"2022-10-08"},{"lineNumber":50,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":51,"author":{"gitId":"Tan-Jin-Waye"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2022-10-08"},{"lineNumber":52,"author":{"gitId":"Tan-Jin-Waye"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-10-08"},{"lineNumber":53,"author":{"gitId":"Tan-Jin-Waye"},"content":"            throw new GroupNotFoundException();","lastModifiedDate":"2022-10-08"},{"lineNumber":54,"author":{"gitId":"Tan-Jin-Waye"},"content":"        }","lastModifiedDate":"2022-10-08"},{"lineNumber":55,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":56,"author":{"gitId":"Tan-Jin-Waye"},"content":"        if (!target.isSameGroup(editedGroup) \u0026\u0026 contains(editedGroup)) {","lastModifiedDate":"2022-10-08"},{"lineNumber":57,"author":{"gitId":"Tan-Jin-Waye"},"content":"            throw new DuplicateGroupException();","lastModifiedDate":"2022-10-08"},{"lineNumber":58,"author":{"gitId":"Tan-Jin-Waye"},"content":"        }","lastModifiedDate":"2022-10-08"},{"lineNumber":59,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":60,"author":{"gitId":"Tan-Jin-Waye"},"content":"        internalList.set(index, editedGroup);","lastModifiedDate":"2022-10-08"},{"lineNumber":61,"author":{"gitId":"Tan-Jin-Waye"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":62,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":63,"author":{"gitId":"Tan-Jin-Waye"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":64,"author":{"gitId":"Tan-Jin-Waye"},"content":"     * Removes the equivalent group from the list.","lastModifiedDate":"2022-10-05"},{"lineNumber":65,"author":{"gitId":"Tan-Jin-Waye"},"content":"     * The group must exist in the list.","lastModifiedDate":"2022-10-05"},{"lineNumber":66,"author":{"gitId":"Tan-Jin-Waye"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":67,"author":{"gitId":"Tan-Jin-Waye"},"content":"    public void remove(Group toRemove) {","lastModifiedDate":"2022-10-05"},{"lineNumber":68,"author":{"gitId":"Tan-Jin-Waye"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-10-05"},{"lineNumber":69,"author":{"gitId":"Tan-Jin-Waye"},"content":"        if (!contains(toRemove)) {","lastModifiedDate":"2022-10-06"},{"lineNumber":70,"author":{"gitId":"Tan-Jin-Waye"},"content":"            throw new GroupNotFoundException();","lastModifiedDate":"2022-10-05"},{"lineNumber":71,"author":{"gitId":"Tan-Jin-Waye"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":72,"author":{"gitId":"Tan-Jin-Waye"},"content":"        for (int i \u003d 0; i \u003c internalList.size(); i++) {","lastModifiedDate":"2022-10-06"},{"lineNumber":73,"author":{"gitId":"Tan-Jin-Waye"},"content":"            if (internalList.get(i).getName().equals(toRemove.getName())) {","lastModifiedDate":"2022-10-06"},{"lineNumber":74,"author":{"gitId":"Tan-Jin-Waye"},"content":"                internalList.remove(i);","lastModifiedDate":"2022-10-06"},{"lineNumber":75,"author":{"gitId":"Tan-Jin-Waye"},"content":"            }","lastModifiedDate":"2022-10-06"},{"lineNumber":76,"author":{"gitId":"Tan-Jin-Waye"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":77,"author":{"gitId":"Tan-Jin-Waye"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":78,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":79,"author":{"gitId":"Tan-Jin-Waye"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":80,"author":{"gitId":"Tan-Jin-Waye"},"content":"     * Removes the group with this {@code groupname} from the list.","lastModifiedDate":"2022-10-06"},{"lineNumber":81,"author":{"gitId":"Tan-Jin-Waye"},"content":"     * The {@code groupname} must exist in the list.","lastModifiedDate":"2022-10-06"},{"lineNumber":82,"author":{"gitId":"Tan-Jin-Waye"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":83,"author":{"gitId":"Tan-Jin-Waye"},"content":"    public void removeFromGroupName(GroupName groupName) {","lastModifiedDate":"2022-10-06"},{"lineNumber":84,"author":{"gitId":"Tan-Jin-Waye"},"content":"        requireNonNull(groupName);","lastModifiedDate":"2022-10-06"},{"lineNumber":85,"author":{"gitId":"Tan-Jin-Waye"},"content":"        Group toRemove \u003d new Group(groupName, new HashSet\u003c\u003e());","lastModifiedDate":"2022-10-06"},{"lineNumber":86,"author":{"gitId":"Tan-Jin-Waye"},"content":"        if (!contains(toRemove)) {","lastModifiedDate":"2022-10-06"},{"lineNumber":87,"author":{"gitId":"Tan-Jin-Waye"},"content":"            throw new GroupNotFoundException();","lastModifiedDate":"2022-10-06"},{"lineNumber":88,"author":{"gitId":"Tan-Jin-Waye"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":89,"author":{"gitId":"Tan-Jin-Waye"},"content":"        for (int i \u003d 0; i \u003c internalList.size(); i++) {","lastModifiedDate":"2022-10-06"},{"lineNumber":90,"author":{"gitId":"Tan-Jin-Waye"},"content":"            if (internalList.get(i).getName().equals(groupName)) {","lastModifiedDate":"2022-10-06"},{"lineNumber":91,"author":{"gitId":"Tan-Jin-Waye"},"content":"                internalList.remove(i);","lastModifiedDate":"2022-10-06"},{"lineNumber":92,"author":{"gitId":"Tan-Jin-Waye"},"content":"            }","lastModifiedDate":"2022-10-06"},{"lineNumber":93,"author":{"gitId":"Tan-Jin-Waye"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":94,"author":{"gitId":"Tan-Jin-Waye"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":95,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":96,"author":{"gitId":"Tan-Jin-Waye"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":97,"author":{"gitId":"Tan-Jin-Waye"},"content":"     * Replaces the contents of this list given input UniqueGroupList.","lastModifiedDate":"2022-10-05"},{"lineNumber":98,"author":{"gitId":"Tan-Jin-Waye"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":99,"author":{"gitId":"Tan-Jin-Waye"},"content":"    public void setGroups(UniqueGroupList replacement) {","lastModifiedDate":"2022-10-05"},{"lineNumber":100,"author":{"gitId":"Tan-Jin-Waye"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2022-10-05"},{"lineNumber":101,"author":{"gitId":"Tan-Jin-Waye"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2022-10-05"},{"lineNumber":102,"author":{"gitId":"Tan-Jin-Waye"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":103,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":104,"author":{"gitId":"Tan-Jin-Waye"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":105,"author":{"gitId":"Tan-Jin-Waye"},"content":"     * Replaces the contents of this list with {@code groups}.","lastModifiedDate":"2022-10-05"},{"lineNumber":106,"author":{"gitId":"Tan-Jin-Waye"},"content":"     * {@code groups} must not contain duplicate groups.","lastModifiedDate":"2022-10-05"},{"lineNumber":107,"author":{"gitId":"Tan-Jin-Waye"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":108,"author":{"gitId":"Tan-Jin-Waye"},"content":"    public void setGroups(List\u003cGroup\u003e groups) {","lastModifiedDate":"2022-10-05"},{"lineNumber":109,"author":{"gitId":"Tan-Jin-Waye"},"content":"        requireNonNull(groups);","lastModifiedDate":"2022-10-05"},{"lineNumber":110,"author":{"gitId":"Tan-Jin-Waye"},"content":"        if (!groupsAreUnique(groups)) {","lastModifiedDate":"2022-10-05"},{"lineNumber":111,"author":{"gitId":"Tan-Jin-Waye"},"content":"            throw new DuplicateGroupException();","lastModifiedDate":"2022-10-05"},{"lineNumber":112,"author":{"gitId":"Tan-Jin-Waye"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":113,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":114,"author":{"gitId":"Tan-Jin-Waye"},"content":"        internalList.setAll(groups);","lastModifiedDate":"2022-10-05"},{"lineNumber":115,"author":{"gitId":"Tan-Jin-Waye"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":116,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":117,"author":{"gitId":"Tan-Jin-Waye"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":118,"author":{"gitId":"Tan-Jin-Waye"},"content":"     * Returns the backing list as an unmodifiable {@Code ObservableList}.","lastModifiedDate":"2022-10-05"},{"lineNumber":119,"author":{"gitId":"Tan-Jin-Waye"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":120,"author":{"gitId":"Tan-Jin-Waye"},"content":"    public ObservableList\u003cGroup\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-10-05"},{"lineNumber":121,"author":{"gitId":"Tan-Jin-Waye"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2022-10-05"},{"lineNumber":122,"author":{"gitId":"Tan-Jin-Waye"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":123,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":124,"author":{"gitId":"Tan-Jin-Waye"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":125,"author":{"gitId":"Tan-Jin-Waye"},"content":"    public Iterator\u003cGroup\u003e iterator() {","lastModifiedDate":"2022-10-05"},{"lineNumber":126,"author":{"gitId":"Tan-Jin-Waye"},"content":"        return internalList.iterator();","lastModifiedDate":"2022-10-05"},{"lineNumber":127,"author":{"gitId":"Tan-Jin-Waye"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":128,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":129,"author":{"gitId":"Tan-Jin-Waye"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":130,"author":{"gitId":"Tan-Jin-Waye"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-05"},{"lineNumber":131,"author":{"gitId":"Tan-Jin-Waye"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2022-10-05"},{"lineNumber":132,"author":{"gitId":"Tan-Jin-Waye"},"content":"                || (other instanceof UniqueGroupList","lastModifiedDate":"2022-10-05"},{"lineNumber":133,"author":{"gitId":"Tan-Jin-Waye"},"content":"                    \u0026\u0026 internalList.equals(((UniqueGroupList) other).internalList));","lastModifiedDate":"2022-10-05"},{"lineNumber":134,"author":{"gitId":"Tan-Jin-Waye"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":135,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":136,"author":{"gitId":"Tan-Jin-Waye"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":137,"author":{"gitId":"Tan-Jin-Waye"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-05"},{"lineNumber":138,"author":{"gitId":"Tan-Jin-Waye"},"content":"        return internalList.hashCode();","lastModifiedDate":"2022-10-05"},{"lineNumber":139,"author":{"gitId":"Tan-Jin-Waye"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":140,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":141,"author":{"gitId":"Tan-Jin-Waye"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":142,"author":{"gitId":"Tan-Jin-Waye"},"content":"     * Returns true if {@code groups} contains only unique groups.","lastModifiedDate":"2022-10-05"},{"lineNumber":143,"author":{"gitId":"Tan-Jin-Waye"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":144,"author":{"gitId":"Tan-Jin-Waye"},"content":"    private boolean groupsAreUnique(List\u003cGroup\u003e groups) {","lastModifiedDate":"2022-10-05"},{"lineNumber":145,"author":{"gitId":"Tan-Jin-Waye"},"content":"        for (int i \u003d 0; i \u003c groups.size() - 1; i++) {","lastModifiedDate":"2022-10-05"},{"lineNumber":146,"author":{"gitId":"Tan-Jin-Waye"},"content":"            for (int j \u003d i + 1; j \u003c groups.size(); j++) {","lastModifiedDate":"2022-10-05"},{"lineNumber":147,"author":{"gitId":"Tan-Jin-Waye"},"content":"                if (groups.get(i).isSameGroup(groups.get(j))) {","lastModifiedDate":"2022-10-05"},{"lineNumber":148,"author":{"gitId":"Tan-Jin-Waye"},"content":"                    return false;","lastModifiedDate":"2022-10-05"},{"lineNumber":149,"author":{"gitId":"Tan-Jin-Waye"},"content":"                }","lastModifiedDate":"2022-10-05"},{"lineNumber":150,"author":{"gitId":"Tan-Jin-Waye"},"content":"            }","lastModifiedDate":"2022-10-05"},{"lineNumber":151,"author":{"gitId":"Tan-Jin-Waye"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":152,"author":{"gitId":"Tan-Jin-Waye"},"content":"        return true;","lastModifiedDate":"2022-10-05"},{"lineNumber":153,"author":{"gitId":"Tan-Jin-Waye"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":154,"author":{"gitId":"Tan-Jin-Waye"},"content":"}","lastModifiedDate":"2022-10-05"},{"lineNumber":155,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"Tan-Jin-Waye":155}},{"path":"src/main/java/seedu/address/model/group/exceptions/DuplicateGroupException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tan-Jin-Waye"},"content":"package seedu.address.model.group.exceptions;","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"Tan-Jin-Waye"},"content":"/**","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"Tan-Jin-Waye"},"content":" * Signals that the operation will result in duplicate Groups (","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"Tan-Jin-Waye"},"content":" * Groups are considered the same if their name and set of","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"Tan-Jin-Waye"},"content":" * members are the same).","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"Tan-Jin-Waye"},"content":" */","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"Tan-Jin-Waye"},"content":"public class DuplicateGroupException extends RuntimeException {","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"Tan-Jin-Waye"},"content":"    public DuplicateGroupException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"Tan-Jin-Waye"},"content":"        super(\"Operation would result in duplicate groups\");","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"Tan-Jin-Waye"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"Tan-Jin-Waye"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"Tan-Jin-Waye":12}},{"path":"src/main/java/seedu/address/model/group/exceptions/GroupNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tan-Jin-Waye"},"content":"package seedu.address.model.group.exceptions;","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"Tan-Jin-Waye"},"content":"/**","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"Tan-Jin-Waye"},"content":" * Signals that the operation is unable to find the specified group.","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"Tan-Jin-Waye"},"content":" */","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"Tan-Jin-Waye"},"content":"public class GroupNotFoundException extends RuntimeException {}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"Tan-Jin-Waye":6}},{"path":"src/main/java/seedu/address/model/person/FullNamePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CedricChia123"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-08"},{"lineNumber":2,"author":{"gitId":"CedricChia123"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":3,"author":{"gitId":"CedricChia123"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-08"},{"lineNumber":4,"author":{"gitId":"CedricChia123"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":5,"author":{"gitId":"CedricChia123"},"content":"/**","lastModifiedDate":"2022-10-08"},{"lineNumber":6,"author":{"gitId":"CedricChia123"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2022-10-08"},{"lineNumber":7,"author":{"gitId":"CedricChia123"},"content":" */","lastModifiedDate":"2022-10-08"},{"lineNumber":8,"author":{"gitId":"CedricChia123"},"content":"public class FullNamePredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2022-10-08"},{"lineNumber":9,"author":{"gitId":"CedricChia123"},"content":"    private final String fullName;","lastModifiedDate":"2022-10-08"},{"lineNumber":10,"author":{"gitId":"CedricChia123"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":11,"author":{"gitId":"CedricChia123"},"content":"    public FullNamePredicate(String fullName) {","lastModifiedDate":"2022-10-08"},{"lineNumber":12,"author":{"gitId":"CedricChia123"},"content":"        this.fullName \u003d fullName;","lastModifiedDate":"2022-10-08"},{"lineNumber":13,"author":{"gitId":"CedricChia123"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":14,"author":{"gitId":"CedricChia123"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":15,"author":{"gitId":"CedricChia123"},"content":"    @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":16,"author":{"gitId":"CedricChia123"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2022-10-08"},{"lineNumber":17,"author":{"gitId":"CedricChia123"},"content":"        return person.getName().toString().equals(fullName);","lastModifiedDate":"2022-10-08"},{"lineNumber":18,"author":{"gitId":"CedricChia123"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":19,"author":{"gitId":"CedricChia123"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":20,"author":{"gitId":"CedricChia123"},"content":"    @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":21,"author":{"gitId":"CedricChia123"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-08"},{"lineNumber":22,"author":{"gitId":"CedricChia123"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-08"},{"lineNumber":23,"author":{"gitId":"CedricChia123"},"content":"                || (other instanceof FullNamePredicate // instanceof handles nulls","lastModifiedDate":"2022-10-08"},{"lineNumber":24,"author":{"gitId":"CedricChia123"},"content":"                \u0026\u0026 fullName.equals(((FullNamePredicate) other).fullName)); // state check","lastModifiedDate":"2022-10-08"},{"lineNumber":25,"author":{"gitId":"CedricChia123"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":26,"author":{"gitId":"CedricChia123"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":27,"author":{"gitId":"CedricChia123"},"content":"}","lastModifiedDate":"2022-10-08"}],"authorContributionMap":{"CedricChia123":27}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"LianGuoYang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":7,"author":{"gitId":"LianGuoYang"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"LianGuoYang"},"content":"import seedu.address.model.assignment.Assignment;","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":29,"author":{"gitId":"LianGuoYang"},"content":"    private final HashMap\u003cString, ArrayList\u003cAssignment\u003e\u003e assignments \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"LianGuoYang"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags,","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"LianGuoYang"},"content":"                  HashMap\u003cString, ArrayList\u003cAssignment\u003e\u003e assignments) {","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":42,"author":{"gitId":"LianGuoYang"},"content":"        this.assignments.putAll(assignments);","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"LianGuoYang"},"content":"    public HashMap\u003cString, ArrayList\u003cAssignment\u003e\u003e getAssignments() {","lastModifiedDate":"2022-10-04"},{"lineNumber":70,"author":{"gitId":"LianGuoYang"},"content":"        return this.assignments;","lastModifiedDate":"2022-10-04"},{"lineNumber":71,"author":{"gitId":"LianGuoYang"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":72,"author":{"gitId":"LianGuoYang"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getAddress().equals(getAddress())","lastModifiedDate":"2018-08-14"},{"lineNumber":105,"author":{"gitId":"LianGuoYang"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags())","lastModifiedDate":"2022-10-04"},{"lineNumber":106,"author":{"gitId":"LianGuoYang"},"content":"                \u0026\u0026 otherPerson.getAssignments().equals(getAssignments());","lastModifiedDate":"2022-10-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"LianGuoYang"},"content":"        return Objects.hash(name, phone, email, address, tags, assignments);","lastModifiedDate":"2022-10-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                .append(getAddress());","lastModifiedDate":"2020-12-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":131,"author":{"gitId":"LianGuoYang"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":132,"author":{"gitId":"LianGuoYang"},"content":"        HashMap\u003cString, ArrayList\u003cAssignment\u003e\u003e assignments \u003d getAssignments();","lastModifiedDate":"2022-10-04"},{"lineNumber":133,"author":{"gitId":"LianGuoYang"},"content":"        if (!assignments.isEmpty()) {","lastModifiedDate":"2022-10-04"},{"lineNumber":134,"author":{"gitId":"LianGuoYang"},"content":"            builder.append(\"; Assignment: \");","lastModifiedDate":"2022-10-04"},{"lineNumber":135,"author":{"gitId":"LianGuoYang"},"content":"            assignments.forEach((key, value) -\u003e {","lastModifiedDate":"2022-10-04"},{"lineNumber":136,"author":{"gitId":"LianGuoYang"},"content":"                String assignment \u003d key + \" \" + value;","lastModifiedDate":"2022-10-04"},{"lineNumber":137,"author":{"gitId":"LianGuoYang"},"content":"                builder.append(assignment);","lastModifiedDate":"2022-10-04"},{"lineNumber":138,"author":{"gitId":"LianGuoYang"},"content":"            });","lastModifiedDate":"2022-10-04"},{"lineNumber":139,"author":{"gitId":"LianGuoYang"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":140,"author":{"gitId":"LianGuoYang"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":141,"author":{"gitId":"LianGuoYang"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":120,"LianGuoYang":25}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"LianGuoYang"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"LianGuoYang"},"content":"                getTagSet(\"friends\"), new HashMap\u003c\u003e()),","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":28,"author":{"gitId":"LianGuoYang"},"content":"                getTagSet(\"colleagues\", \"friends\"), new HashMap\u003c\u003e()),","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":31,"author":{"gitId":"LianGuoYang"},"content":"                getTagSet(\"neighbours\"), new HashMap\u003c\u003e()),","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":34,"author":{"gitId":"LianGuoYang"},"content":"                getTagSet(\"family\"), new HashMap\u003c\u003e()),","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":37,"author":{"gitId":"LianGuoYang"},"content":"                getTagSet(\"classmates\"), new HashMap\u003c\u003e()),","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":40,"author":{"gitId":"LianGuoYang"},"content":"                getTagSet(\"colleagues\"), new HashMap\u003c\u003e())","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"-":54,"LianGuoYang":7}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedAssignment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LianGuoYang"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"LianGuoYang"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"LianGuoYang"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"LianGuoYang"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"LianGuoYang"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"LianGuoYang"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"LianGuoYang"},"content":"import seedu.address.model.assignment.Assignment;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"LianGuoYang"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"LianGuoYang"},"content":"/**","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"LianGuoYang"},"content":" * Jackson-friendly version of {@link Assignment}.","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"LianGuoYang"},"content":" */","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"LianGuoYang"},"content":"class JsonAdaptedAssignment {","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"LianGuoYang"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"LianGuoYang"},"content":"    private final String assignmentName;","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"LianGuoYang"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"LianGuoYang"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"LianGuoYang"},"content":"     * Constructs a {@code JsonAdaptedAssignment} with the given {@code assignmentName}.","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"LianGuoYang"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"LianGuoYang"},"content":"    @JsonCreator","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"LianGuoYang"},"content":"    public JsonAdaptedAssignment(String assignmentName) {","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"LianGuoYang"},"content":"        this.assignmentName \u003d assignmentName;","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"LianGuoYang"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"LianGuoYang"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"LianGuoYang"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"LianGuoYang"},"content":"     * Converts a given {@code Assignment} into this class for Jackson use.","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"LianGuoYang"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"LianGuoYang"},"content":"    public JsonAdaptedAssignment(Assignment source) {","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"LianGuoYang"},"content":"        assignmentName \u003d source.getAssignment();","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"LianGuoYang"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"LianGuoYang"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"LianGuoYang"},"content":"    @JsonValue","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"LianGuoYang"},"content":"    public String getAssignmentName() {","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"LianGuoYang"},"content":"        return assignmentName;","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"LianGuoYang"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"LianGuoYang"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"LianGuoYang"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"LianGuoYang"},"content":"     * Converts this Jackson-friendly adapted assignmentName object into the model\u0027s {@code Assignment} object.","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"LianGuoYang"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"LianGuoYang"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted assignmentName","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"LianGuoYang"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"LianGuoYang"},"content":"    public Assignment toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"LianGuoYang"},"content":"        if (!Assignment.isValidAssignment(assignmentName)) {","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"LianGuoYang"},"content":"            throw new IllegalValueException(Assignment.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"LianGuoYang"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"LianGuoYang"},"content":"        return new Assignment(assignmentName);","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"LianGuoYang"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"LianGuoYang"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"LianGuoYang"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"LianGuoYang":48}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"LianGuoYang"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"LianGuoYang"},"content":"import seedu.address.model.assignment.Assignment;","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"LianGuoYang"},"content":"    private final HashMap\u003cString, ArrayList\u003cAssignment\u003e\u003e assignments \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                             @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"LianGuoYang"},"content":"                             @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged,","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"LianGuoYang"},"content":"                             @JsonProperty(\"assignments\") HashMap\u003cString, ArrayList\u003cAssignment\u003e\u003e assignments) {","lastModifiedDate":"2022-10-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"LianGuoYang"},"content":"        this.assignments.putAll(assignments);","lastModifiedDate":"2022-10-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"LianGuoYang"},"content":"        assignments.putAll(source.getAssignments());","lastModifiedDate":"2022-10-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"LianGuoYang"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":113,"author":{"gitId":"LianGuoYang"},"content":"        final HashMap\u003cString, ArrayList\u003cAssignment\u003e\u003e modelAssignment \u003d new HashMap\u003c\u003e(assignments);","lastModifiedDate":"2022-10-04"},{"lineNumber":114,"author":{"gitId":"LianGuoYang"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":115,"author":{"gitId":"LianGuoYang"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress, modelTags, modelAssignment);","lastModifiedDate":"2022-10-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":107,"LianGuoYang":11}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":43,"author":{"gitId":"LianGuoYang"},"content":"    @FXML","lastModifiedDate":"2022-10-04"},{"lineNumber":44,"author":{"gitId":"LianGuoYang"},"content":"    private FlowPane assignments;","lastModifiedDate":"2022-10-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":60,"author":{"gitId":"LianGuoYang"},"content":"        person.getAssignments()","lastModifiedDate":"2022-10-04"},{"lineNumber":61,"author":{"gitId":"LianGuoYang"},"content":"                .forEach((key, value) -\u003e {","lastModifiedDate":"2022-10-04"},{"lineNumber":62,"author":{"gitId":"LianGuoYang"},"content":"                    String assignment \u003d key + \" : \" + value + \" | \";","lastModifiedDate":"2022-10-04"},{"lineNumber":63,"author":{"gitId":"LianGuoYang"},"content":"                    assignments.getChildren().add(new Label(assignment));","lastModifiedDate":"2022-10-04"},{"lineNumber":64,"author":{"gitId":"LianGuoYang"},"content":"                });","lastModifiedDate":"2022-10-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"-":77,"LianGuoYang":7}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"LianGuoYang"},"content":"      \u003cFlowPane fx:id\u003d\"assignments\" /\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":36,"LianGuoYang":1}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":20,"author":{"gitId":"zylee348"},"content":"import seedu.address.logic.commands.AddUserCommand;","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"zylee348"},"content":"        String addCommand \u003d AddUserCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2022-10-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"zylee348":2,"-":160}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"zylee348"},"content":" * Contains integration tests (interaction with the Model) for {@code AddUserCommand}.","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"zylee348"},"content":"        assertCommandSuccess(new AddUserCommand(validPerson), model,","lastModifiedDate":"2022-10-03"},{"lineNumber":36,"author":{"gitId":"zylee348"},"content":"                String.format(AddUserCommand.MESSAGE_SUCCESS, validPerson), expectedModel);","lastModifiedDate":"2022-10-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2018-01-10"},{"lineNumber":42,"author":{"gitId":"zylee348"},"content":"        assertCommandFailure(new AddUserCommand(personInList), model, AddUserCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-10-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"zylee348":4,"-":41}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"Tan-Jin-Waye"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"LianGuoYang"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"zylee348"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddUserCommand(null));","lastModifiedDate":"2022-10-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"zylee348"},"content":"        CommandResult commandResult \u003d new AddUserCommand(validPerson).execute(modelStub);","lastModifiedDate":"2022-10-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"zylee348"},"content":"        assertEquals(String.format(AddUserCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2022-10-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"zylee348"},"content":"        AddUserCommand addUserCommand \u003d new AddUserCommand(validPerson);","lastModifiedDate":"2022-10-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"zylee348"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2022-10-03"},{"lineNumber":53,"author":{"gitId":"zylee348"},"content":"                AddUserCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addUserCommand.execute(modelStub));","lastModifiedDate":"2022-10-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"zylee348"},"content":"        AddUserCommand addAliceCommand \u003d new AddUserCommand(alice);","lastModifiedDate":"2022-10-03"},{"lineNumber":61,"author":{"gitId":"zylee348"},"content":"        AddUserCommand addBobCommand \u003d new AddUserCommand(bob);","lastModifiedDate":"2022-10-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"zylee348"},"content":"        AddUserCommand addAliceCommandCopy \u003d new AddUserCommand(alice);","lastModifiedDate":"2022-10-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"LianGuoYang"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":154,"author":{"gitId":"LianGuoYang"},"content":"        @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":155,"author":{"gitId":"LianGuoYang"},"content":"        public ObservableList\u003cPerson\u003e getPersonWithName(Name name) {","lastModifiedDate":"2022-10-04"},{"lineNumber":156,"author":{"gitId":"LianGuoYang"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-04"},{"lineNumber":157,"author":{"gitId":"LianGuoYang"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":158,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":159,"author":{"gitId":"Tan-Jin-Waye"},"content":"        public boolean hasGroup(Group group) {","lastModifiedDate":"2022-10-06"},{"lineNumber":160,"author":{"gitId":"Tan-Jin-Waye"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-06"},{"lineNumber":161,"author":{"gitId":"Tan-Jin-Waye"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":162,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":163,"author":{"gitId":"Tan-Jin-Waye"},"content":"        @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":164,"author":{"gitId":"Tan-Jin-Waye"},"content":"        public void deleteGroup(Group group) {","lastModifiedDate":"2022-10-06"},{"lineNumber":165,"author":{"gitId":"Tan-Jin-Waye"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-06"},{"lineNumber":166,"author":{"gitId":"Tan-Jin-Waye"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":167,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":168,"author":{"gitId":"Tan-Jin-Waye"},"content":"        @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":169,"author":{"gitId":"Tan-Jin-Waye"},"content":"        public void addGroup(Group group) {","lastModifiedDate":"2022-10-06"},{"lineNumber":170,"author":{"gitId":"Tan-Jin-Waye"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-06"},{"lineNumber":171,"author":{"gitId":"Tan-Jin-Waye"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":172,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":173,"author":{"gitId":"Tan-Jin-Waye"},"content":"        @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":174,"author":{"gitId":"Tan-Jin-Waye"},"content":"        public void setGroup(Group target, Group editedGroup) {","lastModifiedDate":"2022-10-08"},{"lineNumber":175,"author":{"gitId":"Tan-Jin-Waye"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-08"},{"lineNumber":176,"author":{"gitId":"Tan-Jin-Waye"},"content":"        }","lastModifiedDate":"2022-10-08"},{"lineNumber":177,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":178,"author":{"gitId":"Tan-Jin-Waye"},"content":"        @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":179,"author":{"gitId":"Tan-Jin-Waye"},"content":"        public ObservableList\u003cGroup\u003e getFilteredGroupList() {","lastModifiedDate":"2022-10-06"},{"lineNumber":180,"author":{"gitId":"Tan-Jin-Waye"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-06"},{"lineNumber":181,"author":{"gitId":"Tan-Jin-Waye"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":182,"author":{"gitId":"Tan-Jin-Waye"},"content":"        @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":183,"author":{"gitId":"Tan-Jin-Waye"},"content":"        public void updateFilteredGroupList(Predicate\u003cGroup\u003e predicate) {","lastModifiedDate":"2022-10-06"},{"lineNumber":184,"author":{"gitId":"Tan-Jin-Waye"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-06"},{"lineNumber":185,"author":{"gitId":"Tan-Jin-Waye"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":189,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":190,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":230,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"zylee348":9,"-":186,"Tan-Jin-Waye":29,"LianGuoYang":6}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"LianGuoYang"},"content":"    public static final String VALID_GROUP_1 \u003d \"Group 1\";","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"LianGuoYang"},"content":"    public static final String VALID_ASSIGNMENT \u003d \"ExampleAssignment\";","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"Tan-Jin-Waye"},"content":"    public static final String VALID_GROUPNAME_TP \u003d \"CS2103T Team Project\";","lastModifiedDate":"2022-10-06"},{"lineNumber":42,"author":{"gitId":"Tan-Jin-Waye"},"content":"    public static final String VALID_GROUPNAME_IP \u003d \"CS2103T Individual Project\";","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"-":127,"Tan-Jin-Waye":2,"LianGuoYang":2}},{"path":"src/test/java/seedu/address/logic/commands/DeleteUserByNameCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Aloynz"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"Aloynz"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"Aloynz"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"Aloynz"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"Aloynz"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"Aloynz"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"Aloynz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"Aloynz"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"Aloynz"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"Aloynz"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"Aloynz"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"Aloynz"},"content":"import seedu.address.model.person.FullNamePredicate;","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"Aloynz"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"Aloynz"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"Aloynz"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"Aloynz"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"Aloynz"},"content":" * {@code DeleteUserByNameCommand}.","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"Aloynz"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"Aloynz"},"content":"public class DeleteUserByNameCommandTest {","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"Aloynz"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"Aloynz"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"Aloynz"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"Aloynz"},"content":"    public void execute_validNameUnfilteredList_success() {","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"Aloynz"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"Aloynz"},"content":"        FullNamePredicate predicate \u003d new FullNamePredicate(personToDelete.getName().toString());","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"Aloynz"},"content":"        DeleteUserByNameCommand deleteUserByNameCommand \u003d new DeleteUserByNameCommand(predicate);","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"Aloynz"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"Aloynz"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"Aloynz"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"Aloynz"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"Aloynz"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"Aloynz"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"Aloynz"},"content":"        assertCommandSuccess(deleteUserByNameCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"Aloynz"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"Aloynz"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"Aloynz"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"Aloynz"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"Aloynz"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"Aloynz":38}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"LianGuoYang"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"-":58,"LianGuoYang":1}},{"path":"src/test/java/seedu/address/logic/commands/FindUserCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"zylee348"},"content":" * Contains integration tests (interaction with the Model) for {@code FindUserCommand}.","lastModifiedDate":"2022-10-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"zylee348"},"content":"public class FindUserCommandTest {","lastModifiedDate":"2022-10-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"zylee348"},"content":"        FindUserCommand findFirstCommand \u003d new FindUserCommand(firstPredicate);","lastModifiedDate":"2022-10-03"},{"lineNumber":38,"author":{"gitId":"zylee348"},"content":"        FindUserCommand findSecondCommand \u003d new FindUserCommand(secondPredicate);","lastModifiedDate":"2022-10-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"zylee348"},"content":"        FindUserCommand findFirstCommandCopy \u003d new FindUserCommand(firstPredicate);","lastModifiedDate":"2022-10-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"zylee348"},"content":"        FindUserCommand command \u003d new FindUserCommand(predicate);","lastModifiedDate":"2022-10-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"zylee348"},"content":"        FindUserCommand command \u003d new FindUserCommand(predicate);","lastModifiedDate":"2022-10-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"zylee348":7,"-":76}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"zylee348"},"content":"import seedu.address.logic.commands.AddUserCommand;","lastModifiedDate":"2022-10-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"zylee348"},"content":"    private AddUserCommandParser parser \u003d new AddUserCommandParser();","lastModifiedDate":"2022-10-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2018-07-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":52,"author":{"gitId":"zylee348"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddUserCommand(expectedPerson));","lastModifiedDate":"2022-10-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":56,"author":{"gitId":"zylee348"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddUserCommand(expectedPerson));","lastModifiedDate":"2022-10-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":60,"author":{"gitId":"zylee348"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddUserCommand(expectedPerson));","lastModifiedDate":"2022-10-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":64,"author":{"gitId":"zylee348"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddUserCommand(expectedPerson));","lastModifiedDate":"2022-10-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2017-12-23"},{"lineNumber":68,"author":{"gitId":"zylee348"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddUserCommand(expectedPerson));","lastModifiedDate":"2022-10-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2018-07-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":74,"author":{"gitId":"zylee348"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new AddUserCommand(expectedPersonMultipleTags));","lastModifiedDate":"2022-10-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-07-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY,","lastModifiedDate":"2017-12-23"},{"lineNumber":82,"author":{"gitId":"zylee348"},"content":"                new AddUserCommand(expectedPerson));","lastModifiedDate":"2022-10-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":87,"author":{"gitId":"zylee348"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddUserCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2017-12-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2017-12-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2017-12-23"},{"lineNumber":139,"author":{"gitId":"zylee348"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddUserCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-03"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"zylee348":11,"-":130}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"LianGuoYang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUP;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"LianGuoYang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK;","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"zylee348"},"content":"import seedu.address.logic.commands.AddUserCommand;","lastModifiedDate":"2022-10-03"},{"lineNumber":19,"author":{"gitId":"LianGuoYang"},"content":"import seedu.address.logic.commands.AssignTaskCommand;","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"CedricChia123"},"content":"import seedu.address.logic.commands.EditUserByNameCommand;","lastModifiedDate":"2022-10-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"zylee348"},"content":"import seedu.address.logic.commands.FindUserCommand;","lastModifiedDate":"2022-10-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"CedricChia123"},"content":"import seedu.address.model.person.FullNamePredicate;","lastModifiedDate":"2022-10-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"zylee348"},"content":"        AddUserCommand command \u003d (AddUserCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2022-10-03"},{"lineNumber":44,"author":{"gitId":"zylee348"},"content":"        assertEquals(new AddUserCommand(person), command);","lastModifiedDate":"2022-10-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"LianGuoYang"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":48,"author":{"gitId":"LianGuoYang"},"content":"    public void parseCommand_assigntask() throws Exception {","lastModifiedDate":"2022-10-04"},{"lineNumber":49,"author":{"gitId":"LianGuoYang"},"content":"        String name \u003d \"Alex\";","lastModifiedDate":"2022-10-04"},{"lineNumber":50,"author":{"gitId":"LianGuoYang"},"content":"        String group \u003d \"Group1\";","lastModifiedDate":"2022-10-04"},{"lineNumber":51,"author":{"gitId":"LianGuoYang"},"content":"        String task \u003d \"assignment 0\";","lastModifiedDate":"2022-10-04"},{"lineNumber":52,"author":{"gitId":"LianGuoYang"},"content":"        AssignTaskCommand command \u003d (AssignTaskCommand) parser.parseCommand(","lastModifiedDate":"2022-10-04"},{"lineNumber":53,"author":{"gitId":"LianGuoYang"},"content":"                AssignTaskCommand.COMMAND_WORD + \" \" + name + \" \"","lastModifiedDate":"2022-10-04"},{"lineNumber":54,"author":{"gitId":"LianGuoYang"},"content":"                        + PREFIX_GROUP + group + \" \"","lastModifiedDate":"2022-10-04"},{"lineNumber":55,"author":{"gitId":"LianGuoYang"},"content":"                        + PREFIX_TASK + task);","lastModifiedDate":"2022-10-04"},{"lineNumber":56,"author":{"gitId":"LianGuoYang"},"content":"        assertEquals(new AssignTaskCommand(name, group, task), command);","lastModifiedDate":"2022-10-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"zylee348"},"content":"        EditCommand.EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2022-10-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"CedricChia123"},"content":"    @Test","lastModifiedDate":"2022-10-08"},{"lineNumber":82,"author":{"gitId":"CedricChia123"},"content":"    public void parseCommand_editByName() throws Exception {","lastModifiedDate":"2022-10-08"},{"lineNumber":83,"author":{"gitId":"CedricChia123"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2022-10-08"},{"lineNumber":84,"author":{"gitId":"CedricChia123"},"content":"        EditCommand.EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2022-10-08"},{"lineNumber":85,"author":{"gitId":"CedricChia123"},"content":"        EditUserByNameCommand command \u003d (EditUserByNameCommand) parser.parseCommand(","lastModifiedDate":"2022-10-08"},{"lineNumber":86,"author":{"gitId":"CedricChia123"},"content":"                EditUserByNameCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-08"},{"lineNumber":87,"author":{"gitId":"CedricChia123"},"content":"                        + \"Bob\" + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2022-10-08"},{"lineNumber":88,"author":{"gitId":"CedricChia123"},"content":"        assertEquals(new EditUserByNameCommand(new FullNamePredicate(\"Bob\"), descriptor), command);","lastModifiedDate":"2022-10-08"},{"lineNumber":89,"author":{"gitId":"CedricChia123"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":90,"author":{"gitId":"CedricChia123"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":100,"author":{"gitId":"zylee348"},"content":"        FindUserCommand command \u003d (FindUserCommand) parser.parseCommand(","lastModifiedDate":"2022-10-03"},{"lineNumber":101,"author":{"gitId":"zylee348"},"content":"                FindUserCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2022-10-03"},{"lineNumber":102,"author":{"gitId":"zylee348"},"content":"        assertEquals(new FindUserCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2022-10-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"zylee348":8,"CedricChia123":12,"-":94,"LianGuoYang":13}},{"path":"src/test/java/seedu/address/logic/parser/DeleteUserByNameCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Aloynz"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"Aloynz"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"Aloynz"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"Aloynz"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"Aloynz"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"Aloynz"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"Aloynz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"Aloynz"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"Aloynz"},"content":"import seedu.address.logic.commands.DeleteUserByNameCommand;","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"Aloynz"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"Aloynz"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"Aloynz"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"Aloynz"},"content":"import seedu.address.model.person.FullNamePredicate;","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"Aloynz"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"Aloynz"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"Aloynz"},"content":"public class DeleteUserByNameCommandParserTest {","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"Aloynz"},"content":"    private DeleteUserByNameCommandParser parser \u003d new DeleteUserByNameCommandParser();","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"Aloynz"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"Aloynz"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"Aloynz"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"Aloynz"},"content":"    public void parse_validArgs_returnsDeleteUserByNameCommand() {","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"Aloynz"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"Aloynz"},"content":"        FullNamePredicate predicate \u003d new FullNamePredicate(personToDelete.getName().toString());","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"Aloynz"},"content":"        assertParseSuccess(parser, personToDelete.getName().toString(), new DeleteUserByNameCommand(predicate));","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"Aloynz"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"Aloynz"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"Aloynz"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"Aloynz":27}},{"path":"src/test/java/seedu/address/logic/parser/EditByNameCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"CedricChia123"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"CedricChia123"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"CedricChia123"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"CedricChia123"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"CedricChia123"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"CedricChia123"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"CedricChia123"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"CedricChia123"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"CedricChia123"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"CedricChia123"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"CedricChia123"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"CedricChia123"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"CedricChia123"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"CedricChia123"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"CedricChia123"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"CedricChia123"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"CedricChia123"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"CedricChia123"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"CedricChia123"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"CedricChia123"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"CedricChia123"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"CedricChia123"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"CedricChia123"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"CedricChia123"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"CedricChia123"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"CedricChia123"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"CedricChia123"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"CedricChia123"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"CedricChia123"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"CedricChia123"},"content":"import seedu.address.logic.commands.EditUserByNameCommand;","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"CedricChia123"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"CedricChia123"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"CedricChia123"},"content":"import seedu.address.model.person.FullNamePredicate;","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"CedricChia123"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"CedricChia123"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"CedricChia123"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"CedricChia123"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"CedricChia123"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"CedricChia123"},"content":"public class EditByNameCommandParserTest {","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"CedricChia123"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"CedricChia123"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"CedricChia123"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"CedricChia123"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"CedricChia123"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"CedricChia123"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"CedricChia123"},"content":"    private EditByNameCommandParser parser \u003d new EditByNameCommandParser();","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"CedricChia123"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"CedricChia123"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"CedricChia123"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"CedricChia123"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"CedricChia123"},"content":"        String userInput \u003d VALID_NAME_BOB + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"CedricChia123"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"CedricChia123"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"CedricChia123"},"content":"        EditCommand.EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"CedricChia123"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"CedricChia123"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-09"},{"lineNumber":57,"author":{"gitId":"CedricChia123"},"content":"        EditUserByNameCommand expectedCommand \u003d new EditUserByNameCommand(new FullNamePredicate(VALID_NAME_BOB),","lastModifiedDate":"2022-10-09"},{"lineNumber":58,"author":{"gitId":"CedricChia123"},"content":"                descriptor);","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"CedricChia123"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":60,"author":{"gitId":"CedricChia123"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-09"},{"lineNumber":61,"author":{"gitId":"CedricChia123"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":62,"author":{"gitId":"CedricChia123"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":63,"author":{"gitId":"CedricChia123"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":64,"author":{"gitId":"CedricChia123"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2022-10-09"},{"lineNumber":65,"author":{"gitId":"CedricChia123"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + INVALID_NAME_DESC,","lastModifiedDate":"2022-10-09"},{"lineNumber":66,"author":{"gitId":"CedricChia123"},"content":"                Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2022-10-09"},{"lineNumber":67,"author":{"gitId":"CedricChia123"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + INVALID_PHONE_DESC,","lastModifiedDate":"2022-10-09"},{"lineNumber":68,"author":{"gitId":"CedricChia123"},"content":"                Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2022-10-09"},{"lineNumber":69,"author":{"gitId":"CedricChia123"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + INVALID_EMAIL_DESC,","lastModifiedDate":"2022-10-09"},{"lineNumber":70,"author":{"gitId":"CedricChia123"},"content":"                Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2022-10-09"},{"lineNumber":71,"author":{"gitId":"CedricChia123"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2022-10-09"},{"lineNumber":72,"author":{"gitId":"CedricChia123"},"content":"                Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2022-10-09"},{"lineNumber":73,"author":{"gitId":"CedricChia123"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + INVALID_TAG_DESC,","lastModifiedDate":"2022-10-09"},{"lineNumber":74,"author":{"gitId":"CedricChia123"},"content":"                Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2022-10-09"},{"lineNumber":75,"author":{"gitId":"CedricChia123"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":76,"author":{"gitId":"CedricChia123"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2022-10-09"},{"lineNumber":77,"author":{"gitId":"CedricChia123"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + INVALID_PHONE_DESC + EMAIL_DESC_AMY,","lastModifiedDate":"2022-10-09"},{"lineNumber":78,"author":{"gitId":"CedricChia123"},"content":"                Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-09"},{"lineNumber":79,"author":{"gitId":"CedricChia123"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":80,"author":{"gitId":"CedricChia123"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2022-10-09"},{"lineNumber":81,"author":{"gitId":"CedricChia123"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2022-10-09"},{"lineNumber":82,"author":{"gitId":"CedricChia123"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + INVALID_PHONE_DESC,","lastModifiedDate":"2022-10-09"},{"lineNumber":83,"author":{"gitId":"CedricChia123"},"content":"                Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-09"},{"lineNumber":84,"author":{"gitId":"CedricChia123"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":85,"author":{"gitId":"CedricChia123"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2022-10-09"},{"lineNumber":86,"author":{"gitId":"CedricChia123"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2022-10-09"},{"lineNumber":87,"author":{"gitId":"CedricChia123"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY,","lastModifiedDate":"2022-10-09"},{"lineNumber":88,"author":{"gitId":"CedricChia123"},"content":"                Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-09"},{"lineNumber":89,"author":{"gitId":"CedricChia123"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND,","lastModifiedDate":"2022-10-09"},{"lineNumber":90,"author":{"gitId":"CedricChia123"},"content":"                Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-09"},{"lineNumber":91,"author":{"gitId":"CedricChia123"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND,","lastModifiedDate":"2022-10-09"},{"lineNumber":92,"author":{"gitId":"CedricChia123"},"content":"                Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-09"},{"lineNumber":93,"author":{"gitId":"CedricChia123"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":94,"author":{"gitId":"CedricChia123"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2022-10-09"},{"lineNumber":95,"author":{"gitId":"CedricChia123"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + INVALID_NAME_DESC + INVALID_EMAIL_DESC","lastModifiedDate":"2022-10-09"},{"lineNumber":96,"author":{"gitId":"CedricChia123"},"content":"                        + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2022-10-09"},{"lineNumber":97,"author":{"gitId":"CedricChia123"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-09"},{"lineNumber":98,"author":{"gitId":"CedricChia123"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":99,"author":{"gitId":"CedricChia123"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":100,"author":{"gitId":"CedricChia123"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":101,"author":{"gitId":"CedricChia123"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2022-10-09"},{"lineNumber":102,"author":{"gitId":"CedricChia123"},"content":"        String userInput \u003d VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2022-10-09"},{"lineNumber":103,"author":{"gitId":"CedricChia123"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":104,"author":{"gitId":"CedricChia123"},"content":"        EditCommand.EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-10-09"},{"lineNumber":105,"author":{"gitId":"CedricChia123"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2022-10-09"},{"lineNumber":106,"author":{"gitId":"CedricChia123"},"content":"        EditUserByNameCommand expectedCommand \u003d new EditUserByNameCommand(new FullNamePredicate(VALID_NAME_BOB),","lastModifiedDate":"2022-10-09"},{"lineNumber":107,"author":{"gitId":"CedricChia123"},"content":"                descriptor);","lastModifiedDate":"2022-10-09"},{"lineNumber":108,"author":{"gitId":"CedricChia123"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":109,"author":{"gitId":"CedricChia123"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-09"},{"lineNumber":110,"author":{"gitId":"CedricChia123"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":111,"author":{"gitId":"CedricChia123"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":112,"author":{"gitId":"CedricChia123"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"CedricChia123":112}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"zylee348"},"content":"import seedu.address.logic.commands.FindUserCommand;","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"zylee348"},"content":"    private FindUserCommandParser parser \u003d new FindUserCommandParser();","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"zylee348"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"zylee348"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindUserCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"zylee348"},"content":"        FindUserCommand expectedFindCommand \u003d","lastModifiedDate":"2022-10-03"},{"lineNumber":28,"author":{"gitId":"zylee348"},"content":"                new FindUserCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2022-10-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"zylee348":6,"-":29}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"LianGuoYang"},"content":"import seedu.address.model.assignment.Assignment;","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"LianGuoYang"},"content":"    private static final String VALID_ASSIGNMENT_1 \u003d \"assignment 0\";","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"LianGuoYang"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":199,"author":{"gitId":"LianGuoYang"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":200,"author":{"gitId":"LianGuoYang"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":201,"author":{"gitId":"LianGuoYang"},"content":"    public void parseAssignment_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":202,"author":{"gitId":"LianGuoYang"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAssignment(null));","lastModifiedDate":"2022-10-05"},{"lineNumber":203,"author":{"gitId":"LianGuoYang"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":204,"author":{"gitId":"LianGuoYang"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":205,"author":{"gitId":"LianGuoYang"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":206,"author":{"gitId":"LianGuoYang"},"content":"    public void parseAssignment_validValueWithoutWhitespace_returnsAssignment() {","lastModifiedDate":"2022-10-05"},{"lineNumber":207,"author":{"gitId":"LianGuoYang"},"content":"        Assignment expectedAssignment \u003d new Assignment(VALID_ASSIGNMENT_1);","lastModifiedDate":"2022-10-05"},{"lineNumber":208,"author":{"gitId":"LianGuoYang"},"content":"        assertEquals(expectedAssignment, ParserUtil.parseAssignment(VALID_ASSIGNMENT_1));","lastModifiedDate":"2022-10-05"},{"lineNumber":209,"author":{"gitId":"LianGuoYang"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":210,"author":{"gitId":"LianGuoYang"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"-":196,"LianGuoYang":15}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"Tan-Jin-Waye"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":102,"author":{"gitId":"Tan-Jin-Waye"},"content":"        @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":103,"author":{"gitId":"Tan-Jin-Waye"},"content":"        public ObservableList\u003cGroup\u003e getGroupList() {","lastModifiedDate":"2022-10-06"},{"lineNumber":104,"author":{"gitId":"Tan-Jin-Waye"},"content":"            //todo test group related functions in AddressBook","lastModifiedDate":"2022-10-06"},{"lineNumber":105,"author":{"gitId":"Tan-Jin-Waye"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-06"},{"lineNumber":106,"author":{"gitId":"Tan-Jin-Waye"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"-":102,"Tan-Jin-Waye":7}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"LianGuoYang"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"LianGuoYang"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"LianGuoYang"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"LianGuoYang"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":79,"author":{"gitId":"LianGuoYang"},"content":"    public void getPersonWithName_nameOfAlice_returnAlice() {","lastModifiedDate":"2022-10-05"},{"lineNumber":80,"author":{"gitId":"LianGuoYang"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2022-10-05"},{"lineNumber":81,"author":{"gitId":"LianGuoYang"},"content":"        modelManager.addPerson(BOB);","lastModifiedDate":"2022-10-05"},{"lineNumber":82,"author":{"gitId":"LianGuoYang"},"content":"        Person alice \u003d modelManager.getPersonWithName(ALICE.getName()).get(0);","lastModifiedDate":"2022-10-05"},{"lineNumber":83,"author":{"gitId":"LianGuoYang"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":84,"author":{"gitId":"LianGuoYang"},"content":"        assertEquals(ALICE, alice);","lastModifiedDate":"2022-10-05"},{"lineNumber":85,"author":{"gitId":"LianGuoYang"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":86,"author":{"gitId":"LianGuoYang"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":87,"author":{"gitId":"LianGuoYang"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":88,"author":{"gitId":"LianGuoYang"},"content":"    public void getPersonWithName_emptyName_returnEmptyList() {","lastModifiedDate":"2022-10-05"},{"lineNumber":89,"author":{"gitId":"LianGuoYang"},"content":"        ObservableList\u003cPerson\u003e personList \u003d modelManager.getPersonWithName(ALICE.getName());","lastModifiedDate":"2022-10-05"},{"lineNumber":90,"author":{"gitId":"LianGuoYang"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":91,"author":{"gitId":"LianGuoYang"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e personList.get(0));","lastModifiedDate":"2022-10-05"},{"lineNumber":92,"author":{"gitId":"LianGuoYang"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":93,"author":{"gitId":"LianGuoYang"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"-":132,"LianGuoYang":19}},{"path":"src/test/java/seedu/address/model/group/GroupNameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tan-Jin-Waye"},"content":"package seedu.address.model.group;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"Tan-Jin-Waye"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"Tan-Jin-Waye"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"Tan-Jin-Waye"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"Tan-Jin-Waye"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"Tan-Jin-Waye"},"content":"public class GroupNameTest {","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"Tan-Jin-Waye"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"Tan-Jin-Waye"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"Tan-Jin-Waye"},"content":"        assertThrows(NullPointerException.class, () -\u003e new GroupName(null));","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"Tan-Jin-Waye"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"Tan-Jin-Waye"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"Tan-Jin-Waye"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"Tan-Jin-Waye"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"Tan-Jin-Waye"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new GroupName(invalidName));","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"Tan-Jin-Waye"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"Tan-Jin-Waye"},"content":"    public void isValidName() {","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"Tan-Jin-Waye"},"content":"        // null name","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"Tan-Jin-Waye"},"content":"        assertThrows(NullPointerException.class, () -\u003e GroupName.isValidName(null));","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"Tan-Jin-Waye"},"content":"        // invalid name","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"Tan-Jin-Waye"},"content":"        assertFalse(GroupName.isValidName(\"\")); //empty string","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"Tan-Jin-Waye"},"content":"        assertFalse(GroupName.isValidName(\" \")); // spaces only","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"Tan-Jin-Waye"},"content":"        assertFalse(GroupName.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"Tan-Jin-Waye"},"content":"        assertFalse(GroupName.isValidName(\"TP^\")); // contains non-alphanumeric characters","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"Tan-Jin-Waye"},"content":"        // valid name","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"Tan-Jin-Waye"},"content":"        assertTrue(GroupName.isValidName(\"team project\")); // alphabets only","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"Tan-Jin-Waye"},"content":"        assertTrue(GroupName.isValidName(\"2103\")); // numbers only","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"Tan-Jin-Waye"},"content":"        assertTrue(GroupName.isValidName(\"CS2103T TP\")); // alphanumeric characters","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"Tan-Jin-Waye"},"content":"        assertTrue(GroupName.isValidName(\"CS2103T Team Project\")); // with capital letters","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"Tan-Jin-Waye"},"content":"        assertTrue(GroupName.isValidName(\"CS2103T Team Project TABS for Project Team Leaders\")); // long names","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"Tan-Jin-Waye"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"Tan-Jin-Waye"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"Tan-Jin-Waye":39}},{"path":"src/test/java/seedu/address/model/group/GroupTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tan-Jin-Waye"},"content":"package seedu.address.model.group;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"Tan-Jin-Waye"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"Tan-Jin-Waye"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"Tan-Jin-Waye"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GROUPNAME_IP;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"Tan-Jin-Waye"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GROUPNAME_TP;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"Tan-Jin-Waye"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"Tan-Jin-Waye"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"Tan-Jin-Waye"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"Tan-Jin-Waye"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"Tan-Jin-Waye"},"content":"import static seedu.address.testutil.TypicalPersons.DANIEL;","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"Tan-Jin-Waye"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"Tan-Jin-Waye"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"Tan-Jin-Waye"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"Tan-Jin-Waye"},"content":"import seedu.address.testutil.GroupBuilder;","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"Tan-Jin-Waye"},"content":"public class GroupTest {","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"Tan-Jin-Waye"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"Tan-Jin-Waye"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"Tan-Jin-Waye"},"content":"        Group group \u003d new GroupBuilder().build();","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"Tan-Jin-Waye"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e group.getMembers().remove(0));","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"Tan-Jin-Waye"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"Tan-Jin-Waye"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"Tan-Jin-Waye"},"content":"    public void isSameGroup() {","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"Tan-Jin-Waye"},"content":"        Group group \u003d new GroupBuilder().build();","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"Tan-Jin-Waye"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"Tan-Jin-Waye"},"content":"        assertTrue(group.isSameGroup(group));","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"Tan-Jin-Waye"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"Tan-Jin-Waye"},"content":"        assertFalse(group.isSameGroup(null));","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"Tan-Jin-Waye"},"content":"        // same name, different members -\u003e returns true","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"Tan-Jin-Waye"},"content":"        Group editedGroup \u003d new GroupBuilder().withName(VALID_GROUPNAME_TP).withMembers(DANIEL, ELLE, FIONA).build();","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"Tan-Jin-Waye"},"content":"        assertTrue(group.isSameGroup(editedGroup));","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"Tan-Jin-Waye"},"content":"        // different name, same members -\u003e returns false","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"Tan-Jin-Waye"},"content":"        editedGroup \u003d new GroupBuilder().withName(VALID_GROUPNAME_IP).withMembers(ALICE, BOB, CARL).build();","lastModifiedDate":"2022-10-06"},{"lineNumber":42,"author":{"gitId":"Tan-Jin-Waye"},"content":"        assertFalse(group.isSameGroup(editedGroup));","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"Tan-Jin-Waye"},"content":"        //name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2022-10-06"},{"lineNumber":45,"author":{"gitId":"Tan-Jin-Waye"},"content":"        editedGroup \u003d","lastModifiedDate":"2022-10-06"},{"lineNumber":46,"author":{"gitId":"Tan-Jin-Waye"},"content":"                new GroupBuilder().withName(VALID_GROUPNAME_TP.toLowerCase()).withMembers(ALICE, BOB, CARL).build();","lastModifiedDate":"2022-10-06"},{"lineNumber":47,"author":{"gitId":"Tan-Jin-Waye"},"content":"        assertFalse(group.isSameGroup(editedGroup));","lastModifiedDate":"2022-10-06"},{"lineNumber":48,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":49,"author":{"gitId":"Tan-Jin-Waye"},"content":"        //name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2022-10-06"},{"lineNumber":50,"author":{"gitId":"Tan-Jin-Waye"},"content":"        String nameWithTrailingSpaces \u003d VALID_GROUPNAME_TP + \" \";","lastModifiedDate":"2022-10-06"},{"lineNumber":51,"author":{"gitId":"Tan-Jin-Waye"},"content":"        editedGroup \u003d new GroupBuilder().withName(nameWithTrailingSpaces).withMembers(ALICE, BOB, CARL).build();","lastModifiedDate":"2022-10-06"},{"lineNumber":52,"author":{"gitId":"Tan-Jin-Waye"},"content":"        assertFalse(group.isSameGroup(editedGroup));","lastModifiedDate":"2022-10-06"},{"lineNumber":53,"author":{"gitId":"Tan-Jin-Waye"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":54,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":55,"author":{"gitId":"Tan-Jin-Waye"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":56,"author":{"gitId":"Tan-Jin-Waye"},"content":"    public void equals() {","lastModifiedDate":"2022-10-06"},{"lineNumber":57,"author":{"gitId":"Tan-Jin-Waye"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-06"},{"lineNumber":58,"author":{"gitId":"Tan-Jin-Waye"},"content":"        Group defaultGroup \u003d new GroupBuilder().build();","lastModifiedDate":"2022-10-06"},{"lineNumber":59,"author":{"gitId":"Tan-Jin-Waye"},"content":"        Group otherGroup \u003d new GroupBuilder().withName(VALID_GROUPNAME_TP).withMembers(ALICE, BOB, CARL).build();","lastModifiedDate":"2022-10-06"},{"lineNumber":60,"author":{"gitId":"Tan-Jin-Waye"},"content":"        assertTrue(defaultGroup.equals(otherGroup));","lastModifiedDate":"2022-10-06"},{"lineNumber":61,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":62,"author":{"gitId":"Tan-Jin-Waye"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-06"},{"lineNumber":63,"author":{"gitId":"Tan-Jin-Waye"},"content":"        assertTrue(defaultGroup.equals(defaultGroup));","lastModifiedDate":"2022-10-06"},{"lineNumber":64,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":65,"author":{"gitId":"Tan-Jin-Waye"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-06"},{"lineNumber":66,"author":{"gitId":"Tan-Jin-Waye"},"content":"        assertFalse(defaultGroup.equals(null));","lastModifiedDate":"2022-10-06"},{"lineNumber":67,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":68,"author":{"gitId":"Tan-Jin-Waye"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2022-10-06"},{"lineNumber":69,"author":{"gitId":"Tan-Jin-Waye"},"content":"        assertFalse(defaultGroup.equals(5));","lastModifiedDate":"2022-10-06"},{"lineNumber":70,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":71,"author":{"gitId":"Tan-Jin-Waye"},"content":"        // different group -\u003e returns false","lastModifiedDate":"2022-10-06"},{"lineNumber":72,"author":{"gitId":"Tan-Jin-Waye"},"content":"        otherGroup \u003d new GroupBuilder().withName(VALID_GROUPNAME_IP).withMembers(DANIEL).build();","lastModifiedDate":"2022-10-06"},{"lineNumber":73,"author":{"gitId":"Tan-Jin-Waye"},"content":"        assertFalse(defaultGroup.equals(otherGroup));","lastModifiedDate":"2022-10-06"},{"lineNumber":74,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":75,"author":{"gitId":"Tan-Jin-Waye"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2022-10-06"},{"lineNumber":76,"author":{"gitId":"Tan-Jin-Waye"},"content":"        otherGroup \u003d new GroupBuilder().withName(VALID_GROUPNAME_IP).withMembers(ALICE, BOB, CARL).build();","lastModifiedDate":"2022-10-06"},{"lineNumber":77,"author":{"gitId":"Tan-Jin-Waye"},"content":"        assertFalse(defaultGroup.equals(otherGroup));","lastModifiedDate":"2022-10-06"},{"lineNumber":78,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":79,"author":{"gitId":"Tan-Jin-Waye"},"content":"        // different members -\u003e returns false","lastModifiedDate":"2022-10-06"},{"lineNumber":80,"author":{"gitId":"Tan-Jin-Waye"},"content":"        otherGroup \u003d new GroupBuilder().withName(VALID_GROUPNAME_TP).withMembers(DANIEL, ELLE, FIONA).build();","lastModifiedDate":"2022-10-06"},{"lineNumber":81,"author":{"gitId":"Tan-Jin-Waye"},"content":"        assertFalse(defaultGroup.equals(otherGroup));","lastModifiedDate":"2022-10-06"},{"lineNumber":82,"author":{"gitId":"Tan-Jin-Waye"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":83,"author":{"gitId":"Tan-Jin-Waye"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"Tan-Jin-Waye":83}},{"path":"src/test/java/seedu/address/model/group/UniqueGroupListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tan-Jin-Waye"},"content":"package seedu.address.model.group;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"Tan-Jin-Waye"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"Tan-Jin-Waye"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"Tan-Jin-Waye"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"Tan-Jin-Waye"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GROUPNAME_IP;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"Tan-Jin-Waye"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GROUPNAME_TP;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"Tan-Jin-Waye"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"Tan-Jin-Waye"},"content":"import static seedu.address.testutil.TypicalPersons.DANIEL;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"Tan-Jin-Waye"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"Tan-Jin-Waye"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"Tan-Jin-Waye"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"Tan-Jin-Waye"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"Tan-Jin-Waye"},"content":"import java.util.List;","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"Tan-Jin-Waye"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"Tan-Jin-Waye"},"content":"import seedu.address.model.group.exceptions.DuplicateGroupException;","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"Tan-Jin-Waye"},"content":"import seedu.address.model.group.exceptions.GroupNotFoundException;","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"Tan-Jin-Waye"},"content":"import seedu.address.testutil.GroupBuilder;","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"Tan-Jin-Waye"},"content":"public class UniqueGroupListTest {","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"Tan-Jin-Waye"},"content":"    private final UniqueGroupList uniqueGroupList \u003d new UniqueGroupList();","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"Tan-Jin-Waye"},"content":"    private final Group group \u003d new GroupBuilder().build();","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"Tan-Jin-Waye"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"Tan-Jin-Waye"},"content":"    public void contains_nullGroup_throwsNullPointerException() {","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"Tan-Jin-Waye"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueGroupList.contains(null));","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"Tan-Jin-Waye"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"Tan-Jin-Waye"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"Tan-Jin-Waye"},"content":"    public void contains_groupNotInList_returnsFalse() {","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"Tan-Jin-Waye"},"content":"        assertFalse(uniqueGroupList.contains(group));","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"Tan-Jin-Waye"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"Tan-Jin-Waye"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"Tan-Jin-Waye"},"content":"    public void contains_groupInList_returnsTrue() {","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"Tan-Jin-Waye"},"content":"        uniqueGroupList.add(group);","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"Tan-Jin-Waye"},"content":"        assertTrue(uniqueGroupList.contains(group));","lastModifiedDate":"2022-10-06"},{"lineNumber":42,"author":{"gitId":"Tan-Jin-Waye"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"Tan-Jin-Waye"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":45,"author":{"gitId":"Tan-Jin-Waye"},"content":"    public void contains_groupWithSameMembersInList_returnsTrue() {","lastModifiedDate":"2022-10-06"},{"lineNumber":46,"author":{"gitId":"Tan-Jin-Waye"},"content":"        uniqueGroupList.add(group);","lastModifiedDate":"2022-10-06"},{"lineNumber":47,"author":{"gitId":"Tan-Jin-Waye"},"content":"        Group editedGroup \u003d new GroupBuilder().withName(VALID_GROUPNAME_TP).withMembers(DANIEL, ELLE, FIONA).build();","lastModifiedDate":"2022-10-06"},{"lineNumber":48,"author":{"gitId":"Tan-Jin-Waye"},"content":"        assertTrue(uniqueGroupList.contains(editedGroup));","lastModifiedDate":"2022-10-06"},{"lineNumber":49,"author":{"gitId":"Tan-Jin-Waye"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":50,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":51,"author":{"gitId":"Tan-Jin-Waye"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":52,"author":{"gitId":"Tan-Jin-Waye"},"content":"    public void add_nullGroup_throwsNullPointerException() {","lastModifiedDate":"2022-10-06"},{"lineNumber":53,"author":{"gitId":"Tan-Jin-Waye"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueGroupList.add(null));","lastModifiedDate":"2022-10-06"},{"lineNumber":54,"author":{"gitId":"Tan-Jin-Waye"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":55,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":56,"author":{"gitId":"Tan-Jin-Waye"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":57,"author":{"gitId":"Tan-Jin-Waye"},"content":"    public void add_duplicateGroup_throwsDuplicateGroupException() {","lastModifiedDate":"2022-10-06"},{"lineNumber":58,"author":{"gitId":"Tan-Jin-Waye"},"content":"        uniqueGroupList.add(group);","lastModifiedDate":"2022-10-06"},{"lineNumber":59,"author":{"gitId":"Tan-Jin-Waye"},"content":"        assertThrows(DuplicateGroupException.class, () -\u003e uniqueGroupList.add(group));","lastModifiedDate":"2022-10-06"},{"lineNumber":60,"author":{"gitId":"Tan-Jin-Waye"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":61,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":62,"author":{"gitId":"Tan-Jin-Waye"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":63,"author":{"gitId":"Tan-Jin-Waye"},"content":"    public void remove_nullGroup_throwsNullPointerException() {","lastModifiedDate":"2022-10-06"},{"lineNumber":64,"author":{"gitId":"Tan-Jin-Waye"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueGroupList.remove(null));","lastModifiedDate":"2022-10-06"},{"lineNumber":65,"author":{"gitId":"Tan-Jin-Waye"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":66,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":67,"author":{"gitId":"Tan-Jin-Waye"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":68,"author":{"gitId":"Tan-Jin-Waye"},"content":"    public void remove_groupDoesNotExist_throwsGroupNotFoundException() {","lastModifiedDate":"2022-10-06"},{"lineNumber":69,"author":{"gitId":"Tan-Jin-Waye"},"content":"        assertThrows(GroupNotFoundException.class, () -\u003e uniqueGroupList.remove(group));","lastModifiedDate":"2022-10-06"},{"lineNumber":70,"author":{"gitId":"Tan-Jin-Waye"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":71,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":72,"author":{"gitId":"Tan-Jin-Waye"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":73,"author":{"gitId":"Tan-Jin-Waye"},"content":"    public void remove_existingGroup_removesGroup() {","lastModifiedDate":"2022-10-06"},{"lineNumber":74,"author":{"gitId":"Tan-Jin-Waye"},"content":"        uniqueGroupList.add(group);","lastModifiedDate":"2022-10-06"},{"lineNumber":75,"author":{"gitId":"Tan-Jin-Waye"},"content":"        uniqueGroupList.remove(group);","lastModifiedDate":"2022-10-06"},{"lineNumber":76,"author":{"gitId":"Tan-Jin-Waye"},"content":"        UniqueGroupList expectedUniqueGroupList \u003d new UniqueGroupList();","lastModifiedDate":"2022-10-06"},{"lineNumber":77,"author":{"gitId":"Tan-Jin-Waye"},"content":"        assertEquals(expectedUniqueGroupList, uniqueGroupList);","lastModifiedDate":"2022-10-06"},{"lineNumber":78,"author":{"gitId":"Tan-Jin-Waye"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":79,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":80,"author":{"gitId":"Tan-Jin-Waye"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":81,"author":{"gitId":"Tan-Jin-Waye"},"content":"    public void removeFromGroupName_nullGroup_throwsNullPointerException() {","lastModifiedDate":"2022-10-06"},{"lineNumber":82,"author":{"gitId":"Tan-Jin-Waye"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueGroupList.removeFromGroupName(null));","lastModifiedDate":"2022-10-06"},{"lineNumber":83,"author":{"gitId":"Tan-Jin-Waye"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":84,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":85,"author":{"gitId":"Tan-Jin-Waye"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":86,"author":{"gitId":"Tan-Jin-Waye"},"content":"    public void removeFromGroupName_groupDoesNotExist_throwsGroupNotFoundException() {","lastModifiedDate":"2022-10-06"},{"lineNumber":87,"author":{"gitId":"Tan-Jin-Waye"},"content":"        GroupName groupName \u003d new GroupName(VALID_GROUPNAME_TP);","lastModifiedDate":"2022-10-06"},{"lineNumber":88,"author":{"gitId":"Tan-Jin-Waye"},"content":"        assertThrows(GroupNotFoundException.class, () -\u003e uniqueGroupList.removeFromGroupName(groupName));","lastModifiedDate":"2022-10-06"},{"lineNumber":89,"author":{"gitId":"Tan-Jin-Waye"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":90,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":91,"author":{"gitId":"Tan-Jin-Waye"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":92,"author":{"gitId":"Tan-Jin-Waye"},"content":"    public void removeFromGroupName_existingGroup_removesGroup() {","lastModifiedDate":"2022-10-06"},{"lineNumber":93,"author":{"gitId":"Tan-Jin-Waye"},"content":"        GroupName groupName \u003d new GroupName(VALID_GROUPNAME_TP);","lastModifiedDate":"2022-10-06"},{"lineNumber":94,"author":{"gitId":"Tan-Jin-Waye"},"content":"        uniqueGroupList.add(group);","lastModifiedDate":"2022-10-06"},{"lineNumber":95,"author":{"gitId":"Tan-Jin-Waye"},"content":"        uniqueGroupList.removeFromGroupName(groupName);","lastModifiedDate":"2022-10-06"},{"lineNumber":96,"author":{"gitId":"Tan-Jin-Waye"},"content":"        UniqueGroupList expectedUniqueGroupList \u003d new UniqueGroupList();","lastModifiedDate":"2022-10-06"},{"lineNumber":97,"author":{"gitId":"Tan-Jin-Waye"},"content":"        assertEquals(expectedUniqueGroupList, uniqueGroupList);","lastModifiedDate":"2022-10-06"},{"lineNumber":98,"author":{"gitId":"Tan-Jin-Waye"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":99,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":100,"author":{"gitId":"Tan-Jin-Waye"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":101,"author":{"gitId":"Tan-Jin-Waye"},"content":"    public void setGroups_nullUniqueGroupList_throwsNullPointerException() {","lastModifiedDate":"2022-10-06"},{"lineNumber":102,"author":{"gitId":"Tan-Jin-Waye"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueGroupList.setGroups((UniqueGroupList) null));","lastModifiedDate":"2022-10-06"},{"lineNumber":103,"author":{"gitId":"Tan-Jin-Waye"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":104,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":105,"author":{"gitId":"Tan-Jin-Waye"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":106,"author":{"gitId":"Tan-Jin-Waye"},"content":"    public void setPersons_uniqueGroupsList_replacesOwnListWithProvidedUniqueGroupList() {","lastModifiedDate":"2022-10-06"},{"lineNumber":107,"author":{"gitId":"Tan-Jin-Waye"},"content":"        uniqueGroupList.add(group);","lastModifiedDate":"2022-10-06"},{"lineNumber":108,"author":{"gitId":"Tan-Jin-Waye"},"content":"        UniqueGroupList expectedUniqueGroupList \u003d new UniqueGroupList();","lastModifiedDate":"2022-10-06"},{"lineNumber":109,"author":{"gitId":"Tan-Jin-Waye"},"content":"        expectedUniqueGroupList.add(new GroupBuilder().withName(VALID_GROUPNAME_IP).withMembers(DANIEL).build());","lastModifiedDate":"2022-10-06"},{"lineNumber":110,"author":{"gitId":"Tan-Jin-Waye"},"content":"        uniqueGroupList.setGroups(expectedUniqueGroupList);","lastModifiedDate":"2022-10-06"},{"lineNumber":111,"author":{"gitId":"Tan-Jin-Waye"},"content":"        assertEquals(expectedUniqueGroupList, uniqueGroupList);","lastModifiedDate":"2022-10-06"},{"lineNumber":112,"author":{"gitId":"Tan-Jin-Waye"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":113,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":114,"author":{"gitId":"Tan-Jin-Waye"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":115,"author":{"gitId":"Tan-Jin-Waye"},"content":"    public void setGroups_nullList_throwsNullPointerException() {","lastModifiedDate":"2022-10-06"},{"lineNumber":116,"author":{"gitId":"Tan-Jin-Waye"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueGroupList.setGroups((List\u003cGroup\u003e) null));","lastModifiedDate":"2022-10-06"},{"lineNumber":117,"author":{"gitId":"Tan-Jin-Waye"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":118,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":119,"author":{"gitId":"Tan-Jin-Waye"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":120,"author":{"gitId":"Tan-Jin-Waye"},"content":"    public void setGroups_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2022-10-06"},{"lineNumber":121,"author":{"gitId":"Tan-Jin-Waye"},"content":"        uniqueGroupList.add(group);","lastModifiedDate":"2022-10-06"},{"lineNumber":122,"author":{"gitId":"Tan-Jin-Waye"},"content":"        List\u003cGroup\u003e groupList \u003d Collections.singletonList(","lastModifiedDate":"2022-10-06"},{"lineNumber":123,"author":{"gitId":"Tan-Jin-Waye"},"content":"                new GroupBuilder().withName(VALID_GROUPNAME_IP).withMembers(DANIEL).build());","lastModifiedDate":"2022-10-06"},{"lineNumber":124,"author":{"gitId":"Tan-Jin-Waye"},"content":"        uniqueGroupList.setGroups(groupList);","lastModifiedDate":"2022-10-06"},{"lineNumber":125,"author":{"gitId":"Tan-Jin-Waye"},"content":"        UniqueGroupList expectedUniqueGroupList \u003d new UniqueGroupList();","lastModifiedDate":"2022-10-06"},{"lineNumber":126,"author":{"gitId":"Tan-Jin-Waye"},"content":"        expectedUniqueGroupList.add(new GroupBuilder().withName(VALID_GROUPNAME_IP).withMembers(DANIEL).build());","lastModifiedDate":"2022-10-06"},{"lineNumber":127,"author":{"gitId":"Tan-Jin-Waye"},"content":"        assertEquals(expectedUniqueGroupList, uniqueGroupList);","lastModifiedDate":"2022-10-06"},{"lineNumber":128,"author":{"gitId":"Tan-Jin-Waye"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":129,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":130,"author":{"gitId":"Tan-Jin-Waye"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":131,"author":{"gitId":"Tan-Jin-Waye"},"content":"    public void setGroups_listWithDuplicateGroups_throwsDuplicateGroupException() {","lastModifiedDate":"2022-10-06"},{"lineNumber":132,"author":{"gitId":"Tan-Jin-Waye"},"content":"        List\u003cGroup\u003e listWithDuplicateGroups \u003d Arrays.asList(group, group);","lastModifiedDate":"2022-10-06"},{"lineNumber":133,"author":{"gitId":"Tan-Jin-Waye"},"content":"        assertThrows(DuplicateGroupException.class, () -\u003e uniqueGroupList.setGroups(listWithDuplicateGroups));","lastModifiedDate":"2022-10-06"},{"lineNumber":134,"author":{"gitId":"Tan-Jin-Waye"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":135,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":136,"author":{"gitId":"Tan-Jin-Waye"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":137,"author":{"gitId":"Tan-Jin-Waye"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-06"},{"lineNumber":138,"author":{"gitId":"Tan-Jin-Waye"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":139,"author":{"gitId":"Tan-Jin-Waye"},"content":"                uniqueGroupList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2022-10-06"},{"lineNumber":140,"author":{"gitId":"Tan-Jin-Waye"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":141,"author":{"gitId":"Tan-Jin-Waye"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"Tan-Jin-Waye":141}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"LianGuoYang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ASSIGNMENT;","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"LianGuoYang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GROUP_1;","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"LianGuoYang"},"content":"import static seedu.address.testutil.TypicalPersons.ALILI;","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2020-12-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"LianGuoYang"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":57,"author":{"gitId":"LianGuoYang"},"content":"    public void testHashCode() {","lastModifiedDate":"2022-10-05"},{"lineNumber":58,"author":{"gitId":"LianGuoYang"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2022-10-05"},{"lineNumber":59,"author":{"gitId":"LianGuoYang"},"content":"        Person aliceCopy2 \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2022-10-05"},{"lineNumber":60,"author":{"gitId":"LianGuoYang"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":61,"author":{"gitId":"LianGuoYang"},"content":"        assertTrue(aliceCopy.hashCode() \u003d\u003d aliceCopy2.hashCode());","lastModifiedDate":"2022-10-05"},{"lineNumber":62,"author":{"gitId":"LianGuoYang"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":63,"author":{"gitId":"LianGuoYang"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":64,"author":{"gitId":"LianGuoYang"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":65,"author":{"gitId":"LianGuoYang"},"content":"    public void testToString() {","lastModifiedDate":"2022-10-05"},{"lineNumber":66,"author":{"gitId":"LianGuoYang"},"content":"        Person aliliCopy \u003d new PersonBuilder(ALILI).build();","lastModifiedDate":"2022-10-05"},{"lineNumber":67,"author":{"gitId":"LianGuoYang"},"content":"        String str \u003d \"Alili Pauline; \"","lastModifiedDate":"2022-10-05"},{"lineNumber":68,"author":{"gitId":"LianGuoYang"},"content":"                + \"Phone: 94351253; \"","lastModifiedDate":"2022-10-05"},{"lineNumber":69,"author":{"gitId":"LianGuoYang"},"content":"                + \"Email: alice@example.com; \"","lastModifiedDate":"2022-10-05"},{"lineNumber":70,"author":{"gitId":"LianGuoYang"},"content":"                + \"Address: 123, Jurong West Ave 6, #08-111; \"","lastModifiedDate":"2022-10-05"},{"lineNumber":71,"author":{"gitId":"LianGuoYang"},"content":"                + \"Tags: [friends]; \"","lastModifiedDate":"2022-10-05"},{"lineNumber":72,"author":{"gitId":"LianGuoYang"},"content":"                + \"Assignment: Group 1 [Midterms]\";","lastModifiedDate":"2022-10-05"},{"lineNumber":73,"author":{"gitId":"LianGuoYang"},"content":"        assertTrue(aliliCopy.toString().equals(str));","lastModifiedDate":"2022-10-05"},{"lineNumber":74,"author":{"gitId":"LianGuoYang"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":75,"author":{"gitId":"LianGuoYang"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":113,"author":{"gitId":"LianGuoYang"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":114,"author":{"gitId":"LianGuoYang"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2022-10-05"},{"lineNumber":115,"author":{"gitId":"LianGuoYang"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAssignments(VALID_GROUP_1, VALID_ASSIGNMENT).build();","lastModifiedDate":"2022-10-05"},{"lineNumber":116,"author":{"gitId":"LianGuoYang"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2022-10-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"-":91,"LianGuoYang":27}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"LianGuoYang"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"LianGuoYang"},"content":"import seedu.address.model.assignment.Assignment;","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"LianGuoYang"},"content":"    private static final HashMap\u003cString, ArrayList\u003cAssignment\u003e\u003e VALID_ASSIGNMENT \u003d BENSON.getAssignments();","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"LianGuoYang"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2022-10-04"},{"lineNumber":48,"author":{"gitId":"LianGuoYang"},"content":"                        VALID_ADDRESS, VALID_TAGS, VALID_ASSIGNMENT);","lastModifiedDate":"2022-10-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"LianGuoYang"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2022-10-04"},{"lineNumber":56,"author":{"gitId":"LianGuoYang"},"content":"                VALID_ADDRESS, VALID_TAGS, VALID_ASSIGNMENT);","lastModifiedDate":"2022-10-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"LianGuoYang"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2022-10-04"},{"lineNumber":65,"author":{"gitId":"LianGuoYang"},"content":"                        VALID_ADDRESS, VALID_TAGS, VALID_ASSIGNMENT);","lastModifiedDate":"2022-10-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"LianGuoYang"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL,","lastModifiedDate":"2022-10-04"},{"lineNumber":73,"author":{"gitId":"LianGuoYang"},"content":"                VALID_ADDRESS, VALID_TAGS, VALID_ASSIGNMENT);","lastModifiedDate":"2022-10-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"LianGuoYang"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL,","lastModifiedDate":"2022-10-04"},{"lineNumber":82,"author":{"gitId":"LianGuoYang"},"content":"                        VALID_ADDRESS, VALID_TAGS, VALID_ASSIGNMENT);","lastModifiedDate":"2022-10-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"LianGuoYang"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null,","lastModifiedDate":"2022-10-04"},{"lineNumber":90,"author":{"gitId":"LianGuoYang"},"content":"                VALID_ADDRESS, VALID_TAGS, VALID_ASSIGNMENT);","lastModifiedDate":"2022-10-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"LianGuoYang"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2022-10-04"},{"lineNumber":99,"author":{"gitId":"LianGuoYang"},"content":"                        INVALID_ADDRESS, VALID_TAGS, VALID_ASSIGNMENT);","lastModifiedDate":"2022-10-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"LianGuoYang"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2022-10-04"},{"lineNumber":107,"author":{"gitId":"LianGuoYang"},"content":"                null, VALID_TAGS, VALID_ASSIGNMENT);","lastModifiedDate":"2022-10-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"LianGuoYang"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2022-10-04"},{"lineNumber":118,"author":{"gitId":"LianGuoYang"},"content":"                        VALID_ADDRESS, invalidTags, VALID_ASSIGNMENT);","lastModifiedDate":"2022-10-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":101,"LianGuoYang":21}},{"path":"src/test/java/seedu/address/testutil/GroupBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tan-Jin-Waye"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"Tan-Jin-Waye"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"Tan-Jin-Waye"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"Tan-Jin-Waye"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"Tan-Jin-Waye"},"content":"import seedu.address.model.group.GroupName;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"Tan-Jin-Waye"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"Tan-Jin-Waye"},"content":"/**","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"Tan-Jin-Waye"},"content":" * A utility class to help with building Group objects.","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"Tan-Jin-Waye"},"content":" */","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"Tan-Jin-Waye"},"content":"public class GroupBuilder {","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"Tan-Jin-Waye"},"content":"    public static final String DEFAULT_NAME \u003d \"CS2103T Team Project\";","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"Tan-Jin-Waye"},"content":"    public static final Person MEMBER_ALICE \u003d TypicalPersons.ALICE;","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"Tan-Jin-Waye"},"content":"    public static final Person MEMBER_BOB \u003d TypicalPersons.BOB;","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"Tan-Jin-Waye"},"content":"    public static final Person MEMBER_CARL \u003d TypicalPersons.CARL;","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"Tan-Jin-Waye"},"content":"    private GroupName name;","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"Tan-Jin-Waye"},"content":"    private Set\u003cPerson\u003e members;","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"Tan-Jin-Waye"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"Tan-Jin-Waye"},"content":"     * Creates a {@code GroupBuilder} with the default details.","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"Tan-Jin-Waye"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"Tan-Jin-Waye"},"content":"    public GroupBuilder() {","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"Tan-Jin-Waye"},"content":"        name \u003d new GroupName(DEFAULT_NAME);","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"Tan-Jin-Waye"},"content":"        members \u003d makeDefaultMemberSet();","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"Tan-Jin-Waye"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"Tan-Jin-Waye"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"Tan-Jin-Waye"},"content":"     * Initializes the GroupBuilder with the data of {@code groupToCopy}.","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"Tan-Jin-Waye"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"Tan-Jin-Waye"},"content":"    public GroupBuilder(Group groupToCopy) {","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"Tan-Jin-Waye"},"content":"        name \u003d groupToCopy.getName();","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"Tan-Jin-Waye"},"content":"        members \u003d new HashSet\u003c\u003e(groupToCopy.getMembers());","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"Tan-Jin-Waye"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"Tan-Jin-Waye"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"Tan-Jin-Waye"},"content":"     * Sets the {@code name} of the {@code Group} that we are building.","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"Tan-Jin-Waye"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":42,"author":{"gitId":"Tan-Jin-Waye"},"content":"    public GroupBuilder withName(String name) {","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"Tan-Jin-Waye"},"content":"        this.name \u003d new GroupName(name);","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"Tan-Jin-Waye"},"content":"        return this;","lastModifiedDate":"2022-10-06"},{"lineNumber":45,"author":{"gitId":"Tan-Jin-Waye"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":46,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":47,"author":{"gitId":"Tan-Jin-Waye"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":48,"author":{"gitId":"Tan-Jin-Waye"},"content":"     * Sets the {@code members} Set of the {@code Group} that we are building.","lastModifiedDate":"2022-10-06"},{"lineNumber":49,"author":{"gitId":"Tan-Jin-Waye"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":50,"author":{"gitId":"Tan-Jin-Waye"},"content":"    public GroupBuilder withMembers(Person... members) {","lastModifiedDate":"2022-10-06"},{"lineNumber":51,"author":{"gitId":"Tan-Jin-Waye"},"content":"        Set\u003cPerson\u003e newMembers \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-06"},{"lineNumber":52,"author":{"gitId":"Tan-Jin-Waye"},"content":"        for (Person p : members) {","lastModifiedDate":"2022-10-06"},{"lineNumber":53,"author":{"gitId":"Tan-Jin-Waye"},"content":"            newMembers.add(p);","lastModifiedDate":"2022-10-06"},{"lineNumber":54,"author":{"gitId":"Tan-Jin-Waye"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":55,"author":{"gitId":"Tan-Jin-Waye"},"content":"        this.members \u003d newMembers;","lastModifiedDate":"2022-10-06"},{"lineNumber":56,"author":{"gitId":"Tan-Jin-Waye"},"content":"        return this;","lastModifiedDate":"2022-10-06"},{"lineNumber":57,"author":{"gitId":"Tan-Jin-Waye"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":58,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":59,"author":{"gitId":"Tan-Jin-Waye"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":60,"author":{"gitId":"Tan-Jin-Waye"},"content":"     * Creates a {@code members} Set containing the data derived from TypicalPersons.","lastModifiedDate":"2022-10-06"},{"lineNumber":61,"author":{"gitId":"Tan-Jin-Waye"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":62,"author":{"gitId":"Tan-Jin-Waye"},"content":"    private Set\u003cPerson\u003e makeDefaultMemberSet() {","lastModifiedDate":"2022-10-06"},{"lineNumber":63,"author":{"gitId":"Tan-Jin-Waye"},"content":"        Set\u003cPerson\u003e defaultSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-06"},{"lineNumber":64,"author":{"gitId":"Tan-Jin-Waye"},"content":"        defaultSet.add(MEMBER_ALICE);","lastModifiedDate":"2022-10-06"},{"lineNumber":65,"author":{"gitId":"Tan-Jin-Waye"},"content":"        defaultSet.add(MEMBER_BOB);","lastModifiedDate":"2022-10-06"},{"lineNumber":66,"author":{"gitId":"Tan-Jin-Waye"},"content":"        defaultSet.add(MEMBER_CARL);","lastModifiedDate":"2022-10-06"},{"lineNumber":67,"author":{"gitId":"Tan-Jin-Waye"},"content":"        return defaultSet;","lastModifiedDate":"2022-10-06"},{"lineNumber":68,"author":{"gitId":"Tan-Jin-Waye"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":69,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":70,"author":{"gitId":"Tan-Jin-Waye"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":71,"author":{"gitId":"Tan-Jin-Waye"},"content":"    public Group build() {","lastModifiedDate":"2022-10-06"},{"lineNumber":72,"author":{"gitId":"Tan-Jin-Waye"},"content":"        return new Group(name, members);","lastModifiedDate":"2022-10-06"},{"lineNumber":73,"author":{"gitId":"Tan-Jin-Waye"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":74,"author":{"gitId":"Tan-Jin-Waye"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"Tan-Jin-Waye":74}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"LianGuoYang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"LianGuoYang"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":8,"author":{"gitId":"LianGuoYang"},"content":"import seedu.address.model.assignment.Assignment;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"LianGuoYang"},"content":"    public static final String DEFAULT_GROUP \u003d \"GROUP 1\";","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"LianGuoYang"},"content":"    public static final String DEFAULT_ASSIGNMENT \u003d \"Assignment 0\";","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"LianGuoYang"},"content":"    private HashMap\u003cString, ArrayList\u003cAssignment\u003e\u003e assignments;","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"LianGuoYang"},"content":"        assignments \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"LianGuoYang"},"content":"        assignments \u003d new HashMap\u003c\u003e(personToCopy.getAssignments());","lastModifiedDate":"2022-10-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":100,"author":{"gitId":"LianGuoYang"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":101,"author":{"gitId":"LianGuoYang"},"content":"     * Parses the {@code Assignments} into a {@code HashMap\u003cString, ArrayList\u003cAssignment\u003e\u003e}","lastModifiedDate":"2022-10-04"},{"lineNumber":102,"author":{"gitId":"LianGuoYang"},"content":"     * and set it to the {@code Person} that we are building.","lastModifiedDate":"2022-10-04"},{"lineNumber":103,"author":{"gitId":"LianGuoYang"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":104,"author":{"gitId":"LianGuoYang"},"content":"    public PersonBuilder withAssignments(String group, String assignment) {","lastModifiedDate":"2022-10-05"},{"lineNumber":105,"author":{"gitId":"LianGuoYang"},"content":"        ArrayList\u003cAssignment\u003e assignmentList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-04"},{"lineNumber":106,"author":{"gitId":"LianGuoYang"},"content":"        if (assignments.containsKey(group)) {","lastModifiedDate":"2022-10-05"},{"lineNumber":107,"author":{"gitId":"LianGuoYang"},"content":"            assignmentList \u003d assignments.get(group);","lastModifiedDate":"2022-10-05"},{"lineNumber":108,"author":{"gitId":"LianGuoYang"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":109,"author":{"gitId":"LianGuoYang"},"content":"        assignmentList.add(new Assignment(assignment));","lastModifiedDate":"2022-10-05"},{"lineNumber":110,"author":{"gitId":"LianGuoYang"},"content":"        this.assignments.put(group, assignmentList);","lastModifiedDate":"2022-10-05"},{"lineNumber":111,"author":{"gitId":"LianGuoYang"},"content":"        return this;","lastModifiedDate":"2022-10-04"},{"lineNumber":112,"author":{"gitId":"LianGuoYang"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":113,"author":{"gitId":"LianGuoYang"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":115,"author":{"gitId":"LianGuoYang"},"content":"        return new Person(name, phone, email, address, tags, assignments);","lastModifiedDate":"2022-10-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"-":95,"LianGuoYang":23}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"LianGuoYang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUP;","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"LianGuoYang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK;","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":13,"author":{"gitId":"zylee348"},"content":"import seedu.address.logic.commands.AddUserCommand;","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"zylee348"},"content":"        return AddUserCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2022-10-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"LianGuoYang"},"content":"        person.getAssignments().forEach((key, value) -\u003e sb.append(","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"LianGuoYang"},"content":"                PREFIX_NAME + person.getName().fullName + \" \"","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"LianGuoYang"},"content":"                        + PREFIX_GROUP + key + \" \"","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"LianGuoYang"},"content":"                        + PREFIX_TASK + value + \" \")","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"LianGuoYang"},"content":"        );","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":67,"author":{"gitId":"LianGuoYang"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"zylee348":2,"-":60,"LianGuoYang":8}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\").build();","lastModifiedDate":"2018-03-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":50,"author":{"gitId":"LianGuoYang"},"content":"    public static final Person ALILI \u003d new PersonBuilder().withName(\"Alili Pauline\")","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"LianGuoYang"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"LianGuoYang"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2022-10-05"},{"lineNumber":53,"author":{"gitId":"LianGuoYang"},"content":"            .withTags(\"friends\")","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"LianGuoYang"},"content":"            .withAssignments(\"Group 1\", \"Midterms\").build();","lastModifiedDate":"2022-10-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2017-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"-":76,"LianGuoYang":5}}]
