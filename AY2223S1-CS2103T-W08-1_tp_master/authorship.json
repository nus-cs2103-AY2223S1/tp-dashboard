[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"TZL0"},"content":"[![CI Status](https://github.com/AY2223S1-CS2103T-W08-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S1-CS2103T-W08-1/tp/actions)","lastModifiedDate":"2022-09-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"guokweijie"},"content":"# About the Project","lastModifiedDate":"2022-09-27"},{"lineNumber":6,"author":{"gitId":"guokweijie"},"content":"**HealthContact** is a desktop application that makes managing patient details easy and convenient for polyclinics. \u003cbr\u003e","lastModifiedDate":"2022-09-27"},{"lineNumber":7,"author":{"gitId":"guokweijie"},"content":"* It is optimised for use via a **Command Line Interface (CLI)**, suited for people who can **type fast** and prefer","lastModifiedDate":"2022-09-27"},{"lineNumber":8,"author":{"gitId":"guokweijie"},"content":"typing to mouse/voice commands.","lastModifiedDate":"2022-09-27"},{"lineNumber":9,"author":{"gitId":"guokweijie"},"content":"* It is written in **Java**, and has about 10 kLoC.","lastModifiedDate":"2022-09-27"},{"lineNumber":10,"author":{"gitId":"guokweijie"},"content":"* It is written in **OOP fashion**.","lastModifiedDate":"2022-09-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"* It comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":13,"author":{"gitId":"TZL0"},"content":"# Acknowledgement","lastModifiedDate":"2022-09-27"},{"lineNumber":14,"author":{"gitId":"TZL0"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2022-09-27"}],"authorContributionMap":{"guokweijie":6,"TZL0":4,"-":4}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"wadia82"},"content":"### Guok Wei Jie","lastModifiedDate":"2022-09-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"wadia82"},"content":"\u003cimg src\u003d\"images/guokweijie.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"wadia82"},"content":"[[github](https://github.com/guokweijie)]","lastModifiedDate":"2022-09-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"wadia82"},"content":"[[portfolio](team/guokweijie.md)]","lastModifiedDate":"2022-09-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"wadia82"},"content":"* Role: Team Lead","lastModifiedDate":"2022-09-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"wadia82"},"content":"### Wadia Ganim","lastModifiedDate":"2022-09-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"wadia82"},"content":"\u003cimg src\u003d\"images/wadia82.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"wadia82"},"content":"[[github](http://github.com/wadia82)]","lastModifiedDate":"2022-09-27"},{"lineNumber":27,"author":{"gitId":"wadia82"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":28,"author":{"gitId":"wadia82"},"content":"[[portfolio](team/wadia82.md)]","lastModifiedDate":"2022-09-27"},{"lineNumber":29,"author":{"gitId":"wadia82"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":30,"author":{"gitId":"wadia82"},"content":"* Role: Scheduling and Tracking","lastModifiedDate":"2022-09-27"},{"lineNumber":31,"author":{"gitId":"wadia82"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":32,"author":{"gitId":"wadia82"},"content":"### Fu Zanwen","lastModifiedDate":"2022-09-27"},{"lineNumber":33,"author":{"gitId":"wadia82"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":34,"author":{"gitId":"wadia82"},"content":"\u003cimg src\u003d\"images/fuzanwenn.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-27"},{"lineNumber":35,"author":{"gitId":"wadia82"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":36,"author":{"gitId":"wadia82"},"content":"[[github](http://github.com/Fuzanwenn)]","lastModifiedDate":"2022-09-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"wadia82"},"content":"[[portfolio](team/fuzanwenn.md)]","lastModifiedDate":"2022-09-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"wadia82"},"content":"* Role: Documentation","lastModifiedDate":"2022-09-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"wadia82"},"content":"### Gregory Wong Twee Loong","lastModifiedDate":"2022-09-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"wadia82"},"content":"\u003cimg src\u003d\"images/specops2016.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":46,"author":{"gitId":"wadia82"},"content":"[[github](http://github.com/SpecOps2016)]","lastModifiedDate":"2022-09-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"wadia82"},"content":"[[portfolio](team/specops2016.md)]","lastModifiedDate":"2022-09-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"wadia82"},"content":"* Role: Testing","lastModifiedDate":"2022-09-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"wadia82"},"content":"### Li Tianze","lastModifiedDate":"2022-09-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"wadia82"},"content":"\u003cimg src\u003d\"images/tzl0.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"wadia82"},"content":"[[github](http://github.com/TZL0)]","lastModifiedDate":"2022-09-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"wadia82"},"content":"[[portfolio](team/tzl0.md)]","lastModifiedDate":"2022-09-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"wadia82"},"content":"* Role: Integration","lastModifiedDate":"2022-09-27"}],"authorContributionMap":{"wadia82":30,"-":30}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"TZL0"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PatientListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2022-10-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"TZL0"},"content":"* depends on some classes in the `Model` component, as it displays `Patient` object residing in the `Model`.","lastModifiedDate":"2022-10-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"guokweijie"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a patient).","lastModifiedDate":"2022-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"TZL0"},"content":"* stores the address book data i.e., all `Patient` objects (which are contained in a `UniquePatientList` object).","lastModifiedDate":"2022-10-16"},{"lineNumber":125,"author":{"gitId":"TZL0"},"content":"* stores the currently \u0027selected\u0027 `Patient` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPatient\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2022-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"TZL0"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Patient` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Patient` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2022-10-16"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"guokweijie"},"content":"Step 2. The user executes `delete 5` command to delete the 5th patient in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2022-10-13"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"guokweijie"},"content":"Step 3. The user executes `add n/David …​` to add a new patient. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2022-10-13"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"guokweijie"},"content":"Step 4. The user now decides that adding the patient was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2022-10-13"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"guokweijie"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the patient being deleted).","lastModifiedDate":"2022-10-13"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"guokweijie"},"content":"**Product scope**","lastModifiedDate":"2022-09-29"},{"lineNumber":257,"author":{"gitId":"guokweijie"},"content":"* Only provides necessary information that we want to retrieve for patients, except sensitive medical information ","lastModifiedDate":"2022-09-29"},{"lineNumber":258,"author":{"gitId":"guokweijie"},"content":"like health problems","lastModifiedDate":"2022-09-29"},{"lineNumber":259,"author":{"gitId":"guokweijie"},"content":"* Does not execute any of the real-world tasks except to remind the admin staff","lastModifiedDate":"2022-09-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"* has a need to manage a significant number of contacts","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":267,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"**Value proposition**: manage contacts faster than a typical mouse/GUI driven app","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"| Priority | As a …​                                    | I want to …​                  | So that I can…​                                                          |","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"guokweijie"},"content":"|----------|--------------------------------------------|-------------------------------|--------------------------------------------------------------------------|","lastModifiedDate":"2022-09-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"| `* * *`  | new user                                   | see usage instructions        | refer to instructions when I forget how to use the App                   |","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"guokweijie"},"content":"| `* * *`  | user                                       | add a new patient             | I can keep track of patient details                                      |","lastModifiedDate":"2022-09-29"},{"lineNumber":281,"author":{"gitId":"guokweijie"},"content":"| `* * *`  | user                                       | export to excel file          | share the information with others when necessary                         |","lastModifiedDate":"2022-09-29"},{"lineNumber":282,"author":{"gitId":"guokweijie"},"content":"| `* * *`  | user                                       | delete a patient              | remove patient entries that I no longer need                             |","lastModifiedDate":"2022-09-29"},{"lineNumber":283,"author":{"gitId":"guokweijie"},"content":"| `* * *`  | user                                       | find a patient by name        | look up a patient\u0027s details without having to go through the entire list |","lastModifiedDate":"2022-09-29"},{"lineNumber":284,"author":{"gitId":"guokweijie"},"content":"| `*`      | user                                       | hide private contact details  | minimize chance of someone else seeing them by accident                  |","lastModifiedDate":"2022-09-29"},{"lineNumber":285,"author":{"gitId":"guokweijie"},"content":"| `* *`    | user with many patients | sort patients by medical test | find out which patients are doing a particular medical test              |","lastModifiedDate":"2022-09-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"(For all use cases below, the **System** is the `AddressBook` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"guokweijie"},"content":"**Use case: Edit a patient**","lastModifiedDate":"2022-10-13"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"guokweijie"},"content":"1.  User requests to find a patient","lastModifiedDate":"2022-10-13"},{"lineNumber":298,"author":{"gitId":"guokweijie"},"content":"2.  AddressBook shows the detailed information about the patient","lastModifiedDate":"2022-10-13"},{"lineNumber":299,"author":{"gitId":"guokweijie"},"content":"3.  User requests to edit specific information about the patient","lastModifiedDate":"2022-10-13"},{"lineNumber":300,"author":{"gitId":"guokweijie"},"content":"4.  AddressBook edits the patient","lastModifiedDate":"2022-10-13"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":305,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":306,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"Fuzanwenn"},"content":"* 3a. The given name is invalid.","lastModifiedDate":"2022-09-27"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    * 3a1. AddressBook shows an error message.","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"guokweijie"},"content":"**Use case: Add a patient**","lastModifiedDate":"2022-10-13"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":320,"author":{"gitId":"SpecOps2016"},"content":"**MSS**","lastModifiedDate":"2022-09-27"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":322,"author":{"gitId":"guokweijie"},"content":"1.  User requests to add a patient","lastModifiedDate":"2022-10-13"},{"lineNumber":323,"author":{"gitId":"guokweijie"},"content":"2.  AddressBook requests for details of the patient to add","lastModifiedDate":"2022-10-13"},{"lineNumber":324,"author":{"gitId":"SpecOps2016"},"content":"3.  User enters the requested details.","lastModifiedDate":"2022-09-27"},{"lineNumber":325,"author":{"gitId":"guokweijie"},"content":"4.  AddressBook adds the patient","lastModifiedDate":"2022-10-13"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":327,"author":{"gitId":"SpecOps2016"},"content":"    Use case ends.","lastModifiedDate":"2022-09-27"},{"lineNumber":328,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":329,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":330,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":331,"author":{"gitId":"SpecOps2016"},"content":"**Extensions**","lastModifiedDate":"2022-09-27"},{"lineNumber":332,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":333,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":334,"author":{"gitId":"SpecOps2016"},"content":"* 3a. The format for add command is not followed.","lastModifiedDate":"2022-09-27"},{"lineNumber":335,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":336,"author":{"gitId":"SpecOps2016"},"content":"    * 3a1. AddressBook shows an error message.","lastModifiedDate":"2022-09-27"},{"lineNumber":337,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":338,"author":{"gitId":"SpecOps2016"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-09-27"},{"lineNumber":339,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"guokweijie"},"content":"2. Should be able to hold up to 1000 patients without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2022-10-13"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"guokweijie"},"content":"* **Doctor**: A patient who uses the app","lastModifiedDate":"2022-10-13"},{"lineNumber":349,"author":{"gitId":"Fuzanwenn"},"content":"* **Patient**: A customer who goes to see a doctor","lastModifiedDate":"2022-09-28"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":351,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":353,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":374,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"guokweijie"},"content":"### Deleting a patient","lastModifiedDate":"2022-10-13"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"guokweijie"},"content":"1. Deleting a patient while all patients are being shown","lastModifiedDate":"2022-10-13"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"guokweijie"},"content":"   1. Prerequisites: List all patients using the `list` command. Multiple patients in the list.","lastModifiedDate":"2022-10-13"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"guokweijie"},"content":"      Expected: No patient is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2022-10-13"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"guokweijie":31,"Fuzanwenn":2,"SpecOps2016":18,"TZL0":5,"-":346}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"guokweijie"},"content":"# User Guide","lastModifiedDate":"2022-09-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"guokweijie"},"content":"* Adding a patient (add)","lastModifiedDate":"2022-09-27"},{"lineNumber":5,"author":{"gitId":"guokweijie"},"content":"* Search for a patient (search)","lastModifiedDate":"2022-09-27"},{"lineNumber":6,"author":{"gitId":"guokweijie"},"content":"* Edit patient details (edit)","lastModifiedDate":"2022-09-27"},{"lineNumber":7,"author":{"gitId":"guokweijie"},"content":"* Filter patients (filter)","lastModifiedDate":"2022-09-27"},{"lineNumber":8,"author":{"gitId":"guokweijie"},"content":"* Sort (sort)","lastModifiedDate":"2022-09-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"guokweijie"},"content":"### Adding a patient: `add` [coming soon]","lastModifiedDate":"2022-09-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":13,"author":{"gitId":"guokweijie"},"content":"Adds a patient and his/her details, such as age, contact number and appointment date, to the app.","lastModifiedDate":"2022-09-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":15,"author":{"gitId":"guokweijie"},"content":"Format with example of usage: (in Command Terminal)","lastModifiedDate":"2022-09-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"guokweijie"},"content":"````","lastModifiedDate":"2022-09-27"},{"lineNumber":18,"author":{"gitId":"guokweijie"},"content":"\u003e add","lastModifiedDate":"2022-09-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"guokweijie"},"content":"Enter patient’s name:","lastModifiedDate":"2022-09-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"guokweijie"},"content":"\u003e Mrs Angeline Tan","lastModifiedDate":"2022-09-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"guokweijie"},"content":"Enter patient’s age:","lastModifiedDate":"2022-09-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"guokweijie"},"content":"\u003e 35","lastModifiedDate":"2022-09-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"guokweijie"},"content":"Enter patient’s contact number:","lastModifiedDate":"2022-09-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"guokweijie"},"content":"\u003e 91234567","lastModifiedDate":"2022-09-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"guokweijie"},"content":"Enter patient’s next appointment date:","lastModifiedDate":"2022-09-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"guokweijie"},"content":"\u003e 5/10/22","lastModifiedDate":"2022-09-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"guokweijie"},"content":"Mrs Angeline Tan has been added!","lastModifiedDate":"2022-09-27"},{"lineNumber":37,"author":{"gitId":"guokweijie"},"content":"Name: Mrs Angeline Tan","lastModifiedDate":"2022-09-27"},{"lineNumber":38,"author":{"gitId":"guokweijie"},"content":"Age: 35","lastModifiedDate":"2022-09-27"},{"lineNumber":39,"author":{"gitId":"guokweijie"},"content":"Contact number: 91234567","lastModifiedDate":"2022-09-27"},{"lineNumber":40,"author":{"gitId":"guokweijie"},"content":"Appointment Date: 5/10/22","lastModifiedDate":"2022-09-27"},{"lineNumber":41,"author":{"gitId":"guokweijie"},"content":"````","lastModifiedDate":"2022-09-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"guokweijie"},"content":"### Editing a patient: `edit`","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"Fuzanwenn"},"content":"Edit a patient’s information, such as age, contact number, appointment date and doctor’s notes.","lastModifiedDate":"2022-09-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"TZL0"},"content":"Format: `edit Patient Title: content`","lastModifiedDate":"2022-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"guokweijie"},"content":"* If there is no such patient or task to edit, it will show an error.","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"Fuzanwenn"},"content":"* `edit John name: Jack` John’s name has been changed to Jack!","lastModifiedDate":"2022-09-27"},{"lineNumber":54,"author":{"gitId":"Fuzanwenn"},"content":"* `edit John number: 12345678` John’s number has been changed to 12345678.","lastModifiedDate":"2022-09-27"},{"lineNumber":55,"author":{"gitId":"Fuzanwenn"},"content":"* `edit John date: 2019-12-25` John’s appointment date has been changed to Dec 25th, 2019.","lastModifiedDate":"2022-09-27"},{"lineNumber":56,"author":{"gitId":"Fuzanwenn"},"content":"* `edit John note: use medicine` Doctor’s notes for John has been changed to use medicine.","lastModifiedDate":"2022-09-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":58,"author":{"gitId":"guokweijie"},"content":"### Filtering a patient: `filter` [coming soon]","lastModifiedDate":"2022-10-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":60,"author":{"gitId":"TZL0"},"content":"Shows the patients that satisfy given condition","lastModifiedDate":"2022-09-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":62,"author":{"gitId":"TZL0"},"content":"Format:","lastModifiedDate":"2022-09-27"},{"lineNumber":63,"author":{"gitId":"TZL0"},"content":"```","lastModifiedDate":"2022-09-27"},{"lineNumber":64,"author":{"gitId":"TZL0"},"content":"filter \u003cPatient Information Attribute\u003e \u003coperator\u003e \u003cvalue\u003e","lastModifiedDate":"2022-09-27"},{"lineNumber":65,"author":{"gitId":"TZL0"},"content":"```","lastModifiedDate":"2022-09-27"},{"lineNumber":66,"author":{"gitId":"TZL0"},"content":"where `operator` supports `\u003e`, `\u003c`, `\u003e\u003d`, `\u003c\u003d`, `\u003d\u003d`","lastModifiedDate":"2022-09-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":68,"author":{"gitId":"TZL0"},"content":"If there is no such information attributes, shows error message.","lastModifiedDate":"2022-09-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-09-27"},{"lineNumber":71,"author":{"gitId":"TZL0"},"content":"```","lastModifiedDate":"2022-09-27"},{"lineNumber":72,"author":{"gitId":"TZL0"},"content":"\u003e filter age \u003e 25","lastModifiedDate":"2022-09-27"},{"lineNumber":73,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":74,"author":{"gitId":"TZL0"},"content":"Here are the patient that age \u003e 25:","lastModifiedDate":"2022-09-27"},{"lineNumber":75,"author":{"gitId":"TZL0"},"content":"    1. Jack","lastModifiedDate":"2022-09-27"},{"lineNumber":76,"author":{"gitId":"TZL0"},"content":"    2. Peter","lastModifiedDate":"2022-09-27"},{"lineNumber":77,"author":{"gitId":"TZL0"},"content":"    3. Larry","lastModifiedDate":"2022-09-27"},{"lineNumber":78,"author":{"gitId":"TZL0"},"content":"```","lastModifiedDate":"2022-09-27"},{"lineNumber":79,"author":{"gitId":"TZL0"},"content":"```","lastModifiedDate":"2022-09-27"},{"lineNumber":80,"author":{"gitId":"TZL0"},"content":"\u003e filter appointment date \u003e 2019-12-25","lastModifiedDate":"2022-09-27"},{"lineNumber":81,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":82,"author":{"gitId":"TZL0"},"content":"Here are the patient that date \u003e 2019-12-25:","lastModifiedDate":"2022-09-27"},{"lineNumber":83,"author":{"gitId":"TZL0"},"content":"    1. Jack","lastModifiedDate":"2022-09-27"},{"lineNumber":84,"author":{"gitId":"TZL0"},"content":"    2. Larry","lastModifiedDate":"2022-09-27"},{"lineNumber":85,"author":{"gitId":"TZL0"},"content":"```","lastModifiedDate":"2022-09-27"},{"lineNumber":86,"author":{"gitId":"TZL0"},"content":"```","lastModifiedDate":"2022-09-27"},{"lineNumber":87,"author":{"gitId":"TZL0"},"content":"\u003e filter favourite food \u003d\u003d Chicken Masala","lastModifiedDate":"2022-09-27"},{"lineNumber":88,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":89,"author":{"gitId":"TZL0"},"content":"Unable to filter patients by favourite food","lastModifiedDate":"2022-09-27"},{"lineNumber":90,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":91,"author":{"gitId":"TZL0"},"content":"```","lastModifiedDate":"2022-09-27"},{"lineNumber":92,"author":{"gitId":"wadia82"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":93,"author":{"gitId":"wadia82"},"content":"### Sorting by criteria: `sort` [coming soon]","lastModifiedDate":"2022-09-28"},{"lineNumber":94,"author":{"gitId":"wadia82"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":95,"author":{"gitId":"wadia82"},"content":"Sorts the patients according to name or appointment date.","lastModifiedDate":"2022-09-28"},{"lineNumber":96,"author":{"gitId":"wadia82"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":97,"author":{"gitId":"wadia82"},"content":"Format :","lastModifiedDate":"2022-09-28"},{"lineNumber":98,"author":{"gitId":"wadia82"},"content":"```","lastModifiedDate":"2022-09-28"},{"lineNumber":99,"author":{"gitId":"wadia82"},"content":"sort by \u003ccriteria\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":100,"author":{"gitId":"wadia82"},"content":"```","lastModifiedDate":"2022-09-28"},{"lineNumber":101,"author":{"gitId":"wadia82"},"content":"where `criteria` can be either `name` or `appointment date`.","lastModifiedDate":"2022-09-28"},{"lineNumber":102,"author":{"gitId":"wadia82"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":103,"author":{"gitId":"wadia82"},"content":"Examples :","lastModifiedDate":"2022-09-28"},{"lineNumber":104,"author":{"gitId":"wadia82"},"content":"```","lastModifiedDate":"2022-09-28"},{"lineNumber":105,"author":{"gitId":"wadia82"},"content":"\u003e sort by appointment date","lastModifiedDate":"2022-09-28"},{"lineNumber":106,"author":{"gitId":"wadia82"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":107,"author":{"gitId":"wadia82"},"content":"Patients sorted by their appointment dates -","lastModifiedDate":"2022-09-28"},{"lineNumber":108,"author":{"gitId":"wadia82"},"content":"Jack Oct 12, 2022","lastModifiedDate":"2022-09-28"},{"lineNumber":109,"author":{"gitId":"wadia82"},"content":"John Oct 20, 2022","lastModifiedDate":"2022-09-28"},{"lineNumber":110,"author":{"gitId":"wadia82"},"content":"Peter Nov 1, 2022","lastModifiedDate":"2022-09-28"},{"lineNumber":111,"author":{"gitId":"wadia82"},"content":"Lara Jan 6, 2023","lastModifiedDate":"2022-09-28"},{"lineNumber":112,"author":{"gitId":"wadia82"},"content":"```","lastModifiedDate":"2022-09-28"},{"lineNumber":113,"author":{"gitId":"wadia82"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":114,"author":{"gitId":"wadia82"},"content":"```","lastModifiedDate":"2022-09-28"},{"lineNumber":115,"author":{"gitId":"wadia82"},"content":"\u003e sort by name","lastModifiedDate":"2022-09-28"},{"lineNumber":116,"author":{"gitId":"wadia82"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":117,"author":{"gitId":"wadia82"},"content":"Patients sorted by name -","lastModifiedDate":"2022-09-28"},{"lineNumber":118,"author":{"gitId":"wadia82"},"content":"Alice","lastModifiedDate":"2022-09-28"},{"lineNumber":119,"author":{"gitId":"wadia82"},"content":"Bob","lastModifiedDate":"2022-09-28"},{"lineNumber":120,"author":{"gitId":"wadia82"},"content":"Jack","lastModifiedDate":"2022-09-28"},{"lineNumber":121,"author":{"gitId":"wadia82"},"content":"John ","lastModifiedDate":"2022-09-28"},{"lineNumber":122,"author":{"gitId":"wadia82"},"content":"Peter","lastModifiedDate":"2022-09-28"},{"lineNumber":123,"author":{"gitId":"wadia82"},"content":"```","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"wadia82":32,"guokweijie":28,"Fuzanwenn":5,"TZL0":29,"-":29}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"TZL0"},"content":"    content: \"HealthConnect\";","lastModifiedDate":"2022-09-27"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"TZL0":1,"-":294}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"user -[USER_COLOR]\u003e ui : \"delete 1\"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"TZL0"},"content":"logic -[LOGIC_COLOR]\u003e model : deletePatient(p)","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveAddressBook(addressBook)","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"TZL0":1,"-":37}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"TZL0"},"content":"AddressBook *-right-\u003e \"1\" UniquePatientList","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"AddressBook *-right-\u003e \"1\" UniqueTagList","lastModifiedDate":"2019-07-30"},{"lineNumber":9,"author":{"gitId":"TZL0"},"content":"UniqueTagList -[hidden]down- UniquePatientList","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"TZL0"},"content":"UniqueTagList -[hidden]down- UniquePatientList","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"UniqueTagList *-right-\u003e \"*\" Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"TZL0"},"content":"UniquePatientList -right-\u003e Patient","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"TZL0"},"content":"Patient -up-\u003e \"*\" Tag","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"TZL0"},"content":"Patient *--\u003e Name","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"TZL0"},"content":"Patient *--\u003e Phone","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"TZL0"},"content":"Patient *--\u003e Email","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"TZL0"},"content":"Patient *--\u003e Address","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"TZL0":9,"-":12}},{"path":"docs/diagrams/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \":DeleteCommandParser\" as DeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"participant \"d:DeleteCommand\" as DeleteCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"[-\u003e LogicManager : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"activate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"create DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"AddressBookParser -\u003e DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"DeleteCommandParser --\u003e AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"AddressBookParser -\u003e DeleteCommandParser : parse(\"1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"create DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"DeleteCommandParser -\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e DeleteCommandParser : d","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"DeleteCommandParser --\u003e AddressBookParser : d","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"DeleteCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"destroy DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"AddressBookParser --\u003e LogicManager : d","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"deactivate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"LogicManager -\u003e DeleteCommand : execute()","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"TZL0"},"content":"DeleteCommand -\u003e Model : deletePatient(1)","lastModifiedDate":"2022-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"Model --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"create CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"activate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"CommandResult --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"deactivate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"TZL0":1,"-":68}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyAddressBook\" as ReadOnlyAddressBook","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"TZL0"},"content":"Class UniquePatientList","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"TZL0"},"content":"Class Patient","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class Address","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"Model .left.\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"ModelManager -left-\u003e \"1\" AddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"TZL0"},"content":"AddressBook *--\u003e \"1\" UniquePatientList","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"TZL0"},"content":"UniquePatientList --\u003e \"~* all\" Patient","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"TZL0"},"content":"Patient *--\u003e Name","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"TZL0"},"content":"Patient *--\u003e Phone","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"TZL0"},"content":"Patient *--\u003e Email","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"TZL0"},"content":"Patient *--\u003e Address","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"TZL0"},"content":"Patient *--\u003e \"*\" Tag","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Phone -[hidden]right-\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"Address -[hidden]right-\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"TZL0"},"content":"ModelManager --\u003e\"~* filtered\" Patient","lastModifiedDate":"2022-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"TZL0":10,"-":40}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUserPrefsStorage\" as UserPrefsStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nStorage\" as Storage","lastModifiedDate":"2022-01-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"package \"AddressBook Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nAddressBookStorage\" as AddressBookStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class JsonAddressBookStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"TZL0"},"content":"Class JsonAdaptedPatient","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Storage -left-|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Storage -right-|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"JsonAddressBookStorage .up.|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"JsonAddressBookStorage ..\u003e JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"TZL0"},"content":"JsonSerializableAddressBook --\u003e \"*\" JsonAdaptedPatient","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"TZL0"},"content":"JsonAdaptedPatient --\u003e \"*\" JsonAdaptedTag","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"TZL0":3,"-":40}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUi\" as Ui","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"TZL0"},"content":"Class PatientListPanel","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"TZL0"},"content":"Class PatientCard","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"TZL0"},"content":"MainWindow *-down-\u003e \"1\" PatientListPanel","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"TZL0"},"content":"PatientListPanel -down-\u003e \"*\" PatientCard","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"TZL0"},"content":"PatientListPanel --|\u003e UiPart","lastModifiedDate":"2022-10-16"},{"lineNumber":46,"author":{"gitId":"TZL0"},"content":"PatientCard --|\u003e UiPart","lastModifiedDate":"2022-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"TZL0"},"content":"PatientCard ..\u003e Model","lastModifiedDate":"2022-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"TZL0"},"content":"PatientListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2022-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"TZL0":8,"-":52}},{"path":"docs/diagrams/tracing/LogicSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-06-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include ../style.puml","lastModifiedDate":"2019-06-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Participant \":LogicManager\" as logic LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":AddressBookParser\" as abp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":EditCommandParser\" as ecp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \"command:EditCommand\" as ec LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"[-\u003e logic : execute","lastModifiedDate":"2019-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"activate logic","lastModifiedDate":"2019-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"logic -\u003e abp ++: parseCommand(commandText)","lastModifiedDate":"2019-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"create ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"abp -\u003e ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"abp -\u003e ecp ++: parse(arguments)","lastModifiedDate":"2019-06-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"create ec","lastModifiedDate":"2019-06-17"},{"lineNumber":16,"author":{"gitId":"TZL0"},"content":"ecp -\u003e ec ++: index, editPatientDescriptor","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"ec --\u003e ecp --","lastModifiedDate":"2019-06-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"ecp --\u003e abp --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"abp --\u003e logic --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-06-17"}],"authorContributionMap":{"TZL0":1,"-":20}},{"path":"docs/team/fuzanwenn.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Fuzanwenn"},"content":"---","lastModifiedDate":"2022-09-27"},{"lineNumber":2,"author":{"gitId":"Fuzanwenn"},"content":"layout: page","lastModifiedDate":"2022-09-27"},{"lineNumber":3,"author":{"gitId":"Fuzanwenn"},"content":"title: Fu Zanwen\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-27"},{"lineNumber":4,"author":{"gitId":"Fuzanwenn"},"content":"---","lastModifiedDate":"2022-09-27"},{"lineNumber":5,"author":{"gitId":"Fuzanwenn"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":6,"author":{"gitId":"Fuzanwenn"},"content":"## Project: HealthContact","lastModifiedDate":"2022-09-27"},{"lineNumber":7,"author":{"gitId":"Fuzanwenn"},"content":"to be added soon","lastModifiedDate":"2022-09-27"},{"lineNumber":8,"author":{"gitId":"Fuzanwenn"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":9,"author":{"gitId":"Fuzanwenn"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-27"},{"lineNumber":10,"author":{"gitId":"Fuzanwenn"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":11,"author":{"gitId":"Fuzanwenn"},"content":"### Code contributed:","lastModifiedDate":"2022-09-27"},{"lineNumber":12,"author":{"gitId":"Fuzanwenn"},"content":"to be added soon","lastModifiedDate":"2022-09-27"},{"lineNumber":13,"author":{"gitId":"Fuzanwenn"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":14,"author":{"gitId":"Fuzanwenn"},"content":"### Enhancements to existing features:","lastModifiedDate":"2022-09-27"},{"lineNumber":15,"author":{"gitId":"Fuzanwenn"},"content":"to be added soon","lastModifiedDate":"2022-09-27"},{"lineNumber":16,"author":{"gitId":"Fuzanwenn"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":17,"author":{"gitId":"Fuzanwenn"},"content":"### Documentation:","lastModifiedDate":"2022-09-27"},{"lineNumber":18,"author":{"gitId":"Fuzanwenn"},"content":"to be added soon","lastModifiedDate":"2022-09-27"},{"lineNumber":19,"author":{"gitId":"Fuzanwenn"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":20,"author":{"gitId":"Fuzanwenn"},"content":"### Contributions to the User Guide:","lastModifiedDate":"2022-09-27"},{"lineNumber":21,"author":{"gitId":"Fuzanwenn"},"content":"to be added soon","lastModifiedDate":"2022-09-27"},{"lineNumber":22,"author":{"gitId":"Fuzanwenn"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":23,"author":{"gitId":"Fuzanwenn"},"content":"### Contributions to the Developer Guide:","lastModifiedDate":"2022-09-27"},{"lineNumber":24,"author":{"gitId":"Fuzanwenn"},"content":"to be added soon","lastModifiedDate":"2022-09-27"},{"lineNumber":25,"author":{"gitId":"Fuzanwenn"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":26,"author":{"gitId":"Fuzanwenn"},"content":"### Contributions to the team-based tasks:","lastModifiedDate":"2022-09-27"},{"lineNumber":27,"author":{"gitId":"Fuzanwenn"},"content":"to be added soon","lastModifiedDate":"2022-09-27"},{"lineNumber":28,"author":{"gitId":"Fuzanwenn"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":29,"author":{"gitId":"Fuzanwenn"},"content":"### Review/mentoring contributions:","lastModifiedDate":"2022-09-27"},{"lineNumber":30,"author":{"gitId":"Fuzanwenn"},"content":"to be added soon","lastModifiedDate":"2022-09-27"},{"lineNumber":31,"author":{"gitId":"Fuzanwenn"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":32,"author":{"gitId":"Fuzanwenn"},"content":"### Contributions beyond the project team:","lastModifiedDate":"2022-09-27"},{"lineNumber":33,"author":{"gitId":"Fuzanwenn"},"content":"to be added soon","lastModifiedDate":"2022-09-27"},{"lineNumber":34,"author":{"gitId":"Fuzanwenn"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":35,"author":{"gitId":"Fuzanwenn"},"content":"### Tools:","lastModifiedDate":"2022-09-27"},{"lineNumber":36,"author":{"gitId":"Fuzanwenn"},"content":"to be added soon","lastModifiedDate":"2022-09-27"},{"lineNumber":37,"author":{"gitId":"Fuzanwenn"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":38,"author":{"gitId":"Fuzanwenn"},"content":"### Project management:","lastModifiedDate":"2022-09-27"},{"lineNumber":39,"author":{"gitId":"Fuzanwenn"},"content":"to be added soon","lastModifiedDate":"2022-09-27"},{"lineNumber":40,"author":{"gitId":"Fuzanwenn"},"content":"","lastModifiedDate":"2022-09-27"}],"authorContributionMap":{"Fuzanwenn":40}},{"path":"docs/team/guokweijie.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"guokweijie"},"content":"---","lastModifiedDate":"2022-09-27"},{"lineNumber":2,"author":{"gitId":"guokweijie"},"content":"layout: page","lastModifiedDate":"2022-09-27"},{"lineNumber":3,"author":{"gitId":"guokweijie"},"content":"title: Guok Wei Jie\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-27"},{"lineNumber":4,"author":{"gitId":"guokweijie"},"content":"---","lastModifiedDate":"2022-09-27"},{"lineNumber":5,"author":{"gitId":"guokweijie"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":6,"author":{"gitId":"guokweijie"},"content":"## Project: HealthContact","lastModifiedDate":"2022-09-27"},{"lineNumber":7,"author":{"gitId":"guokweijie"},"content":"to be added soon","lastModifiedDate":"2022-09-27"},{"lineNumber":8,"author":{"gitId":"guokweijie"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":9,"author":{"gitId":"guokweijie"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-27"},{"lineNumber":10,"author":{"gitId":"guokweijie"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":11,"author":{"gitId":"guokweijie"},"content":"### Code contributed:","lastModifiedDate":"2022-09-27"},{"lineNumber":12,"author":{"gitId":"guokweijie"},"content":"to be added soon","lastModifiedDate":"2022-09-27"},{"lineNumber":13,"author":{"gitId":"guokweijie"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":14,"author":{"gitId":"guokweijie"},"content":"### Enhancements to existing features:","lastModifiedDate":"2022-09-27"},{"lineNumber":15,"author":{"gitId":"guokweijie"},"content":"to be added soon","lastModifiedDate":"2022-09-27"},{"lineNumber":16,"author":{"gitId":"guokweijie"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":17,"author":{"gitId":"guokweijie"},"content":"### Documentation:","lastModifiedDate":"2022-09-27"},{"lineNumber":18,"author":{"gitId":"guokweijie"},"content":"to be added soon","lastModifiedDate":"2022-09-27"},{"lineNumber":19,"author":{"gitId":"guokweijie"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":20,"author":{"gitId":"guokweijie"},"content":"### Contributions to the User Guide:","lastModifiedDate":"2022-09-27"},{"lineNumber":21,"author":{"gitId":"guokweijie"},"content":"to be added soon","lastModifiedDate":"2022-09-27"},{"lineNumber":22,"author":{"gitId":"guokweijie"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":23,"author":{"gitId":"guokweijie"},"content":"### Contributions to the Developer Guide:","lastModifiedDate":"2022-09-27"},{"lineNumber":24,"author":{"gitId":"guokweijie"},"content":"to be added soon","lastModifiedDate":"2022-09-27"},{"lineNumber":25,"author":{"gitId":"guokweijie"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":26,"author":{"gitId":"guokweijie"},"content":"### Contributions to the team-based tasks:","lastModifiedDate":"2022-09-27"},{"lineNumber":27,"author":{"gitId":"guokweijie"},"content":"to be added soon","lastModifiedDate":"2022-09-27"},{"lineNumber":28,"author":{"gitId":"guokweijie"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":29,"author":{"gitId":"guokweijie"},"content":"### Review/mentoring contributions:","lastModifiedDate":"2022-09-27"},{"lineNumber":30,"author":{"gitId":"guokweijie"},"content":"to be added soon","lastModifiedDate":"2022-09-27"},{"lineNumber":31,"author":{"gitId":"guokweijie"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":32,"author":{"gitId":"guokweijie"},"content":"### Contributions beyond the project team:","lastModifiedDate":"2022-09-27"},{"lineNumber":33,"author":{"gitId":"guokweijie"},"content":"to be added soon","lastModifiedDate":"2022-09-27"},{"lineNumber":34,"author":{"gitId":"guokweijie"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":35,"author":{"gitId":"guokweijie"},"content":"### Tools:","lastModifiedDate":"2022-09-27"},{"lineNumber":36,"author":{"gitId":"guokweijie"},"content":"to be added soon","lastModifiedDate":"2022-09-27"},{"lineNumber":37,"author":{"gitId":"guokweijie"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":38,"author":{"gitId":"guokweijie"},"content":"### Project management:","lastModifiedDate":"2022-09-27"},{"lineNumber":39,"author":{"gitId":"guokweijie"},"content":"to be added soon","lastModifiedDate":"2022-09-27"},{"lineNumber":40,"author":{"gitId":"guokweijie"},"content":"","lastModifiedDate":"2022-09-27"}],"authorContributionMap":{"guokweijie":40}},{"path":"docs/team/specops2016.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"SpecOps2016"},"content":"---","lastModifiedDate":"2022-09-27"},{"lineNumber":2,"author":{"gitId":"SpecOps2016"},"content":"layout: page","lastModifiedDate":"2022-09-27"},{"lineNumber":3,"author":{"gitId":"SpecOps2016"},"content":"title: Gregory Wong\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-27"},{"lineNumber":4,"author":{"gitId":"SpecOps2016"},"content":"---","lastModifiedDate":"2022-09-27"},{"lineNumber":5,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":6,"author":{"gitId":"SpecOps2016"},"content":"## Project: HealthContact","lastModifiedDate":"2022-09-27"},{"lineNumber":7,"author":{"gitId":"SpecOps2016"},"content":"to be added soon","lastModifiedDate":"2022-09-27"},{"lineNumber":8,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":9,"author":{"gitId":"SpecOps2016"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-27"},{"lineNumber":10,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":11,"author":{"gitId":"SpecOps2016"},"content":"### Code contributed:","lastModifiedDate":"2022-09-27"},{"lineNumber":12,"author":{"gitId":"SpecOps2016"},"content":"to be added soon","lastModifiedDate":"2022-09-27"},{"lineNumber":13,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":14,"author":{"gitId":"SpecOps2016"},"content":"### Enhancements to existing features:","lastModifiedDate":"2022-09-27"},{"lineNumber":15,"author":{"gitId":"SpecOps2016"},"content":"to be added soon","lastModifiedDate":"2022-09-27"},{"lineNumber":16,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":17,"author":{"gitId":"SpecOps2016"},"content":"### Documentation:","lastModifiedDate":"2022-09-27"},{"lineNumber":18,"author":{"gitId":"SpecOps2016"},"content":"to be added soon","lastModifiedDate":"2022-09-27"},{"lineNumber":19,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":20,"author":{"gitId":"SpecOps2016"},"content":"### Contributions to the User Guide:","lastModifiedDate":"2022-09-27"},{"lineNumber":21,"author":{"gitId":"SpecOps2016"},"content":"to be added soon","lastModifiedDate":"2022-09-27"},{"lineNumber":22,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":23,"author":{"gitId":"SpecOps2016"},"content":"### Contributions to the Developer Guide:","lastModifiedDate":"2022-09-27"},{"lineNumber":24,"author":{"gitId":"SpecOps2016"},"content":"to be added soon","lastModifiedDate":"2022-09-27"},{"lineNumber":25,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":26,"author":{"gitId":"SpecOps2016"},"content":"### Contributions to the team-based tasks:","lastModifiedDate":"2022-09-27"},{"lineNumber":27,"author":{"gitId":"SpecOps2016"},"content":"to be added soon","lastModifiedDate":"2022-09-27"},{"lineNumber":28,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":29,"author":{"gitId":"SpecOps2016"},"content":"### Review/mentoring contributions:","lastModifiedDate":"2022-09-27"},{"lineNumber":30,"author":{"gitId":"SpecOps2016"},"content":"to be added soon","lastModifiedDate":"2022-09-27"},{"lineNumber":31,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":32,"author":{"gitId":"SpecOps2016"},"content":"### Contributions beyond the project team:","lastModifiedDate":"2022-09-27"},{"lineNumber":33,"author":{"gitId":"SpecOps2016"},"content":"to be added soon","lastModifiedDate":"2022-09-27"},{"lineNumber":34,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":35,"author":{"gitId":"SpecOps2016"},"content":"### Tools:","lastModifiedDate":"2022-09-27"},{"lineNumber":36,"author":{"gitId":"SpecOps2016"},"content":"to be added soon","lastModifiedDate":"2022-09-27"},{"lineNumber":37,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":38,"author":{"gitId":"SpecOps2016"},"content":"### Project management:","lastModifiedDate":"2022-09-27"},{"lineNumber":39,"author":{"gitId":"SpecOps2016"},"content":"to be added soon","lastModifiedDate":"2022-09-27"}],"authorContributionMap":{"SpecOps2016":39}},{"path":"docs/team/tzl0.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"TZL0"},"content":"---","lastModifiedDate":"2022-09-27"},{"lineNumber":2,"author":{"gitId":"TZL0"},"content":"layout: page","lastModifiedDate":"2022-09-27"},{"lineNumber":3,"author":{"gitId":"TZL0"},"content":"title: Li Tianze\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-27"},{"lineNumber":4,"author":{"gitId":"TZL0"},"content":"---","lastModifiedDate":"2022-09-27"},{"lineNumber":5,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":6,"author":{"gitId":"TZL0"},"content":"### Project: HealthConnect","lastModifiedDate":"2022-09-27"},{"lineNumber":7,"author":{"gitId":"TZL0"},"content":"to be added soon","lastModifiedDate":"2022-09-27"},{"lineNumber":8,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":9,"author":{"gitId":"TZL0"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-27"},{"lineNumber":10,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":11,"author":{"gitId":"TZL0"},"content":"### Code contributed:","lastModifiedDate":"2022-09-27"},{"lineNumber":12,"author":{"gitId":"TZL0"},"content":"to be added soon","lastModifiedDate":"2022-09-27"},{"lineNumber":13,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":14,"author":{"gitId":"TZL0"},"content":"### Enhancements to existing features:","lastModifiedDate":"2022-09-27"},{"lineNumber":15,"author":{"gitId":"TZL0"},"content":"to be added soon","lastModifiedDate":"2022-09-27"},{"lineNumber":16,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":17,"author":{"gitId":"TZL0"},"content":"### Documentation:","lastModifiedDate":"2022-09-27"},{"lineNumber":18,"author":{"gitId":"TZL0"},"content":"to be added soon","lastModifiedDate":"2022-09-27"},{"lineNumber":19,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":20,"author":{"gitId":"TZL0"},"content":"### Contributions to the User Guide:","lastModifiedDate":"2022-09-27"},{"lineNumber":21,"author":{"gitId":"TZL0"},"content":"to be added soon","lastModifiedDate":"2022-09-27"},{"lineNumber":22,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":23,"author":{"gitId":"TZL0"},"content":"### Contributions to the Developer Guide:","lastModifiedDate":"2022-09-27"},{"lineNumber":24,"author":{"gitId":"TZL0"},"content":"to be added soon","lastModifiedDate":"2022-09-27"},{"lineNumber":25,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":26,"author":{"gitId":"TZL0"},"content":"### Contributions to the team-based tasks:","lastModifiedDate":"2022-09-27"},{"lineNumber":27,"author":{"gitId":"TZL0"},"content":"to be added soon","lastModifiedDate":"2022-09-27"},{"lineNumber":28,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":29,"author":{"gitId":"TZL0"},"content":"### Review/mentoring contributions:","lastModifiedDate":"2022-09-27"},{"lineNumber":30,"author":{"gitId":"TZL0"},"content":"to be added soon","lastModifiedDate":"2022-09-27"},{"lineNumber":31,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":32,"author":{"gitId":"TZL0"},"content":"### Contributions beyond the project team:","lastModifiedDate":"2022-09-27"},{"lineNumber":33,"author":{"gitId":"TZL0"},"content":"to be added soon","lastModifiedDate":"2022-09-27"},{"lineNumber":34,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":35,"author":{"gitId":"TZL0"},"content":"### Tools:","lastModifiedDate":"2022-09-27"},{"lineNumber":36,"author":{"gitId":"TZL0"},"content":"to be added soon","lastModifiedDate":"2022-09-27"},{"lineNumber":37,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":38,"author":{"gitId":"TZL0"},"content":"### Project management:","lastModifiedDate":"2022-09-27"},{"lineNumber":39,"author":{"gitId":"TZL0"},"content":"to be added soon","lastModifiedDate":"2022-09-27"}],"authorContributionMap":{"TZL0":39}},{"path":"docs/team/wadia82.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wadia82"},"content":"---","lastModifiedDate":"2022-09-27"},{"lineNumber":2,"author":{"gitId":"wadia82"},"content":"layout: page","lastModifiedDate":"2022-09-27"},{"lineNumber":3,"author":{"gitId":"wadia82"},"content":"title: Wadia Ganim\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-27"},{"lineNumber":4,"author":{"gitId":"wadia82"},"content":"---","lastModifiedDate":"2022-09-27"},{"lineNumber":5,"author":{"gitId":"wadia82"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":6,"author":{"gitId":"wadia82"},"content":"## Project: HealthContact","lastModifiedDate":"2022-09-27"},{"lineNumber":7,"author":{"gitId":"wadia82"},"content":"to be added soon","lastModifiedDate":"2022-09-27"},{"lineNumber":8,"author":{"gitId":"wadia82"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":9,"author":{"gitId":"wadia82"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-27"},{"lineNumber":10,"author":{"gitId":"wadia82"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":11,"author":{"gitId":"wadia82"},"content":"### Code contributed:","lastModifiedDate":"2022-09-27"},{"lineNumber":12,"author":{"gitId":"wadia82"},"content":"to be added soon","lastModifiedDate":"2022-09-27"},{"lineNumber":13,"author":{"gitId":"wadia82"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":14,"author":{"gitId":"wadia82"},"content":"### Enhancements to existing features:","lastModifiedDate":"2022-09-27"},{"lineNumber":15,"author":{"gitId":"wadia82"},"content":"to be added soon","lastModifiedDate":"2022-09-27"},{"lineNumber":16,"author":{"gitId":"wadia82"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":17,"author":{"gitId":"wadia82"},"content":"### Documentation:","lastModifiedDate":"2022-09-27"},{"lineNumber":18,"author":{"gitId":"wadia82"},"content":"to be added soon","lastModifiedDate":"2022-09-27"},{"lineNumber":19,"author":{"gitId":"wadia82"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":20,"author":{"gitId":"wadia82"},"content":"### Contributions to the User Guide:","lastModifiedDate":"2022-09-27"},{"lineNumber":21,"author":{"gitId":"wadia82"},"content":"to be added soon","lastModifiedDate":"2022-09-27"},{"lineNumber":22,"author":{"gitId":"wadia82"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":23,"author":{"gitId":"wadia82"},"content":"### Contributions to the Developer Guide:","lastModifiedDate":"2022-09-27"},{"lineNumber":24,"author":{"gitId":"wadia82"},"content":"to be added soon","lastModifiedDate":"2022-09-27"},{"lineNumber":25,"author":{"gitId":"wadia82"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":26,"author":{"gitId":"wadia82"},"content":"### Contributions to the team-based tasks:","lastModifiedDate":"2022-09-27"},{"lineNumber":27,"author":{"gitId":"wadia82"},"content":"to be added soon","lastModifiedDate":"2022-09-27"},{"lineNumber":28,"author":{"gitId":"wadia82"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":29,"author":{"gitId":"wadia82"},"content":"### Review/mentoring contributions:","lastModifiedDate":"2022-09-27"},{"lineNumber":30,"author":{"gitId":"wadia82"},"content":"to be added soon","lastModifiedDate":"2022-09-27"},{"lineNumber":31,"author":{"gitId":"wadia82"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":32,"author":{"gitId":"wadia82"},"content":"### Contributions beyond the project team:","lastModifiedDate":"2022-09-27"},{"lineNumber":33,"author":{"gitId":"wadia82"},"content":"to be added soon","lastModifiedDate":"2022-09-27"},{"lineNumber":34,"author":{"gitId":"wadia82"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":35,"author":{"gitId":"wadia82"},"content":"### Tools:","lastModifiedDate":"2022-09-27"},{"lineNumber":36,"author":{"gitId":"wadia82"},"content":"to be added soon","lastModifiedDate":"2022-09-27"},{"lineNumber":37,"author":{"gitId":"wadia82"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":38,"author":{"gitId":"wadia82"},"content":"### Project management:","lastModifiedDate":"2022-09-27"},{"lineNumber":39,"author":{"gitId":"wadia82"},"content":"to be added soon","lastModifiedDate":"2022-09-27"}],"authorContributionMap":{"wadia82":39}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2020-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2020-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"guokweijie"},"content":" * Changes the remark of an existing patient in the address book.","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"guokweijie"},"content":"            + \": Edits the remark of the patient identified \"","lastModifiedDate":"2022-10-13"},{"lineNumber":69,"author":{"gitId":"guokweijie"},"content":"            + \"by the index number used in the last patient listing. \"","lastModifiedDate":"2022-10-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2020-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"guokweijie"},"content":"     * @param index of the patient in the filtered patient list to edit the remark","lastModifiedDate":"2022-10-13"},{"lineNumber":105,"author":{"gitId":"guokweijie"},"content":"     * @param remark of the patient to be updated to","lastModifiedDate":"2022-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"Create a `RemarkCommandParser` class in the `seedu.address.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2020-07-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"TZL0"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of patient data. We achieve that by working with the `Patient` model. Each field in a Patient is implemented as a separate class (e.g. a `Name` object represents the patient’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a patient.","lastModifiedDate":"2022-10-16"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"guokweijie"},"content":"Create a new `Remark` in `seedu.address.model.patient`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2022-10-13"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":235,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"guokweijie"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each patient.","lastModifiedDate":"2022-10-13"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"TZL0"},"content":"Simply add the following to [`seedu.address.ui.PatientCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2022-10-16"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"TZL0"},"content":"**`PatientCard.java`:**","lastModifiedDate":"2022-10-16"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"TZL0"},"content":"Then insert the following into [`main/resources/view/PatientListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-10-16"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"TZL0"},"content":"**`PatientListCard.fxml`:**","lastModifiedDate":"2022-10-16"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"TZL0"},"content":"## Modify `Patient` to support a `Remark` field","lastModifiedDate":"2022-10-16"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"TZL0"},"content":"Since `PatientCard` displays data from a `Patient`, we need to update `Patient` to get our `Remark` displayed!","lastModifiedDate":"2022-10-16"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"TZL0"},"content":"### Modify `Patient`","lastModifiedDate":"2022-10-16"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"TZL0"},"content":"We change the constructor of `Patient` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2022-10-16"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"TZL0"},"content":"### Update other usages of `Patient`","lastModifiedDate":"2022-10-16"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"TZL0"},"content":"Unfortunately, a change to `Patient` will cause other commands to break, you will have to modify these commands to use the updated `Patient`!","lastModifiedDate":"2022-10-16"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"TZL0"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Patient` class to find these commands.","lastModifiedDate":"2022-10-16"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"TZL0"},"content":"AddressBook stores data by serializing `JsonAdaptedPatient` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPatient` to work with our new `Patient`!","lastModifiedDate":"2022-10-16"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"TZL0"},"content":"Now that we have finalized the `Patient` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2022-10-16"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"TZL0"},"content":"**`PatientCard.java`:**","lastModifiedDate":"2022-10-16"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"TZL0"},"content":"public PatientCard(Patient patient, int displayedIndex) {","lastModifiedDate":"2022-10-16"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"guokweijie"},"content":"    remark.setText(patient.getRemark().value);","lastModifiedDate":"2022-10-13"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"TZL0"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Patient`. Since all fields in a `Patient` are immutable, we create a new instance of a `Patient` with the values that we want and","lastModifiedDate":"2022-10-16"},{"lineNumber":329,"author":{"gitId":"TZL0"},"content":"save it with `Model#setPatient()`.","lastModifiedDate":"2022-10-16"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"TZL0"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Patient: %1$s\";","lastModifiedDate":"2022-10-16"},{"lineNumber":336,"author":{"gitId":"TZL0"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Patient: %1$s\";","lastModifiedDate":"2022-10-16"},{"lineNumber":337,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"TZL0"},"content":"        List\u003cPatient\u003e lastShownList \u003d model.getFilteredPatientList();","lastModifiedDate":"2022-10-16"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"TZL0"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-16"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"TZL0"},"content":"        Patient patientToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-10-16"},{"lineNumber":347,"author":{"gitId":"TZL0"},"content":"        Patient editedPatient \u003d new Patient(","lastModifiedDate":"2022-10-16"},{"lineNumber":348,"author":{"gitId":"guokweijie"},"content":"                patientToEdit.getName(), patientToEdit.getPhone(), patientToEdit.getEmail(),","lastModifiedDate":"2022-10-13"},{"lineNumber":349,"author":{"gitId":"guokweijie"},"content":"                patientToEdit.getAddress(), remark, patientToEdit.getTags());","lastModifiedDate":"2022-10-13"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"TZL0"},"content":"        model.setPatient(patientToEdit, editedPatient);","lastModifiedDate":"2022-10-16"},{"lineNumber":352,"author":{"gitId":"TZL0"},"content":"        model.updateFilteredPatientList(PREDICATE_SHOW_ALL_PATIENTS);","lastModifiedDate":"2022-10-16"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"guokweijie"},"content":"        return new CommandResult(generateSuccessMessage(editedPatient));","lastModifiedDate":"2022-10-13"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"guokweijie"},"content":"     * {@code patientToEdit}.","lastModifiedDate":"2022-10-13"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"TZL0"},"content":"    private String generateSuccessMessage(Patient patientToEdit) {","lastModifiedDate":"2022-10-16"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"guokweijie"},"content":"        return String.format(message, patientToEdit);","lastModifiedDate":"2022-10-13"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":378,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"guokweijie":13,"TZL0":27,"-":361}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"TZL0"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Patient` class.","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"TZL0"},"content":"The `address` field in `Patient` is actually an instance of the `seedu.address.model.patient.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"TZL0"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPatientDescriptor` may require more careful inspection.","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"TZL0"},"content":"Let’s try removing references to `Address` in `EditPatientDescriptor`.","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"TZL0"},"content":"1. Safe delete the field `address` in `EditPatientDescriptor`.","lastModifiedDate":"2022-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"TZL0"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Patient` class will require you to modify its constructor.","lastModifiedDate":"2022-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"TZL0"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PatientCard` that has not been removed nor identified.","lastModifiedDate":"2022-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"TZL0"},"content":"A quick look at the `PatientCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2022-10-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"TZL0"},"content":"**`PatientCard.java`**","lastModifiedDate":"2022-10-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"TZL0"},"content":"**`PatientCard.fxml`**","lastModifiedDate":"2022-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"TZL0"},"content":"**`invalidPatientAddressBook.json`:**","lastModifiedDate":"2022-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"guokweijie"},"content":"  \"patients\": [ {","lastModifiedDate":"2022-10-13"},{"lineNumber":104,"author":{"gitId":"TZL0"},"content":"    \"name\": \"Patient with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2022-10-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"guokweijie":1,"TZL0":12,"-":99}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `seedu.address.logic.Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"A quick look at the `seedu.address.logic.Logic` (an extract given below) confirms that this indeed might be what we’re looking for.","lastModifiedDate":"2021-07-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `AddressBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"TZL0"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPatientDescriptor`. Recall that we can verify the contents of `editPatientDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2022-10-16"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"TZL0"},"content":"       Patient patientToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-10-16"},{"lineNumber":193,"author":{"gitId":"TZL0"},"content":"       Patient editedPatient \u003d createEditedPatient(patientToEdit, editPatientDescriptor);","lastModifiedDate":"2022-10-16"},{"lineNumber":194,"author":{"gitId":"TZL0"},"content":"       if (!patientToEdit.isSamePatient(editedPatient) \u0026\u0026 model.hasPatient(editedPatient)) {","lastModifiedDate":"2022-10-16"},{"lineNumber":195,"author":{"gitId":"TZL0"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PATIENT);","lastModifiedDate":"2022-10-16"},{"lineNumber":196,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"TZL0"},"content":"       model.setPatient(patientToEdit, editedPatient);","lastModifiedDate":"2022-10-16"},{"lineNumber":198,"author":{"gitId":"TZL0"},"content":"       model.updateFilteredPatientList(PREDICATE_SHOW_ALL_PATIENTS);","lastModifiedDate":"2022-10-16"},{"lineNumber":199,"author":{"gitId":"TZL0"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PATIENT_SUCCESS, editedPatient));","lastModifiedDate":"2022-10-16"},{"lineNumber":200,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":204,"author":{"gitId":"TZL0"},"content":"   * it uses the `setPatient()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the patient data.","lastModifiedDate":"2022-10-16"},{"lineNumber":205,"author":{"gitId":"TZL0"},"content":"   * it uses the `updateFilteredPatientList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ patients.\u003cbr\u003e","lastModifiedDate":"2022-10-16"},{"lineNumber":206,"author":{"gitId":"guokweijie"},"content":"     FYI, The \u0027filtered list\u0027 is the list of patients resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the patients so that the user can see the edited patient along with all other patients. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":207,"author":{"gitId":"guokweijie"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of patients is being tracked.","lastModifiedDate":"2022-10-13"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     \u003cimg src\u003d\"../images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"../images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** When trying to step into a statement such as `storage.saveAddressBook(model.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"1.  As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonAddressBook#saveAddressBook()` method which calls the `JsonSerializableAddressBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook` constructor:**","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"guokweijie"},"content":"        patients.addAll(","lastModifiedDate":"2022-10-13"},{"lineNumber":235,"author":{"gitId":"TZL0"},"content":"            source.getPatientList()","lastModifiedDate":"2022-10-16"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"TZL0"},"content":"                  .map(JsonAdaptedPatient::new)","lastModifiedDate":"2022-10-16"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"TZL0"},"content":"1. It appears that a `JsonAdaptedPatient` is created for each `Patient` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2022-10-16"},{"lineNumber":243,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"TZL0"},"content":"    5.  Add a new field to `Patient`","lastModifiedDate":"2022-10-16"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"guokweijie":3,"TZL0":14,"-":284}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"wadia82"},"content":"    public static final String MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX \u003d \"The patient index provided is invalid\";","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"TZL0"},"content":"    public static final String MESSAGE_PATIENTS_LISTED_OVERVIEW \u003d \"%1$d patients listed!\";","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"TZL0"},"content":"    public static final String MESSAGE_INVALID_APPOINTMENT_DISPLAYED_INDEX \u003d","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"TZL0"},"content":"            \"The appointment index provided is invalid\";","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"TZL0"},"content":"    public static final String MESSAGE_APPOINTMENTS_LISTED_OVERVIEW \u003d \"%1$d appointments listed!\";","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":17,"author":{"gitId":"SpecOps2016"},"content":"    public static final String MESSAGE_INVALID_SORT_CRITERIA \u003d \"Sort criteria is invalid\";","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"wadia82":1,"SpecOps2016":1,"TZL0":4,"-":12}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2022-10-07"},{"lineNumber":12,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"TZL0"},"content":"    /** Returns an unmodifiable view of the filtered list of patients */","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"TZL0"},"content":"    ObservableList\u003cPatient\u003e getFilteredPatientList();","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":37,"author":{"gitId":"TZL0"},"content":"    /** Returns an unmodifiable view of the list of appointments */","lastModifiedDate":"2022-10-07"},{"lineNumber":38,"author":{"gitId":"TZL0"},"content":"    ObservableList\u003cAppointment\u003e getFilteredAppointmentList();","lastModifiedDate":"2022-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"TZL0":6,"-":48}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":17,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2022-10-07"},{"lineNumber":18,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"TZL0"},"content":"    public ObservableList\u003cPatient\u003e getFilteredPatientList() {","lastModifiedDate":"2022-10-16"},{"lineNumber":65,"author":{"gitId":"wadia82"},"content":"        return model.getFilteredPatientList();","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":68,"author":{"gitId":"TZL0"},"content":"    @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":69,"author":{"gitId":"TZL0"},"content":"    public ObservableList\u003cAppointment\u003e getFilteredAppointmentList() {","lastModifiedDate":"2022-10-07"},{"lineNumber":70,"author":{"gitId":"wadia82"},"content":"        return model.getFilteredAppointmentList();","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"wadia82":2,"TZL0":5,"-":80}},{"path":"src/main/java/seedu/address/logic/commands/AddAppointmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TZL0"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"TZL0"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"TZL0"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DOCTOR;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"TZL0"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEDICAL_TEST;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"TZL0"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-07"},{"lineNumber":7,"author":{"gitId":"TZL0"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SLOT;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"TZL0"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"TZL0"},"content":"/**","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"TZL0"},"content":" * Adds an appointment to the address book.","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"TZL0"},"content":" */","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"TZL0"},"content":"public class AddAppointmentCommand extends Command {","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"TZL0"},"content":"    public static final CommandWord COMMAND_WORD \u003d new CommandWord(\"addappointment\", \"aa\");","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"TZL0"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"TZL0"},"content":"            + \": Adds an appointment to the address book. \"","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"TZL0"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"TZL0"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2022-10-07"},{"lineNumber":24,"author":{"gitId":"TZL0"},"content":"            + PREFIX_MEDICAL_TEST + \"MEDICAL TEST\"","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"TZL0"},"content":"            + PREFIX_SLOT + \"SLOT\u003cyyyy-MM-dd HH:mm\u003e \"","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"TZL0"},"content":"            + PREFIX_DOCTOR + \"DOCTOR \"","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"TZL0"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"TZL0"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2022-10-07"},{"lineNumber":29,"author":{"gitId":"TZL0"},"content":"            + PREFIX_MEDICAL_TEST + \"Computed Tomography \"","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"TZL0"},"content":"            + PREFIX_SLOT + \"2022-11-12 12:34 \"","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"TZL0"},"content":"            + PREFIX_DOCTOR + \"Muhammad Wong\";;","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"TZL0"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New appointment added: %1$s\";","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"TZL0"},"content":"    public static final String MESSAGE_DUPLICATE_APPOINTMENT \u003d \"This appointment already exists in the address book\";","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"TZL0"},"content":"    public static final String MESSAGE_PATIENT_NOT_EXIST \u003d \"This patient does not exist in the address book\";","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"TZL0"},"content":"    private final Appointment toAdd;","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"TZL0"},"content":"     * Creates an AddCommand to add the specified {@code Patient}","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"TZL0"},"content":"    public AddAppointmentCommand(Appointment appointment) {","lastModifiedDate":"2022-10-06"},{"lineNumber":42,"author":{"gitId":"TZL0"},"content":"        requireNonNull(appointment);","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"TZL0"},"content":"        toAdd \u003d appointment;","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":45,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":46,"author":{"gitId":"TZL0"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":47,"author":{"gitId":"TZL0"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-06"},{"lineNumber":48,"author":{"gitId":"TZL0"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-06"},{"lineNumber":49,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":50,"author":{"gitId":"TZL0"},"content":"        if (!model.hasPatient(toAdd.getName())) {","lastModifiedDate":"2022-10-16"},{"lineNumber":51,"author":{"gitId":"TZL0"},"content":"            throw new CommandException(MESSAGE_PATIENT_NOT_EXIST);","lastModifiedDate":"2022-10-16"},{"lineNumber":52,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":53,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":54,"author":{"gitId":"TZL0"},"content":"        if (model.hasAppointment(toAdd)) {","lastModifiedDate":"2022-10-06"},{"lineNumber":55,"author":{"gitId":"TZL0"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_APPOINTMENT);","lastModifiedDate":"2022-10-06"},{"lineNumber":56,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":57,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":58,"author":{"gitId":"TZL0"},"content":"        model.addAppointment(toAdd);","lastModifiedDate":"2022-10-06"},{"lineNumber":59,"author":{"gitId":"TZL0"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2022-10-06"},{"lineNumber":60,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":61,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":62,"author":{"gitId":"TZL0"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":63,"author":{"gitId":"TZL0"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-06"},{"lineNumber":64,"author":{"gitId":"TZL0"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-06"},{"lineNumber":65,"author":{"gitId":"TZL0"},"content":"                || (other instanceof AddAppointmentCommand // instanceof handles nulls","lastModifiedDate":"2022-10-06"},{"lineNumber":66,"author":{"gitId":"TZL0"},"content":"                \u0026\u0026 toAdd.equals(((AddAppointmentCommand) other).toAdd));","lastModifiedDate":"2022-10-06"},{"lineNumber":67,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":68,"author":{"gitId":"TZL0"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"TZL0":68}},{"path":"src/main/java/seedu/address/logic/commands/AddPatientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"guokweijie"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"TZL0"},"content":" * Adds a patient to the address book.","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"guokweijie"},"content":"public class AddPatientCommand extends Command {","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"TZL0"},"content":"    public static final CommandWord COMMAND_WORD \u003d new CommandWord(\"addpatient\", \"ap\");","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"TZL0"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"TZL0"},"content":"            + \": Adds a patient to the address book. \"","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":29,"author":{"gitId":"guokweijie"},"content":"            + PREFIX_REMARK + \"REMARK \"","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"guokweijie"},"content":"            + PREFIX_REMARK + \"Likes to swim. \"","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"guokweijie"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New patient added: %1$s\";","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"TZL0"},"content":"    public static final String MESSAGE_DUPLICATE_PATIENT \u003d \"This patient already exists in the address book\";","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"guokweijie"},"content":"    public static final String MESSAGE_FAILURE \u003d \"New patient not added: %1$s\";","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"guokweijie"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":45,"author":{"gitId":"guokweijie"},"content":"    private final Patient toAdd;","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"TZL0"},"content":"     * Creates an AddCommand to add the specified {@code Patient}","lastModifiedDate":"2022-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"guokweijie"},"content":"    public AddPatientCommand(Patient patient) {","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"guokweijie"},"content":"        requireNonNull(patient);","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"guokweijie"},"content":"        toAdd \u003d patient;","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"TZL0"},"content":"        if (model.hasPatient(toAdd)) {","lastModifiedDate":"2022-10-16"},{"lineNumber":60,"author":{"gitId":"TZL0"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PATIENT);","lastModifiedDate":"2022-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"TZL0"},"content":"        model.addPatient(toAdd);","lastModifiedDate":"2022-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"guokweijie"},"content":"                || (other instanceof AddPatientCommand // instanceof handles nulls","lastModifiedDate":"2022-10-13"},{"lineNumber":71,"author":{"gitId":"guokweijie"},"content":"                \u0026\u0026 toAdd.equals(((AddPatientCommand) other).toAdd));","lastModifiedDate":"2022-10-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"guokweijie":13,"TZL0":10,"-":50}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"TZL0"},"content":"    public static final CommandWord COMMAND_WORD \u003d new CommandWord(\"clear\");","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Address book has been cleared!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        model.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"TZL0":1,"-":22}},{"path":"src/main/java/seedu/address/logic/commands/CommandWord.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TZL0"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"TZL0"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"TZL0"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"TZL0"},"content":"import java.util.List;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"TZL0"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"TZL0"},"content":" * Represents the acceptable command words of a command.","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"TZL0"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"TZL0"},"content":"public class CommandWord {","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"TZL0"},"content":"    /* The main command word shown in command examples */","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"TZL0"},"content":"    private String mainCommandWord;","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"TZL0"},"content":"    /* The other acceptable command words */","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"TZL0"},"content":"    private ArrayList\u003cString\u003e alternativeCommandWords;","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"TZL0"},"content":"     * Constructs the object with given fields.","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"TZL0"},"content":"     * @param mainCommandWord The main command word shown in command examples.","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"TZL0"},"content":"     * @param alternativeCommandWords The other acceptable command words.","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"TZL0"},"content":"    public CommandWord(String mainCommandWord, String ... alternativeCommandWords) {","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"TZL0"},"content":"        requireNonNull(mainCommandWord);","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"TZL0"},"content":"        this.mainCommandWord \u003d mainCommandWord;","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"TZL0"},"content":"        this.alternativeCommandWords \u003d new ArrayList\u003c\u003e(List.of(alternativeCommandWords));","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"TZL0"},"content":"     * Returns whether the given string matches the command words.","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"TZL0"},"content":"     * @param input The given string.","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"TZL0"},"content":"     * @return The boolean indicating whether the given string matches the command words.","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"TZL0"},"content":"    public boolean matches(String input) {","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"TZL0"},"content":"        return mainCommandWord.equals(input) || alternativeCommandWords.contains(input);","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"TZL0"},"content":"     * Returns the main command word.","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"TZL0"},"content":"     * @return The main command word.","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"TZL0"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"TZL0"},"content":"    public String toString() {","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"TZL0"},"content":"        return this.mainCommandWord;","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"TZL0"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"TZL0":45}},{"path":"src/main/java/seedu/address/logic/commands/DeleteAppointmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wadia82"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"wadia82"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"wadia82"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"wadia82"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"wadia82"},"content":"import java.util.List;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"wadia82"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"wadia82"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"wadia82"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"wadia82"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"wadia82"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"wadia82"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"wadia82"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"wadia82"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"wadia82"},"content":" * Deletes an appointment identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"wadia82"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"wadia82"},"content":"public class DeleteAppointmentCommand extends Command {","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"wadia82"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"TZL0"},"content":"    public static final CommandWord COMMAND_WORD \u003d","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"TZL0"},"content":"            new CommandWord(\"deleteappointment\", \"da\");","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"wadia82"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"wadia82"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"wadia82"},"content":"            + \": Deletes the appointment identified by the index number used in the displayed appointment list.\\n\"","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"wadia82"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"wadia82"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"wadia82"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"wadia82"},"content":"    public static final String MESSAGE_DELETE_APPOINTMENT_SUCCESS \u003d \"Deleted Appointment: %1$s\";","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"wadia82"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"wadia82"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"wadia82"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"wadia82"},"content":"    public DeleteAppointmentCommand(Index targetIndex) {","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"wadia82"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"wadia82"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"wadia82"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"wadia82"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"wadia82"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"wadia82"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"wadia82"},"content":"        List\u003cAppointment\u003e lastShownList \u003d model.getFilteredAppointmentList();","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"wadia82"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"wadia82"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"wadia82"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_APPOINTMENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"wadia82"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"wadia82"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"wadia82"},"content":"        Appointment appointmentToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"wadia82"},"content":"        model.deleteAppointment(appointmentToDelete);","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"wadia82"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_APPOINTMENT_SUCCESS, appointmentToDelete));","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"wadia82"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"wadia82"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"wadia82"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"wadia82"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"wadia82"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"wadia82"},"content":"                || (other instanceof DeleteAppointmentCommand // instanceof handles nulls","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"wadia82"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteAppointmentCommand) other).targetIndex)); // state check","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"wadia82"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"wadia82"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"wadia82":52,"TZL0":2}},{"path":"src/main/java/seedu/address/logic/commands/DeletePatientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"TZL0"},"content":" * Deletes a patient identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"wadia82"},"content":"public class DeletePatientCommand extends Command {","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"TZL0"},"content":"    public static final CommandWord COMMAND_WORD \u003d new CommandWord(\"deletepatient\", \"dp\");","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"wadia82"},"content":"            + \": Deletes the patient identified by the index number used in the displayed patient list.\\n\"","lastModifiedDate":"2022-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"wadia82"},"content":"    public static final String MESSAGE_DELETE_PATIENT_SUCCESS \u003d \"Deleted Patient: %1$s\";","lastModifiedDate":"2022-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"wadia82"},"content":"    public DeletePatientCommand(Index targetIndex) {","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"guokweijie"},"content":"        List\u003cPatient\u003e lastShownList \u003d model.getFilteredPatientList();","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"wadia82"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"guokweijie"},"content":"        Patient patientToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"TZL0"},"content":"        model.deletePatient(patientToDelete);","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"wadia82"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PATIENT_SUCCESS, patientToDelete));","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"wadia82"},"content":"                || (other instanceof DeletePatientCommand // instanceof handles nulls","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"wadia82"},"content":"                \u0026\u0026 targetIndex.equals(((DeletePatientCommand) other).targetIndex)); // state check","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"wadia82":8,"guokweijie":2,"TZL0":4,"-":39}},{"path":"src/main/java/seedu/address/logic/commands/EditAppointmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TZL0"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"TZL0"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"TZL0"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DOCTOR;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"TZL0"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEDICAL_TEST;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"TZL0"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-07"},{"lineNumber":7,"author":{"gitId":"TZL0"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SLOT;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"TZL0"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_APPOINTMENTS;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"TZL0"},"content":"import java.util.List;","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"TZL0"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"TZL0"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"TZL0"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"TZL0"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"TZL0"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.appointment.Doctor;","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.appointment.MedicalTest;","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.appointment.Slot;","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.Name;","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"TZL0"},"content":"/**","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"TZL0"},"content":" * Edits the details of an existing appointment in the address book.","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"TZL0"},"content":" */","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"TZL0"},"content":"public class EditAppointmentCommand extends Command {","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"TZL0"},"content":"    public static final CommandWord COMMAND_WORD \u003d new CommandWord(\"editappointment\", \"ea\");","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"TZL0"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the appointment identified \"","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"TZL0"},"content":"            + \"by the index number used in the displayed appointment list. \"","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"TZL0"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"TZL0"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"TZL0"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2022-10-07"},{"lineNumber":36,"author":{"gitId":"Fuzanwenn"},"content":"            + \"[\" + PREFIX_MEDICAL_TEST + \"MEDICAL_TEST] \"","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"TZL0"},"content":"            + \"[\" + PREFIX_SLOT + \"SLOT\u003cyyyy-MM-dd HH:mm\u003e] \"","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"TZL0"},"content":"            + \"[\" + PREFIX_DOCTOR + \"DOCTOR] \"","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"TZL0"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"TZL0"},"content":"            + PREFIX_NAME + \"John Doe\"","lastModifiedDate":"2022-10-07"},{"lineNumber":41,"author":{"gitId":"TZL0"},"content":"            + PREFIX_MEDICAL_TEST + \"Computed Tomography\"","lastModifiedDate":"2022-10-07"},{"lineNumber":42,"author":{"gitId":"TZL0"},"content":"            + PREFIX_SLOT + \"2020-10-09 13:30\"","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"TZL0"},"content":"            + PREFIX_DOCTOR + \"Muhammad Wong\";","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":45,"author":{"gitId":"TZL0"},"content":"    public static final String MESSAGE_EDIT_APPOINTMENT_SUCCESS \u003d \"Edited Appointment: %1$s\";","lastModifiedDate":"2022-10-06"},{"lineNumber":46,"author":{"gitId":"TZL0"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2022-10-06"},{"lineNumber":47,"author":{"gitId":"TZL0"},"content":"    public static final String MESSAGE_DUPLICATE_APPOINTMENT \u003d \"This appointment already exists in the address book.\";","lastModifiedDate":"2022-10-06"},{"lineNumber":48,"author":{"gitId":"TZL0"},"content":"    public static final String MESSAGE_PATIENT_NOT_EXIST \u003d \"This patient does not exist in the address book\";","lastModifiedDate":"2022-10-16"},{"lineNumber":49,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":50,"author":{"gitId":"TZL0"},"content":"    private final Index index;","lastModifiedDate":"2022-10-06"},{"lineNumber":51,"author":{"gitId":"TZL0"},"content":"    private final EditAppointmentDescriptor editAppointmentDescriptor;","lastModifiedDate":"2022-10-06"},{"lineNumber":52,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":53,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":54,"author":{"gitId":"TZL0"},"content":"     * @param index of the appointment in the filtered appointment list to edit","lastModifiedDate":"2022-10-06"},{"lineNumber":55,"author":{"gitId":"TZL0"},"content":"     * @param editAppointmentDescriptor details to edit the appointment with","lastModifiedDate":"2022-10-06"},{"lineNumber":56,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":57,"author":{"gitId":"TZL0"},"content":"    public EditAppointmentCommand(Index index, EditAppointmentDescriptor editAppointmentDescriptor) {","lastModifiedDate":"2022-10-06"},{"lineNumber":58,"author":{"gitId":"TZL0"},"content":"        requireNonNull(index);","lastModifiedDate":"2022-10-06"},{"lineNumber":59,"author":{"gitId":"TZL0"},"content":"        requireNonNull(editAppointmentDescriptor);","lastModifiedDate":"2022-10-06"},{"lineNumber":60,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":61,"author":{"gitId":"TZL0"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-10-06"},{"lineNumber":62,"author":{"gitId":"TZL0"},"content":"        this.editAppointmentDescriptor \u003d new EditAppointmentDescriptor(editAppointmentDescriptor);","lastModifiedDate":"2022-10-06"},{"lineNumber":63,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":64,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":65,"author":{"gitId":"TZL0"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":66,"author":{"gitId":"TZL0"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-06"},{"lineNumber":67,"author":{"gitId":"TZL0"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-06"},{"lineNumber":68,"author":{"gitId":"wadia82"},"content":"        List\u003cAppointment\u003e lastShownList \u003d model.getFilteredAppointmentList();","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":70,"author":{"gitId":"TZL0"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-06"},{"lineNumber":71,"author":{"gitId":"TZL0"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_APPOINTMENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-06"},{"lineNumber":72,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":73,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":74,"author":{"gitId":"TZL0"},"content":"        Appointment appointmentToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-10-06"},{"lineNumber":75,"author":{"gitId":"TZL0"},"content":"        Appointment editedAppointment \u003d createEditedAppointment(appointmentToEdit, editAppointmentDescriptor);","lastModifiedDate":"2022-10-06"},{"lineNumber":76,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":77,"author":{"gitId":"TZL0"},"content":"        if (!model.hasPatient(editedAppointment.getName())) {","lastModifiedDate":"2022-10-16"},{"lineNumber":78,"author":{"gitId":"TZL0"},"content":"            throw new CommandException(MESSAGE_PATIENT_NOT_EXIST);","lastModifiedDate":"2022-10-16"},{"lineNumber":79,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":80,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":81,"author":{"gitId":"TZL0"},"content":"        if (!appointmentToEdit.equals(editedAppointment) \u0026\u0026 model.hasAppointment(editedAppointment)) {","lastModifiedDate":"2022-10-06"},{"lineNumber":82,"author":{"gitId":"TZL0"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_APPOINTMENT);","lastModifiedDate":"2022-10-06"},{"lineNumber":83,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":84,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":85,"author":{"gitId":"TZL0"},"content":"        model.setAppointment(appointmentToEdit, editedAppointment);","lastModifiedDate":"2022-10-06"},{"lineNumber":86,"author":{"gitId":"TZL0"},"content":"        model.updateFilteredAppointmentList(PREDICATE_SHOW_ALL_APPOINTMENTS);","lastModifiedDate":"2022-10-06"},{"lineNumber":87,"author":{"gitId":"TZL0"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_APPOINTMENT_SUCCESS, editedAppointment));","lastModifiedDate":"2022-10-06"},{"lineNumber":88,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":89,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":90,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":91,"author":{"gitId":"TZL0"},"content":"     * Creates and returns a {@code Appointment} with the details of {@code AppointmentToEdit}","lastModifiedDate":"2022-10-06"},{"lineNumber":92,"author":{"gitId":"TZL0"},"content":"     * edited with {@code editAppointmentDescriptor}.","lastModifiedDate":"2022-10-06"},{"lineNumber":93,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":94,"author":{"gitId":"TZL0"},"content":"    private static Appointment createEditedAppointment(Appointment appointmentToEdit,","lastModifiedDate":"2022-10-06"},{"lineNumber":95,"author":{"gitId":"TZL0"},"content":"                                                       EditAppointmentDescriptor editAppointmentDescriptor) {","lastModifiedDate":"2022-10-06"},{"lineNumber":96,"author":{"gitId":"TZL0"},"content":"        assert appointmentToEdit !\u003d null;","lastModifiedDate":"2022-10-06"},{"lineNumber":97,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":98,"author":{"gitId":"TZL0"},"content":"        Name updatedName \u003d editAppointmentDescriptor.getName().orElse(appointmentToEdit.getName());","lastModifiedDate":"2022-10-07"},{"lineNumber":99,"author":{"gitId":"TZL0"},"content":"        MedicalTest updatedMedicalTest \u003d editAppointmentDescriptor.getTest().orElse(appointmentToEdit.getMedicalTest());","lastModifiedDate":"2022-10-06"},{"lineNumber":100,"author":{"gitId":"TZL0"},"content":"        Slot updatedSlot \u003d editAppointmentDescriptor.getSlot().orElse(appointmentToEdit.getSlot());","lastModifiedDate":"2022-10-06"},{"lineNumber":101,"author":{"gitId":"TZL0"},"content":"        Doctor updatedDoctor \u003d editAppointmentDescriptor.getDoctor().orElse(appointmentToEdit.getDoctor());","lastModifiedDate":"2022-10-06"},{"lineNumber":102,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":103,"author":{"gitId":"TZL0"},"content":"        return new Appointment(updatedName, updatedMedicalTest, updatedSlot, updatedDoctor);","lastModifiedDate":"2022-10-07"},{"lineNumber":104,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":105,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":106,"author":{"gitId":"TZL0"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":107,"author":{"gitId":"TZL0"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-06"},{"lineNumber":108,"author":{"gitId":"TZL0"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-06"},{"lineNumber":109,"author":{"gitId":"TZL0"},"content":"            return true;","lastModifiedDate":"2022-10-06"},{"lineNumber":110,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":111,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":112,"author":{"gitId":"TZL0"},"content":"        if (!(other instanceof EditAppointmentCommand)) {","lastModifiedDate":"2022-10-06"},{"lineNumber":113,"author":{"gitId":"TZL0"},"content":"            return false;","lastModifiedDate":"2022-10-06"},{"lineNumber":114,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":115,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":116,"author":{"gitId":"TZL0"},"content":"        EditAppointmentCommand e \u003d (EditAppointmentCommand) other;","lastModifiedDate":"2022-10-06"},{"lineNumber":117,"author":{"gitId":"TZL0"},"content":"        return index.equals(e.index)","lastModifiedDate":"2022-10-06"},{"lineNumber":118,"author":{"gitId":"TZL0"},"content":"                \u0026\u0026 editAppointmentDescriptor.equals(e.editAppointmentDescriptor);","lastModifiedDate":"2022-10-06"},{"lineNumber":119,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":120,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":121,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":122,"author":{"gitId":"TZL0"},"content":"     * Stores the details to edit the appointment with. Each non-empty field value will replace the","lastModifiedDate":"2022-10-06"},{"lineNumber":123,"author":{"gitId":"TZL0"},"content":"     * corresponding field value of the appointment.","lastModifiedDate":"2022-10-06"},{"lineNumber":124,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":125,"author":{"gitId":"TZL0"},"content":"    public static class EditAppointmentDescriptor {","lastModifiedDate":"2022-10-06"},{"lineNumber":126,"author":{"gitId":"TZL0"},"content":"        private Name name;","lastModifiedDate":"2022-10-07"},{"lineNumber":127,"author":{"gitId":"TZL0"},"content":"        private MedicalTest test;","lastModifiedDate":"2022-10-06"},{"lineNumber":128,"author":{"gitId":"TZL0"},"content":"        private Slot slot;","lastModifiedDate":"2022-10-06"},{"lineNumber":129,"author":{"gitId":"TZL0"},"content":"        private Doctor doctor;","lastModifiedDate":"2022-10-06"},{"lineNumber":130,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":131,"author":{"gitId":"TZL0"},"content":"        public EditAppointmentDescriptor() {}","lastModifiedDate":"2022-10-06"},{"lineNumber":132,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":133,"author":{"gitId":"TZL0"},"content":"        /**","lastModifiedDate":"2022-10-06"},{"lineNumber":134,"author":{"gitId":"TZL0"},"content":"         * Copy constructor.","lastModifiedDate":"2022-10-06"},{"lineNumber":135,"author":{"gitId":"TZL0"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2022-10-06"},{"lineNumber":136,"author":{"gitId":"TZL0"},"content":"         */","lastModifiedDate":"2022-10-06"},{"lineNumber":137,"author":{"gitId":"TZL0"},"content":"        public EditAppointmentDescriptor(EditAppointmentDescriptor toCopy) {","lastModifiedDate":"2022-10-06"},{"lineNumber":138,"author":{"gitId":"TZL0"},"content":"            setName(toCopy.name);","lastModifiedDate":"2022-10-07"},{"lineNumber":139,"author":{"gitId":"TZL0"},"content":"            setMedicalTest(toCopy.test);","lastModifiedDate":"2022-10-06"},{"lineNumber":140,"author":{"gitId":"TZL0"},"content":"            setSlot(toCopy.slot);","lastModifiedDate":"2022-10-06"},{"lineNumber":141,"author":{"gitId":"TZL0"},"content":"            setDoctor(toCopy.doctor);","lastModifiedDate":"2022-10-06"},{"lineNumber":142,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":143,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":144,"author":{"gitId":"TZL0"},"content":"        /**","lastModifiedDate":"2022-10-06"},{"lineNumber":145,"author":{"gitId":"TZL0"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2022-10-06"},{"lineNumber":146,"author":{"gitId":"TZL0"},"content":"         */","lastModifiedDate":"2022-10-06"},{"lineNumber":147,"author":{"gitId":"TZL0"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2022-10-06"},{"lineNumber":148,"author":{"gitId":"TZL0"},"content":"            return CollectionUtil.isAnyNonNull(name, test, slot, doctor);","lastModifiedDate":"2022-10-07"},{"lineNumber":149,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":150,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":151,"author":{"gitId":"TZL0"},"content":"        public void setMedicalTest(MedicalTest test) {","lastModifiedDate":"2022-10-06"},{"lineNumber":152,"author":{"gitId":"TZL0"},"content":"            this.test \u003d test;","lastModifiedDate":"2022-10-06"},{"lineNumber":153,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":154,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":155,"author":{"gitId":"TZL0"},"content":"        public Optional\u003cMedicalTest\u003e getTest() {","lastModifiedDate":"2022-10-06"},{"lineNumber":156,"author":{"gitId":"TZL0"},"content":"            return Optional.ofNullable(test);","lastModifiedDate":"2022-10-06"},{"lineNumber":157,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":158,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":159,"author":{"gitId":"TZL0"},"content":"        public void setName(Name name) {","lastModifiedDate":"2022-10-07"},{"lineNumber":160,"author":{"gitId":"TZL0"},"content":"            this.name \u003d name;","lastModifiedDate":"2022-10-07"},{"lineNumber":161,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":162,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":163,"author":{"gitId":"TZL0"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2022-10-07"},{"lineNumber":164,"author":{"gitId":"TZL0"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2022-10-07"},{"lineNumber":165,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":166,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":167,"author":{"gitId":"TZL0"},"content":"        public void setSlot(Slot slot) {","lastModifiedDate":"2022-10-06"},{"lineNumber":168,"author":{"gitId":"TZL0"},"content":"            this.slot \u003d slot;","lastModifiedDate":"2022-10-06"},{"lineNumber":169,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":170,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":171,"author":{"gitId":"TZL0"},"content":"        public Optional\u003cSlot\u003e getSlot() {","lastModifiedDate":"2022-10-06"},{"lineNumber":172,"author":{"gitId":"TZL0"},"content":"            return Optional.ofNullable(slot);","lastModifiedDate":"2022-10-06"},{"lineNumber":173,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":174,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":175,"author":{"gitId":"TZL0"},"content":"        public void setDoctor(Doctor doctor) {","lastModifiedDate":"2022-10-06"},{"lineNumber":176,"author":{"gitId":"TZL0"},"content":"            this.doctor \u003d doctor;","lastModifiedDate":"2022-10-06"},{"lineNumber":177,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":178,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":179,"author":{"gitId":"TZL0"},"content":"        public Optional\u003cDoctor\u003e getDoctor() {","lastModifiedDate":"2022-10-06"},{"lineNumber":180,"author":{"gitId":"TZL0"},"content":"            return Optional.ofNullable(doctor);","lastModifiedDate":"2022-10-06"},{"lineNumber":181,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":182,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":183,"author":{"gitId":"TZL0"},"content":"        @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":184,"author":{"gitId":"TZL0"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2022-10-06"},{"lineNumber":185,"author":{"gitId":"TZL0"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-06"},{"lineNumber":186,"author":{"gitId":"TZL0"},"content":"                return true;","lastModifiedDate":"2022-10-06"},{"lineNumber":187,"author":{"gitId":"TZL0"},"content":"            }","lastModifiedDate":"2022-10-06"},{"lineNumber":188,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":189,"author":{"gitId":"TZL0"},"content":"            if (!(other instanceof EditAppointmentDescriptor)) {","lastModifiedDate":"2022-10-06"},{"lineNumber":190,"author":{"gitId":"TZL0"},"content":"                return false;","lastModifiedDate":"2022-10-06"},{"lineNumber":191,"author":{"gitId":"TZL0"},"content":"            }","lastModifiedDate":"2022-10-06"},{"lineNumber":192,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":193,"author":{"gitId":"TZL0"},"content":"            EditAppointmentDescriptor e \u003d (EditAppointmentDescriptor) other;","lastModifiedDate":"2022-10-06"},{"lineNumber":194,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":195,"author":{"gitId":"TZL0"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2022-10-07"},{"lineNumber":196,"author":{"gitId":"TZL0"},"content":"                    \u0026\u0026 getTest().equals(e.getTest())","lastModifiedDate":"2022-10-06"},{"lineNumber":197,"author":{"gitId":"TZL0"},"content":"                    \u0026\u0026 getDoctor().equals(e.getDoctor())","lastModifiedDate":"2022-10-06"},{"lineNumber":198,"author":{"gitId":"TZL0"},"content":"                    \u0026\u0026 getSlot().equals(e.getSlot());","lastModifiedDate":"2022-10-06"},{"lineNumber":199,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":200,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":201,"author":{"gitId":"TZL0"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"wadia82":1,"Fuzanwenn":1,"TZL0":199}},{"path":"src/main/java/seedu/address/logic/commands/EditPatientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"TZL0"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"TZL0"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PATIENTS;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":23,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.Address;","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.Email;","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.Name;","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.Phone;","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.Remark;","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"TZL0"},"content":" * Edits the details of an existing patient in the address book.","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"TZL0"},"content":"public class EditPatientCommand extends Command {","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"TZL0"},"content":"    public static final CommandWord COMMAND_WORD \u003d new CommandWord(\"editpatient\", \"ep\");","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"guokweijie"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the patient identified \"","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"guokweijie"},"content":"            + \"by the index number used in the displayed patient list. \"","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"TZL0"},"content":"            + \"[\" + PREFIX_REMARK + \"REMARK] \"","lastModifiedDate":"2022-10-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"TZL0"},"content":"    public static final String MESSAGE_EDIT_PATIENT_SUCCESS \u003d \"Edited Patient: %1$s\";","lastModifiedDate":"2022-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"TZL0"},"content":"    public static final String MESSAGE_DUPLICATE_PATIENT \u003d \"This patient already exists in the address book.\";","lastModifiedDate":"2022-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":57,"author":{"gitId":"TZL0"},"content":"    private final EditPatientDescriptor editPatientDescriptor;","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"TZL0"},"content":"     * @param index of the patient in the filtered patient list to edit","lastModifiedDate":"2022-10-16"},{"lineNumber":61,"author":{"gitId":"TZL0"},"content":"     * @param editPatientDescriptor details to edit the patient with","lastModifiedDate":"2022-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"TZL0"},"content":"    public EditPatientCommand(Index index, EditPatientDescriptor editPatientDescriptor) {","lastModifiedDate":"2022-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":65,"author":{"gitId":"TZL0"},"content":"        requireNonNull(editPatientDescriptor);","lastModifiedDate":"2022-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":68,"author":{"gitId":"TZL0"},"content":"        this.editPatientDescriptor \u003d new EditPatientDescriptor(editPatientDescriptor);","lastModifiedDate":"2022-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"guokweijie"},"content":"        List\u003cPatient\u003e lastShownList \u003d model.getFilteredPatientList();","lastModifiedDate":"2022-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"wadia82"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"guokweijie"},"content":"        Patient patientToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-10-13"},{"lineNumber":81,"author":{"gitId":"TZL0"},"content":"        Patient editedPatient \u003d createEditedPatient(patientToEdit, editPatientDescriptor);","lastModifiedDate":"2022-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"TZL0"},"content":"        if (!patientToEdit.isSamePatient(editedPatient) \u0026\u0026 model.hasPatient(editedPatient)) {","lastModifiedDate":"2022-10-16"},{"lineNumber":84,"author":{"gitId":"TZL0"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PATIENT);","lastModifiedDate":"2022-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"TZL0"},"content":"        model.setPatient(patientToEdit, editedPatient);","lastModifiedDate":"2022-10-16"},{"lineNumber":88,"author":{"gitId":"TZL0"},"content":"        model.updateFilteredPatientList(PREDICATE_SHOW_ALL_PATIENTS);","lastModifiedDate":"2022-10-16"},{"lineNumber":89,"author":{"gitId":"TZL0"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PATIENT_SUCCESS, editedPatient));","lastModifiedDate":"2022-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"TZL0"},"content":"     * Creates and returns a {@code Patient} with the details of {@code patientToEdit}","lastModifiedDate":"2022-10-16"},{"lineNumber":94,"author":{"gitId":"TZL0"},"content":"     * edited with {@code editPatientDescriptor}.","lastModifiedDate":"2022-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":96,"author":{"gitId":"TZL0"},"content":"    private static Patient createEditedPatient(Patient patientToEdit, EditPatientDescriptor editPatientDescriptor) {","lastModifiedDate":"2022-10-16"},{"lineNumber":97,"author":{"gitId":"guokweijie"},"content":"        assert patientToEdit !\u003d null;","lastModifiedDate":"2022-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":99,"author":{"gitId":"TZL0"},"content":"        Name updatedName \u003d editPatientDescriptor.getName().orElse(patientToEdit.getName());","lastModifiedDate":"2022-10-16"},{"lineNumber":100,"author":{"gitId":"TZL0"},"content":"        Phone updatedPhone \u003d editPatientDescriptor.getPhone().orElse(patientToEdit.getPhone());","lastModifiedDate":"2022-10-16"},{"lineNumber":101,"author":{"gitId":"TZL0"},"content":"        Email updatedEmail \u003d editPatientDescriptor.getEmail().orElse(patientToEdit.getEmail());","lastModifiedDate":"2022-10-16"},{"lineNumber":102,"author":{"gitId":"TZL0"},"content":"        Address updatedAddress \u003d editPatientDescriptor.getAddress().orElse(patientToEdit.getAddress());","lastModifiedDate":"2022-10-16"},{"lineNumber":103,"author":{"gitId":"TZL0"},"content":"        Remark updatedRemark \u003d editPatientDescriptor.getRemark().orElse(patientToEdit.getRemark());","lastModifiedDate":"2022-10-16"},{"lineNumber":104,"author":{"gitId":"TZL0"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPatientDescriptor.getTags().orElse(patientToEdit.getTags());","lastModifiedDate":"2022-10-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":106,"author":{"gitId":"guokweijie"},"content":"        return new Patient(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedRemark, updatedTags);","lastModifiedDate":"2022-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"TZL0"},"content":"        if (!(other instanceof EditPatientCommand)) {","lastModifiedDate":"2022-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"TZL0"},"content":"        EditPatientCommand e \u003d (EditPatientCommand) other;","lastModifiedDate":"2022-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":121,"author":{"gitId":"TZL0"},"content":"                \u0026\u0026 editPatientDescriptor.equals(e.editPatientDescriptor);","lastModifiedDate":"2022-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":125,"author":{"gitId":"TZL0"},"content":"     * Stores the details to edit the patient with. Each non-empty field value will replace the","lastModifiedDate":"2022-10-16"},{"lineNumber":126,"author":{"gitId":"TZL0"},"content":"     * corresponding field value of the patient.","lastModifiedDate":"2022-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":128,"author":{"gitId":"TZL0"},"content":"    public static class EditPatientDescriptor {","lastModifiedDate":"2022-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":134,"author":{"gitId":"TZL0"},"content":"        private Remark remark;","lastModifiedDate":"2022-10-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":136,"author":{"gitId":"TZL0"},"content":"        public EditPatientDescriptor() {}","lastModifiedDate":"2022-10-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":142,"author":{"gitId":"TZL0"},"content":"        public EditPatientDescriptor(EditPatientDescriptor toCopy) {","lastModifiedDate":"2022-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":148,"author":{"gitId":"TZL0"},"content":"            setRemark(toCopy.remark);","lastModifiedDate":"2022-10-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"TZL0"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags, remark);","lastModifiedDate":"2022-10-06"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"TZL0"},"content":"        public void setRemark(Remark remark) {","lastModifiedDate":"2022-10-06"},{"lineNumber":191,"author":{"gitId":"TZL0"},"content":"            this.remark \u003d remark;","lastModifiedDate":"2022-10-06"},{"lineNumber":192,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":193,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":194,"author":{"gitId":"TZL0"},"content":"        public Optional\u003cRemark\u003e getRemark() {","lastModifiedDate":"2022-10-06"},{"lineNumber":195,"author":{"gitId":"TZL0"},"content":"            return Optional.ofNullable(remark);","lastModifiedDate":"2022-10-06"},{"lineNumber":196,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":197,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":199,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":200,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":201,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":207,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":208,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":209,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":210,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":218,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":221,"author":{"gitId":"TZL0"},"content":"            if (!(other instanceof EditPatientDescriptor)) {","lastModifiedDate":"2022-10-16"},{"lineNumber":222,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":225,"author":{"gitId":"TZL0"},"content":"            EditPatientDescriptor e \u003d (EditPatientDescriptor) other;","lastModifiedDate":"2022-10-16"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":227,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":228,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":229,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":230,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":231,"author":{"gitId":"TZL0"},"content":"                    \u0026\u0026 getRemark().equals(e.getRemark())","lastModifiedDate":"2022-10-06"},{"lineNumber":232,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":235,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"wadia82":1,"guokweijie":6,"TZL0":57,"-":171}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"TZL0"},"content":"    public static final CommandWord COMMAND_WORD \u003d new CommandWord(\"exit\");","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Address Book as requested ...\";","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"TZL0":1,"-":18}},{"path":"src/main/java/seedu/address/logic/commands/FilterNameCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2018-04-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"wadia82"},"content":"import seedu.address.model.patient.NameContainsKeywordsPredicatePatient;","lastModifiedDate":"2022-10-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"TZL0"},"content":" * Filters and lists all patients in address book whose name contains any of the argument keywords.","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"TZL0"},"content":"public class FilterNameCommand extends Command {","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"TZL0"},"content":"    public static final CommandWord COMMAND_WORD \u003d","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"TZL0"},"content":"            new CommandWord(\"filtername\", \"findname\", \"fn\");","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"Fuzanwenn"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Filters all patients whose names contain any of \"","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"wadia82"},"content":"    private final NameContainsKeywordsPredicatePatient predicate;","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"wadia82"},"content":"    public FilterNameCommand(NameContainsKeywordsPredicatePatient predicate) {","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"TZL0"},"content":"        model.updateFilteredPatientList(predicate);","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":34,"author":{"gitId":"TZL0"},"content":"                String.format(Messages.MESSAGE_PATIENTS_LISTED_OVERVIEW, model.getFilteredPatientList().size()));","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"TZL0"},"content":"                || (other instanceof FilterNameCommand // instanceof handles nulls","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"TZL0"},"content":"                \u0026\u0026 predicate.equals(((FilterNameCommand) other).predicate)); // state check","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"wadia82":3,"Fuzanwenn":1,"TZL0":8,"-":31}},{"path":"src/main/java/seedu/address/logic/commands/FilterTagCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"guokweijie"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"guokweijie"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"guokweijie"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"guokweijie"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"guokweijie"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"guokweijie"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.TagContainsKeywordPredicate;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"guokweijie"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"guokweijie"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"guokweijie"},"content":" * Filters all patients in address book who have tag(s) containing the argument keyword.","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"guokweijie"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"guokweijie"},"content":"public class FilterTagCommand extends Command {","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"guokweijie"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"TZL0"},"content":"    public static final CommandWord COMMAND_WORD \u003d new CommandWord(\"filtertag\", \"ft\");","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"guokweijie"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"Fuzanwenn"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Filters all patients who have tag(s) \"","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"guokweijie"},"content":"            + \"containing the keyword and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"guokweijie"},"content":"            + \"Parameters: KEYWORD\\n\"","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"guokweijie"},"content":"            + \"Example: \" + COMMAND_WORD + \"critical\";","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"guokweijie"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"guokweijie"},"content":"    public final TagContainsKeywordPredicate predicate;","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"guokweijie"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"guokweijie"},"content":"    public FilterTagCommand(TagContainsKeywordPredicate predicate) {","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"guokweijie"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"guokweijie"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"guokweijie"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"guokweijie"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"guokweijie"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"guokweijie"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"TZL0"},"content":"        model.updateFilteredPatientList(predicate);","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"guokweijie"},"content":"        return new CommandResult(","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"TZL0"},"content":"                String.format(Messages.MESSAGE_PATIENTS_LISTED_OVERVIEW, model.getFilteredPatientList().size()));","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"guokweijie"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"guokweijie"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"guokweijie"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"guokweijie"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"guokweijie"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"guokweijie"},"content":"                || (other instanceof FilterTagCommand // instanceof handles nulls","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"guokweijie"},"content":"                \u0026\u0026 predicate.equals(((FilterTagCommand) other).predicate)); // state check","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"guokweijie"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"guokweijie"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"guokweijie"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"guokweijie"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"guokweijie":38,"Fuzanwenn":1,"TZL0":4}},{"path":"src/main/java/seedu/address/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"TZL0"},"content":"    public static final CommandWord COMMAND_WORD \u003d new CommandWord(\"help\");","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"TZL0":1,"-":20}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"TZL0"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_APPOINTMENTS;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"TZL0"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PATIENTS;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"TZL0"},"content":" * Lists all patients in the address book to the user.","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"TZL0"},"content":"    public static final CommandWord COMMAND_WORD \u003d new CommandWord(\"list\", \"l\");","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"TZL0"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all patients and appointments\";","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"TZL0"},"content":"        model.updateFilteredPatientList(PREDICATE_SHOW_ALL_PATIENTS);","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"TZL0"},"content":"        model.updateFilteredAppointmentList(PREDICATE_SHOW_ALL_APPOINTMENTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"TZL0":7,"-":19}},{"path":"src/main/java/seedu/address/logic/commands/RemarkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-09-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2022-09-13"},{"lineNumber":5,"author":{"gitId":"TZL0"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PATIENTS;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2022-09-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-09-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-09-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-09-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-09-13"},{"lineNumber":13,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.Remark;","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-09-13"},{"lineNumber":17,"author":{"gitId":"TZL0"},"content":" * Changes the remark of an existing patient in the address book.","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-09-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2022-09-13"},{"lineNumber":20,"author":{"gitId":"TZL0"},"content":"    public static final CommandWord COMMAND_WORD \u003d new CommandWord(\"remark\", \"r\");","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"TZL0"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the remark of the patient identified \"","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"TZL0"},"content":"            + \"by the index number used in the last patient listing. \"","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2022-09-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2022-09-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_REMARK + \"[REMARK]\\n\"","lastModifiedDate":"2022-09-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2022-09-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_REMARK + \"Likes to swim.\";","lastModifiedDate":"2022-09-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":29,"author":{"gitId":"TZL0"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Patient: %1$s\";","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"TZL0"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Patient: %1$s\";","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2022-09-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final Remark remark;","lastModifiedDate":"2022-09-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":35,"author":{"gitId":"TZL0"},"content":"     * @param index of the patient in the filtered patient list to edit the remark","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"TZL0"},"content":"     * @param remark of the patient to be updated to","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, Remark remark) {","lastModifiedDate":"2022-09-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2022-09-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-09-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2022-09-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-09-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-09-13"},{"lineNumber":45,"author":{"gitId":"guokweijie"},"content":"        List\u003cPatient\u003e lastShownList \u003d model.getFilteredPatientList();","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-09-13"},{"lineNumber":48,"author":{"gitId":"wadia82"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-09-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":51,"author":{"gitId":"guokweijie"},"content":"        Patient patientToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"guokweijie"},"content":"        Patient editedPatient \u003d new Patient(patientToEdit.getName(), patientToEdit.getPhone(), patientToEdit.getEmail(),","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"guokweijie"},"content":"                patientToEdit.getAddress(), remark, patientToEdit.getTags());","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":55,"author":{"gitId":"TZL0"},"content":"        model.setPatient(patientToEdit, editedPatient);","lastModifiedDate":"2022-10-16"},{"lineNumber":56,"author":{"gitId":"TZL0"},"content":"        model.updateFilteredPatientList(PREDICATE_SHOW_ALL_PATIENTS);","lastModifiedDate":"2022-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":58,"author":{"gitId":"guokweijie"},"content":"        return new CommandResult(generateSuccessMessage(editedPatient));","lastModifiedDate":"2022-10-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether the remark is added to or removed from","lastModifiedDate":"2022-09-13"},{"lineNumber":63,"author":{"gitId":"TZL0"},"content":"     * {@code patientToEdit}.","lastModifiedDate":"2022-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":65,"author":{"gitId":"guokweijie"},"content":"    private String generateSuccessMessage(Patient patientToEdit) {","lastModifiedDate":"2022-10-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2022-09-13"},{"lineNumber":67,"author":{"gitId":"guokweijie"},"content":"        return String.format(message, patientToEdit);","lastModifiedDate":"2022-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-09-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-09-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2022-09-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-09-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2022-09-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-09-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-09-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2022-09-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2022-09-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-09-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2022-09-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2022-09-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2022-09-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2022-09-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-09-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"}],"authorContributionMap":{"wadia82":1,"guokweijie":7,"TZL0":14,"-":64}},{"path":"src/main/java/seedu/address/logic/commands/SelectPatientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TZL0"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"TZL0"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"TZL0"},"content":"import java.util.List;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"TZL0"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"TZL0"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"TZL0"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"TZL0"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"TZL0"},"content":" * Select the given patient and filter appointment list by given patient.","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"TZL0"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"guokweijie"},"content":"public class SelectPatientCommand extends Command {","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"TZL0"},"content":"    public static final CommandWord COMMAND_WORD \u003d new CommandWord(\"select\", \"sel\");","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"TZL0"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Selects the indicated patient and filter \"","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"TZL0"},"content":"            + \"the appointments list only containing selected patient\\n\"","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"TZL0"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"TZL0"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \";","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"TZL0"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Selected Patient: %1$s\";","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"TZL0"},"content":"    public static final String MESSAGE_NOT_SELECTED \u003d \"Index of patient to select must be provided.\";","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"TZL0"},"content":"    private final Index index;","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"TZL0"},"content":"     * @param index of the patient in the filtered patient list to select","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"guokweijie"},"content":"    public SelectPatientCommand(Index index) {","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"TZL0"},"content":"        requireNonNull(index);","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"TZL0"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"TZL0"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"TZL0"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"TZL0"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"guokweijie"},"content":"        List\u003cPatient\u003e lastShownList \u003d model.getFilteredPatientList();","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"TZL0"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"TZL0"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"guokweijie"},"content":"        Patient patientToSelect \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"TZL0"},"content":"        model.selectPatient(patientToSelect);","lastModifiedDate":"2022-10-17"},{"lineNumber":50,"author":{"gitId":"guokweijie"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, patientToSelect));","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"TZL0"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"TZL0"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"TZL0"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"TZL0"},"content":"            return true;","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"guokweijie"},"content":"        if (!(other instanceof SelectPatientCommand)) {","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"TZL0"},"content":"            return false;","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"guokweijie"},"content":"        SelectPatientCommand e \u003d (SelectPatientCommand) other;","lastModifiedDate":"2022-10-13"},{"lineNumber":64,"author":{"gitId":"TZL0"},"content":"        return index.equals(e.index);","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"TZL0"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"guokweijie":7,"TZL0":59}},{"path":"src/main/java/seedu/address/logic/commands/SortCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SpecOps2016"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"SpecOps2016"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"SpecOps2016"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"SpecOps2016"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"SpecOps2016"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"SpecOps2016"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"SpecOps2016"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"SpecOps2016"},"content":"/**","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"SpecOps2016"},"content":" * Sorts data in Address Book.","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"SpecOps2016"},"content":" */","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"SpecOps2016"},"content":"public class SortCommand extends Command {","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"TZL0"},"content":"    public static final CommandWord COMMAND_WORD \u003d new CommandWord(\"sort\");","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"SpecOps2016"},"content":"    public static final String MESSAGE_USAGE \u003d","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"SpecOps2016"},"content":"            COMMAND_WORD + \": Sorts the list of people according to the specified field.\"","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"SpecOps2016"},"content":"            + \"by alphabetical order.\\n\"","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"SpecOps2016"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"SpecOps2016"},"content":"            + \"Parameters: FIELD (must not be empty) \"","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"SpecOps2016"},"content":"            + \"Example: \" + COMMAND_WORD + \"name\";","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"SpecOps2016"},"content":"    public static final String MESSAGE_SORT_SUCCESS \u003d \"Sorted according to %1$s\";","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"SpecOps2016"},"content":"    private final String criteria;","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"SpecOps2016"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"SpecOps2016"},"content":"     * @param criteria to be sorted by","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"SpecOps2016"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"SpecOps2016"},"content":"    public SortCommand(String criteria) {","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"SpecOps2016"},"content":"        requireAllNonNull(criteria);","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"SpecOps2016"},"content":"        this.criteria \u003d criteria;","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"SpecOps2016"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"SpecOps2016"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"SpecOps2016"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"SpecOps2016"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"SpecOps2016"},"content":"        if (this.criteria.toLowerCase().equals(\"name\")) {","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"SpecOps2016"},"content":"            NameComparator nameComparator \u003d new NameComparator();","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"SpecOps2016"},"content":"            model.sort(nameComparator);","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"SpecOps2016"},"content":"        } else if (this.criteria.toLowerCase().equals(\"phone\")) {","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"SpecOps2016"},"content":"            PhoneComparator phoneComparator \u003d new PhoneComparator();","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"SpecOps2016"},"content":"            model.sort(phoneComparator);","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"SpecOps2016"},"content":"        } else if (this.criteria.toLowerCase().equals(\"email\")) {","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"SpecOps2016"},"content":"            EmailComparator emailComparator \u003d new EmailComparator();","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"SpecOps2016"},"content":"            model.sort(emailComparator);","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"SpecOps2016"},"content":"        } else if (this.criteria.toLowerCase().equals(\"address\")) {","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"SpecOps2016"},"content":"            AddressComparator addressComparator \u003d new AddressComparator();","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"SpecOps2016"},"content":"            model.sort(addressComparator);","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"SpecOps2016"},"content":"        } else {","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"SpecOps2016"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_SORT_CRITERIA);","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"SpecOps2016"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"SpecOps2016"},"content":"        String message \u003d String.format(MESSAGE_SORT_SUCCESS, this.criteria);","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"SpecOps2016"},"content":"        return new CommandResult(message);","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"SpecOps2016"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"SpecOps2016"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"TZL0"},"content":"     * Compares two patients by name.","lastModifiedDate":"2022-10-16"},{"lineNumber":62,"author":{"gitId":"SpecOps2016"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"guokweijie"},"content":"    public class NameComparator implements Comparator\u003cPatient\u003e {","lastModifiedDate":"2022-10-13"},{"lineNumber":64,"author":{"gitId":"SpecOps2016"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"guokweijie"},"content":"        public int compare(Patient first, Patient second) {","lastModifiedDate":"2022-10-13"},{"lineNumber":66,"author":{"gitId":"SpecOps2016"},"content":"            return first.getName().toString().compareTo(second.getName().toString());","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"SpecOps2016"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"SpecOps2016"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"SpecOps2016"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"TZL0"},"content":"     * Compares two patients by phone.","lastModifiedDate":"2022-10-16"},{"lineNumber":72,"author":{"gitId":"SpecOps2016"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"guokweijie"},"content":"    public class PhoneComparator implements Comparator\u003cPatient\u003e {","lastModifiedDate":"2022-10-13"},{"lineNumber":74,"author":{"gitId":"SpecOps2016"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":75,"author":{"gitId":"guokweijie"},"content":"        public int compare(Patient first, Patient second) {","lastModifiedDate":"2022-10-13"},{"lineNumber":76,"author":{"gitId":"SpecOps2016"},"content":"            return first.getPhone().toString().compareTo(second.getPhone().toString());","lastModifiedDate":"2022-10-11"},{"lineNumber":77,"author":{"gitId":"SpecOps2016"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":78,"author":{"gitId":"SpecOps2016"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":79,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":80,"author":{"gitId":"SpecOps2016"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":81,"author":{"gitId":"TZL0"},"content":"     * Compares two patients by email.","lastModifiedDate":"2022-10-16"},{"lineNumber":82,"author":{"gitId":"SpecOps2016"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":83,"author":{"gitId":"guokweijie"},"content":"    public class EmailComparator implements Comparator\u003cPatient\u003e {","lastModifiedDate":"2022-10-13"},{"lineNumber":84,"author":{"gitId":"SpecOps2016"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":85,"author":{"gitId":"guokweijie"},"content":"        public int compare(Patient first, Patient second) {","lastModifiedDate":"2022-10-13"},{"lineNumber":86,"author":{"gitId":"SpecOps2016"},"content":"            return first.getEmail().toString().compareTo(second.getEmail().toString());","lastModifiedDate":"2022-10-11"},{"lineNumber":87,"author":{"gitId":"SpecOps2016"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":88,"author":{"gitId":"SpecOps2016"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":89,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":90,"author":{"gitId":"SpecOps2016"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":91,"author":{"gitId":"TZL0"},"content":"     * Compares two patients by address.","lastModifiedDate":"2022-10-16"},{"lineNumber":92,"author":{"gitId":"SpecOps2016"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":93,"author":{"gitId":"guokweijie"},"content":"    public class AddressComparator implements Comparator\u003cPatient\u003e {","lastModifiedDate":"2022-10-13"},{"lineNumber":94,"author":{"gitId":"SpecOps2016"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":95,"author":{"gitId":"guokweijie"},"content":"        public int compare(Patient first, Patient second) {","lastModifiedDate":"2022-10-13"},{"lineNumber":96,"author":{"gitId":"SpecOps2016"},"content":"            return first.getAddress().toString().compareTo(second.getAddress().toString());","lastModifiedDate":"2022-10-11"},{"lineNumber":97,"author":{"gitId":"SpecOps2016"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":98,"author":{"gitId":"SpecOps2016"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":99,"author":{"gitId":"SpecOps2016"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"guokweijie":8,"SpecOps2016":85,"TZL0":6}},{"path":"src/main/java/seedu/address/logic/parser/AddAppointmentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TZL0"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"TZL0"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"TZL0"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DOCTOR;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"TZL0"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEDICAL_TEST;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"TZL0"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-07"},{"lineNumber":7,"author":{"gitId":"TZL0"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SLOT;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"TZL0"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"TZL0"},"content":"import seedu.address.logic.commands.AddAppointmentCommand;","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"TZL0"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.appointment.Doctor;","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.appointment.MedicalTest;","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.appointment.Slot;","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.Name;","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"TZL0"},"content":"/**","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"TZL0"},"content":" * Parses input arguments and creates a new AddAppointmentCommand object","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"TZL0"},"content":" */","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"TZL0"},"content":"public class AddAppointmentCommandParser implements Parser\u003cAddAppointmentCommand\u003e {","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"TZL0"},"content":"     * Parses the given {@code String} of arguments in the context of the AddAppointmentCommand","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"TZL0"},"content":"     * and returns an AddAppointmentCommand object for execution.","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"TZL0"},"content":"     * @throws seedu.address.logic.parser.exceptions.ParseException if the user input does not conform","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"TZL0"},"content":"     *      the expected format","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"TZL0"},"content":"    public AddAppointmentCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"TZL0"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"TZL0"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_MEDICAL_TEST, PREFIX_SLOT, PREFIX_DOCTOR);","lastModifiedDate":"2022-10-07"},{"lineNumber":33,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"TZL0"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_MEDICAL_TEST, PREFIX_SLOT, PREFIX_DOCTOR)","lastModifiedDate":"2022-10-07"},{"lineNumber":35,"author":{"gitId":"TZL0"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"TZL0"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"TZL0"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddAppointmentCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"TZL0"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2022-10-07"},{"lineNumber":41,"author":{"gitId":"TZL0"},"content":"        MedicalTest medicalTest \u003d ParserUtil.parseMedicalTest(argMultimap.getValue(PREFIX_MEDICAL_TEST).get());","lastModifiedDate":"2022-10-06"},{"lineNumber":42,"author":{"gitId":"TZL0"},"content":"        Slot slot \u003d ParserUtil.parseSlot(argMultimap.getValue(PREFIX_SLOT).get());","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"TZL0"},"content":"        Doctor doctor \u003d ParserUtil.parseDoctor(argMultimap.getValue(PREFIX_DOCTOR).get());","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":45,"author":{"gitId":"TZL0"},"content":"        Appointment appointment \u003d new Appointment(name, medicalTest, slot, doctor);","lastModifiedDate":"2022-10-07"},{"lineNumber":46,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":47,"author":{"gitId":"TZL0"},"content":"        return new AddAppointmentCommand(appointment);","lastModifiedDate":"2022-10-06"},{"lineNumber":48,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":49,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":50,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":51,"author":{"gitId":"TZL0"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-10-06"},{"lineNumber":52,"author":{"gitId":"TZL0"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-10-06"},{"lineNumber":53,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":54,"author":{"gitId":"TZL0"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-10-06"},{"lineNumber":55,"author":{"gitId":"TZL0"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-10-06"},{"lineNumber":56,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":57,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":58,"author":{"gitId":"TZL0"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"TZL0":58}},{"path":"src/main/java/seedu/address/logic/parser/AddPatientCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"TZL0"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"guokweijie"},"content":"import seedu.address.logic.commands.AddPatientCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.Address;","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.Email;","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.Name;","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.Phone;","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.Remark;","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"TZL0"},"content":" * Parses input arguments and creates a new AddPatientCommand object","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"guokweijie"},"content":"public class AddPatientCommandParser implements Parser\u003cAddPatientCommand\u003e {","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"TZL0"},"content":"     * Parses the given {@code String} of arguments in the context of the AddPatientCommand","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"TZL0"},"content":"     * and returns an AddPatientCommand object for execution.","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"guokweijie"},"content":"    public AddPatientCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"TZL0"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"TZL0"},"content":"                        PREFIX_ADDRESS, PREFIX_TAG, PREFIX_REMARK);","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2017-12-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":41,"author":{"gitId":"guokweijie"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPatientCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"TZL0"},"content":"        Remark remark \u003d ParserUtil.parseRemark(argMultimap.getValue(PREFIX_REMARK).orElse(\"\"));","lastModifiedDate":"2022-10-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":51,"author":{"gitId":"guokweijie"},"content":"        Patient patient \u003d new Patient(name, phone, email, address, remark, tagList);","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":53,"author":{"gitId":"guokweijie"},"content":"        return new AddPatientCommand(patient);","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"guokweijie":6,"TZL0":13,"-":45}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"TZL0"},"content":"import seedu.address.logic.commands.AddAppointmentCommand;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"guokweijie"},"content":"import seedu.address.logic.commands.AddPatientCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"wadia82"},"content":"import seedu.address.logic.commands.DeleteAppointmentCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"wadia82"},"content":"import seedu.address.logic.commands.DeletePatientCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"TZL0"},"content":"import seedu.address.logic.commands.EditAppointmentCommand;","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"TZL0"},"content":"import seedu.address.logic.commands.EditPatientCommand;","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"TZL0"},"content":"import seedu.address.logic.commands.FilterNameCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"guokweijie"},"content":"import seedu.address.logic.commands.FilterTagCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.RemarkCommand;","lastModifiedDate":"2022-09-13"},{"lineNumber":23,"author":{"gitId":"guokweijie"},"content":"import seedu.address.logic.commands.SelectPatientCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"SpecOps2016"},"content":"import seedu.address.logic.commands.SortCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"TZL0"},"content":"        if (SortCommand.COMMAND_WORD.matches(commandWord)) {","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"TZL0"},"content":"            return new SortCommandParser().parse(arguments);","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"guokweijie"},"content":"        } else if (AddPatientCommand.COMMAND_WORD.matches(commandWord)) {","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"guokweijie"},"content":"            return new AddPatientCommandParser().parse(arguments);","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"TZL0"},"content":"        } else if (AddAppointmentCommand.COMMAND_WORD.matches(commandWord)) {","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"TZL0"},"content":"            return new AddAppointmentCommandParser().parse(arguments);","lastModifiedDate":"2022-10-06"},{"lineNumber":59,"author":{"gitId":"TZL0"},"content":"        } else if (EditAppointmentCommand.COMMAND_WORD.matches(commandWord)) {","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"TZL0"},"content":"            return new EditAppointmentCommandParser().parse(arguments);","lastModifiedDate":"2022-10-06"},{"lineNumber":61,"author":{"gitId":"TZL0"},"content":"        } else if (EditPatientCommand.COMMAND_WORD.matches(commandWord)) {","lastModifiedDate":"2022-10-16"},{"lineNumber":62,"author":{"gitId":"guokweijie"},"content":"            return new EditPatientCommandParser().parse(arguments);","lastModifiedDate":"2022-10-13"},{"lineNumber":63,"author":{"gitId":"TZL0"},"content":"        } else if (DeleteAppointmentCommand.COMMAND_WORD.matches(commandWord)) {","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"wadia82"},"content":"            return new DeleteAppointmentCommandParser().parse(arguments);","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"TZL0"},"content":"        } else if (DeletePatientCommand.COMMAND_WORD.matches(commandWord)) {","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"wadia82"},"content":"            return new DeletePatientCommandParser().parse(arguments);","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"TZL0"},"content":"        } else if (ClearCommand.COMMAND_WORD.matches(commandWord)) {","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"TZL0"},"content":"        } else if (FilterNameCommand.COMMAND_WORD.matches(commandWord)) {","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"TZL0"},"content":"            return new FilterNameCommandParser().parse(arguments);","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"TZL0"},"content":"        } else if (FilterTagCommand.COMMAND_WORD.matches(commandWord)) {","lastModifiedDate":"2022-10-12"},{"lineNumber":72,"author":{"gitId":"guokweijie"},"content":"            return new FilterTagCommandParser().parse(arguments);","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"TZL0"},"content":"        } else if (RemarkCommand.COMMAND_WORD.matches(commandWord)) {","lastModifiedDate":"2022-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return new RemarkCommandParser().parse(arguments);","lastModifiedDate":"2022-09-13"},{"lineNumber":75,"author":{"gitId":"TZL0"},"content":"        } else if (ListCommand.COMMAND_WORD.matches(commandWord)) {","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"TZL0"},"content":"        } else if (ExitCommand.COMMAND_WORD.matches(commandWord)) {","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"TZL0"},"content":"        } else if (HelpCommand.COMMAND_WORD.matches(commandWord)) {","lastModifiedDate":"2022-10-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"guokweijie"},"content":"        } else if (SelectPatientCommand.COMMAND_WORD.matches(commandWord)) {","lastModifiedDate":"2022-10-13"},{"lineNumber":82,"author":{"gitId":"guokweijie"},"content":"            return new SelectPatientCommandParser().parse(arguments);","lastModifiedDate":"2022-10-13"},{"lineNumber":83,"author":{"gitId":"TZL0"},"content":"        } else {","lastModifiedDate":"2022-10-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"wadia82":4,"guokweijie":9,"SpecOps2016":1,"TZL0":22,"-":52}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"TZL0"},"content":"    /* Prefix definitions for Patient*/","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_REMARK \u003d new Prefix(\"r/\");","lastModifiedDate":"2022-09-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"SpecOps2016"},"content":"    public static final Prefix PREFIX_CRITERIA \u003d new Prefix(\"c/\");","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"TZL0"},"content":"    /* Prefix definitions for Appointment*/","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"TZL0"},"content":"    public static final Prefix PREFIX_MEDICAL_TEST \u003d new Prefix(\"t/\");","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"TZL0"},"content":"    public static final Prefix PREFIX_DOCTOR \u003d new Prefix(\"d/\");","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"TZL0"},"content":"    public static final Prefix PREFIX_SLOT \u003d new Prefix(\"s/\");","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"SpecOps2016":1,"TZL0":5,"-":16}},{"path":"src/main/java/seedu/address/logic/parser/DeleteAppointmentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":6,"author":{"gitId":"wadia82"},"content":"import seedu.address.logic.commands.DeleteAppointmentCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"wadia82"},"content":" * Parses input arguments and creates a new DeletePatientCommand object","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"wadia82"},"content":"public class DeleteAppointmentCommandParser implements Parser\u003cDeleteAppointmentCommand\u003e {","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"wadia82"},"content":"     * Parses the given {@code String} of arguments in the context of the DeletePatientCommand","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"wadia82"},"content":"     * and returns a DeletePatientCommand object for execution.","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"wadia82"},"content":"    public DeleteAppointmentCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"wadia82"},"content":"            return new DeleteAppointmentCommand(index);","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"wadia82"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteAppointmentCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"wadia82":8,"-":20}},{"path":"src/main/java/seedu/address/logic/parser/DeletePatientCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":6,"author":{"gitId":"wadia82"},"content":"import seedu.address.logic.commands.DeletePatientCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"wadia82"},"content":" * Parses input arguments and creates a new DeletePatientCommand object","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"wadia82"},"content":"public class DeletePatientCommandParser implements Parser\u003cDeletePatientCommand\u003e {","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"wadia82"},"content":"     * Parses the given {@code String} of arguments in the context of the DeletePatientCommand","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"wadia82"},"content":"     * and returns a DeletePatientCommand object for execution.","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"wadia82"},"content":"    public DeletePatientCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"wadia82"},"content":"            return new DeletePatientCommand(index);","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"wadia82"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeletePatientCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"wadia82":8,"-":21}},{"path":"src/main/java/seedu/address/logic/parser/EditAppointmentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TZL0"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"TZL0"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"TZL0"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"TZL0"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DOCTOR;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"TZL0"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEDICAL_TEST;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"TZL0"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-07"},{"lineNumber":8,"author":{"gitId":"TZL0"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SLOT;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"TZL0"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"TZL0"},"content":"import seedu.address.logic.commands.EditAppointmentCommand;","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"TZL0"},"content":"import seedu.address.logic.commands.EditAppointmentCommand.EditAppointmentDescriptor;","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"TZL0"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"TZL0"},"content":"/**","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"TZL0"},"content":" * Parses input arguments and creates a new EditAppointmentCommand object","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"TZL0"},"content":" */","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"TZL0"},"content":"public class EditAppointmentCommandParser implements Parser\u003cEditAppointmentCommand\u003e {","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"TZL0"},"content":"     * Parses the given {@code String} of arguments in the context of the EditAppointmentCommand","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"TZL0"},"content":"     * and returns an EditAppointmentCommand object for execution.","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"TZL0"},"content":"     *","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"TZL0"},"content":"     * @throws seedu.address.logic.parser.exceptions.ParseException if the user input does not conform","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"TZL0"},"content":"     *                                                              the expected format","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"TZL0"},"content":"    public EditAppointmentCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"TZL0"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"TZL0"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"TZL0"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_MEDICAL_TEST, PREFIX_SLOT, PREFIX_DOCTOR);","lastModifiedDate":"2022-10-07"},{"lineNumber":30,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"TZL0"},"content":"        Index index;","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"TZL0"},"content":"        try {","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"TZL0"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"TZL0"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"TZL0"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"TZL0"},"content":"                    EditAppointmentCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"TZL0"},"content":"        EditAppointmentDescriptor editAppointmentDescriptor \u003d new EditAppointmentDescriptor();","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"TZL0"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2022-10-07"},{"lineNumber":42,"author":{"gitId":"TZL0"},"content":"            editAppointmentDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2022-10-07"},{"lineNumber":43,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"TZL0"},"content":"        if (argMultimap.getValue(PREFIX_SLOT).isPresent()) {","lastModifiedDate":"2022-10-06"},{"lineNumber":45,"author":{"gitId":"TZL0"},"content":"            editAppointmentDescriptor.setSlot(ParserUtil.parseSlot(argMultimap.getValue(PREFIX_SLOT).get()));","lastModifiedDate":"2022-10-06"},{"lineNumber":46,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":47,"author":{"gitId":"TZL0"},"content":"        if (argMultimap.getValue(PREFIX_MEDICAL_TEST).isPresent()) {","lastModifiedDate":"2022-10-06"},{"lineNumber":48,"author":{"gitId":"TZL0"},"content":"            editAppointmentDescriptor.setMedicalTest(","lastModifiedDate":"2022-10-06"},{"lineNumber":49,"author":{"gitId":"TZL0"},"content":"                    ParserUtil.parseMedicalTest(argMultimap.getValue(PREFIX_MEDICAL_TEST).get()));","lastModifiedDate":"2022-10-06"},{"lineNumber":50,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":51,"author":{"gitId":"TZL0"},"content":"        if (argMultimap.getValue(PREFIX_DOCTOR).isPresent()) {","lastModifiedDate":"2022-10-06"},{"lineNumber":52,"author":{"gitId":"TZL0"},"content":"            editAppointmentDescriptor.setDoctor(ParserUtil.parseDoctor(argMultimap.getValue(PREFIX_DOCTOR).get()));","lastModifiedDate":"2022-10-07"},{"lineNumber":53,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":54,"author":{"gitId":"TZL0"},"content":"        if (!editAppointmentDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2022-10-06"},{"lineNumber":55,"author":{"gitId":"TZL0"},"content":"            throw new ParseException(EditAppointmentCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-10-06"},{"lineNumber":56,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":57,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":58,"author":{"gitId":"TZL0"},"content":"        return new EditAppointmentCommand(index, editAppointmentDescriptor);","lastModifiedDate":"2022-10-06"},{"lineNumber":59,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":60,"author":{"gitId":"TZL0"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"TZL0":60}},{"path":"src/main/java/seedu/address/logic/parser/EditPatientCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"TZL0"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":18,"author":{"gitId":"TZL0"},"content":"import seedu.address.logic.commands.EditPatientCommand;","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"TZL0"},"content":" * Parses input arguments and creates a new EditPatientCommand object","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"TZL0"},"content":"public class EditPatientCommandParser implements Parser\u003cEditPatientCommand\u003e {","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"TZL0"},"content":"     * Parses the given {@code String} of arguments in the context of the EditPatientCommand","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"TZL0"},"content":"     * and returns an EditPatientCommand object for execution.","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"TZL0"},"content":"    public EditPatientCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":35,"author":{"gitId":"TZL0"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE,","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"TZL0"},"content":"                        PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG, PREFIX_REMARK);","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"TZL0"},"content":"            throw new ParseException(String.format(","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"TZL0"},"content":"                    MESSAGE_INVALID_COMMAND_FORMAT, EditPatientCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":47,"author":{"gitId":"TZL0"},"content":"        EditPatientCommand.EditPatientDescriptor editPatientDescriptor \u003d new EditPatientCommand.EditPatientDescriptor();","lastModifiedDate":"2022-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"TZL0"},"content":"            editPatientDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2022-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"TZL0"},"content":"            editPatientDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2022-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"TZL0"},"content":"            editPatientDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2022-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"TZL0"},"content":"            editPatientDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2022-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"TZL0"},"content":"        if (argMultimap.getValue(PREFIX_REMARK).isPresent()) {","lastModifiedDate":"2022-10-06"},{"lineNumber":61,"author":{"gitId":"TZL0"},"content":"            editPatientDescriptor.setRemark(ParserUtil.parseRemark(argMultimap.getValue(PREFIX_REMARK).get()));","lastModifiedDate":"2022-10-16"},{"lineNumber":62,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":63,"author":{"gitId":"TZL0"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPatientDescriptor::setTags);","lastModifiedDate":"2022-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"TZL0"},"content":"        if (!editPatientDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2022-10-16"},{"lineNumber":66,"author":{"gitId":"TZL0"},"content":"            throw new ParseException(EditPatientCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"TZL0"},"content":"        return new EditPatientCommand(index, editPatientDescriptor);","lastModifiedDate":"2022-10-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"TZL0":23,"-":64}},{"path":"src/main/java/seedu/address/logic/parser/FilterNameCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"TZL0"},"content":"import seedu.address.logic.commands.FilterNameCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"wadia82"},"content":"import seedu.address.model.patient.NameContainsKeywordsPredicatePatient;","lastModifiedDate":"2022-10-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"TZL0"},"content":" * Parses input arguments and creates a new FilterCommand object","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"TZL0"},"content":"public class FilterNameCommandParser implements Parser\u003cFilterNameCommand\u003e {","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"guokweijie"},"content":"     * Parses the given {@code String} of arguments in the context of the FindTagCommand","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"TZL0"},"content":"     * and returns a FilterNameCommand object for execution.","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"TZL0"},"content":"    public FilterNameCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"TZL0"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterNameCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"wadia82"},"content":"        return new FilterNameCommand(new NameContainsKeywordsPredicatePatient(Arrays.asList(nameKeywords)));","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"wadia82":2,"guokweijie":1,"TZL0":6,"-":24}},{"path":"src/main/java/seedu/address/logic/parser/FilterTagCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"guokweijie"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"guokweijie"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"guokweijie"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"guokweijie"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"guokweijie"},"content":"import seedu.address.logic.commands.FilterTagCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"guokweijie"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.TagContainsKeywordPredicate;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"guokweijie"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"guokweijie"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"guokweijie"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"guokweijie"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"guokweijie"},"content":"public class FilterTagCommandParser {","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"guokweijie"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"guokweijie"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"guokweijie"},"content":"     * Parses the given {@code String} of arguments in the context of the FindTagCommand","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"guokweijie"},"content":"     * and returns a FindTagCommand object for execution.","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"guokweijie"},"content":"     * @param args String of arguments to be parsed","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"guokweijie"},"content":"     * @return FindTagCommand object","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"guokweijie"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"guokweijie"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"guokweijie"},"content":"    public FilterTagCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"guokweijie"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"guokweijie"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"guokweijie"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"guokweijie"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterTagCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"guokweijie"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"guokweijie"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"guokweijie"},"content":"        String[] keyword \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"guokweijie"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"guokweijie"},"content":"        return new FilterTagCommand(new TagContainsKeywordPredicate(keyword[0]));","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"guokweijie"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"guokweijie"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"guokweijie":31,"TZL0":1}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.appointment.Doctor;","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.appointment.MedicalTest;","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.appointment.Slot;","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.Address;","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.Email;","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.Name;","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.Phone;","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.Remark;","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":57,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":58,"author":{"gitId":"TZL0"},"content":"     * Parses a {@code String remark} into a {@code Remark}.","lastModifiedDate":"2022-10-06"},{"lineNumber":59,"author":{"gitId":"TZL0"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-06"},{"lineNumber":60,"author":{"gitId":"TZL0"},"content":"     *","lastModifiedDate":"2022-10-06"},{"lineNumber":61,"author":{"gitId":"TZL0"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2022-10-06"},{"lineNumber":62,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":63,"author":{"gitId":"TZL0"},"content":"    public static Remark parseRemark(String remark) throws ParseException {","lastModifiedDate":"2022-10-06"},{"lineNumber":64,"author":{"gitId":"TZL0"},"content":"        requireNonNull(remark);","lastModifiedDate":"2022-10-06"},{"lineNumber":65,"author":{"gitId":"TZL0"},"content":"        String trimmedRemark \u003d remark.trim();","lastModifiedDate":"2022-10-06"},{"lineNumber":66,"author":{"gitId":"TZL0"},"content":"        return new Remark(trimmedRemark);","lastModifiedDate":"2022-10-06"},{"lineNumber":67,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":68,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":140,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":141,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":142,"author":{"gitId":"TZL0"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2022-10-06"},{"lineNumber":143,"author":{"gitId":"TZL0"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-06"},{"lineNumber":144,"author":{"gitId":"TZL0"},"content":"     *","lastModifiedDate":"2022-10-06"},{"lineNumber":145,"author":{"gitId":"TZL0"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2022-10-06"},{"lineNumber":146,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":147,"author":{"gitId":"TZL0"},"content":"    public static Doctor parseDoctor(String name) throws ParseException {","lastModifiedDate":"2022-10-06"},{"lineNumber":148,"author":{"gitId":"TZL0"},"content":"        requireNonNull(name);","lastModifiedDate":"2022-10-06"},{"lineNumber":149,"author":{"gitId":"TZL0"},"content":"        String trimmedDoctorName \u003d name.trim();","lastModifiedDate":"2022-10-06"},{"lineNumber":150,"author":{"gitId":"TZL0"},"content":"        if (!Doctor.isValidDoctorName(trimmedDoctorName)) {","lastModifiedDate":"2022-10-06"},{"lineNumber":151,"author":{"gitId":"TZL0"},"content":"            throw new ParseException(Doctor.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-06"},{"lineNumber":152,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":153,"author":{"gitId":"TZL0"},"content":"        return new Doctor(trimmedDoctorName);","lastModifiedDate":"2022-10-06"},{"lineNumber":154,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":155,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":156,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":157,"author":{"gitId":"TZL0"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2022-10-06"},{"lineNumber":158,"author":{"gitId":"TZL0"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-06"},{"lineNumber":159,"author":{"gitId":"TZL0"},"content":"     *","lastModifiedDate":"2022-10-06"},{"lineNumber":160,"author":{"gitId":"TZL0"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2022-10-06"},{"lineNumber":161,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":162,"author":{"gitId":"TZL0"},"content":"    public static MedicalTest parseMedicalTest(String name) throws ParseException {","lastModifiedDate":"2022-10-06"},{"lineNumber":163,"author":{"gitId":"TZL0"},"content":"        requireNonNull(name);","lastModifiedDate":"2022-10-06"},{"lineNumber":164,"author":{"gitId":"TZL0"},"content":"        String trimmedMedicalTestName \u003d name.trim();","lastModifiedDate":"2022-10-06"},{"lineNumber":165,"author":{"gitId":"TZL0"},"content":"        if (!MedicalTest.isValidMedicalTest(trimmedMedicalTestName)) {","lastModifiedDate":"2022-10-06"},{"lineNumber":166,"author":{"gitId":"TZL0"},"content":"            throw new ParseException(MedicalTest.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-06"},{"lineNumber":167,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":168,"author":{"gitId":"TZL0"},"content":"        return new MedicalTest(trimmedMedicalTestName);","lastModifiedDate":"2022-10-06"},{"lineNumber":169,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":170,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":171,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":172,"author":{"gitId":"TZL0"},"content":"     * Parses a {@code String dateTime} into a {@code Slot}.","lastModifiedDate":"2022-10-06"},{"lineNumber":173,"author":{"gitId":"TZL0"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-06"},{"lineNumber":174,"author":{"gitId":"TZL0"},"content":"     *","lastModifiedDate":"2022-10-06"},{"lineNumber":175,"author":{"gitId":"TZL0"},"content":"     * @throws ParseException if the given {@code dateTime} is invalid.","lastModifiedDate":"2022-10-06"},{"lineNumber":176,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":177,"author":{"gitId":"TZL0"},"content":"    public static Slot parseSlot(String dateTime) throws ParseException {","lastModifiedDate":"2022-10-06"},{"lineNumber":178,"author":{"gitId":"TZL0"},"content":"        requireNonNull(dateTime);","lastModifiedDate":"2022-10-06"},{"lineNumber":179,"author":{"gitId":"TZL0"},"content":"        String trimmedDateTime \u003d dateTime.trim();","lastModifiedDate":"2022-10-06"},{"lineNumber":180,"author":{"gitId":"TZL0"},"content":"        if (!Slot.isValidDateTime(trimmedDateTime)) {","lastModifiedDate":"2022-10-06"},{"lineNumber":181,"author":{"gitId":"TZL0"},"content":"            throw new ParseException(Slot.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-06"},{"lineNumber":182,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":183,"author":{"gitId":"TZL0"},"content":"        return new Slot(dateTime);","lastModifiedDate":"2022-10-06"},{"lineNumber":184,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"TZL0":65,"-":120}},{"path":"src/main/java/seedu/address/logic/parser/RemarkCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-09-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-09-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2022-09-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-09-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-09-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.RemarkCommand;","lastModifiedDate":"2022-09-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-09-13"},{"lineNumber":11,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.Remark;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-09-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new {@code RemarkCommand} object","lastModifiedDate":"2022-09-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-09-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class RemarkCommandParser implements Parser\u003cRemarkCommand\u003e {","lastModifiedDate":"2022-09-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code RemarkCommand}","lastModifiedDate":"2022-09-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * and returns a {@code RemarkCommand} object for execution.","lastModifiedDate":"2022-09-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-09-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-09-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-09-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_REMARK);","lastModifiedDate":"2022-09-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2022-09-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-09-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-09-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2022-09-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2022-09-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-09-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2022-09-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return new RemarkCommand(index, new Remark(remark));","lastModifiedDate":"2022-09-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-09-13"}],"authorContributionMap":{"TZL0":1,"-":36}},{"path":"src/main/java/seedu/address/logic/parser/SelectPatientCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TZL0"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"TZL0"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"TZL0"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"TZL0"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"guokweijie"},"content":"import seedu.address.logic.commands.SelectPatientCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"TZL0"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"TZL0"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"TZL0"},"content":" * Parses input arguments and creates a new SelectPatientCommand object","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"TZL0"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"guokweijie"},"content":"public class SelectPatientCommandParser implements Parser\u003cSelectPatientCommand\u003e {","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"TZL0"},"content":"     * Parses the given {@code String} of arguments in the context of the SelectPatientCommand","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"TZL0"},"content":"     * and returns a SelectPatientCommand object for execution.","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"TZL0"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"TZL0"},"content":"     * @throws seedu.address.logic.parser.exceptions.ParseException if the user input does not conform","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"TZL0"},"content":"     *                                                              the expected format","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"guokweijie"},"content":"    public SelectPatientCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"TZL0"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"TZL0"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"TZL0"},"content":"                ArgumentTokenizer.tokenize(args);","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"TZL0"},"content":"        Index index;","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"TZL0"},"content":"        try {","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"TZL0"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"TZL0"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"TZL0"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"guokweijie"},"content":"                    SelectPatientCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"guokweijie"},"content":"        return new SelectPatientCommand(index);","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"TZL0"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"guokweijie":5,"TZL0":33}},{"path":"src/main/java/seedu/address/logic/parser/SortCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SpecOps2016"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"SpecOps2016"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"SpecOps2016"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CRITERIA;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"SpecOps2016"},"content":"import seedu.address.logic.commands.SortCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"SpecOps2016"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"SpecOps2016"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"SpecOps2016"},"content":" * Parses input arguments and creates a new {@code SortCommand} object","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"SpecOps2016"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"SpecOps2016"},"content":"public class SortCommandParser {","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"SpecOps2016"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"SpecOps2016"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code RemarkCommand}","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"SpecOps2016"},"content":"     * and returns a {@code RemarkCommand} object for execution.","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"SpecOps2016"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"SpecOps2016"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"SpecOps2016"},"content":"    public SortCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"SpecOps2016"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"SpecOps2016"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_CRITERIA);","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"SpecOps2016"},"content":"        String criteria \u003d argMultimap.getValue(PREFIX_CRITERIA).orElse(\"\");","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"SpecOps2016"},"content":"        return new SortCommand(criteria);","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"SpecOps2016"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"SpecOps2016"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"SpecOps2016":26}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"SpecOps2016"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.appointment.UniqueAppointmentList;","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.Name;","lastModifiedDate":"2022-10-17"},{"lineNumber":12,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.UniquePatientList;","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"TZL0"},"content":" * Duplicates are not allowed (by .isSamePatient comparison)","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"TZL0"},"content":"    private final UniquePatientList patients;","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"TZL0"},"content":"    private final UniqueAppointmentList appointments;","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"TZL0"},"content":"        patients \u003d new UniquePatientList();","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"TZL0"},"content":"        appointments \u003d new UniqueAppointmentList();","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"TZL0"},"content":"     * Creates an AddressBook using the Patients in the {@code toBeCopied}","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"TZL0"},"content":"     * Replaces the contents of the patient list with {@code patients}.","lastModifiedDate":"2022-10-16"},{"lineNumber":50,"author":{"gitId":"TZL0"},"content":"     * {@code patients} must not contain duplicate patients.","lastModifiedDate":"2022-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"TZL0"},"content":"    public void setPatients(List\u003cPatient\u003e patients) {","lastModifiedDate":"2022-10-16"},{"lineNumber":53,"author":{"gitId":"TZL0"},"content":"        this.patients.setPatients(patients);","lastModifiedDate":"2022-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":57,"author":{"gitId":"TZL0"},"content":"     * Replaces the contents of the appointment list with {@code appointments}.","lastModifiedDate":"2022-10-06"},{"lineNumber":58,"author":{"gitId":"TZL0"},"content":"     * {@code patients} must not contain duplicate patients.","lastModifiedDate":"2022-10-16"},{"lineNumber":59,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":60,"author":{"gitId":"TZL0"},"content":"    public void setAppointments(List\u003cAppointment\u003e appointments) {","lastModifiedDate":"2022-10-06"},{"lineNumber":61,"author":{"gitId":"TZL0"},"content":"        this.appointments.setAppointments(appointments);","lastModifiedDate":"2022-10-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":70,"author":{"gitId":"TZL0"},"content":"        setPatients(newData.getPatientList());","lastModifiedDate":"2022-10-16"},{"lineNumber":71,"author":{"gitId":"TZL0"},"content":"        setAppointments(newData.getAppointmentList());","lastModifiedDate":"2022-10-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"TZL0"},"content":"    //// patient-level operations","lastModifiedDate":"2022-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"TZL0"},"content":"     * Returns true if a patient with the same identity as {@code patient} exists in the address book.","lastModifiedDate":"2022-10-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"TZL0"},"content":"    public boolean hasPatient(Patient patient) {","lastModifiedDate":"2022-10-16"},{"lineNumber":80,"author":{"gitId":"guokweijie"},"content":"        requireNonNull(patient);","lastModifiedDate":"2022-10-13"},{"lineNumber":81,"author":{"gitId":"TZL0"},"content":"        return patients.contains(patient);","lastModifiedDate":"2022-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":85,"author":{"gitId":"TZL0"},"content":"     * Returns true if a patient with the same identity as {@code name} exists in the address book.","lastModifiedDate":"2022-10-17"},{"lineNumber":86,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":87,"author":{"gitId":"TZL0"},"content":"    public boolean hasPatient(Name name) {","lastModifiedDate":"2022-10-17"},{"lineNumber":88,"author":{"gitId":"TZL0"},"content":"        requireNonNull(name);","lastModifiedDate":"2022-10-17"},{"lineNumber":89,"author":{"gitId":"TZL0"},"content":"        return patients.contains(name);","lastModifiedDate":"2022-10-17"},{"lineNumber":90,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":91,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"TZL0"},"content":"     * Adds a patient to the address book.","lastModifiedDate":"2022-10-16"},{"lineNumber":94,"author":{"gitId":"TZL0"},"content":"     * The patient must not already exist in the address book.","lastModifiedDate":"2022-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"TZL0"},"content":"    public void addPatient(Patient p) {","lastModifiedDate":"2022-10-16"},{"lineNumber":97,"author":{"gitId":"TZL0"},"content":"        patients.add(p);","lastModifiedDate":"2022-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":101,"author":{"gitId":"TZL0"},"content":"     * Replaces the given patient {@code target} in the list with {@code editedPatient}.","lastModifiedDate":"2022-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":103,"author":{"gitId":"TZL0"},"content":"     * The patient identity of {@code editedPatient} must not be the same as another","lastModifiedDate":"2022-10-16"},{"lineNumber":104,"author":{"gitId":"TZL0"},"content":"     * existing patient in the address book.","lastModifiedDate":"2022-10-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":106,"author":{"gitId":"TZL0"},"content":"    public void setPatient(Patient target, Patient editedPatient) {","lastModifiedDate":"2022-10-16"},{"lineNumber":107,"author":{"gitId":"guokweijie"},"content":"        requireNonNull(editedPatient);","lastModifiedDate":"2022-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":109,"author":{"gitId":"TZL0"},"content":"        patients.setPatient(target, editedPatient);","lastModifiedDate":"2022-10-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"TZL0"},"content":"    public void removePatient(Patient key) {","lastModifiedDate":"2022-10-16"},{"lineNumber":117,"author":{"gitId":"TZL0"},"content":"        patients.remove(key);","lastModifiedDate":"2022-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"TZL0"},"content":"    //// appointment-level operations","lastModifiedDate":"2022-10-06"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":123,"author":{"gitId":"TZL0"},"content":"     * Returns true if an appointment with the same identity as {@code appointment} exists in the address book.","lastModifiedDate":"2022-10-06"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":125,"author":{"gitId":"TZL0"},"content":"    public boolean hasAppointment(Appointment appointment) {","lastModifiedDate":"2022-10-06"},{"lineNumber":126,"author":{"gitId":"TZL0"},"content":"        requireNonNull(appointment);","lastModifiedDate":"2022-10-06"},{"lineNumber":127,"author":{"gitId":"TZL0"},"content":"        return appointments.contains(appointment);","lastModifiedDate":"2022-10-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":131,"author":{"gitId":"TZL0"},"content":"     * Adds an appointment to the address book.","lastModifiedDate":"2022-10-06"},{"lineNumber":132,"author":{"gitId":"TZL0"},"content":"     * The appointment must not already exist in the address book.","lastModifiedDate":"2022-10-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":134,"author":{"gitId":"TZL0"},"content":"    public void addAppointment(Appointment a) {","lastModifiedDate":"2022-10-06"},{"lineNumber":135,"author":{"gitId":"TZL0"},"content":"        appointments.add(a);","lastModifiedDate":"2022-10-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":139,"author":{"gitId":"TZL0"},"content":"     * Replaces the given appointment {@code target} in the list with {@code editedAppointment}.","lastModifiedDate":"2022-10-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2022-10-06"},{"lineNumber":141,"author":{"gitId":"TZL0"},"content":"     * The appointment identity of {@code editedAppointment} must not be the same as","lastModifiedDate":"2022-10-06"},{"lineNumber":142,"author":{"gitId":"TZL0"},"content":"     * another existing appointment in the address book.","lastModifiedDate":"2022-10-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":144,"author":{"gitId":"TZL0"},"content":"    public void setAppointment(Appointment target, Appointment editedAppointment) {","lastModifiedDate":"2022-10-06"},{"lineNumber":145,"author":{"gitId":"TZL0"},"content":"        requireNonNull(editedAppointment);","lastModifiedDate":"2022-10-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":147,"author":{"gitId":"TZL0"},"content":"        appointments.setAppointment(target, editedAppointment);","lastModifiedDate":"2022-10-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2022-10-06"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2022-10-06"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":154,"author":{"gitId":"TZL0"},"content":"    public void removeAppointment(Appointment key) {","lastModifiedDate":"2022-10-06"},{"lineNumber":155,"author":{"gitId":"TZL0"},"content":"        appointments.remove(key);","lastModifiedDate":"2022-10-06"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":162,"author":{"gitId":"TZL0"},"content":"        return patients.asUnmodifiableObservableList().size() + \" patients;\\n\"","lastModifiedDate":"2022-10-16"},{"lineNumber":163,"author":{"gitId":"TZL0"},"content":"                + appointments.asUnmodifiableObservableList().size() + \"appointments;\";","lastModifiedDate":"2022-10-06"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"TZL0"},"content":"    public ObservableList\u003cPatient\u003e getPatientList() {","lastModifiedDate":"2022-10-16"},{"lineNumber":169,"author":{"gitId":"TZL0"},"content":"        return patients.asUnmodifiableObservableList();","lastModifiedDate":"2022-10-16"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":172,"author":{"gitId":"TZL0"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":173,"author":{"gitId":"TZL0"},"content":"    public ObservableList\u003cAppointment\u003e getAppointmentList() {","lastModifiedDate":"2022-10-06"},{"lineNumber":174,"author":{"gitId":"TZL0"},"content":"        return appointments.asUnmodifiableObservableList();","lastModifiedDate":"2022-10-06"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":180,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":181,"author":{"gitId":"TZL0"},"content":"                \u0026\u0026 patients.equals(((AddressBook) other).patients))","lastModifiedDate":"2022-10-16"},{"lineNumber":182,"author":{"gitId":"TZL0"},"content":"                \u0026\u0026 appointments.equals(((AddressBook) other).appointments);","lastModifiedDate":"2022-10-06"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":187,"author":{"gitId":"TZL0"},"content":"        return patients.hashCode();","lastModifiedDate":"2022-10-16"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":189,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":190,"author":{"gitId":"TZL0"},"content":"    void sortPatients(Comparator\u003cPatient\u003e comparator) {","lastModifiedDate":"2022-10-16"},{"lineNumber":191,"author":{"gitId":"TZL0"},"content":"        patients.sort(comparator);","lastModifiedDate":"2022-10-16"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"guokweijie":2,"SpecOps2016":2,"TZL0":75,"-":114}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"SpecOps2016"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.Name;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":18,"author":{"gitId":"TZL0"},"content":"    Predicate\u003cPatient\u003e PREDICATE_SHOW_ALL_PATIENTS \u003d unused -\u003e true;","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"TZL0"},"content":"    Predicate\u003cAppointment\u003e PREDICATE_SHOW_ALL_APPOINTMENTS \u003d unused -\u003e true;","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"TZL0"},"content":"     * Returns true if a patient with the same identity as {@code patient} exists in the address book.","lastModifiedDate":"2022-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"TZL0"},"content":"    boolean hasPatient(Patient patient);","lastModifiedDate":"2022-10-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":65,"author":{"gitId":"TZL0"},"content":"     * Returns true if a patient with the same identity as {@code patient} exists in the address book.","lastModifiedDate":"2022-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":67,"author":{"gitId":"TZL0"},"content":"    boolean hasPatient(Name name);","lastModifiedDate":"2022-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"TZL0"},"content":"     * Deletes the given patient.","lastModifiedDate":"2022-10-16"},{"lineNumber":71,"author":{"gitId":"TZL0"},"content":"     * The patient must exist in the address book.","lastModifiedDate":"2022-10-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"TZL0"},"content":"    void deletePatient(Patient target);","lastModifiedDate":"2022-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"TZL0"},"content":"     * Adds the given patient.","lastModifiedDate":"2022-10-16"},{"lineNumber":77,"author":{"gitId":"TZL0"},"content":"     * {@code patient} must not already exist in the address book.","lastModifiedDate":"2022-10-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"TZL0"},"content":"    void addPatient(Patient patient);","lastModifiedDate":"2022-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":82,"author":{"gitId":"TZL0"},"content":"     * Replaces the given patient {@code target} with {@code editedPatient}.","lastModifiedDate":"2022-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"TZL0"},"content":"     * The patient identity of {@code editedPatient} must not be the same as","lastModifiedDate":"2022-10-16"},{"lineNumber":85,"author":{"gitId":"TZL0"},"content":"     * another existing patient in the address book.","lastModifiedDate":"2022-10-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":87,"author":{"gitId":"TZL0"},"content":"    void setPatient(Patient target, Patient editedPatient);","lastModifiedDate":"2022-10-16"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":89,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":90,"author":{"gitId":"TZL0"},"content":"     * Updates the FilteredAppointmentList so that it includes the given patient\u0027s appointments only.","lastModifiedDate":"2022-10-17"},{"lineNumber":91,"author":{"gitId":"TZL0"},"content":"     * @param patient The given patient.","lastModifiedDate":"2022-10-17"},{"lineNumber":92,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":93,"author":{"gitId":"TZL0"},"content":"    void selectPatient(Patient patient);","lastModifiedDate":"2022-10-17"},{"lineNumber":94,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":95,"author":{"gitId":"TZL0"},"content":"    /** Returns an unmodifiable view of the filtered patient list */","lastModifiedDate":"2022-10-16"},{"lineNumber":96,"author":{"gitId":"guokweijie"},"content":"    ObservableList\u003cPatient\u003e getFilteredPatientList();","lastModifiedDate":"2022-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":99,"author":{"gitId":"TZL0"},"content":"     * Updates the filter of the filtered patient list to filter by the given {@code predicate}.","lastModifiedDate":"2022-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":102,"author":{"gitId":"TZL0"},"content":"    void updateFilteredPatientList(Predicate\u003cPatient\u003e predicate);","lastModifiedDate":"2022-10-16"},{"lineNumber":103,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":104,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":105,"author":{"gitId":"TZL0"},"content":"     * Returns true if an appointment with the same identity as {@code patient} exists in the address book.","lastModifiedDate":"2022-10-16"},{"lineNumber":106,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":107,"author":{"gitId":"TZL0"},"content":"    boolean hasAppointment(Appointment appointment);","lastModifiedDate":"2022-10-06"},{"lineNumber":108,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":109,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":110,"author":{"gitId":"TZL0"},"content":"     * Deletes the given appointment.","lastModifiedDate":"2022-10-06"},{"lineNumber":111,"author":{"gitId":"TZL0"},"content":"     * The appointment must exist in the address book.","lastModifiedDate":"2022-10-06"},{"lineNumber":112,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":113,"author":{"gitId":"TZL0"},"content":"    void deleteAppointment(Appointment target);","lastModifiedDate":"2022-10-06"},{"lineNumber":114,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":115,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":116,"author":{"gitId":"TZL0"},"content":"     * Adds the given appointment.","lastModifiedDate":"2022-10-06"},{"lineNumber":117,"author":{"gitId":"TZL0"},"content":"     * {@code appointment} must not already exist in the address book.","lastModifiedDate":"2022-10-06"},{"lineNumber":118,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":119,"author":{"gitId":"TZL0"},"content":"    void addAppointment(Appointment appointment);","lastModifiedDate":"2022-10-06"},{"lineNumber":120,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":121,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":122,"author":{"gitId":"TZL0"},"content":"     * Replaces the given appointment {@code target} with {@code editedAppointment}.","lastModifiedDate":"2022-10-06"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2022-10-06"},{"lineNumber":124,"author":{"gitId":"TZL0"},"content":"     * The appointment identity of {@code editedAppointment} must not be the same as","lastModifiedDate":"2022-10-06"},{"lineNumber":125,"author":{"gitId":"TZL0"},"content":"     * another existing appointment in the address book.","lastModifiedDate":"2022-10-06"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":127,"author":{"gitId":"TZL0"},"content":"    void setAppointment(Appointment target, Appointment editedAppointment);","lastModifiedDate":"2022-10-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":129,"author":{"gitId":"TZL0"},"content":"    /** Returns an unmodifiable view of the filtered appointment list */","lastModifiedDate":"2022-10-06"},{"lineNumber":130,"author":{"gitId":"wadia82"},"content":"    ObservableList\u003cAppointment\u003e getFilteredAppointmentList();","lastModifiedDate":"2022-10-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":133,"author":{"gitId":"TZL0"},"content":"     * Updates the filter of the filtered appointment list to filter by the given {@code predicate}.","lastModifiedDate":"2022-10-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2022-10-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":136,"author":{"gitId":"TZL0"},"content":"    void updateFilteredAppointmentList(Predicate\u003cAppointment\u003e predicate);","lastModifiedDate":"2022-10-06"},{"lineNumber":137,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":138,"author":{"gitId":"guokweijie"},"content":"    void deleteRelativeAppointments(Patient patient);","lastModifiedDate":"2022-10-13"},{"lineNumber":139,"author":{"gitId":"wadia82"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":140,"author":{"gitId":"SpecOps2016"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":141,"author":{"gitId":"SpecOps2016"},"content":"     * Sorts the namelist by the given {@code comparator}.","lastModifiedDate":"2022-10-11"},{"lineNumber":142,"author":{"gitId":"SpecOps2016"},"content":"     * @throws NullPointerException if {@code comparator} is null.","lastModifiedDate":"2022-10-11"},{"lineNumber":143,"author":{"gitId":"SpecOps2016"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":144,"author":{"gitId":"guokweijie"},"content":"    void sort(Comparator\u003cPatient\u003e comparator);","lastModifiedDate":"2022-10-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"wadia82":2,"guokweijie":3,"SpecOps2016":6,"TZL0":54,"-":80}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"SpecOps2016"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"wadia82"},"content":"import java.util.List;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"wadia82"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":17,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.Name;","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"guokweijie"},"content":"    private final FilteredList\u003cPatient\u003e filteredPatients;","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"TZL0"},"content":"    private final FilteredList\u003cAppointment\u003e filteredAppointments;","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"TZL0"},"content":"        filteredPatients \u003d new FilteredList\u003c\u003e(this.addressBook.getPatientList());","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"TZL0"},"content":"        filteredAppointments \u003d new FilteredList\u003c\u003e(this.addressBook.getAppointmentList());","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"TZL0"},"content":"    public boolean hasPatient(Patient patient) {","lastModifiedDate":"2022-10-16"},{"lineNumber":99,"author":{"gitId":"guokweijie"},"content":"        requireNonNull(patient);","lastModifiedDate":"2022-10-13"},{"lineNumber":100,"author":{"gitId":"TZL0"},"content":"        return addressBook.hasPatient(patient);","lastModifiedDate":"2022-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":104,"author":{"gitId":"TZL0"},"content":"    public boolean hasPatient(Name name) {","lastModifiedDate":"2022-10-16"},{"lineNumber":105,"author":{"gitId":"TZL0"},"content":"        requireNonNull(name);","lastModifiedDate":"2022-10-07"},{"lineNumber":106,"author":{"gitId":"TZL0"},"content":"        return addressBook.getPatientList().stream().anyMatch(patient -\u003e patient.getName().equals(name));","lastModifiedDate":"2022-10-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":110,"author":{"gitId":"TZL0"},"content":"    public void deletePatient(Patient target) {","lastModifiedDate":"2022-10-16"},{"lineNumber":111,"author":{"gitId":"wadia82"},"content":"        deleteRelativeAppointments(target);","lastModifiedDate":"2022-10-12"},{"lineNumber":112,"author":{"gitId":"TZL0"},"content":"        addressBook.removePatient(target);","lastModifiedDate":"2022-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":116,"author":{"gitId":"TZL0"},"content":"    public void addPatient(Patient patient) {","lastModifiedDate":"2022-10-16"},{"lineNumber":117,"author":{"gitId":"TZL0"},"content":"        addressBook.addPatient(patient);","lastModifiedDate":"2022-10-16"},{"lineNumber":118,"author":{"gitId":"TZL0"},"content":"        updateFilteredPatientList(PREDICATE_SHOW_ALL_PATIENTS);","lastModifiedDate":"2022-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":122,"author":{"gitId":"TZL0"},"content":"    public void setPatient(Patient target, Patient editedPatient) {","lastModifiedDate":"2022-10-16"},{"lineNumber":123,"author":{"gitId":"guokweijie"},"content":"        requireAllNonNull(target, editedPatient);","lastModifiedDate":"2022-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":125,"author":{"gitId":"TZL0"},"content":"        addressBook.setPatient(target, editedPatient);","lastModifiedDate":"2022-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":128,"author":{"gitId":"TZL0"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":129,"author":{"gitId":"TZL0"},"content":"    public boolean hasAppointment(Appointment appointment) {","lastModifiedDate":"2022-10-06"},{"lineNumber":130,"author":{"gitId":"TZL0"},"content":"        requireNonNull(appointment);","lastModifiedDate":"2022-10-06"},{"lineNumber":131,"author":{"gitId":"TZL0"},"content":"        return addressBook.hasAppointment(appointment);","lastModifiedDate":"2022-10-06"},{"lineNumber":132,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":134,"author":{"gitId":"TZL0"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":135,"author":{"gitId":"TZL0"},"content":"    public void deleteAppointment(Appointment target) {","lastModifiedDate":"2022-10-06"},{"lineNumber":136,"author":{"gitId":"TZL0"},"content":"        addressBook.removeAppointment(target);","lastModifiedDate":"2022-10-06"},{"lineNumber":137,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":138,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":139,"author":{"gitId":"TZL0"},"content":"    @Override","lastModifiedDate":"2022-10-17"},{"lineNumber":140,"author":{"gitId":"TZL0"},"content":"    public void selectPatient(Patient patient) {","lastModifiedDate":"2022-10-17"},{"lineNumber":141,"author":{"gitId":"TZL0"},"content":"        updateFilteredAppointmentList(appointment -\u003e appointment.getName().equals(patient.getName()));","lastModifiedDate":"2022-10-17"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":144,"author":{"gitId":"TZL0"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":145,"author":{"gitId":"TZL0"},"content":"    public void addAppointment(Appointment appointment) {","lastModifiedDate":"2022-10-06"},{"lineNumber":146,"author":{"gitId":"TZL0"},"content":"        addressBook.addAppointment(appointment);","lastModifiedDate":"2022-10-06"},{"lineNumber":147,"author":{"gitId":"TZL0"},"content":"        updateFilteredAppointmentList(PREDICATE_SHOW_ALL_APPOINTMENTS);","lastModifiedDate":"2022-10-06"},{"lineNumber":148,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":149,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":150,"author":{"gitId":"TZL0"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":151,"author":{"gitId":"TZL0"},"content":"    public void setAppointment(Appointment target, Appointment editedAppointment) {","lastModifiedDate":"2022-10-06"},{"lineNumber":152,"author":{"gitId":"TZL0"},"content":"        requireAllNonNull(target, editedAppointment);","lastModifiedDate":"2022-10-06"},{"lineNumber":153,"author":{"gitId":"TZL0"},"content":"        addressBook.setAppointment(target, editedAppointment);","lastModifiedDate":"2022-10-06"},{"lineNumber":154,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":155,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":156,"author":{"gitId":"TZL0"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Patient List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-16"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":159,"author":{"gitId":"TZL0"},"content":"     * Returns an unmodifiable view of the list of {@code Patient} backed by the internal list of","lastModifiedDate":"2022-10-16"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":163,"author":{"gitId":"guokweijie"},"content":"    public ObservableList\u003cPatient\u003e getFilteredPatientList() {","lastModifiedDate":"2022-10-13"},{"lineNumber":164,"author":{"gitId":"guokweijie"},"content":"        return filteredPatients;","lastModifiedDate":"2022-10-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":168,"author":{"gitId":"TZL0"},"content":"    public void updateFilteredPatientList(Predicate\u003cPatient\u003e predicate) {","lastModifiedDate":"2022-10-16"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":170,"author":{"gitId":"guokweijie"},"content":"        filteredPatients.setPredicate(predicate);","lastModifiedDate":"2022-10-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":173,"author":{"gitId":"TZL0"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Appointment List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-06"},{"lineNumber":174,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":175,"author":{"gitId":"TZL0"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":176,"author":{"gitId":"wadia82"},"content":"    public ObservableList\u003cAppointment\u003e getFilteredAppointmentList() {","lastModifiedDate":"2022-10-11"},{"lineNumber":177,"author":{"gitId":"TZL0"},"content":"        return filteredAppointments;","lastModifiedDate":"2022-10-06"},{"lineNumber":178,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":179,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":180,"author":{"gitId":"TZL0"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":181,"author":{"gitId":"TZL0"},"content":"    public void updateFilteredAppointmentList(Predicate\u003cAppointment\u003e predicate) {","lastModifiedDate":"2022-10-06"},{"lineNumber":182,"author":{"gitId":"TZL0"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2022-10-06"},{"lineNumber":183,"author":{"gitId":"TZL0"},"content":"        filteredAppointments.setPredicate(predicate);","lastModifiedDate":"2022-10-06"},{"lineNumber":184,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":185,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":186,"author":{"gitId":"wadia82"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":187,"author":{"gitId":"guokweijie"},"content":"    public void deleteRelativeAppointments(Patient patient) {","lastModifiedDate":"2022-10-13"},{"lineNumber":188,"author":{"gitId":"wadia82"},"content":"        List\u003cAppointment\u003e toDelete \u003d addressBook.getAppointmentList().stream()","lastModifiedDate":"2022-10-12"},{"lineNumber":189,"author":{"gitId":"wadia82"},"content":"                .filter(a -\u003e a.getName().equals(patient.getName())).collect(Collectors.toList());","lastModifiedDate":"2022-10-12"},{"lineNumber":190,"author":{"gitId":"wadia82"},"content":"        toDelete.stream().forEach(a -\u003e addressBook.removeAppointment(a));","lastModifiedDate":"2022-10-12"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":208,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":209,"author":{"gitId":"guokweijie"},"content":"                \u0026\u0026 filteredPatients.equals(other.filteredPatients);","lastModifiedDate":"2022-10-13"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":212,"author":{"gitId":"SpecOps2016"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":213,"author":{"gitId":"guokweijie"},"content":"    public void sort(Comparator\u003cPatient\u003e comparator) {","lastModifiedDate":"2022-10-13"},{"lineNumber":214,"author":{"gitId":"TZL0"},"content":"        this.addressBook.sortPatients(comparator);","lastModifiedDate":"2022-10-16"},{"lineNumber":215,"author":{"gitId":"SpecOps2016"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":216,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"wadia82":8,"guokweijie":9,"SpecOps2016":3,"TZL0":59,"-":137}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"TZL0"},"content":"     * Returns an unmodifiable view of the patients list.","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"TZL0"},"content":"     * This list will not contain any duplicate patients.","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"TZL0"},"content":"    ObservableList\u003cPatient\u003e getPatientList();","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"TZL0"},"content":"     * Returns an unmodifiable view of the appointments list.","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"TZL0"},"content":"     * This list will not contain any duplicate appointments.","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"TZL0"},"content":"    ObservableList\u003cAppointment\u003e getAppointmentList();","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"TZL0":10,"-":14}},{"path":"src/main/java/seedu/address/model/appointment/Appointment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TZL0"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"TZL0"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"TZL0"},"content":"import java.util.Objects;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.Name;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"TZL0"},"content":"/**","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"TZL0"},"content":" * Represents an Appointment of a patient in the HealthConnect","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"TZL0"},"content":" */","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"TZL0"},"content":"public class Appointment {","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"TZL0"},"content":"     * The FOREIGN KEY to identify a patient","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"TZL0"},"content":"    private final Name name;","lastModifiedDate":"2022-10-07"},{"lineNumber":17,"author":{"gitId":"TZL0"},"content":"    private final MedicalTest medicalTest;","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"TZL0"},"content":"    private final Slot slot;","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"TZL0"},"content":"    private final Doctor doctor;","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"TZL0"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"TZL0"},"content":"    public Appointment(Name name, MedicalTest medicalTest, Slot slot, Doctor doctor) {","lastModifiedDate":"2022-10-07"},{"lineNumber":25,"author":{"gitId":"TZL0"},"content":"        requireAllNonNull(name, medicalTest, slot, doctor);","lastModifiedDate":"2022-10-07"},{"lineNumber":26,"author":{"gitId":"TZL0"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-10-07"},{"lineNumber":27,"author":{"gitId":"TZL0"},"content":"        this.medicalTest \u003d medicalTest;","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"TZL0"},"content":"        this.slot \u003d slot;","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"TZL0"},"content":"        this.doctor \u003d doctor;","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"TZL0"},"content":"    public Name getName() {","lastModifiedDate":"2022-10-07"},{"lineNumber":33,"author":{"gitId":"TZL0"},"content":"        return name;","lastModifiedDate":"2022-10-07"},{"lineNumber":34,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"TZL0"},"content":"    public MedicalTest getMedicalTest() {","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"TZL0"},"content":"        return medicalTest;","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"TZL0"},"content":"    public Slot getSlot() {","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"TZL0"},"content":"        return slot;","lastModifiedDate":"2022-10-06"},{"lineNumber":42,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"TZL0"},"content":"    public Doctor getDoctor() {","lastModifiedDate":"2022-10-06"},{"lineNumber":45,"author":{"gitId":"TZL0"},"content":"        return doctor;","lastModifiedDate":"2022-10-06"},{"lineNumber":46,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":47,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":48,"author":{"gitId":"TZL0"},"content":"    public boolean isSameAppointment(Appointment appointment) {","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"TZL0"},"content":"        return equals(appointment);","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"TZL0"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":53,"author":{"gitId":"TZL0"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2022-10-06"},{"lineNumber":54,"author":{"gitId":"TZL0"},"content":"        if (o \u003d\u003d this) {","lastModifiedDate":"2022-10-06"},{"lineNumber":55,"author":{"gitId":"TZL0"},"content":"            return true;","lastModifiedDate":"2022-10-06"},{"lineNumber":56,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":57,"author":{"gitId":"TZL0"},"content":"        if (o instanceof Appointment) {","lastModifiedDate":"2022-10-06"},{"lineNumber":58,"author":{"gitId":"TZL0"},"content":"            Appointment other \u003d (Appointment) o;","lastModifiedDate":"2022-10-06"},{"lineNumber":59,"author":{"gitId":"TZL0"},"content":"            return slot.equals(other.getSlot())","lastModifiedDate":"2022-10-06"},{"lineNumber":60,"author":{"gitId":"TZL0"},"content":"                    \u0026\u0026 medicalTest.equals(other.getMedicalTest())","lastModifiedDate":"2022-10-06"},{"lineNumber":61,"author":{"gitId":"TZL0"},"content":"                    \u0026\u0026 doctor.equals(other.getDoctor())","lastModifiedDate":"2022-10-06"},{"lineNumber":62,"author":{"gitId":"TZL0"},"content":"                    \u0026\u0026 name.equals(other.getName());","lastModifiedDate":"2022-10-07"},{"lineNumber":63,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":64,"author":{"gitId":"TZL0"},"content":"        return false;","lastModifiedDate":"2022-10-06"},{"lineNumber":65,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":66,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":67,"author":{"gitId":"TZL0"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":68,"author":{"gitId":"TZL0"},"content":"    public String toString() {","lastModifiedDate":"2022-10-06"},{"lineNumber":69,"author":{"gitId":"TZL0"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-10-06"},{"lineNumber":70,"author":{"gitId":"TZL0"},"content":"        builder.append(\"Name: \")","lastModifiedDate":"2022-10-07"},{"lineNumber":71,"author":{"gitId":"TZL0"},"content":"                .append(getName())","lastModifiedDate":"2022-10-07"},{"lineNumber":72,"author":{"gitId":"TZL0"},"content":"                .append(\"; Medical Test: \")","lastModifiedDate":"2022-10-06"},{"lineNumber":73,"author":{"gitId":"TZL0"},"content":"                .append(getMedicalTest())","lastModifiedDate":"2022-10-06"},{"lineNumber":74,"author":{"gitId":"TZL0"},"content":"                .append(\"; Slot: \")","lastModifiedDate":"2022-10-07"},{"lineNumber":75,"author":{"gitId":"TZL0"},"content":"                .append(getSlot())","lastModifiedDate":"2022-10-06"},{"lineNumber":76,"author":{"gitId":"TZL0"},"content":"                .append(\"; Doctor: \")","lastModifiedDate":"2022-10-07"},{"lineNumber":77,"author":{"gitId":"TZL0"},"content":"                .append(getDoctor());","lastModifiedDate":"2022-10-06"},{"lineNumber":78,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":79,"author":{"gitId":"TZL0"},"content":"        return builder.toString();","lastModifiedDate":"2022-10-06"},{"lineNumber":80,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":81,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":82,"author":{"gitId":"TZL0"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":83,"author":{"gitId":"TZL0"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-06"},{"lineNumber":84,"author":{"gitId":"TZL0"},"content":"        return Objects.hash(name, medicalTest, slot, doctor);","lastModifiedDate":"2022-10-07"},{"lineNumber":85,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":86,"author":{"gitId":"TZL0"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"TZL0":86}},{"path":"src/main/java/seedu/address/model/appointment/Doctor.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TZL0"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"TZL0"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"TZL0"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"TZL0"},"content":"/**","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"TZL0"},"content":" * Represents an Appointment\u0027s doctor in the address book.","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"TZL0"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDoctorName (String)}","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"TZL0"},"content":" */","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"TZL0"},"content":"public class Doctor {","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"TZL0"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"TZL0"},"content":"            \"Doctor Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"TZL0"},"content":"    /*","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"TZL0"},"content":"     * The first character of the doctor must not be a whitespace,","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"TZL0"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"TZL0"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"TZL0"},"content":"    public final String doctorName;","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"TZL0"},"content":"     * Constructs a {@code Doctor}.","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"TZL0"},"content":"     *","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"TZL0"},"content":"     * @param doctorName A valid name of a doctor.","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"TZL0"},"content":"    public Doctor(String doctorName) {","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"TZL0"},"content":"        requireNonNull(doctorName);","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"TZL0"},"content":"        checkArgument(isValidDoctorName(doctorName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"TZL0"},"content":"        this.doctorName \u003d doctorName;","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"TZL0"},"content":"     * Returns true if a given string is a valid doctor name.","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"TZL0"},"content":"    public static boolean isValidDoctorName(String test) {","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"TZL0"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"TZL0"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"TZL0"},"content":"    public String toString() {","lastModifiedDate":"2022-10-06"},{"lineNumber":42,"author":{"gitId":"TZL0"},"content":"        return doctorName;","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":45,"author":{"gitId":"TZL0"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":46,"author":{"gitId":"TZL0"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-06"},{"lineNumber":47,"author":{"gitId":"TZL0"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-06"},{"lineNumber":48,"author":{"gitId":"TZL0"},"content":"                || (other instanceof Doctor // instanceof handles nulls","lastModifiedDate":"2022-10-06"},{"lineNumber":49,"author":{"gitId":"TZL0"},"content":"                \u0026\u0026 doctorName.equals(((Doctor) other).doctorName)); // state check","lastModifiedDate":"2022-10-06"},{"lineNumber":50,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":51,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":52,"author":{"gitId":"TZL0"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":53,"author":{"gitId":"TZL0"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-06"},{"lineNumber":54,"author":{"gitId":"TZL0"},"content":"        return doctorName.hashCode();","lastModifiedDate":"2022-10-06"},{"lineNumber":55,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":56,"author":{"gitId":"TZL0"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"TZL0":56}},{"path":"src/main/java/seedu/address/model/appointment/MedicalTest.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TZL0"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"TZL0"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"TZL0"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"TZL0"},"content":"/**","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"TZL0"},"content":" * Represents an Appointment\u0027s Medical Test in the address book.","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"TZL0"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidMedicalTest (String)}","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"TZL0"},"content":" */","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"TZL0"},"content":"public class MedicalTest {","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"TZL0"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"TZL0"},"content":"            \"Medical Test Names can take any values, and it should not be blank\";","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"TZL0"},"content":"    /*","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"TZL0"},"content":"     * The first character of the medical test name must not be a whitespace,","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"TZL0"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"TZL0"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"TZL0"},"content":"    public final String medicalTestName;","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"TZL0"},"content":"     * Constructs a {@code MedicalTest}.","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"TZL0"},"content":"     *","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"TZL0"},"content":"     * @param medicalTestName A valid name of a medical test.","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"TZL0"},"content":"    public MedicalTest(String medicalTestName) {","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"TZL0"},"content":"        requireNonNull(medicalTestName);","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"TZL0"},"content":"        checkArgument(isValidMedicalTest(medicalTestName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"TZL0"},"content":"        this.medicalTestName \u003d medicalTestName;","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"TZL0"},"content":"     * Returns true if a given string is a valid medical test name.","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"TZL0"},"content":"    public static boolean isValidMedicalTest(String test) {","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"TZL0"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"TZL0"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":42,"author":{"gitId":"TZL0"},"content":"    public String toString() {","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"TZL0"},"content":"        return medicalTestName;","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":45,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":46,"author":{"gitId":"TZL0"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":47,"author":{"gitId":"TZL0"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-06"},{"lineNumber":48,"author":{"gitId":"TZL0"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-06"},{"lineNumber":49,"author":{"gitId":"TZL0"},"content":"                || (other instanceof MedicalTest // instanceof handles nulls","lastModifiedDate":"2022-10-06"},{"lineNumber":50,"author":{"gitId":"TZL0"},"content":"                \u0026\u0026 medicalTestName.equals(((MedicalTest) other).medicalTestName)); // state check","lastModifiedDate":"2022-10-06"},{"lineNumber":51,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":52,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":53,"author":{"gitId":"TZL0"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":54,"author":{"gitId":"TZL0"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-06"},{"lineNumber":55,"author":{"gitId":"TZL0"},"content":"        return medicalTestName.hashCode();","lastModifiedDate":"2022-10-06"},{"lineNumber":56,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":57,"author":{"gitId":"TZL0"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"TZL0":57}},{"path":"src/main/java/seedu/address/model/appointment/NameContainsKeywordsPredicateAppointment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wadia82"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"wadia82"},"content":"public class NameContainsKeywordsPredicateAppointment implements Predicate\u003cAppointment\u003e {","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"wadia82"},"content":"    public NameContainsKeywordsPredicateAppointment(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"wadia82"},"content":"    public boolean test(Appointment appointment) {","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"wadia82"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(appointment.getName().fullName, keyword));","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"wadia82"},"content":"                || (other instanceof NameContainsKeywordsPredicateAppointment // instanceof handles nulls","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"wadia82"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicateAppointment) other).keywords)); // state check","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"wadia82"},"content":"","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"wadia82":8,"-":24}},{"path":"src/main/java/seedu/address/model/appointment/Slot.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TZL0"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"TZL0"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"TZL0"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"TZL0"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"TZL0"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"TZL0"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"TZL0"},"content":"/**","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"TZL0"},"content":" * Represents an Appointment\u0027s slot in the address book.","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"TZL0"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDateTime (String)}","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"TZL0"},"content":" */","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"TZL0"},"content":"public class Slot {","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"TZL0"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"TZL0"},"content":"            \"Slot should be like \u0027yyyy-MM-dd HH:mm\u0027\";","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"TZL0"},"content":"    public final LocalDateTime localDateTime;","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"TZL0"},"content":"     * Constructs a {@code Slot}.","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"TZL0"},"content":"     *","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"TZL0"},"content":"     * @param dateTime A valid dateTime of a slot.","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"TZL0"},"content":"    public Slot(String dateTime) {","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"TZL0"},"content":"        requireNonNull(dateTime);","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"TZL0"},"content":"        checkArgument(isValidDateTime(dateTime), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"TZL0"},"content":"        this.localDateTime \u003d LocalDateTime.parse(dateTime, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));;","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"TZL0"},"content":"     * Returns true if a given string is a valid date time.","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"TZL0"},"content":"    public static boolean isValidDateTime(String test) {","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"TZL0"},"content":"        try {","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"TZL0"},"content":"            LocalDateTime.parse(test, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"TZL0"},"content":"            return true;","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"TZL0"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"TZL0"},"content":"            return false;","lastModifiedDate":"2022-10-06"},{"lineNumber":42,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":45,"author":{"gitId":"TZL0"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":46,"author":{"gitId":"TZL0"},"content":"    public String toString() {","lastModifiedDate":"2022-10-06"},{"lineNumber":47,"author":{"gitId":"TZL0"},"content":"        return localDateTime.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2022-10-06"},{"lineNumber":48,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":49,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":50,"author":{"gitId":"TZL0"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":51,"author":{"gitId":"TZL0"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-06"},{"lineNumber":52,"author":{"gitId":"TZL0"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-06"},{"lineNumber":53,"author":{"gitId":"TZL0"},"content":"                || (other instanceof Slot // instanceof handles nulls","lastModifiedDate":"2022-10-06"},{"lineNumber":54,"author":{"gitId":"TZL0"},"content":"                \u0026\u0026 localDateTime.equals(((Slot) other).localDateTime)); // state check","lastModifiedDate":"2022-10-06"},{"lineNumber":55,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":56,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":57,"author":{"gitId":"TZL0"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":58,"author":{"gitId":"TZL0"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-06"},{"lineNumber":59,"author":{"gitId":"TZL0"},"content":"        return localDateTime.hashCode();","lastModifiedDate":"2022-10-06"},{"lineNumber":60,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":61,"author":{"gitId":"TZL0"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"TZL0":61}},{"path":"src/main/java/seedu/address/model/appointment/UniqueAppointmentList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TZL0"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"TZL0"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"TZL0"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"TZL0"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"TZL0"},"content":"import java.util.List;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"TZL0"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"TZL0"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.appointment.exceptions.AppointmentNotFoundException;","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.appointment.exceptions.DuplicateAppointmentException;","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"TZL0"},"content":"/**","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"TZL0"},"content":" * A list of appointments that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"TZL0"},"content":" * A appointment is considered unique by comparing using {@code Appointment#equals(Object)}. As such,","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"TZL0"},"content":" * adding and updating of appointments uses Appointment#equals(Object) for equality so as to ensure that","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"TZL0"},"content":" * the appointment being added or updated is unique in terms of identity in the UniqueAppointmentList.","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"TZL0"},"content":" *","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"TZL0"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"TZL0"},"content":" *","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"TZL0"},"content":" * @see seedu.address.model.appointment.Appointment#equals(Object)","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"TZL0"},"content":" */","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"TZL0"},"content":"public class UniqueAppointmentList implements Iterable\u003cAppointment\u003e {","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"TZL0"},"content":"    private final ObservableList\u003cAppointment\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"TZL0"},"content":"    private final ObservableList\u003cAppointment\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"TZL0"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"TZL0"},"content":"     * Returns true if the list contains an equivalent patient as the given argument.","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"TZL0"},"content":"    public boolean contains(Appointment toCheck) {","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"TZL0"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"TZL0"},"content":"        return internalList.stream().anyMatch(toCheck::equals);","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"TZL0"},"content":"     * Adds a patient to the list.","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"TZL0"},"content":"     * The patient must not already exist in the list.","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":42,"author":{"gitId":"TZL0"},"content":"    public void add(Appointment toAdd) {","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"TZL0"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"TZL0"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2022-10-06"},{"lineNumber":45,"author":{"gitId":"TZL0"},"content":"            throw new DuplicateAppointmentException();","lastModifiedDate":"2022-10-06"},{"lineNumber":46,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":47,"author":{"gitId":"TZL0"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2022-10-06"},{"lineNumber":48,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":49,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":50,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":51,"author":{"gitId":"TZL0"},"content":"     * Replaces the patient {@code target} in the list with {@code editedPatient}.","lastModifiedDate":"2022-10-16"},{"lineNumber":52,"author":{"gitId":"TZL0"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2022-10-06"},{"lineNumber":53,"author":{"gitId":"TZL0"},"content":"     * The patient identity of {@code editedPatient} must not be the same as another existing patient in the list.","lastModifiedDate":"2022-10-16"},{"lineNumber":54,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":55,"author":{"gitId":"TZL0"},"content":"    public void setAppointment(Appointment target, Appointment editedAppointment) {","lastModifiedDate":"2022-10-06"},{"lineNumber":56,"author":{"gitId":"TZL0"},"content":"        requireAllNonNull(target, editedAppointment);","lastModifiedDate":"2022-10-06"},{"lineNumber":57,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":58,"author":{"gitId":"TZL0"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2022-10-06"},{"lineNumber":59,"author":{"gitId":"TZL0"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-10-06"},{"lineNumber":60,"author":{"gitId":"TZL0"},"content":"            throw new AppointmentNotFoundException();","lastModifiedDate":"2022-10-06"},{"lineNumber":61,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":62,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":63,"author":{"gitId":"TZL0"},"content":"        if (!target.equals(editedAppointment) \u0026\u0026 contains(editedAppointment)) {","lastModifiedDate":"2022-10-06"},{"lineNumber":64,"author":{"gitId":"TZL0"},"content":"            throw new DuplicateAppointmentException();","lastModifiedDate":"2022-10-06"},{"lineNumber":65,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":66,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":67,"author":{"gitId":"TZL0"},"content":"        internalList.set(index, editedAppointment);","lastModifiedDate":"2022-10-06"},{"lineNumber":68,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":69,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":70,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":71,"author":{"gitId":"TZL0"},"content":"     * Removes the equivalent patient from the list.","lastModifiedDate":"2022-10-16"},{"lineNumber":72,"author":{"gitId":"TZL0"},"content":"     * The patient must exist in the list.","lastModifiedDate":"2022-10-16"},{"lineNumber":73,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":74,"author":{"gitId":"TZL0"},"content":"    public void remove(Appointment toRemove) {","lastModifiedDate":"2022-10-06"},{"lineNumber":75,"author":{"gitId":"TZL0"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-10-06"},{"lineNumber":76,"author":{"gitId":"TZL0"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2022-10-06"},{"lineNumber":77,"author":{"gitId":"TZL0"},"content":"            throw new AppointmentNotFoundException();","lastModifiedDate":"2022-10-06"},{"lineNumber":78,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":79,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":80,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":81,"author":{"gitId":"TZL0"},"content":"    public void setAppointments(UniqueAppointmentList replacement) {","lastModifiedDate":"2022-10-06"},{"lineNumber":82,"author":{"gitId":"TZL0"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2022-10-06"},{"lineNumber":83,"author":{"gitId":"TZL0"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2022-10-06"},{"lineNumber":84,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":85,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":86,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":87,"author":{"gitId":"TZL0"},"content":"     * Replaces the contents of this list with {@code patients}.","lastModifiedDate":"2022-10-16"},{"lineNumber":88,"author":{"gitId":"TZL0"},"content":"     * {@code patients} must not contain duplicate patients.","lastModifiedDate":"2022-10-16"},{"lineNumber":89,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":90,"author":{"gitId":"TZL0"},"content":"    public void setAppointments(List\u003cAppointment\u003e appointments) {","lastModifiedDate":"2022-10-06"},{"lineNumber":91,"author":{"gitId":"TZL0"},"content":"        requireAllNonNull(appointments);","lastModifiedDate":"2022-10-06"},{"lineNumber":92,"author":{"gitId":"TZL0"},"content":"        if (!appointmentsAreUnique(appointments)) {","lastModifiedDate":"2022-10-06"},{"lineNumber":93,"author":{"gitId":"TZL0"},"content":"            throw new DuplicateAppointmentException();","lastModifiedDate":"2022-10-06"},{"lineNumber":94,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":95,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":96,"author":{"gitId":"TZL0"},"content":"        internalList.setAll(appointments);","lastModifiedDate":"2022-10-06"},{"lineNumber":97,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":98,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":99,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":100,"author":{"gitId":"TZL0"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2022-10-06"},{"lineNumber":101,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":102,"author":{"gitId":"TZL0"},"content":"    public ObservableList\u003cAppointment\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-10-06"},{"lineNumber":103,"author":{"gitId":"TZL0"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2022-10-06"},{"lineNumber":104,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":105,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":106,"author":{"gitId":"TZL0"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":107,"author":{"gitId":"TZL0"},"content":"    public Iterator\u003cAppointment\u003e iterator() {","lastModifiedDate":"2022-10-06"},{"lineNumber":108,"author":{"gitId":"TZL0"},"content":"        return internalList.iterator();","lastModifiedDate":"2022-10-06"},{"lineNumber":109,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":110,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":111,"author":{"gitId":"TZL0"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":112,"author":{"gitId":"TZL0"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-06"},{"lineNumber":113,"author":{"gitId":"TZL0"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-06"},{"lineNumber":114,"author":{"gitId":"TZL0"},"content":"                || (other instanceof UniqueAppointmentList // instanceof handles nulls","lastModifiedDate":"2022-10-06"},{"lineNumber":115,"author":{"gitId":"TZL0"},"content":"                \u0026\u0026 internalList.equals(((UniqueAppointmentList) other).internalList));","lastModifiedDate":"2022-10-06"},{"lineNumber":116,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":117,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":118,"author":{"gitId":"TZL0"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":119,"author":{"gitId":"TZL0"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-06"},{"lineNumber":120,"author":{"gitId":"TZL0"},"content":"        return internalList.hashCode();","lastModifiedDate":"2022-10-06"},{"lineNumber":121,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":122,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":123,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":124,"author":{"gitId":"TZL0"},"content":"     * Returns true if {@code patients} contains only unique patients.","lastModifiedDate":"2022-10-16"},{"lineNumber":125,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":126,"author":{"gitId":"TZL0"},"content":"    private boolean appointmentsAreUnique(List\u003cAppointment\u003e appointments) {","lastModifiedDate":"2022-10-06"},{"lineNumber":127,"author":{"gitId":"TZL0"},"content":"        for (int i \u003d 0; i \u003c appointments.size() - 1; i++) {","lastModifiedDate":"2022-10-06"},{"lineNumber":128,"author":{"gitId":"TZL0"},"content":"            for (int j \u003d i + 1; j \u003c appointments.size(); j++) {","lastModifiedDate":"2022-10-06"},{"lineNumber":129,"author":{"gitId":"TZL0"},"content":"                if (appointments.get(i).equals(appointments.get(j))) {","lastModifiedDate":"2022-10-06"},{"lineNumber":130,"author":{"gitId":"TZL0"},"content":"                    return false;","lastModifiedDate":"2022-10-06"},{"lineNumber":131,"author":{"gitId":"TZL0"},"content":"                }","lastModifiedDate":"2022-10-06"},{"lineNumber":132,"author":{"gitId":"TZL0"},"content":"            }","lastModifiedDate":"2022-10-06"},{"lineNumber":133,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":134,"author":{"gitId":"TZL0"},"content":"        return true;","lastModifiedDate":"2022-10-06"},{"lineNumber":135,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":136,"author":{"gitId":"TZL0"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"TZL0":136}},{"path":"src/main/java/seedu/address/model/appointment/exceptions/AppointmentNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TZL0"},"content":"package seedu.address.model.appointment.exceptions;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"TZL0"},"content":"/**","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"TZL0"},"content":" * Signals that the operation is unable to find the specified patient.","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"TZL0"},"content":" */","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"TZL0"},"content":"public class AppointmentNotFoundException extends RuntimeException {}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"TZL0":6}},{"path":"src/main/java/seedu/address/model/appointment/exceptions/DuplicateAppointmentException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TZL0"},"content":"package seedu.address.model.appointment.exceptions;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"TZL0"},"content":"/**","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"TZL0"},"content":" * Signals that the operation will result in duplicate Appointments","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"TZL0"},"content":" * (Appointments are considered duplicates if they have the same identity).","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"TZL0"},"content":" */","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"TZL0"},"content":"public class DuplicateAppointmentException extends RuntimeException {","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"TZL0"},"content":"    public DuplicateAppointmentException() {","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"TZL0"},"content":"        super(\"Operation would result in duplicate appointments\");","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"TZL0"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"TZL0":11}},{"path":"src/main/java/seedu/address/model/patient/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TZL0"},"content":"package seedu.address.model.patient;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"TZL0"},"content":" * Represents a Patient\u0027s address in the address book.","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                || (other instanceof Address // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Address) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"TZL0":2,"-":55}},{"path":"src/main/java/seedu/address/model/patient/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TZL0"},"content":"package seedu.address.model.patient;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"TZL0"},"content":" * Represents a Patient\u0027s email in the address book.","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"TZL0":2,"-":69}},{"path":"src/main/java/seedu/address/model/patient/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TZL0"},"content":"package seedu.address.model.patient;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"TZL0"},"content":" * Represents a Patient\u0027s name in the address book.","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"TZL0":2,"-":57}},{"path":"src/main/java/seedu/address/model/patient/NameContainsKeywordsPredicatePatient.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TZL0"},"content":"package seedu.address.model.patient;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"TZL0"},"content":" * Tests that a {@code Patient}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"wadia82"},"content":"public class NameContainsKeywordsPredicatePatient implements Predicate\u003cPatient\u003e {","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"wadia82"},"content":"    public NameContainsKeywordsPredicatePatient(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"guokweijie"},"content":"    public boolean test(Patient patient) {","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"guokweijie"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(patient.getName().fullName, keyword));","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"wadia82"},"content":"                || (other instanceof NameContainsKeywordsPredicatePatient // instanceof handles nulls","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"wadia82"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicatePatient) other).keywords)); // state check","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"wadia82":4,"guokweijie":2,"TZL0":2,"-":23}},{"path":"src/main/java/seedu/address/model/patient/Patient.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TZL0"},"content":"package seedu.address.model.patient;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"TZL0"},"content":" * Represents a Patient in the address book.","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"guokweijie"},"content":"public class Patient {","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Remark remark;","lastModifiedDate":"2022-09-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"guokweijie"},"content":"    public Patient(Name name, Phone phone, Email email, Address address, Remark remark, Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2022-09-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public Remark getRemark() {","lastModifiedDate":"2022-09-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return remark;","lastModifiedDate":"2022-09-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"TZL0"},"content":"     * Returns true if both patients have the same name.","lastModifiedDate":"2022-10-16"},{"lineNumber":71,"author":{"gitId":"TZL0"},"content":"     * This defines a weaker notion of equality between two patients.","lastModifiedDate":"2022-10-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"TZL0"},"content":"    public boolean isSamePatient(Patient otherPatient) {","lastModifiedDate":"2022-10-16"},{"lineNumber":74,"author":{"gitId":"guokweijie"},"content":"        if (otherPatient \u003d\u003d this) {","lastModifiedDate":"2022-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"guokweijie"},"content":"        return otherPatient !\u003d null","lastModifiedDate":"2022-10-13"},{"lineNumber":79,"author":{"gitId":"guokweijie"},"content":"                \u0026\u0026 otherPatient.getName().equals(getName());","lastModifiedDate":"2022-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"TZL0"},"content":"     * Returns true if both patients have the same identity and data fields.","lastModifiedDate":"2022-10-16"},{"lineNumber":84,"author":{"gitId":"TZL0"},"content":"     * This defines a stronger notion of equality between two patients.","lastModifiedDate":"2022-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":92,"author":{"gitId":"guokweijie"},"content":"        if (!(other instanceof Patient)) {","lastModifiedDate":"2022-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":96,"author":{"gitId":"guokweijie"},"content":"        Patient otherPatient \u003d (Patient) other;","lastModifiedDate":"2022-10-13"},{"lineNumber":97,"author":{"gitId":"guokweijie"},"content":"        return otherPatient.getName().equals(getName())","lastModifiedDate":"2022-10-13"},{"lineNumber":98,"author":{"gitId":"guokweijie"},"content":"                \u0026\u0026 otherPatient.getPhone().equals(getPhone())","lastModifiedDate":"2022-10-13"},{"lineNumber":99,"author":{"gitId":"guokweijie"},"content":"                \u0026\u0026 otherPatient.getEmail().equals(getEmail())","lastModifiedDate":"2022-10-13"},{"lineNumber":100,"author":{"gitId":"guokweijie"},"content":"                \u0026\u0026 otherPatient.getAddress().equals(getAddress())","lastModifiedDate":"2022-10-13"},{"lineNumber":101,"author":{"gitId":"guokweijie"},"content":"                \u0026\u0026 otherPatient.getTags().equals(getTags())","lastModifiedDate":"2022-10-13"},{"lineNumber":102,"author":{"gitId":"guokweijie"},"content":"                \u0026\u0026 otherPatient.getRemark().equals(getRemark());","lastModifiedDate":"2022-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"TZL0"},"content":"        return Objects.hash(name, phone, email, address, tags, remark);","lastModifiedDate":"2022-10-06"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                .append(getAddress())","lastModifiedDate":"2022-09-13"},{"lineNumber":121,"author":{"gitId":"TZL0"},"content":"                .append(\"; Remark: \")","lastModifiedDate":"2022-10-06"},{"lineNumber":122,"author":{"gitId":"TZL0"},"content":"                .append(getRemark())","lastModifiedDate":"2022-10-06"},{"lineNumber":123,"author":{"gitId":"TZL0"},"content":"                .append(\"; Tags: \");","lastModifiedDate":"2022-10-06"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"guokweijie":13,"TZL0":11,"-":109}},{"path":"src/main/java/seedu/address/model/patient/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TZL0"},"content":"package seedu.address.model.patient;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"TZL0"},"content":" * Represents a Patient\u0027s phone number in the address book.","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"TZL0":2,"-":51}},{"path":"src/main/java/seedu/address/model/patient/Remark.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TZL0"},"content":"package seedu.address.model.patient;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-09-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-09-13"},{"lineNumber":6,"author":{"gitId":"TZL0"},"content":" * Represents a Patient\u0027s remark in the address book.","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is always valid","lastModifiedDate":"2022-09-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-09-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Remark {","lastModifiedDate":"2022-09-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2022-09-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Creates a Remark object.","lastModifiedDate":"2022-09-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-09-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param remark","lastModifiedDate":"2022-09-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public Remark(String remark) {","lastModifiedDate":"2022-09-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        requireNonNull(remark);","lastModifiedDate":"2022-09-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        value \u003d remark;","lastModifiedDate":"2022-09-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-09-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2022-09-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2022-09-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-09-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-09-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-09-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                || (other instanceof Remark // instanceof handles nulls","lastModifiedDate":"2022-09-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Remark) other).value)); // state check","lastModifiedDate":"2022-09-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-09-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2022-09-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2022-09-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-09-13"}],"authorContributionMap":{"TZL0":2,"-":36}},{"path":"src/main/java/seedu/address/model/patient/TagContainsKeywordPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TZL0"},"content":"package seedu.address.model.patient;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"guokweijie"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"guokweijie"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"guokweijie"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"guokweijie"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"TZL0"},"content":" * Tests that a {@code Patient}\u0027s {@code Tag} matches the keyword given.","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"guokweijie"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"guokweijie"},"content":"public class TagContainsKeywordPredicate implements Predicate\u003cPatient\u003e {","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"guokweijie"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"guokweijie"},"content":"    public final String keyword;","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"guokweijie"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"guokweijie"},"content":"    public TagContainsKeywordPredicate(String keyword) {","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"guokweijie"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"guokweijie"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"guokweijie"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"guokweijie"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"guokweijie"},"content":"    public boolean test(Patient patient) {","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"guokweijie"},"content":"        return patient.getTags().stream()","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"guokweijie"},"content":"                .anyMatch(tag -\u003e tag.toString().contains(keyword));","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"guokweijie"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"guokweijie"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"guokweijie"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"guokweijie"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"guokweijie"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"guokweijie"},"content":"                || (other instanceof TagContainsKeywordPredicate // instanceof handles nulls","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"guokweijie"},"content":"                \u0026\u0026 keyword.equals(((TagContainsKeywordPredicate) other).keyword)); // state check","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"guokweijie"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"guokweijie"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"guokweijie":26,"TZL0":2}},{"path":"src/main/java/seedu/address/model/patient/UniquePatientList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TZL0"},"content":"package seedu.address.model.patient;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"SpecOps2016"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.exceptions.DuplicatePatientException;","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.exceptions.PatientNotFoundException;","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"TZL0"},"content":" * A list of patients that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"TZL0"},"content":" * A patient is considered unique by comparing using {@code Patient#isSamePatient(Patient)}.","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"TZL0"},"content":" * As such, adding and updating of patients uses Patient#isSamePatient(Patient) for equality","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"TZL0"},"content":" * so as to ensure that the patient being added or updated is","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"TZL0"},"content":" * unique in terms of identity in the UniquePatientList. However, the removal of a patient","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"TZL0"},"content":" * uses Patient#equals(Object) so as to ensure that the patient with exactly the same fields will be removed.","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"TZL0"},"content":" * @see Patient#isSamePatient(Patient)","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"guokweijie"},"content":"public class UniquePatientList implements Iterable\u003cPatient\u003e {","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"guokweijie"},"content":"    private final ObservableList\u003cPatient\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"guokweijie"},"content":"    private final ObservableList\u003cPatient\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"TZL0"},"content":"     * Returns true if the list contains an equivalent patient as the given argument.","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"guokweijie"},"content":"    public boolean contains(Patient toCheck) {","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"TZL0"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePatient);","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":42,"author":{"gitId":"TZL0"},"content":"     * Returns true if the list contains an equivalent patient as the given argument.","lastModifiedDate":"2022-10-17"},{"lineNumber":43,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":44,"author":{"gitId":"TZL0"},"content":"    public boolean contains(Name name) {","lastModifiedDate":"2022-10-17"},{"lineNumber":45,"author":{"gitId":"TZL0"},"content":"        requireNonNull(name);","lastModifiedDate":"2022-10-17"},{"lineNumber":46,"author":{"gitId":"TZL0"},"content":"        return internalList.stream().anyMatch(patient -\u003e patient.getName().equals(name));","lastModifiedDate":"2022-10-17"},{"lineNumber":47,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":48,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"TZL0"},"content":"     * Adds a patient to the list.","lastModifiedDate":"2022-10-16"},{"lineNumber":51,"author":{"gitId":"TZL0"},"content":"     * The patient must not already exist in the list.","lastModifiedDate":"2022-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"guokweijie"},"content":"    public void add(Patient toAdd) {","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"TZL0"},"content":"            throw new DuplicatePatientException();","lastModifiedDate":"2022-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":62,"author":{"gitId":"TZL0"},"content":"     * Replaces the patient {@code target} in the list with {@code editedPatient}.","lastModifiedDate":"2022-10-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"TZL0"},"content":"     * The patient identity of {@code editedPatient} must not be the same as another existing patient in the list.","lastModifiedDate":"2022-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":66,"author":{"gitId":"TZL0"},"content":"    public void setPatient(Patient target, Patient editedPatient) {","lastModifiedDate":"2022-10-16"},{"lineNumber":67,"author":{"gitId":"guokweijie"},"content":"        requireAllNonNull(target, editedPatient);","lastModifiedDate":"2022-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":71,"author":{"gitId":"TZL0"},"content":"            throw new PatientNotFoundException();","lastModifiedDate":"2022-10-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":74,"author":{"gitId":"TZL0"},"content":"        if (!target.isSamePatient(editedPatient) \u0026\u0026 contains(editedPatient)) {","lastModifiedDate":"2022-10-16"},{"lineNumber":75,"author":{"gitId":"TZL0"},"content":"            throw new DuplicatePatientException();","lastModifiedDate":"2022-10-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":78,"author":{"gitId":"guokweijie"},"content":"        internalList.set(index, editedPatient);","lastModifiedDate":"2022-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"TZL0"},"content":"     * Removes the equivalent patient from the list.","lastModifiedDate":"2022-10-16"},{"lineNumber":83,"author":{"gitId":"TZL0"},"content":"     * The patient must exist in the list.","lastModifiedDate":"2022-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"guokweijie"},"content":"    public void remove(Patient toRemove) {","lastModifiedDate":"2022-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":88,"author":{"gitId":"TZL0"},"content":"            throw new PatientNotFoundException();","lastModifiedDate":"2022-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"TZL0"},"content":"    public void setPatients(UniquePatientList replacement) {","lastModifiedDate":"2022-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":98,"author":{"gitId":"TZL0"},"content":"     * Replaces the contents of this list with {@code patients}.","lastModifiedDate":"2022-10-16"},{"lineNumber":99,"author":{"gitId":"TZL0"},"content":"     * {@code patients} must not contain duplicate patients.","lastModifiedDate":"2022-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":101,"author":{"gitId":"TZL0"},"content":"    public void setPatients(List\u003cPatient\u003e patients) {","lastModifiedDate":"2022-10-16"},{"lineNumber":102,"author":{"gitId":"guokweijie"},"content":"        requireAllNonNull(patients);","lastModifiedDate":"2022-10-13"},{"lineNumber":103,"author":{"gitId":"TZL0"},"content":"        if (!patientsAreUnique(patients)) {","lastModifiedDate":"2022-10-16"},{"lineNumber":104,"author":{"gitId":"TZL0"},"content":"            throw new DuplicatePatientException();","lastModifiedDate":"2022-10-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":107,"author":{"gitId":"guokweijie"},"content":"        internalList.setAll(patients);","lastModifiedDate":"2022-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":113,"author":{"gitId":"guokweijie"},"content":"    public ObservableList\u003cPatient\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":118,"author":{"gitId":"guokweijie"},"content":"    public Iterator\u003cPatient\u003e iterator() {","lastModifiedDate":"2022-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"guokweijie"},"content":"                || (other instanceof UniquePatientList // instanceof handles nulls","lastModifiedDate":"2022-10-13"},{"lineNumber":126,"author":{"gitId":"guokweijie"},"content":"                        \u0026\u0026 internalList.equals(((UniquePatientList) other).internalList));","lastModifiedDate":"2022-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":135,"author":{"gitId":"TZL0"},"content":"     * Returns true if {@code patients} contains only unique patients.","lastModifiedDate":"2022-10-16"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":137,"author":{"gitId":"TZL0"},"content":"    private boolean patientsAreUnique(List\u003cPatient\u003e patients) {","lastModifiedDate":"2022-10-16"},{"lineNumber":138,"author":{"gitId":"guokweijie"},"content":"        for (int i \u003d 0; i \u003c patients.size() - 1; i++) {","lastModifiedDate":"2022-10-13"},{"lineNumber":139,"author":{"gitId":"guokweijie"},"content":"            for (int j \u003d i + 1; j \u003c patients.size(); j++) {","lastModifiedDate":"2022-10-13"},{"lineNumber":140,"author":{"gitId":"TZL0"},"content":"                if (patients.get(i).isSamePatient(patients.get(j))) {","lastModifiedDate":"2022-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":147,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":148,"author":{"gitId":"SpecOps2016"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":149,"author":{"gitId":"TZL0"},"content":"     * Sorts the list of patients in alphabetical order by given criteria.","lastModifiedDate":"2022-10-16"},{"lineNumber":150,"author":{"gitId":"SpecOps2016"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":151,"author":{"gitId":"guokweijie"},"content":"    public void sort(Comparator\u003cPatient\u003e compatator) {","lastModifiedDate":"2022-10-13"},{"lineNumber":152,"author":{"gitId":"SpecOps2016"},"content":"        FXCollections.sort(internalList, compatator);","lastModifiedDate":"2022-10-11"},{"lineNumber":153,"author":{"gitId":"SpecOps2016"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"guokweijie":17,"SpecOps2016":6,"TZL0":42,"-":89}},{"path":"src/main/java/seedu/address/model/patient/exceptions/DuplicatePatientException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TZL0"},"content":"package seedu.address.model.patient.exceptions;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"TZL0"},"content":"/**","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"TZL0"},"content":" * Signals that the operation will result in duplicate Patients","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"TZL0"},"content":" * (Patients are considered duplicates if they have the same identity).","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"TZL0"},"content":" */","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"TZL0"},"content":"public class DuplicatePatientException extends RuntimeException {","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"TZL0"},"content":"    public DuplicatePatientException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"TZL0"},"content":"        super(\"Operation would result in duplicate patients\");","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"TZL0"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"TZL0":11}},{"path":"src/main/java/seedu/address/model/patient/exceptions/PatientNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TZL0"},"content":"package seedu.address.model.patient.exceptions;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"TZL0"},"content":"/**","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"TZL0"},"content":" * Signals that the operation is unable to find the specified patient.","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"TZL0"},"content":" */","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"TZL0"},"content":"public class PatientNotFoundException extends RuntimeException {}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"TZL0":6}},{"path":"src/main/java/seedu/address/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"TZL0"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric and should not contains blank\";","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"TZL0":1,"-":53}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.Address;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.Email;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.Name;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.Phone;","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.Remark;","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final Remark EMPTY_REMARK \u003d new Remark(\"\");","lastModifiedDate":"2022-09-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":23,"author":{"gitId":"TZL0"},"content":"    public static Patient[] getSamplePatients() {","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"guokweijie"},"content":"        return new Patient[] {","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"guokweijie"},"content":"            new Patient(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"), EMPTY_REMARK,","lastModifiedDate":"2022-09-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                getTagSet(\"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":28,"author":{"gitId":"guokweijie"},"content":"            new Patient(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"), EMPTY_REMARK,","lastModifiedDate":"2022-09-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":31,"author":{"gitId":"guokweijie"},"content":"            new Patient(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"), EMPTY_REMARK,","lastModifiedDate":"2022-09-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                getTagSet(\"neighbours\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":34,"author":{"gitId":"guokweijie"},"content":"            new Patient(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"), EMPTY_REMARK,","lastModifiedDate":"2022-09-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                getTagSet(\"family\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":37,"author":{"gitId":"guokweijie"},"content":"            new Patient(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"), EMPTY_REMARK,","lastModifiedDate":"2022-09-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                getTagSet(\"classmates\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":40,"author":{"gitId":"guokweijie"},"content":"            new Patient(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"), EMPTY_REMARK,","lastModifiedDate":"2022-09-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\"))","lastModifiedDate":"2017-03-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":48,"author":{"gitId":"TZL0"},"content":"        for (Patient samplePatient : getSamplePatients()) {","lastModifiedDate":"2022-10-16"},{"lineNumber":49,"author":{"gitId":"TZL0"},"content":"            sampleAb.addPatient(samplePatient);","lastModifiedDate":"2022-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"guokweijie":7,"TZL0":9,"-":47}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedAppointment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TZL0"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"TZL0"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"TZL0"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"TZL0"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.appointment.Doctor;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.appointment.MedicalTest;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.appointment.Slot;","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.Name;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"TZL0"},"content":"/**","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"TZL0"},"content":" * Jackson-friendly version of {@link seedu.address.model.appointment.Appointment}.","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"TZL0"},"content":" */","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"TZL0"},"content":"class JsonAdaptedAppointment {","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"TZL0"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Appointment\u0027s %s field is missing!\";","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"TZL0"},"content":"    private final String name;","lastModifiedDate":"2022-10-07"},{"lineNumber":21,"author":{"gitId":"TZL0"},"content":"    private final String slot;","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"TZL0"},"content":"    private final String medicalTest;","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"TZL0"},"content":"    private final String doctor;","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"TZL0"},"content":"     * Constructs a {@code JsonAdaptedPatient} with the given patient details.","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"TZL0"},"content":"    @JsonCreator","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"TZL0"},"content":"    public JsonAdaptedAppointment(@JsonProperty(\"name\") String name, @JsonProperty(\"medicalTest\") String medicalTest,","lastModifiedDate":"2022-10-07"},{"lineNumber":30,"author":{"gitId":"TZL0"},"content":"                                  @JsonProperty(\"slot\") String slot, @JsonProperty(\"doctor\") String doctor) {","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"TZL0"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-10-07"},{"lineNumber":32,"author":{"gitId":"TZL0"},"content":"        this.slot \u003d slot;","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"TZL0"},"content":"        this.medicalTest \u003d medicalTest;","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"TZL0"},"content":"        this.doctor \u003d doctor;","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"TZL0"},"content":"     * Converts a given {@code Appointment} into this class for Jackson use.","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"TZL0"},"content":"    public JsonAdaptedAppointment(Appointment source) {","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"TZL0"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2022-10-07"},{"lineNumber":42,"author":{"gitId":"TZL0"},"content":"        slot \u003d source.getSlot().toString();","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"TZL0"},"content":"        medicalTest \u003d source.getMedicalTest().toString();","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"TZL0"},"content":"        doctor \u003d source.getDoctor().toString();","lastModifiedDate":"2022-10-06"},{"lineNumber":45,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":46,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":47,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":48,"author":{"gitId":"TZL0"},"content":"     * Converts this Jackson-friendly adapted appointment object into the model\u0027s {@code Appointment} object.","lastModifiedDate":"2022-10-06"},{"lineNumber":49,"author":{"gitId":"TZL0"},"content":"     *","lastModifiedDate":"2022-10-06"},{"lineNumber":50,"author":{"gitId":"TZL0"},"content":"     * @throws seedu.address.commons.exceptions.IllegalValueException if there were any data constraints","lastModifiedDate":"2022-10-06"},{"lineNumber":51,"author":{"gitId":"TZL0"},"content":"     *      violated in the adapted appointment.","lastModifiedDate":"2022-10-06"},{"lineNumber":52,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":53,"author":{"gitId":"TZL0"},"content":"    public Appointment toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-06"},{"lineNumber":54,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":55,"author":{"gitId":"TZL0"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2022-10-07"},{"lineNumber":56,"author":{"gitId":"TZL0"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2022-10-07"},{"lineNumber":57,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":58,"author":{"gitId":"TZL0"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2022-10-07"},{"lineNumber":59,"author":{"gitId":"TZL0"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-07"},{"lineNumber":60,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":61,"author":{"gitId":"TZL0"},"content":"        final Name modelEmail \u003d new Name(name);","lastModifiedDate":"2022-10-07"},{"lineNumber":62,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":63,"author":{"gitId":"TZL0"},"content":"        if (medicalTest \u003d\u003d null) {","lastModifiedDate":"2022-10-06"},{"lineNumber":64,"author":{"gitId":"TZL0"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-10-06"},{"lineNumber":65,"author":{"gitId":"TZL0"},"content":"                    MedicalTest.class.getSimpleName()));","lastModifiedDate":"2022-10-06"},{"lineNumber":66,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":67,"author":{"gitId":"TZL0"},"content":"        if (!MedicalTest.isValidMedicalTest(medicalTest)) {","lastModifiedDate":"2022-10-06"},{"lineNumber":68,"author":{"gitId":"TZL0"},"content":"            throw new IllegalValueException(MedicalTest.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-06"},{"lineNumber":69,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":70,"author":{"gitId":"TZL0"},"content":"        final MedicalTest modelMedicalTest \u003d new MedicalTest(medicalTest);","lastModifiedDate":"2022-10-06"},{"lineNumber":71,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":72,"author":{"gitId":"TZL0"},"content":"        if (slot \u003d\u003d null) {","lastModifiedDate":"2022-10-06"},{"lineNumber":73,"author":{"gitId":"TZL0"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Slot.class.getSimpleName()));","lastModifiedDate":"2022-10-06"},{"lineNumber":74,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":75,"author":{"gitId":"TZL0"},"content":"        if (!Slot.isValidDateTime(slot)) {","lastModifiedDate":"2022-10-06"},{"lineNumber":76,"author":{"gitId":"TZL0"},"content":"            throw new IllegalValueException(Slot.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-06"},{"lineNumber":77,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":78,"author":{"gitId":"TZL0"},"content":"        final Slot modelSlot \u003d new Slot(slot);","lastModifiedDate":"2022-10-06"},{"lineNumber":79,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":80,"author":{"gitId":"TZL0"},"content":"        if (doctor \u003d\u003d null) {","lastModifiedDate":"2022-10-06"},{"lineNumber":81,"author":{"gitId":"TZL0"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Doctor.class.getSimpleName()));","lastModifiedDate":"2022-10-06"},{"lineNumber":82,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":83,"author":{"gitId":"TZL0"},"content":"        if (!Doctor.isValidDoctorName(doctor)) {","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"TZL0"},"content":"            throw new IllegalValueException(Doctor.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"TZL0"},"content":"        final Doctor modelDoctor \u003d new Doctor(doctor);","lastModifiedDate":"2022-10-06"},{"lineNumber":87,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":88,"author":{"gitId":"TZL0"},"content":"        return new Appointment(modelEmail, modelMedicalTest, modelSlot, modelDoctor);","lastModifiedDate":"2022-10-06"},{"lineNumber":89,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":90,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":91,"author":{"gitId":"TZL0"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"TZL0":91}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPatient.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.Address;","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.Email;","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.Name;","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.Phone;","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.Remark;","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"guokweijie"},"content":" * Jackson-friendly version of {@link Patient}.","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"TZL0"},"content":"class JsonAdaptedPatient {","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"TZL0"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Patient\u0027s %s field is missing!\";","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2022-09-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"TZL0"},"content":"     * Constructs a {@code JsonAdaptedPatient} with the given patient details.","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"TZL0"},"content":"    public JsonAdaptedPatient(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                              @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"TZL0"},"content":"                              @JsonProperty(\"remark\") String remark,","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"TZL0"},"content":"                              @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2022-09-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"TZL0"},"content":"     * Converts a given {@code Patient} into this class for Jackson use.","lastModifiedDate":"2022-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"TZL0"},"content":"    public JsonAdaptedPatient(Patient source) {","lastModifiedDate":"2022-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        remark \u003d source.getRemark().value;","lastModifiedDate":"2022-09-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"TZL0"},"content":"     * Converts this Jackson-friendly adapted patient object into the model\u0027s {@code Patient} object.","lastModifiedDate":"2022-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"TZL0"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted patient.","lastModifiedDate":"2022-10-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"guokweijie"},"content":"    public Patient toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-13"},{"lineNumber":73,"author":{"gitId":"TZL0"},"content":"        final List\u003cTag\u003e patientTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"TZL0"},"content":"            patientTags.add(tag.toModelType());","lastModifiedDate":"2022-10-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (remark \u003d\u003d null) {","lastModifiedDate":"2022-09-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Remark.class.getSimpleName()));","lastModifiedDate":"2022-09-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-09-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        final Remark modelRemark \u003d new Remark(remark);","lastModifiedDate":"2022-09-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":115,"author":{"gitId":"TZL0"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(patientTags);","lastModifiedDate":"2022-10-16"},{"lineNumber":116,"author":{"gitId":"guokweijie"},"content":"        return new Patient(modelName, modelPhone, modelEmail, modelAddress, modelRemark, modelTags);","lastModifiedDate":"2022-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"guokweijie":3,"TZL0":19,"-":97}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"TZL0"},"content":"    public static final String MESSAGE_DUPLICATE_PATIENT \u003d \"Patients list contains duplicate patient(s).\";","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"TZL0"},"content":"    public static final String MESSAGE_DUPLICATE_APPOINTMENT \u003d \"Appointment list contains duplicate appointment(s).\";","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"TZL0"},"content":"    public static final String MESSAGE_APPOINTING_PATIENT_NOT_EXIST \u003d","lastModifiedDate":"2022-10-17"},{"lineNumber":26,"author":{"gitId":"TZL0"},"content":"            \"Appointing patient does not exist in the patients list.\";","lastModifiedDate":"2022-10-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"TZL0"},"content":"    private final List\u003cJsonAdaptedPatient\u003e patients \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"TZL0"},"content":"    private final List\u003cJsonAdaptedAppointment\u003e appointments \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"TZL0"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given patients and appointments.","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"TZL0"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"patients\") List\u003cJsonAdaptedPatient\u003e patients,","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"TZL0"},"content":"                                       @JsonProperty(\"appointments\") List\u003cJsonAdaptedAppointment\u003e appointments) {","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"TZL0"},"content":"        this.patients.addAll(patients);","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"TZL0"},"content":"        this.appointments.addAll(appointments);","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"TZL0"},"content":"        patients.addAll(source.getPatientList().stream().map(JsonAdaptedPatient::new).collect(Collectors.toList()));","lastModifiedDate":"2022-10-16"},{"lineNumber":48,"author":{"gitId":"TZL0"},"content":"        appointments.addAll(source.getAppointmentList().stream()","lastModifiedDate":"2022-10-06"},{"lineNumber":49,"author":{"gitId":"TZL0"},"content":"                .map(JsonAdaptedAppointment::new).collect(Collectors.toList()));","lastModifiedDate":"2022-10-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"TZL0"},"content":"        for (JsonAdaptedPatient jsonAdaptedPatient : patients) {","lastModifiedDate":"2022-10-16"},{"lineNumber":60,"author":{"gitId":"TZL0"},"content":"            Patient patient \u003d jsonAdaptedPatient.toModelType();","lastModifiedDate":"2022-10-16"},{"lineNumber":61,"author":{"gitId":"TZL0"},"content":"            if (addressBook.hasPatient(patient)) {","lastModifiedDate":"2022-10-16"},{"lineNumber":62,"author":{"gitId":"TZL0"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PATIENT);","lastModifiedDate":"2022-10-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"TZL0"},"content":"            addressBook.addPatient(patient);","lastModifiedDate":"2022-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"TZL0"},"content":"        for (JsonAdaptedAppointment jsonAdaptedAppointment : appointments) {","lastModifiedDate":"2022-10-06"},{"lineNumber":67,"author":{"gitId":"TZL0"},"content":"            Appointment appointment \u003d jsonAdaptedAppointment.toModelType();","lastModifiedDate":"2022-10-06"},{"lineNumber":68,"author":{"gitId":"TZL0"},"content":"            if (addressBook.hasAppointment(appointment)) {","lastModifiedDate":"2022-10-06"},{"lineNumber":69,"author":{"gitId":"TZL0"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_APPOINTMENT);","lastModifiedDate":"2022-10-06"},{"lineNumber":70,"author":{"gitId":"TZL0"},"content":"            }","lastModifiedDate":"2022-10-06"},{"lineNumber":71,"author":{"gitId":"TZL0"},"content":"            if (!addressBook.hasPatient(appointment.getName())) {","lastModifiedDate":"2022-10-17"},{"lineNumber":72,"author":{"gitId":"TZL0"},"content":"                throw new IllegalValueException(MESSAGE_APPOINTING_PATIENT_NOT_EXIST);","lastModifiedDate":"2022-10-17"},{"lineNumber":73,"author":{"gitId":"TZL0"},"content":"            }","lastModifiedDate":"2022-10-17"},{"lineNumber":74,"author":{"gitId":"TZL0"},"content":"            addressBook.addAppointment(appointment);","lastModifiedDate":"2022-10-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"TZL0":30,"-":49}},{"path":"src/main/java/seedu/address/ui/AppointmentCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TZL0"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":3,"author":{"gitId":"TZL0"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-07"},{"lineNumber":4,"author":{"gitId":"TZL0"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-10-07"},{"lineNumber":5,"author":{"gitId":"TZL0"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-10-07"},{"lineNumber":6,"author":{"gitId":"TZL0"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-10-07"},{"lineNumber":7,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2022-10-07"},{"lineNumber":8,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":9,"author":{"gitId":"TZL0"},"content":"/**","lastModifiedDate":"2022-10-07"},{"lineNumber":10,"author":{"gitId":"TZL0"},"content":" * An UI component that displays information of a {@code Patient}.","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"TZL0"},"content":" */","lastModifiedDate":"2022-10-07"},{"lineNumber":12,"author":{"gitId":"TZL0"},"content":"public class AppointmentCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-07"},{"lineNumber":13,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":14,"author":{"gitId":"TZL0"},"content":"    private static final String FXML \u003d \"AppointmentListCard.fxml\";","lastModifiedDate":"2022-10-07"},{"lineNumber":15,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":16,"author":{"gitId":"TZL0"},"content":"    public final Appointment appointment;","lastModifiedDate":"2022-10-07"},{"lineNumber":17,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":18,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":19,"author":{"gitId":"TZL0"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2022-10-07"},{"lineNumber":20,"author":{"gitId":"TZL0"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2022-10-07"},{"lineNumber":21,"author":{"gitId":"TZL0"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2022-10-07"},{"lineNumber":22,"author":{"gitId":"TZL0"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":23,"author":{"gitId":"TZL0"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2022-10-07"},{"lineNumber":24,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":25,"author":{"gitId":"TZL0"},"content":"    @FXML","lastModifiedDate":"2022-10-07"},{"lineNumber":26,"author":{"gitId":"TZL0"},"content":"    private HBox cardPane;","lastModifiedDate":"2022-10-07"},{"lineNumber":27,"author":{"gitId":"TZL0"},"content":"    @FXML","lastModifiedDate":"2022-10-07"},{"lineNumber":28,"author":{"gitId":"TZL0"},"content":"    private Label id;","lastModifiedDate":"2022-10-07"},{"lineNumber":29,"author":{"gitId":"TZL0"},"content":"    @FXML","lastModifiedDate":"2022-10-07"},{"lineNumber":30,"author":{"gitId":"TZL0"},"content":"    private Label name;","lastModifiedDate":"2022-10-07"},{"lineNumber":31,"author":{"gitId":"TZL0"},"content":"    @FXML","lastModifiedDate":"2022-10-07"},{"lineNumber":32,"author":{"gitId":"TZL0"},"content":"    private Label medicalTest;","lastModifiedDate":"2022-10-07"},{"lineNumber":33,"author":{"gitId":"TZL0"},"content":"    @FXML","lastModifiedDate":"2022-10-07"},{"lineNumber":34,"author":{"gitId":"TZL0"},"content":"    private Label slot;","lastModifiedDate":"2022-10-07"},{"lineNumber":35,"author":{"gitId":"TZL0"},"content":"    @FXML","lastModifiedDate":"2022-10-07"},{"lineNumber":36,"author":{"gitId":"TZL0"},"content":"    private Label doctor;","lastModifiedDate":"2022-10-07"},{"lineNumber":37,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":38,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":39,"author":{"gitId":"TZL0"},"content":"     * Creates a {@code PatientCode} with the given {@code Patient} and index to display.","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":41,"author":{"gitId":"TZL0"},"content":"    public AppointmentCard(Appointment appointment, int displayedIndex) {","lastModifiedDate":"2022-10-07"},{"lineNumber":42,"author":{"gitId":"TZL0"},"content":"        super(FXML);","lastModifiedDate":"2022-10-07"},{"lineNumber":43,"author":{"gitId":"TZL0"},"content":"        this.appointment \u003d appointment;","lastModifiedDate":"2022-10-07"},{"lineNumber":44,"author":{"gitId":"TZL0"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2022-10-07"},{"lineNumber":45,"author":{"gitId":"TZL0"},"content":"        name.setText(appointment.getName().fullName);","lastModifiedDate":"2022-10-07"},{"lineNumber":46,"author":{"gitId":"TZL0"},"content":"        medicalTest.setText(appointment.getMedicalTest().medicalTestName);","lastModifiedDate":"2022-10-07"},{"lineNumber":47,"author":{"gitId":"TZL0"},"content":"        slot.setText(appointment.getSlot().toString());","lastModifiedDate":"2022-10-07"},{"lineNumber":48,"author":{"gitId":"TZL0"},"content":"        doctor.setText(appointment.getDoctor().toString());","lastModifiedDate":"2022-10-07"},{"lineNumber":49,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":50,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":51,"author":{"gitId":"TZL0"},"content":"    @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":52,"author":{"gitId":"TZL0"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-07"},{"lineNumber":53,"author":{"gitId":"TZL0"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-07"},{"lineNumber":54,"author":{"gitId":"TZL0"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-07"},{"lineNumber":55,"author":{"gitId":"TZL0"},"content":"            return true;","lastModifiedDate":"2022-10-07"},{"lineNumber":56,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":57,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":58,"author":{"gitId":"TZL0"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-07"},{"lineNumber":59,"author":{"gitId":"TZL0"},"content":"        if (!(other instanceof AppointmentCard)) {","lastModifiedDate":"2022-10-07"},{"lineNumber":60,"author":{"gitId":"TZL0"},"content":"            return false;","lastModifiedDate":"2022-10-07"},{"lineNumber":61,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":62,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":63,"author":{"gitId":"TZL0"},"content":"        // state check","lastModifiedDate":"2022-10-07"},{"lineNumber":64,"author":{"gitId":"TZL0"},"content":"        AppointmentCard card \u003d (AppointmentCard) other;","lastModifiedDate":"2022-10-07"},{"lineNumber":65,"author":{"gitId":"TZL0"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2022-10-07"},{"lineNumber":66,"author":{"gitId":"TZL0"},"content":"                \u0026\u0026 appointment.equals(card.appointment);","lastModifiedDate":"2022-10-07"},{"lineNumber":67,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":68,"author":{"gitId":"TZL0"},"content":"}","lastModifiedDate":"2022-10-07"}],"authorContributionMap":{"TZL0":68}},{"path":"src/main/java/seedu/address/ui/AppointmentListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TZL0"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":3,"author":{"gitId":"TZL0"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-07"},{"lineNumber":4,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":5,"author":{"gitId":"TZL0"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-07"},{"lineNumber":6,"author":{"gitId":"TZL0"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-07"},{"lineNumber":7,"author":{"gitId":"TZL0"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2022-10-07"},{"lineNumber":8,"author":{"gitId":"TZL0"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-10-07"},{"lineNumber":9,"author":{"gitId":"TZL0"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-10-07"},{"lineNumber":10,"author":{"gitId":"TZL0"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-10-07"},{"lineNumber":11,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2022-10-07"},{"lineNumber":12,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":13,"author":{"gitId":"TZL0"},"content":"/**","lastModifiedDate":"2022-10-07"},{"lineNumber":14,"author":{"gitId":"TZL0"},"content":" * Panel containing the list of appointments.","lastModifiedDate":"2022-10-07"},{"lineNumber":15,"author":{"gitId":"TZL0"},"content":" */","lastModifiedDate":"2022-10-07"},{"lineNumber":16,"author":{"gitId":"TZL0"},"content":"public class AppointmentListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-07"},{"lineNumber":17,"author":{"gitId":"TZL0"},"content":"    private static final String FXML \u003d \"AppointmentListPanel.fxml\";","lastModifiedDate":"2022-10-07"},{"lineNumber":18,"author":{"gitId":"TZL0"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(AppointmentListPanel.class);","lastModifiedDate":"2022-10-07"},{"lineNumber":19,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":20,"author":{"gitId":"TZL0"},"content":"    @FXML","lastModifiedDate":"2022-10-07"},{"lineNumber":21,"author":{"gitId":"TZL0"},"content":"    private ListView\u003cAppointment\u003e appointmentListView;","lastModifiedDate":"2022-10-07"},{"lineNumber":22,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":23,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":24,"author":{"gitId":"TZL0"},"content":"     * Creates a {@code PatientListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":26,"author":{"gitId":"TZL0"},"content":"    public AppointmentListPanel(ObservableList\u003cAppointment\u003e appointments) {","lastModifiedDate":"2022-10-07"},{"lineNumber":27,"author":{"gitId":"TZL0"},"content":"        super(FXML);","lastModifiedDate":"2022-10-07"},{"lineNumber":28,"author":{"gitId":"TZL0"},"content":"        appointmentListView.setItems(appointments);","lastModifiedDate":"2022-10-07"},{"lineNumber":29,"author":{"gitId":"TZL0"},"content":"        appointmentListView.setCellFactory(listView -\u003e new AppointmentListViewCell());","lastModifiedDate":"2022-10-07"},{"lineNumber":30,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":31,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":32,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":33,"author":{"gitId":"TZL0"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Patient} using a {@code PatientCard}.","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":35,"author":{"gitId":"TZL0"},"content":"    class AppointmentListViewCell extends ListCell\u003cAppointment\u003e {","lastModifiedDate":"2022-10-07"},{"lineNumber":36,"author":{"gitId":"TZL0"},"content":"        @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":37,"author":{"gitId":"TZL0"},"content":"        protected void updateItem(Appointment appointment, boolean empty) {","lastModifiedDate":"2022-10-07"},{"lineNumber":38,"author":{"gitId":"TZL0"},"content":"            super.updateItem(appointment, empty);","lastModifiedDate":"2022-10-07"},{"lineNumber":39,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":40,"author":{"gitId":"TZL0"},"content":"            if (empty || appointment \u003d\u003d null) {","lastModifiedDate":"2022-10-07"},{"lineNumber":41,"author":{"gitId":"TZL0"},"content":"                setGraphic(null);","lastModifiedDate":"2022-10-07"},{"lineNumber":42,"author":{"gitId":"TZL0"},"content":"                setText(null);","lastModifiedDate":"2022-10-07"},{"lineNumber":43,"author":{"gitId":"TZL0"},"content":"            } else {","lastModifiedDate":"2022-10-07"},{"lineNumber":44,"author":{"gitId":"TZL0"},"content":"                setGraphic(new AppointmentCard(appointment, getIndex() + 1).getRoot());","lastModifiedDate":"2022-10-07"},{"lineNumber":45,"author":{"gitId":"TZL0"},"content":"            }","lastModifiedDate":"2022-10-07"},{"lineNumber":46,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":47,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":48,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":49,"author":{"gitId":"TZL0"},"content":"}","lastModifiedDate":"2022-10-07"}],"authorContributionMap":{"TZL0":49}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"TZL0"},"content":"    private PatientListPanel patientListPanel;","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"TZL0"},"content":"    private AppointmentListPanel appointmentListPanel;","lastModifiedDate":"2022-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"TZL0"},"content":"    private StackPane patientListPanelPlaceholder;","lastModifiedDate":"2022-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"TZL0"},"content":"    @FXML","lastModifiedDate":"2022-10-07"},{"lineNumber":49,"author":{"gitId":"TZL0"},"content":"    private StackPane appointmentListPanelPlaceholder;","lastModifiedDate":"2022-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"TZL0"},"content":"        patientListPanel \u003d new PatientListPanel(logic.getFilteredPatientList());","lastModifiedDate":"2022-10-16"},{"lineNumber":118,"author":{"gitId":"TZL0"},"content":"        patientListPanelPlaceholder.getChildren().add(patientListPanel.getRoot());","lastModifiedDate":"2022-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"TZL0"},"content":"        appointmentListPanel \u003d new AppointmentListPanel(logic.getFilteredAppointmentList());","lastModifiedDate":"2022-10-07"},{"lineNumber":121,"author":{"gitId":"TZL0"},"content":"        appointmentListPanelPlaceholder.getChildren().add(appointmentListPanel.getRoot());","lastModifiedDate":"2022-10-07"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":173,"author":{"gitId":"TZL0"},"content":"    public PatientListPanel getPatientListPanel() {","lastModifiedDate":"2022-10-16"},{"lineNumber":174,"author":{"gitId":"TZL0"},"content":"        return patientListPanel;","lastModifiedDate":"2022-10-16"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"TZL0":11,"-":192}},{"path":"src/main/java/seedu/address/ui/PatientCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"TZL0"},"content":" * An UI component that displays information of a {@code Patient}.","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"TZL0"},"content":"public class PatientCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"TZL0"},"content":"    private static final String FXML \u003d \"PatientListCard.fxml\";","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"guokweijie"},"content":"    public final Patient patient;","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"TZL0"},"content":"    private Label remark;","lastModifiedDate":"2022-10-07"},{"lineNumber":42,"author":{"gitId":"TZL0"},"content":"    @FXML","lastModifiedDate":"2022-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":46,"author":{"gitId":"TZL0"},"content":"     * Creates a {@code PatientCode} with the given {@code Patient} and index to display.","lastModifiedDate":"2022-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":48,"author":{"gitId":"TZL0"},"content":"    public PatientCard(Patient patient, int displayedIndex) {","lastModifiedDate":"2022-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":50,"author":{"gitId":"guokweijie"},"content":"        this.patient \u003d patient;","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"guokweijie"},"content":"        name.setText(patient.getName().fullName);","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"guokweijie"},"content":"        phone.setText(\"Phone Number: \" + patient.getPhone().value);","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"guokweijie"},"content":"        address.setText(\"Address: \" + patient.getAddress().value);","lastModifiedDate":"2022-10-13"},{"lineNumber":55,"author":{"gitId":"guokweijie"},"content":"        email.setText(\"Email: \" + patient.getEmail().value);","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"guokweijie"},"content":"        remark.setText(\"Remark: \" + patient.getRemark().value);","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"guokweijie"},"content":"        patient.getTags().stream()","lastModifiedDate":"2022-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":70,"author":{"gitId":"TZL0"},"content":"        if (!(other instanceof PatientCard)) {","lastModifiedDate":"2022-10-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":75,"author":{"gitId":"TZL0"},"content":"        PatientCard card \u003d (PatientCard) other;","lastModifiedDate":"2022-10-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":77,"author":{"gitId":"guokweijie"},"content":"                \u0026\u0026 patient.equals(card.patient);","lastModifiedDate":"2022-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"guokweijie":9,"TZL0":10,"-":60}},{"path":"src/main/java/seedu/address/ui/PatientListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TZL0"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"TZL0"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"TZL0"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"TZL0"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"TZL0"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"TZL0"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"TZL0"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"TZL0"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"TZL0"},"content":"/**","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"TZL0"},"content":" * Panel containing the list of patients.","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"TZL0"},"content":" */","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"TZL0"},"content":"public class PatientListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"TZL0"},"content":"    private static final String FXML \u003d \"PatientListPanel.fxml\";","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"TZL0"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PatientListPanel.class);","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"TZL0"},"content":"    @FXML","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"TZL0"},"content":"    private ListView\u003cPatient\u003e patientListView;","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"TZL0"},"content":"     * Creates a {@code PatientListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"TZL0"},"content":"    public PatientListPanel(ObservableList\u003cPatient\u003e patientList) {","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"TZL0"},"content":"        super(FXML);","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"TZL0"},"content":"        patientListView.setItems(patientList);","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"TZL0"},"content":"        patientListView.setCellFactory(listView -\u003e new PatientListViewCell());","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"TZL0"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Patient} using a {@code PatientCard}.","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"TZL0"},"content":"    class PatientListViewCell extends ListCell\u003cPatient\u003e {","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"TZL0"},"content":"        @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"TZL0"},"content":"        protected void updateItem(Patient patient, boolean empty) {","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"TZL0"},"content":"            super.updateItem(patient, empty);","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"TZL0"},"content":"            if (empty || patient \u003d\u003d null) {","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"TZL0"},"content":"                setGraphic(null);","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"TZL0"},"content":"                setText(null);","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"TZL0"},"content":"            } else {","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"TZL0"},"content":"                setGraphic(new PatientCard(patient, getIndex() + 1).getRoot());","lastModifiedDate":"2022-10-16"},{"lineNumber":45,"author":{"gitId":"TZL0"},"content":"            }","lastModifiedDate":"2022-10-16"},{"lineNumber":46,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":47,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":48,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":49,"author":{"gitId":"TZL0"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"TZL0":49}},{"path":"src/main/resources/view/AppointmentListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TZL0"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":3,"author":{"gitId":"TZL0"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-10-07"},{"lineNumber":4,"author":{"gitId":"TZL0"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-10-07"},{"lineNumber":5,"author":{"gitId":"TZL0"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-10-07"},{"lineNumber":6,"author":{"gitId":"TZL0"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-10-07"},{"lineNumber":7,"author":{"gitId":"TZL0"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-10-07"},{"lineNumber":8,"author":{"gitId":"TZL0"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2022-10-07"},{"lineNumber":9,"author":{"gitId":"TZL0"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2022-10-07"},{"lineNumber":10,"author":{"gitId":"TZL0"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-10-07"},{"lineNumber":11,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":12,"author":{"gitId":"TZL0"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/18\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"TZL0"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-07"},{"lineNumber":14,"author":{"gitId":"TZL0"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-10-07"},{"lineNumber":15,"author":{"gitId":"TZL0"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"150.0\" /\u003e","lastModifiedDate":"2022-10-07"},{"lineNumber":16,"author":{"gitId":"TZL0"},"content":"         \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"150.0\" /\u003e","lastModifiedDate":"2022-10-07"},{"lineNumber":17,"author":{"gitId":"TZL0"},"content":"         \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"150.0\" /\u003e","lastModifiedDate":"2022-10-07"},{"lineNumber":18,"author":{"gitId":"TZL0"},"content":"         \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"150.0\" /\u003e","lastModifiedDate":"2022-10-07"},{"lineNumber":19,"author":{"gitId":"TZL0"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2022-10-07"},{"lineNumber":20,"author":{"gitId":"TZL0"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"41.0\" prefHeight\u003d\"41.0\" prefWidth\u003d\"150.0\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2022-10-07"},{"lineNumber":21,"author":{"gitId":"TZL0"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2022-10-07"},{"lineNumber":22,"author":{"gitId":"TZL0"},"content":"        \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-10-07"},{"lineNumber":23,"author":{"gitId":"TZL0"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2022-10-07"},{"lineNumber":24,"author":{"gitId":"TZL0"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2022-10-07"},{"lineNumber":25,"author":{"gitId":"TZL0"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2022-10-07"},{"lineNumber":26,"author":{"gitId":"TZL0"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2022-10-07"},{"lineNumber":27,"author":{"gitId":"TZL0"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2022-10-07"},{"lineNumber":28,"author":{"gitId":"TZL0"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2022-10-07"},{"lineNumber":29,"author":{"gitId":"TZL0"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2022-10-07"},{"lineNumber":30,"author":{"gitId":"TZL0"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2022-10-07"},{"lineNumber":31,"author":{"gitId":"TZL0"},"content":"        \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$name\" /\u003e","lastModifiedDate":"2022-10-07"},{"lineNumber":32,"author":{"gitId":"TZL0"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2022-10-07"},{"lineNumber":33,"author":{"gitId":"TZL0"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2022-10-07"},{"lineNumber":34,"author":{"gitId":"TZL0"},"content":"   \u003cLabel fx:id\u003d\"medicalTest\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$medicalTest\" GridPane.columnIndex\u003d\"1\" /\u003e","lastModifiedDate":"2022-10-07"},{"lineNumber":35,"author":{"gitId":"TZL0"},"content":"   \u003cLabel fx:id\u003d\"slot\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$slot\" GridPane.columnIndex\u003d\"2\" /\u003e","lastModifiedDate":"2022-10-07"},{"lineNumber":36,"author":{"gitId":"TZL0"},"content":"   \u003cLabel fx:id\u003d\"doctor\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$doctor\" GridPane.columnIndex\u003d\"3\" /\u003e","lastModifiedDate":"2022-10-07"},{"lineNumber":37,"author":{"gitId":"TZL0"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2022-10-07"},{"lineNumber":38,"author":{"gitId":"TZL0"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2022-10-07"},{"lineNumber":39,"author":{"gitId":"TZL0"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2022-10-07"},{"lineNumber":40,"author":{"gitId":"TZL0"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2022-10-07"},{"lineNumber":41,"author":{"gitId":"TZL0"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2022-10-07"}],"authorContributionMap":{"TZL0":41}},{"path":"src/main/resources/view/AppointmentListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TZL0"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":3,"author":{"gitId":"TZL0"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"TZL0"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"TZL0"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2022-10-07"},{"lineNumber":6,"author":{"gitId":"TZL0"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"TZL0"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"TZL0"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"TZL0"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"TZL0"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-10-07"},{"lineNumber":11,"author":{"gitId":"TZL0"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":13,"author":{"gitId":"TZL0"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/18\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"TZL0"},"content":"   \u003cLabel styleClass\u003d\"section-header-label\" text\u003d\"APPOINTMENTS\" /\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"TZL0"},"content":"\u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"TZL0"},"content":"  \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"TZL0"},"content":"    \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"150.0\" /\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"TZL0"},"content":"    \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"150.0\" /\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"TZL0"},"content":"    \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"150.0\" /\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"TZL0"},"content":"    \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"150.0\" /\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"TZL0"},"content":"  \u003c/columnConstraints\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"TZL0"},"content":"\u003cLabel fx:id\u003d\"name\" minHeight\u003d\"30.0\" styleClass\u003d\"cell_small_label\" text\u003d\"Patient\"\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"TZL0"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"TZL0"},"content":"            \u003cInsets left\u003d\"20.0\" /\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"TZL0"},"content":"         \u003c/padding\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"TZL0"},"content":"         \u003cfont\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"TZL0"},"content":"            \u003cFont size\u003d\"16.0\" /\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"TZL0"},"content":"         \u003c/font\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"TZL0"},"content":"      \u003c/Label\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"TZL0"},"content":"    \u003cLabel fx:id\u003d\"medicalTest\" minHeight\u003d\"30.0\" styleClass\u003d\"cell_small_label\"","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"TZL0"},"content":"           text\u003d\"Medical Test\" GridPane.columnIndex\u003d\"1\"\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"TZL0"},"content":"         \u003cfont\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"TZL0"},"content":"            \u003cFont size\u003d\"16.0\" /\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"TZL0"},"content":"         \u003c/font\u003e\u003c/Label\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"TZL0"},"content":"    \u003cLabel fx:id\u003d\"slot\" minHeight\u003d\"30.0\" styleClass\u003d\"cell_small_label\" text\u003d\"Slot\" GridPane.columnIndex\u003d\"2\"\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"TZL0"},"content":"         \u003cfont\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"TZL0"},"content":"            \u003cFont size\u003d\"16.0\" /\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"TZL0"},"content":"         \u003c/font\u003e\u003c/Label\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"TZL0"},"content":"    \u003cLabel fx:id\u003d\"doctor\" minHeight\u003d\"30.0\" styleClass\u003d\"cell_small_label\" text\u003d\"Doctor\" GridPane.columnIndex\u003d\"3\"\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"TZL0"},"content":"         \u003cfont\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"TZL0"},"content":"            \u003cFont size\u003d\"16.0\" /\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"TZL0"},"content":"         \u003c/font\u003e\u003c/Label\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"TZL0"},"content":"  \u003crowConstraints\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"TZL0"},"content":"    \u003cRowConstraints /\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"TZL0"},"content":"  \u003c/rowConstraints\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"TZL0"},"content":"\u003c/GridPane\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"TZL0"},"content":"  \u003cListView fx:id\u003d\"appointmentListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-10-07"},{"lineNumber":48,"author":{"gitId":"TZL0"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2022-10-07"}],"authorContributionMap":{"TZL0":48}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TZL0"},"content":".appointment-list {","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"TZL0"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"TZL0"},"content":"    -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"TZL0"},"content":"    -fx-border-top-width: 1px;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"TZL0"},"content":"    -fx-min-width: 650px;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"TZL0"},"content":"}","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"TZL0"},"content":".patient-list {","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"TZL0"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"TZL0"},"content":"    -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"TZL0"},"content":"    -fx-border-top-width: 1px;","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"TZL0"},"content":"    -fx-min-width: 350px;","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"TZL0"},"content":"}","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"TZL0"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"TZL0"},"content":"    -fx-text-fill: #000000;","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"TZL0"},"content":".section-header-label {","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"TZL0"},"content":"    -fx-font-size: 15pt;","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"TZL0"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"TZL0"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"TZL0"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"TZL0"},"content":"    -fx-min-height: 25px;","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"TZL0"},"content":"}","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":126,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":128,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":130,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":136,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":139,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":141,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":148,"author":{"gitId":"TZL0"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2022-10-11"},{"lineNumber":149,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":153,"author":{"gitId":"TZL0"},"content":"    -fx-font-size: 15px;","lastModifiedDate":"2022-10-11"},{"lineNumber":154,"author":{"gitId":"TZL0"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2022-10-11"},{"lineNumber":155,"author":{"gitId":"TZL0"},"content":"    -fx-min-width: 60px;","lastModifiedDate":"2022-10-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":168,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":172,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":179,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"TZL0"},"content":".grid-pane .label {","lastModifiedDate":"2022-10-11"},{"lineNumber":207,"author":{"gitId":"TZL0"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-10-11"},{"lineNumber":208,"author":{"gitId":"TZL0"},"content":"    -fx-font-size: 15pt;","lastModifiedDate":"2022-10-11"},{"lineNumber":209,"author":{"gitId":"TZL0"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-10-11"},{"lineNumber":210,"author":{"gitId":"TZL0"},"content":"}","lastModifiedDate":"2022-10-11"},{"lineNumber":211,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":212,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":218,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":226,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":263,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":290,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":296,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":300,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":302,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":306,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":310,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":313,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":315,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":317,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":319,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":320,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":322,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":325,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":327,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":329,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":331,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":333,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":335,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":337,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":339,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":342,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":344,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":345,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":347,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":349,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":352,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":354,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":358,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":360,"author":{"gitId":"TZL0"},"content":"#filterField, #patientListPanel, #patientWebpage, #appointmentListPanel, #appointmentWebpage {","lastModifiedDate":"2022-10-16"},{"lineNumber":361,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":362,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":364,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":366,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":367,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":369,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":370,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":371,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":372,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":374,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":375,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":376,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":377,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":378,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":379,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":380,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":381,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"TZL0":35,"-":346}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":10,"author":{"gitId":"TZL0"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"TZL0"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":15,"author":{"gitId":"TZL0"},"content":"\u003cfx:root minHeight\u003d\"700.0\" minWidth\u003d\"1000.0\" onCloseRequest\u003d\"#handleExit\" title\u003d\"HealthContact\"","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"TZL0"},"content":"         type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/18\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"TZL0"},"content":"            \u003cHBox VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"TZL0"},"content":"               \u003cchildren\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"guokweijie"},"content":"              \u003cVBox fx:id\u003d\"patientList\" styleClass\u003d\"patient-list\" HBox.hgrow\u003d\"SOMETIMES\"\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"TZL0"},"content":"                  \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":42,"author":{"gitId":"TZL0"},"content":"                \u003cStackPane fx:id\u003d\"patientListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"TZL0"},"content":"              \u003c/VBox\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"TZL0"},"content":"                 \u003cVBox fx:id\u003d\"appointmentList\" styleClass\u003d\"appointment-list\" HBox.hgrow\u003d\"SOMETIMES\"\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":46,"author":{"gitId":"TZL0"},"content":"                  \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":48,"author":{"gitId":"TZL0"},"content":"                \u003cStackPane fx:id\u003d\"appointmentListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"TZL0"},"content":"              \u003c/VBox\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"TZL0"},"content":"               \u003c/children\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"TZL0"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":53,"author":{"gitId":"TZL0"},"content":"        \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" maxHeight\u003d\"100\" minHeight\u003d\"100\" prefHeight\u003d\"100\"","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"TZL0"},"content":"                   styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":56,"author":{"gitId":"TZL0"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":60,"author":{"gitId":"TZL0"},"content":"        \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2022-10-07"},{"lineNumber":62,"author":{"gitId":"TZL0"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2022-10-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"guokweijie":1,"TZL0":20,"-":49}},{"path":"src/main/resources/view/PatientListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"TZL0"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"TZL0"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/18\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"TZL0"},"content":"   \u003cLabel styleClass\u003d\"section-header-label\" text\u003d\"PATIENTS\" /\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"TZL0"},"content":"  \u003cListView fx:id\u003d\"patientListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"TZL0":4,"-":6}},{"path":"src/test/java/seedu/address/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core.index;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"TZL0"},"content":"        final Index fifthPatientIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"TZL0"},"content":"        assertTrue(fifthPatientIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2022-10-16"},{"lineNumber":46,"author":{"gitId":"TZL0"},"content":"        assertTrue(fifthPatientIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2022-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"TZL0"},"content":"        assertTrue(fifthPatientIndex.equals(fifthPatientIndex));","lastModifiedDate":"2022-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"TZL0"},"content":"        assertFalse(fifthPatientIndex.equals(null));","lastModifiedDate":"2022-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"TZL0"},"content":"        assertFalse(fifthPatientIndex.equals(5.0f));","lastModifiedDate":"2022-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"TZL0"},"content":"        assertFalse(fifthPatientIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2022-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"TZL0":7,"-":53}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"wadia82"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX;","lastModifiedDate":"2022-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"TZL0"},"content":"import static seedu.address.logic.commands.CommandTestUtil.REMARK_DESC_AMY;","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"TZL0"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_AMY;","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"TZL0"},"content":"import static seedu.address.testutil.TypicalPatients.AMY;","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":22,"author":{"gitId":"guokweijie"},"content":"import seedu.address.logic.commands.AddPatientCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":31,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"TZL0"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"wadia82"},"content":"        String deleteCommand \u003d \"deletepatient 9\";","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"wadia82"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"TZL0"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD.toString();","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"guokweijie"},"content":"        String addCommand \u003d AddPatientCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2022-10-13"},{"lineNumber":85,"author":{"gitId":"TZL0"},"content":"                + ADDRESS_DESC_AMY + REMARK_DESC_AMY;","lastModifiedDate":"2022-10-06"},{"lineNumber":86,"author":{"gitId":"TZL0"},"content":"        Patient expectedPatient \u003d new PatientBuilder(AMY).withRemark(VALID_REMARK_AMY).withTags().build();","lastModifiedDate":"2022-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"TZL0"},"content":"        expectedModel.addPatient(expectedPatient);","lastModifiedDate":"2022-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"TZL0"},"content":"    public void getFilteredPatientList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":95,"author":{"gitId":"TZL0"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPatientList().remove(0));","lastModifiedDate":"2022-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"wadia82":3,"guokweijie":2,"TZL0":11,"-":148}},{"path":"src/test/java/seedu/address/logic/commands/AddPatientCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"TZL0"},"content":"import static seedu.address.testutil.TypicalPatients.getTypicalPatientsAddressBook;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"TZL0"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"guokweijie"},"content":"public class AddPatientCommandIntegrationTest {","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"TZL0"},"content":"        model \u003d new ModelManager(getTypicalPatientsAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"TZL0"},"content":"    public void execute_newPatient_success() {","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"TZL0"},"content":"        Patient validPatient \u003d new PatientBuilder().build();","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"TZL0"},"content":"        expectedModel.addPatient(validPatient);","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"guokweijie"},"content":"        assertCommandSuccess(new AddPatientCommand(validPatient), model,","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"guokweijie"},"content":"                String.format(AddPatientCommand.MESSAGE_SUCCESS, validPatient), expectedModel);","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"TZL0"},"content":"    public void execute_duplicatePatient_throwsCommandException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"TZL0"},"content":"        Patient patientInList \u003d model.getAddressBook().getPatientList().get(0);","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"TZL0"},"content":"        assertCommandFailure(new AddPatientCommand(patientInList), model, AddPatientCommand.MESSAGE_DUPLICATE_PATIENT);","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"guokweijie":3,"TZL0":10,"-":32}},{"path":"src/test/java/seedu/address/logic/commands/AddPatientCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"SpecOps2016"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.Name;","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"TZL0"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"guokweijie"},"content":"public class AddPatientCommandTest {","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"TZL0"},"content":"    public void constructor_nullPatient_throwsNullPointerException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"guokweijie"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddPatientCommand(null));","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"TZL0"},"content":"    public void execute_patientAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"TZL0"},"content":"        ModelStubAcceptingPatientAdded modelStub \u003d new ModelStubAcceptingPatientAdded();","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"TZL0"},"content":"        Patient validPatient \u003d new PatientBuilder().build();","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"guokweijie"},"content":"        CommandResult commandResult \u003d new AddPatientCommand(validPatient).execute(modelStub);","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"guokweijie"},"content":"        assertEquals(String.format(AddPatientCommand.MESSAGE_SUCCESS, validPatient), commandResult.getFeedbackToUser());","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"TZL0"},"content":"        assertEquals(Arrays.asList(validPatient), modelStub.patientsAdded);","lastModifiedDate":"2022-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"TZL0"},"content":"    public void execute_duplicatePatient_throwsCommandException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":49,"author":{"gitId":"TZL0"},"content":"        Patient validPatient \u003d new PatientBuilder().build();","lastModifiedDate":"2022-10-16"},{"lineNumber":50,"author":{"gitId":"guokweijie"},"content":"        AddPatientCommand addPatientCommand \u003d new AddPatientCommand(validPatient);","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"TZL0"},"content":"        ModelStub modelStub \u003d new ModelStubWithPatient(validPatient);","lastModifiedDate":"2022-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"TZL0"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2022-10-06"},{"lineNumber":54,"author":{"gitId":"TZL0"},"content":"                AddPatientCommand.MESSAGE_DUPLICATE_PATIENT, () -\u003e addPatientCommand.execute(modelStub));","lastModifiedDate":"2022-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"TZL0"},"content":"        Patient alice \u003d new PatientBuilder().withName(\"Alice\").build();","lastModifiedDate":"2022-10-16"},{"lineNumber":60,"author":{"gitId":"TZL0"},"content":"        Patient bob \u003d new PatientBuilder().withName(\"Bob\").build();","lastModifiedDate":"2022-10-16"},{"lineNumber":61,"author":{"gitId":"guokweijie"},"content":"        AddPatientCommand addAliceCommand \u003d new AddPatientCommand(alice);","lastModifiedDate":"2022-10-13"},{"lineNumber":62,"author":{"gitId":"guokweijie"},"content":"        AddPatientCommand addBobCommand \u003d new AddPatientCommand(bob);","lastModifiedDate":"2022-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"guokweijie"},"content":"        AddPatientCommand addAliceCommandCopy \u003d new AddPatientCommand(alice);","lastModifiedDate":"2022-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"TZL0"},"content":"        // different patient -\u003e returns false","lastModifiedDate":"2022-10-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":116,"author":{"gitId":"TZL0"},"content":"        public void addPatient(Patient patient) {","lastModifiedDate":"2022-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":120,"author":{"gitId":"TZL0"},"content":"        @Override","lastModifiedDate":"2022-10-17"},{"lineNumber":121,"author":{"gitId":"TZL0"},"content":"        public void selectPatient(Patient patient) {","lastModifiedDate":"2022-10-17"},{"lineNumber":122,"author":{"gitId":"TZL0"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-17"},{"lineNumber":123,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":124,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":136,"author":{"gitId":"TZL0"},"content":"        public boolean hasPatient(Patient patient) {","lastModifiedDate":"2022-10-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"TZL0"},"content":"        @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":141,"author":{"gitId":"TZL0"},"content":"        public boolean hasPatient(Name name) {","lastModifiedDate":"2022-10-16"},{"lineNumber":142,"author":{"gitId":"TZL0"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-07"},{"lineNumber":143,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":144,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"TZL0"},"content":"        public void deletePatient(Patient target) {","lastModifiedDate":"2022-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"TZL0"},"content":"        public void setPatient(Patient target, Patient editedPatient) {","lastModifiedDate":"2022-10-16"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"guokweijie"},"content":"        public ObservableList\u003cPatient\u003e getFilteredPatientList() {","lastModifiedDate":"2022-10-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":161,"author":{"gitId":"TZL0"},"content":"        public void updateFilteredPatientList(Predicate\u003cPatient\u003e predicate) {","lastModifiedDate":"2022-10-16"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":164,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":165,"author":{"gitId":"TZL0"},"content":"        @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":166,"author":{"gitId":"TZL0"},"content":"        public boolean hasAppointment(Appointment appointment) {","lastModifiedDate":"2022-10-06"},{"lineNumber":167,"author":{"gitId":"TZL0"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-06"},{"lineNumber":168,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":169,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":170,"author":{"gitId":"TZL0"},"content":"        @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":171,"author":{"gitId":"TZL0"},"content":"        public void deleteAppointment(Appointment target) {","lastModifiedDate":"2022-10-06"},{"lineNumber":172,"author":{"gitId":"TZL0"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-06"},{"lineNumber":173,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":174,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":175,"author":{"gitId":"TZL0"},"content":"        @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":176,"author":{"gitId":"TZL0"},"content":"        public void addAppointment(Appointment appointment) {","lastModifiedDate":"2022-10-06"},{"lineNumber":177,"author":{"gitId":"TZL0"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-06"},{"lineNumber":178,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":179,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":180,"author":{"gitId":"TZL0"},"content":"        @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":181,"author":{"gitId":"TZL0"},"content":"        public void setAppointment(Appointment target, Appointment editedAppointment) {","lastModifiedDate":"2022-10-06"},{"lineNumber":182,"author":{"gitId":"TZL0"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-06"},{"lineNumber":183,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":184,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":185,"author":{"gitId":"TZL0"},"content":"        @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":186,"author":{"gitId":"wadia82"},"content":"        public ObservableList\u003cAppointment\u003e getFilteredAppointmentList() {","lastModifiedDate":"2022-10-11"},{"lineNumber":187,"author":{"gitId":"TZL0"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-06"},{"lineNumber":188,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":189,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":190,"author":{"gitId":"TZL0"},"content":"        @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":191,"author":{"gitId":"TZL0"},"content":"        public void updateFilteredAppointmentList(Predicate\u003cAppointment\u003e predicate) {","lastModifiedDate":"2022-10-06"},{"lineNumber":192,"author":{"gitId":"TZL0"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-06"},{"lineNumber":193,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":194,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":195,"author":{"gitId":"SpecOps2016"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":196,"author":{"gitId":"guokweijie"},"content":"        public void sort(Comparator\u003cPatient\u003e comparator) {","lastModifiedDate":"2022-10-13"},{"lineNumber":197,"author":{"gitId":"SpecOps2016"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":198,"author":{"gitId":"SpecOps2016"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":199,"author":{"gitId":"wadia82"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":200,"author":{"gitId":"wadia82"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":201,"author":{"gitId":"guokweijie"},"content":"        public void deleteRelativeAppointments(Patient patient) {","lastModifiedDate":"2022-10-13"},{"lineNumber":202,"author":{"gitId":"TZL0"},"content":"            //TODO","lastModifiedDate":"2022-10-12"},{"lineNumber":203,"author":{"gitId":"wadia82"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":207,"author":{"gitId":"TZL0"},"content":"     * A Model stub that contains a single patient.","lastModifiedDate":"2022-10-16"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":209,"author":{"gitId":"TZL0"},"content":"    private class ModelStubWithPatient extends ModelStub {","lastModifiedDate":"2022-10-16"},{"lineNumber":210,"author":{"gitId":"guokweijie"},"content":"        private final Patient patient;","lastModifiedDate":"2022-10-13"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":212,"author":{"gitId":"TZL0"},"content":"        ModelStubWithPatient(Patient patient) {","lastModifiedDate":"2022-10-16"},{"lineNumber":213,"author":{"gitId":"guokweijie"},"content":"            requireNonNull(patient);","lastModifiedDate":"2022-10-13"},{"lineNumber":214,"author":{"gitId":"guokweijie"},"content":"            this.patient \u003d patient;","lastModifiedDate":"2022-10-13"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":218,"author":{"gitId":"TZL0"},"content":"        public boolean hasPatient(Patient patient) {","lastModifiedDate":"2022-10-16"},{"lineNumber":219,"author":{"gitId":"guokweijie"},"content":"            requireNonNull(patient);","lastModifiedDate":"2022-10-13"},{"lineNumber":220,"author":{"gitId":"TZL0"},"content":"            return this.patient.isSamePatient(patient);","lastModifiedDate":"2022-10-16"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":225,"author":{"gitId":"TZL0"},"content":"     * A Model stub that always accept the patient being added.","lastModifiedDate":"2022-10-16"},{"lineNumber":226,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":227,"author":{"gitId":"TZL0"},"content":"    private class ModelStubAcceptingPatientAdded extends ModelStub {","lastModifiedDate":"2022-10-16"},{"lineNumber":228,"author":{"gitId":"TZL0"},"content":"        final ArrayList\u003cPatient\u003e patientsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-16"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":231,"author":{"gitId":"TZL0"},"content":"        public boolean hasPatient(Patient patient) {","lastModifiedDate":"2022-10-16"},{"lineNumber":232,"author":{"gitId":"guokweijie"},"content":"            requireNonNull(patient);","lastModifiedDate":"2022-10-13"},{"lineNumber":233,"author":{"gitId":"TZL0"},"content":"            return patientsAdded.stream().anyMatch(patient::isSamePatient);","lastModifiedDate":"2022-10-16"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":237,"author":{"gitId":"TZL0"},"content":"        public void addPatient(Patient patient) {","lastModifiedDate":"2022-10-16"},{"lineNumber":238,"author":{"gitId":"guokweijie"},"content":"            requireNonNull(patient);","lastModifiedDate":"2022-10-13"},{"lineNumber":239,"author":{"gitId":"TZL0"},"content":"            patientsAdded.add(patient);","lastModifiedDate":"2022-10-16"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":244,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"wadia82":4,"guokweijie":17,"SpecOps2016":5,"TZL0":74,"-":148}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"TZL0"},"content":"import static seedu.address.testutil.TypicalPatients.getTypicalPatientsAddressBook;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"TZL0"},"content":"        Model model \u003d new ModelManager(getTypicalPatientsAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"TZL0"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalPatientsAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"TZL0":3,"-":29}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"TZL0"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DOCTOR;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"TZL0"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEDICAL_TEST;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"TZL0"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"TZL0"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SLOT;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"wadia82"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"wadia82"},"content":"import seedu.address.model.appointment.NameContainsKeywordsPredicateAppointment;","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"wadia82"},"content":"import seedu.address.model.patient.NameContainsKeywordsPredicatePatient;","lastModifiedDate":"2022-10-17"},{"lineNumber":27,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"TZL0"},"content":"import seedu.address.testutil.EditPatientDescriptorBuilder;","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String VALID_REMARK_AMY \u003d \"Like skiing.\";","lastModifiedDate":"2022-09-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String VALID_REMARK_BOB \u003d \"Favourite pastime: Eating\";","lastModifiedDate":"2022-09-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"TZL0"},"content":"    public static final String VALID_DOCTOR_CAITIE \u003d \"Kaitlyn Dorsey Caitie\";","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"TZL0"},"content":"    public static final String VALID_DOCTOR_DECKER \u003d \"Amy Decker\";","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"TZL0"},"content":"    public static final String VALID_MEDICAL_TEST_7 \u003d \"glucose tolerance test\";","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"TZL0"},"content":"    public static final String VALID_MEDICAL_TEST_8 \u003d \"cephalin-cholesterol flocculation\";","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"TZL0"},"content":"    public static final String VALID_SLOT_7 \u003d \"2024-03-19 15:45\";","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"TZL0"},"content":"    public static final String VALID_SLOT_8 \u003d \"2023-05-10 09:15\";","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"TZL0"},"content":"    public static final String REMARK_DESC_BOB \u003d \" \" + PREFIX_REMARK + VALID_REMARK_BOB;","lastModifiedDate":"2022-10-06"},{"lineNumber":67,"author":{"gitId":"TZL0"},"content":"    public static final String REMARK_DESC_AMY \u003d \" \" + PREFIX_REMARK + VALID_REMARK_AMY;","lastModifiedDate":"2022-10-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"TZL0"},"content":"    public static final String DOCTOR_DESC_7 \u003d \" \" + PREFIX_DOCTOR + VALID_DOCTOR_CAITIE;","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"TZL0"},"content":"    public static final String DOCTOR_DESC_8 \u003d \" \" + PREFIX_DOCTOR + VALID_DOCTOR_DECKER;","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"TZL0"},"content":"    public static final String MEDICAL_TEST_DESC_7 \u003d \" \" + PREFIX_MEDICAL_TEST + VALID_MEDICAL_TEST_7;","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"TZL0"},"content":"    public static final String MEDICAL_TEST_DESC_8 \u003d \" \" + PREFIX_MEDICAL_TEST + VALID_MEDICAL_TEST_8;","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"TZL0"},"content":"    public static final String SLOT_DESC_7 \u003d \" \" + PREFIX_SLOT + VALID_SLOT_7;","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"TZL0"},"content":"    public static final String SLOT_DESC_8 \u003d \" \" + PREFIX_SLOT + VALID_SLOT_8;","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":82,"author":{"gitId":"TZL0"},"content":"    public static final String INVALID_DOCTOR_DESC \u003d \" \" + PREFIX_DOCTOR + \"John!\";","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"TZL0"},"content":"    public static final String INVALID_MEDICAL_TEST_DESC \u003d \" \" + PREFIX_MEDICAL_TEST;","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"Fuzanwenn"},"content":"    public static final String INVALID_SLOT_DESC \u003d \" \" + PREFIX_SLOT + \"2023-1-1 9:00\";","lastModifiedDate":"2022-10-11"},{"lineNumber":85,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":89,"author":{"gitId":"TZL0"},"content":"    public static final EditPatientCommand.EditPatientDescriptor DESC_AMY;","lastModifiedDate":"2022-10-16"},{"lineNumber":90,"author":{"gitId":"TZL0"},"content":"    public static final EditPatientCommand.EditPatientDescriptor DESC_BOB;","lastModifiedDate":"2022-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":92,"author":{"gitId":"TZL0"},"content":"    public static final EditAppointmentCommand.EditAppointmentDescriptor DESC_APPOINTMENT_7;","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"TZL0"},"content":"    public static final EditAppointmentCommand.EditAppointmentDescriptor DESC_APPOINTMENT_8;","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":97,"author":{"gitId":"TZL0"},"content":"        DESC_AMY \u003d new EditPatientDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2022-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":100,"author":{"gitId":"TZL0"},"content":"        DESC_BOB \u003d new EditPatientDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2022-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":103,"author":{"gitId":"TZL0"},"content":"        //TODO","lastModifiedDate":"2022-10-10"},{"lineNumber":104,"author":{"gitId":"TZL0"},"content":"        DESC_APPOINTMENT_7 \u003d null;","lastModifiedDate":"2022-10-10"},{"lineNumber":105,"author":{"gitId":"TZL0"},"content":"        DESC_APPOINTMENT_8 \u003d null;","lastModifiedDate":"2022-10-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":138,"author":{"gitId":"TZL0"},"content":"     * - the address book, filtered patient list and selected patient in {@code actualModel} remain unchanged","lastModifiedDate":"2022-10-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":144,"author":{"gitId":"guokweijie"},"content":"        List\u003cPatient\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPatientList());","lastModifiedDate":"2022-10-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":148,"author":{"gitId":"wadia82"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPatientList());","lastModifiedDate":"2022-10-10"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":151,"author":{"gitId":"TZL0"},"content":"     * Updates {@code model}\u0027s filtered list to show only the patient at the given {@code targetIndex} in the","lastModifiedDate":"2022-10-16"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":154,"author":{"gitId":"TZL0"},"content":"    public static void showPatientAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2022-10-16"},{"lineNumber":155,"author":{"gitId":"wadia82"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPatientList().size());","lastModifiedDate":"2022-10-10"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":157,"author":{"gitId":"guokweijie"},"content":"        Patient patient \u003d model.getFilteredPatientList().get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-13"},{"lineNumber":158,"author":{"gitId":"guokweijie"},"content":"        final String[] splitName \u003d patient.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2022-10-13"},{"lineNumber":159,"author":{"gitId":"wadia82"},"content":"        model.updateFilteredPatientList(new NameContainsKeywordsPredicatePatient(Arrays.asList(splitName[0])));","lastModifiedDate":"2022-10-17"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":161,"author":{"gitId":"wadia82"},"content":"        assertEquals(1, model.getFilteredPatientList().size());","lastModifiedDate":"2022-10-10"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"wadia82"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":165,"author":{"gitId":"wadia82"},"content":"     * Updates {@code model}\u0027s filtered list to show only the appointment at the given {@code targetIndex} in the","lastModifiedDate":"2022-10-16"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2022-10-16"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":168,"author":{"gitId":"wadia82"},"content":"    public static void showAppointmentAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2022-10-16"},{"lineNumber":169,"author":{"gitId":"wadia82"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredAppointmentList().size());","lastModifiedDate":"2022-10-16"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":171,"author":{"gitId":"wadia82"},"content":"        Appointment appointment \u003d model.getFilteredAppointmentList().get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-16"},{"lineNumber":172,"author":{"gitId":"wadia82"},"content":"        final String[] splitName \u003d appointment.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2022-10-16"},{"lineNumber":173,"author":{"gitId":"wadia82"},"content":"        model.updateFilteredAppointmentList(new NameContainsKeywordsPredicateAppointment(Arrays.asList(splitName[0])));","lastModifiedDate":"2022-10-16"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":175,"author":{"gitId":"wadia82"},"content":"        assertEquals(1, model.getFilteredAppointmentList().size());","lastModifiedDate":"2022-10-16"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":178,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"wadia82":15,"guokweijie":3,"Fuzanwenn":1,"TZL0":38,"-":121}},{"path":"src/test/java/seedu/address/logic/commands/CommandWordTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TZL0"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"TZL0"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"TZL0"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"TZL0"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"TZL0"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"TZL0"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"TZL0"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"TZL0"},"content":"public class CommandWordTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"TZL0"},"content":"    private static final String MAIN_COMMAND_WORD_1 \u003d \"AAA\";","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"TZL0"},"content":"    private static final String MAIN_COMMAND_WORD_2 \u003d \"AAa\";","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"TZL0"},"content":"    private static final String MAIN_COMMAND_WORD_3 \u003d \"Aaa\";","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"TZL0"},"content":"    private static final String ALTERNATIVE_COMMAND_WORD_1 \u003d \"BBB\";","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"TZL0"},"content":"    private static final String ALTERNATIVE_COMMAND_WORD_2 \u003d \"BBb\";","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"TZL0"},"content":"    private static final String ALTERNATIVE_COMMAND_WORD_3 \u003d \"Bbb\";","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"TZL0"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"TZL0"},"content":"    public void test() {","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"TZL0"},"content":"        assertThrows(NullPointerException.class, () -\u003e new CommandWord(null));","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"TZL0"},"content":"        //toString() returns mainCommandWord","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"TZL0"},"content":"        assertEquals(new CommandWord(MAIN_COMMAND_WORD_1).toString(), MAIN_COMMAND_WORD_1);","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"TZL0"},"content":"        assertNotEquals(new CommandWord(MAIN_COMMAND_WORD_2).toString(), MAIN_COMMAND_WORD_3);","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"TZL0"},"content":"        assertEquals(new CommandWord(MAIN_COMMAND_WORD_1, ALTERNATIVE_COMMAND_WORD_1).toString(), MAIN_COMMAND_WORD_1);","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"TZL0"},"content":"        assertEquals(new CommandWord(MAIN_COMMAND_WORD_1, ALTERNATIVE_COMMAND_WORD_1, ALTERNATIVE_COMMAND_WORD_2)","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"TZL0"},"content":"                .toString(), MAIN_COMMAND_WORD_1);","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"TZL0"},"content":"        assertNotEquals(new CommandWord(MAIN_COMMAND_WORD_3, ALTERNATIVE_COMMAND_WORD_1, ALTERNATIVE_COMMAND_WORD_2)","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"TZL0"},"content":"                .toString(), MAIN_COMMAND_WORD_2);","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"TZL0"},"content":"        // Matches input","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"TZL0"},"content":"        assertTrue(new CommandWord(MAIN_COMMAND_WORD_3, ALTERNATIVE_COMMAND_WORD_1, ALTERNATIVE_COMMAND_WORD_2)","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"TZL0"},"content":"                .matches(MAIN_COMMAND_WORD_3));","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"TZL0"},"content":"        assertTrue(new CommandWord(MAIN_COMMAND_WORD_3, ALTERNATIVE_COMMAND_WORD_1, ALTERNATIVE_COMMAND_WORD_2)","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"TZL0"},"content":"                .matches(ALTERNATIVE_COMMAND_WORD_1));","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"TZL0"},"content":"        assertTrue(new CommandWord(MAIN_COMMAND_WORD_3, ALTERNATIVE_COMMAND_WORD_1, ALTERNATIVE_COMMAND_WORD_2)","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"TZL0"},"content":"                .matches(ALTERNATIVE_COMMAND_WORD_2));","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"TZL0"},"content":"        // Does not match input","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"TZL0"},"content":"        assertFalse(new CommandWord(MAIN_COMMAND_WORD_3, ALTERNATIVE_COMMAND_WORD_1, ALTERNATIVE_COMMAND_WORD_2)","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"TZL0"},"content":"                .matches(MAIN_COMMAND_WORD_1));","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"TZL0"},"content":"        assertFalse(new CommandWord(MAIN_COMMAND_WORD_3, ALTERNATIVE_COMMAND_WORD_1, ALTERNATIVE_COMMAND_WORD_2)","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"TZL0"},"content":"                .matches(ALTERNATIVE_COMMAND_WORD_3));","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"TZL0"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"TZL0":46}},{"path":"src/test/java/seedu/address/logic/commands/DeleteAppointmentCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wadia82"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"wadia82"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"wadia82"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"wadia82"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"wadia82"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"wadia82"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"wadia82"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showAppointmentAtIndex;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"wadia82"},"content":"import static seedu.address.testutil.TypicalAppointments.getTypicalAppointmentsAddressBook;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"wadia82"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_APPOINTMENT;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"wadia82"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_APPOINTMENT;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"wadia82"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"wadia82"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"wadia82"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"wadia82"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"wadia82"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"wadia82"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"wadia82"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"wadia82"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"wadia82"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"wadia82"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"wadia82"},"content":"/**","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"wadia82"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"wadia82"},"content":" * {@code DeletePatientCommand}.","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"wadia82"},"content":" */","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"wadia82"},"content":"public class DeleteAppointmentCommandTest {","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"wadia82"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"wadia82"},"content":"    private Model model \u003d new ModelManager(getTypicalAppointmentsAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"wadia82"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"wadia82"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"wadia82"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"wadia82"},"content":"        Appointment appointmentToDelete \u003d model.getFilteredAppointmentList()","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"wadia82"},"content":"                .get(INDEX_FIRST_APPOINTMENT.getZeroBased());","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"wadia82"},"content":"        DeleteAppointmentCommand deleteAppointmentCommand \u003d new DeleteAppointmentCommand(INDEX_FIRST_APPOINTMENT);","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"wadia82"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"wadia82"},"content":"        String expectedMessage \u003d String.format(DeleteAppointmentCommand","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"wadia82"},"content":"                .MESSAGE_DELETE_APPOINTMENT_SUCCESS, appointmentToDelete);","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"wadia82"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"wadia82"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"wadia82"},"content":"        expectedModel.deleteAppointment(appointmentToDelete);","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"wadia82"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"wadia82"},"content":"        assertCommandSuccess(deleteAppointmentCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"wadia82"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"wadia82"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"wadia82"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":45,"author":{"gitId":"wadia82"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":46,"author":{"gitId":"wadia82"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredAppointmentList().size() + 1);","lastModifiedDate":"2022-10-16"},{"lineNumber":47,"author":{"gitId":"wadia82"},"content":"        DeleteAppointmentCommand deleteAppointmentCommand \u003d new DeleteAppointmentCommand(outOfBoundIndex);","lastModifiedDate":"2022-10-16"},{"lineNumber":48,"author":{"gitId":"wadia82"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":49,"author":{"gitId":"wadia82"},"content":"        assertCommandFailure(deleteAppointmentCommand, model, Messages.MESSAGE_INVALID_APPOINTMENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-16"},{"lineNumber":50,"author":{"gitId":"wadia82"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":51,"author":{"gitId":"wadia82"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":52,"author":{"gitId":"wadia82"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":53,"author":{"gitId":"wadia82"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2022-10-16"},{"lineNumber":54,"author":{"gitId":"wadia82"},"content":"        showAppointmentAtIndex(model, INDEX_FIRST_APPOINTMENT);","lastModifiedDate":"2022-10-16"},{"lineNumber":55,"author":{"gitId":"wadia82"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":56,"author":{"gitId":"wadia82"},"content":"        Appointment appointmentToDelete \u003d model.getFilteredAppointmentList()","lastModifiedDate":"2022-10-16"},{"lineNumber":57,"author":{"gitId":"wadia82"},"content":"                .get(INDEX_FIRST_APPOINTMENT.getZeroBased());","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"wadia82"},"content":"        DeleteAppointmentCommand deleteAppointmentCommand \u003d new DeleteAppointmentCommand(INDEX_FIRST_APPOINTMENT);","lastModifiedDate":"2022-10-16"},{"lineNumber":59,"author":{"gitId":"wadia82"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":60,"author":{"gitId":"wadia82"},"content":"        String expectedMessage \u003d String.format(DeleteAppointmentCommand","lastModifiedDate":"2022-10-16"},{"lineNumber":61,"author":{"gitId":"wadia82"},"content":"                .MESSAGE_DELETE_APPOINTMENT_SUCCESS, appointmentToDelete);","lastModifiedDate":"2022-10-16"},{"lineNumber":62,"author":{"gitId":"wadia82"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":63,"author":{"gitId":"wadia82"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-16"},{"lineNumber":64,"author":{"gitId":"wadia82"},"content":"        expectedModel.deleteAppointment(appointmentToDelete);","lastModifiedDate":"2022-10-16"},{"lineNumber":65,"author":{"gitId":"wadia82"},"content":"        showNoAppointment(expectedModel);","lastModifiedDate":"2022-10-16"},{"lineNumber":66,"author":{"gitId":"wadia82"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":67,"author":{"gitId":"wadia82"},"content":"        assertCommandSuccess(deleteAppointmentCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-16"},{"lineNumber":68,"author":{"gitId":"wadia82"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":69,"author":{"gitId":"wadia82"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":70,"author":{"gitId":"wadia82"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":71,"author":{"gitId":"wadia82"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":72,"author":{"gitId":"wadia82"},"content":"        showAppointmentAtIndex(model, INDEX_FIRST_APPOINTMENT);","lastModifiedDate":"2022-10-16"},{"lineNumber":73,"author":{"gitId":"wadia82"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":74,"author":{"gitId":"wadia82"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_APPOINTMENT;","lastModifiedDate":"2022-10-16"},{"lineNumber":75,"author":{"gitId":"wadia82"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2022-10-16"},{"lineNumber":76,"author":{"gitId":"wadia82"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getAppointmentList().size());","lastModifiedDate":"2022-10-16"},{"lineNumber":77,"author":{"gitId":"wadia82"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":78,"author":{"gitId":"wadia82"},"content":"        DeleteAppointmentCommand deleteAppointmentCommand \u003d new DeleteAppointmentCommand(outOfBoundIndex);","lastModifiedDate":"2022-10-16"},{"lineNumber":79,"author":{"gitId":"wadia82"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":80,"author":{"gitId":"wadia82"},"content":"        assertCommandFailure(deleteAppointmentCommand, model, Messages.MESSAGE_INVALID_APPOINTMENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-16"},{"lineNumber":81,"author":{"gitId":"wadia82"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":82,"author":{"gitId":"wadia82"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":83,"author":{"gitId":"wadia82"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":84,"author":{"gitId":"wadia82"},"content":"    public void equals() {","lastModifiedDate":"2022-10-16"},{"lineNumber":85,"author":{"gitId":"wadia82"},"content":"        DeleteAppointmentCommand deleteFirstCommand \u003d new DeleteAppointmentCommand(INDEX_FIRST_APPOINTMENT);","lastModifiedDate":"2022-10-16"},{"lineNumber":86,"author":{"gitId":"wadia82"},"content":"        DeleteAppointmentCommand deleteSecondCommand \u003d new DeleteAppointmentCommand(INDEX_SECOND_APPOINTMENT);","lastModifiedDate":"2022-10-16"},{"lineNumber":87,"author":{"gitId":"wadia82"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":88,"author":{"gitId":"wadia82"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-16"},{"lineNumber":89,"author":{"gitId":"wadia82"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2022-10-16"},{"lineNumber":90,"author":{"gitId":"wadia82"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":91,"author":{"gitId":"wadia82"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-16"},{"lineNumber":92,"author":{"gitId":"wadia82"},"content":"        DeleteAppointmentCommand deleteFirstCommandCopy \u003d new DeleteAppointmentCommand(INDEX_FIRST_APPOINTMENT);","lastModifiedDate":"2022-10-16"},{"lineNumber":93,"author":{"gitId":"wadia82"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2022-10-16"},{"lineNumber":94,"author":{"gitId":"wadia82"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":95,"author":{"gitId":"wadia82"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-16"},{"lineNumber":96,"author":{"gitId":"wadia82"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2022-10-16"},{"lineNumber":97,"author":{"gitId":"wadia82"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":98,"author":{"gitId":"wadia82"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-16"},{"lineNumber":99,"author":{"gitId":"wadia82"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2022-10-16"},{"lineNumber":100,"author":{"gitId":"wadia82"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":101,"author":{"gitId":"wadia82"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-10-16"},{"lineNumber":102,"author":{"gitId":"wadia82"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2022-10-16"},{"lineNumber":103,"author":{"gitId":"wadia82"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":104,"author":{"gitId":"wadia82"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":105,"author":{"gitId":"wadia82"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":106,"author":{"gitId":"wadia82"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2022-10-16"},{"lineNumber":107,"author":{"gitId":"wadia82"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":108,"author":{"gitId":"wadia82"},"content":"    private void showNoAppointment(Model model) {","lastModifiedDate":"2022-10-16"},{"lineNumber":109,"author":{"gitId":"wadia82"},"content":"        model.updateFilteredAppointmentList(p -\u003e false);","lastModifiedDate":"2022-10-16"},{"lineNumber":110,"author":{"gitId":"wadia82"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":111,"author":{"gitId":"wadia82"},"content":"        assertTrue(model.getFilteredAppointmentList().isEmpty());","lastModifiedDate":"2022-10-16"},{"lineNumber":112,"author":{"gitId":"wadia82"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":113,"author":{"gitId":"wadia82"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"wadia82":113}},{"path":"src/test/java/seedu/address/logic/commands/DeletePatientCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"TZL0"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPatientAtIndex;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"TZL0"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PATIENT;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"TZL0"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PATIENT;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"TZL0"},"content":"import static seedu.address.testutil.TypicalPatients.getTypicalPatientsAddressBook;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":23,"author":{"gitId":"wadia82"},"content":" * {@code DeletePatientCommand}.","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"wadia82"},"content":"public class DeletePatientCommandTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"TZL0"},"content":"    private Model model \u003d new ModelManager(getTypicalPatientsAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"TZL0"},"content":"        Patient patientToDelete \u003d model.getFilteredPatientList().get(INDEX_FIRST_PATIENT.getZeroBased());","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"TZL0"},"content":"        DeletePatientCommand deletePatientCommand \u003d new DeletePatientCommand(INDEX_FIRST_PATIENT);","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"guokweijie"},"content":"        String expectedMessage \u003d String.format(DeletePatientCommand.MESSAGE_DELETE_PATIENT_SUCCESS, patientToDelete);","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"TZL0"},"content":"        expectedModel.deletePatient(patientToDelete);","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"wadia82"},"content":"        assertCommandSuccess(deletePatientCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"wadia82"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPatientList().size() + 1);","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"wadia82"},"content":"        DeletePatientCommand deletePatientCommand \u003d new DeletePatientCommand(outOfBoundIndex);","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"wadia82"},"content":"        assertCommandFailure(deletePatientCommand, model, Messages.MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"TZL0"},"content":"        showPatientAtIndex(model, INDEX_FIRST_PATIENT);","lastModifiedDate":"2022-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"TZL0"},"content":"        Patient patientToDelete \u003d model.getFilteredPatientList().get(INDEX_FIRST_PATIENT.getZeroBased());","lastModifiedDate":"2022-10-16"},{"lineNumber":55,"author":{"gitId":"TZL0"},"content":"        DeletePatientCommand deletePatientCommand \u003d new DeletePatientCommand(INDEX_FIRST_PATIENT);","lastModifiedDate":"2022-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"guokweijie"},"content":"        String expectedMessage \u003d String.format(DeletePatientCommand.MESSAGE_DELETE_PATIENT_SUCCESS, patientToDelete);","lastModifiedDate":"2022-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"TZL0"},"content":"        expectedModel.deletePatient(patientToDelete);","lastModifiedDate":"2022-10-16"},{"lineNumber":61,"author":{"gitId":"TZL0"},"content":"        showNoPatient(expectedModel);","lastModifiedDate":"2022-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"wadia82"},"content":"        assertCommandSuccess(deletePatientCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"TZL0"},"content":"        showPatientAtIndex(model, INDEX_FIRST_PATIENT);","lastModifiedDate":"2022-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"TZL0"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PATIENT;","lastModifiedDate":"2022-10-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"TZL0"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPatientList().size());","lastModifiedDate":"2022-10-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"wadia82"},"content":"        DeletePatientCommand deletePatientCommand \u003d new DeletePatientCommand(outOfBoundIndex);","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"wadia82"},"content":"        assertCommandFailure(deletePatientCommand, model, Messages.MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"TZL0"},"content":"        DeletePatientCommand deleteFirstCommand \u003d new DeletePatientCommand(INDEX_FIRST_PATIENT);","lastModifiedDate":"2022-10-16"},{"lineNumber":82,"author":{"gitId":"TZL0"},"content":"        DeletePatientCommand deleteSecondCommand \u003d new DeletePatientCommand(INDEX_SECOND_PATIENT);","lastModifiedDate":"2022-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"TZL0"},"content":"        DeletePatientCommand deleteFirstCommandCopy \u003d new DeletePatientCommand(INDEX_FIRST_PATIENT);","lastModifiedDate":"2022-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"TZL0"},"content":"        // different patient -\u003e returns false","lastModifiedDate":"2022-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"TZL0"},"content":"    private void showNoPatient(Model model) {","lastModifiedDate":"2022-10-16"},{"lineNumber":105,"author":{"gitId":"TZL0"},"content":"        model.updateFilteredPatientList(p -\u003e false);","lastModifiedDate":"2022-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"wadia82"},"content":"        assertTrue(model.getFilteredPatientList().isEmpty());","lastModifiedDate":"2022-10-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"wadia82":10,"guokweijie":2,"TZL0":23,"-":74}},{"path":"src/test/java/seedu/address/logic/commands/EditPatientCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"TZL0"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPatientAtIndex;","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"TZL0"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PATIENT;","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"TZL0"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PATIENT;","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"TZL0"},"content":"import static seedu.address.testutil.TypicalPatients.getTypicalPatientsAddressBook;","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"TZL0"},"content":"import seedu.address.logic.commands.EditPatientCommand.EditPatientDescriptor;","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"TZL0"},"content":"import seedu.address.testutil.EditPatientDescriptorBuilder;","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"TZL0"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"guokweijie"},"content":"public class EditPatientCommandTest {","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"TZL0"},"content":"    private Model model \u003d new ModelManager(getTypicalPatientsAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":39,"author":{"gitId":"TZL0"},"content":"        Patient editedPatient \u003d new PatientBuilder().build();","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"TZL0"},"content":"        EditPatientDescriptor descriptor \u003d new EditPatientDescriptorBuilder(editedPatient).build();","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"TZL0"},"content":"        EditPatientCommand editPatientCommand \u003d new EditPatientCommand(INDEX_FIRST_PATIENT, descriptor);","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"TZL0"},"content":"        String expectedMessage \u003d String.format(EditPatientCommand.MESSAGE_EDIT_PATIENT_SUCCESS, editedPatient);","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"TZL0"},"content":"        expectedModel.setPatient(model.getFilteredPatientList().get(0), editedPatient);","lastModifiedDate":"2022-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"TZL0"},"content":"        assertCommandSuccess(editPatientCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"TZL0"},"content":"        Index indexLastPatient \u003d Index.fromOneBased(model.getFilteredPatientList().size());","lastModifiedDate":"2022-10-16"},{"lineNumber":54,"author":{"gitId":"TZL0"},"content":"        Patient lastPatient \u003d model.getFilteredPatientList().get(indexLastPatient.getZeroBased());","lastModifiedDate":"2022-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":56,"author":{"gitId":"TZL0"},"content":"        PatientBuilder patientInList \u003d new PatientBuilder(lastPatient);","lastModifiedDate":"2022-10-16"},{"lineNumber":57,"author":{"gitId":"TZL0"},"content":"        Patient editedPatient \u003d patientInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"TZL0"},"content":"        EditPatientDescriptor descriptor \u003d new EditPatientDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2022-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"TZL0"},"content":"        EditPatientCommand editPatientCommand \u003d new EditPatientCommand(indexLastPatient, descriptor);","lastModifiedDate":"2022-10-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"TZL0"},"content":"        String expectedMessage \u003d String.format(EditPatientCommand.MESSAGE_EDIT_PATIENT_SUCCESS, editedPatient);","lastModifiedDate":"2022-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"TZL0"},"content":"        expectedModel.setPatient(lastPatient, editedPatient);","lastModifiedDate":"2022-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"TZL0"},"content":"        assertCommandSuccess(editPatientCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":74,"author":{"gitId":"TZL0"},"content":"        EditPatientCommand editPatientCommand \u003d new EditPatientCommand(INDEX_FIRST_PATIENT,","lastModifiedDate":"2022-10-16"},{"lineNumber":75,"author":{"gitId":"TZL0"},"content":"                new EditPatientCommand.EditPatientDescriptor());","lastModifiedDate":"2022-10-16"},{"lineNumber":76,"author":{"gitId":"TZL0"},"content":"        Patient editedPatient \u003d model.getFilteredPatientList().get(INDEX_FIRST_PATIENT.getZeroBased());","lastModifiedDate":"2022-10-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"TZL0"},"content":"        String expectedMessage \u003d String.format(EditPatientCommand.MESSAGE_EDIT_PATIENT_SUCCESS, editedPatient);","lastModifiedDate":"2022-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"TZL0"},"content":"        assertCommandSuccess(editPatientCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"TZL0"},"content":"        showPatientAtIndex(model, INDEX_FIRST_PATIENT);","lastModifiedDate":"2022-10-16"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"TZL0"},"content":"        Patient patientInFilteredList \u003d model.getFilteredPatientList().get(INDEX_FIRST_PATIENT.getZeroBased());","lastModifiedDate":"2022-10-16"},{"lineNumber":90,"author":{"gitId":"TZL0"},"content":"        Patient editedPatient \u003d new PatientBuilder(patientInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-16"},{"lineNumber":91,"author":{"gitId":"TZL0"},"content":"        EditPatientCommand editPatientCommand \u003d new EditPatientCommand(INDEX_FIRST_PATIENT,","lastModifiedDate":"2022-10-16"},{"lineNumber":92,"author":{"gitId":"TZL0"},"content":"                new EditPatientDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2022-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"TZL0"},"content":"        String expectedMessage \u003d String.format(EditPatientCommand.MESSAGE_EDIT_PATIENT_SUCCESS, editedPatient);","lastModifiedDate":"2022-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"TZL0"},"content":"        expectedModel.setPatient(model.getFilteredPatientList().get(0), editedPatient);","lastModifiedDate":"2022-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":99,"author":{"gitId":"TZL0"},"content":"        assertCommandSuccess(editPatientCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":103,"author":{"gitId":"TZL0"},"content":"    public void execute_duplicatePatientUnfilteredList_failure() {","lastModifiedDate":"2022-10-16"},{"lineNumber":104,"author":{"gitId":"TZL0"},"content":"        Patient firstPatient \u003d model.getFilteredPatientList().get(INDEX_FIRST_PATIENT.getZeroBased());","lastModifiedDate":"2022-10-16"},{"lineNumber":105,"author":{"gitId":"TZL0"},"content":"        EditPatientDescriptor descriptor \u003d new EditPatientDescriptorBuilder(firstPatient).build();","lastModifiedDate":"2022-10-16"},{"lineNumber":106,"author":{"gitId":"TZL0"},"content":"        EditPatientCommand editPatientCommand \u003d new EditPatientCommand(INDEX_SECOND_PATIENT, descriptor);","lastModifiedDate":"2022-10-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"TZL0"},"content":"        assertCommandFailure(editPatientCommand, model, EditPatientCommand.MESSAGE_DUPLICATE_PATIENT);","lastModifiedDate":"2022-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"TZL0"},"content":"    public void execute_duplicatePatientFilteredList_failure() {","lastModifiedDate":"2022-10-16"},{"lineNumber":113,"author":{"gitId":"TZL0"},"content":"        showPatientAtIndex(model, INDEX_FIRST_PATIENT);","lastModifiedDate":"2022-10-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":115,"author":{"gitId":"TZL0"},"content":"        // edit patient in filtered list into a duplicate in address book","lastModifiedDate":"2022-10-16"},{"lineNumber":116,"author":{"gitId":"TZL0"},"content":"        Patient patientInList \u003d model.getAddressBook().getPatientList().get(INDEX_SECOND_PATIENT.getZeroBased());","lastModifiedDate":"2022-10-16"},{"lineNumber":117,"author":{"gitId":"TZL0"},"content":"        EditPatientCommand editPatientCommand \u003d new EditPatientCommand(INDEX_FIRST_PATIENT,","lastModifiedDate":"2022-10-16"},{"lineNumber":118,"author":{"gitId":"TZL0"},"content":"                new EditPatientDescriptorBuilder(patientInList).build());","lastModifiedDate":"2022-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"TZL0"},"content":"        assertCommandFailure(editPatientCommand, model, EditPatientCommand.MESSAGE_DUPLICATE_PATIENT);","lastModifiedDate":"2022-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":124,"author":{"gitId":"TZL0"},"content":"    public void execute_invalidPatientIndexUnfilteredList_failure() {","lastModifiedDate":"2022-10-16"},{"lineNumber":125,"author":{"gitId":"wadia82"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPatientList().size() + 1);","lastModifiedDate":"2022-10-10"},{"lineNumber":126,"author":{"gitId":"TZL0"},"content":"        EditPatientCommand.EditPatientDescriptor descriptor \u003d","lastModifiedDate":"2022-10-16"},{"lineNumber":127,"author":{"gitId":"TZL0"},"content":"                new EditPatientDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-16"},{"lineNumber":128,"author":{"gitId":"TZL0"},"content":"        EditPatientCommand editPatientCommand \u003d new EditPatientCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2022-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":130,"author":{"gitId":"TZL0"},"content":"        assertCommandFailure(editPatientCommand, model, Messages.MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-16"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":138,"author":{"gitId":"TZL0"},"content":"    public void execute_invalidPatientIndexFilteredList_failure() {","lastModifiedDate":"2022-10-16"},{"lineNumber":139,"author":{"gitId":"TZL0"},"content":"        showPatientAtIndex(model, INDEX_FIRST_PATIENT);","lastModifiedDate":"2022-10-16"},{"lineNumber":140,"author":{"gitId":"TZL0"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PATIENT;","lastModifiedDate":"2022-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"TZL0"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPatientList().size());","lastModifiedDate":"2022-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":144,"author":{"gitId":"TZL0"},"content":"        EditPatientCommand editPatientCommand \u003d new EditPatientCommand(outOfBoundIndex,","lastModifiedDate":"2022-10-16"},{"lineNumber":145,"author":{"gitId":"TZL0"},"content":"                new EditPatientDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2022-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":147,"author":{"gitId":"TZL0"},"content":"        assertCommandFailure(editPatientCommand, model, Messages.MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"TZL0"},"content":"        final EditPatientCommand standardCommand \u003d new EditPatientCommand(INDEX_FIRST_PATIENT, DESC_AMY);","lastModifiedDate":"2022-10-16"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":155,"author":{"gitId":"TZL0"},"content":"        EditPatientDescriptor copyDescriptor \u003d new EditPatientDescriptor(DESC_AMY);","lastModifiedDate":"2022-10-16"},{"lineNumber":156,"author":{"gitId":"TZL0"},"content":"        EditPatientCommand commandWithSameValues \u003d new EditPatientCommand(INDEX_FIRST_PATIENT, copyDescriptor);","lastModifiedDate":"2022-10-16"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"TZL0"},"content":"        assertFalse(standardCommand.equals(new EditPatientCommand(INDEX_SECOND_PATIENT, DESC_AMY)));","lastModifiedDate":"2022-10-16"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"TZL0"},"content":"        assertFalse(standardCommand.equals(new EditPatientCommand(INDEX_FIRST_PATIENT, DESC_BOB)));","lastModifiedDate":"2022-10-16"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"wadia82":1,"guokweijie":1,"TZL0":66,"-":107}},{"path":"src/test/java/seedu/address/logic/commands/EditPatientDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"TZL0"},"content":"import seedu.address.logic.commands.EditPatientCommand.EditPatientDescriptor;","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"TZL0"},"content":"import seedu.address.testutil.EditPatientDescriptorBuilder;","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"guokweijie"},"content":"public class EditPatientDescriptorTest {","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"TZL0"},"content":"        EditPatientDescriptor descriptorWithSameValues \u003d new EditPatientCommand.EditPatientDescriptor(DESC_AMY);","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"TZL0"},"content":"        EditPatientCommand.EditPatientDescriptor editedAmy \u003d","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"TZL0"},"content":"                new EditPatientDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"TZL0"},"content":"        editedAmy \u003d new EditPatientDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"TZL0"},"content":"        editedAmy \u003d new EditPatientDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2022-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"TZL0"},"content":"        editedAmy \u003d new EditPatientDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2022-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"TZL0"},"content":"        editedAmy \u003d new EditPatientDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"guokweijie":1,"TZL0":9,"-":49}},{"path":"src/test/java/seedu/address/logic/commands/FilterNameCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"TZL0"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PATIENTS_LISTED_OVERVIEW;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"TZL0"},"content":"import static seedu.address.testutil.TypicalPatients.CARL;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"TZL0"},"content":"import static seedu.address.testutil.TypicalPatients.ELLE;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"TZL0"},"content":"import static seedu.address.testutil.TypicalPatients.FIONA;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"TZL0"},"content":"import static seedu.address.testutil.TypicalPatients.getTypicalPatientsAddressBook;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"wadia82"},"content":"import seedu.address.model.patient.NameContainsKeywordsPredicatePatient;","lastModifiedDate":"2022-10-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"TZL0"},"content":"public class FilterNameCommandTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"TZL0"},"content":"    private Model model \u003d new ModelManager(getTypicalPatientsAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"TZL0"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalPatientsAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"wadia82"},"content":"        NameContainsKeywordsPredicatePatient firstPredicate \u003d","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"wadia82"},"content":"                new NameContainsKeywordsPredicatePatient(Collections.singletonList(\"first\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"wadia82"},"content":"        NameContainsKeywordsPredicatePatient secondPredicate \u003d","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"wadia82"},"content":"                new NameContainsKeywordsPredicatePatient(Collections.singletonList(\"second\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"TZL0"},"content":"        FilterNameCommand findFirstCommand \u003d new FilterNameCommand(firstPredicate);","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"TZL0"},"content":"        FilterNameCommand findSecondCommand \u003d new FilterNameCommand(secondPredicate);","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"TZL0"},"content":"        FilterNameCommand findFirstCommandCopy \u003d new FilterNameCommand(firstPredicate);","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"TZL0"},"content":"        // different patient -\u003e returns false","lastModifiedDate":"2022-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"TZL0"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PATIENTS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2022-10-16"},{"lineNumber":59,"author":{"gitId":"wadia82"},"content":"        NameContainsKeywordsPredicatePatient predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2022-10-16"},{"lineNumber":60,"author":{"gitId":"TZL0"},"content":"        FilterNameCommand command \u003d new FilterNameCommand(predicate);","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"TZL0"},"content":"        expectedModel.updateFilteredPatientList(predicate);","lastModifiedDate":"2022-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":63,"author":{"gitId":"wadia82"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPatientList());","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"TZL0"},"content":"    public void execute_multipleKeywords_multiplePatientsFound() {","lastModifiedDate":"2022-10-16"},{"lineNumber":68,"author":{"gitId":"TZL0"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PATIENTS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2022-10-16"},{"lineNumber":69,"author":{"gitId":"wadia82"},"content":"        NameContainsKeywordsPredicatePatient predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2022-10-16"},{"lineNumber":70,"author":{"gitId":"TZL0"},"content":"        FilterNameCommand command \u003d new FilterNameCommand(predicate);","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"TZL0"},"content":"        expectedModel.updateFilteredPatientList(predicate);","lastModifiedDate":"2022-10-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":73,"author":{"gitId":"wadia82"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPatientList());","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"wadia82"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicatePatient}.","lastModifiedDate":"2022-10-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":79,"author":{"gitId":"wadia82"},"content":"    private NameContainsKeywordsPredicatePatient preparePredicate(String userInput) {","lastModifiedDate":"2022-10-16"},{"lineNumber":80,"author":{"gitId":"wadia82"},"content":"        return new NameContainsKeywordsPredicatePatient(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2022-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"wadia82":12,"TZL0":19,"-":51}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"TZL0"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPatientAtIndex;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"TZL0"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PATIENT;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"TZL0"},"content":"import static seedu.address.testutil.TypicalPatients.getTypicalPatientsAddressBook;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"TZL0"},"content":"        model \u003d new ModelManager(getTypicalPatientsAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"TZL0"},"content":"        showPatientAtIndex(model, INDEX_FIRST_PATIENT);","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"TZL0":5,"-":34}},{"path":"src/test/java/seedu/address/logic/commands/RemarkCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-09-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_AMY;","lastModifiedDate":"2022-09-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_BOB;","lastModifiedDate":"2022-09-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-09-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-09-13"},{"lineNumber":8,"author":{"gitId":"TZL0"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPatientAtIndex;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"TZL0"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PATIENT;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"TZL0"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PATIENT;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"TZL0"},"content":"import static seedu.address.testutil.TypicalPatients.getTypicalPatientsAddressBook;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-09-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-09-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-09-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-09-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-09-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-09-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-09-13"},{"lineNumber":21,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.Remark;","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"TZL0"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-09-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for RemarkCommand.","lastModifiedDate":"2022-09-13"},{"lineNumber":27,"author":{"gitId":"SpecOps2016"},"content":" * Created new tests for RemarkCommand.","lastModifiedDate":"2022-09-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-09-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class RemarkCommandTest {","lastModifiedDate":"2022-09-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String REMARK_STUB \u003d \"Some remark\";","lastModifiedDate":"2022-09-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":33,"author":{"gitId":"TZL0"},"content":"    private Model model \u003d new ModelManager(getTypicalPatientsAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-09-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void execute_addRemarkUnfilteredList_success() {","lastModifiedDate":"2022-09-13"},{"lineNumber":37,"author":{"gitId":"TZL0"},"content":"        Patient firstPatient \u003d model.getFilteredPatientList().get(INDEX_FIRST_PATIENT.getZeroBased());","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"TZL0"},"content":"        Patient editedPatient \u003d new PatientBuilder(firstPatient).withRemark(REMARK_STUB).build();","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":40,"author":{"gitId":"TZL0"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(INDEX_FIRST_PATIENT,","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"guokweijie"},"content":"                new Remark(editedPatient.getRemark().value));","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":43,"author":{"gitId":"guokweijie"},"content":"        String expectedMessage \u003d String.format(RemarkCommand.MESSAGE_ADD_REMARK_SUCCESS, editedPatient);","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-09-13"},{"lineNumber":46,"author":{"gitId":"TZL0"},"content":"        expectedModel.setPatient(firstPatient, editedPatient);","lastModifiedDate":"2022-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertCommandSuccess(remarkCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-09-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-09-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_deleteRemarkUnfilteredList_success() {","lastModifiedDate":"2022-09-13"},{"lineNumber":53,"author":{"gitId":"TZL0"},"content":"        Patient firstPatient \u003d model.getFilteredPatientList().get(INDEX_FIRST_PATIENT.getZeroBased());","lastModifiedDate":"2022-10-16"},{"lineNumber":54,"author":{"gitId":"TZL0"},"content":"        Patient editedPatient \u003d new PatientBuilder(firstPatient).withRemark(\"\").build();","lastModifiedDate":"2022-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":56,"author":{"gitId":"TZL0"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(INDEX_FIRST_PATIENT,","lastModifiedDate":"2022-10-16"},{"lineNumber":57,"author":{"gitId":"guokweijie"},"content":"                new Remark(editedPatient.getRemark().toString()));","lastModifiedDate":"2022-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":59,"author":{"gitId":"guokweijie"},"content":"        String expectedMessage \u003d String.format(RemarkCommand.MESSAGE_DELETE_REMARK_SUCCESS, editedPatient);","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-09-13"},{"lineNumber":62,"author":{"gitId":"TZL0"},"content":"        expectedModel.setPatient(firstPatient, editedPatient);","lastModifiedDate":"2022-10-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertCommandSuccess(remarkCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-09-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-09-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2022-09-13"},{"lineNumber":69,"author":{"gitId":"TZL0"},"content":"        showPatientAtIndex(model, INDEX_FIRST_PATIENT);","lastModifiedDate":"2022-10-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":71,"author":{"gitId":"TZL0"},"content":"        Patient firstPatient \u003d model.getFilteredPatientList().get(INDEX_FIRST_PATIENT.getZeroBased());","lastModifiedDate":"2022-10-16"},{"lineNumber":72,"author":{"gitId":"TZL0"},"content":"        Patient editedPatient \u003d new PatientBuilder(model.getFilteredPatientList()","lastModifiedDate":"2022-10-16"},{"lineNumber":73,"author":{"gitId":"TZL0"},"content":"                .get(INDEX_FIRST_PATIENT.getZeroBased())).withRemark(REMARK_STUB).build();","lastModifiedDate":"2022-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":75,"author":{"gitId":"TZL0"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(INDEX_FIRST_PATIENT,","lastModifiedDate":"2022-10-16"},{"lineNumber":76,"author":{"gitId":"guokweijie"},"content":"                new Remark(editedPatient.getRemark().value));","lastModifiedDate":"2022-10-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":78,"author":{"gitId":"guokweijie"},"content":"        String expectedMessage \u003d String.format(RemarkCommand.MESSAGE_ADD_REMARK_SUCCESS, editedPatient);","lastModifiedDate":"2022-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-09-13"},{"lineNumber":81,"author":{"gitId":"TZL0"},"content":"        expectedModel.setPatient(firstPatient, editedPatient);","lastModifiedDate":"2022-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertCommandSuccess(remarkCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-09-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-09-13"},{"lineNumber":87,"author":{"gitId":"TZL0"},"content":"    public void execute_invalidPatientIndexUnfilteredList_failure() {","lastModifiedDate":"2022-10-16"},{"lineNumber":88,"author":{"gitId":"wadia82"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPatientList().size() + 1);","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(outOfBoundIndex, new Remark(VALID_REMARK_BOB));","lastModifiedDate":"2022-09-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":91,"author":{"gitId":"wadia82"},"content":"        assertCommandFailure(remarkCommand, model, Messages.MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2022-09-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2022-09-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-09-13"},{"lineNumber":99,"author":{"gitId":"TZL0"},"content":"    public void execute_invalidPatientIndexFilteredList_failure() {","lastModifiedDate":"2022-10-16"},{"lineNumber":100,"author":{"gitId":"TZL0"},"content":"        showPatientAtIndex(model, INDEX_FIRST_PATIENT);","lastModifiedDate":"2022-10-16"},{"lineNumber":101,"author":{"gitId":"TZL0"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PATIENT;","lastModifiedDate":"2022-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2022-09-13"},{"lineNumber":103,"author":{"gitId":"TZL0"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPatientList().size());","lastModifiedDate":"2022-10-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(outOfBoundIndex, new Remark(VALID_REMARK_BOB));","lastModifiedDate":"2022-09-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":107,"author":{"gitId":"wadia82"},"content":"        assertCommandFailure(remarkCommand, model, Messages.MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-09-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2022-09-13"},{"lineNumber":112,"author":{"gitId":"TZL0"},"content":"        final RemarkCommand standardCommand \u003d new RemarkCommand(INDEX_FIRST_PATIENT,","lastModifiedDate":"2022-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                new Remark(VALID_REMARK_AMY));","lastModifiedDate":"2022-09-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-09-13"},{"lineNumber":115,"author":{"gitId":"TZL0"},"content":"        RemarkCommand commandWithSameValues \u003d new RemarkCommand(INDEX_FIRST_PATIENT,","lastModifiedDate":"2022-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                new Remark(VALID_REMARK_AMY));","lastModifiedDate":"2022-09-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2022-09-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-09-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2022-09-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-09-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2022-09-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-09-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2022-09-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2022-09-13"},{"lineNumber":125,"author":{"gitId":"TZL0"},"content":"        assertFalse(standardCommand.equals(new RemarkCommand(INDEX_SECOND_PATIENT,","lastModifiedDate":"2022-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                new Remark(VALID_REMARK_AMY))));","lastModifiedDate":"2022-09-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // different remark -\u003e returns false","lastModifiedDate":"2022-09-13"},{"lineNumber":128,"author":{"gitId":"TZL0"},"content":"        assertFalse(standardCommand.equals(new RemarkCommand(INDEX_FIRST_PATIENT,","lastModifiedDate":"2022-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                new Remark(VALID_REMARK_BOB))));","lastModifiedDate":"2022-09-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-09-13"}],"authorContributionMap":{"wadia82":3,"guokweijie":6,"SpecOps2016":1,"TZL0":31,"-":90}},{"path":"src/test/java/seedu/address/logic/commands/SelectPatientCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TZL0"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-17"},{"lineNumber":2,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":3,"author":{"gitId":"TZL0"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-17"},{"lineNumber":4,"author":{"gitId":"TZL0"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-17"},{"lineNumber":5,"author":{"gitId":"TZL0"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-17"},{"lineNumber":6,"author":{"gitId":"TZL0"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-17"},{"lineNumber":7,"author":{"gitId":"TZL0"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPatientAtIndex;","lastModifiedDate":"2022-10-17"},{"lineNumber":8,"author":{"gitId":"TZL0"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PATIENT;","lastModifiedDate":"2022-10-17"},{"lineNumber":9,"author":{"gitId":"TZL0"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PATIENT;","lastModifiedDate":"2022-10-17"},{"lineNumber":10,"author":{"gitId":"TZL0"},"content":"import static seedu.address.testutil.TypicalPatients.getTypicalPatientsAddressBook;","lastModifiedDate":"2022-10-17"},{"lineNumber":11,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":12,"author":{"gitId":"TZL0"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-17"},{"lineNumber":13,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":14,"author":{"gitId":"TZL0"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-17"},{"lineNumber":15,"author":{"gitId":"TZL0"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-17"},{"lineNumber":16,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-17"},{"lineNumber":17,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-10-17"},{"lineNumber":18,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-10-17"},{"lineNumber":19,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2022-10-17"},{"lineNumber":20,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":21,"author":{"gitId":"TZL0"},"content":"/**","lastModifiedDate":"2022-10-17"},{"lineNumber":22,"author":{"gitId":"TZL0"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2022-10-17"},{"lineNumber":23,"author":{"gitId":"TZL0"},"content":" * {@code SelectPatientCommand}.","lastModifiedDate":"2022-10-17"},{"lineNumber":24,"author":{"gitId":"TZL0"},"content":" */","lastModifiedDate":"2022-10-17"},{"lineNumber":25,"author":{"gitId":"TZL0"},"content":"public class SelectPatientCommandTest {","lastModifiedDate":"2022-10-17"},{"lineNumber":26,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":27,"author":{"gitId":"TZL0"},"content":"    private Model model \u003d new ModelManager(getTypicalPatientsAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-17"},{"lineNumber":28,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":29,"author":{"gitId":"TZL0"},"content":"    @Test","lastModifiedDate":"2022-10-17"},{"lineNumber":30,"author":{"gitId":"TZL0"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2022-10-17"},{"lineNumber":31,"author":{"gitId":"TZL0"},"content":"        Patient patientToSelect \u003d model.getFilteredPatientList().get(INDEX_FIRST_PATIENT.getZeroBased());","lastModifiedDate":"2022-10-17"},{"lineNumber":32,"author":{"gitId":"TZL0"},"content":"        SelectPatientCommand selectPatientCommand \u003d new SelectPatientCommand(INDEX_FIRST_PATIENT);","lastModifiedDate":"2022-10-17"},{"lineNumber":33,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":34,"author":{"gitId":"TZL0"},"content":"        String expectedMessage \u003d String.format(SelectPatientCommand.MESSAGE_SUCCESS, patientToSelect);","lastModifiedDate":"2022-10-17"},{"lineNumber":35,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":36,"author":{"gitId":"TZL0"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-17"},{"lineNumber":37,"author":{"gitId":"TZL0"},"content":"        expectedModel.selectPatient(patientToSelect);","lastModifiedDate":"2022-10-17"},{"lineNumber":38,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":39,"author":{"gitId":"TZL0"},"content":"        assertCommandSuccess(selectPatientCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-17"},{"lineNumber":40,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":41,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":42,"author":{"gitId":"TZL0"},"content":"    @Test","lastModifiedDate":"2022-10-17"},{"lineNumber":43,"author":{"gitId":"TZL0"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2022-10-17"},{"lineNumber":44,"author":{"gitId":"TZL0"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPatientList().size() + 1);","lastModifiedDate":"2022-10-17"},{"lineNumber":45,"author":{"gitId":"TZL0"},"content":"        SelectPatientCommand selectPatientCommand \u003d new SelectPatientCommand(outOfBoundIndex);","lastModifiedDate":"2022-10-17"},{"lineNumber":46,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":47,"author":{"gitId":"TZL0"},"content":"        assertCommandFailure(selectPatientCommand, model, Messages.MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-17"},{"lineNumber":48,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":49,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":50,"author":{"gitId":"TZL0"},"content":"    @Test","lastModifiedDate":"2022-10-17"},{"lineNumber":51,"author":{"gitId":"TZL0"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2022-10-17"},{"lineNumber":52,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":53,"author":{"gitId":"TZL0"},"content":"        Patient patientToSelect \u003d model.getFilteredPatientList().get(INDEX_FIRST_PATIENT.getZeroBased());","lastModifiedDate":"2022-10-17"},{"lineNumber":54,"author":{"gitId":"TZL0"},"content":"        SelectPatientCommand selectPatientCommand \u003d new SelectPatientCommand(INDEX_FIRST_PATIENT);","lastModifiedDate":"2022-10-17"},{"lineNumber":55,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":56,"author":{"gitId":"TZL0"},"content":"        String expectedMessage \u003d String.format(SelectPatientCommand.MESSAGE_SUCCESS, patientToSelect);","lastModifiedDate":"2022-10-17"},{"lineNumber":57,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":58,"author":{"gitId":"TZL0"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-17"},{"lineNumber":59,"author":{"gitId":"TZL0"},"content":"        expectedModel.selectPatient(patientToSelect);","lastModifiedDate":"2022-10-17"},{"lineNumber":60,"author":{"gitId":"TZL0"},"content":"        showNoAppointment(expectedModel);","lastModifiedDate":"2022-10-17"},{"lineNumber":61,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":62,"author":{"gitId":"TZL0"},"content":"        assertCommandSuccess(selectPatientCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-17"},{"lineNumber":63,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":64,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":65,"author":{"gitId":"TZL0"},"content":"    @Test","lastModifiedDate":"2022-10-17"},{"lineNumber":66,"author":{"gitId":"TZL0"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2022-10-17"},{"lineNumber":67,"author":{"gitId":"TZL0"},"content":"        showPatientAtIndex(model, INDEX_FIRST_PATIENT);","lastModifiedDate":"2022-10-17"},{"lineNumber":68,"author":{"gitId":"TZL0"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PATIENT;","lastModifiedDate":"2022-10-17"},{"lineNumber":69,"author":{"gitId":"TZL0"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2022-10-17"},{"lineNumber":70,"author":{"gitId":"TZL0"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPatientList().size());","lastModifiedDate":"2022-10-17"},{"lineNumber":71,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":72,"author":{"gitId":"TZL0"},"content":"        SelectPatientCommand selectPatientCommand \u003d new SelectPatientCommand(outOfBoundIndex);","lastModifiedDate":"2022-10-17"},{"lineNumber":73,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":74,"author":{"gitId":"TZL0"},"content":"        assertCommandFailure(selectPatientCommand, model, Messages.MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-17"},{"lineNumber":75,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":76,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":77,"author":{"gitId":"TZL0"},"content":"    @Test","lastModifiedDate":"2022-10-17"},{"lineNumber":78,"author":{"gitId":"TZL0"},"content":"    public void equals() {","lastModifiedDate":"2022-10-17"},{"lineNumber":79,"author":{"gitId":"TZL0"},"content":"        SelectPatientCommand selectFirstCommand \u003d new SelectPatientCommand(INDEX_FIRST_PATIENT);","lastModifiedDate":"2022-10-17"},{"lineNumber":80,"author":{"gitId":"TZL0"},"content":"        SelectPatientCommand selectSecondCommand \u003d new SelectPatientCommand(INDEX_SECOND_PATIENT);","lastModifiedDate":"2022-10-17"},{"lineNumber":81,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":82,"author":{"gitId":"TZL0"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-17"},{"lineNumber":83,"author":{"gitId":"TZL0"},"content":"        assertTrue(selectFirstCommand.equals(selectFirstCommand));","lastModifiedDate":"2022-10-17"},{"lineNumber":84,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":85,"author":{"gitId":"TZL0"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-17"},{"lineNumber":86,"author":{"gitId":"TZL0"},"content":"        SelectPatientCommand selectFirstCommandCopy \u003d new SelectPatientCommand(INDEX_FIRST_PATIENT);","lastModifiedDate":"2022-10-17"},{"lineNumber":87,"author":{"gitId":"TZL0"},"content":"        assertTrue(selectFirstCommand.equals(selectFirstCommandCopy));","lastModifiedDate":"2022-10-17"},{"lineNumber":88,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":89,"author":{"gitId":"TZL0"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-17"},{"lineNumber":90,"author":{"gitId":"TZL0"},"content":"        assertFalse(selectFirstCommand.equals(1));","lastModifiedDate":"2022-10-17"},{"lineNumber":91,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":92,"author":{"gitId":"TZL0"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-17"},{"lineNumber":93,"author":{"gitId":"TZL0"},"content":"        assertFalse(selectFirstCommand.equals(null));","lastModifiedDate":"2022-10-17"},{"lineNumber":94,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":95,"author":{"gitId":"TZL0"},"content":"        // different patient -\u003e returns false","lastModifiedDate":"2022-10-17"},{"lineNumber":96,"author":{"gitId":"TZL0"},"content":"        assertFalse(selectFirstCommand.equals(selectSecondCommand));","lastModifiedDate":"2022-10-17"},{"lineNumber":97,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":98,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":99,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":100,"author":{"gitId":"TZL0"},"content":"     * Updates {@code model}\u0027s filtered appointment list to show no one.","lastModifiedDate":"2022-10-17"},{"lineNumber":101,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":102,"author":{"gitId":"TZL0"},"content":"    private void showNoAppointment(Model model) {","lastModifiedDate":"2022-10-17"},{"lineNumber":103,"author":{"gitId":"TZL0"},"content":"        model.updateFilteredAppointmentList(p -\u003e false);","lastModifiedDate":"2022-10-17"},{"lineNumber":104,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":105,"author":{"gitId":"TZL0"},"content":"        assertTrue(model.getFilteredAppointmentList().isEmpty());","lastModifiedDate":"2022-10-17"},{"lineNumber":106,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":107,"author":{"gitId":"TZL0"},"content":"}","lastModifiedDate":"2022-10-17"}],"authorContributionMap":{"TZL0":107}},{"path":"src/test/java/seedu/address/logic/parser/AddPatientCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":19,"author":{"gitId":"TZL0"},"content":"import static seedu.address.logic.commands.CommandTestUtil.REMARK_DESC_AMY;","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"TZL0"},"content":"import static seedu.address.logic.commands.CommandTestUtil.REMARK_DESC_BOB;","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"TZL0"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_AMY;","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"TZL0"},"content":"import static seedu.address.testutil.TypicalPatients.AMY;","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"TZL0"},"content":"import static seedu.address.testutil.TypicalPatients.BOB;","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"guokweijie"},"content":"import seedu.address.logic.commands.AddPatientCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.Address;","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.Email;","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.Name;","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.Phone;","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"TZL0"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2022-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"guokweijie"},"content":"public class AddPatientCommandParserTest {","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"guokweijie"},"content":"    private AddPatientCommandParser parser \u003d new AddPatientCommandParser();","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":51,"author":{"gitId":"TZL0"},"content":"        Patient expectedPatient \u003d new PatientBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":54,"author":{"gitId":"guokweijie"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND + REMARK_DESC_BOB, new AddPatientCommand(expectedPatient));","lastModifiedDate":"2022-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":58,"author":{"gitId":"guokweijie"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND + REMARK_DESC_BOB, new AddPatientCommand(expectedPatient));","lastModifiedDate":"2022-10-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":62,"author":{"gitId":"guokweijie"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND + REMARK_DESC_BOB, new AddPatientCommand(expectedPatient));","lastModifiedDate":"2022-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":66,"author":{"gitId":"guokweijie"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND + REMARK_DESC_BOB, new AddPatientCommand(expectedPatient));","lastModifiedDate":"2022-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2017-12-23"},{"lineNumber":70,"author":{"gitId":"guokweijie"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND + REMARK_DESC_BOB, new AddPatientCommand(expectedPatient));","lastModifiedDate":"2022-10-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":73,"author":{"gitId":"TZL0"},"content":"        Patient expectedPatientMultipleTags \u003d new PatientBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":76,"author":{"gitId":"TZL0"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + REMARK_DESC_BOB,","lastModifiedDate":"2022-10-06"},{"lineNumber":77,"author":{"gitId":"guokweijie"},"content":"                new AddPatientCommand(expectedPatientMultipleTags));","lastModifiedDate":"2022-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":83,"author":{"gitId":"TZL0"},"content":"        Patient expectedPatient \u003d new PatientBuilder(AMY).withRemark(VALID_REMARK_AMY).withTags().build();","lastModifiedDate":"2022-10-16"},{"lineNumber":84,"author":{"gitId":"TZL0"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2022-10-06"},{"lineNumber":85,"author":{"gitId":"TZL0"},"content":"                        + REMARK_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY,","lastModifiedDate":"2022-10-06"},{"lineNumber":86,"author":{"gitId":"guokweijie"},"content":"                new AddPatientCommand(expectedPatient));","lastModifiedDate":"2022-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":91,"author":{"gitId":"guokweijie"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPatientCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2017-12-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2017-12-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2017-12-23"},{"lineNumber":143,"author":{"gitId":"guokweijie"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPatientCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"guokweijie":12,"TZL0":17,"-":116}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2022-09-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"TZL0"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PATIENT;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":16,"author":{"gitId":"guokweijie"},"content":"import seedu.address.logic.commands.AddPatientCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"wadia82"},"content":"import seedu.address.logic.commands.DeletePatientCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"TZL0"},"content":"import seedu.address.logic.commands.EditPatientCommand;","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"TZL0"},"content":"import seedu.address.logic.commands.EditPatientCommand.EditPatientDescriptor;","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"TZL0"},"content":"import seedu.address.logic.commands.FilterNameCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.RemarkCommand;","lastModifiedDate":"2022-09-13"},{"lineNumber":26,"author":{"gitId":"TZL0"},"content":"import seedu.address.logic.commands.SelectPatientCommand;","lastModifiedDate":"2022-10-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"wadia82"},"content":"import seedu.address.model.patient.NameContainsKeywordsPredicatePatient;","lastModifiedDate":"2022-10-17"},{"lineNumber":29,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.Remark;","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"TZL0"},"content":"import seedu.address.testutil.EditPatientDescriptorBuilder;","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"TZL0"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"TZL0"},"content":"import seedu.address.testutil.PatientUtil;","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"TZL0"},"content":"    public void parseCommand_addPatient() throws Exception {","lastModifiedDate":"2022-10-17"},{"lineNumber":38,"author":{"gitId":"TZL0"},"content":"        Patient patient \u003d new PatientBuilder().build();","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"TZL0"},"content":"        AddPatientCommand command \u003d (AddPatientCommand) parser.parseCommand(PatientUtil.getAddCommand(patient));","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"guokweijie"},"content":"        assertEquals(new AddPatientCommand(patient), command);","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"TZL0"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD.toString()) instanceof ClearCommand);","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"TZL0"},"content":"    public void parseCommand_deletePatient() throws Exception {","lastModifiedDate":"2022-10-17"},{"lineNumber":49,"author":{"gitId":"wadia82"},"content":"        DeletePatientCommand command \u003d (DeletePatientCommand) parser.parseCommand(","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"TZL0"},"content":"                DeletePatientCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PATIENT.getOneBased());","lastModifiedDate":"2022-10-16"},{"lineNumber":51,"author":{"gitId":"TZL0"},"content":"        assertEquals(new DeletePatientCommand(INDEX_FIRST_PATIENT), command);","lastModifiedDate":"2022-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"TZL0"},"content":"    public void parseCommand_editPatient() throws Exception {","lastModifiedDate":"2022-10-17"},{"lineNumber":55,"author":{"gitId":"TZL0"},"content":"        Patient patient \u003d new PatientBuilder().build();","lastModifiedDate":"2022-10-16"},{"lineNumber":56,"author":{"gitId":"TZL0"},"content":"        EditPatientDescriptor descriptor \u003d new EditPatientDescriptorBuilder(patient).build();","lastModifiedDate":"2022-10-16"},{"lineNumber":57,"author":{"gitId":"TZL0"},"content":"        EditPatientCommand command \u003d (EditPatientCommand) parser.parseCommand(EditPatientCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"TZL0"},"content":"                + INDEX_FIRST_PATIENT.getOneBased() + \" \" + PatientUtil.getEditPatientDescriptorDetails(descriptor));","lastModifiedDate":"2022-10-16"},{"lineNumber":59,"author":{"gitId":"TZL0"},"content":"        assertEquals(new EditPatientCommand(INDEX_FIRST_PATIENT, descriptor), command);","lastModifiedDate":"2022-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"TZL0"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD.toString()) instanceof ExitCommand);","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"TZL0"},"content":"    public void parseCommand_filterName() throws Exception {","lastModifiedDate":"2022-10-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"TZL0"},"content":"        FilterNameCommand command \u003d (FilterNameCommand) parser.parseCommand(","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"TZL0"},"content":"                FilterNameCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"wadia82"},"content":"        assertEquals(new FilterNameCommand(new NameContainsKeywordsPredicatePatient(keywords)), command);","lastModifiedDate":"2022-10-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"TZL0"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD.toString()) instanceof HelpCommand);","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"TZL0"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD.toString()) instanceof ListCommand);","lastModifiedDate":"2022-10-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"TZL0"},"content":"    @Test","lastModifiedDate":"2022-10-17"},{"lineNumber":84,"author":{"gitId":"TZL0"},"content":"    public void parseCommand_selectPatient() throws Exception {","lastModifiedDate":"2022-10-17"},{"lineNumber":85,"author":{"gitId":"TZL0"},"content":"        SelectPatientCommand command \u003d (SelectPatientCommand) parser.parseCommand(","lastModifiedDate":"2022-10-17"},{"lineNumber":86,"author":{"gitId":"TZL0"},"content":"                SelectPatientCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PATIENT.getOneBased());","lastModifiedDate":"2022-10-17"},{"lineNumber":87,"author":{"gitId":"TZL0"},"content":"        assertEquals(new SelectPatientCommand(INDEX_FIRST_PATIENT), command);","lastModifiedDate":"2022-10-17"},{"lineNumber":88,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-09-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void parseCommand_remark() throws Exception {","lastModifiedDate":"2022-09-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        final Remark remark \u003d new Remark(\"Some remark.\");","lastModifiedDate":"2022-09-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        RemarkCommand command \u003d (RemarkCommand) parser.parseCommand(RemarkCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2022-09-13"},{"lineNumber":94,"author":{"gitId":"TZL0"},"content":"            + INDEX_FIRST_PATIENT.getOneBased() + \" \" + PREFIX_REMARK + remark.value);","lastModifiedDate":"2022-10-16"},{"lineNumber":95,"author":{"gitId":"TZL0"},"content":"        assertEquals(new RemarkCommand(INDEX_FIRST_PATIENT, remark), command);","lastModifiedDate":"2022-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"wadia82":4,"guokweijie":2,"TZL0":37,"-":64}},{"path":"src/test/java/seedu/address/logic/parser/DeletePatientCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"TZL0"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PATIENT;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"wadia82"},"content":"import seedu.address.logic.commands.DeletePatientCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"wadia82"},"content":" * outside of the DeletePatientCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"wadia82"},"content":" * same path through the DeletePatientCommand, and therefore we test only one of them.","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"wadia82"},"content":"public class DeletePatientCommandParserTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"wadia82"},"content":"    private DeletePatientCommandParser parser \u003d new DeletePatientCommandParser();","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"TZL0"},"content":"        assertParseSuccess(parser, \"1\", new DeletePatientCommand(INDEX_FIRST_PATIENT));","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"wadia82"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"wadia82"},"content":"                DeletePatientCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"wadia82":7,"TZL0":2,"-":24}},{"path":"src/test/java/seedu/address/logic/parser/EditAppointmentCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Fuzanwenn"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"Fuzanwenn"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"Fuzanwenn"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"Fuzanwenn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DOCTOR_DESC_7;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"Fuzanwenn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DOCTOR_DESC_8;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"Fuzanwenn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_DOCTOR_DESC;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"Fuzanwenn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_MEDICAL_TEST_DESC;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"Fuzanwenn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"Fuzanwenn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_SLOT_DESC;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"Fuzanwenn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MEDICAL_TEST_DESC_7;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"Fuzanwenn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MEDICAL_TEST_DESC_8;","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"Fuzanwenn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"Fuzanwenn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"Fuzanwenn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.SLOT_DESC_7;","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"Fuzanwenn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.SLOT_DESC_8;","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"Fuzanwenn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DOCTOR_CAITIE;","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"Fuzanwenn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MEDICAL_TEST_7;","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"Fuzanwenn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"Fuzanwenn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"Fuzanwenn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SLOT_7;","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"Fuzanwenn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"Fuzanwenn"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"Fuzanwenn"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"Fuzanwenn"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_APPOINTMENT;","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"Fuzanwenn"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_APPOINTMENT;","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"Fuzanwenn"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_APPOINTMENT;","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"Fuzanwenn"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"Fuzanwenn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"Fuzanwenn"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"Fuzanwenn"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"Fuzanwenn"},"content":"import seedu.address.logic.commands.EditAppointmentCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"Fuzanwenn"},"content":"import seedu.address.model.appointment.Doctor;","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"Fuzanwenn"},"content":"import seedu.address.model.appointment.MedicalTest;","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"Fuzanwenn"},"content":"import seedu.address.model.appointment.Slot;","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.Name;","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"Fuzanwenn"},"content":"import seedu.address.testutil.EditAppointmentDescriptorBuilder;","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"Fuzanwenn"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"Fuzanwenn"},"content":"public class EditAppointmentCommandParserTest {","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"Fuzanwenn"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"Fuzanwenn"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"Fuzanwenn"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"Fuzanwenn"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"Fuzanwenn"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditAppointmentCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"Fuzanwenn"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"Fuzanwenn"},"content":"    private EditAppointmentCommandParser parser \u003d new EditAppointmentCommandParser();","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"Fuzanwenn"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"Fuzanwenn"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"Fuzanwenn"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"Fuzanwenn"},"content":"        // no index specified","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"Fuzanwenn"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"Fuzanwenn"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"Fuzanwenn"},"content":"        // no field specified","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"Fuzanwenn"},"content":"        assertParseFailure(parser, \"1\", EditAppointmentCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"Fuzanwenn"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"Fuzanwenn"},"content":"        // no index and no field specified","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"Fuzanwenn"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"Fuzanwenn"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"Fuzanwenn"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"Fuzanwenn"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"Fuzanwenn"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"Fuzanwenn"},"content":"        // negative index","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"Fuzanwenn"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"Fuzanwenn"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"Fuzanwenn"},"content":"        // zero index","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"Fuzanwenn"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"Fuzanwenn"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"Fuzanwenn"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"Fuzanwenn"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"Fuzanwenn"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"Fuzanwenn"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"Fuzanwenn"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"Fuzanwenn"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"Fuzanwenn"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":74,"author":{"gitId":"Fuzanwenn"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":75,"author":{"gitId":"Fuzanwenn"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2022-10-11"},{"lineNumber":76,"author":{"gitId":"Fuzanwenn"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2022-10-11"},{"lineNumber":77,"author":{"gitId":"Fuzanwenn"},"content":"        assertParseFailure(parser, \"1\"","lastModifiedDate":"2022-10-11"},{"lineNumber":78,"author":{"gitId":"Fuzanwenn"},"content":"                + INVALID_MEDICAL_TEST_DESC, MedicalTest.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2022-10-11"},{"lineNumber":79,"author":{"gitId":"Fuzanwenn"},"content":"        assertParseFailure(parser, \"1\" + INVALID_SLOT_DESC, Slot.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2022-10-11"},{"lineNumber":80,"author":{"gitId":"Fuzanwenn"},"content":"        assertParseFailure(parser, \"1\" + INVALID_DOCTOR_DESC, Doctor.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2022-10-11"},{"lineNumber":81,"author":{"gitId":"Fuzanwenn"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":82,"author":{"gitId":"Fuzanwenn"},"content":"        // invalid name followed by valid information","lastModifiedDate":"2022-10-11"},{"lineNumber":83,"author":{"gitId":"Fuzanwenn"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + MEDICAL_TEST_DESC_7 + SLOT_DESC_7 + DOCTOR_DESC_7,","lastModifiedDate":"2022-10-11"},{"lineNumber":84,"author":{"gitId":"Fuzanwenn"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-11"},{"lineNumber":85,"author":{"gitId":"Fuzanwenn"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":86,"author":{"gitId":"Fuzanwenn"},"content":"        // valid name followed by invalid name. The test case for invalid name followed by valid name","lastModifiedDate":"2022-10-11"},{"lineNumber":87,"author":{"gitId":"Fuzanwenn"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2022-10-11"},{"lineNumber":88,"author":{"gitId":"Fuzanwenn"},"content":"        assertParseFailure(parser, \"1\" + NAME_DESC_AMY + INVALID_NAME_DESC + MEDICAL_TEST_DESC_7","lastModifiedDate":"2022-10-11"},{"lineNumber":89,"author":{"gitId":"Fuzanwenn"},"content":"                + SLOT_DESC_7 + DOCTOR_DESC_7, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-11"},{"lineNumber":90,"author":{"gitId":"Fuzanwenn"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":91,"author":{"gitId":"Fuzanwenn"},"content":"        // valid medical test followed by invalid medical test.","lastModifiedDate":"2022-10-11"},{"lineNumber":92,"author":{"gitId":"Fuzanwenn"},"content":"        // The test case for invalid medical test followed by valid medical test","lastModifiedDate":"2022-10-11"},{"lineNumber":93,"author":{"gitId":"Fuzanwenn"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2022-10-11"},{"lineNumber":94,"author":{"gitId":"Fuzanwenn"},"content":"        assertParseFailure(parser, \"1\" + NAME_DESC_AMY + MEDICAL_TEST_DESC_7 + INVALID_MEDICAL_TEST_DESC","lastModifiedDate":"2022-10-11"},{"lineNumber":95,"author":{"gitId":"Fuzanwenn"},"content":"                + SLOT_DESC_7 + DOCTOR_DESC_7, MedicalTest.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-11"},{"lineNumber":96,"author":{"gitId":"Fuzanwenn"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":97,"author":{"gitId":"Fuzanwenn"},"content":"        // valid slot followed by invalid slot. The test case for invalid slot followed by valid slot","lastModifiedDate":"2022-10-11"},{"lineNumber":98,"author":{"gitId":"Fuzanwenn"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2022-10-11"},{"lineNumber":99,"author":{"gitId":"Fuzanwenn"},"content":"        assertParseFailure(parser, \"1\" + NAME_DESC_AMY + MEDICAL_TEST_DESC_7 + SLOT_DESC_7","lastModifiedDate":"2022-10-11"},{"lineNumber":100,"author":{"gitId":"Fuzanwenn"},"content":"                + INVALID_SLOT_DESC + DOCTOR_DESC_7, Slot.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-11"},{"lineNumber":101,"author":{"gitId":"Fuzanwenn"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":102,"author":{"gitId":"Fuzanwenn"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":103,"author":{"gitId":"Fuzanwenn"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2022-10-11"},{"lineNumber":104,"author":{"gitId":"Fuzanwenn"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_SLOT_DESC + INVALID_DOCTOR_DESC","lastModifiedDate":"2022-10-11"},{"lineNumber":105,"author":{"gitId":"Fuzanwenn"},"content":"                + INVALID_MEDICAL_TEST_DESC, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-11"},{"lineNumber":106,"author":{"gitId":"Fuzanwenn"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":107,"author":{"gitId":"Fuzanwenn"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":108,"author":{"gitId":"Fuzanwenn"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":109,"author":{"gitId":"Fuzanwenn"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2022-10-11"},{"lineNumber":110,"author":{"gitId":"Fuzanwenn"},"content":"        Index targetIndex \u003d INDEX_SECOND_APPOINTMENT;","lastModifiedDate":"2022-10-11"},{"lineNumber":111,"author":{"gitId":"Fuzanwenn"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY + DOCTOR_DESC_7 + MEDICAL_TEST_DESC_7","lastModifiedDate":"2022-10-11"},{"lineNumber":112,"author":{"gitId":"Fuzanwenn"},"content":"                + SLOT_DESC_7;","lastModifiedDate":"2022-10-11"},{"lineNumber":113,"author":{"gitId":"Fuzanwenn"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":114,"author":{"gitId":"Fuzanwenn"},"content":"        EditAppointmentCommand.EditAppointmentDescriptor descriptor \u003d new EditAppointmentDescriptorBuilder()","lastModifiedDate":"2022-10-11"},{"lineNumber":115,"author":{"gitId":"Fuzanwenn"},"content":"                .withName(VALID_NAME_AMY).withDoctor(VALID_DOCTOR_CAITIE)","lastModifiedDate":"2022-10-11"},{"lineNumber":116,"author":{"gitId":"Fuzanwenn"},"content":"                .withMedicalTest(VALID_MEDICAL_TEST_7).withSlot(VALID_SLOT_7)","lastModifiedDate":"2022-10-11"},{"lineNumber":117,"author":{"gitId":"Fuzanwenn"},"content":"                .build();","lastModifiedDate":"2022-10-11"},{"lineNumber":118,"author":{"gitId":"Fuzanwenn"},"content":"        EditAppointmentCommand expectedCommand \u003d new EditAppointmentCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-11"},{"lineNumber":119,"author":{"gitId":"Fuzanwenn"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":120,"author":{"gitId":"Fuzanwenn"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-11"},{"lineNumber":121,"author":{"gitId":"Fuzanwenn"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":122,"author":{"gitId":"Fuzanwenn"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":123,"author":{"gitId":"Fuzanwenn"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":124,"author":{"gitId":"Fuzanwenn"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2022-10-11"},{"lineNumber":125,"author":{"gitId":"Fuzanwenn"},"content":"        Index targetIndex \u003d INDEX_FIRST_APPOINTMENT;","lastModifiedDate":"2022-10-11"},{"lineNumber":126,"author":{"gitId":"Fuzanwenn"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY + DOCTOR_DESC_7;","lastModifiedDate":"2022-10-11"},{"lineNumber":127,"author":{"gitId":"Fuzanwenn"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":128,"author":{"gitId":"Fuzanwenn"},"content":"        EditAppointmentCommand.EditAppointmentDescriptor descriptor \u003d new EditAppointmentDescriptorBuilder()","lastModifiedDate":"2022-10-11"},{"lineNumber":129,"author":{"gitId":"Fuzanwenn"},"content":"                .withName(VALID_NAME_AMY)","lastModifiedDate":"2022-10-11"},{"lineNumber":130,"author":{"gitId":"Fuzanwenn"},"content":"                .withDoctor(VALID_DOCTOR_CAITIE).build();","lastModifiedDate":"2022-10-11"},{"lineNumber":131,"author":{"gitId":"Fuzanwenn"},"content":"        EditAppointmentCommand expectedCommand \u003d new EditAppointmentCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-11"},{"lineNumber":132,"author":{"gitId":"Fuzanwenn"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":133,"author":{"gitId":"Fuzanwenn"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-11"},{"lineNumber":134,"author":{"gitId":"Fuzanwenn"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":135,"author":{"gitId":"Fuzanwenn"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":136,"author":{"gitId":"Fuzanwenn"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":137,"author":{"gitId":"Fuzanwenn"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2022-10-11"},{"lineNumber":138,"author":{"gitId":"Fuzanwenn"},"content":"        // name","lastModifiedDate":"2022-10-11"},{"lineNumber":139,"author":{"gitId":"Fuzanwenn"},"content":"        Index targetIndex \u003d INDEX_THIRD_APPOINTMENT;","lastModifiedDate":"2022-10-11"},{"lineNumber":140,"author":{"gitId":"Fuzanwenn"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2022-10-11"},{"lineNumber":141,"author":{"gitId":"Fuzanwenn"},"content":"        EditAppointmentCommand.EditAppointmentDescriptor descriptor \u003d","lastModifiedDate":"2022-10-11"},{"lineNumber":142,"author":{"gitId":"Fuzanwenn"},"content":"                new EditAppointmentDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2022-10-11"},{"lineNumber":143,"author":{"gitId":"Fuzanwenn"},"content":"        EditAppointmentCommand expectedCommand \u003d new EditAppointmentCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-11"},{"lineNumber":144,"author":{"gitId":"Fuzanwenn"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-11"},{"lineNumber":145,"author":{"gitId":"Fuzanwenn"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":146,"author":{"gitId":"Fuzanwenn"},"content":"        // doctor","lastModifiedDate":"2022-10-11"},{"lineNumber":147,"author":{"gitId":"Fuzanwenn"},"content":"        userInput \u003d targetIndex.getOneBased() + DOCTOR_DESC_7;","lastModifiedDate":"2022-10-11"},{"lineNumber":148,"author":{"gitId":"Fuzanwenn"},"content":"        descriptor \u003d new EditAppointmentDescriptorBuilder().withDoctor(VALID_DOCTOR_CAITIE).build();","lastModifiedDate":"2022-10-11"},{"lineNumber":149,"author":{"gitId":"Fuzanwenn"},"content":"        expectedCommand \u003d new EditAppointmentCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-11"},{"lineNumber":150,"author":{"gitId":"Fuzanwenn"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-11"},{"lineNumber":151,"author":{"gitId":"Fuzanwenn"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":152,"author":{"gitId":"Fuzanwenn"},"content":"        // medical test","lastModifiedDate":"2022-10-11"},{"lineNumber":153,"author":{"gitId":"Fuzanwenn"},"content":"        userInput \u003d targetIndex.getOneBased() + MEDICAL_TEST_DESC_7;","lastModifiedDate":"2022-10-11"},{"lineNumber":154,"author":{"gitId":"Fuzanwenn"},"content":"        descriptor \u003d new EditAppointmentDescriptorBuilder().withMedicalTest(VALID_MEDICAL_TEST_7).build();","lastModifiedDate":"2022-10-11"},{"lineNumber":155,"author":{"gitId":"Fuzanwenn"},"content":"        expectedCommand \u003d new EditAppointmentCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-11"},{"lineNumber":156,"author":{"gitId":"Fuzanwenn"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-11"},{"lineNumber":157,"author":{"gitId":"Fuzanwenn"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":158,"author":{"gitId":"Fuzanwenn"},"content":"        // slot","lastModifiedDate":"2022-10-11"},{"lineNumber":159,"author":{"gitId":"Fuzanwenn"},"content":"        userInput \u003d targetIndex.getOneBased() + SLOT_DESC_7;","lastModifiedDate":"2022-10-11"},{"lineNumber":160,"author":{"gitId":"Fuzanwenn"},"content":"        descriptor \u003d new EditAppointmentDescriptorBuilder().withSlot(VALID_SLOT_7).build();","lastModifiedDate":"2022-10-11"},{"lineNumber":161,"author":{"gitId":"Fuzanwenn"},"content":"        expectedCommand \u003d new EditAppointmentCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-11"},{"lineNumber":162,"author":{"gitId":"Fuzanwenn"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-11"},{"lineNumber":163,"author":{"gitId":"Fuzanwenn"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":164,"author":{"gitId":"Fuzanwenn"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":165,"author":{"gitId":"Fuzanwenn"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":166,"author":{"gitId":"Fuzanwenn"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2022-10-11"},{"lineNumber":167,"author":{"gitId":"Fuzanwenn"},"content":"        Index targetIndex \u003d INDEX_FIRST_APPOINTMENT;","lastModifiedDate":"2022-10-11"},{"lineNumber":168,"author":{"gitId":"Fuzanwenn"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY + NAME_DESC_AMY + NAME_DESC_BOB","lastModifiedDate":"2022-10-11"},{"lineNumber":169,"author":{"gitId":"Fuzanwenn"},"content":"                + DOCTOR_DESC_8 + DOCTOR_DESC_7 + MEDICAL_TEST_DESC_8 + MEDICAL_TEST_DESC_7","lastModifiedDate":"2022-10-11"},{"lineNumber":170,"author":{"gitId":"Fuzanwenn"},"content":"                + SLOT_DESC_8 + SLOT_DESC_7;","lastModifiedDate":"2022-10-11"},{"lineNumber":171,"author":{"gitId":"Fuzanwenn"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":172,"author":{"gitId":"Fuzanwenn"},"content":"        EditAppointmentCommand.EditAppointmentDescriptor descriptor \u003d new EditAppointmentDescriptorBuilder()","lastModifiedDate":"2022-10-11"},{"lineNumber":173,"author":{"gitId":"Fuzanwenn"},"content":"                .withName(VALID_NAME_BOB).withDoctor(VALID_DOCTOR_CAITIE)","lastModifiedDate":"2022-10-11"},{"lineNumber":174,"author":{"gitId":"Fuzanwenn"},"content":"                .withMedicalTest(VALID_MEDICAL_TEST_7).withSlot(VALID_SLOT_7).build();","lastModifiedDate":"2022-10-11"},{"lineNumber":175,"author":{"gitId":"Fuzanwenn"},"content":"        EditAppointmentCommand expectedCommand \u003d new EditAppointmentCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-11"},{"lineNumber":176,"author":{"gitId":"Fuzanwenn"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":177,"author":{"gitId":"Fuzanwenn"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-11"},{"lineNumber":178,"author":{"gitId":"Fuzanwenn"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":179,"author":{"gitId":"Fuzanwenn"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":180,"author":{"gitId":"Fuzanwenn"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":181,"author":{"gitId":"Fuzanwenn"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2022-10-11"},{"lineNumber":182,"author":{"gitId":"Fuzanwenn"},"content":"        // no other valid values specified","lastModifiedDate":"2022-10-11"},{"lineNumber":183,"author":{"gitId":"Fuzanwenn"},"content":"        Index targetIndex \u003d INDEX_FIRST_APPOINTMENT;","lastModifiedDate":"2022-10-11"},{"lineNumber":184,"author":{"gitId":"Fuzanwenn"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_NAME_DESC + NAME_DESC_AMY;","lastModifiedDate":"2022-10-11"},{"lineNumber":185,"author":{"gitId":"Fuzanwenn"},"content":"        EditAppointmentCommand.EditAppointmentDescriptor descriptor \u003d","lastModifiedDate":"2022-10-11"},{"lineNumber":186,"author":{"gitId":"Fuzanwenn"},"content":"                new EditAppointmentDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2022-10-11"},{"lineNumber":187,"author":{"gitId":"Fuzanwenn"},"content":"        EditAppointmentCommand expectedCommand \u003d new EditAppointmentCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-11"},{"lineNumber":188,"author":{"gitId":"Fuzanwenn"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-11"},{"lineNumber":189,"author":{"gitId":"Fuzanwenn"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":190,"author":{"gitId":"Fuzanwenn"},"content":"        // other valid values specified","lastModifiedDate":"2022-10-11"},{"lineNumber":191,"author":{"gitId":"Fuzanwenn"},"content":"        userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY + INVALID_DOCTOR_DESC + MEDICAL_TEST_DESC_7","lastModifiedDate":"2022-10-11"},{"lineNumber":192,"author":{"gitId":"Fuzanwenn"},"content":"                + DOCTOR_DESC_7;","lastModifiedDate":"2022-10-11"},{"lineNumber":193,"author":{"gitId":"Fuzanwenn"},"content":"        descriptor \u003d new EditAppointmentDescriptorBuilder().withName(VALID_NAME_AMY).withDoctor(VALID_DOCTOR_CAITIE)","lastModifiedDate":"2022-10-11"},{"lineNumber":194,"author":{"gitId":"Fuzanwenn"},"content":"                .withMedicalTest(VALID_MEDICAL_TEST_7).build();","lastModifiedDate":"2022-10-11"},{"lineNumber":195,"author":{"gitId":"Fuzanwenn"},"content":"        expectedCommand \u003d new EditAppointmentCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-11"},{"lineNumber":196,"author":{"gitId":"Fuzanwenn"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-11"},{"lineNumber":197,"author":{"gitId":"Fuzanwenn"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":198,"author":{"gitId":"Fuzanwenn"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"Fuzanwenn":197,"TZL0":1}},{"path":"src/test/java/seedu/address/logic/parser/EditPatientCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"TZL0"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PATIENT;","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"TZL0"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PATIENT;","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"TZL0"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PATIENT;","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"TZL0"},"content":"import seedu.address.logic.commands.EditPatientCommand;","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"TZL0"},"content":"import seedu.address.logic.commands.EditPatientCommand.EditPatientDescriptor;","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.Address;","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.Email;","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.Name;","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.Phone;","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"TZL0"},"content":"import seedu.address.testutil.EditPatientDescriptorBuilder;","lastModifiedDate":"2022-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"guokweijie"},"content":"public class EditPatientCommandParserTest {","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"TZL0"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditPatientCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"guokweijie"},"content":"    private EditPatientCommandParser parser \u003d new EditPatientCommandParser();","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"TZL0"},"content":"        assertParseFailure(parser, \"1\", EditPatientCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":87,"author":{"gitId":"TZL0"},"content":"        assertParseFailure(parser, \"1\"","lastModifiedDate":"2022-10-16"},{"lineNumber":88,"author":{"gitId":"TZL0"},"content":"                + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2022-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"TZL0"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Patient} being edited,","lastModifiedDate":"2022-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":100,"author":{"gitId":"TZL0"},"content":"        assertParseFailure(parser, \"1\"","lastModifiedDate":"2022-10-16"},{"lineNumber":101,"author":{"gitId":"TZL0"},"content":"                + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-16"},{"lineNumber":102,"author":{"gitId":"TZL0"},"content":"        assertParseFailure(parser, \"1\"","lastModifiedDate":"2022-10-16"},{"lineNumber":103,"author":{"gitId":"TZL0"},"content":"                + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-16"},{"lineNumber":104,"author":{"gitId":"TZL0"},"content":"        assertParseFailure(parser, \"1\"","lastModifiedDate":"2022-10-16"},{"lineNumber":105,"author":{"gitId":"TZL0"},"content":"                + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"TZL0"},"content":"        assertParseFailure(parser, \"1\"","lastModifiedDate":"2022-10-16"},{"lineNumber":109,"author":{"gitId":"TZL0"},"content":"                        + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2022-10-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":115,"author":{"gitId":"TZL0"},"content":"        Index targetIndex \u003d INDEX_SECOND_PATIENT;","lastModifiedDate":"2022-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2017-06-06"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"TZL0"},"content":"        EditPatientCommand.EditPatientDescriptor descriptor \u003d","lastModifiedDate":"2022-10-16"},{"lineNumber":120,"author":{"gitId":"TZL0"},"content":"                new EditPatientDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2022-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"TZL0"},"content":"        EditPatientCommand expectedCommand \u003d new EditPatientCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":130,"author":{"gitId":"TZL0"},"content":"        Index targetIndex \u003d INDEX_FIRST_PATIENT;","lastModifiedDate":"2022-10-16"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"TZL0"},"content":"        EditPatientCommand.EditPatientDescriptor descriptor \u003d","lastModifiedDate":"2022-10-16"},{"lineNumber":134,"author":{"gitId":"TZL0"},"content":"                new EditPatientDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-10-16"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"TZL0"},"content":"        EditPatientCommand expectedCommand \u003d new EditPatientCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"TZL0"},"content":"        Index targetIndex \u003d INDEX_THIRD_PATIENT;","lastModifiedDate":"2022-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":146,"author":{"gitId":"TZL0"},"content":"        EditPatientDescriptor descriptor \u003d new EditPatientDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2022-10-16"},{"lineNumber":147,"author":{"gitId":"TZL0"},"content":"        EditPatientCommand expectedCommand \u003d new EditPatientCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":152,"author":{"gitId":"TZL0"},"content":"        descriptor \u003d new EditPatientDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2022-10-16"},{"lineNumber":153,"author":{"gitId":"TZL0"},"content":"        expectedCommand \u003d new EditPatientCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-16"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":158,"author":{"gitId":"TZL0"},"content":"        descriptor \u003d new EditPatientDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2022-10-16"},{"lineNumber":159,"author":{"gitId":"TZL0"},"content":"        expectedCommand \u003d new EditPatientCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-16"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":164,"author":{"gitId":"TZL0"},"content":"        descriptor \u003d new EditPatientDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2022-10-16"},{"lineNumber":165,"author":{"gitId":"TZL0"},"content":"        expectedCommand \u003d new EditPatientCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-16"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":170,"author":{"gitId":"TZL0"},"content":"        descriptor \u003d new EditPatientDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-16"},{"lineNumber":171,"author":{"gitId":"TZL0"},"content":"        expectedCommand \u003d new EditPatientCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-16"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":177,"author":{"gitId":"TZL0"},"content":"        Index targetIndex \u003d INDEX_FIRST_PATIENT;","lastModifiedDate":"2022-10-16"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2017-05-25"},{"lineNumber":179,"author":{"gitId":"-"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2017-05-25"},{"lineNumber":180,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2017-05-25"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"TZL0"},"content":"        EditPatientCommand.EditPatientDescriptor descriptor \u003d","lastModifiedDate":"2022-10-16"},{"lineNumber":183,"author":{"gitId":"TZL0"},"content":"                new EditPatientDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-10-16"},{"lineNumber":184,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2017-05-04"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":186,"author":{"gitId":"TZL0"},"content":"        EditPatientCommand expectedCommand \u003d new EditPatientCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-16"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":194,"author":{"gitId":"TZL0"},"content":"        Index targetIndex \u003d INDEX_FIRST_PATIENT;","lastModifiedDate":"2022-10-16"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":196,"author":{"gitId":"TZL0"},"content":"        EditPatientCommand.EditPatientDescriptor descriptor \u003d","lastModifiedDate":"2022-10-16"},{"lineNumber":197,"author":{"gitId":"TZL0"},"content":"                new EditPatientDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-10-16"},{"lineNumber":198,"author":{"gitId":"TZL0"},"content":"        EditPatientCommand expectedCommand \u003d new EditPatientCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-16"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-05-25"},{"lineNumber":203,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":204,"author":{"gitId":"TZL0"},"content":"        descriptor \u003d new EditPatientDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2022-10-16"},{"lineNumber":205,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"TZL0"},"content":"        expectedCommand \u003d new EditPatientCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-16"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":212,"author":{"gitId":"TZL0"},"content":"        Index targetIndex \u003d INDEX_THIRD_PATIENT;","lastModifiedDate":"2022-10-16"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":215,"author":{"gitId":"TZL0"},"content":"        EditPatientCommand.EditPatientDescriptor descriptor \u003d new EditPatientDescriptorBuilder().withTags().build();","lastModifiedDate":"2022-10-16"},{"lineNumber":216,"author":{"gitId":"TZL0"},"content":"        EditPatientCommand expectedCommand \u003d new EditPatientCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-16"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":220,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"guokweijie":2,"TZL0":55,"-":163}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"TZL0"},"content":"import seedu.address.logic.commands.FilterNameCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"wadia82"},"content":"import seedu.address.model.patient.NameContainsKeywordsPredicatePatient;","lastModifiedDate":"2022-10-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"TZL0"},"content":"    private FilterNameCommandParser parser \u003d new FilterNameCommandParser();","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"guokweijie"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"TZL0"},"content":"                FilterNameCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"TZL0"},"content":"        FilterNameCommand expectedFindCommand \u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"wadia82"},"content":"                new FilterNameCommand(new NameContainsKeywordsPredicatePatient(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"wadia82":2,"guokweijie":1,"TZL0":4,"-":28}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"TZL0"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PATIENT;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.Address;","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.Email;","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.Name;","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.Phone;","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"TZL0"},"content":"        assertEquals(INDEX_FIRST_PATIENT, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"TZL0"},"content":"        assertEquals(INDEX_FIRST_PATIENT, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2022-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"TZL0":7,"-":189}},{"path":"src/test/java/seedu/address/logic/parser/RemarkCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2022-09-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-09-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-09-13"},{"lineNumber":6,"author":{"gitId":"TZL0"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PATIENT;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-09-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-09-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.RemarkCommand;","lastModifiedDate":"2022-09-13"},{"lineNumber":12,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.Remark;","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class RemarkCommandParserTest {","lastModifiedDate":"2022-09-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private RemarkCommandParser parser \u003d new RemarkCommandParser();","lastModifiedDate":"2022-09-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final String nonEmptyRemark \u003d \"Some remark.\";","lastModifiedDate":"2022-09-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-09-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void parse_indexSpecified_success() {","lastModifiedDate":"2022-09-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // have remark","lastModifiedDate":"2022-09-13"},{"lineNumber":20,"author":{"gitId":"TZL0"},"content":"        Index targetIndex \u003d INDEX_FIRST_PATIENT;","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + \" \" + PREFIX_REMARK + nonEmptyRemark;","lastModifiedDate":"2022-09-13"},{"lineNumber":22,"author":{"gitId":"TZL0"},"content":"        RemarkCommand expectedCommand \u003d new RemarkCommand(INDEX_FIRST_PATIENT, new Remark(nonEmptyRemark));","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-09-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // no remark","lastModifiedDate":"2022-09-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + \" \" + PREFIX_REMARK;","lastModifiedDate":"2022-09-13"},{"lineNumber":27,"author":{"gitId":"TZL0"},"content":"        expectedCommand \u003d new RemarkCommand(INDEX_FIRST_PATIENT, new Remark(\"\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-09-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-09-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void parse_missingCompulsoryField_failure() {","lastModifiedDate":"2022-09-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemarkCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-09-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // no parameters","lastModifiedDate":"2022-09-13"},{"lineNumber":35,"author":{"gitId":"TZL0"},"content":"        assertParseFailure(parser, RemarkCommand.COMMAND_WORD.toString(), expectedMessage);","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // no index","lastModifiedDate":"2022-09-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, RemarkCommand.COMMAND_WORD + \" \" + nonEmptyRemark, expectedMessage);","lastModifiedDate":"2022-09-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-09-13"}],"authorContributionMap":{"TZL0":6,"-":33}},{"path":"src/test/java/seedu/address/logic/parser/SelectPatientCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TZL0"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-17"},{"lineNumber":2,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":3,"author":{"gitId":"TZL0"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-17"},{"lineNumber":4,"author":{"gitId":"TZL0"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-17"},{"lineNumber":5,"author":{"gitId":"TZL0"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-17"},{"lineNumber":6,"author":{"gitId":"TZL0"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PATIENT;","lastModifiedDate":"2022-10-17"},{"lineNumber":7,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":8,"author":{"gitId":"TZL0"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-17"},{"lineNumber":9,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":10,"author":{"gitId":"TZL0"},"content":"import seedu.address.logic.commands.SelectPatientCommand;","lastModifiedDate":"2022-10-17"},{"lineNumber":11,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":12,"author":{"gitId":"TZL0"},"content":"/**","lastModifiedDate":"2022-10-17"},{"lineNumber":13,"author":{"gitId":"TZL0"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2022-10-17"},{"lineNumber":14,"author":{"gitId":"TZL0"},"content":" * outside of the SelectPatientCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2022-10-17"},{"lineNumber":15,"author":{"gitId":"TZL0"},"content":" * same path through the SelectPatientCommand, and therefore we test only one of them.","lastModifiedDate":"2022-10-17"},{"lineNumber":16,"author":{"gitId":"TZL0"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2022-10-17"},{"lineNumber":17,"author":{"gitId":"TZL0"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2022-10-17"},{"lineNumber":18,"author":{"gitId":"TZL0"},"content":" */","lastModifiedDate":"2022-10-17"},{"lineNumber":19,"author":{"gitId":"TZL0"},"content":"public class SelectPatientCommandParserTest {","lastModifiedDate":"2022-10-17"},{"lineNumber":20,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":21,"author":{"gitId":"TZL0"},"content":"    private SelectPatientCommandParser parser \u003d new SelectPatientCommandParser();","lastModifiedDate":"2022-10-17"},{"lineNumber":22,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":23,"author":{"gitId":"TZL0"},"content":"    @Test","lastModifiedDate":"2022-10-17"},{"lineNumber":24,"author":{"gitId":"TZL0"},"content":"    public void parse_validArgs_returnsSelectCommand() {","lastModifiedDate":"2022-10-17"},{"lineNumber":25,"author":{"gitId":"TZL0"},"content":"        assertParseSuccess(parser, \"1\", new SelectPatientCommand(INDEX_FIRST_PATIENT));","lastModifiedDate":"2022-10-17"},{"lineNumber":26,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":27,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":28,"author":{"gitId":"TZL0"},"content":"    @Test","lastModifiedDate":"2022-10-17"},{"lineNumber":29,"author":{"gitId":"TZL0"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2022-10-17"},{"lineNumber":30,"author":{"gitId":"TZL0"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-17"},{"lineNumber":31,"author":{"gitId":"TZL0"},"content":"                SelectPatientCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-17"},{"lineNumber":32,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":33,"author":{"gitId":"TZL0"},"content":"}","lastModifiedDate":"2022-10-17"}],"authorContributionMap":{"TZL0":33}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"TZL0"},"content":"import static seedu.address.testutil.TypicalAppointments.APPOINTMENT_1;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"TZL0"},"content":"import static seedu.address.testutil.TypicalPatients.ALICE;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"TZL0"},"content":"import static seedu.address.testutil.TypicalPatients.getTypicalPatientsAddressBook;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"TZL0"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"TZL0"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":24,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.appointment.exceptions.DuplicateAppointmentException;","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.Name;","lastModifiedDate":"2022-10-17"},{"lineNumber":27,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.exceptions.DuplicatePatientException;","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"TZL0"},"content":"import seedu.address.testutil.AppointmentBuilder;","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"TZL0"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"TZL0"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPatientList());","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"TZL0"},"content":"        assertEquals(Collections.emptyList(), addressBook.getAppointmentList());","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"TZL0"},"content":"        AddressBook newData \u003d getTypicalPatientsAddressBook();","lastModifiedDate":"2022-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"TZL0"},"content":"    public void resetData_withDuplicatePatients_throwsDuplicatePatientException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":56,"author":{"gitId":"TZL0"},"content":"        // Two patients with the same identity fields","lastModifiedDate":"2022-10-16"},{"lineNumber":57,"author":{"gitId":"TZL0"},"content":"        Patient editedAlice \u003d new PatientBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"guokweijie"},"content":"        List\u003cPatient\u003e newPatients \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"guokweijie"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPatients, null);","lastModifiedDate":"2022-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":62,"author":{"gitId":"TZL0"},"content":"        assertThrows(DuplicatePatientException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2022-10-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"TZL0"},"content":"    public void resetData_withDuplicateAppointments_throwsDuplicateAppointmentException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"TZL0"},"content":"        // Two patients with the same identity fields","lastModifiedDate":"2022-10-16"},{"lineNumber":68,"author":{"gitId":"TZL0"},"content":"        Patient editedAlice \u003d new PatientBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-16"},{"lineNumber":69,"author":{"gitId":"TZL0"},"content":"                .build();","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"guokweijie"},"content":"        List\u003cPatient\u003e newPatients \u003d Arrays.asList(ALICE);","lastModifiedDate":"2022-10-13"},{"lineNumber":71,"author":{"gitId":"TZL0"},"content":"        List\u003cAppointment\u003e appointments \u003d Arrays.asList(","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"TZL0"},"content":"                APPOINTMENT_1, new AppointmentBuilder(APPOINTMENT_1).build());","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"guokweijie"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPatients, appointments);","lastModifiedDate":"2022-10-13"},{"lineNumber":74,"author":{"gitId":"TZL0"},"content":"        assertThrows(DuplicateAppointmentException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"TZL0"},"content":"    public void hasPatient_nullPatient_throwsNullPointerException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":79,"author":{"gitId":"TZL0"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPatient((Patient) null));","lastModifiedDate":"2022-10-17"},{"lineNumber":80,"author":{"gitId":"TZL0"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPatient((Name) null));","lastModifiedDate":"2022-10-17"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"TZL0"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"TZL0"},"content":"    public void hasAppointment_nullAppointment_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"TZL0"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasAppointment(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"TZL0"},"content":"    public void hasPatientPatient_patientNotInAddressBook_returnsFalse() {","lastModifiedDate":"2022-10-17"},{"lineNumber":90,"author":{"gitId":"TZL0"},"content":"        assertFalse(addressBook.hasPatient(ALICE));","lastModifiedDate":"2022-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"TZL0"},"content":"    @Test","lastModifiedDate":"2022-10-17"},{"lineNumber":94,"author":{"gitId":"TZL0"},"content":"    public void hasPatientName_patientNotInAddressBook_returnsFalse() {","lastModifiedDate":"2022-10-17"},{"lineNumber":95,"author":{"gitId":"TZL0"},"content":"        assertFalse(addressBook.hasPatient(ALICE.getName()));","lastModifiedDate":"2022-10-17"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":99,"author":{"gitId":"TZL0"},"content":"    public void hasAppointment_appointmentNotInAddressBook_returnsFalse() {","lastModifiedDate":"2022-10-10"},{"lineNumber":100,"author":{"gitId":"TZL0"},"content":"        assertFalse(addressBook.hasAppointment(APPOINTMENT_1));","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"TZL0"},"content":"    public void hasPatientPatient_patientInAddressBook_returnsTrue() {","lastModifiedDate":"2022-10-17"},{"lineNumber":105,"author":{"gitId":"TZL0"},"content":"        addressBook.addPatient(ALICE);","lastModifiedDate":"2022-10-16"},{"lineNumber":106,"author":{"gitId":"TZL0"},"content":"        assertTrue(addressBook.hasPatient(ALICE));","lastModifiedDate":"2022-10-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-17"},{"lineNumber":110,"author":{"gitId":"TZL0"},"content":"    public void hasPatientName_patientInAddressBook_returnsTrue() {","lastModifiedDate":"2022-10-17"},{"lineNumber":111,"author":{"gitId":"TZL0"},"content":"        addressBook.addPatient(ALICE);","lastModifiedDate":"2022-10-17"},{"lineNumber":112,"author":{"gitId":"TZL0"},"content":"        assertTrue(addressBook.hasPatient(ALICE.getName()));","lastModifiedDate":"2022-10-17"},{"lineNumber":113,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":114,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":115,"author":{"gitId":"TZL0"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":116,"author":{"gitId":"TZL0"},"content":"    public void hasAppointment_appointmentInAddressBook_returnsTrue() {","lastModifiedDate":"2022-10-10"},{"lineNumber":117,"author":{"gitId":"TZL0"},"content":"        addressBook.addAppointment(APPOINTMENT_1);","lastModifiedDate":"2022-10-10"},{"lineNumber":118,"author":{"gitId":"TZL0"},"content":"        assertTrue(addressBook.hasAppointment(APPOINTMENT_1));","lastModifiedDate":"2022-10-10"},{"lineNumber":119,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":120,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":122,"author":{"gitId":"TZL0"},"content":"    public void hasPatient_patientWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2022-10-16"},{"lineNumber":123,"author":{"gitId":"TZL0"},"content":"        addressBook.addPatient(ALICE);","lastModifiedDate":"2022-10-16"},{"lineNumber":124,"author":{"gitId":"TZL0"},"content":"        Patient editedAlice \u003d new PatientBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":126,"author":{"gitId":"TZL0"},"content":"        assertTrue(addressBook.hasPatient(editedAlice));","lastModifiedDate":"2022-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":130,"author":{"gitId":"TZL0"},"content":"    public void getPatientList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":131,"author":{"gitId":"TZL0"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPatientList().remove(0));","lastModifiedDate":"2022-10-16"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":134,"author":{"gitId":"TZL0"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":135,"author":{"gitId":"TZL0"},"content":"    public void getAppointmentList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":136,"author":{"gitId":"TZL0"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getAppointmentList().remove(0));","lastModifiedDate":"2022-10-10"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":140,"author":{"gitId":"TZL0"},"content":"     * A stub ReadOnlyAddressBook whose patients list can violate interface constraints.","lastModifiedDate":"2022-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":143,"author":{"gitId":"guokweijie"},"content":"        private final ObservableList\u003cPatient\u003e patients \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-13"},{"lineNumber":144,"author":{"gitId":"TZL0"},"content":"        private final ObservableList\u003cAppointment\u003e appointments \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":146,"author":{"gitId":"guokweijie"},"content":"        AddressBookStub(Collection\u003cPatient\u003e patients, Collection\u003cAppointment\u003e appointments) {","lastModifiedDate":"2022-10-13"},{"lineNumber":147,"author":{"gitId":"guokweijie"},"content":"            this.patients.setAll(patients);","lastModifiedDate":"2022-10-13"},{"lineNumber":148,"author":{"gitId":"TZL0"},"content":"            this.appointments.setAll(Optional.ofNullable(appointments).orElse(new ArrayList\u003c\u003e()));","lastModifiedDate":"2022-10-10"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":152,"author":{"gitId":"TZL0"},"content":"        public ObservableList\u003cPatient\u003e getPatientList() {","lastModifiedDate":"2022-10-16"},{"lineNumber":153,"author":{"gitId":"guokweijie"},"content":"            return patients;","lastModifiedDate":"2022-10-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":157,"author":{"gitId":"TZL0"},"content":"        public ObservableList\u003cAppointment\u003e getAppointmentList() {","lastModifiedDate":"2022-10-06"},{"lineNumber":158,"author":{"gitId":"TZL0"},"content":"            return appointments;","lastModifiedDate":"2022-10-06"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"guokweijie":8,"TZL0":72,"-":82}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"TZL0"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PATIENTS;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"TZL0"},"content":"import static seedu.address.testutil.TypicalPatients.ALICE;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"TZL0"},"content":"import static seedu.address.testutil.TypicalPatients.BENSON;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.Name;","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"wadia82"},"content":"import seedu.address.model.patient.NameContainsKeywordsPredicatePatient;","lastModifiedDate":"2022-10-17"},{"lineNumber":20,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"TZL0"},"content":"    public void hasPatient_nullPatient_throwsNullPointerException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":79,"author":{"gitId":"TZL0"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPatient((Patient) null));","lastModifiedDate":"2022-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-07"},{"lineNumber":83,"author":{"gitId":"TZL0"},"content":"    public void hasPatient_nullName_throwsNullPointerException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":84,"author":{"gitId":"TZL0"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPatient((Name) null));","lastModifiedDate":"2022-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"TZL0"},"content":"    public void hasPatient_patientNotInAddressBook_returnsFalse() {","lastModifiedDate":"2022-10-16"},{"lineNumber":89,"author":{"gitId":"TZL0"},"content":"        assertFalse(modelManager.hasPatient(ALICE));","lastModifiedDate":"2022-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"TZL0"},"content":"    public void hasPatient_patientInAddressBook_returnsTrue() {","lastModifiedDate":"2022-10-16"},{"lineNumber":94,"author":{"gitId":"TZL0"},"content":"        modelManager.addPatient(ALICE);","lastModifiedDate":"2022-10-16"},{"lineNumber":95,"author":{"gitId":"TZL0"},"content":"        assertTrue(modelManager.hasPatient(ALICE));","lastModifiedDate":"2022-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":99,"author":{"gitId":"TZL0"},"content":"    public void getFilteredPatientList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":100,"author":{"gitId":"wadia82"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPatientList().remove(0));","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":105,"author":{"gitId":"TZL0"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPatient(ALICE).withPatient(BENSON).build();","lastModifiedDate":"2022-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":128,"author":{"gitId":"wadia82"},"content":"        modelManager.updateFilteredPatientList(new NameContainsKeywordsPredicatePatient(Arrays.asList(keywords)));","lastModifiedDate":"2022-10-17"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":132,"author":{"gitId":"TZL0"},"content":"        modelManager.updateFilteredPatientList(PREDICATE_SHOW_ALL_PATIENTS);","lastModifiedDate":"2022-10-16"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"wadia82":3,"TZL0":17,"-":119}},{"path":"src/test/java/seedu/address/model/appointment/AppointmentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TZL0"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"TZL0"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"TZL0"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"TZL0"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DOCTOR_DECKER;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"TZL0"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MEDICAL_TEST_7;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"TZL0"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MEDICAL_TEST_8;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"TZL0"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"TZL0"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SLOT_7;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"TZL0"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SLOT_8;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"TZL0"},"content":"import static seedu.address.testutil.TypicalAppointments.APPOINTMENT_1;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"TZL0"},"content":"import static seedu.address.testutil.TypicalAppointments.APPOINTMENT_2;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"TZL0"},"content":"import static seedu.address.testutil.TypicalAppointments.APPOINTMENT_3;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"TZL0"},"content":"import static seedu.address.testutil.TypicalAppointments.APPOINTMENT_4;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"TZL0"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"TZL0"},"content":"import seedu.address.testutil.AppointmentBuilder;","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"TZL0"},"content":"public class AppointmentTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"TZL0"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"TZL0"},"content":"    public void isSameAppointment() {","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"TZL0"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"TZL0"},"content":"        assertTrue(APPOINTMENT_1.isSameAppointment(APPOINTMENT_1));","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"TZL0"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"TZL0"},"content":"        assertFalse(APPOINTMENT_1.isSameAppointment(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"TZL0"},"content":"        // same name, all other attributes different -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"TZL0"},"content":"        Appointment editedAppointment1 \u003d new AppointmentBuilder(APPOINTMENT_1).withMedicalTest(VALID_MEDICAL_TEST_8)","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"TZL0"},"content":"                .withSlot(VALID_SLOT_8).withDoctor(VALID_DOCTOR_DECKER).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"TZL0"},"content":"        assertFalse(APPOINTMENT_1.isSameAppointment(editedAppointment1));","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"TZL0"},"content":"        // all attributes same -\u003e returns true","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"TZL0"},"content":"        editedAppointment1 \u003d new AppointmentBuilder().withName(APPOINTMENT_1.getName().toString())","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"TZL0"},"content":"                .withMedicalTest(APPOINTMENT_1.getMedicalTest().toString())","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"TZL0"},"content":"                .withSlot(APPOINTMENT_1.getSlot().toString())","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"TZL0"},"content":"                .withDoctor(APPOINTMENT_1.getDoctor().toString()).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"TZL0"},"content":"        assertTrue(APPOINTMENT_1.isSameAppointment(editedAppointment1));","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"TZL0"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"TZL0"},"content":"        String testWithTrailingSpaces \u003d APPOINTMENT_1.getName().toString() + \" \";","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"TZL0"},"content":"        editedAppointment1 \u003d new AppointmentBuilder(APPOINTMENT_1).withName(testWithTrailingSpaces).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"TZL0"},"content":"        assertFalse(APPOINTMENT_1.isSameAppointment(editedAppointment1));","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"TZL0"},"content":"        // medical test has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"TZL0"},"content":"        testWithTrailingSpaces \u003d APPOINTMENT_1.getMedicalTest().toString() + \" \";","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"TZL0"},"content":"        editedAppointment1 \u003d new AppointmentBuilder(APPOINTMENT_1).withMedicalTest(testWithTrailingSpaces).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"TZL0"},"content":"        assertFalse(APPOINTMENT_1.isSameAppointment(editedAppointment1));","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"TZL0"},"content":"        // doctor has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"TZL0"},"content":"        testWithTrailingSpaces \u003d APPOINTMENT_1.getDoctor().toString() + \" \";","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"TZL0"},"content":"        editedAppointment1 \u003d new AppointmentBuilder(APPOINTMENT_1).withDoctor(testWithTrailingSpaces).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"TZL0"},"content":"        assertFalse(APPOINTMENT_1.isSameAppointment(editedAppointment1));","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"TZL0"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"TZL0"},"content":"    public void equals() {","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"TZL0"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"TZL0"},"content":"        Appointment appointmentOneCopy \u003d new AppointmentBuilder(APPOINTMENT_1).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"TZL0"},"content":"        assertTrue(APPOINTMENT_1.isSameAppointment(appointmentOneCopy));","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"TZL0"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"TZL0"},"content":"        assertTrue(APPOINTMENT_2.equals(APPOINTMENT_2));","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"TZL0"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"TZL0"},"content":"        assertFalse(APPOINTMENT_3.equals(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"TZL0"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"TZL0"},"content":"        assertFalse(APPOINTMENT_4.equals(5));","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"TZL0"},"content":"        // different appointments -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"TZL0"},"content":"        assertFalse(APPOINTMENT_1.equals(APPOINTMENT_2));","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"TZL0"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"TZL0"},"content":"        Appointment editedAppointment1 \u003d new AppointmentBuilder(APPOINTMENT_1).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"TZL0"},"content":"        assertFalse(APPOINTMENT_1.equals(editedAppointment1));","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"TZL0"},"content":"        // different medical test -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"TZL0"},"content":"        editedAppointment1 \u003d new AppointmentBuilder(APPOINTMENT_1).withMedicalTest(VALID_MEDICAL_TEST_7).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"TZL0"},"content":"        assertFalse(APPOINTMENT_1.equals(editedAppointment1));","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"TZL0"},"content":"        // different slot -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"TZL0"},"content":"        editedAppointment1 \u003d new AppointmentBuilder(APPOINTMENT_1).withSlot(VALID_SLOT_7).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"TZL0"},"content":"        assertFalse(APPOINTMENT_1.equals(editedAppointment1));","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"TZL0"},"content":"        // different doctor -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"TZL0"},"content":"        editedAppointment1 \u003d new AppointmentBuilder(APPOINTMENT_1).withMedicalTest(VALID_DOCTOR_DECKER).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"TZL0"},"content":"        assertFalse(APPOINTMENT_1.equals(editedAppointment1));","lastModifiedDate":"2022-10-10"},{"lineNumber":91,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":92,"author":{"gitId":"TZL0"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"TZL0":92}},{"path":"src/test/java/seedu/address/model/appointment/DoctorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TZL0"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"TZL0"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"TZL0"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"TZL0"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"TZL0"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"TZL0"},"content":"public class DoctorTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"TZL0"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"TZL0"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"TZL0"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Doctor(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"TZL0"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"TZL0"},"content":"    public void constructor_invalidDoctor_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"TZL0"},"content":"        String invalidDoctor \u003d \"\";","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"TZL0"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Doctor(invalidDoctor));","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"TZL0"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"TZL0"},"content":"    public void isValidDoctor() {","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"TZL0"},"content":"        // null doctors","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"TZL0"},"content":"        assertThrows(NullPointerException.class, () -\u003e Doctor.isValidDoctorName(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"TZL0"},"content":"        // invalid doctors","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"TZL0"},"content":"        assertFalse(Doctor.isValidDoctorName(\"\")); // empty string","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"TZL0"},"content":"        assertFalse(Doctor.isValidDoctorName(\" \")); // spaces only","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"TZL0"},"content":"        assertFalse(Doctor.isValidDoctorName(\"-\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"TZL0"},"content":"        assertFalse(Doctor.isValidDoctorName(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"TZL0"},"content":"        assertFalse(Doctor.isValidDoctorName(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"TZL0"},"content":"        assertFalse(Doctor.isValidDoctorName(\"Lee, HL\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"TZL0"},"content":"        // valid doctors","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"TZL0"},"content":"        assertTrue(Doctor.isValidDoctorName(\"Wong123\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"TZL0"},"content":"        assertTrue(Doctor.isValidDoctorName(\"Lee HL\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"TZL0"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"TZL0"},"content":"    public void equals() {","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"TZL0"},"content":"        Doctor d1 \u003d new Doctor(\"A\");","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"TZL0"},"content":"        Doctor d2 \u003d new Doctor(\"B\");","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"TZL0"},"content":"        Doctor d3 \u003d new Doctor(\"A\");","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"TZL0"},"content":"        assertTrue(d1.equals(d1));","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"TZL0"},"content":"        assertTrue(d1.equals(d3));","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"TZL0"},"content":"        assertTrue(d3.equals(d1));","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"TZL0"},"content":"        assertFalse(d2.equals(d1));","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"TZL0"},"content":"        assertFalse(d3.equals(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"TZL0"},"content":"        assertFalse(d3.equals(\"A\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"TZL0"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"TZL0"},"content":"    public void hashCodeTest() {","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"TZL0"},"content":"        Doctor d1 \u003d new Doctor(\"A\");","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"TZL0"},"content":"        Doctor d2 \u003d new Doctor(\"B\");","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"TZL0"},"content":"        Doctor d3 \u003d new Doctor(\"A\");","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"TZL0"},"content":"        assertTrue(d1.hashCode() \u003d\u003d d1.hashCode());","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"TZL0"},"content":"        assertFalse(d1.hashCode() \u003d\u003d d2.hashCode());","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"TZL0"},"content":"        assertTrue(d1.hashCode() \u003d\u003d d3.hashCode());","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"TZL0"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"TZL0":62}},{"path":"src/test/java/seedu/address/model/appointment/MedicalTestTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TZL0"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"TZL0"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"TZL0"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"TZL0"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"TZL0"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"TZL0"},"content":"public class MedicalTestTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"TZL0"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"TZL0"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"TZL0"},"content":"        assertThrows(NullPointerException.class, () -\u003e new MedicalTest(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"TZL0"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"TZL0"},"content":"    public void constructor_invalidMedicalTest_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"TZL0"},"content":"        String invalidMedicalTest \u003d \"\";","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"TZL0"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new MedicalTest(invalidMedicalTest));","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"TZL0"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"TZL0"},"content":"    public void isValidMedicalTest() {","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"TZL0"},"content":"        // null medical tests","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"TZL0"},"content":"        assertThrows(NullPointerException.class, () -\u003e MedicalTest.isValidMedicalTest(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"TZL0"},"content":"        // invalid medical tests","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"TZL0"},"content":"        assertFalse(MedicalTest.isValidMedicalTest(\"\")); // empty string","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"TZL0"},"content":"        assertFalse(MedicalTest.isValidMedicalTest(\" \")); // spaces only","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"TZL0"},"content":"        // valid medical tests","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"TZL0"},"content":"        assertTrue(MedicalTest.isValidMedicalTest(\"X-ray\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"TZL0"},"content":"        assertTrue(MedicalTest.isValidMedicalTest(\"CT followed by X-ray\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"TZL0"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"TZL0"},"content":"    public void equals() {","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"TZL0"},"content":"        MedicalTest t1 \u003d new MedicalTest(\"A\");","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"TZL0"},"content":"        MedicalTest t2 \u003d new MedicalTest(\"B\");","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"TZL0"},"content":"        MedicalTest t3 \u003d new MedicalTest(\"A\");","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"TZL0"},"content":"        assertTrue(t1.equals(t1));","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"TZL0"},"content":"        assertTrue(t1.equals(t3));","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"TZL0"},"content":"        assertTrue(t3.equals(t1));","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"TZL0"},"content":"        assertFalse(t2.equals(t1));","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"TZL0"},"content":"        assertFalse(t3.equals(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"TZL0"},"content":"        assertFalse(t3.equals(\"A\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"TZL0"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"TZL0"},"content":"    public void hashCodeTest() {","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"TZL0"},"content":"        MedicalTest t1 \u003d new MedicalTest(\"A\");","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"TZL0"},"content":"        MedicalTest t2 \u003d new MedicalTest(\"B\");","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"TZL0"},"content":"        MedicalTest t3 \u003d new MedicalTest(\"A\");","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"TZL0"},"content":"        assertTrue(t1.hashCode() \u003d\u003d t1.hashCode());","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"TZL0"},"content":"        assertFalse(t1.hashCode() \u003d\u003d t2.hashCode());","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"TZL0"},"content":"        assertTrue(t1.hashCode() \u003d\u003d t3.hashCode());","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"TZL0"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"TZL0":58}},{"path":"src/test/java/seedu/address/model/appointment/NameContainsKeywordsPredicateAppointmentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wadia82"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"wadia82"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"wadia82"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"wadia82"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"wadia82"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"wadia82"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"wadia82"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"wadia82"},"content":"import java.util.List;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"wadia82"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"wadia82"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"wadia82"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"wadia82"},"content":"import seedu.address.testutil.AppointmentBuilder;","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"wadia82"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"wadia82"},"content":"public class NameContainsKeywordsPredicateAppointmentTest {","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"wadia82"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"wadia82"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"wadia82"},"content":"    public void equals() {","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"wadia82"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"wadia82"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"wadia82"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"wadia82"},"content":"        NameContainsKeywordsPredicateAppointment firstPredicate \u003d","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"wadia82"},"content":"                new NameContainsKeywordsPredicateAppointment(firstPredicateKeywordList);","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"wadia82"},"content":"        NameContainsKeywordsPredicateAppointment secondPredicate \u003d","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"wadia82"},"content":"                new NameContainsKeywordsPredicateAppointment(secondPredicateKeywordList);","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"wadia82"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"wadia82"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"wadia82"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"wadia82"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"wadia82"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"wadia82"},"content":"        NameContainsKeywordsPredicateAppointment firstPredicateCopy \u003d","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"wadia82"},"content":"                new NameContainsKeywordsPredicateAppointment(firstPredicateKeywordList);","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"wadia82"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"wadia82"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"wadia82"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"wadia82"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"wadia82"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"wadia82"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"wadia82"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"wadia82"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"wadia82"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"wadia82"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"wadia82"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"wadia82"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"wadia82"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":45,"author":{"gitId":"wadia82"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2022-10-16"},{"lineNumber":46,"author":{"gitId":"wadia82"},"content":"        // One keyword","lastModifiedDate":"2022-10-16"},{"lineNumber":47,"author":{"gitId":"wadia82"},"content":"        NameContainsKeywordsPredicateAppointment predicate \u003d","lastModifiedDate":"2022-10-16"},{"lineNumber":48,"author":{"gitId":"wadia82"},"content":"                new NameContainsKeywordsPredicateAppointment(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":49,"author":{"gitId":"wadia82"},"content":"        assertTrue(predicate.test(new AppointmentBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-10-16"},{"lineNumber":50,"author":{"gitId":"wadia82"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":51,"author":{"gitId":"wadia82"},"content":"        // Multiple keywords","lastModifiedDate":"2022-10-16"},{"lineNumber":52,"author":{"gitId":"wadia82"},"content":"        predicate \u003d new NameContainsKeywordsPredicateAppointment(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":53,"author":{"gitId":"wadia82"},"content":"        assertTrue(predicate.test(new AppointmentBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-10-16"},{"lineNumber":54,"author":{"gitId":"wadia82"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":55,"author":{"gitId":"wadia82"},"content":"        // Only one matching keyword","lastModifiedDate":"2022-10-16"},{"lineNumber":56,"author":{"gitId":"wadia82"},"content":"        predicate \u003d new NameContainsKeywordsPredicateAppointment(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":57,"author":{"gitId":"wadia82"},"content":"        assertTrue(predicate.test(new AppointmentBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"wadia82"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":59,"author":{"gitId":"wadia82"},"content":"        // Mixed-case keywords","lastModifiedDate":"2022-10-16"},{"lineNumber":60,"author":{"gitId":"wadia82"},"content":"        predicate \u003d new NameContainsKeywordsPredicateAppointment(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":61,"author":{"gitId":"wadia82"},"content":"        assertTrue(predicate.test(new AppointmentBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-10-16"},{"lineNumber":62,"author":{"gitId":"wadia82"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":63,"author":{"gitId":"wadia82"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":64,"author":{"gitId":"wadia82"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":65,"author":{"gitId":"wadia82"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2022-10-16"},{"lineNumber":66,"author":{"gitId":"wadia82"},"content":"        // Zero keywords","lastModifiedDate":"2022-10-16"},{"lineNumber":67,"author":{"gitId":"wadia82"},"content":"        NameContainsKeywordsPredicateAppointment predicate \u003d","lastModifiedDate":"2022-10-16"},{"lineNumber":68,"author":{"gitId":"wadia82"},"content":"                new NameContainsKeywordsPredicateAppointment(Collections.emptyList());","lastModifiedDate":"2022-10-16"},{"lineNumber":69,"author":{"gitId":"wadia82"},"content":"        assertFalse(predicate.test(new AppointmentBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2022-10-16"},{"lineNumber":70,"author":{"gitId":"wadia82"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":71,"author":{"gitId":"wadia82"},"content":"        // Non-matching keyword","lastModifiedDate":"2022-10-16"},{"lineNumber":72,"author":{"gitId":"wadia82"},"content":"        predicate \u003d new NameContainsKeywordsPredicateAppointment(Arrays.asList(\"Carol\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":73,"author":{"gitId":"wadia82"},"content":"        assertFalse(predicate.test(new AppointmentBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-10-16"},{"lineNumber":74,"author":{"gitId":"wadia82"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":75,"author":{"gitId":"wadia82"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"wadia82":75}},{"path":"src/test/java/seedu/address/model/appointment/SlotTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TZL0"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"TZL0"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"TZL0"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"TZL0"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"TZL0"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"TZL0"},"content":"public class SlotTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"TZL0"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"TZL0"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"TZL0"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Slot(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"TZL0"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"TZL0"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"TZL0"},"content":"        String invalidSlot \u003d \"\";","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"TZL0"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Slot(invalidSlot));","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"TZL0"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"TZL0"},"content":"    public void constructor_invalidSlot1_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"TZL0"},"content":"        String invalidSlot \u003d \"2022/01-12\";","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"TZL0"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Slot(invalidSlot));","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"TZL0"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"TZL0"},"content":"    public void constructor_invalidSlot2_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"TZL0"},"content":"        String invalidSlot \u003d \"2022/01-12 12:34\";","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"TZL0"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Slot(invalidSlot));","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"TZL0"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"TZL0"},"content":"    public void constructor_invalidSlot3_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"TZL0"},"content":"        String invalidSlot \u003d \"2022/01/12 12:61\";","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"TZL0"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Slot(invalidSlot));","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"TZL0"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"TZL0"},"content":"    public void constructor_invalidSlot4_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"TZL0"},"content":"        String invalidSlot \u003d \"22/01/12 12:01\";","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"TZL0"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Slot(invalidSlot));","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"TZL0"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"TZL0"},"content":"    public void constructor_invalidSlot5_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"TZL0"},"content":"        String invalidSlot \u003d \"1922/01/12 1201\";","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"TZL0"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Slot(invalidSlot));","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"TZL0"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"TZL0"},"content":"    public void equals() {","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"TZL0"},"content":"        Slot slot1 \u003d new Slot(\"2022-11-13 00:00\");","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"TZL0"},"content":"        Slot slot2 \u003d new Slot(\"2022-11-13 00:00\");","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"TZL0"},"content":"        Slot slot3 \u003d new Slot(\"2022-11-13 00:01\");","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"TZL0"},"content":"        Slot slot4 \u003d new Slot(\"2022-11-12 24:00\");","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"TZL0"},"content":"        assertTrue(slot1.equals(slot1));","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"TZL0"},"content":"        assertTrue(slot1.equals(slot2));","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"TZL0"},"content":"        assertTrue(slot1.equals(slot4));","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"TZL0"},"content":"        assertFalse(slot2.equals(slot3));","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"TZL0"},"content":"        assertFalse(slot2.equals(\"12345\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"TZL0"},"content":"        assertFalse(slot2.equals(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"TZL0"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"TZL0"},"content":"    public void isValidDateTime() {","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"TZL0"},"content":"        assertThrows(NullPointerException.class, () -\u003e Slot.isValidDateTime(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"TZL0"},"content":"        assertFalse(Slot.isValidDateTime(\"\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"TZL0"},"content":"        assertTrue(Slot.isValidDateTime(\"2012-12-31 01:02\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"TZL0"},"content":"        assertTrue(Slot.isValidDateTime(\"2012-12-31 24:00\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"TZL0"},"content":"        assertTrue(Slot.isValidDateTime(\"2023-06-30 23:59\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"TZL0"},"content":"        assertFalse(Slot.isValidDateTime(\"2021-12-40 11:22\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"TZL0"},"content":"        assertFalse(Slot.isValidDateTime(\"2021-13-01 11:22\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"TZL0"},"content":"        assertFalse(Slot.isValidDateTime(\"9999-12-31 1:22\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"TZL0"},"content":"        assertFalse(Slot.isValidDateTime(\"2021-12-10 01:0\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"TZL0"},"content":"        assertFalse(Slot.isValidDateTime(\"2021-1-10 01:00\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"TZL0"},"content":"        assertFalse(Slot.isValidDateTime(\"0000-12-10 00:00\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"TZL0"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"TZL0"},"content":"    public void hashCodeTest() {","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"TZL0"},"content":"        Slot slot1 \u003d new Slot(\"2022-11-13 00:00\");","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"TZL0"},"content":"        Slot slot2 \u003d new Slot(\"2022-11-13 00:00\");","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"TZL0"},"content":"        Slot slot3 \u003d new Slot(\"2022-11-13 00:01\");","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"TZL0"},"content":"        Slot slot4 \u003d new Slot(\"2022-11-12 24:00\");","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"TZL0"},"content":"        assertTrue(slot1.hashCode() \u003d\u003d slot1.hashCode());","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"TZL0"},"content":"        assertFalse(slot1.hashCode() \u003d\u003d slot3.hashCode());","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"TZL0"},"content":"        assertTrue(slot1.hashCode() \u003d\u003d slot4.hashCode());","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"TZL0"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"TZL0":90}},{"path":"src/test/java/seedu/address/model/patient/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TZL0"},"content":"package seedu.address.model.patient;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class AddressTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Address(invalidAddress));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidAddress() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null address","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // valid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"TZL0":1,"-":35}},{"path":"src/test/java/seedu/address/model/patient/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TZL0"},"content":"package seedu.address.model.patient;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"TZL0":1,"-":67}},{"path":"src/test/java/seedu/address/model/patient/NameContainsKeywordsPredicatePatientTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wadia82"},"content":"package seedu.address.model.patient;","lastModifiedDate":"2022-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"wadia82"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2022-10-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"wadia82"},"content":"public class NameContainsKeywordsPredicatePatientTest {","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"wadia82"},"content":"        NameContainsKeywordsPredicatePatient firstPredicate \u003d","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"wadia82"},"content":"                new NameContainsKeywordsPredicatePatient(firstPredicateKeywordList);","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"wadia82"},"content":"        NameContainsKeywordsPredicatePatient secondPredicate \u003d","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"wadia82"},"content":"                new NameContainsKeywordsPredicatePatient(secondPredicateKeywordList);","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"wadia82"},"content":"        NameContainsKeywordsPredicatePatient firstPredicateCopy \u003d","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"wadia82"},"content":"                new NameContainsKeywordsPredicatePatient(firstPredicateKeywordList);","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"wadia82"},"content":"        // different patient -\u003e returns false","lastModifiedDate":"2022-10-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"wadia82"},"content":"        NameContainsKeywordsPredicatePatient predicate \u003d","lastModifiedDate":"2022-10-16"},{"lineNumber":48,"author":{"gitId":"wadia82"},"content":"                new NameContainsKeywordsPredicatePatient(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":49,"author":{"gitId":"wadia82"},"content":"        assertTrue(predicate.test(new PatientBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-10-17"},{"lineNumber":50,"author":{"gitId":"wadia82"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":51,"author":{"gitId":"wadia82"},"content":"        // Multiple keywords","lastModifiedDate":"2022-10-17"},{"lineNumber":52,"author":{"gitId":"wadia82"},"content":"        predicate \u003d new NameContainsKeywordsPredicatePatient(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2022-10-17"},{"lineNumber":53,"author":{"gitId":"wadia82"},"content":"        assertTrue(predicate.test(new PatientBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-10-17"},{"lineNumber":54,"author":{"gitId":"wadia82"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":55,"author":{"gitId":"wadia82"},"content":"        // Only one matching keyword","lastModifiedDate":"2022-10-17"},{"lineNumber":56,"author":{"gitId":"wadia82"},"content":"        predicate \u003d new NameContainsKeywordsPredicatePatient(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2022-10-17"},{"lineNumber":57,"author":{"gitId":"wadia82"},"content":"        assertTrue(predicate.test(new PatientBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2022-10-17"},{"lineNumber":58,"author":{"gitId":"wadia82"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":59,"author":{"gitId":"wadia82"},"content":"        // Mixed-case keywords","lastModifiedDate":"2022-10-17"},{"lineNumber":60,"author":{"gitId":"wadia82"},"content":"        predicate \u003d new NameContainsKeywordsPredicatePatient(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2022-10-17"},{"lineNumber":61,"author":{"gitId":"wadia82"},"content":"        assertTrue(predicate.test(new PatientBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-10-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"wadia82"},"content":"        NameContainsKeywordsPredicatePatient predicate \u003d","lastModifiedDate":"2022-10-16"},{"lineNumber":68,"author":{"gitId":"wadia82"},"content":"                new NameContainsKeywordsPredicatePatient(Collections.emptyList());","lastModifiedDate":"2022-10-16"},{"lineNumber":69,"author":{"gitId":"wadia82"},"content":"        assertFalse(predicate.test(new PatientBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2022-10-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"wadia82"},"content":"        predicate \u003d new NameContainsKeywordsPredicatePatient(Arrays.asList(\"Carol\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":73,"author":{"gitId":"wadia82"},"content":"        assertFalse(predicate.test(new PatientBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-10-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"wadia82"},"content":"        predicate \u003d new NameContainsKeywordsPredicatePatient(Arrays","lastModifiedDate":"2022-10-16"},{"lineNumber":77,"author":{"gitId":"wadia82"},"content":"                .asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":78,"author":{"gitId":"wadia82"},"content":"        assertFalse(predicate.test(new PatientBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2022-10-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"wadia82":33,"-":48}},{"path":"src/test/java/seedu/address/model/patient/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TZL0"},"content":"package seedu.address.model.patient;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"TZL0":1,"-":39}},{"path":"src/test/java/seedu/address/model/patient/PatientTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TZL0"},"content":"package seedu.address.model.patient;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"TZL0"},"content":"import static seedu.address.testutil.TypicalPatients.ALICE;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"TZL0"},"content":"import static seedu.address.testutil.TypicalPatients.BOB;","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":16,"author":{"gitId":"TZL0"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"guokweijie"},"content":"public class PatientTest {","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"TZL0"},"content":"        Patient patient \u003d new PatientBuilder().build();","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"guokweijie"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e patient.getTags().remove(0));","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"TZL0"},"content":"    public void isSamePatient() {","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"TZL0"},"content":"        assertTrue(ALICE.isSamePatient(ALICE));","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"TZL0"},"content":"        assertFalse(ALICE.isSamePatient(null));","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":35,"author":{"gitId":"TZL0"},"content":"        Patient editedAlice \u003d new PatientBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":37,"author":{"gitId":"TZL0"},"content":"        assertTrue(ALICE.isSamePatient(editedAlice));","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":40,"author":{"gitId":"TZL0"},"content":"        editedAlice \u003d new PatientBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"TZL0"},"content":"        assertFalse(ALICE.isSamePatient(editedAlice));","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":44,"author":{"gitId":"TZL0"},"content":"        Patient editedBob \u003d new PatientBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2022-10-16"},{"lineNumber":45,"author":{"gitId":"TZL0"},"content":"        assertFalse(BOB.isSamePatient(editedBob));","lastModifiedDate":"2022-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"TZL0"},"content":"        editedBob \u003d new PatientBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2022-10-16"},{"lineNumber":50,"author":{"gitId":"TZL0"},"content":"        assertFalse(BOB.isSamePatient(editedBob));","lastModifiedDate":"2022-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"TZL0"},"content":"        Patient aliceCopy \u003d new PatientBuilder(ALICE).build();","lastModifiedDate":"2022-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"TZL0"},"content":"        // different patient -\u003e returns false","lastModifiedDate":"2022-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"TZL0"},"content":"        Patient editedAlice \u003d new PatientBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"TZL0"},"content":"        editedAlice \u003d new PatientBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-10-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"TZL0"},"content":"        editedAlice \u003d new PatientBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2022-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"TZL0"},"content":"        editedAlice \u003d new PatientBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2022-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":88,"author":{"gitId":"TZL0"},"content":"        editedAlice \u003d new PatientBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"guokweijie":2,"TZL0":23,"-":66}},{"path":"src/test/java/seedu/address/model/patient/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TZL0"},"content":"package seedu.address.model.patient;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"TZL0":1,"-":39}},{"path":"src/test/java/seedu/address/model/patient/UniquePatientListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TZL0"},"content":"package seedu.address.model.patient;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"guokweijie"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"guokweijie"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"guokweijie"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"guokweijie"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"guokweijie"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"guokweijie"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"guokweijie"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"TZL0"},"content":"import static seedu.address.testutil.TypicalPatients.ALICE;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"TZL0"},"content":"import static seedu.address.testutil.TypicalPatients.BOB;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"guokweijie"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"guokweijie"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"guokweijie"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"guokweijie"},"content":"import java.util.List;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"guokweijie"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"guokweijie"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"guokweijie"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.exceptions.DuplicatePatientException;","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.exceptions.PatientNotFoundException;","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"TZL0"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"guokweijie"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"guokweijie"},"content":"public class UniquePatientListTest {","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"guokweijie"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"guokweijie"},"content":"    private final UniquePatientList uniquePatientList \u003d new UniquePatientList();","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"guokweijie"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"guokweijie"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"TZL0"},"content":"    public void contains_nullPatient_throwsNullPointerException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"TZL0"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePatientList.contains((Patient) null));","lastModifiedDate":"2022-10-17"},{"lineNumber":29,"author":{"gitId":"TZL0"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePatientList.contains((Name) null));","lastModifiedDate":"2022-10-17"},{"lineNumber":30,"author":{"gitId":"guokweijie"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"guokweijie"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"guokweijie"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"TZL0"},"content":"    public void containsPatient_patientNotInList_returnsFalse() {","lastModifiedDate":"2022-10-17"},{"lineNumber":34,"author":{"gitId":"guokweijie"},"content":"        assertFalse(uniquePatientList.contains(ALICE));","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"guokweijie"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"guokweijie"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"guokweijie"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"TZL0"},"content":"    public void containsName_patientNotInList_returnsFalse() {","lastModifiedDate":"2022-10-17"},{"lineNumber":39,"author":{"gitId":"TZL0"},"content":"        assertFalse(uniquePatientList.contains(ALICE.getName()));","lastModifiedDate":"2022-10-17"},{"lineNumber":40,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":41,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":42,"author":{"gitId":"TZL0"},"content":"    @Test","lastModifiedDate":"2022-10-17"},{"lineNumber":43,"author":{"gitId":"TZL0"},"content":"    public void containsPatient_patientInList_returnsTrue() {","lastModifiedDate":"2022-10-17"},{"lineNumber":44,"author":{"gitId":"guokweijie"},"content":"        uniquePatientList.add(ALICE);","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"guokweijie"},"content":"        assertTrue(uniquePatientList.contains(ALICE));","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"guokweijie"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"guokweijie"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"TZL0"},"content":"    @Test","lastModifiedDate":"2022-10-17"},{"lineNumber":49,"author":{"gitId":"TZL0"},"content":"    public void containsName_patientInList_returnsTrue() {","lastModifiedDate":"2022-10-17"},{"lineNumber":50,"author":{"gitId":"TZL0"},"content":"        uniquePatientList.add(ALICE);","lastModifiedDate":"2022-10-17"},{"lineNumber":51,"author":{"gitId":"TZL0"},"content":"        assertTrue(uniquePatientList.contains(ALICE.getName()));","lastModifiedDate":"2022-10-17"},{"lineNumber":52,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":53,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":54,"author":{"gitId":"guokweijie"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":55,"author":{"gitId":"TZL0"},"content":"    public void contains_patientWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2022-10-16"},{"lineNumber":56,"author":{"gitId":"guokweijie"},"content":"        uniquePatientList.add(ALICE);","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"TZL0"},"content":"        Patient editedAlice \u003d new PatientBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"guokweijie"},"content":"                .build();","lastModifiedDate":"2022-10-13"},{"lineNumber":59,"author":{"gitId":"guokweijie"},"content":"        assertTrue(uniquePatientList.contains(editedAlice));","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"guokweijie"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":61,"author":{"gitId":"guokweijie"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":62,"author":{"gitId":"guokweijie"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":63,"author":{"gitId":"TZL0"},"content":"    public void add_nullPatient_throwsNullPointerException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":64,"author":{"gitId":"guokweijie"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePatientList.add(null));","lastModifiedDate":"2022-10-13"},{"lineNumber":65,"author":{"gitId":"guokweijie"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":66,"author":{"gitId":"guokweijie"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":67,"author":{"gitId":"guokweijie"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":68,"author":{"gitId":"TZL0"},"content":"    public void add_duplicatePatient_throwsDuplicatePatientException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":69,"author":{"gitId":"guokweijie"},"content":"        uniquePatientList.add(ALICE);","lastModifiedDate":"2022-10-13"},{"lineNumber":70,"author":{"gitId":"TZL0"},"content":"        assertThrows(DuplicatePatientException.class, () -\u003e uniquePatientList.add(ALICE));","lastModifiedDate":"2022-10-16"},{"lineNumber":71,"author":{"gitId":"guokweijie"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":72,"author":{"gitId":"guokweijie"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":73,"author":{"gitId":"guokweijie"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":74,"author":{"gitId":"TZL0"},"content":"    public void setPatient_nullTargetPatient_throwsNullPointerException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":75,"author":{"gitId":"TZL0"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePatientList.setPatient(null, ALICE));","lastModifiedDate":"2022-10-16"},{"lineNumber":76,"author":{"gitId":"guokweijie"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":77,"author":{"gitId":"guokweijie"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":78,"author":{"gitId":"guokweijie"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":79,"author":{"gitId":"TZL0"},"content":"    public void setPatient_nullEditedPatient_throwsNullPointerException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":80,"author":{"gitId":"TZL0"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePatientList.setPatient(ALICE, null));","lastModifiedDate":"2022-10-16"},{"lineNumber":81,"author":{"gitId":"guokweijie"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":82,"author":{"gitId":"guokweijie"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":83,"author":{"gitId":"guokweijie"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":84,"author":{"gitId":"TZL0"},"content":"    public void setPatient_targetPatientNotInList_throwsPatientNotFoundException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":85,"author":{"gitId":"TZL0"},"content":"        assertThrows(PatientNotFoundException.class, () -\u003e uniquePatientList.setPatient(ALICE, ALICE));","lastModifiedDate":"2022-10-16"},{"lineNumber":86,"author":{"gitId":"guokweijie"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":87,"author":{"gitId":"guokweijie"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":88,"author":{"gitId":"guokweijie"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":89,"author":{"gitId":"TZL0"},"content":"    public void setPatient_editedPatientIsSamePatient_success() {","lastModifiedDate":"2022-10-16"},{"lineNumber":90,"author":{"gitId":"guokweijie"},"content":"        uniquePatientList.add(ALICE);","lastModifiedDate":"2022-10-13"},{"lineNumber":91,"author":{"gitId":"TZL0"},"content":"        uniquePatientList.setPatient(ALICE, ALICE);","lastModifiedDate":"2022-10-16"},{"lineNumber":92,"author":{"gitId":"guokweijie"},"content":"        UniquePatientList expectedUniquePatientList \u003d new UniquePatientList();","lastModifiedDate":"2022-10-13"},{"lineNumber":93,"author":{"gitId":"guokweijie"},"content":"        expectedUniquePatientList.add(ALICE);","lastModifiedDate":"2022-10-13"},{"lineNumber":94,"author":{"gitId":"guokweijie"},"content":"        assertEquals(expectedUniquePatientList, uniquePatientList);","lastModifiedDate":"2022-10-13"},{"lineNumber":95,"author":{"gitId":"guokweijie"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":96,"author":{"gitId":"guokweijie"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":97,"author":{"gitId":"guokweijie"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":98,"author":{"gitId":"TZL0"},"content":"    public void setPatient_editedPatientHasSameIdentity_success() {","lastModifiedDate":"2022-10-16"},{"lineNumber":99,"author":{"gitId":"guokweijie"},"content":"        uniquePatientList.add(ALICE);","lastModifiedDate":"2022-10-13"},{"lineNumber":100,"author":{"gitId":"TZL0"},"content":"        Patient editedAlice \u003d new PatientBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-16"},{"lineNumber":101,"author":{"gitId":"guokweijie"},"content":"                .build();","lastModifiedDate":"2022-10-13"},{"lineNumber":102,"author":{"gitId":"TZL0"},"content":"        uniquePatientList.setPatient(ALICE, editedAlice);","lastModifiedDate":"2022-10-16"},{"lineNumber":103,"author":{"gitId":"guokweijie"},"content":"        UniquePatientList expectedUniquePatientList \u003d new UniquePatientList();","lastModifiedDate":"2022-10-13"},{"lineNumber":104,"author":{"gitId":"guokweijie"},"content":"        expectedUniquePatientList.add(editedAlice);","lastModifiedDate":"2022-10-13"},{"lineNumber":105,"author":{"gitId":"guokweijie"},"content":"        assertEquals(expectedUniquePatientList, uniquePatientList);","lastModifiedDate":"2022-10-13"},{"lineNumber":106,"author":{"gitId":"guokweijie"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":107,"author":{"gitId":"guokweijie"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":108,"author":{"gitId":"guokweijie"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":109,"author":{"gitId":"TZL0"},"content":"    public void setPatient_editedPatientHasDifferentIdentity_success() {","lastModifiedDate":"2022-10-16"},{"lineNumber":110,"author":{"gitId":"guokweijie"},"content":"        uniquePatientList.add(ALICE);","lastModifiedDate":"2022-10-13"},{"lineNumber":111,"author":{"gitId":"TZL0"},"content":"        uniquePatientList.setPatient(ALICE, BOB);","lastModifiedDate":"2022-10-16"},{"lineNumber":112,"author":{"gitId":"guokweijie"},"content":"        UniquePatientList expectedUniquePatientList \u003d new UniquePatientList();","lastModifiedDate":"2022-10-13"},{"lineNumber":113,"author":{"gitId":"guokweijie"},"content":"        expectedUniquePatientList.add(BOB);","lastModifiedDate":"2022-10-13"},{"lineNumber":114,"author":{"gitId":"guokweijie"},"content":"        assertEquals(expectedUniquePatientList, uniquePatientList);","lastModifiedDate":"2022-10-13"},{"lineNumber":115,"author":{"gitId":"guokweijie"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":116,"author":{"gitId":"guokweijie"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":117,"author":{"gitId":"guokweijie"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":118,"author":{"gitId":"TZL0"},"content":"    public void setPatient_editedPatientHasNonUniqueIdentity_throwsDuplicatePatientException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":119,"author":{"gitId":"guokweijie"},"content":"        uniquePatientList.add(ALICE);","lastModifiedDate":"2022-10-13"},{"lineNumber":120,"author":{"gitId":"guokweijie"},"content":"        uniquePatientList.add(BOB);","lastModifiedDate":"2022-10-13"},{"lineNumber":121,"author":{"gitId":"TZL0"},"content":"        assertThrows(DuplicatePatientException.class, () -\u003e uniquePatientList.setPatient(ALICE, BOB));","lastModifiedDate":"2022-10-16"},{"lineNumber":122,"author":{"gitId":"guokweijie"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":123,"author":{"gitId":"guokweijie"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":124,"author":{"gitId":"guokweijie"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":125,"author":{"gitId":"TZL0"},"content":"    public void remove_nullPatient_throwsNullPointerException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":126,"author":{"gitId":"guokweijie"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePatientList.remove(null));","lastModifiedDate":"2022-10-13"},{"lineNumber":127,"author":{"gitId":"guokweijie"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":128,"author":{"gitId":"guokweijie"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":129,"author":{"gitId":"guokweijie"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":130,"author":{"gitId":"TZL0"},"content":"    public void remove_patientDoesNotExist_throwsPatientNotFoundException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":131,"author":{"gitId":"TZL0"},"content":"        assertThrows(PatientNotFoundException.class, () -\u003e uniquePatientList.remove(ALICE));","lastModifiedDate":"2022-10-16"},{"lineNumber":132,"author":{"gitId":"guokweijie"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":133,"author":{"gitId":"guokweijie"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":134,"author":{"gitId":"guokweijie"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":135,"author":{"gitId":"TZL0"},"content":"    public void remove_existingPatient_removesPatient() {","lastModifiedDate":"2022-10-16"},{"lineNumber":136,"author":{"gitId":"guokweijie"},"content":"        uniquePatientList.add(ALICE);","lastModifiedDate":"2022-10-13"},{"lineNumber":137,"author":{"gitId":"guokweijie"},"content":"        uniquePatientList.remove(ALICE);","lastModifiedDate":"2022-10-13"},{"lineNumber":138,"author":{"gitId":"guokweijie"},"content":"        UniquePatientList expectedUniquePatientList \u003d new UniquePatientList();","lastModifiedDate":"2022-10-13"},{"lineNumber":139,"author":{"gitId":"guokweijie"},"content":"        assertEquals(expectedUniquePatientList, uniquePatientList);","lastModifiedDate":"2022-10-13"},{"lineNumber":140,"author":{"gitId":"guokweijie"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":141,"author":{"gitId":"guokweijie"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":142,"author":{"gitId":"guokweijie"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":143,"author":{"gitId":"TZL0"},"content":"    public void setPatients_nullUniquePatientList_throwsNullPointerException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":144,"author":{"gitId":"TZL0"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePatientList.setPatients((UniquePatientList) null));","lastModifiedDate":"2022-10-16"},{"lineNumber":145,"author":{"gitId":"guokweijie"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":146,"author":{"gitId":"guokweijie"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":147,"author":{"gitId":"guokweijie"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":148,"author":{"gitId":"TZL0"},"content":"    public void setPatients_uniquePatientList_replacesOwnListWithProvidedUniquePatientList() {","lastModifiedDate":"2022-10-16"},{"lineNumber":149,"author":{"gitId":"guokweijie"},"content":"        uniquePatientList.add(ALICE);","lastModifiedDate":"2022-10-13"},{"lineNumber":150,"author":{"gitId":"guokweijie"},"content":"        UniquePatientList expectedUniquePatientList \u003d new UniquePatientList();","lastModifiedDate":"2022-10-13"},{"lineNumber":151,"author":{"gitId":"guokweijie"},"content":"        expectedUniquePatientList.add(BOB);","lastModifiedDate":"2022-10-13"},{"lineNumber":152,"author":{"gitId":"TZL0"},"content":"        uniquePatientList.setPatients(expectedUniquePatientList);","lastModifiedDate":"2022-10-16"},{"lineNumber":153,"author":{"gitId":"guokweijie"},"content":"        assertEquals(expectedUniquePatientList, uniquePatientList);","lastModifiedDate":"2022-10-13"},{"lineNumber":154,"author":{"gitId":"guokweijie"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":155,"author":{"gitId":"guokweijie"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":156,"author":{"gitId":"guokweijie"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":157,"author":{"gitId":"TZL0"},"content":"    public void setPatients_nullList_throwsNullPointerException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":158,"author":{"gitId":"TZL0"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePatientList.setPatients((List\u003cPatient\u003e) null));","lastModifiedDate":"2022-10-16"},{"lineNumber":159,"author":{"gitId":"guokweijie"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":160,"author":{"gitId":"guokweijie"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":161,"author":{"gitId":"guokweijie"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":162,"author":{"gitId":"TZL0"},"content":"    public void setPatients_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2022-10-16"},{"lineNumber":163,"author":{"gitId":"guokweijie"},"content":"        uniquePatientList.add(ALICE);","lastModifiedDate":"2022-10-13"},{"lineNumber":164,"author":{"gitId":"guokweijie"},"content":"        List\u003cPatient\u003e patientList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2022-10-13"},{"lineNumber":165,"author":{"gitId":"TZL0"},"content":"        uniquePatientList.setPatients(patientList);","lastModifiedDate":"2022-10-16"},{"lineNumber":166,"author":{"gitId":"guokweijie"},"content":"        UniquePatientList expectedUniquePatientList \u003d new UniquePatientList();","lastModifiedDate":"2022-10-13"},{"lineNumber":167,"author":{"gitId":"guokweijie"},"content":"        expectedUniquePatientList.add(BOB);","lastModifiedDate":"2022-10-13"},{"lineNumber":168,"author":{"gitId":"guokweijie"},"content":"        assertEquals(expectedUniquePatientList, uniquePatientList);","lastModifiedDate":"2022-10-13"},{"lineNumber":169,"author":{"gitId":"guokweijie"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":170,"author":{"gitId":"guokweijie"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":171,"author":{"gitId":"guokweijie"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":172,"author":{"gitId":"TZL0"},"content":"    public void setPatients_listWithDuplicatePatients_throwsDuplicatePatientException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":173,"author":{"gitId":"guokweijie"},"content":"        List\u003cPatient\u003e listWithDuplicatePatients \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2022-10-13"},{"lineNumber":174,"author":{"gitId":"TZL0"},"content":"        assertThrows(DuplicatePatientException.class, () -\u003e uniquePatientList.setPatients(listWithDuplicatePatients));","lastModifiedDate":"2022-10-16"},{"lineNumber":175,"author":{"gitId":"guokweijie"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":176,"author":{"gitId":"guokweijie"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":177,"author":{"gitId":"guokweijie"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":178,"author":{"gitId":"guokweijie"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":179,"author":{"gitId":"guokweijie"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2022-10-13"},{"lineNumber":180,"author":{"gitId":"guokweijie"},"content":"            -\u003e uniquePatientList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2022-10-13"},{"lineNumber":181,"author":{"gitId":"guokweijie"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":182,"author":{"gitId":"guokweijie"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"guokweijie":126,"TZL0":56}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedAppointmentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TZL0"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"TZL0"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"TZL0"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_DOCTOR_DESC;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"TZL0"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_MEDICAL_TEST_DESC;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"TZL0"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_SLOT_DESC;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"TZL0"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DOCTOR_CAITIE;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"TZL0"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MEDICAL_TEST_7;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"TZL0"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SLOT_7;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"TZL0"},"content":"import static seedu.address.storage.JsonAdaptedAppointment.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"TZL0"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"TZL0"},"content":"import static seedu.address.testutil.TypicalAppointments.APPOINTMENT_1;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"TZL0"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"TZL0"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.appointment.Doctor;","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.appointment.MedicalTest;","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.appointment.Slot;","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.Name;","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"TZL0"},"content":"public class JsonAdaptedAppointmentTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"TZL0"},"content":"    public static final String VALID_NAME \u003d \"Benson\";","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"TZL0"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"TZL0"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"TZL0"},"content":"    public void toModelType_validAppointmentDetails_returnsAppointment() throws Exception {","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"TZL0"},"content":"        JsonAdaptedAppointment appointment \u003d new JsonAdaptedAppointment(APPOINTMENT_1);","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"TZL0"},"content":"        assertEquals(APPOINTMENT_1, appointment.toModelType());","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"TZL0"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"TZL0"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"TZL0"},"content":"        JsonAdaptedAppointment appointment \u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"TZL0"},"content":"                new JsonAdaptedAppointment(INVALID_NAME, VALID_MEDICAL_TEST_7, VALID_SLOT_7, VALID_DOCTOR_CAITIE);","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"TZL0"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"TZL0"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, appointment::toModelType);","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"TZL0"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"TZL0"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"TZL0"},"content":"        JsonAdaptedAppointment appointment \u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"TZL0"},"content":"                new JsonAdaptedAppointment(null, VALID_MEDICAL_TEST_7, VALID_SLOT_7, INVALID_DOCTOR_DESC);","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"TZL0"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"TZL0"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, appointment::toModelType);","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"TZL0"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"TZL0"},"content":"    public void toModelType_invalidMedicalTest_throwsIllegalValueException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"TZL0"},"content":"        JsonAdaptedAppointment appointment \u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"TZL0"},"content":"                new JsonAdaptedAppointment(VALID_NAME, INVALID_MEDICAL_TEST_DESC, VALID_SLOT_7, null);","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"TZL0"},"content":"        String expectedMessage \u003d MedicalTest.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"TZL0"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, appointment::toModelType);","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"TZL0"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"TZL0"},"content":"    public void toModelType_nullMedicalTest_throwsIllegalValueException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"TZL0"},"content":"        JsonAdaptedAppointment appointment \u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"TZL0"},"content":"                new JsonAdaptedAppointment(VALID_NAME, null, VALID_SLOT_7, VALID_DOCTOR_CAITIE);","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"TZL0"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, MedicalTest.class.getSimpleName());","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"TZL0"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, appointment::toModelType);","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"TZL0"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"TZL0"},"content":"    public void toModelType_invalidSlot_throwsIllegalValueException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"TZL0"},"content":"        JsonAdaptedAppointment appointment \u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"TZL0"},"content":"                new JsonAdaptedAppointment(VALID_NAME, VALID_MEDICAL_TEST_7, INVALID_SLOT_DESC, VALID_DOCTOR_CAITIE);","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"TZL0"},"content":"        String expectedMessage \u003d Slot.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"TZL0"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, appointment::toModelType);","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"TZL0"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"TZL0"},"content":"    public void toModelType_nullSlot_throwsIllegalValueException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"TZL0"},"content":"        JsonAdaptedAppointment appointment \u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"TZL0"},"content":"                new JsonAdaptedAppointment(VALID_NAME, VALID_MEDICAL_TEST_7, null, VALID_DOCTOR_CAITIE);","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"TZL0"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Slot.class.getSimpleName());","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"TZL0"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, appointment::toModelType);","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"TZL0"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"TZL0"},"content":"    public void toModelType_invalidDoctor_throwsIllegalValueException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"TZL0"},"content":"        JsonAdaptedAppointment appointment \u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"TZL0"},"content":"                new JsonAdaptedAppointment(VALID_NAME, VALID_MEDICAL_TEST_7, VALID_SLOT_7, INVALID_DOCTOR_DESC);","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"TZL0"},"content":"        String expectedMessage \u003d Doctor.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"TZL0"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, appointment::toModelType);","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"TZL0"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"TZL0"},"content":"    public void toModelType_nullDoctor_throwsIllegalValueException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"TZL0"},"content":"        JsonAdaptedAppointment appointment \u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"TZL0"},"content":"                new JsonAdaptedAppointment(VALID_NAME, VALID_MEDICAL_TEST_7, VALID_SLOT_7, null);","lastModifiedDate":"2022-10-10"},{"lineNumber":91,"author":{"gitId":"TZL0"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Doctor.class.getSimpleName());","lastModifiedDate":"2022-10-10"},{"lineNumber":92,"author":{"gitId":"TZL0"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, appointment::toModelType);","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"TZL0"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"TZL0":94}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPatientTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"TZL0"},"content":"import static seedu.address.storage.JsonAdaptedPatient.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"TZL0"},"content":"import static seedu.address.testutil.TypicalPatients.BENSON;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.Address;","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.Email;","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.Name;","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.Phone;","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"guokweijie"},"content":"public class JsonAdaptedPatientTest {","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_REMARK \u003d BENSON.getRemark().toString();","lastModifiedDate":"2022-09-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"TZL0"},"content":"    public void toModelType_validPatientDetails_returnsPatient() throws Exception {","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"TZL0"},"content":"        JsonAdaptedPatient patient \u003d new JsonAdaptedPatient(BENSON);","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"TZL0"},"content":"        assertEquals(BENSON, patient.toModelType());","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"TZL0"},"content":"        JsonAdaptedPatient patient \u003d","lastModifiedDate":"2022-10-16"},{"lineNumber":45,"author":{"gitId":"TZL0"},"content":"                new JsonAdaptedPatient(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2022-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"TZL0"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, patient::toModelType);","lastModifiedDate":"2022-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"TZL0"},"content":"        JsonAdaptedPatient patient \u003d","lastModifiedDate":"2022-10-16"},{"lineNumber":53,"author":{"gitId":"TZL0"},"content":"                new JsonAdaptedPatient(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2022-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"TZL0"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, patient::toModelType);","lastModifiedDate":"2022-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"TZL0"},"content":"        JsonAdaptedPatient patient \u003d","lastModifiedDate":"2022-10-16"},{"lineNumber":61,"author":{"gitId":"TZL0"},"content":"                new JsonAdaptedPatient(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2022-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"TZL0"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, patient::toModelType);","lastModifiedDate":"2022-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"TZL0"},"content":"        JsonAdaptedPatient patient \u003d","lastModifiedDate":"2022-10-16"},{"lineNumber":69,"author":{"gitId":"TZL0"},"content":"                new JsonAdaptedPatient(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS, VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2022-10-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"TZL0"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, patient::toModelType);","lastModifiedDate":"2022-10-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"TZL0"},"content":"        JsonAdaptedPatient patient \u003d","lastModifiedDate":"2022-10-16"},{"lineNumber":77,"author":{"gitId":"TZL0"},"content":"                new JsonAdaptedPatient(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2022-10-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"TZL0"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, patient::toModelType);","lastModifiedDate":"2022-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"TZL0"},"content":"        JsonAdaptedPatient patient \u003d","lastModifiedDate":"2022-10-16"},{"lineNumber":85,"author":{"gitId":"TZL0"},"content":"                new JsonAdaptedPatient(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS, VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2022-10-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"TZL0"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, patient::toModelType);","lastModifiedDate":"2022-10-16"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"TZL0"},"content":"        JsonAdaptedPatient patient \u003d","lastModifiedDate":"2022-10-16"},{"lineNumber":93,"author":{"gitId":"TZL0"},"content":"                new JsonAdaptedPatient(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2022-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"TZL0"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, patient::toModelType);","lastModifiedDate":"2022-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"TZL0"},"content":"        JsonAdaptedPatient patient \u003d","lastModifiedDate":"2022-10-16"},{"lineNumber":101,"author":{"gitId":"TZL0"},"content":"                new JsonAdaptedPatient(VALID_NAME, VALID_PHONE, VALID_EMAIL, null, VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2022-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"TZL0"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, patient::toModelType);","lastModifiedDate":"2022-10-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"TZL0"},"content":"        JsonAdaptedPatient patient \u003d","lastModifiedDate":"2022-10-16"},{"lineNumber":111,"author":{"gitId":"TZL0"},"content":"                new JsonAdaptedPatient(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_REMARK, invalidTags);","lastModifiedDate":"2022-10-16"},{"lineNumber":112,"author":{"gitId":"TZL0"},"content":"        assertThrows(IllegalValueException.class, patient::toModelType);","lastModifiedDate":"2022-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"guokweijie":1,"TZL0":36,"-":78}},{"path":"src/test/java/seedu/address/storage/JsonAddressBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"TZL0"},"content":"import static seedu.address.testutil.TypicalPatients.ALICE;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"TZL0"},"content":"import static seedu.address.testutil.TypicalPatients.HOON;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"TZL0"},"content":"import static seedu.address.testutil.TypicalPatients.IDA;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"TZL0"},"content":"import static seedu.address.testutil.TypicalPatients.getTypicalPatientsAddressBook;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorageTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonAddressBookStorageTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private java.util.Optional\u003cReadOnlyAddressBook\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new JsonAddressBookStorage(Paths.get(filePath)).readAddressBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"TZL0"},"content":"    public void readAddressBook_invalidPatientAddressBook_throwDataConversionException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":55,"author":{"gitId":"TZL0"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidPatientAddressBook.json\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"TZL0"},"content":"    public void readAddressBook_invalidAndValidPatientAddressBook_throwDataConversionException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":60,"author":{"gitId":"TZL0"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidAndValidPatientAddressBook.json\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":66,"author":{"gitId":"TZL0"},"content":"        AddressBook original \u003d getTypicalPatientsAddressBook();","lastModifiedDate":"2022-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage jsonAddressBookStorage \u003d new JsonAddressBookStorage(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"TZL0"},"content":"        original.addPatient(HOON);","lastModifiedDate":"2022-10-16"},{"lineNumber":76,"author":{"gitId":"TZL0"},"content":"        original.removePatient(ALICE);","lastModifiedDate":"2022-10-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"TZL0"},"content":"        original.addPatient(IDA);","lastModifiedDate":"2022-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void saveAddressBook(ReadOnlyAddressBook addressBook, String filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                    .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new AddressBook(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"TZL0":12,"-":98}},{"path":"src/test/java/seedu/address/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"TZL0"},"content":"import seedu.address.testutil.TypicalAppointments;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"TZL0"},"content":"import seedu.address.testutil.TypicalPatients;","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"TZL0"},"content":"    private static final Path TEST_DATA_FOLDER \u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"TZL0"},"content":"            Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"TZL0"},"content":"    private static final Path TYPICAL_PATIENTS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPatientsAddressBook.json\");","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"TZL0"},"content":"    private static final Path INVALID_PATIENT_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPatientAddressBook.json\");","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"TZL0"},"content":"    private static final Path DUPLICATE_PATIENT_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePatientAddressBook.json\");","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"TZL0"},"content":"    private static final Path TYPICAL_APPOINTMENTS_FILE \u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"TZL0"},"content":"            TEST_DATA_FOLDER.resolve(\"typicalAppointmentsAddressBook.json\");","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"TZL0"},"content":"    private static final Path INVALID_APPOINTMENT_FILE \u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"TZL0"},"content":"            TEST_DATA_FOLDER.resolve(\"invalidAppointmentAddressBook.json\");","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"TZL0"},"content":"    private static final Path DUPLICATE_APPOINTMENT_FILE \u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"TZL0"},"content":"            TEST_DATA_FOLDER.resolve(\"duplicateAppointmentAddressBook.json\");","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"TZL0"},"content":"    public static final Path APPOINTING_PATIENT_NOT_EXIST_APPOINTMENT_FILE \u003d","lastModifiedDate":"2022-10-17"},{"lineNumber":31,"author":{"gitId":"TZL0"},"content":"            TEST_DATA_FOLDER.resolve(\"appointingPatientNotExistAddressBook.json\");","lastModifiedDate":"2022-10-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"TZL0"},"content":"    public void toModelType_typicalPatientsFile_success() throws Exception {","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"TZL0"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PATIENTS_FILE,","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"TZL0"},"content":"        AddressBook typicalPatientsAddressBook \u003d TypicalPatients.getTypicalPatientsAddressBook();","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"TZL0"},"content":"        assertEquals(addressBookFromFile, typicalPatientsAddressBook);","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"TZL0"},"content":"    public void toModelType_typicalAppointmentsFile_success() throws Exception {","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"TZL0"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_APPOINTMENTS_FILE,","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"TZL0"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"TZL0"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"TZL0"},"content":"        AddressBook typicalAppointmentsAddressBook \u003d TypicalAppointments.getTypicalAppointmentsAddressBook();","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"TZL0"},"content":"        assertEquals(addressBookFromFile, typicalAppointmentsAddressBook);","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"TZL0"},"content":"    public void toModelType_invalidPatientFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2022-10-16"},{"lineNumber":53,"author":{"gitId":"TZL0"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PATIENT_FILE,","lastModifiedDate":"2022-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"TZL0"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"TZL0"},"content":"    public void toModelType_invalidAppointmentFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"TZL0"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_APPOINTMENT_FILE,","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"TZL0"},"content":"    public void toModelType_duplicatePatients_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2022-10-16"},{"lineNumber":67,"author":{"gitId":"TZL0"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PATIENT_FILE,","lastModifiedDate":"2022-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"TZL0"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_PATIENT,","lastModifiedDate":"2022-10-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"TZL0"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"TZL0"},"content":"    public void toModelType_duplicateAppointments_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"TZL0"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_APPOINTMENT_FILE,","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"TZL0"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"TZL0"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_APPOINTMENT,","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"TZL0"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"TZL0"},"content":"    @Test","lastModifiedDate":"2022-10-17"},{"lineNumber":82,"author":{"gitId":"TZL0"},"content":"    public void toModelType_appointingPatientNotExist_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2022-10-17"},{"lineNumber":83,"author":{"gitId":"TZL0"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(APPOINTING_PATIENT_NOT_EXIST_APPOINTMENT_FILE,","lastModifiedDate":"2022-10-17"},{"lineNumber":84,"author":{"gitId":"TZL0"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2022-10-17"},{"lineNumber":85,"author":{"gitId":"TZL0"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_APPOINTING_PATIENT_NOT_EXIST,","lastModifiedDate":"2022-10-17"},{"lineNumber":86,"author":{"gitId":"TZL0"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2022-10-17"},{"lineNumber":87,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"TZL0":50,"-":38}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"TZL0"},"content":"import static seedu.address.testutil.TypicalPatients.getTypicalPatientsAddressBook;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"TZL0"},"content":"        AddressBook original \u003d getTypicalPatientsAddressBook();","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"TZL0":2,"-":66}},{"path":"src/test/java/seedu/address/testutil/AddressBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":4,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"TZL0"},"content":" *     {@code AddressBook ab \u003d new AddressBookBuilder().withPatient(\"John\", \"Doe\").build();}","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AddressBookBuilder {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private AddressBook addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public AddressBookBuilder() {","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        addressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public AddressBookBuilder(AddressBook addressBook) {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.addressBook \u003d addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":24,"author":{"gitId":"TZL0"},"content":"     * Adds a new {@code Patient} to the {@code AddressBook} that we are building.","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":26,"author":{"gitId":"TZL0"},"content":"    public AddressBookBuilder withPatient(Patient patient) {","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"TZL0"},"content":"        addressBook.addPatient(patient);","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public AddressBook build() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"TZL0":5,"-":29}},{"path":"src/test/java/seedu/address/testutil/AppointmentBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TZL0"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.appointment.Doctor;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.appointment.MedicalTest;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.appointment.Slot;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.Name;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"TZL0"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"TZL0"},"content":" * A utility class to help with building Appointment objects.","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"TZL0"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"TZL0"},"content":"public class AppointmentBuilder {","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"TZL0"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"TZL0"},"content":"    public static final String DEFAULT_MEDICAL_TEST \u003d \"Computed Tomography\";","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"TZL0"},"content":"    public static final String DEFAULT_SLOT \u003d \"2022-10-10 16:08\";","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"TZL0"},"content":"    public static final String DEFAULT_DOCTOR \u003d \"Shashank S Joshi\";","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"TZL0"},"content":"    private Name name;","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"TZL0"},"content":"    private MedicalTest medicalTest;","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"TZL0"},"content":"    private Slot slot;","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"TZL0"},"content":"    private Doctor doctor;","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"TZL0"},"content":"     * Creates a {@code AppointmentBuilder} with the default details.","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"TZL0"},"content":"    public AppointmentBuilder() {","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"TZL0"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"TZL0"},"content":"        medicalTest \u003d new MedicalTest(DEFAULT_MEDICAL_TEST);","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"TZL0"},"content":"        slot \u003d new Slot(DEFAULT_SLOT);","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"TZL0"},"content":"        doctor \u003d new Doctor(DEFAULT_DOCTOR);","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"TZL0"},"content":"     * Initializes the AppointmentBuilder with the data of {@code appointmentToCopy}.","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"TZL0"},"content":"    public AppointmentBuilder(Appointment appointmentToCopy) {","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"TZL0"},"content":"        name \u003d appointmentToCopy.getName();","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"TZL0"},"content":"        medicalTest \u003d appointmentToCopy.getMedicalTest();","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"TZL0"},"content":"        slot \u003d appointmentToCopy.getSlot();","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"TZL0"},"content":"        doctor \u003d appointmentToCopy.getDoctor();","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"TZL0"},"content":"     * Sets the {@code Name} of the {@code Appointment} that we are building.","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"TZL0"},"content":"    public AppointmentBuilder withName(String name) {","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"TZL0"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"TZL0"},"content":"        return this;","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"TZL0"},"content":"     * Parses the {@code slot} into a {@code Slot} and set it to the {@code Appointment} that we are building.","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"TZL0"},"content":"    public AppointmentBuilder withSlot(String slot) {","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"TZL0"},"content":"        this.slot \u003d new Slot(slot);","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"TZL0"},"content":"        return this;","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"TZL0"},"content":"     * Parses the {@code medicalTest} into a {@code MedicalTest}","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"TZL0"},"content":"     * and set it to the {@code Appointment} that we are building.","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"TZL0"},"content":"    public AppointmentBuilder withMedicalTest(String medicalTest) {","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"TZL0"},"content":"        this.medicalTest \u003d new MedicalTest(medicalTest);","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"TZL0"},"content":"        return this;","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"TZL0"},"content":"     * Parses the {@code doctor} into a {@code Doctor}","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"TZL0"},"content":"     * and set it to the {@code Appointment} that we are building.","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"TZL0"},"content":"    public AppointmentBuilder withDoctor(String doctor) {","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"TZL0"},"content":"        this.doctor \u003d new Doctor(doctor);","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"TZL0"},"content":"        return this;","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"TZL0"},"content":"    public Appointment build() {","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"TZL0"},"content":"        return new Appointment(name, medicalTest, slot, doctor);","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"TZL0"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"TZL0":82}},{"path":"src/test/java/seedu/address/testutil/EditAppointmentDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Fuzanwenn"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"Fuzanwenn"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"Fuzanwenn"},"content":"import seedu.address.logic.commands.EditAppointmentCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"Fuzanwenn"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"Fuzanwenn"},"content":"import seedu.address.model.appointment.Doctor;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"Fuzanwenn"},"content":"import seedu.address.model.appointment.MedicalTest;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"Fuzanwenn"},"content":"import seedu.address.model.appointment.Slot;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.Name;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"Fuzanwenn"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"Fuzanwenn"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"Fuzanwenn"},"content":" * A utility class to help with building EditAppointmentDescriptor objects.","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"Fuzanwenn"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"Fuzanwenn"},"content":"public class EditAppointmentDescriptorBuilder {","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"Fuzanwenn"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"Fuzanwenn"},"content":"    private EditAppointmentCommand.EditAppointmentDescriptor descriptor;","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"Fuzanwenn"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"Fuzanwenn"},"content":"    public EditAppointmentDescriptorBuilder() {","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"Fuzanwenn"},"content":"        descriptor \u003d new EditAppointmentCommand.EditAppointmentDescriptor();","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"Fuzanwenn"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"Fuzanwenn"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"Fuzanwenn"},"content":"    public EditAppointmentDescriptorBuilder(EditAppointmentCommand.EditAppointmentDescriptor descriptor) {","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"Fuzanwenn"},"content":"        this.descriptor \u003d new EditAppointmentCommand.EditAppointmentDescriptor(descriptor);","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"Fuzanwenn"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"Fuzanwenn"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"Fuzanwenn"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"Fuzanwenn"},"content":"     * Returns an {@code EditAppointmentDescriptor} with fields containing {@code appointment}\u0027s details","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"Fuzanwenn"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"Fuzanwenn"},"content":"    public EditAppointmentDescriptorBuilder(Appointment appointment) {","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"Fuzanwenn"},"content":"        descriptor \u003d new EditAppointmentCommand.EditAppointmentDescriptor();","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"Fuzanwenn"},"content":"        descriptor.setName(appointment.getName());","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"Fuzanwenn"},"content":"        descriptor.setDoctor(appointment.getDoctor());","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"Fuzanwenn"},"content":"        descriptor.setMedicalTest(appointment.getMedicalTest());","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"Fuzanwenn"},"content":"        descriptor.setSlot(appointment.getSlot());","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"Fuzanwenn"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"Fuzanwenn"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"Fuzanwenn"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"Fuzanwenn"},"content":"     * Sets the {@code Name} of the {@code EditAppointmentDescriptor} that we are building.","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"Fuzanwenn"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"Fuzanwenn"},"content":"    public EditAppointmentDescriptorBuilder withName(String name) {","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"Fuzanwenn"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"Fuzanwenn"},"content":"        return this;","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"Fuzanwenn"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"Fuzanwenn"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"Fuzanwenn"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"Fuzanwenn"},"content":"     * Sets the {@code doctor} of the {@code EditAppointmentDescriptorBuilder} that we are building.","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"Fuzanwenn"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"Fuzanwenn"},"content":"    public EditAppointmentDescriptorBuilder withDoctor(String doctor) {","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"Fuzanwenn"},"content":"        descriptor.setDoctor(new Doctor(doctor));","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"Fuzanwenn"},"content":"        return this;","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"Fuzanwenn"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"Fuzanwenn"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"Fuzanwenn"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"Fuzanwenn"},"content":"     * Sets the {@code medicalTest} of the {@code EditAppointmentDescriptorBuilder} that we are building.","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"Fuzanwenn"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"Fuzanwenn"},"content":"    public EditAppointmentDescriptorBuilder withMedicalTest(String medicalTest) {","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"Fuzanwenn"},"content":"        descriptor.setMedicalTest(new MedicalTest(medicalTest));","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"Fuzanwenn"},"content":"        return this;","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"Fuzanwenn"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"Fuzanwenn"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"Fuzanwenn"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"Fuzanwenn"},"content":"     * Sets the {@code slot} of the {@code EditAppointmentDescriptorBuilder} that we are building.","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"Fuzanwenn"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"Fuzanwenn"},"content":"    public EditAppointmentDescriptorBuilder withSlot(String slot) {","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"Fuzanwenn"},"content":"        descriptor.setSlot(new Slot(slot));","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"Fuzanwenn"},"content":"        return this;","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"Fuzanwenn"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"Fuzanwenn"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"Fuzanwenn"},"content":"    public EditAppointmentCommand.EditAppointmentDescriptor build() {","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"Fuzanwenn"},"content":"        return descriptor;","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"Fuzanwenn"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"Fuzanwenn"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"Fuzanwenn":70,"TZL0":1}},{"path":"src/test/java/seedu/address/testutil/EditPatientDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TZL0"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"TZL0"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"TZL0"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"TZL0"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"TZL0"},"content":"import seedu.address.logic.commands.EditPatientCommand;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.Address;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.Email;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.Name;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.Phone;","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"TZL0"},"content":"/**","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"TZL0"},"content":" * A utility class to help with building EditPatientDescriptor objects.","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"TZL0"},"content":" */","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"TZL0"},"content":"public class EditPatientDescriptorBuilder {","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"TZL0"},"content":"    private EditPatientCommand.EditPatientDescriptor descriptor;","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"TZL0"},"content":"    public EditPatientDescriptorBuilder() {","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"TZL0"},"content":"        descriptor \u003d new EditPatientCommand.EditPatientDescriptor();","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"TZL0"},"content":"    public EditPatientDescriptorBuilder(EditPatientCommand.EditPatientDescriptor descriptor) {","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"TZL0"},"content":"        this.descriptor \u003d new EditPatientCommand.EditPatientDescriptor(descriptor);","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"TZL0"},"content":"     * Returns an {@code EditPatientDescriptor} with fields containing {@code patient}\u0027s details","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"TZL0"},"content":"    public EditPatientDescriptorBuilder(Patient patient) {","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"TZL0"},"content":"        descriptor \u003d new EditPatientCommand.EditPatientDescriptor();","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"TZL0"},"content":"        descriptor.setName(patient.getName());","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"TZL0"},"content":"        descriptor.setPhone(patient.getPhone());","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"TZL0"},"content":"        descriptor.setEmail(patient.getEmail());","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"TZL0"},"content":"        descriptor.setAddress(patient.getAddress());","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"TZL0"},"content":"        descriptor.setTags(patient.getTags());","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"TZL0"},"content":"     * Sets the {@code Name} of the {@code EditPatientDescriptor} that we are building.","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":45,"author":{"gitId":"TZL0"},"content":"    public EditPatientDescriptorBuilder withName(String name) {","lastModifiedDate":"2022-10-16"},{"lineNumber":46,"author":{"gitId":"TZL0"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2022-10-16"},{"lineNumber":47,"author":{"gitId":"TZL0"},"content":"        return this;","lastModifiedDate":"2022-10-16"},{"lineNumber":48,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":49,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":50,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":51,"author":{"gitId":"TZL0"},"content":"     * Sets the {@code Phone} of the {@code EditPatientDescriptor} that we are building.","lastModifiedDate":"2022-10-16"},{"lineNumber":52,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":53,"author":{"gitId":"TZL0"},"content":"    public EditPatientDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2022-10-16"},{"lineNumber":54,"author":{"gitId":"TZL0"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2022-10-16"},{"lineNumber":55,"author":{"gitId":"TZL0"},"content":"        return this;","lastModifiedDate":"2022-10-16"},{"lineNumber":56,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":57,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":59,"author":{"gitId":"TZL0"},"content":"     * Sets the {@code Email} of the {@code EditPatientDescriptor} that we are building.","lastModifiedDate":"2022-10-16"},{"lineNumber":60,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":61,"author":{"gitId":"TZL0"},"content":"    public EditPatientDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2022-10-16"},{"lineNumber":62,"author":{"gitId":"TZL0"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2022-10-16"},{"lineNumber":63,"author":{"gitId":"TZL0"},"content":"        return this;","lastModifiedDate":"2022-10-16"},{"lineNumber":64,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":65,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":66,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":67,"author":{"gitId":"TZL0"},"content":"     * Sets the {@code Address} of the {@code EditPatientDescriptor} that we are building.","lastModifiedDate":"2022-10-16"},{"lineNumber":68,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":69,"author":{"gitId":"TZL0"},"content":"    public EditPatientDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2022-10-16"},{"lineNumber":70,"author":{"gitId":"TZL0"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2022-10-16"},{"lineNumber":71,"author":{"gitId":"TZL0"},"content":"        return this;","lastModifiedDate":"2022-10-16"},{"lineNumber":72,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":73,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":74,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":75,"author":{"gitId":"TZL0"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPatientDescriptor}","lastModifiedDate":"2022-10-16"},{"lineNumber":76,"author":{"gitId":"TZL0"},"content":"     * that we are building.","lastModifiedDate":"2022-10-16"},{"lineNumber":77,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":78,"author":{"gitId":"TZL0"},"content":"    public EditPatientDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2022-10-16"},{"lineNumber":79,"author":{"gitId":"TZL0"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2022-10-16"},{"lineNumber":80,"author":{"gitId":"TZL0"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2022-10-16"},{"lineNumber":81,"author":{"gitId":"TZL0"},"content":"        return this;","lastModifiedDate":"2022-10-16"},{"lineNumber":82,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":83,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":84,"author":{"gitId":"TZL0"},"content":"    public EditPatientCommand.EditPatientDescriptor build() {","lastModifiedDate":"2022-10-16"},{"lineNumber":85,"author":{"gitId":"TZL0"},"content":"        return descriptor;","lastModifiedDate":"2022-10-16"},{"lineNumber":86,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":87,"author":{"gitId":"TZL0"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"TZL0":87}},{"path":"src/test/java/seedu/address/testutil/PatientBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.Address;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.Email;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.Name;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.Phone;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.Remark;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":16,"author":{"gitId":"TZL0"},"content":" * A utility class to help with building Patient objects.","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"TZL0"},"content":"public class PatientBuilder {","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_REMARK \u003d \"She likes aardvarks.\";","lastModifiedDate":"2022-09-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Remark remark;","lastModifiedDate":"2022-09-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"TZL0"},"content":"     * Creates a {@code PatientBuilder} with the default details.","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"TZL0"},"content":"    public PatientBuilder() {","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        remark \u003d new Remark(DEFAULT_REMARK);","lastModifiedDate":"2022-09-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":46,"author":{"gitId":"TZL0"},"content":"     * Initializes the PatientBuilder with the data of {@code patientToCopy}.","lastModifiedDate":"2022-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":48,"author":{"gitId":"TZL0"},"content":"    public PatientBuilder(Patient patientToCopy) {","lastModifiedDate":"2022-10-16"},{"lineNumber":49,"author":{"gitId":"guokweijie"},"content":"        name \u003d patientToCopy.getName();","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"guokweijie"},"content":"        phone \u003d patientToCopy.getPhone();","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"guokweijie"},"content":"        email \u003d patientToCopy.getEmail();","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"guokweijie"},"content":"        address \u003d patientToCopy.getAddress();","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"guokweijie"},"content":"        remark \u003d patientToCopy.getRemark();","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"guokweijie"},"content":"        tags \u003d new HashSet\u003c\u003e(patientToCopy.getTags());","lastModifiedDate":"2022-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":58,"author":{"gitId":"TZL0"},"content":"     * Sets the {@code Name} of the {@code Patient} that we are building.","lastModifiedDate":"2022-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"TZL0"},"content":"    public PatientBuilder withName(String name) {","lastModifiedDate":"2022-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"TZL0"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Patient} that we are building.","lastModifiedDate":"2022-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"TZL0"},"content":"    public PatientBuilder withTags(String ... tags) {","lastModifiedDate":"2022-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":74,"author":{"gitId":"TZL0"},"content":"     * Sets the {@code Address} of the {@code Patient} that we are building.","lastModifiedDate":"2022-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"TZL0"},"content":"    public PatientBuilder withAddress(String address) {","lastModifiedDate":"2022-10-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":82,"author":{"gitId":"TZL0"},"content":"     * Sets the {@code Phone} of the {@code Patient} that we are building.","lastModifiedDate":"2022-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":84,"author":{"gitId":"TZL0"},"content":"    public PatientBuilder withPhone(String phone) {","lastModifiedDate":"2022-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":90,"author":{"gitId":"TZL0"},"content":"     * Sets the {@code Email} of the {@code Patient} that we are building.","lastModifiedDate":"2022-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":92,"author":{"gitId":"TZL0"},"content":"    public PatientBuilder withEmail(String email) {","lastModifiedDate":"2022-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":98,"author":{"gitId":"TZL0"},"content":"     * Sets the {@code Remark} of the {@code Patient} that we are building.","lastModifiedDate":"2022-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":100,"author":{"gitId":"TZL0"},"content":"    public PatientBuilder withRemark(String remark) {","lastModifiedDate":"2022-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        this.remark \u003d new Remark(remark);","lastModifiedDate":"2022-09-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2022-09-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":105,"author":{"gitId":"guokweijie"},"content":"    public Patient build() {","lastModifiedDate":"2022-10-13"},{"lineNumber":106,"author":{"gitId":"guokweijie"},"content":"        return new Patient(name, phone, email, address, remark, tags);","lastModifiedDate":"2022-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"guokweijie":8,"TZL0":24,"-":77}},{"path":"src/test/java/seedu/address/testutil/PatientUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"TZL0"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":12,"author":{"gitId":"guokweijie"},"content":"import seedu.address.logic.commands.AddPatientCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"TZL0"},"content":"import seedu.address.logic.commands.EditPatientCommand.EditPatientDescriptor;","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"TZL0"},"content":" * A utility class for Patient.","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"TZL0"},"content":"public class PatientUtil {","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"TZL0"},"content":"     * Returns an add command string for adding the {@code patient}.","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"guokweijie"},"content":"    public static String getAddCommand(Patient patient) {","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"TZL0"},"content":"        return AddPatientCommand.COMMAND_WORD + \" \" + getPatientDetails(patient);","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"TZL0"},"content":"     * Returns the part of command string for the given {@code patient}\u0027s details.","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"TZL0"},"content":"    public static String getPatientDetails(Patient patient) {","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"guokweijie"},"content":"        sb.append(PREFIX_NAME + patient.getName().fullName + \" \");","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"guokweijie"},"content":"        sb.append(PREFIX_PHONE + patient.getPhone().value + \" \");","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"guokweijie"},"content":"        sb.append(PREFIX_EMAIL + patient.getEmail().value + \" \");","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"guokweijie"},"content":"        sb.append(PREFIX_ADDRESS + patient.getAddress().value + \" \");","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"guokweijie"},"content":"        sb.append(PREFIX_REMARK + patient.getRemark().value + \" \");","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"guokweijie"},"content":"        patient.getTags().stream().forEach(","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"TZL0"},"content":"     * Returns the part of command string for the given {@code EditPatientDescriptor}\u0027s details.","lastModifiedDate":"2022-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"TZL0"},"content":"    public static String getEditPatientDescriptorDetails(EditPatientDescriptor descriptor) {","lastModifiedDate":"2022-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"TZL0"},"content":"        descriptor.getRemark().ifPresent(remark -\u003e sb.append(PREFIX_REMARK).append(remark.value).append(\" \"));","lastModifiedDate":"2022-10-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"guokweijie":8,"TZL0":12,"-":45}},{"path":"src/test/java/seedu/address/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-07-30"},{"lineNumber":9,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-07-30"},{"lineNumber":11,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":37,"author":{"gitId":"TZL0"},"content":"     * Returns the middle index of the patient in the {@code model}\u0027s patient list.","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":40,"author":{"gitId":"wadia82"},"content":"        return Index.fromOneBased(model.getFilteredPatientList().size() / 2);","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":44,"author":{"gitId":"TZL0"},"content":"     * Returns the last index of the patient in the {@code model}\u0027s patient list.","lastModifiedDate":"2022-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":47,"author":{"gitId":"wadia82"},"content":"        return Index.fromOneBased(model.getFilteredPatientList().size());","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":51,"author":{"gitId":"TZL0"},"content":"     * Returns the patient in the {@code model}\u0027s patient list at {@code index}.","lastModifiedDate":"2022-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":53,"author":{"gitId":"TZL0"},"content":"    public static Patient getPatient(Model model, Index index) {","lastModifiedDate":"2022-10-16"},{"lineNumber":54,"author":{"gitId":"wadia82"},"content":"        return model.getFilteredPatientList().get(index.getZeroBased());","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":56,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"TZL0"},"content":"     * Returns a typical address book having typical patients and typical appointments","lastModifiedDate":"2022-10-16"},{"lineNumber":59,"author":{"gitId":"TZL0"},"content":"     * @return The typical address book.","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"TZL0"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"TZL0"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"TZL0"},"content":"        TypicalPatients.getTypicalPatients().stream().forEach(p -\u003e addressBook.addPatient(p));","lastModifiedDate":"2022-10-16"},{"lineNumber":64,"author":{"gitId":"TZL0"},"content":"        TypicalAppointments.getTypicalAppointments().stream().forEach(a -\u003e addressBook.addAppointment(a));","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"TZL0"},"content":"        return addressBook;","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"wadia82":3,"TZL0":16,"-":48}},{"path":"src/test/java/seedu/address/testutil/TypicalAppointments.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TZL0"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"TZL0"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DOCTOR_CAITIE;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"TZL0"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DOCTOR_DECKER;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"TZL0"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MEDICAL_TEST_7;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"TZL0"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MEDICAL_TEST_8;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"TZL0"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"TZL0"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"TZL0"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SLOT_7;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"TZL0"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SLOT_8;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"TZL0"},"content":"import static seedu.address.testutil.TypicalPatients.ALICE;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"TZL0"},"content":"import static seedu.address.testutil.TypicalPatients.BENSON;","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"TZL0"},"content":"import static seedu.address.testutil.TypicalPatients.CARL;","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"TZL0"},"content":"import static seedu.address.testutil.TypicalPatients.DANIEL;","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"TZL0"},"content":"import static seedu.address.testutil.TypicalPatients.ELLE;","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"TZL0"},"content":"import static seedu.address.testutil.TypicalPatients.FIONA;","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"TZL0"},"content":"import static seedu.address.testutil.TypicalPatients.getTypicalPatients;","lastModifiedDate":"2022-10-17"},{"lineNumber":18,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"TZL0"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"TZL0"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"TZL0"},"content":"import java.util.List;","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2022-10-17"},{"lineNumber":26,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"TZL0"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"TZL0"},"content":" * A utility class containing a list of {@code Appointment} objects to be used in tests.","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"TZL0"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"TZL0"},"content":"public class TypicalAppointments {","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"TZL0"},"content":"    public static final Appointment APPOINTMENT_1 \u003d new AppointmentBuilder().withName(ALICE.getName().toString())","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"TZL0"},"content":"            .withMedicalTest(\"gastric fluid analysis\").withSlot(\"2022-11-01 08:00\")","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"TZL0"},"content":"            .withDoctor(\"Edith Hilton\").build();","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"TZL0"},"content":"    public static final Appointment APPOINTMENT_2 \u003d new AppointmentBuilder().withName(BENSON.getName().toString())","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"TZL0"},"content":"            .withMedicalTest(\"kidney function test\").withSlot(\"2023-01-21 08:30\")","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"TZL0"},"content":"            .withDoctor(\"Milly Everett\").build();","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"TZL0"},"content":"    public static final Appointment APPOINTMENT_3 \u003d new AppointmentBuilder().withName(CARL.getName().toString())","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"TZL0"},"content":"            .withMedicalTest(\"liver function test\").withSlot(\"2022-11-01 08:00\")","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"TZL0"},"content":"            .withDoctor(\"Fannie Lambert\").build();","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"TZL0"},"content":"    public static final Appointment APPOINTMENT_4 \u003d new AppointmentBuilder().withName(DANIEL.getName().toString())","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"TZL0"},"content":"            .withMedicalTest(\"lumbar puncture\").withSlot(\"2022-11-01 08:00\")","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"TZL0"},"content":"            .withDoctor(\"Zainab Gibbons\").build();","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"TZL0"},"content":"    public static final Appointment APPOINTMENT_5 \u003d new AppointmentBuilder().withName(ELLE.getName().toString())","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"TZL0"},"content":"            .withMedicalTest(\"malabsorption test\").withSlot(\"2022-11-01 08:00\")","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"TZL0"},"content":"            .withDoctor(\"Nadia Guzman\").build();","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"TZL0"},"content":"    public static final Appointment APPOINTMENT_6 \u003d new AppointmentBuilder().withName(FIONA.getName().toString())","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"TZL0"},"content":"            .withMedicalTest(\"pap smear\").withSlot(\"2022-11-01 08:00\")","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"TZL0"},"content":"            .withDoctor(\"Lucy Poole\").build();","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"TZL0"},"content":"    // Manually added - Appointment\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"TZL0"},"content":"    public static final Appointment APPOINTMENT_7 \u003d new AppointmentBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"TZL0"},"content":"            .withMedicalTest(VALID_MEDICAL_TEST_7).withSlot(VALID_SLOT_7)","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"TZL0"},"content":"            .withDoctor(VALID_DOCTOR_CAITIE).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"TZL0"},"content":"    public static final Appointment APPOINTMENT_8 \u003d new AppointmentBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"TZL0"},"content":"            .withMedicalTest(VALID_MEDICAL_TEST_8).withSlot(VALID_SLOT_8)","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"TZL0"},"content":"            .withDoctor(VALID_DOCTOR_DECKER).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"TZL0"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"TZL0"},"content":"    private TypicalAppointments() {} // prevents instantiation","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"TZL0"},"content":"     * Returns an {@code AddressBook} with all the typical patients.","lastModifiedDate":"2022-10-16"},{"lineNumber":65,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"TZL0"},"content":"    public static AddressBook getTypicalAppointmentsAddressBook() {","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"TZL0"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"TZL0"},"content":"        for (Patient patient : getTypicalPatients()) {","lastModifiedDate":"2022-10-17"},{"lineNumber":69,"author":{"gitId":"TZL0"},"content":"            ab.addPatient(patient);","lastModifiedDate":"2022-10-17"},{"lineNumber":70,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":71,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":72,"author":{"gitId":"TZL0"},"content":"        for (Appointment appointment : getTypicalAppointments()) {","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"TZL0"},"content":"            ab.addAppointment(appointment);","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"TZL0"},"content":"        return ab;","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"TZL0"},"content":"    public static List\u003cAppointment\u003e getTypicalAppointments() {","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"TZL0"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(APPOINTMENT_1, APPOINTMENT_2, APPOINTMENT_3,","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"TZL0"},"content":"                APPOINTMENT_4, APPOINTMENT_5, APPOINTMENT_6));","lastModifiedDate":"2022-10-17"},{"lineNumber":81,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"TZL0"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"TZL0":82}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"TZL0"},"content":"    public static final Index INDEX_FIRST_PATIENT \u003d Index.fromOneBased(1);","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"TZL0"},"content":"    public static final Index INDEX_SECOND_PATIENT \u003d Index.fromOneBased(2);","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"TZL0"},"content":"    public static final Index INDEX_THIRD_PATIENT \u003d Index.fromOneBased(3);","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"Fuzanwenn"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"Fuzanwenn"},"content":"    public static final Index INDEX_FIRST_APPOINTMENT \u003d Index.fromOneBased(1);","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"Fuzanwenn"},"content":"    public static final Index INDEX_SECOND_APPOINTMENT \u003d Index.fromOneBased(2);","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"Fuzanwenn"},"content":"    public static final Index INDEX_THIRD_APPOINTMENT \u003d Index.fromOneBased(3);","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"Fuzanwenn":4,"TZL0":3,"-":9}},{"path":"src/test/java/seedu/address/testutil/TypicalPatients.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"TZL0"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_BOB;","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"TZL0"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":23,"author":{"gitId":"TZL0"},"content":" * A utility class containing a list of {@code Patient} objects to be used in tests.","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":25,"author":{"gitId":"TZL0"},"content":"public class TypicalPatients {","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":27,"author":{"gitId":"TZL0"},"content":"    public static final Patient ALICE \u003d new PatientBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\").withRemark(\"She likes aardvarks.\")","lastModifiedDate":"2022-09-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":31,"author":{"gitId":"TZL0"},"content":"    public static final Patient BENSON \u003d new PatientBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\").withRemark(\"He can\u0027t take beer!\")","lastModifiedDate":"2022-09-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":35,"author":{"gitId":"TZL0"},"content":"    public static final Patient CARL \u003d new PatientBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"TZL0"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\")","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"TZL0"},"content":"            .withRemark(PatientBuilder.DEFAULT_REMARK).build();","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"TZL0"},"content":"    public static final Patient DANIEL \u003d new PatientBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"TZL0"},"content":"            .withEmail(\"cornelia@example.com\").withRemark(PatientBuilder.DEFAULT_REMARK)","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"TZL0"},"content":"            .withAddress(\"10th street\").withTags(\"friends\").build();","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"TZL0"},"content":"    public static final Patient ELLE \u003d new PatientBuilder().withName(\"Elle Meyer\")","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"TZL0"},"content":"            .withPhone(\"9482224\").withRemark(PatientBuilder.DEFAULT_REMARK)","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"TZL0"},"content":"    public static final Patient FIONA \u003d new PatientBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2022-10-16"},{"lineNumber":45,"author":{"gitId":"TZL0"},"content":"            .withRemark(PatientBuilder.DEFAULT_REMARK)","lastModifiedDate":"2022-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":47,"author":{"gitId":"TZL0"},"content":"    public static final Patient GEORGE \u003d new PatientBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2022-10-16"},{"lineNumber":48,"author":{"gitId":"TZL0"},"content":"            .withRemark(PatientBuilder.DEFAULT_REMARK)","lastModifiedDate":"2022-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":52,"author":{"gitId":"TZL0"},"content":"    public static final Patient HOON \u003d new PatientBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2022-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":54,"author":{"gitId":"TZL0"},"content":"    public static final Patient IDA \u003d new PatientBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2022-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":57,"author":{"gitId":"TZL0"},"content":"    // Manually added - Patient\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"TZL0"},"content":"    public static final Patient AMY \u003d new PatientBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2022-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-09-21"},{"lineNumber":60,"author":{"gitId":"TZL0"},"content":"    public static final Patient BOB \u003d new PatientBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-10-16"},{"lineNumber":61,"author":{"gitId":"TZL0"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withRemark(VALID_REMARK_BOB)","lastModifiedDate":"2022-10-06"},{"lineNumber":62,"author":{"gitId":"TZL0"},"content":"            .withRemark(VALID_REMARK_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":66,"author":{"gitId":"TZL0"},"content":"    private TypicalPatients() {} // prevents instantiation","lastModifiedDate":"2022-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"TZL0"},"content":"     * Returns an {@code AddressBook} with all the typical patients.","lastModifiedDate":"2022-10-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"TZL0"},"content":"    public static AddressBook getTypicalPatientsAddressBook() {","lastModifiedDate":"2022-10-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":73,"author":{"gitId":"TZL0"},"content":"        for (Patient patient : getTypicalPatients()) {","lastModifiedDate":"2022-10-16"},{"lineNumber":74,"author":{"gitId":"TZL0"},"content":"            ab.addPatient(patient);","lastModifiedDate":"2022-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":79,"author":{"gitId":"TZL0"},"content":"    public static List\u003cPatient\u003e getTypicalPatients() {","lastModifiedDate":"2022-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"TZL0":31,"-":51}}]
