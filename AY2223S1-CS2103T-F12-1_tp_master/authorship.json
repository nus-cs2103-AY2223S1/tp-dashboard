[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"riccqi"},"content":"[![CI Status](https://github.com/AY2223S1-CS2103T-F12-1/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2223S1-CS2103T-F12-1/tp/actions)","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"riccqi"},"content":"# Cobb - Property Address Book","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"riccqi"},"content":"Cobb is an optimised object-oriented command-line entry management application that aims to make database management for Real Estate Agents easier and more accessible.","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"riccqi"},"content":"* The project simulates an ongoing software project for a desktop application used for managing contact details and property information.","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  * It is **written in OOP fashion**. It provides a **reasonably well-written** code base **bigger** (around 6 KLoC) than what students usually write in beginner-level SE modules, without being overwhelmingly big.","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  * It comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"riccqi"},"content":"* For detailed documentation of this project, see the **[Cobb Product Website](https://ay2223s1-cs2103t-f12-1.github.io/tp/)**.","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"riccqi"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2022-09-29"}],"authorContributionMap":{"riccqi":7,"-":5}},{"path":"config/checkstyle/checkstyle.xml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"\u003c!DOCTYPE module PUBLIC","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"-//Checkstyle//DTD Checkstyle Configuration 1.3//EN\"","lastModifiedDate":"2019-03-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"https://checkstyle.org/dtds/configuration_1_3.dtd\"\u003e","lastModifiedDate":"2019-03-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c!--","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    This configuration file enforces rules for the coding standard at","lastModifiedDate":"2022-05-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    https://se-education.org/guides/conventions/java/intermediate.html","lastModifiedDate":"2022-05-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003cmodule name\u003d\"Checker\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"FileTabCharacter\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that there are no tab characters in the file. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"NewlineAtEndOfFile\"\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003c!-- Accept LF, CR or CRLF to accomodate devs who prefer different line endings --\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cproperty name\u003d\"lineSeparator\" value\u003d\"lf_cr_crlf\"/\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"RegexpSingleline\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that FIXME is not used in comments.  TODO is preferred. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \u003cproperty name\u003d\"format\" value\u003d\"((//.*)|(\\*.*))FIXME\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    \u003cproperty name\u003d\"message\" value\u003d\u0027TODO is preferred to FIXME.\"\u0027 /\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"SuppressionFilter\"\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    \u003cproperty name\u003d\"file\" value\u003d\"${config_loc}/suppressions.xml\"/\u003e","lastModifiedDate":"2019-02-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"LineLength\"\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    \u003c!-- Checks if a line is too long. --\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    \u003cproperty name\u003d\"max\" value\u003d\"120\"/\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  \u003c!-- All Java AST specific tests live under TreeWalker module. --\u003e","lastModifiedDate":"2017-08-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"TreeWalker\"\u003e","lastModifiedDate":"2017-08-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    \u003c!-- Required to allow exceptions in code style --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"SuppressionCommentFilter\"\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"offCommentFormat\" value\u003d\"CHECKSTYLE.OFF\\: ([\\w\\|]+)\"/\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"onCommentFormat\" value\u003d\"CHECKSTYLE.ON\\: ([\\w\\|]+)\"/\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"checkFormat\" value\u003d\"$1\"/\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2016-10-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    IMPORT CHECKS","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    \u003c!-- Checks the ordering of import statements follow the rules that the default Eclipse formatter uses.","lastModifiedDate":"2017-01-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    The order rule \"STATIC###STANDARD_JAVA_PACKAGE###SPECIAL_IMPORTS###THIRD_PARTY_PACKAGE\" consists of:","lastModifiedDate":"2017-01-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"      1. STATIC: static imports","lastModifiedDate":"2017-01-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"      2. STANDARD_JAVA_PACKAGE: standard java/javax imports","lastModifiedDate":"2017-01-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"      3. SPECIAL_IMPORTS: defined as org imports","lastModifiedDate":"2017-01-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"      4. THIRD_PARTY_PACKAGE: defined as com imports","lastModifiedDate":"2017-01-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"CustomImportOrder\"\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        \u003cproperty name\u003d\"customImportOrderRules\"","lastModifiedDate":"2017-01-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            value\u003d\"STATIC###STANDARD_JAVA_PACKAGE###SPECIAL_IMPORTS###THIRD_PARTY_PACKAGE\"/\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        \u003cproperty name\u003d\"specialImportsRegExp\" value\u003d\"^org\\.\"/\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        \u003cproperty name\u003d\"thirdPartyPackageRegExp\" value\u003d\"^com\\.\"/\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        \u003cproperty name\u003d\"sortImportsInGroupAlphabetically\" value\u003d\"true\"/\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    \u003c!-- Checks for redundant import statements.","lastModifiedDate":"2017-01-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    An import statement is redundant if:","lastModifiedDate":"2017-01-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"      * It is a duplicate of another import. This is, when a class is imported more than once.","lastModifiedDate":"2017-01-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"      * The class non-statically imported is from the java.lang package, e.g. importing java.lang.String.","lastModifiedDate":"2017-01-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"      * The class non-statically imported is from the same package as the current package.","lastModifiedDate":"2017-01-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"RedundantImport\"/\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    \u003c!-- Checks for unused import statements.","lastModifiedDate":"2017-01-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    An import statement is unused if:","lastModifiedDate":"2017-01-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"      It\u0027s not referenced in the file.","lastModifiedDate":"2017-01-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"UnusedImports\"/\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"AvoidStarImport\"/\u003e","lastModifiedDate":"2018-01-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    NAMING CHECKS","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    \u003c!-- Validate abbreviations (consecutive capital letters) length in identifier name --\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"AbbreviationAsWordInName\"\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"ignoreFinal\" value\u003d\"false\"/\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowedAbbreviationLength\" value\u003d\"1\"/\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"PackageName\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"      \u003c!-- Validates identifiers for package names against the supplied expression. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"format\" value\u003d\"^[a-z]+(\\.[a-z][a-z0-9]{1,})*$\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"TypeName\"\u003e","lastModifiedDate":"2017-01-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"      \u003c!-- Validates static, final fields against the expression \"^[A-Z][a-zA-Z0-9]*$\". --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"      \u003cmetadata name\u003d\"altname\" value\u003d\"TypeName\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"ConstantName\"\u003e","lastModifiedDate":"2017-01-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"      \u003c!-- Validates non-private, static, final fields against the expression \"^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$\". --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"      \u003cmetadata name\u003d\"altname\" value\u003d\"ConstantName\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"applyToPrivate\" value\u003d\"false\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"      \u003cmessage key\u003d\"name.invalidPattern\"","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"               value\u003d\"Variable \u0027\u0027{0}\u0027\u0027 should be in ALL_CAPS (if it is a constant) or be private (otherwise).\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"StaticVariableName\"\u003e","lastModifiedDate":"2017-01-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"      \u003c!-- Validates static, non-final fields against the supplied expression. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"      \u003cmetadata name\u003d\"altname\" value\u003d\"StaticVariableName\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"format\" value\u003d\"^[a-z][a-zA-Z0-9]*_?$\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MemberName\"\u003e","lastModifiedDate":"2017-01-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"      \u003c!-- Validates non-static members against the supplied expression. --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"      \u003cmetadata name\u003d\"altname\" value\u003d\"MemberName\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"format\" value\u003d\"^[a-z][a-zA-Z0-9]*$\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MethodName\"\u003e","lastModifiedDate":"2017-01-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"      \u003c!-- Validates identifiers for method names against the supplied expression. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"      \u003cmetadata name\u003d\"altname\" value\u003d\"MethodName\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"format\" value\u003d\"^[a-z][a-zA-Z0-9]*(_[a-z][a-zA-Z0-9]+){0,2}$\"/\u003e","lastModifiedDate":"2017-04-03"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"ParameterName\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"      \u003c!-- Validates identifiers for method parameters against the expression \"^[a-z][a-zA-Z0-9]*$\". --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"LocalFinalVariableName\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"      \u003c!-- Validates identifiers for local final variables against the expression \"^[a-z][a-zA-Z0-9]*$\". --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"LocalVariableName\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"      \u003c!-- Validates identifiers for local variables against the expression \"^[a-z][a-zA-Z0-9]*$\". --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2016-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    LENGTH and CODING CHECKS","lastModifiedDate":"2016-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that array type declarations follow Java Style","lastModifiedDate":"2017-04-01"},{"lineNumber":154,"author":{"gitId":"-"},"content":"      Java style: public static void main(String[] args) // Allowed","lastModifiedDate":"2017-04-01"},{"lineNumber":155,"author":{"gitId":"-"},"content":"      C style:    public static void main(String args[]) // Not allowed","lastModifiedDate":"2017-04-01"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-04-01"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"ArrayTypeStyle\"/\u003e","lastModifiedDate":"2017-04-01"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    \u003c!-- Checks if a catch block is empty and does not contain any comments. --\u003e","lastModifiedDate":"2017-04-03"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"EmptyCatchBlock\"/\u003e","lastModifiedDate":"2017-04-03"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-03"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"LeftCurly\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"      \u003c!-- Checks for placement of the left curly brace (\u0027{\u0027). --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"RightCurly\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"      \u003c!-- Checks right curlies on CATCH, ELSE, and TRY blocks are on","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"      the same line. e.g., the following example is fine:","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"      \u003cpre\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        if {","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"          ...","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        } else","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"      \u003c/pre\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"      \u003c!-- This next example is not fine:","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"      \u003cpre\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        if {","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"          ...","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        else","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"      \u003c/pre\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    \u003c!-- Checks for braces around loop blocks --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"NeedBraces\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"      \u003c!--","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"      if (true) return 1; // Not allowed","lastModifiedDate":"2017-04-05"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"      if (true) { return 1; } // Not allowed","lastModifiedDate":"2016-10-12"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"      else if {","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        return 1; // else if should always be multi line","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"      }","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"      if (true)","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        return 1; // Not allowed","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowEmptyLoopBody\" value\u003d\"true\"/\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that each variable declaration is in its own statement and on its own line. --\u003e","lastModifiedDate":"2017-09-21"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MultipleVariableDeclarations\"/\u003e","lastModifiedDate":"2017-09-21"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"OneStatementPerLine\"/\u003e","lastModifiedDate":"2017-09-17"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-17"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that long constants are defined with an upper ell.--\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"UpperEll\" /\u003e","lastModifiedDate":"2018-01-25"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"FallThrough\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"      \u003c!-- Warn about falling through to the next case statement.  Similar to","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"      javac -Xlint:fallthrough, but the check is suppressed if a single-line comment","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"      on the last non-blank line preceding the fallen-into case contains \u0027fall through\u0027 (or","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"      some other variants which we don\u0027t publicized to promote consistency).","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"reliefPattern\"","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"       value\u003d\"fall through|Fall through|fallthru|Fallthru|falls through|Falls through|fallthrough|Fallthrough|No break|NO break|no break|continue on\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MissingSwitchDefault\"/\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that Class variables should never be declared public. --\u003e","lastModifiedDate":"2017-04-13"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"VisibilityModifier\"\u003e","lastModifiedDate":"2017-04-13"},{"lineNumber":226,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"protectedAllowed\" value\u003d\"true\"/\u003e","lastModifiedDate":"2017-04-13"},{"lineNumber":227,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowPublicFinalFields\" value\u003d\"true\"/\u003e","lastModifiedDate":"2017-04-13"},{"lineNumber":228,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"ignoreAnnotationCanonicalNames\" value\u003d\"RegisterExtension, TempDir\"/\u003e","lastModifiedDate":"2019-02-24"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-04-13"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-13"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    ORDER CHECKS","lastModifiedDate":"2017-01-16"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that the order of at-clauses follows the tagOrder default property value order.","lastModifiedDate":"2017-04-07"},{"lineNumber":236,"author":{"gitId":"-"},"content":"         @author, @version, @param, @return, @throws, @exception, @see, @since, @serial, @serialField, @serialData, @deprecated","lastModifiedDate":"2017-04-07"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"AtclauseOrder\"/\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-07"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    \u003c!-- Checks if the Class and Interface declarations is organized in this order","lastModifiedDate":"2017-04-01"},{"lineNumber":241,"author":{"gitId":"-"},"content":"      1. Class (static) variables. Order: public, protected, package level (no access modifier), private.","lastModifiedDate":"2017-04-01"},{"lineNumber":242,"author":{"gitId":"-"},"content":"      2. Instance variables. Order: public, protected, package level (no access modifier), private.","lastModifiedDate":"2017-04-01"},{"lineNumber":243,"author":{"gitId":"-"},"content":"      3. Constructors","lastModifiedDate":"2017-04-01"},{"lineNumber":244,"author":{"gitId":"-"},"content":"      4. Methods","lastModifiedDate":"2017-04-01"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-04-01"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    \u003cmodule name \u003d\"DeclarationOrder\"/\u003e","lastModifiedDate":"2017-04-01"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that default is after all cases in a switch statement --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"DefaultComesLast\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"ModifierOrder\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      \u003c!-- Warn if modifier order is inconsistent with JLS3 8.1.1, 8.3.1, and","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"           8.4.3.  The prescribed order is:","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"           public, protected, private, abstract, static, final, transient, volatile,","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"           synchronized, native, strictfp","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"OverloadMethodsDeclarationOrder\"/\u003e","lastModifiedDate":"2017-01-16"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    WHITESPACE CHECKS","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that comments are indented relative to their position in the code --\u003e","lastModifiedDate":"2017-04-03"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"CommentsIndentation\"/\u003e","lastModifiedDate":"2017-04-03"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-03"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"WhitespaceAround\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that various tokens are surrounded by whitespace.","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"           This includes most binary operators and keywords followed","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"           by regular or curly braces.","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"ASSIGN, BAND, BAND_ASSIGN, BOR,","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        BOR_ASSIGN, BSR, BSR_ASSIGN, BXOR, BXOR_ASSIGN, COLON, DIV, DIV_ASSIGN,","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        EQUAL, GE, GT, LAND, LCURLY, LE, LITERAL_CATCH, LITERAL_DO, LITERAL_ELSE,","lastModifiedDate":"2016-12-10"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        LITERAL_FINALLY, LITERAL_FOR, LITERAL_IF, LITERAL_RETURN,","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, LOR, LT, MINUS,","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"        MINUS_ASSIGN, MOD, MOD_ASSIGN, NOT_EQUAL, PLUS, PLUS_ASSIGN, QUESTION,","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"        RCURLY, SL, SLIST, SL_ASSIGN, SR_ASSIGN, STAR, STAR_ASSIGN\"/\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":280,"author":{"gitId":"-"},"content":"      \u003c!-- Allow empty constructors e.g. MyClass() {} --\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":281,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowEmptyConstructors\" value\u003d\"true\" /\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":282,"author":{"gitId":"-"},"content":"      \u003c!-- Allow empty methods e.g. void func() {} --\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":283,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowEmptyMethods\" value\u003d\"true\" /\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":284,"author":{"gitId":"-"},"content":"      \u003c!-- Allow empty types e.g. class Foo {}, enum Foo {} --\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":285,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowEmptyTypes\" value\u003d\"true\" /\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":286,"author":{"gitId":"-"},"content":"      \u003c!-- Allow empty loops e.g. for (int i \u003d 1; i \u003e 1; i++) {} --\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":287,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowEmptyLoops\" value\u003d\"true\" /\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":288,"author":{"gitId":"-"},"content":"      \u003c!-- Allow empty lambdas e.g. () -\u003e {} --\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":289,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowEmptyLambdas\" value\u003d\"true\" /\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"WhitespaceAfter\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that commas, semicolons and typecasts are followed by whitespace. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":294,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"COMMA, SEMI, TYPECAST\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"NoWhitespaceAfter\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":298,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that there is no whitespace after various unary operators. Linebreaks are allowed. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":299,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"BNOT, DEC, DOT, INC, LNOT, UNARY_MINUS,","lastModifiedDate":"2016-08-08"},{"lineNumber":300,"author":{"gitId":"-"},"content":"        UNARY_PLUS\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":301,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowLineBreaks\" value\u003d\"true\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":302,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    \u003c!-- No trailing whitespace --\u003e","lastModifiedDate":"2016-12-08"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"Regexp\"\u003e","lastModifiedDate":"2016-12-08"},{"lineNumber":306,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"format\" value\u003d\"[ \\t]+$\"/\u003e","lastModifiedDate":"2016-12-08"},{"lineNumber":307,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"illegalPattern\" value\u003d\"true\"/\u003e","lastModifiedDate":"2016-12-08"},{"lineNumber":308,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"message\" value\u003d\"Trailing whitespace\"/\u003e","lastModifiedDate":"2016-12-08"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-12-08"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"OperatorWrap\"\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":312,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that the non-assignment type operator is at the next line in a line wrap.","lastModifiedDate":"2017-05-22"},{"lineNumber":313,"author":{"gitId":"-"},"content":"           This includes \"?\", \":\", \"\u003d\u003d\", \"!\u003d\", \"/\", \"+\", \"-\", \"*\", \"%\", \"\u003e\u003e\", \"\u003e\u003e\u003e\",","lastModifiedDate":"2017-05-22"},{"lineNumber":314,"author":{"gitId":"-"},"content":"           \"\u003e\u003d\", \"\u003e\", \"\u003c\u003c\", \"\u003c\u003d\", \"\u003c\", \"^\", \"|\", \"||\", \"\u0026\", \"\u0026\u0026\", \"instanceof\",","lastModifiedDate":"2017-05-22"},{"lineNumber":315,"author":{"gitId":"-"},"content":"           \"\u0026\" when used in a generic upper or lower bounds constraints,","lastModifiedDate":"2017-05-22"},{"lineNumber":316,"author":{"gitId":"-"},"content":"             e.g. \u003cT extends Foo \u0026 Bar\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":317,"author":{"gitId":"-"},"content":"           \"::\" when used as a reference to a method or constructor without arguments.","lastModifiedDate":"2017-05-22"},{"lineNumber":318,"author":{"gitId":"-"},"content":"             e.g. String::compareToIgnoreCase","lastModifiedDate":"2017-05-22"},{"lineNumber":319,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":320,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"QUESTION, COLON, EQUAL, NOT_EQUAL, DIV, PLUS, MINUS, STAR, MOD, SR, BSR,","lastModifiedDate":"2017-05-22"},{"lineNumber":321,"author":{"gitId":"-"},"content":"        GE, GT, SL, LE, LT, BXOR, BOR, LOR, BAND, LAND, LITERAL_INSTANCEOF, TYPE_EXTENSION_AND, METHOD_REF\"/\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":322,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"option\" value\u003d\"nl\"/\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"OperatorWrap\"\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":325,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that the assignment type operator is at the previous end of line in a line wrap.","lastModifiedDate":"2017-05-22"},{"lineNumber":326,"author":{"gitId":"-"},"content":"           This includes \"\u003d\", \"/\u003d\", \"+\u003d\", \"-\u003d\", \"*\u003d\", \"%\u003d\", \"\u003e\u003e\u003d\", \"\u003e\u003e\u003e\u003d\", \"\u003c\u003c\u003d\", \"^\u003d\", \"\u0026\u003d\".","lastModifiedDate":"2017-05-22"},{"lineNumber":327,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":328,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"ASSIGN, DIV_ASSIGN, PLUS_ASSIGN, MINUS_ASSIGN, STAR_ASSIGN, MOD_ASSIGN,","lastModifiedDate":"2017-05-22"},{"lineNumber":329,"author":{"gitId":"-"},"content":"        SR_ASSIGN, BSR_ASSIGN, SL_ASSIGN, BXOR_ASSIGN, BOR_ASSIGN, BAND_ASSIGN\"/\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":330,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"option\" value\u003d\"eol\"/\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"SeparatorWrap\"\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":334,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that the \".\", \"@\" is at the next line in a line wrap. --\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":335,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"DOT, AT\"/\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":336,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"option\" value\u003d\"nl\"/\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"SeparatorWrap\"\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":339,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that the \",\", \"]\", \"[\", \"...\", \";\", \"(\" is at the previous end of line in a line wrap. --\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":340,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"COMMA, RBRACK, ARRAY_DECLARATOR, ELLIPSIS, SEMI, LPAREN\"/\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":341,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"option\" value\u003d\"eol\"/\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-14"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"Indentation\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":345,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"caseIndent\" value\u003d\"0\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":346,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"throwsIndent\" value\u003d\"8\" /\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"NoWhitespaceBefore\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":350,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that there is no whitespace before various unary operators. Linebreaks are allowed. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":351,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"SEMI, DOT, POST_DEC, POST_INC\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":352,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowLineBreaks\" value\u003d\"true\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"NoWhitespaceBeforeCaseDefaultColon\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that there is no whitespace between method/constructor name and open parenthesis. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MethodParamPad\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"ParenPad\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":361,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that there is no whitespace before close parenthesis or after open parenthesis. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":362,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that non-whitespace characters are separated by no more than one whitespace character.","lastModifiedDate":"2018-08-15"},{"lineNumber":366,"author":{"gitId":"-"},"content":"         a \u003d 1; // Allowed","lastModifiedDate":"2018-08-15"},{"lineNumber":367,"author":{"gitId":"-"},"content":"         a  \u003d 1; // Not allowed (more than one space before \u003d)","lastModifiedDate":"2018-08-15"},{"lineNumber":368,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2018-08-15"},{"lineNumber":369,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"SingleSpaceSeparator\"\u003e","lastModifiedDate":"2018-08-15"},{"lineNumber":370,"author":{"gitId":"-"},"content":"      \u003c!-- Validate whitespace surrounding comments as well.","lastModifiedDate":"2018-08-15"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-15"},{"lineNumber":372,"author":{"gitId":"-"},"content":"           a \u003d 1; // Allowed (single space before start of comment)","lastModifiedDate":"2018-08-15"},{"lineNumber":373,"author":{"gitId":"-"},"content":"           a \u003d 1; /* Allowed (single space before start of comment) */","lastModifiedDate":"2018-08-15"},{"lineNumber":374,"author":{"gitId":"-"},"content":"           /* Allowed (single space after end of comment) */ a \u003d 1;","lastModifiedDate":"2018-08-15"},{"lineNumber":375,"author":{"gitId":"-"},"content":"           a \u003d 1;  // Not allowed (more than one space before start of comment)","lastModifiedDate":"2018-08-15"},{"lineNumber":376,"author":{"gitId":"-"},"content":"           a \u003d 1;  /* Not allowed (more than one space before start of comment) */","lastModifiedDate":"2018-08-15"},{"lineNumber":377,"author":{"gitId":"-"},"content":"           /* Not allowed (more than one space after end of comment) */  a \u003d 1;","lastModifiedDate":"2018-08-15"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-15"},{"lineNumber":379,"author":{"gitId":"-"},"content":"           This doesn\u0027t validate whitespace within comments so a comment /* like  this */ is allowed.","lastModifiedDate":"2018-08-15"},{"lineNumber":380,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2018-08-15"},{"lineNumber":381,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"validateComments\" value\u003d\"true\"/\u003e","lastModifiedDate":"2018-08-15"},{"lineNumber":382,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2018-08-15"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-15"},{"lineNumber":384,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2017-08-20"},{"lineNumber":385,"author":{"gitId":"-"},"content":"    JAVADOC CHECKS","lastModifiedDate":"2017-08-20"},{"lineNumber":386,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-20"},{"lineNumber":388,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that all block-tags are ordered correctly. --\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":389,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"AtclauseOrder\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that Javadoc block tags appear only at the beginning of the line. --\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":392,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocBlockTagLocation\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that all Javadoc comments start from the second line. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocContentLocationCheck\" /\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that each line in Javadoc has leading asterisks. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":398,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocMissingLeadingAsterisk\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that each non-empty line in Javadoc has whitespace after leading asterisk. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocMissingWhitespaceAfterAsterisk\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":403,"author":{"gitId":"jchilling"},"content":"    \u003c!-- Checks that for block priorities, indentation of continuation lines is at least 4 spaces. --\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":404,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocTagContinuationIndentation\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":406,"author":{"gitId":"-"},"content":"    \u003c!-- Checks the Javadoc\u0027s format for every class, enumeration and interface. --\u003e","lastModifiedDate":"2022-05-29"},{"lineNumber":407,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocType\"\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":408,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowMissingParamTags\" value\u003d\"true\"/\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":409,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-20"},{"lineNumber":411,"author":{"gitId":"-"},"content":"    \u003c!-- Checks the Javadoc\u0027s format for every public method (excluding getters, setters and constructors). --\u003e","lastModifiedDate":"2022-05-29"},{"lineNumber":412,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocMethod\"\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":413,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowedAnnotations\" value\u003d\"Override, Test, BeforeAll, BeforeEach, AfterAll, AfterEach, Subscribe\"/\u003e","lastModifiedDate":"2019-02-24"},{"lineNumber":414,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"accessModifiers\" value\u003d\"public\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":415,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"validateThrows\" value\u003d\"false\"/\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":416,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowMissingParamTags\" value\u003d\"true\"/\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":417,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowMissingReturnTag\" value\u003d\"true\"/\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":418,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"METHOD_DEF, ANNOTATION_FIELD_DEF\"/\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":419,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-27"},{"lineNumber":421,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"InvalidJavadocPosition\"/\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-27"},{"lineNumber":423,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that every public method (excluding getters, setters and constructors) has a header comment. --\u003e","lastModifiedDate":"2022-05-29"},{"lineNumber":424,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MissingJavadocMethodCheck\"\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":425,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"minLineCount\" value\u003d\"1\"/\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":426,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowMissingPropertyJavadoc\" value\u003d\"true\"/\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":427,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"ignoreMethodNamesRegex\" value\u003d\"(set.*|get.*)\"/\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":428,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-20"},{"lineNumber":430,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that every public class, enumeration and interface has a header comment. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":431,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MissingJavadocType\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":433,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":434,"author":{"gitId":"-"},"content":"\u003c/module\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jchilling":1,"-":433}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"riccqi"},"content":"You can reach us at the email `cobb[at]comp.nus.edu.sg`","lastModifiedDate":"2022-09-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"riccqi"},"content":"### Qi Zhi","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"riccqi"},"content":"\u003cimg src\u003d\"images/riccqi.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"[[homepage](http://www.comp.nus.edu.sg/~damithch)]","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"riccqi"},"content":"[[github](https://github.com/riccqi)]","lastModifiedDate":"2022-09-28"},{"lineNumber":20,"author":{"gitId":"riccqi"},"content":"[[portfolio](team/riccqi.md)]","lastModifiedDate":"2022-09-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"riccqi"},"content":"* Role: Integration","lastModifiedDate":"2022-09-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"ChryslineLim"},"content":"### Chrysline Lim","lastModifiedDate":"2022-09-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"ChryslineLim"},"content":"\u003cimg src\u003d\"images/chryslinelim.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"ChryslineLim"},"content":"[[github](http://github.com/chryslinelim)]","lastModifiedDate":"2022-09-29"},{"lineNumber":29,"author":{"gitId":"ChryslineLim"},"content":"[[portfolio](team/chryslinelim.md)]","lastModifiedDate":"2022-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"ChryslineLim"},"content":"* Role: Developer","lastModifiedDate":"2022-09-29"},{"lineNumber":32,"author":{"gitId":"ChryslineLim"},"content":"* Responsibilities: Documentation","lastModifiedDate":"2022-09-29"},{"lineNumber":33,"author":{"gitId":"chngchngchng"},"content":"* ","lastModifiedDate":"2022-09-29"},{"lineNumber":34,"author":{"gitId":"chngchngchng"},"content":"### Chng Ian","lastModifiedDate":"2022-09-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":36,"author":{"gitId":"chngchngchng"},"content":"\u003cimg src\u003d\"images/chngchngchng.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":37,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":38,"author":{"gitId":"chngchngchng"},"content":"[[github]](http://github.com/chngchngchng)","lastModifiedDate":"2022-09-30"},{"lineNumber":39,"author":{"gitId":"chngchngchng"},"content":"[[portfolio]](team/chngchngchng.md)","lastModifiedDate":"2022-09-30"},{"lineNumber":40,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":41,"author":{"gitId":"chngchngchng"},"content":"* Role: Developer","lastModifiedDate":"2022-09-29"},{"lineNumber":42,"author":{"gitId":"chngchngchng"},"content":"* Responsibilities: CLI Commands, Integration","lastModifiedDate":"2022-09-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"zsiggg"},"content":"## Zsigmond Poh","lastModifiedDate":"2022-09-29"},{"lineNumber":45,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":46,"author":{"gitId":"zsiggg"},"content":"\u003cimg src\u003d\"images/zsiggg.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":47,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":48,"author":{"gitId":"zsiggg"},"content":"[[github](http://github.com/zsiggg)]","lastModifiedDate":"2022-09-29"},{"lineNumber":49,"author":{"gitId":"zsiggg"},"content":"[[portfolio](team/zsiggg.md)]","lastModifiedDate":"2022-09-29"},{"lineNumber":50,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":51,"author":{"gitId":"zsiggg"},"content":"* Role: Developer","lastModifiedDate":"2022-09-29"},{"lineNumber":52,"author":{"gitId":"zsiggg"},"content":"* Responsibilities: Deliverables and Deadlines","lastModifiedDate":"2022-09-29"},{"lineNumber":53,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":54,"author":{"gitId":"jchilling"},"content":"### Chen Hung-Yu","lastModifiedDate":"2022-09-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"chngchngchng"},"content":"\u003cimg src\u003d\"images/jchilling.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"zsiggg"},"content":"[[github](http://github.com/jchilling)]","lastModifiedDate":"2022-09-29"},{"lineNumber":59,"author":{"gitId":"zsiggg"},"content":"[[portfolio](team/jchilling.md)]","lastModifiedDate":"2022-09-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* Responsibilities: Data","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"### Jean Doe","lastModifiedDate":"2020-06-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/johndoe.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2020-06-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"[[github](http://github.com/johndoe)]","lastModifiedDate":"2020-06-17"},{"lineNumber":69,"author":{"gitId":"jchilling"},"content":"[[portfolio](team/jchilling.md)]","lastModifiedDate":"2022-09-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"* Responsibilities: Dev Ops + Threading","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"### James Doe","lastModifiedDate":"2020-06-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/johndoe.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2020-06-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"[[github](http://github.com/johndoe)]","lastModifiedDate":"2020-06-17"},{"lineNumber":79,"author":{"gitId":"jchilling"},"content":"[[portfolio](team/jchilling.md)]","lastModifiedDate":"2022-09-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"riccqi":6,"zsiggg":12,"chngchngchng":10,"jchilling":3,"-":45,"ChryslineLim":6}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"zsiggg"},"content":"### \\[Proposed\\] Navigate previous commands with arrow keys","lastModifiedDate":"2022-10-20"},{"lineNumber":242,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":243,"author":{"gitId":"zsiggg"},"content":"#### Motivation","lastModifiedDate":"2022-10-20"},{"lineNumber":244,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":245,"author":{"gitId":"zsiggg"},"content":"Currently, once a command is executed successfully, there is no way for the user to get it back easily. ","lastModifiedDate":"2022-10-20"},{"lineNumber":246,"author":{"gitId":"zsiggg"},"content":"However, a user who frequently uses command line interfaces (CLIs) might expect the use of arrow keys to bring","lastModifiedDate":"2022-10-20"},{"lineNumber":247,"author":{"gitId":"zsiggg"},"content":"back previous commands, as a way to quickly input multiple similar commands at once.","lastModifiedDate":"2022-10-20"},{"lineNumber":248,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":249,"author":{"gitId":"zsiggg"},"content":"#### Implementation","lastModifiedDate":"2022-10-20"},{"lineNumber":250,"author":{"gitId":"zsiggg"},"content":"`CommandBox` in the `commandbox` package represents the GUI component where the user enters commands.","lastModifiedDate":"2022-10-20"},{"lineNumber":251,"author":{"gitId":"zsiggg"},"content":"To capture the event when the Up and Down keystrokes are depressed, we add the `onKeyReleased` parameter","lastModifiedDate":"2022-10-20"},{"lineNumber":252,"author":{"gitId":"zsiggg"},"content":"to the `TextField` in the FXML file, `CommandBox.fxml`. This fires the `CommandBox#handleKeyReleased` method in `CommandBox`","lastModifiedDate":"2022-10-20"},{"lineNumber":253,"author":{"gitId":"zsiggg"},"content":"whenever a key is released. ","lastModifiedDate":"2022-10-20"},{"lineNumber":254,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":255,"author":{"gitId":"zsiggg"},"content":"`CommandBox#handleKeyReleased` changes the text field in the GUI to the previous or next command on release of the Up and Down","lastModifiedDate":"2022-10-20"},{"lineNumber":256,"author":{"gitId":"zsiggg"},"content":"arrow key respectively, if the previous or next command exists. The list of commands is stored in an ArrayList of ","lastModifiedDate":"2022-10-20"},{"lineNumber":257,"author":{"gitId":"zsiggg"},"content":"strings, `previousCommands`. `previousCommandsIndex` always represents the `previousCommands` index of the command ","lastModifiedDate":"2022-10-20"},{"lineNumber":258,"author":{"gitId":"zsiggg"},"content":"currently being displayed in the GUI.","lastModifiedDate":"2022-10-20"},{"lineNumber":259,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":260,"author":{"gitId":"zsiggg"},"content":"Given below is an example usage scenario and how the arrow key changes the `CommandBox` text field at each step.","lastModifiedDate":"2022-10-20"},{"lineNumber":261,"author":{"gitId":"zsiggg"},"content":"A sequence diagram is also provided. (to be added)","lastModifiedDate":"2022-10-20"},{"lineNumber":262,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":263,"author":{"gitId":"zsiggg"},"content":"Step 1. The user launches the application for the first time. `previousCommands` is initialised with an empty string as","lastModifiedDate":"2022-10-20"},{"lineNumber":264,"author":{"gitId":"zsiggg"},"content":"its first element. This element will represent the command that the user executes, if it executes correctly.","lastModifiedDate":"2022-10-20"},{"lineNumber":265,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":266,"author":{"gitId":"zsiggg"},"content":"Step 2. The user executes a command, `listbuyers` by pressing the Enter key. `CommandBox#handleCommand` is fired,","lastModifiedDate":"2022-10-20"},{"lineNumber":267,"author":{"gitId":"zsiggg"},"content":"getting the text from the text field. Since it is a valid command, it is executed successfully. The last element ","lastModifiedDate":"2022-10-20"},{"lineNumber":268,"author":{"gitId":"zsiggg"},"content":"is set to `listbuyers` and an empty string is appended to `previousCommands`. The `previousCommandsIndex` is set to","lastModifiedDate":"2022-10-20"},{"lineNumber":269,"author":{"gitId":"zsiggg"},"content":"the last element.","lastModifiedDate":"2022-10-20"},{"lineNumber":270,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":271,"author":{"gitId":"zsiggg"},"content":"Step 3. The user types a command halfway, but does not press the Enter key. He/she now wishes to use the previous","lastModifiedDate":"2022-10-20"},{"lineNumber":272,"author":{"gitId":"zsiggg"},"content":"command to type the command.","lastModifiedDate":"2022-10-20"},{"lineNumber":273,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":274,"author":{"gitId":"zsiggg"},"content":"Step 4. The user presses and releases the Up arrow. `CommandBox#handleKeyReleased` is fired, which sets the text field","lastModifiedDate":"2022-10-20"},{"lineNumber":275,"author":{"gitId":"zsiggg"},"content":"to display the `(previousCommandsIndex - 1)`th element in `previousCommands`. The user\u0027s unexecuted command from Step 3 ","lastModifiedDate":"2022-10-20"},{"lineNumber":276,"author":{"gitId":"zsiggg"},"content":"is also saved as the last element in `previousCommands`.","lastModifiedDate":"2022-10-20"},{"lineNumber":277,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":278,"author":{"gitId":"zsiggg"},"content":"Step 5. The user presses and releases the Up arrow again. `CommandBox#handleKeyReleased` is fired, but since","lastModifiedDate":"2022-10-20"},{"lineNumber":279,"author":{"gitId":"zsiggg"},"content":"`previousCommandsIndex \u003d\u003d 0`, nothing happens, since there is no more previous command to be shown. ","lastModifiedDate":"2022-10-20"},{"lineNumber":280,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":281,"author":{"gitId":"zsiggg"},"content":"Step 6. The user presses and releases the Down arrow. `CommandBox#handleKeyReleased` is fired, which sets the text field","lastModifiedDate":"2022-10-20"},{"lineNumber":282,"author":{"gitId":"zsiggg"},"content":"to display the `(previousCommandsIndex + 1)`th element in `previousCommands`. This would be the user\u0027s unexecuted","lastModifiedDate":"2022-10-20"},{"lineNumber":283,"author":{"gitId":"zsiggg"},"content":"command from Step 3.","lastModifiedDate":"2022-10-20"},{"lineNumber":284,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":285,"author":{"gitId":"ChryslineLim"},"content":"### Creating a buyer","lastModifiedDate":"2022-10-20"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"jchilling"},"content":"The `Person` class represents a buyer with buyer-specific fields. `Price Range`, `Characteristics`, and `Priority` denote his budget, requirements for the property, and buyer priority respectively. ","lastModifiedDate":"2022-10-20"},{"lineNumber":288,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":289,"author":{"gitId":"jchilling"},"content":"These three fields are all optional. When the user chooses not to indicate a buyer’s price range or desired characteristics, the `priceRange` and `desiredCharacteristics` field of a buyer may be null. Hence, they have both been implemented using `Optional\u003cT\u003e`. ","lastModifiedDate":"2022-10-20"},{"lineNumber":290,"author":{"gitId":"jchilling"},"content":"When the user chooses not to indicate a buyer priority, the buyer\u0027s priority will be set to the default priority as `NORMAL`.","lastModifiedDate":"2022-10-20"},{"lineNumber":291,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":292,"author":{"gitId":"ChryslineLim"},"content":"This is the class diagram of a `Person`. ","lastModifiedDate":"2022-10-20"},{"lineNumber":293,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":294,"author":{"gitId":"ChryslineLim"},"content":"![PersonClassDiagram](images/PersonClassDiagram.png)","lastModifiedDate":"2022-10-20"},{"lineNumber":295,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":296,"author":{"gitId":"ChryslineLim"},"content":"The structure for executing an `addbuyer` command follows the flow as mentioned in the “Logic component” section of this guide. ","lastModifiedDate":"2022-10-20"},{"lineNumber":297,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":298,"author":{"gitId":"ChryslineLim"},"content":"Design considerations: ","lastModifiedDate":"2022-10-20"},{"lineNumber":299,"author":{"gitId":"jchilling"},"content":"No duplicate persons can be added to the buyer list. This means that no two persons with the same name can exist. We considered using not only name but also contact number to identify a person, so that two people with the same name but different contact numbers can be added. However, we decided against it as users likely differentiate their contacts by name and would not want to save a duplicated name contact, hence the current implementation would serve as a needed warning of a duplicated name attempt to the user. ","lastModifiedDate":"2022-10-20"},{"lineNumber":300,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":301,"author":{"gitId":"jchilling"},"content":"### Creating a property","lastModifiedDate":"2022-10-20"},{"lineNumber":302,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":303,"author":{"gitId":"jchilling"},"content":"The `Property` class represents a property with property-specific fields. `Price` and `Characteristics` denote the price and feature of the property respectively.","lastModifiedDate":"2022-10-20"},{"lineNumber":304,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":305,"author":{"gitId":"jchilling"},"content":"The `price` field is mandatory while the `characteristics` field is optional. When the user chooses not to indicate a property\u0027s characteristics, the `characteristics` field of a property may be null. Hence, it has been implemented using `Optional\u003cT\u003e`.","lastModifiedDate":"2022-10-20"},{"lineNumber":306,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":307,"author":{"gitId":"jchilling"},"content":"This is the class diagram of a `Property`.","lastModifiedDate":"2022-10-20"},{"lineNumber":308,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":309,"author":{"gitId":"jchilling"},"content":"![PropertyClassDiagram](images/PropertyClassDiagram.png)","lastModifiedDate":"2022-10-20"},{"lineNumber":310,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":311,"author":{"gitId":"jchilling"},"content":"The structure for executing an `addprop` command follows the flow as mentioned in the \"Logic component\" section of this guide.","lastModifiedDate":"2022-10-20"},{"lineNumber":312,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":313,"author":{"gitId":"jchilling"},"content":"Design considerations:","lastModifiedDate":"2022-10-20"},{"lineNumber":314,"author":{"gitId":"jchilling"},"content":"No duplicate properties can be added to the property list. This means that no two properties with the same name and price can exist. We considered using only name to identify a property, but later decided against it since in real life different units under the same property name can be listed at the same time. In the future, we might allow two properties with same name and price but different characteristics to be added to the property list because this can also be a possible scenario in real life.","lastModifiedDate":"2022-10-20"},{"lineNumber":315,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":316,"author":{"gitId":"ChryslineLim"},"content":"### Filtering properties by price range","lastModifiedDate":"2022-10-20"},{"lineNumber":317,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":318,"author":{"gitId":"ChryslineLim"},"content":"The `Properties` list is filtered using a predicate, `filterPropsByPricePredicate`. This predicate checks if the property\u0027s price falls within a specified price range. ","lastModifiedDate":"2022-10-20"},{"lineNumber":319,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":320,"author":{"gitId":"ChryslineLim"},"content":"The structure for executing a `filterprops` command follows the flow as mentioned in the “Logic component” section of this guide. ","lastModifiedDate":"2022-10-20"},{"lineNumber":321,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":322,"author":{"gitId":"ChryslineLim"},"content":"Design considerations: ","lastModifiedDate":"2022-10-20"},{"lineNumber":323,"author":{"gitId":"ChryslineLim"},"content":"As `Property` has a single specific `Price`, it is much less useful to filter the list using one price value as it is unlikely to match any property. Instead, we decided to filter by a price range instead, where any property whose price falls within this range would be displayed. ","lastModifiedDate":"2022-10-20"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":325,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":330,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":331,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":332,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":333,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"ChryslineLim"},"content":"* property agent","lastModifiedDate":"2022-09-29"},{"lineNumber":344,"author":{"gitId":"ChryslineLim"},"content":"* needs to manage a significant number of buyers, sellers and properties concurrently","lastModifiedDate":"2022-09-29"},{"lineNumber":345,"author":{"gitId":"ChryslineLim"},"content":"* often overwhelmed by a disorganised and inefficient database","lastModifiedDate":"2022-09-29"},{"lineNumber":346,"author":{"gitId":"ChryslineLim"},"content":"* wants to keep track of all information neatly categorised in one place","lastModifiedDate":"2022-09-29"},{"lineNumber":347,"author":{"gitId":"ChryslineLim"},"content":"* takes too long to manually go through each property to find one that matches a buyer\u0027s requirements","lastModifiedDate":"2022-09-29"},{"lineNumber":348,"author":{"gitId":"ChryslineLim"},"content":"* prefers desktop apps over other types","lastModifiedDate":"2022-09-29"},{"lineNumber":349,"author":{"gitId":"ChryslineLim"},"content":"* can type fast and prefers typing to mouse interactions","lastModifiedDate":"2022-09-29"},{"lineNumber":350,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"ChryslineLim"},"content":"**Value proposition**: increases efficiency and convenience by allowing quick text-based inputs, separate functionalities for two contact bases (buyers and sellers) and properties, and optimized searching and filtering to automate property to buyer matches","lastModifiedDate":"2022-09-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"-"},"content":"| Priority | As a …​                                    | I want to …​                     | So that I can…​                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"ChryslineLim"},"content":"| -------- | ------------------------------------------ | ------------------------------------------------- | --------------------------------------------|","lastModifiedDate":"2022-09-29"},{"lineNumber":361,"author":{"gitId":"ChryslineLim"},"content":"| `* * *`  | property agent                             | add new buyers             ","lastModifiedDate":"2022-09-29"},{"lineNumber":362,"author":{"gitId":"ChryslineLim"},"content":"| `* * *`  | property agent                             | add new properties     ","lastModifiedDate":"2022-09-29"},{"lineNumber":363,"author":{"gitId":"ChryslineLim"},"content":"| `* *`    | property agent                             | edit information without needing internet access                                         ","lastModifiedDate":"2022-09-29"},{"lineNumber":364,"author":{"gitId":"ChryslineLim"},"content":"| `* *`    | disorganised property agent                | categorise contacts as \"buyer\" or \"seller         | keep track of demand and supply","lastModifiedDate":"2022-09-29"},{"lineNumber":365,"author":{"gitId":"ChryslineLim"},"content":"| `* *`    | property agent                             | edit contacts\u0027 details                            | easily update any changes","lastModifiedDate":"2022-09-29"},{"lineNumber":366,"author":{"gitId":"ChryslineLim"},"content":"| `* * *`  | property agent with a large number of contacts | sort contacts in different ways (alphabetical order, date of transaction, location)           | easily update any changes                                         ","lastModifiedDate":"2022-09-29"},{"lineNumber":367,"author":{"gitId":"ChryslineLim"},"content":"| `* *`    | property agent                             | search and filter for certain characteristics     | easily find matches","lastModifiedDate":"2022-09-29"},{"lineNumber":368,"author":{"gitId":"ChryslineLim"},"content":"| `*`      | property agent                             | link a buyer to a property","lastModifiedDate":"2022-09-29"},{"lineNumber":369,"author":{"gitId":"ChryslineLim"},"content":"| `*`      | non tech-savvy user                        | be able to make use of the command-line interface without too much difficulty","lastModifiedDate":"2022-09-29"},{"lineNumber":370,"author":{"gitId":"ChryslineLim"},"content":"| `*`      | property agent                             | track a list of buyers who are interested in a certain property | follow up on these leads","lastModifiedDate":"2022-09-29"},{"lineNumber":371,"author":{"gitId":"ChryslineLim"},"content":"| `*`      | property agent                             | filter out properties that do not meet the conditions of a prospective buyer","lastModifiedDate":"2022-09-29"},{"lineNumber":372,"author":{"gitId":"ChryslineLim"},"content":"| `*`      | property agent                             | save tasks related to each contact                | monitor the things that I have to do","lastModifiedDate":"2022-09-29"},{"lineNumber":373,"author":{"gitId":"ChryslineLim"},"content":"| `*`      | property agent                             | input notes for each contact                      | easily retrieve it for future correspondence with the client","lastModifiedDate":"2022-09-29"},{"lineNumber":374,"author":{"gitId":"ChryslineLim"},"content":"| `*`      | property agent                             | view all existing information at a glance in a clean, visually-appealing manner","lastModifiedDate":"2022-09-29"},{"lineNumber":375,"author":{"gitId":"ChryslineLim"},"content":"| `*`      | property agent with many clients           | avoid duplicate contacts                          | have a neat list of active clients","lastModifiedDate":"2022-09-29"},{"lineNumber":376,"author":{"gitId":"ChryslineLim"},"content":"| `*`      | property agent                             | view the commission rate for each closed case and aggregated commissions for the year | track my progress","lastModifiedDate":"2022-09-29"},{"lineNumber":377,"author":{"gitId":"ChryslineLim"},"content":"| `*`      | property agent                             | prioritise some clients who are desperate to find a place | contact them first and close the deal more easily |","lastModifiedDate":"2022-09-29"},{"lineNumber":378,"author":{"gitId":"ChryslineLim"},"content":"| `*`      | property agent with a busy schedule        | know when my next free time is                    | schedule client meetings with no overlap","lastModifiedDate":"2022-09-29"},{"lineNumber":379,"author":{"gitId":"ChryslineLim"},"content":"| `*`      | property agent                             | keep track of the cases that I have closed        | track my progress","lastModifiedDate":"2022-09-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"zsiggg"},"content":"(For all use cases below, the **System** is `Cobb` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2022-09-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"zsiggg"},"content":"### Use case: Add a person","lastModifiedDate":"2022-09-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"zsiggg"},"content":"**MSS:**","lastModifiedDate":"2022-09-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"zsiggg"},"content":"1. User chooses to add a new person.","lastModifiedDate":"2022-09-29"},{"lineNumber":390,"author":{"gitId":"zsiggg"},"content":"2. User enters the details of the person (e.g. their requirements) and his/her status as a buyer/seller.","lastModifiedDate":"2022-09-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"-"},"content":"Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":395,"author":{"gitId":"zsiggg"},"content":"* 2a. The person already exists.","lastModifiedDate":"2022-09-29"},{"lineNumber":396,"author":{"gitId":"zsiggg"},"content":"* 2b. Cobb shows an error message.","lastModifiedDate":"2022-09-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"zsiggg"},"content":"Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":399,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":400,"author":{"gitId":"zsiggg"},"content":"### Use case: Add a property","lastModifiedDate":"2022-09-29"},{"lineNumber":401,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":402,"author":{"gitId":"zsiggg"},"content":"**MSS:**","lastModifiedDate":"2022-09-29"},{"lineNumber":403,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":404,"author":{"gitId":"zsiggg"},"content":"1. User chooses to add a new property.","lastModifiedDate":"2022-09-29"},{"lineNumber":405,"author":{"gitId":"zsiggg"},"content":"2. User enters the details of the property.","lastModifiedDate":"2022-09-29"},{"lineNumber":406,"author":{"gitId":"zsiggg"},"content":"3. If available, user enters the details of the buyer/seller.","lastModifiedDate":"2022-09-29"},{"lineNumber":407,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":408,"author":{"gitId":"zsiggg"},"content":"Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":409,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":410,"author":{"gitId":"zsiggg"},"content":"**Extensions**","lastModifiedDate":"2022-09-29"},{"lineNumber":411,"author":{"gitId":"zsiggg"},"content":"* 2a. The property already exists.","lastModifiedDate":"2022-09-29"},{"lineNumber":412,"author":{"gitId":"zsiggg"},"content":"* 2b. Cobb shows an error message.","lastModifiedDate":"2022-09-29"},{"lineNumber":413,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":414,"author":{"gitId":"zsiggg"},"content":"Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":415,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":416,"author":{"gitId":"zsiggg"},"content":"### Use case: List properties","lastModifiedDate":"2022-09-29"},{"lineNumber":417,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":418,"author":{"gitId":"zsiggg"},"content":"**MSS:**","lastModifiedDate":"2022-09-29"},{"lineNumber":419,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":420,"author":{"gitId":"zsiggg"},"content":"1. User chooses to list all properties.","lastModifiedDate":"2022-09-29"},{"lineNumber":421,"author":{"gitId":"zsiggg"},"content":"2. User chooses the order in which to list the properties.","lastModifiedDate":"2022-09-29"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"-"},"content":"Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"zsiggg"},"content":"**Extensions**","lastModifiedDate":"2022-09-29"},{"lineNumber":426,"author":{"gitId":"zsiggg"},"content":"* 2a. There are no properties.","lastModifiedDate":"2022-09-29"},{"lineNumber":427,"author":{"gitId":"zsiggg"},"content":"* 2b. Cobb shows an error message.","lastModifiedDate":"2022-09-29"},{"lineNumber":428,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":429,"author":{"gitId":"zsiggg"},"content":"Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":430,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":431,"author":{"gitId":"zsiggg"},"content":"### Use case: Delete irrelevant properties","lastModifiedDate":"2022-09-29"},{"lineNumber":432,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":433,"author":{"gitId":"zsiggg"},"content":"**MSS:**","lastModifiedDate":"2022-09-29"},{"lineNumber":434,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":435,"author":{"gitId":"zsiggg"},"content":"1. User \u003cu\u003elists properties (Use case: List properties)\u003c/u\u003e.","lastModifiedDate":"2022-09-29"},{"lineNumber":436,"author":{"gitId":"zsiggg"},"content":"2. User finds properties that are not relevant anymore (e.g. already sold).","lastModifiedDate":"2022-09-29"},{"lineNumber":437,"author":{"gitId":"zsiggg"},"content":"3. User deletes these properties.","lastModifiedDate":"2022-09-29"},{"lineNumber":438,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":439,"author":{"gitId":"zsiggg"},"content":"Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":440,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":441,"author":{"gitId":"zsiggg"},"content":"### Use case: Match buyer to property","lastModifiedDate":"2022-09-29"},{"lineNumber":442,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":443,"author":{"gitId":"zsiggg"},"content":"**Preconditions**: Prospective buyer has been added.","lastModifiedDate":"2022-09-29"},{"lineNumber":444,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":445,"author":{"gitId":"zsiggg"},"content":"**MSS:**","lastModifiedDate":"2022-09-29"},{"lineNumber":446,"author":{"gitId":"zsiggg"},"content":"1. User \u003cu\u003elists all properties (Use case: List properties)\u003c/u\u003e.","lastModifiedDate":"2022-09-29"},{"lineNumber":447,"author":{"gitId":"zsiggg"},"content":"2. User finds the property that suits the buyer.","lastModifiedDate":"2022-09-29"},{"lineNumber":448,"author":{"gitId":"zsiggg"},"content":"3. User edits the property to record that it has been bought by the buyer.","lastModifiedDate":"2022-09-29"},{"lineNumber":449,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":450,"author":{"gitId":"zsiggg"},"content":"Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":451,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":452,"author":{"gitId":"zsiggg"},"content":"**Extensions**","lastModifiedDate":"2022-09-29"},{"lineNumber":453,"author":{"gitId":"zsiggg"},"content":"* 2a. A suitable property is not found.","lastModifiedDate":"2022-09-29"},{"lineNumber":454,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":455,"author":{"gitId":"zsiggg"},"content":"Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":456,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":457,"author":{"gitId":"zsiggg"},"content":"* 2b. Buyer rejects the suitable property found.","lastModifiedDate":"2022-09-29"},{"lineNumber":458,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":459,"author":{"gitId":"zsiggg"},"content":"Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":460,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":461,"author":{"gitId":"zsiggg"},"content":"### Use case: New buyer","lastModifiedDate":"2022-09-29"},{"lineNumber":462,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":463,"author":{"gitId":"zsiggg"},"content":"**MSS:**","lastModifiedDate":"2022-09-29"},{"lineNumber":464,"author":{"gitId":"zsiggg"},"content":"1. User gets a new buyer.","lastModifiedDate":"2022-09-29"},{"lineNumber":465,"author":{"gitId":"zsiggg"},"content":"2. User \u003cu\u003eadds the buyer (Use case: Add person)\u003c/u\u003e.","lastModifiedDate":"2022-09-29"},{"lineNumber":466,"author":{"gitId":"zsiggg"},"content":"3. User tries to \u003cu\u003ematch the buyer to a property (Use case: Match buyer to property)\u003c/u\u003e.","lastModifiedDate":"2022-09-29"},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"zsiggg"},"content":"**Extensions:**","lastModifiedDate":"2022-09-29"},{"lineNumber":469,"author":{"gitId":"zsiggg"},"content":"2a. Buyer already exists.","lastModifiedDate":"2022-09-29"},{"lineNumber":470,"author":{"gitId":"zsiggg"},"content":"2b. User edits the existing buyer with new requirements, if necessary.","lastModifiedDate":"2022-09-29"},{"lineNumber":471,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"zsiggg"},"content":"Use case continues at 3.","lastModifiedDate":"2022-09-29"},{"lineNumber":473,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":474,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":475,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":477,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"jchilling"},"content":"2.  Should work on any computer fewer than five years old. ","lastModifiedDate":"2022-09-29"},{"lineNumber":480,"author":{"gitId":"jchilling"},"content":"3. Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2022-09-29"},{"lineNumber":481,"author":{"gitId":"jchilling"},"content":"4. Should be able to respond within two seconds.","lastModifiedDate":"2022-09-29"},{"lineNumber":482,"author":{"gitId":"jchilling"},"content":"5. Should be downloaded and available to use within one minute.","lastModifiedDate":"2022-09-29"},{"lineNumber":483,"author":{"gitId":"jchilling"},"content":"6. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2022-09-29"},{"lineNumber":484,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":485,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":487,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":488,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":489,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":490,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":491,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":492,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":493,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":494,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":495,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":496,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":497,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":498,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":499,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":500,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":501,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":502,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":503,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":504,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":505,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":506,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":507,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":508,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":509,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":510,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":511,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":512,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":513,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":514,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":515,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":516,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":517,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":518,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":519,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":520,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":521,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":522,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":523,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":524,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":525,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":526,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":527,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":528,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":529,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":530,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":531,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":532,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":533,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":534,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":535,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":536,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":537,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":538,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":539,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":540,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":541,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":542,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":543,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"zsiggg":118,"jchilling":24,"-":354,"ChryslineLim":47}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"chngchngchng"},"content":"Cobb is an optimised object-oriented command-line entry management application that aims to make database management for Real Estate Agents easier and more accessible.","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"chngchngchng"},"content":"It is optimized for use via a **Command Line Interface** (CLI) while still having the benefits of a **Graphical User Interface (GUI)**. If you can type fast, Cobb can carry out functionality much faster than other traditional database management software can!","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"chngchngchng"},"content":"Cobb can also run on any machine, *without the need for an internet connection*.","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"chngchngchng"},"content":"1. Download the latest `cobb.jar` from [here](https://github.com/AY2223S1-CS2103T-F12-1/tp/releases).","lastModifiedDate":"2022-09-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"chngchngchng"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for Cobb.","lastModifiedDate":"2022-09-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"chngchngchng"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will display some help text.\u003cbr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"chngchngchng"},"content":"   * **`listusers`** : Lists all users in the database regardless of their roles.","lastModifiedDate":"2022-09-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"chngchngchng"},"content":"   * **`adduser -n Tim Cook -roles s -p 91234567 -e timcook@gmail.com -a 10 Singapore Avenue`** : Adds a seller named `Tim Cook` to the database.","lastModifiedDate":"2022-09-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"chngchngchng"},"content":"   * **`delete -s -n Tim Cook`** : Deletes a seller named Tim Cook from the database.","lastModifiedDate":"2022-09-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"chngchngchng"},"content":"   * **`help`** : Displays some help text.","lastModifiedDate":"2022-09-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"chngchngchng"},"content":"* The first word in the command string actually specifies which command we are invoking. For example, `help` specifies that we are invoking the `help` command, while `adduser -n John Doe` specifies that we are using the `adduser` command.","lastModifiedDate":"2022-09-29"},{"lineNumber":52,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":53,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":54,"author":{"gitId":"chngchngchng"},"content":"* Items in square brackets are parameters that must be passed into the command.\u003cbr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":55,"author":{"gitId":"chngchngchng"},"content":"  e.g. `[-n NAME]` indicates that the command requires a `NAME` parameter to be passed in.","lastModifiedDate":"2022-09-29"},{"lineNumber":56,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"chngchngchng"},"content":"* Parameters that contain angled braces `\u003c\u003e` means that the valid values that a parameter can take must be some (possibly more than one) of the values within the braces.\u003cbr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":59,"author":{"gitId":"chngchngchng"},"content":"  e.g. `-r \u003cs, b\u003e` means that the `r` parameter can take values `s`, `b`, or `s,b`.","lastModifiedDate":"2022-09-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"chngchngchng"},"content":"  e.g. if the command specifies `[-n NAME] [-p PHONE_NUMBER]`, `[-p PHONE_NUMBER] [-n NAME]` is also acceptable.","lastModifiedDate":"2022-09-29"},{"lineNumber":64,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":65,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":66,"author":{"gitId":"chngchngchng"},"content":"* Parameters can be specified either through their *full* names or their *shortened* names. A *shortened* parameter name is usually preceded with a single hyphen `-`, while a *full* name is preceded with two hyphens `--`.\u003cbr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":67,"author":{"gitId":"chngchngchng"},"content":"  e.g. `-n` is the short form for the `name` parameter, while `--name` is its full name.\u003cbr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":68,"author":{"gitId":"chngchngchng"},"content":"  **We call these names *flags*.**","lastModifiedDate":"2022-09-29"},{"lineNumber":69,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":70,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":71,"author":{"gitId":"chngchngchng"},"content":"* To specify a parameter and the value that it will take, type the parameter\u0027s flag followed by a space, and then its value.\u003cbr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":72,"author":{"gitId":"chngchngchng"},"content":"  e.g `-n John Doe` or `--name John Doe` will define the parameter `name` to store the value `John Doe`.","lastModifiedDate":"2022-09-29"},{"lineNumber":73,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"chngchngchng"},"content":"* If commands are missing specific parameters required for it to execute, an error message will be displayed that contains information about the syntax of the command and its required parameters.","lastModifiedDate":"2022-09-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":78,"author":{"gitId":"chngchngchng"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2022-09-29"},{"lineNumber":79,"author":{"gitId":"chngchngchng"},"content":"Note that Cobb\u0027s `update` and `find` queries searches for entries that have a specified name. In the event of multiple matches, a secondary dialog will appear for you to choose which entry you are referring to.","lastModifiedDate":"2022-09-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"chngchngchng"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":84,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":85,"author":{"gitId":"chngchngchng"},"content":"### Viewing help : `help`","lastModifiedDate":"2022-09-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"chngchngchng"},"content":"Displays a helpful list of commands and their related syntax for the user to refer to.","lastModifiedDate":"2022-09-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"chngchngchng"},"content":"### Adding a person to the database: `addperson`","lastModifiedDate":"2022-09-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"chngchngchng"},"content":"Adds a user to the database, with a tag to specify whether the user is a buyer or seller, or both.\u003cbr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":95,"author":{"gitId":"chngchngchng"},"content":"Syntax: `addperson [-n NAME] [-r \u003cs, b\u003e] [-p PHONE] [-e EMAIL] [-a address]`","lastModifiedDate":"2022-09-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"chngchngchng"},"content":"The `-n` flag indicates the name of the .\u003cbr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":98,"author":{"gitId":"chngchngchng"},"content":"The `-r` flag indicates the roles that the user belongs to.\u003cbr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":99,"author":{"gitId":"chngchngchng"},"content":"The `-p` flag indicates the user’s phone number.\u003cbr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":100,"author":{"gitId":"chngchngchng"},"content":"The `-e` flag indicates the user’s email.\u003cbr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":101,"author":{"gitId":"chngchngchng"},"content":"The `-a` flag indicates the user’s house address.\u003cbr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"chngchngchng"},"content":"Notes:","lastModifiedDate":"2022-09-29"},{"lineNumber":105,"author":{"gitId":"chngchngchng"},"content":"The email, and address fields are optional.","lastModifiedDate":"2022-09-29"},{"lineNumber":106,"author":{"gitId":"chngchngchng"},"content":"A user can have more than 1 role, aka they can be both a buyer and a seller.","lastModifiedDate":"2022-09-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"chngchngchng"},"content":"Examples:\u003cbr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":110,"author":{"gitId":"chngchngchng"},"content":"`addperson -n Tim -roles s,b -p 87321237 -e tim@gmail.com -a S648234` : Adds a user named Tim, who is both a seller and buyer. In the database, Tim will have a phone number and an email.\u003cbr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":111,"author":{"gitId":"chngchngchng"},"content":"`addperson -n Jane -roles b -p 89991237` : Adds a user named Jane, who is a buyer. The database will only store Jane\u0027s phone number *(no email)*.","lastModifiedDate":"2022-09-29"},{"lineNumber":112,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":113,"author":{"gitId":"chngchngchng"},"content":"### Adding a property to the database: `addprop`","lastModifiedDate":"2022-09-29"},{"lineNumber":114,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":115,"author":{"gitId":"chngchngchng"},"content":"Adds a property to the database along with relevant information.\u003cbr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":116,"author":{"gitId":"chngchngchng"},"content":"Syntax: `addprop [-n NAME] [-a ADDRESS] [-p PRICE] [-d DESCRIPTION]`","lastModifiedDate":"2022-09-29"},{"lineNumber":117,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":118,"author":{"gitId":"chngchngchng"},"content":"The `-n` flag indicates the name of the property.\u003cbr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":119,"author":{"gitId":"chngchngchng"},"content":"The `-a` flag indicates the property’s address.\u003cbr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":120,"author":{"gitId":"chngchngchng"},"content":"The `-p` flag indicates the property’s price.\u003cbr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":121,"author":{"gitId":"chngchngchng"},"content":"The `-d` flag indicates the property’s description (characteristics).\u003cbr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":122,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":123,"author":{"gitId":"chngchngchng"},"content":"Examples: \u003cbr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":124,"author":{"gitId":"chngchngchng"},"content":"`addprop -n Peak Residences -a 333 Thompson Road -p 1,100,000 -d long long long property description`: Adds a property called \"Peak Residences\" to the database along with its relavant characteristics.","lastModifiedDate":"2022-09-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"chngchngchng"},"content":"### Deleting entries from the database","lastModifiedDate":"2022-09-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"chngchngchng"},"content":"Delete entry with specific keyword or name\u003cbr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":129,"author":{"gitId":"chngchngchng"},"content":"Syntax: `delete [-s] [-b] [-p] [-n NAME] [-k KEYWORD]`","lastModifiedDate":"2022-09-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"chngchngchng"},"content":"The `-s` flag indicates that we will be deleting a seller.\u003cbr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":132,"author":{"gitId":"chngchngchng"},"content":"The `-b` flag indicates that we will be deleting a buyer.\u003cbr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":133,"author":{"gitId":"chngchngchng"},"content":"The `-p` flag indicates that we will be deleting a property.\u003cbr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":134,"author":{"gitId":"chngchngchng"},"content":"The `-n` flag indicates the name of the buyer, seller, or property.\u003cbr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"chngchngchng"},"content":"Examples:\u003cbr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":137,"author":{"gitId":"chngchngchng"},"content":"`delete -s Tim Cook` Deletes seller named Tim Cook.\u003cbr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":138,"author":{"gitId":"chngchngchng"},"content":"`delete -b Tim Cook` Deletes buyer named Tim Cook.\u003cbr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":139,"author":{"gitId":"chngchngchng"},"content":"`delete -p Peak Residences -k Thompson Road`: Deletes property named Peak Residences with extra keyword Thompson Road.\u003cbr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"chngchngchng"},"content":"### Update a property entry in database","lastModifiedDate":"2022-09-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"chngchngchng"},"content":"Syntax: `editprop [-n NAME] [-a ADDRESS] [-p PRICE] [-d DESCRIPTION]`","lastModifiedDate":"2022-09-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"chngchngchng"},"content":"Updates a property’s details with specified information in specified categories.","lastModifiedDate":"2022-09-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"chngchngchng"},"content":"The `-n` flag indicates the name of the property that we want to edit.\u003cbr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":148,"author":{"gitId":"chngchngchng"},"content":"The `-a` flag indicates the property’s address to be updated.\u003cbr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":149,"author":{"gitId":"chngchngchng"},"content":"The `-p` flag indicates the property’s price to be updated.\u003cbr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":150,"author":{"gitId":"chngchngchng"},"content":"The `-d` flag indicates the property’s description to be updated.\u003cbr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"chngchngchng"},"content":"Examples:\u003cbr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":153,"author":{"gitId":"chngchngchng"},"content":"`editprop -n Hill Residence -a Block 225 -p 750000`: Updates property with name Hill Residence to have a new address Block 225 and price 750000.","lastModifiedDate":"2022-09-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"chngchngchng"},"content":"### Update a buyer entry in the database","lastModifiedDate":"2022-09-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"chngchngchng"},"content":"Syntax: `editbuyer [-en EXISTINGNAME] [-nn NEWNAME] [-m BUDGET] [-r REQUIREMENTS] [-c NUMBER] [-e EMAIL]`","lastModifiedDate":"2022-09-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"chngchngchng"},"content":"The `-en` flag is used to specify the existing name of the buyer.\u003cbr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":160,"author":{"gitId":"chngchngchng"},"content":"The `-nn` flag is used to specify the buyer\u0027s new name.\u003cbr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":161,"author":{"gitId":"chngchngchng"},"content":"The `-m` flag indicates the buyer’s budget to be updated.\u003cbr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":162,"author":{"gitId":"chngchngchng"},"content":"The `-r` flag indicates the buyer’s requirements on the property type to be updated.\u003cbr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":163,"author":{"gitId":"chngchngchng"},"content":"The `-c` flag is used to update the contact number.\u003cbr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":164,"author":{"gitId":"chngchngchng"},"content":"The `-e` flag is used to update the buyer’s email.\u003cbr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"chngchngchng"},"content":"Examples:\u003cbr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":167,"author":{"gitId":"chngchngchng"},"content":"`editbuyer -en Mary -m 20500 -r Facing North -c 92348712`: Updates buyer Mary’s budget to $20500, her property requirements to Facing North and her contact number to 92348712.\u003cbr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":168,"author":{"gitId":"chngchngchng"},"content":"`editbuyer -en John -nn John Doe -e john_doe@gmail.com`: Updates buyer John to have a new name John Doe and an updated email.","lastModifiedDate":"2022-09-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"chngchngchng"},"content":"### Update seller entry in database","lastModifiedDate":"2022-09-29"},{"lineNumber":171,"author":{"gitId":"chngchngchng"},"content":"Syntax: `editseller [-en EXISTINGNAME] [-nn NEWNAME] [-c NUMBER] [-e EMAIL] [-p PROPERTY]`","lastModifiedDate":"2022-09-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"chngchngchng"},"content":"The `-en` flag is used to specify the existing name of the seller.\u003cbr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":174,"author":{"gitId":"chngchngchng"},"content":"The `-nn` flag is used to specify the seller’s new name.\u003cbr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":175,"author":{"gitId":"chngchngchng"},"content":"The `-c` flag is used to update the contact number.\u003cbr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":176,"author":{"gitId":"chngchngchng"},"content":"The `-e` flag is used to update the seller’s email.\u003cbr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":177,"author":{"gitId":"chngchngchng"},"content":"The `-p` flag is used to link a new property to the seller. To update a property, use editprop command instead.\u003cbr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"chngchngchng"},"content":"Examples:\u003cbr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":180,"author":{"gitId":"chngchngchng"},"content":"`editseller -en Mary -c 92348712`: Updates seller Mary’s contact number to 92348712.\u003cbr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":181,"author":{"gitId":"chngchngchng"},"content":"`editseller -en John -nn John Doe -e john_doe@gmail.com`: Updates seller John to have a new name John Doe and an updated email.","lastModifiedDate":"2022-09-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"chngchngchng"},"content":"### Find entry in database","lastModifiedDate":"2022-09-29"},{"lineNumber":184,"author":{"gitId":"chngchngchng"},"content":"Syntax: `find [-s] [-b] [-p] [-k KEYWORDS]`","lastModifiedDate":"2022-09-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"chngchngchng"},"content":"Searches through the database and returns all entries whose names contain any keywords in KEYWORDS.","lastModifiedDate":"2022-09-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"chngchngchng"},"content":"The `-s` flag indicates that we will be searching within seller entries only.\u003cbr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":189,"author":{"gitId":"chngchngchng"},"content":"The `-b` flag indicates that we will be searching within buyer entries only.\u003cbr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":190,"author":{"gitId":"chngchngchng"},"content":"The `-p` flag indicates that we will be searching within property entries only.\u003cbr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":191,"author":{"gitId":"chngchngchng"},"content":"The `-k` flag indicates the keywords that will be searching through. Each space-separated keyword will be taken as its own search term.","lastModifiedDate":"2022-09-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"chngchngchng"},"content":"A potential extension would be to abstract finding functionalities into individual commands for users and properties.","lastModifiedDate":"2022-09-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"chngchngchng"},"content":"This method will throw an error if there are multiple indicator flags in the command statement.","lastModifiedDate":"2022-09-29"},{"lineNumber":196,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":197,"author":{"gitId":"chngchngchng"},"content":"Examples:\u003cbr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":198,"author":{"gitId":"chngchngchng"},"content":"`find -s -k John`: Looks for all sellers that have “John” in their name.\u003cbr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":199,"author":{"gitId":"chngchngchng"},"content":"`find -p -k`: Clementi Looks for all properties that have “Clementi” in their name.\u003cbr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":200,"author":{"gitId":"chngchngchng"},"content":"`find -b -k Keyword1, Keyword2`: This will return all buyers that have either “Keyword1” or “Keyword2” in their names.","lastModifiedDate":"2022-09-29"},{"lineNumber":201,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":202,"author":{"gitId":"chngchngchng"},"content":"### List people in database","lastModifiedDate":"2022-09-29"},{"lineNumber":203,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":204,"author":{"gitId":"chngchngchng"},"content":"Lists all sellers and/or buyers, sorting by date added or alphabetical order, in ascending or descending order.","lastModifiedDate":"2022-09-29"},{"lineNumber":205,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":206,"author":{"gitId":"chngchngchng"},"content":"Syntax: `listusers [-s] [-b] [-sort \u003cdateadded, alpha\u003e \u003casc, dsc\u003e]`","lastModifiedDate":"2022-09-29"},{"lineNumber":207,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":208,"author":{"gitId":"chngchngchng"},"content":"The `-s` flag indicates that we will be listing only sellers.\u003cbr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":209,"author":{"gitId":"chngchngchng"},"content":"The `-b` flag indicates that we will be listing only buyers.\u003cbr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":210,"author":{"gitId":"chngchngchng"},"content":"The `-sort` flag indicates that we will sort the entries in the specified order. By default, entries will be listed in descending order of date added.\u003cbr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":211,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":212,"author":{"gitId":"chngchngchng"},"content":"This method will throw an error if `-s` and `-b` are both present.","lastModifiedDate":"2022-09-29"},{"lineNumber":213,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":214,"author":{"gitId":"chngchngchng"},"content":"A possible extension would be to add a flag to filter users based on their fields.","lastModifiedDate":"2022-09-29"},{"lineNumber":215,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":216,"author":{"gitId":"chngchngchng"},"content":"Examples:\u003cbr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":217,"author":{"gitId":"chngchngchng"},"content":"`listusers`: Lists all users, both sellers and buyers, in descending order of date added.\u003cbr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":218,"author":{"gitId":"chngchngchng"},"content":"`listusers -s`: Lists only sellers in descending order of date added.\u003cbr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":219,"author":{"gitId":"chngchngchng"},"content":"`listusers -b -sort dateadded asc`: Lists only buyers, sorting in ascending order of date added.","lastModifiedDate":"2022-09-29"},{"lineNumber":220,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":221,"author":{"gitId":"chngchngchng"},"content":"### List properties in database","lastModifiedDate":"2022-09-29"},{"lineNumber":222,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":223,"author":{"gitId":"chngchngchng"},"content":"Lists all properties, sorting by date added or alphabetical order, in ascending or descending order.","lastModifiedDate":"2022-09-29"},{"lineNumber":224,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":225,"author":{"gitId":"chngchngchng"},"content":"Syntax: `listprops [-sort \u003cdateadded, alpha\u003e \u003casc, dsc\u003e]`","lastModifiedDate":"2022-09-29"},{"lineNumber":226,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":227,"author":{"gitId":"chngchngchng"},"content":"The `-sort` flag indicates that we will sort the entries in the specified order. By default, entries will be listed in descending order of date added.","lastModifiedDate":"2022-09-29"},{"lineNumber":228,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":229,"author":{"gitId":"chngchngchng"},"content":"A possible extension would be to add a flag to filter properties based on their fields.","lastModifiedDate":"2022-09-29"},{"lineNumber":230,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":231,"author":{"gitId":"chngchngchng"},"content":"Examples:\u003cbr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":232,"author":{"gitId":"chngchngchng"},"content":"`listprops`: Lists all properties in descending order of date added.\u003cbr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":233,"author":{"gitId":"chngchngchng"},"content":"`listprops -sort alpha dsc`: Lists properties in descending alphabetical order.","lastModifiedDate":"2022-09-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"chngchngchng"},"content":"Exits the program with exit code 0.","lastModifiedDate":"2022-09-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"chngchngchng"},"content":"Cobb\u0027s data is saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2022-09-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":247,"author":{"gitId":"chngchngchng"},"content":"Cobb\u0027s data are saved as a JSON file `[JAR file location]/data/cobb.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2022-09-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":249,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":250,"author":{"gitId":"chngchngchng"},"content":"If your changes to the data file makes its format invalid, Cobb will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2022-09-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":253,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"chngchngchng"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous Cobb home folder.","lastModifiedDate":"2022-09-29"},{"lineNumber":263,"author":{"gitId":"chngchngchng"},"content":"Alternatively, copy and paste the data file with the *same name* from your old computer.","lastModifiedDate":"2022-09-29"},{"lineNumber":264,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":265,"author":{"gitId":"chngchngchng"},"content":"**Q**: Help! I can\u0027t seem to get a command to work...\u003cbr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":266,"author":{"gitId":"chngchngchng"},"content":"**A**: Take a look at the command info above! Make sure that you have supplied all necessary parameters and specified parameter flags in a correct manner (`-` for short, `--` for full).","lastModifiedDate":"2022-09-29"},{"lineNumber":267,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":268,"author":{"gitId":"chngchngchng"},"content":"**Q**: How do I run the app if double clicking the jar file does nothing? \u003cbr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":269,"author":{"gitId":"chngchngchng"},"content":"**A**: First, make sure that you have Java `11` or above installed. For the more technically inclined, run this command in the jar file\u0027s home directory: `java -jar cobb.jar`\u003cbr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":270,"author":{"gitId":"chngchngchng"},"content":"If the problem persists, report the bug to us!","lastModifiedDate":"2022-09-29"},{"lineNumber":271,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":272,"author":{"gitId":"chngchngchng"},"content":"**Q**: I deleted my data file! Is there any way to recover the data that I lost?\u003cbr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":273,"author":{"gitId":"chngchngchng"},"content":"**A**: Unfortunately, there is no way for you to recover your data after you have deleted it. However, we are working on a way to make data persist in the future, so stay tuned!","lastModifiedDate":"2022-09-29"},{"lineNumber":274,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":275,"author":{"gitId":"chngchngchng"},"content":"**Q**: How do I uninstall Cobb? \u003cbr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":276,"author":{"gitId":"chngchngchng"},"content":"**A**: We are sad to see you go :( Cobb is not installed onto your hard drive, so you only need to delete the `cobb.jar` file as well as any associated data files.","lastModifiedDate":"2022-09-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"chngchngchng"},"content":" | Action                       | Format, Examples                                                                                                                                                     |","lastModifiedDate":"2022-09-29"},{"lineNumber":283,"author":{"gitId":"chngchngchng"},"content":"|------------------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-09-29"},{"lineNumber":284,"author":{"gitId":"chngchngchng"},"content":" | **Add person**               | `addperson [-n NAME] [-r \u003cs, b\u003e] [-p PHONE] [-e EMAIL] [-a address] ` \u003cbr\u003e e.g., `addperson -n Tim -roles s,b -p 87321237 -e tim@gmail.com -a S648234`               |","lastModifiedDate":"2022-09-29"},{"lineNumber":285,"author":{"gitId":"chngchngchng"},"content":" | **Add property**             | `addprop [-n NAME] [-a ADDRESS] [-p PRICE] [-d DESCRIPTION]` \u003cbr\u003e e.g.`addprop -n Peak Residences -a 333 Thompson Road -p 1,100,000 -d Lorem Ipsum`                  |","lastModifiedDate":"2022-09-29"},{"lineNumber":286,"author":{"gitId":"chngchngchng"},"content":" | **Delete person / property** | `delete [-s] [-b] [-p] [-n NAME] [-k KEYWORD]` \u003cbr\u003e e.g. `delete -p Peak Residences -k Thompson Road`                                                                |","lastModifiedDate":"2022-09-29"},{"lineNumber":287,"author":{"gitId":"chngchngchng"},"content":" | **Update property**          | `editprop [-n NAME] [-a ADDRESS] [-p PRICE] [-d DESCRIPTION]`\u003cbr\u003e e.g., `editprop -n Hill Residence -a Block 225 -p 750000`                                          |","lastModifiedDate":"2022-09-29"},{"lineNumber":288,"author":{"gitId":"chngchngchng"},"content":" | **Update buyer**             | `editbuyer [-en EXISTINGNAME] [-nn NEWNAME] [-m BUDGET] [-r REQUIREMENTS] [-c NUMBER] [-e EMAIL]`\u003cbr\u003e e.g.,`editbuyer -en Mary -m 20500 -r Facing North -c 92348712` |","lastModifiedDate":"2022-09-29"},{"lineNumber":289,"author":{"gitId":"chngchngchng"},"content":" | **Update seller**            | `editseller [-en EXISTINGNAME] [-nn NEWNAME] [-c NUMBER] [-e EMAIL] [-p PROPERTY]`\u003cbr\u003e e.g., `editseller -en Mary -c 92348712`                                       |","lastModifiedDate":"2022-09-29"},{"lineNumber":290,"author":{"gitId":"chngchngchng"},"content":" | **Find entries**             | `find [-s] [-b] [-p] [-k KEYWORDS]` \u003cbr\u003e e.g. `find -b -k Keyword1, Keyword2`                                                                                        |","lastModifiedDate":"2022-09-29"},{"lineNumber":291,"author":{"gitId":"chngchngchng"},"content":" | **List users**               | `listusers [-s] [-b] [-sort \u003cdateadded, alpha\u003e \u003casc, dsc\u003e]` \u003cbr\u003e e.g. `listusers -b -sort dateadded asc`                                                             |","lastModifiedDate":"2022-09-29"},{"lineNumber":292,"author":{"gitId":"chngchngchng"},"content":"| **List Properties**          | `listprops [-sort \u003cdateadded, alpha\u003e \u003casc, dsc\u003e]` \u003cbr\u003e e.g. `listprops -sort alpha dsc`                                                                              |","lastModifiedDate":"2022-09-29"},{"lineNumber":293,"author":{"gitId":"chngchngchng"},"content":"| **Exit cobb**                | `exit`                                                                                                                                                               |","lastModifiedDate":"2022-09-29"},{"lineNumber":294,"author":{"gitId":"chngchngchng"},"content":"| **Get help**                 | `help`                                                                                                                                                               |","lastModifiedDate":"2022-09-29"}],"authorContributionMap":{"chngchngchng":185,"-":109}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"user -[USER_COLOR]\u003e ui : \"delete 1\"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"logic -[LOGIC_COLOR]\u003e model : deletePerson(p)","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"zsiggg"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveAddressBook(personBook)","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"zsiggg":1,"-":37}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"jchilling"},"content":"title: Cobb","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/se-edu/addressbook-level3/actions)","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2223S1-CS2103T-F12-1/tp/branch/master/graph/badge.svg?token\u003dIIS9IA9J5L)](https://codecov.io/gh/AY2223S1-CS2103T-F12-1/tp)","lastModifiedDate":"2022-09-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"jchilling"},"content":"**Cobb is an optimised object-oriented command-line entry management application that aims to make database management for Real Estate Agents easier and more accessible.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"jchilling"},"content":"* If you are interested in using Cobb, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"jchilling"},"content":"* If you are interested about developing Cobb, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"jchilling":4,"-":14}},{"path":"docs/team/chngchngchng.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"chngchngchng"},"content":"---","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"chngchngchng"},"content":"layout: page","lastModifiedDate":"2022-09-29"},{"lineNumber":3,"author":{"gitId":"chngchngchng"},"content":"title: Chng Ian\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"chngchngchng"},"content":"---","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"chngchngchng"},"content":"### Project: Cobb","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"chngchngchng"},"content":"Cobb is a desktop address book application for property agents. The user interacts with it using a CLI, and it has a GUI created with JavaFX.","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"chngchngchng"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"chngchngchng"},"content":"* **Code Contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dchngchngchng\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-09-29"},{"lineNumber":13,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":14,"author":{"gitId":"chngchngchng"},"content":"* **Enhancements implemented**: To be added soon","lastModifiedDate":"2022-09-29"},{"lineNumber":15,"author":{"gitId":"chngchngchng"},"content":"* **Contributions to the UG**: To be added soon","lastModifiedDate":"2022-09-29"},{"lineNumber":16,"author":{"gitId":"chngchngchng"},"content":"* **Contributions to the DG**: To be added soon","lastModifiedDate":"2022-09-29"},{"lineNumber":17,"author":{"gitId":"chngchngchng"},"content":"* **Contributions to team-based tasks**: To be added soon","lastModifiedDate":"2022-09-29"},{"lineNumber":18,"author":{"gitId":"chngchngchng"},"content":"* **Review/mentoring contributions:** To be added soon","lastModifiedDate":"2022-09-29"},{"lineNumber":19,"author":{"gitId":"chngchngchng"},"content":"* **Contributions beyond the project team**: To be added soon","lastModifiedDate":"2022-09-29"}],"authorContributionMap":{"chngchngchng":19}},{"path":"docs/team/chryslinelim.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ChryslineLim"},"content":"## Project: Cobb","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"ChryslineLim"},"content":"---","lastModifiedDate":"2022-09-29"},{"lineNumber":3,"author":{"gitId":"ChryslineLim"},"content":"layout: page","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"ChryslineLim"},"content":"title: Chrysline Lim\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"ChryslineLim"},"content":"---","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"ChryslineLim"},"content":"### Project: Cobb","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"ChryslineLim"},"content":"Cobb is a desktop address book application for property agents. The user interacts with it using a CLI, and it has a GUI created with JavaFX.","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"ChryslineLim"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":13,"author":{"gitId":"ChryslineLim"},"content":"- **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dchryslinelim\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-09-29"},{"lineNumber":14,"author":{"gitId":"ChryslineLim"},"content":"- **Enhancements implemented**: to be added soon","lastModifiedDate":"2022-09-29"},{"lineNumber":15,"author":{"gitId":"ChryslineLim"},"content":"- **Contributions to the UG**: to be added soon","lastModifiedDate":"2022-09-29"},{"lineNumber":16,"author":{"gitId":"ChryslineLim"},"content":"- **Contributions to the DG**: to be added soon","lastModifiedDate":"2022-09-29"},{"lineNumber":17,"author":{"gitId":"ChryslineLim"},"content":"- **Contributions to team-based tasks**: to be added soon","lastModifiedDate":"2022-09-29"},{"lineNumber":18,"author":{"gitId":"ChryslineLim"},"content":"- **Review/mentoring contributions**: to be added soon","lastModifiedDate":"2022-09-29"},{"lineNumber":19,"author":{"gitId":"ChryslineLim"},"content":"- **Contributions beyond the project team**: to be added soon","lastModifiedDate":"2022-09-29"}],"authorContributionMap":{"ChryslineLim":19}},{"path":"docs/team/jchilling.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jchilling"},"content":"---","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"jchilling"},"content":"layout: page","lastModifiedDate":"2022-09-29"},{"lineNumber":3,"author":{"gitId":"jchilling"},"content":"title: Chen Hung-Yu\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"jchilling"},"content":"---","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"jchilling"},"content":"### Project: Cobb","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"jchilling"},"content":"Cobb is a desktop address book application for property agents. The user interacts with it using a CLI, and it has a GUI created with JavaFX.","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"jchilling"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"jchilling"},"content":"- **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003djchilling\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-09-29"},{"lineNumber":13,"author":{"gitId":"jchilling"},"content":"- **Enhancements implemented**: to be added soon","lastModifiedDate":"2022-09-29"},{"lineNumber":14,"author":{"gitId":"jchilling"},"content":"- **Contributions to the UG**: to be added soon","lastModifiedDate":"2022-09-29"},{"lineNumber":15,"author":{"gitId":"jchilling"},"content":"- **Contributions to the DG**: to be added soon","lastModifiedDate":"2022-09-29"},{"lineNumber":16,"author":{"gitId":"jchilling"},"content":"- **Contributions to team-based tasks**: to be added soon","lastModifiedDate":"2022-09-29"},{"lineNumber":17,"author":{"gitId":"jchilling"},"content":"- **Review/mentoring contributions**: to be added soon","lastModifiedDate":"2022-09-29"},{"lineNumber":18,"author":{"gitId":"jchilling"},"content":"- **Contributions beyond the project team**: to be added soon","lastModifiedDate":"2022-09-29"}],"authorContributionMap":{"jchilling":18}},{"path":"docs/team/riccqi.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"riccqi"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":2,"author":{"gitId":"riccqi"},"content":"layout: page","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"riccqi"},"content":"title: Qi Zhi\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"riccqi"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"riccqi"},"content":"### Project: Cobb","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"riccqi"},"content":"Cobb is a desktop address book application for property agents. The user interacts with it using a CLI, and it has a GUI created with JavaFX.","lastModifiedDate":"2022-09-28"},{"lineNumber":9,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":10,"author":{"gitId":"riccqi"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-28"},{"lineNumber":11,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":12,"author":{"gitId":"riccqi"},"content":"* **Code Contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003driccqi\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":14,"author":{"gitId":"riccqi"},"content":"* **Enhancements implemented**: To be added soon","lastModifiedDate":"2022-09-28"},{"lineNumber":15,"author":{"gitId":"riccqi"},"content":"* **Contributions to the UG**: To be added soon","lastModifiedDate":"2022-09-28"},{"lineNumber":16,"author":{"gitId":"riccqi"},"content":"* **Contributions to the DG**: To be added soon","lastModifiedDate":"2022-09-28"},{"lineNumber":17,"author":{"gitId":"riccqi"},"content":"* **Contributions to team-based tasks**: To be added soon","lastModifiedDate":"2022-09-28"},{"lineNumber":18,"author":{"gitId":"riccqi"},"content":"* **Review/mentoring contributions:** To be added soon","lastModifiedDate":"2022-09-28"},{"lineNumber":19,"author":{"gitId":"riccqi"},"content":"* **Contributions beyond the project team**: To be added soon","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"riccqi":19}},{"path":"docs/team/zsiggg.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"zsiggg"},"content":"---","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"zsiggg"},"content":"layout: page","lastModifiedDate":"2022-09-29"},{"lineNumber":3,"author":{"gitId":"zsiggg"},"content":"title: Zsigmond Poh\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"zsiggg"},"content":"---","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"zsiggg"},"content":"### Project: Cobb","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"zsiggg"},"content":"Cobb is a desktop address book application for property agents. The user interacts with it using a CLI, and it has a GUI created with JavaFX.","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"zsiggg"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"zsiggg"},"content":"* **Overview**: to be added soon","lastModifiedDate":"2022-09-29"},{"lineNumber":13,"author":{"gitId":"zsiggg"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dzsiggg\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-09-29"},{"lineNumber":14,"author":{"gitId":"zsiggg"},"content":"* **Enhancements implemented**: to be added soon","lastModifiedDate":"2022-09-29"},{"lineNumber":15,"author":{"gitId":"zsiggg"},"content":"* **Contributions to the UG**: to be added soon","lastModifiedDate":"2022-09-29"},{"lineNumber":16,"author":{"gitId":"zsiggg"},"content":"* **Contributions to the DG**: to be added soon","lastModifiedDate":"2022-09-29"},{"lineNumber":17,"author":{"gitId":"zsiggg"},"content":"* **Contributions to team-based tasks**:","lastModifiedDate":"2022-09-29"},{"lineNumber":18,"author":{"gitId":"zsiggg"},"content":"  * Pull requests reviewed:","lastModifiedDate":"2022-09-29"},{"lineNumber":19,"author":{"gitId":"zsiggg"},"content":"    * https://github.com/AY2223S1-CS2103T-F12-1/tp/pull/42","lastModifiedDate":"2022-09-29"},{"lineNumber":20,"author":{"gitId":"zsiggg"},"content":"* **Review/mentoring contributions**: to be added soon","lastModifiedDate":"2022-09-29"},{"lineNumber":21,"author":{"gitId":"zsiggg"},"content":"* **Contributions beyond the project team**: to be added soon","lastModifiedDate":"2022-09-29"}],"authorContributionMap":{"zsiggg":21}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2020-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2020-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2020-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2021-08-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2020-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"Create a `RemarkCommandParser` class in the `seedu.address.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2020-07-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"-"},"content":"Create a new `Remark` in `seedu.address.model.person`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2020-07-29"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":235,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"-"},"content":"Simply add the following to [`seedu.address.ui.PersonCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2022-01-02"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-01-02"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"zsiggg"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/personmodel.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2022-10-11"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-08-01"},{"lineNumber":348,"author":{"gitId":"-"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-08-01"},{"lineNumber":349,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":378,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"zsiggg":1,"-":400}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Person` class.","lastModifiedDate":"2021-08-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"zsiggg"},"content":"The `address` field in `Person` is actually an instance of the `seedu.address.model.address.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2022-10-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2021-08-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Let’s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"1. Safe delete the field `address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**`invalidPersonAddressBook.json`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"zsiggg":1,"-":111}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"zsiggg"},"content":"import static seedu.address.model.util.SampleDataUtil.getSamplePropertyModel;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"zsiggg"},"content":"import seedu.address.model.PersonBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"zsiggg"},"content":"import seedu.address.model.PropertyBook;","lastModifiedDate":"2022-10-19"},{"lineNumber":24,"author":{"gitId":"zsiggg"},"content":"import seedu.address.model.ReadOnlyPersonBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"zsiggg"},"content":"import seedu.address.model.ReadOnlyPropertyBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"zsiggg"},"content":"import seedu.address.storage.JsonPropertyBookStorage;","lastModifiedDate":"2022-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":33,"author":{"gitId":"zsiggg"},"content":"import seedu.address.storage.PropertyBookStorage;","lastModifiedDate":"2022-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"riccqi"},"content":"    public static final Version VERSION \u003d new Version(1, 2, 0, true);","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"zsiggg"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing PersonBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":65,"author":{"gitId":"zsiggg"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getPersonBookFilePath());","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"zsiggg"},"content":"        PropertyBookStorage propertyBookStorage \u003d new JsonPropertyBookStorage(userPrefs.getPropertyBookFilePath());","lastModifiedDate":"2022-10-19"},{"lineNumber":67,"author":{"gitId":"zsiggg"},"content":"        storage \u003d new StorageManager(addressBookStorage, propertyBookStorage, userPrefsStorage);","lastModifiedDate":"2022-10-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":84,"author":{"gitId":"zsiggg"},"content":"        Optional\u003cReadOnlyPersonBook\u003e personModelOptional;","lastModifiedDate":"2022-10-13"},{"lineNumber":85,"author":{"gitId":"zsiggg"},"content":"        ReadOnlyPersonBook personModel;","lastModifiedDate":"2022-10-13"},{"lineNumber":86,"author":{"gitId":"zsiggg"},"content":"        Optional\u003cReadOnlyPropertyBook\u003e propertyBookOptional;","lastModifiedDate":"2022-10-19"},{"lineNumber":87,"author":{"gitId":"zsiggg"},"content":"        ReadOnlyPropertyBook propertyBook;","lastModifiedDate":"2022-10-19"},{"lineNumber":88,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"zsiggg"},"content":"            personModelOptional \u003d storage.readAddressBook();","lastModifiedDate":"2022-10-11"},{"lineNumber":91,"author":{"gitId":"zsiggg"},"content":"            if (!personModelOptional.isPresent()) {","lastModifiedDate":"2022-10-11"},{"lineNumber":92,"author":{"gitId":"zsiggg"},"content":"                logger.info(\"Data file not found. Will be starting with a sample PersonBook\");","lastModifiedDate":"2022-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":94,"author":{"gitId":"zsiggg"},"content":"            personModel \u003d personModelOptional.orElseGet(SampleDataUtil::getSamplePersonModel);","lastModifiedDate":"2022-10-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"zsiggg"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty PersonBook\");","lastModifiedDate":"2022-10-13"},{"lineNumber":97,"author":{"gitId":"zsiggg"},"content":"            personModel \u003d new PersonBook();","lastModifiedDate":"2022-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":99,"author":{"gitId":"zsiggg"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty PersonBook\");","lastModifiedDate":"2022-10-13"},{"lineNumber":100,"author":{"gitId":"zsiggg"},"content":"            personModel \u003d new PersonBook();","lastModifiedDate":"2022-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-10-19"},{"lineNumber":104,"author":{"gitId":"zsiggg"},"content":"            propertyBookOptional \u003d storage.readPropertyBook();","lastModifiedDate":"2022-10-19"},{"lineNumber":105,"author":{"gitId":"zsiggg"},"content":"            if (!propertyBookOptional.isPresent()) {","lastModifiedDate":"2022-10-19"},{"lineNumber":106,"author":{"gitId":"zsiggg"},"content":"                logger.info(\"Data file not found. Will be starting with a sample PropertyBook\");","lastModifiedDate":"2022-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2022-10-19"},{"lineNumber":108,"author":{"gitId":"zsiggg"},"content":"            propertyBook \u003d propertyBookOptional.orElseGet(SampleDataUtil::getSamplePropertyModel);","lastModifiedDate":"2022-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2022-10-19"},{"lineNumber":110,"author":{"gitId":"zsiggg"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty PropertyBook\");","lastModifiedDate":"2022-10-19"},{"lineNumber":111,"author":{"gitId":"zsiggg"},"content":"            propertyBook \u003d new PropertyBook();","lastModifiedDate":"2022-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-10-19"},{"lineNumber":113,"author":{"gitId":"zsiggg"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty PropertyBook\");","lastModifiedDate":"2022-10-19"},{"lineNumber":114,"author":{"gitId":"zsiggg"},"content":"            propertyBook \u003d new PropertyBook();","lastModifiedDate":"2022-10-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":117,"author":{"gitId":"zsiggg"},"content":"        return new ModelManager(personModel, propertyBook, userPrefs);","lastModifiedDate":"2022-10-19"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"zsiggg"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty PersonBook\");","lastModifiedDate":"2022-10-13"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"zsiggg"},"content":"        logger.info(\"Starting PersonBook \" + MainApp.VERSION);","lastModifiedDate":"2022-10-13"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":207,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"riccqi":1,"zsiggg":36,"-":170}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"jchilling"},"content":"    public static final String MESSAGE_INVALID_PROPERTY_DISPLAYED_INDEX \u003d \"The property index provided is invalid\";","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"ChryslineLim"},"content":"    public static final String MESSAGE_PROPERTY_LISTED_OVERVIEW \u003d \"%1$d properties listed!\";","lastModifiedDate":"2022-10-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jchilling":1,"-":12,"ChryslineLim":1}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"zsiggg"},"content":"import seedu.address.model.ReadOnlyPersonBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"zsiggg"},"content":"import seedu.address.model.ReadOnlyPropertyBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"zsiggg"},"content":"import seedu.address.model.property.Property;","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"zsiggg"},"content":"     * Returns the PersonBook.","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"zsiggg"},"content":"     * @see seedu.address.model.Model#getPersonModel()","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"zsiggg"},"content":"    ReadOnlyPersonBook getPersonModel();","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"zsiggg"},"content":"     * Returns the PropertyBook.","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"zsiggg"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"zsiggg"},"content":"     * @see seedu.address.model.Model#getPropertyModel()","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"zsiggg"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"zsiggg"},"content":"    ReadOnlyPropertyBook getPropertyModel();","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"zsiggg"},"content":"    /** Returns an unmodifiable view of the filtered list of properties */","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"zsiggg"},"content":"    ObservableList\u003cProperty\u003e getFilteredPropertyList();","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"zsiggg"},"content":"     * Returns the user prefs\u0027 person model file path.","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"zsiggg"},"content":"    Path getPersonModelFilePath();","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"zsiggg"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"zsiggg"},"content":"     * Returns the user prefs\u0027 property model file path.","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"zsiggg"},"content":"    Path getPropertyModelFilePath();","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"zsiggg":21,"-":46}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"zsiggg"},"content":"import seedu.address.model.ReadOnlyPersonBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"zsiggg"},"content":"import seedu.address.model.ReadOnlyPropertyBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"zsiggg"},"content":"import seedu.address.model.property.Property;","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"zsiggg"},"content":"            storage.saveAddressBook(model.getPersonModel());","lastModifiedDate":"2022-10-19"},{"lineNumber":52,"author":{"gitId":"zsiggg"},"content":"            storage.savePropertyBook(model.getPropertyModel());","lastModifiedDate":"2022-10-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"zsiggg"},"content":"    public ReadOnlyPersonBook getPersonModel() {","lastModifiedDate":"2022-10-13"},{"lineNumber":62,"author":{"gitId":"zsiggg"},"content":"        return model.getPersonModel();","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"zsiggg"},"content":"    public ReadOnlyPropertyBook getPropertyModel() {","lastModifiedDate":"2022-10-13"},{"lineNumber":72,"author":{"gitId":"zsiggg"},"content":"        return model.getPropertyModel();","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":74,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":75,"author":{"gitId":"zsiggg"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":76,"author":{"gitId":"zsiggg"},"content":"    public ObservableList\u003cProperty\u003e getFilteredPropertyList() {","lastModifiedDate":"2022-10-11"},{"lineNumber":77,"author":{"gitId":"zsiggg"},"content":"        return model.getFilteredPropertyList();","lastModifiedDate":"2022-10-11"},{"lineNumber":78,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":79,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"zsiggg"},"content":"    public Path getPersonModelFilePath() {","lastModifiedDate":"2022-10-11"},{"lineNumber":82,"author":{"gitId":"zsiggg"},"content":"        return model.getPersonModelFilePath();","lastModifiedDate":"2022-10-11"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"zsiggg"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":86,"author":{"gitId":"zsiggg"},"content":"    public Path getPropertyModelFilePath() {","lastModifiedDate":"2022-10-11"},{"lineNumber":87,"author":{"gitId":"zsiggg"},"content":"        return model.getPropertyModelFilePath();","lastModifiedDate":"2022-10-11"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"zsiggg":21,"-":78}},{"path":"src/main/java/seedu/address/logic/commands/AddPersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"ChryslineLim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CHARACTERISTICS;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"ChryslineLim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRICE_RANGE;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"jchilling"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRIORITY;","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"ChryslineLim"},"content":"public class AddPersonCommand extends Command {","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"ChryslineLim"},"content":"    public static final String COMMAND_WORD \u003d \"addbuyer\";","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"ChryslineLim"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a buyer to the address book. \"","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \" NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \" PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \" EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \" ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":29,"author":{"gitId":"ChryslineLim"},"content":"            + \"[\" + PREFIX_PRICE_RANGE + \" PRICE RANGE] \"","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"ChryslineLim"},"content":"            + \"[\" + PREFIX_CHARACTERISTICS + \" DESIRED CHARACTERISTICS] \"","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \" John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \" 98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \" johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \" 311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"ChryslineLim"},"content":"            + PREFIX_PRICE_RANGE + \" 200000 - 250000 \"","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"ChryslineLim"},"content":"            + PREFIX_CHARACTERISTICS + \" 5-ROOM; SOUTH-FACING; BISHAN \"","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"jchilling"},"content":"            + PREFIX_PRIORITY + \" high \";","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"ChryslineLim"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New buyer added: %1$s\";","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"ChryslineLim"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This buyer already exists in the address book\";","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"ChryslineLim"},"content":"     * Creates an AddPersonCommand to add the specified {@code Person}","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"ChryslineLim"},"content":"    public AddPersonCommand(Person person) {","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"ChryslineLim"},"content":"                || (other instanceof AddPersonCommand // instanceof handles nulls","lastModifiedDate":"2022-10-05"},{"lineNumber":69,"author":{"gitId":"ChryslineLim"},"content":"                \u0026\u0026 toAdd.equals(((AddPersonCommand) other).toAdd));","lastModifiedDate":"2022-10-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jchilling":2,"-":54,"ChryslineLim":15}},{"path":"src/main/java/seedu/address/logic/commands/AddPropertyCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zsiggg"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"zsiggg"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"zsiggg"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"ChryslineLim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CHARACTERISTICS;","lastModifiedDate":"2022-10-19"},{"lineNumber":6,"author":{"gitId":"zsiggg"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"zsiggg"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_OWNER_NAME;","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"zsiggg"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRICE;","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"zsiggg"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"zsiggg"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"zsiggg"},"content":"import seedu.address.model.property.Property;","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"zsiggg"},"content":"/**","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"zsiggg"},"content":" * Adds a property to the address book.","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"zsiggg"},"content":" */","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"zsiggg"},"content":"public class AddPropertyCommand extends Command {","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"zsiggg"},"content":"    public static final String COMMAND_WORD \u003d \"addprop\";","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"zsiggg"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a property to the address book. \"","lastModifiedDate":"2022-10-07"},{"lineNumber":24,"author":{"gitId":"zsiggg"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"zsiggg"},"content":"            + PREFIX_NAME + \" NAME \"","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"zsiggg"},"content":"            + PREFIX_PRICE + \" PRICE \"","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"zsiggg"},"content":"            + PREFIX_ADDRESS + \" ADDRESS \"","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"zsiggg"},"content":"            + PREFIX_DESCRIPTION + \" DESCRIPTION \"","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"ChryslineLim"},"content":"            + \"[\" + PREFIX_CHARACTERISTICS + \" CHARACTERISTICS]\\n\"","lastModifiedDate":"2022-10-19"},{"lineNumber":30,"author":{"gitId":"riccqi"},"content":"            + PREFIX_OWNER_NAME + \" OWNER NAME \"","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"riccqi"},"content":"            + PREFIX_PHONE + \" PHONE \"","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"zsiggg"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"zsiggg"},"content":"            + PREFIX_NAME + \" Clementi Ave 2 Second Floor Flat \"","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"zsiggg"},"content":"            + PREFIX_PRICE + \" 500000 \"","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"zsiggg"},"content":"            + PREFIX_ADDRESS + \" 311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"zsiggg"},"content":"            + PREFIX_DESCRIPTION + \" ready to be bought \"","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"riccqi"},"content":"            + PREFIX_CHARACTERISTICS + \" 5-Room; Near School\"","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"riccqi"},"content":"            + PREFIX_OWNER_NAME + \" John Doe \"","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"riccqi"},"content":"            + PREFIX_PHONE + \" 8000 1000 \";","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"zsiggg"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New property added: %1$s\";","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"zsiggg"},"content":"    public static final String MESSAGE_DUPLICATE_PROPERTY \u003d \"This property already exists in the address book\";","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"zsiggg"},"content":"    private final Property property;","lastModifiedDate":"2022-10-08"},{"lineNumber":45,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"zsiggg"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"zsiggg"},"content":"     * Creates an AddPropertyCommand to add the specified {@code Property}","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"zsiggg"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"zsiggg"},"content":"    public AddPropertyCommand(Property property) {","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"zsiggg"},"content":"        requireNonNull(property);","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"zsiggg"},"content":"        this.property \u003d property;","lastModifiedDate":"2022-10-08"},{"lineNumber":52,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":53,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"zsiggg"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":55,"author":{"gitId":"zsiggg"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"zsiggg"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-05"},{"lineNumber":57,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":58,"author":{"gitId":"zsiggg"},"content":"        if (model.hasProperty(property)) {","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"zsiggg"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PROPERTY);","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"zsiggg"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":62,"author":{"gitId":"zsiggg"},"content":"        model.addProperty(property);","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"zsiggg"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, property));","lastModifiedDate":"2022-10-08"},{"lineNumber":64,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":65,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":66,"author":{"gitId":"zsiggg"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":67,"author":{"gitId":"zsiggg"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-05"},{"lineNumber":68,"author":{"gitId":"zsiggg"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-05"},{"lineNumber":69,"author":{"gitId":"zsiggg"},"content":"                || (other instanceof AddPropertyCommand // instanceof handles nulls","lastModifiedDate":"2022-10-05"},{"lineNumber":70,"author":{"gitId":"zsiggg"},"content":"                \u0026\u0026 property.equals(((AddPropertyCommand) other).property));","lastModifiedDate":"2022-10-08"},{"lineNumber":71,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":72,"author":{"gitId":"zsiggg"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"riccqi":7,"zsiggg":63,"ChryslineLim":2}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":6,"author":{"gitId":"zsiggg"},"content":"import seedu.address.model.PersonBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"zsiggg"},"content":"import seedu.address.model.PropertyBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"zsiggg"},"content":" * Clears both person and property list.","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"zsiggg"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Properties and Persons list has been cleared!\";","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"zsiggg"},"content":"        model.setPersonModel(new PersonBook());","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"zsiggg"},"content":"        model.setPropertyModel(new PropertyBook());","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"zsiggg":6,"-":19}},{"path":"src/main/java/seedu/address/logic/commands/DeleteBuyerCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"jchilling"},"content":"public class DeleteBuyerCommand extends Command {","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"jchilling"},"content":"    public static final String COMMAND_WORD \u003d \"deletebuyer\";","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"jchilling"},"content":"            + \": Deletes the buyer identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"jchilling"},"content":"    public DeleteBuyerCommand(Index targetIndex) {","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete));","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"jchilling"},"content":"                || (other instanceof DeleteBuyerCommand // instanceof handles nulls","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"jchilling"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteBuyerCommand) other).targetIndex)); // state check","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jchilling":6,"-":47}},{"path":"src/main/java/seedu/address/logic/commands/DeletePropertyCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jchilling"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"jchilling"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"jchilling"},"content":"import java.util.List;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"jchilling"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"jchilling"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"jchilling"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"jchilling"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"jchilling"},"content":"import seedu.address.model.property.Property;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"jchilling"},"content":"/**","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"jchilling"},"content":" * Deletes a properety identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"jchilling"},"content":" */","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"jchilling"},"content":"public class DeletePropertyCommand extends Command {","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"jchilling"},"content":"    public static final String COMMAND_WORD \u003d \"deleteprop\";","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"jchilling"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"jchilling"},"content":"            + \": Deletes the property identified by the index number used in the displayed property list.\\n\"","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"jchilling"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"jchilling"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"jchilling"},"content":"    public static final String MESSAGE_DELETE_PROPERTY_SUCCESS \u003d \"Deleted Property: %1$s\";","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"jchilling"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"jchilling"},"content":"    public DeletePropertyCommand(Index targetIndex) {","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"jchilling"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"jchilling"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"jchilling"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"jchilling"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"jchilling"},"content":"        List\u003cProperty\u003e lastShownPropertyList \u003d model.getFilteredPropertyList();","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"jchilling"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownPropertyList.size()) {","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"jchilling"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PROPERTY_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"jchilling"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"jchilling"},"content":"        Property propertyToDelete \u003d lastShownPropertyList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"jchilling"},"content":"        model.deleteProperty(propertyToDelete);","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"jchilling"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PROPERTY_SUCCESS, propertyToDelete));","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"jchilling"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"jchilling"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"jchilling"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"jchilling"},"content":"                || (other instanceof DeletePropertyCommand // instanceof handles nulls","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"jchilling"},"content":"                \u0026\u0026 targetIndex.equals(((DeletePropertyCommand) other).targetIndex)); // state check","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"jchilling"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"jchilling":53}},{"path":"src/main/java/seedu/address/logic/commands/EditBuyerCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"ChryslineLim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CHARACTERISTICS;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"ChryslineLim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRICE_RANGE;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"jchilling"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRIORITY;","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"zsiggg"},"content":"import seedu.address.model.address.Address;","lastModifiedDate":"2022-10-08"},{"lineNumber":22,"author":{"gitId":"ChryslineLim"},"content":"import seedu.address.model.characteristics.Characteristics;","lastModifiedDate":"2022-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"jchilling"},"content":"import seedu.address.model.person.Priority;","lastModifiedDate":"2022-10-19"},{"lineNumber":28,"author":{"gitId":"jchilling"},"content":"import seedu.address.model.pricerange.PriceRange;","lastModifiedDate":"2022-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"riccqi"},"content":"public class EditBuyerCommand extends Command {","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"ChryslineLim"},"content":"    public static final String COMMAND_WORD \u003d \"editbuyer\";","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"ChryslineLim"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the buyer identified \"","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"ChryslineLim"},"content":"            + \"by the index number used in the displayed buyer list. \"","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \" NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \" PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \" EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \" ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"ChryslineLim"},"content":"            + \"[\" + PREFIX_PRICE_RANGE + \" PRICE RANGE] \"","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"ChryslineLim"},"content":"            + \"[\" + PREFIX_CHARACTERISTICS + \" DESIRED CHARACTERISTICS] \"","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"jchilling"},"content":"            + \"[\" + PREFIX_PRIORITY + \"high]...\\n\"","lastModifiedDate":"2022-10-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"ChryslineLim"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Buyer: %1$s\";","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"ChryslineLim"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This buyer already exists in the address book.\";","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"riccqi"},"content":"    public EditBuyerCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":103,"author":{"gitId":"ChryslineLim"},"content":"        PriceRange updatedPriceRange \u003d editPersonDescriptor","lastModifiedDate":"2022-10-12"},{"lineNumber":104,"author":{"gitId":"ChryslineLim"},"content":"                .getPriceRange()","lastModifiedDate":"2022-10-12"},{"lineNumber":105,"author":{"gitId":"ChryslineLim"},"content":"                .orElse(personToEdit.getPriceRange().orElse(null));","lastModifiedDate":"2022-10-12"},{"lineNumber":106,"author":{"gitId":"ChryslineLim"},"content":"        Characteristics updatedCharacteristics \u003d editPersonDescriptor","lastModifiedDate":"2022-10-19"},{"lineNumber":107,"author":{"gitId":"ChryslineLim"},"content":"                .getDesiredCharacteristics()","lastModifiedDate":"2022-10-12"},{"lineNumber":108,"author":{"gitId":"ChryslineLim"},"content":"                .orElse(personToEdit.getDesiredCharacteristics().orElse(null));","lastModifiedDate":"2022-10-12"},{"lineNumber":109,"author":{"gitId":"jchilling"},"content":"        Priority updatedPriority \u003d editPersonDescriptor.getPriority().orElse(personToEdit.getPriority());","lastModifiedDate":"2022-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":111,"author":{"gitId":"ChryslineLim"},"content":"        Person newPerson \u003d new Person(updatedName, updatedPhone, updatedEmail, updatedAddress,","lastModifiedDate":"2022-10-12"},{"lineNumber":112,"author":{"gitId":"jchilling"},"content":"                updatedPriceRange, updatedCharacteristics, updatedPriority);","lastModifiedDate":"2022-10-19"},{"lineNumber":113,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":114,"author":{"gitId":"riccqi"},"content":"        return newPerson;","lastModifiedDate":"2022-10-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"riccqi"},"content":"        if (!(other instanceof EditBuyerCommand)) {","lastModifiedDate":"2022-10-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":130,"author":{"gitId":"riccqi"},"content":"        EditBuyerCommand e \u003d (EditBuyerCommand) other;","lastModifiedDate":"2022-10-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":144,"author":{"gitId":"ChryslineLim"},"content":"        private PriceRange priceRange;","lastModifiedDate":"2022-10-11"},{"lineNumber":145,"author":{"gitId":"ChryslineLim"},"content":"        private Characteristics characteristics;","lastModifiedDate":"2022-10-19"},{"lineNumber":146,"author":{"gitId":"jchilling"},"content":"        private Priority priority;","lastModifiedDate":"2022-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":151,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":152,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":153,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":159,"author":{"gitId":"ChryslineLim"},"content":"            setPriceRange(toCopy.priceRange);","lastModifiedDate":"2022-10-11"},{"lineNumber":160,"author":{"gitId":"ChryslineLim"},"content":"            setDesiredCharacteristics(toCopy.characteristics);","lastModifiedDate":"2022-10-19"},{"lineNumber":161,"author":{"gitId":"jchilling"},"content":"            setPriority(toCopy.priority);","lastModifiedDate":"2022-10-19"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"jchilling"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, priceRange, characteristics, priority);","lastModifiedDate":"2022-10-19"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":203,"author":{"gitId":"ChryslineLim"},"content":"        public void setPriceRange(PriceRange priceRange) {","lastModifiedDate":"2022-10-11"},{"lineNumber":204,"author":{"gitId":"ChryslineLim"},"content":"            this.priceRange \u003d priceRange;","lastModifiedDate":"2022-10-11"},{"lineNumber":205,"author":{"gitId":"ChryslineLim"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":206,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":207,"author":{"gitId":"ChryslineLim"},"content":"        public Optional\u003cPriceRange\u003e getPriceRange() {","lastModifiedDate":"2022-10-11"},{"lineNumber":208,"author":{"gitId":"ChryslineLim"},"content":"            return Optional.ofNullable(priceRange);","lastModifiedDate":"2022-10-11"},{"lineNumber":209,"author":{"gitId":"ChryslineLim"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":210,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":211,"author":{"gitId":"ChryslineLim"},"content":"        public void setDesiredCharacteristics(Characteristics characteristics) {","lastModifiedDate":"2022-10-19"},{"lineNumber":212,"author":{"gitId":"ChryslineLim"},"content":"            this.characteristics \u003d characteristics;","lastModifiedDate":"2022-10-19"},{"lineNumber":213,"author":{"gitId":"ChryslineLim"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":214,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":215,"author":{"gitId":"ChryslineLim"},"content":"        public Optional\u003cCharacteristics\u003e getDesiredCharacteristics() {","lastModifiedDate":"2022-10-19"},{"lineNumber":216,"author":{"gitId":"ChryslineLim"},"content":"            return Optional.ofNullable(characteristics);","lastModifiedDate":"2022-10-19"},{"lineNumber":217,"author":{"gitId":"ChryslineLim"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":218,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":220,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":221,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":222,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":223,"author":{"gitId":"jchilling"},"content":"        public void setPriority(Priority priority) {","lastModifiedDate":"2022-10-19"},{"lineNumber":224,"author":{"gitId":"jchilling"},"content":"            this.priority \u003d priority;","lastModifiedDate":"2022-10-19"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":228,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":229,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":230,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":231,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":232,"author":{"gitId":"jchilling"},"content":"        public Optional\u003cPriority\u003e getPriority() {","lastModifiedDate":"2022-10-19"},{"lineNumber":233,"author":{"gitId":"jchilling"},"content":"            return Optional.ofNullable(priority);","lastModifiedDate":"2022-10-19"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":238,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":239,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":240,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":241,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":243,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":244,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":245,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":246,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":248,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":249,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":251,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":252,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":253,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":254,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":255,"author":{"gitId":"ChryslineLim"},"content":"                    \u0026\u0026 getPriceRange().equals(e.getPriceRange())","lastModifiedDate":"2022-10-11"},{"lineNumber":256,"author":{"gitId":"ChryslineLim"},"content":"                    \u0026\u0026 getDesiredCharacteristics().equals(e.getDesiredCharacteristics())","lastModifiedDate":"2022-10-11"},{"lineNumber":257,"author":{"gitId":"jchilling"},"content":"                    \u0026\u0026 getPriority().equals(e.getPriority());","lastModifiedDate":"2022-10-19"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":260,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"riccqi":6,"zsiggg":1,"jchilling":14,"-":200,"ChryslineLim":39}},{"path":"src/main/java/seedu/address/logic/commands/EditPropertyCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"riccqi"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"riccqi"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"riccqi"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"ChryslineLim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CHARACTERISTICS;","lastModifiedDate":"2022-10-19"},{"lineNumber":7,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_OWNER_NAME;","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRICE;","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"riccqi"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PROPERTIES;","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"riccqi"},"content":"import java.util.List;","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"riccqi"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"riccqi"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"riccqi"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"riccqi"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"riccqi"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"riccqi"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"riccqi"},"content":"import seedu.address.model.address.Address;","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"ChryslineLim"},"content":"import seedu.address.model.characteristics.Characteristics;","lastModifiedDate":"2022-10-19"},{"lineNumber":24,"author":{"gitId":"riccqi"},"content":"import seedu.address.model.property.Description;","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"riccqi"},"content":"import seedu.address.model.property.Owner;","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"riccqi"},"content":"import seedu.address.model.property.Price;","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"riccqi"},"content":"import seedu.address.model.property.Property;","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"riccqi"},"content":"import seedu.address.model.property.PropertyName;","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"riccqi"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"riccqi"},"content":" * Edits the details of an existing property in the address book.","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"riccqi"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"riccqi"},"content":"public class EditPropertyCommand extends Command {","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"riccqi"},"content":"    public static final String COMMAND_WORD \u003d \"editprop\";","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"riccqi"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the property identified \"","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"riccqi"},"content":"            + \"by the index number used in the displayed property list. \"","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"riccqi"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"riccqi"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"riccqi"},"content":"            + \"[\" + PREFIX_NAME + \" NAME] \"","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"riccqi"},"content":"            + \"[\" + PREFIX_PRICE + \" PRICE] \"","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"riccqi"},"content":"            + \"[\" + PREFIX_ADDRESS + \" ADDRESS] \"","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"riccqi"},"content":"            + \"[\" + PREFIX_DESCRIPTION + \" DESC] \"","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"riccqi"},"content":"            + \"[\" + PREFIX_CHARACTERISTICS + \" CHARACTERISTICS]\"","lastModifiedDate":"2022-10-20"},{"lineNumber":46,"author":{"gitId":"riccqi"},"content":"            + \"[\" + PREFIX_OWNER_NAME + \" OWNER NAME] \"","lastModifiedDate":"2022-10-20"},{"lineNumber":47,"author":{"gitId":"riccqi"},"content":"            + \"[\" + PREFIX_PHONE + \" OWNER PHONE]\\n\"","lastModifiedDate":"2022-10-20"},{"lineNumber":48,"author":{"gitId":"riccqi"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"riccqi"},"content":"            + PREFIX_NAME + \" 4 Room Heng Mui Keng Condo \"","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"ChryslineLim"},"content":"            + PREFIX_PRICE + \" 500000 \"","lastModifiedDate":"2022-10-19"},{"lineNumber":51,"author":{"gitId":"riccqi"},"content":"            + PREFIX_ADDRESS + \" Heng Mui Keng Terrace 22 \"","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"ChryslineLim"},"content":"            + PREFIX_DESCRIPTION + \" 4 Room Condo with 2 bathrooms \"","lastModifiedDate":"2022-10-19"},{"lineNumber":53,"author":{"gitId":"riccqi"},"content":"            + PREFIX_CHARACTERISTICS + \" 5-Room; Near School \"","lastModifiedDate":"2022-10-20"},{"lineNumber":54,"author":{"gitId":"riccqi"},"content":"            + PREFIX_OWNER_NAME + \" John Doe \"","lastModifiedDate":"2022-10-20"},{"lineNumber":55,"author":{"gitId":"riccqi"},"content":"            + PREFIX_PHONE + \" 8000 1000\\n\";","lastModifiedDate":"2022-10-20"},{"lineNumber":56,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"riccqi"},"content":"    public static final String MESSAGE_EDIT_PROPERTY_SUCCESS \u003d \"Edited Property: %1$s\";","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"riccqi"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"riccqi"},"content":"    public static final String MESSAGE_DUPLICATE_PROPERTY \u003d \"This property already exists in the address book.\";","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"riccqi"},"content":"    private final Index index;","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"riccqi"},"content":"    private final EditPropertyDescriptor editPropertyDescriptor;","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"riccqi"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"riccqi"},"content":"     * @param index of the Property in the filtered Property list to edit","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"riccqi"},"content":"     * @param editPropertyDescriptor details to edit the Property with","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"riccqi"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"riccqi"},"content":"    public EditPropertyCommand(Index index, EditPropertyDescriptor editPropertyDescriptor) {","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"riccqi"},"content":"        requireAllNonNull(index, editPropertyDescriptor);","lastModifiedDate":"2022-10-13"},{"lineNumber":70,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"riccqi"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-10-12"},{"lineNumber":72,"author":{"gitId":"riccqi"},"content":"        this.editPropertyDescriptor \u003d new EditPropertyDescriptor(editPropertyDescriptor);","lastModifiedDate":"2022-10-12"},{"lineNumber":73,"author":{"gitId":"riccqi"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":74,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":75,"author":{"gitId":"riccqi"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"riccqi"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"riccqi"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"riccqi"},"content":"        List\u003cProperty\u003e lastShownList \u003d model.getFilteredPropertyList();","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":80,"author":{"gitId":"riccqi"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-12"},{"lineNumber":81,"author":{"gitId":"riccqi"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PROPERTY_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-12"},{"lineNumber":82,"author":{"gitId":"riccqi"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":83,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":84,"author":{"gitId":"riccqi"},"content":"        Property propertyToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-10-13"},{"lineNumber":85,"author":{"gitId":"riccqi"},"content":"        Property editedProperty \u003d createEditedProperty(propertyToEdit, editPropertyDescriptor);","lastModifiedDate":"2022-10-13"},{"lineNumber":86,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":87,"author":{"gitId":"riccqi"},"content":"        if (!propertyToEdit.isSameProperty(editedProperty) \u0026\u0026 model.hasProperty(editedProperty)) {","lastModifiedDate":"2022-10-13"},{"lineNumber":88,"author":{"gitId":"riccqi"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PROPERTY);","lastModifiedDate":"2022-10-12"},{"lineNumber":89,"author":{"gitId":"riccqi"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":90,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":91,"author":{"gitId":"riccqi"},"content":"        model.setProperty(propertyToEdit, editedProperty);","lastModifiedDate":"2022-10-13"},{"lineNumber":92,"author":{"gitId":"riccqi"},"content":"        model.updateFilteredPropertyList(PREDICATE_SHOW_ALL_PROPERTIES);","lastModifiedDate":"2022-10-12"},{"lineNumber":93,"author":{"gitId":"riccqi"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PROPERTY_SUCCESS, editedProperty));","lastModifiedDate":"2022-10-12"},{"lineNumber":94,"author":{"gitId":"riccqi"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":95,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":96,"author":{"gitId":"riccqi"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":97,"author":{"gitId":"riccqi"},"content":"     * Creates and returns a {@code Property} with the details of {@code propertyToEdit}","lastModifiedDate":"2022-10-12"},{"lineNumber":98,"author":{"gitId":"riccqi"},"content":"     * edited with {@code descriptor}.","lastModifiedDate":"2022-10-13"},{"lineNumber":99,"author":{"gitId":"riccqi"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":100,"author":{"gitId":"riccqi"},"content":"    private static Property createEditedProperty(Property propertyToEdit, EditPropertyDescriptor descriptor) {","lastModifiedDate":"2022-10-13"},{"lineNumber":101,"author":{"gitId":"riccqi"},"content":"        assert propertyToEdit !\u003d null;","lastModifiedDate":"2022-10-12"},{"lineNumber":102,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":103,"author":{"gitId":"riccqi"},"content":"        PropertyName updatedPropertyName \u003d descriptor.getName().orElse(propertyToEdit.getPropertyName());","lastModifiedDate":"2022-10-20"},{"lineNumber":104,"author":{"gitId":"riccqi"},"content":"        Price updatedPrice \u003d descriptor.getPrice().orElse(propertyToEdit.getPrice());","lastModifiedDate":"2022-10-13"},{"lineNumber":105,"author":{"gitId":"riccqi"},"content":"        Address updatedAddress \u003d descriptor.getAddress().orElse(propertyToEdit.getAddress());","lastModifiedDate":"2022-10-13"},{"lineNumber":106,"author":{"gitId":"riccqi"},"content":"        Description updatedDescription \u003d descriptor.getDescription().orElse(propertyToEdit.getDescription());","lastModifiedDate":"2022-10-13"},{"lineNumber":107,"author":{"gitId":"ChryslineLim"},"content":"        Characteristics updatedCharacteristics \u003d descriptor","lastModifiedDate":"2022-10-19"},{"lineNumber":108,"author":{"gitId":"ChryslineLim"},"content":"                .getCharacteristics()","lastModifiedDate":"2022-10-19"},{"lineNumber":109,"author":{"gitId":"ChryslineLim"},"content":"                .orElse(propertyToEdit.getCharacteristics().orElse(null));","lastModifiedDate":"2022-10-19"},{"lineNumber":110,"author":{"gitId":"riccqi"},"content":"        Owner updatedOwner \u003d descriptor.getOwner().orElse(propertyToEdit.getOwner());","lastModifiedDate":"2022-10-20"},{"lineNumber":111,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":112,"author":{"gitId":"zsiggg"},"content":"        return new Property(updatedPropertyName, updatedPrice, updatedAddress, updatedDescription,","lastModifiedDate":"2022-10-13"},{"lineNumber":113,"author":{"gitId":"riccqi"},"content":"                updatedCharacteristics, updatedOwner);","lastModifiedDate":"2022-10-20"},{"lineNumber":114,"author":{"gitId":"riccqi"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":115,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":116,"author":{"gitId":"riccqi"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":117,"author":{"gitId":"riccqi"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-12"},{"lineNumber":118,"author":{"gitId":"riccqi"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-12"},{"lineNumber":119,"author":{"gitId":"riccqi"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-12"},{"lineNumber":120,"author":{"gitId":"riccqi"},"content":"            return true;","lastModifiedDate":"2022-10-12"},{"lineNumber":121,"author":{"gitId":"riccqi"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":122,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":123,"author":{"gitId":"riccqi"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-12"},{"lineNumber":124,"author":{"gitId":"riccqi"},"content":"        if (!(other instanceof EditPropertyCommand)) {","lastModifiedDate":"2022-10-12"},{"lineNumber":125,"author":{"gitId":"riccqi"},"content":"            return false;","lastModifiedDate":"2022-10-12"},{"lineNumber":126,"author":{"gitId":"riccqi"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":127,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":128,"author":{"gitId":"riccqi"},"content":"        // state check","lastModifiedDate":"2022-10-12"},{"lineNumber":129,"author":{"gitId":"riccqi"},"content":"        EditPropertyCommand e \u003d (EditPropertyCommand) other;","lastModifiedDate":"2022-10-12"},{"lineNumber":130,"author":{"gitId":"riccqi"},"content":"        return index.equals(e.index)","lastModifiedDate":"2022-10-12"},{"lineNumber":131,"author":{"gitId":"riccqi"},"content":"                \u0026\u0026 editPropertyDescriptor.equals(e.editPropertyDescriptor);","lastModifiedDate":"2022-10-12"},{"lineNumber":132,"author":{"gitId":"riccqi"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":133,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":134,"author":{"gitId":"riccqi"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":135,"author":{"gitId":"riccqi"},"content":"     * Stores the details to edit the Property with. Each non-empty field value will replace the","lastModifiedDate":"2022-10-12"},{"lineNumber":136,"author":{"gitId":"riccqi"},"content":"     * corresponding field value of the Property.","lastModifiedDate":"2022-10-12"},{"lineNumber":137,"author":{"gitId":"riccqi"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":138,"author":{"gitId":"riccqi"},"content":"    public static class EditPropertyDescriptor {","lastModifiedDate":"2022-10-12"},{"lineNumber":139,"author":{"gitId":"riccqi"},"content":"        private PropertyName name;","lastModifiedDate":"2022-10-12"},{"lineNumber":140,"author":{"gitId":"riccqi"},"content":"        private Price price;","lastModifiedDate":"2022-10-12"},{"lineNumber":141,"author":{"gitId":"riccqi"},"content":"        private Address address;","lastModifiedDate":"2022-10-12"},{"lineNumber":142,"author":{"gitId":"riccqi"},"content":"        private Description description;","lastModifiedDate":"2022-10-12"},{"lineNumber":143,"author":{"gitId":"ChryslineLim"},"content":"        private Characteristics characteristics;","lastModifiedDate":"2022-10-19"},{"lineNumber":144,"author":{"gitId":"riccqi"},"content":"        private Owner owner;","lastModifiedDate":"2022-10-20"},{"lineNumber":145,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":146,"author":{"gitId":"riccqi"},"content":"        public EditPropertyDescriptor() {}","lastModifiedDate":"2022-10-12"},{"lineNumber":147,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":148,"author":{"gitId":"riccqi"},"content":"        /**","lastModifiedDate":"2022-10-12"},{"lineNumber":149,"author":{"gitId":"riccqi"},"content":"         * Copy constructor.","lastModifiedDate":"2022-10-12"},{"lineNumber":150,"author":{"gitId":"riccqi"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2022-10-12"},{"lineNumber":151,"author":{"gitId":"riccqi"},"content":"         */","lastModifiedDate":"2022-10-12"},{"lineNumber":152,"author":{"gitId":"riccqi"},"content":"        public EditPropertyDescriptor(EditPropertyDescriptor toCopy) {","lastModifiedDate":"2022-10-12"},{"lineNumber":153,"author":{"gitId":"riccqi"},"content":"            setName(toCopy.name);","lastModifiedDate":"2022-10-12"},{"lineNumber":154,"author":{"gitId":"riccqi"},"content":"            setPrice(toCopy.price);","lastModifiedDate":"2022-10-12"},{"lineNumber":155,"author":{"gitId":"riccqi"},"content":"            setDescription(toCopy.description);","lastModifiedDate":"2022-10-12"},{"lineNumber":156,"author":{"gitId":"riccqi"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2022-10-12"},{"lineNumber":157,"author":{"gitId":"ChryslineLim"},"content":"            setCharacteristics(toCopy.characteristics);","lastModifiedDate":"2022-10-19"},{"lineNumber":158,"author":{"gitId":"riccqi"},"content":"            setOwner(toCopy.owner);","lastModifiedDate":"2022-10-20"},{"lineNumber":159,"author":{"gitId":"riccqi"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":160,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":161,"author":{"gitId":"riccqi"},"content":"        /**","lastModifiedDate":"2022-10-12"},{"lineNumber":162,"author":{"gitId":"riccqi"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2022-10-12"},{"lineNumber":163,"author":{"gitId":"riccqi"},"content":"         */","lastModifiedDate":"2022-10-12"},{"lineNumber":164,"author":{"gitId":"riccqi"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2022-10-12"},{"lineNumber":165,"author":{"gitId":"jchilling"},"content":"            return CollectionUtil.isAnyNonNull(name, price, address, description);","lastModifiedDate":"2022-10-20"},{"lineNumber":166,"author":{"gitId":"riccqi"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":167,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":168,"author":{"gitId":"riccqi"},"content":"        public void setName(PropertyName propertyName) {","lastModifiedDate":"2022-10-12"},{"lineNumber":169,"author":{"gitId":"riccqi"},"content":"            this.name \u003d propertyName;","lastModifiedDate":"2022-10-12"},{"lineNumber":170,"author":{"gitId":"riccqi"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":171,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":172,"author":{"gitId":"riccqi"},"content":"        public Optional\u003cPropertyName\u003e getName() {","lastModifiedDate":"2022-10-12"},{"lineNumber":173,"author":{"gitId":"riccqi"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2022-10-12"},{"lineNumber":174,"author":{"gitId":"riccqi"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":175,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":176,"author":{"gitId":"riccqi"},"content":"        public void setPrice(Price price) {","lastModifiedDate":"2022-10-12"},{"lineNumber":177,"author":{"gitId":"riccqi"},"content":"            this.price \u003d price;","lastModifiedDate":"2022-10-12"},{"lineNumber":178,"author":{"gitId":"riccqi"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":179,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":180,"author":{"gitId":"riccqi"},"content":"        public Optional\u003cPrice\u003e getPrice() {","lastModifiedDate":"2022-10-12"},{"lineNumber":181,"author":{"gitId":"riccqi"},"content":"            return Optional.ofNullable(price);","lastModifiedDate":"2022-10-12"},{"lineNumber":182,"author":{"gitId":"riccqi"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":183,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":184,"author":{"gitId":"riccqi"},"content":"        public void setDescription(Description description) {","lastModifiedDate":"2022-10-12"},{"lineNumber":185,"author":{"gitId":"riccqi"},"content":"            this.description \u003d description;","lastModifiedDate":"2022-10-12"},{"lineNumber":186,"author":{"gitId":"riccqi"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":187,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":188,"author":{"gitId":"riccqi"},"content":"        public Optional\u003cDescription\u003e getDescription() {","lastModifiedDate":"2022-10-12"},{"lineNumber":189,"author":{"gitId":"riccqi"},"content":"            return Optional.ofNullable(description);","lastModifiedDate":"2022-10-12"},{"lineNumber":190,"author":{"gitId":"riccqi"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":191,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":192,"author":{"gitId":"riccqi"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2022-10-12"},{"lineNumber":193,"author":{"gitId":"riccqi"},"content":"            this.address \u003d address;","lastModifiedDate":"2022-10-12"},{"lineNumber":194,"author":{"gitId":"riccqi"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":195,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":196,"author":{"gitId":"riccqi"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2022-10-12"},{"lineNumber":197,"author":{"gitId":"riccqi"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2022-10-12"},{"lineNumber":198,"author":{"gitId":"riccqi"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":199,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":200,"author":{"gitId":"riccqi"},"content":"        public void setOwner(Owner owner) {","lastModifiedDate":"2022-10-20"},{"lineNumber":201,"author":{"gitId":"riccqi"},"content":"            this.owner \u003d owner;","lastModifiedDate":"2022-10-20"},{"lineNumber":202,"author":{"gitId":"riccqi"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":203,"author":{"gitId":"riccqi"},"content":"        public Optional\u003cOwner\u003e getOwner() {","lastModifiedDate":"2022-10-20"},{"lineNumber":204,"author":{"gitId":"riccqi"},"content":"            return Optional.ofNullable(owner);","lastModifiedDate":"2022-10-20"},{"lineNumber":205,"author":{"gitId":"zsiggg"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":206,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":207,"author":{"gitId":"ChryslineLim"},"content":"        public void setCharacteristics(Characteristics characteristics) {","lastModifiedDate":"2022-10-19"},{"lineNumber":208,"author":{"gitId":"ChryslineLim"},"content":"            this.characteristics \u003d characteristics;","lastModifiedDate":"2022-10-19"},{"lineNumber":209,"author":{"gitId":"ChryslineLim"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":210,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":211,"author":{"gitId":"ChryslineLim"},"content":"        public Optional\u003cCharacteristics\u003e getCharacteristics() {","lastModifiedDate":"2022-10-19"},{"lineNumber":212,"author":{"gitId":"ChryslineLim"},"content":"            return Optional.ofNullable(characteristics);","lastModifiedDate":"2022-10-19"},{"lineNumber":213,"author":{"gitId":"ChryslineLim"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":214,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":215,"author":{"gitId":"riccqi"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":216,"author":{"gitId":"riccqi"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2022-10-12"},{"lineNumber":217,"author":{"gitId":"riccqi"},"content":"            // short circuit if same object","lastModifiedDate":"2022-10-12"},{"lineNumber":218,"author":{"gitId":"riccqi"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-12"},{"lineNumber":219,"author":{"gitId":"riccqi"},"content":"                return true;","lastModifiedDate":"2022-10-12"},{"lineNumber":220,"author":{"gitId":"riccqi"},"content":"            }","lastModifiedDate":"2022-10-12"},{"lineNumber":221,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":222,"author":{"gitId":"riccqi"},"content":"            // instanceof handles nulls","lastModifiedDate":"2022-10-12"},{"lineNumber":223,"author":{"gitId":"riccqi"},"content":"            if (!(other instanceof EditPropertyDescriptor)) {","lastModifiedDate":"2022-10-12"},{"lineNumber":224,"author":{"gitId":"riccqi"},"content":"                return false;","lastModifiedDate":"2022-10-12"},{"lineNumber":225,"author":{"gitId":"riccqi"},"content":"            }","lastModifiedDate":"2022-10-12"},{"lineNumber":226,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":227,"author":{"gitId":"riccqi"},"content":"            // state check","lastModifiedDate":"2022-10-12"},{"lineNumber":228,"author":{"gitId":"riccqi"},"content":"            EditPropertyDescriptor e \u003d (EditPropertyDescriptor) other;","lastModifiedDate":"2022-10-12"},{"lineNumber":229,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":230,"author":{"gitId":"riccqi"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2022-10-12"},{"lineNumber":231,"author":{"gitId":"riccqi"},"content":"                    \u0026\u0026 getPrice().equals(e.getPrice())","lastModifiedDate":"2022-10-12"},{"lineNumber":232,"author":{"gitId":"riccqi"},"content":"                    \u0026\u0026 getDescription().equals(e.getDescription())","lastModifiedDate":"2022-10-12"},{"lineNumber":233,"author":{"gitId":"riccqi"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2022-10-12"},{"lineNumber":234,"author":{"gitId":"riccqi"},"content":"                    \u0026\u0026 getCharacteristics().equals(e.getCharacteristics())","lastModifiedDate":"2022-10-20"},{"lineNumber":235,"author":{"gitId":"riccqi"},"content":"                    \u0026\u0026 getOwner().equals(e.getOwner());","lastModifiedDate":"2022-10-20"},{"lineNumber":236,"author":{"gitId":"riccqi"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":237,"author":{"gitId":"riccqi"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":238,"author":{"gitId":"riccqi"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"riccqi":217,"zsiggg":3,"jchilling":1,"ChryslineLim":17}},{"path":"src/main/java/seedu/address/logic/commands/FilterBuyersCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chngchngchng"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-18"},{"lineNumber":2,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":3,"author":{"gitId":"chngchngchng"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-18"},{"lineNumber":4,"author":{"gitId":"chngchngchng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CHARACTERISTICS;","lastModifiedDate":"2022-10-18"},{"lineNumber":5,"author":{"gitId":"chngchngchng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRICE;","lastModifiedDate":"2022-10-18"},{"lineNumber":6,"author":{"gitId":"jchilling"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRIORITY;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":8,"author":{"gitId":"chngchngchng"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-18"},{"lineNumber":9,"author":{"gitId":"chngchngchng"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-18"},{"lineNumber":10,"author":{"gitId":"chngchngchng"},"content":"import seedu.address.model.person.AbstractFilterBuyerPredicate;","lastModifiedDate":"2022-10-18"},{"lineNumber":11,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":12,"author":{"gitId":"chngchngchng"},"content":"/**","lastModifiedDate":"2022-10-18"},{"lineNumber":13,"author":{"gitId":"chngchngchng"},"content":" * Filters and lists all buyers in the buyer list that either have a price range that accepts the given price,","lastModifiedDate":"2022-10-18"},{"lineNumber":14,"author":{"gitId":"chngchngchng"},"content":" * characteristics that match the given characteristics list, or have the given tag.","lastModifiedDate":"2022-10-18"},{"lineNumber":15,"author":{"gitId":"chngchngchng"},"content":" * Keyword matching is case-insensitive.","lastModifiedDate":"2022-10-18"},{"lineNumber":16,"author":{"gitId":"chngchngchng"},"content":" */","lastModifiedDate":"2022-10-18"},{"lineNumber":17,"author":{"gitId":"chngchngchng"},"content":"public class FilterBuyersCommand extends Command {","lastModifiedDate":"2022-10-18"},{"lineNumber":18,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":19,"author":{"gitId":"chngchngchng"},"content":"    public static final String COMMAND_WORD \u003d \"filterbuyers\";","lastModifiedDate":"2022-10-18"},{"lineNumber":20,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":21,"author":{"gitId":"chngchngchng"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all buyers in the database who\"","lastModifiedDate":"2022-10-18"},{"lineNumber":22,"author":{"gitId":"chngchngchng"},"content":"            + \" either have a price range that accepts the given price, characteristics that match the given\"","lastModifiedDate":"2022-10-18"},{"lineNumber":23,"author":{"gitId":"ChryslineLim"},"content":"            + \" characteristics list, or has the given tag. You must filter by exactly one criteria at a time.\\n\"","lastModifiedDate":"2022-10-19"},{"lineNumber":24,"author":{"gitId":"chngchngchng"},"content":"            + \"Parameters: [\" + PREFIX_PRICE + \" PRICE] \"","lastModifiedDate":"2022-10-18"},{"lineNumber":25,"author":{"gitId":"chngchngchng"},"content":"            + \"[\" + PREFIX_CHARACTERISTICS + \" CHARACTERISTICS] \"","lastModifiedDate":"2022-10-18"},{"lineNumber":26,"author":{"gitId":"chngchngchng"},"content":"            // TODO change this from tag to priority after andre\u0027s refactor","lastModifiedDate":"2022-10-18"},{"lineNumber":27,"author":{"gitId":"jchilling"},"content":"            + \"[\" + PREFIX_PRIORITY + \" \u003cHIGH/LOW\u003e]\\n\"","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"chngchngchng"},"content":"            + \"Example: \" + COMMAND_WORD + \" -c bright; sunny\";","lastModifiedDate":"2022-10-18"},{"lineNumber":29,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":30,"author":{"gitId":"chngchngchng"},"content":"    private final AbstractFilterBuyerPredicate predicate;","lastModifiedDate":"2022-10-18"},{"lineNumber":31,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":32,"author":{"gitId":"chngchngchng"},"content":"    public FilterBuyersCommand(AbstractFilterBuyerPredicate predicate) {","lastModifiedDate":"2022-10-18"},{"lineNumber":33,"author":{"gitId":"chngchngchng"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2022-10-18"},{"lineNumber":34,"author":{"gitId":"chngchngchng"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":35,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":36,"author":{"gitId":"chngchngchng"},"content":"    @Override","lastModifiedDate":"2022-10-18"},{"lineNumber":37,"author":{"gitId":"chngchngchng"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-10-18"},{"lineNumber":38,"author":{"gitId":"chngchngchng"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-18"},{"lineNumber":39,"author":{"gitId":"chngchngchng"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-10-18"},{"lineNumber":40,"author":{"gitId":"chngchngchng"},"content":"        return new CommandResult(","lastModifiedDate":"2022-10-18"},{"lineNumber":41,"author":{"gitId":"chngchngchng"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2022-10-18"},{"lineNumber":42,"author":{"gitId":"chngchngchng"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":43,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":44,"author":{"gitId":"chngchngchng"},"content":"    @Override","lastModifiedDate":"2022-10-18"},{"lineNumber":45,"author":{"gitId":"chngchngchng"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-18"},{"lineNumber":46,"author":{"gitId":"chngchngchng"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-18"},{"lineNumber":47,"author":{"gitId":"chngchngchng"},"content":"                || (other instanceof FilterBuyersCommand // instanceof handles nulls","lastModifiedDate":"2022-10-18"},{"lineNumber":48,"author":{"gitId":"chngchngchng"},"content":"                \u0026\u0026 predicate.equals(((FilterBuyersCommand) other).predicate)); // state check","lastModifiedDate":"2022-10-18"},{"lineNumber":49,"author":{"gitId":"chngchngchng"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":50,"author":{"gitId":"chngchngchng"},"content":"}","lastModifiedDate":"2022-10-18"}],"authorContributionMap":{"chngchngchng":47,"jchilling":2,"ChryslineLim":1}},{"path":"src/main/java/seedu/address/logic/commands/FilterPropsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChryslineLim"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-19"},{"lineNumber":2,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":3,"author":{"gitId":"ChryslineLim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-19"},{"lineNumber":4,"author":{"gitId":"ChryslineLim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CHARACTERISTICS;","lastModifiedDate":"2022-10-19"},{"lineNumber":5,"author":{"gitId":"ChryslineLim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRICE_RANGE;","lastModifiedDate":"2022-10-19"},{"lineNumber":6,"author":{"gitId":"ChryslineLim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SELLER;","lastModifiedDate":"2022-10-19"},{"lineNumber":7,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":8,"author":{"gitId":"ChryslineLim"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-19"},{"lineNumber":9,"author":{"gitId":"ChryslineLim"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-19"},{"lineNumber":10,"author":{"gitId":"ChryslineLim"},"content":"import seedu.address.model.property.AbstractFilterPropsPredicate;","lastModifiedDate":"2022-10-19"},{"lineNumber":11,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":12,"author":{"gitId":"ChryslineLim"},"content":"/**","lastModifiedDate":"2022-10-19"},{"lineNumber":13,"author":{"gitId":"ChryslineLim"},"content":" * Filters and lists all properties in the property list that either has a price that is within the given price,","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"ChryslineLim"},"content":" * characteristics that match the given characteristics list, or have the given seller.","lastModifiedDate":"2022-10-19"},{"lineNumber":15,"author":{"gitId":"ChryslineLim"},"content":" * Keyword matching is case-insensitive.","lastModifiedDate":"2022-10-19"},{"lineNumber":16,"author":{"gitId":"ChryslineLim"},"content":" */","lastModifiedDate":"2022-10-19"},{"lineNumber":17,"author":{"gitId":"ChryslineLim"},"content":"public class FilterPropsCommand extends Command {","lastModifiedDate":"2022-10-19"},{"lineNumber":18,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":19,"author":{"gitId":"ChryslineLim"},"content":"    public static final String COMMAND_WORD \u003d \"filterprops\";","lastModifiedDate":"2022-10-19"},{"lineNumber":20,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":21,"author":{"gitId":"ChryslineLim"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all properties in the database that\"","lastModifiedDate":"2022-10-19"},{"lineNumber":22,"author":{"gitId":"ChryslineLim"},"content":"            + \" either have a price that is within the given price range, characteristics that match the given\"","lastModifiedDate":"2022-10-19"},{"lineNumber":23,"author":{"gitId":"ChryslineLim"},"content":"            + \" characteristics list, or has the given seller. You must filter by exactly one criteria at a time.\\n\"","lastModifiedDate":"2022-10-19"},{"lineNumber":24,"author":{"gitId":"ChryslineLim"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-10-19"},{"lineNumber":25,"author":{"gitId":"ChryslineLim"},"content":"            + \"[\" + PREFIX_PRICE_RANGE + \" PRICE RANGE] \"","lastModifiedDate":"2022-10-19"},{"lineNumber":26,"author":{"gitId":"ChryslineLim"},"content":"            + \"[\" + PREFIX_CHARACTERISTICS + \" CHARACTERISTICS] \"","lastModifiedDate":"2022-10-19"},{"lineNumber":27,"author":{"gitId":"ChryslineLim"},"content":"            + \"[\" + PREFIX_SELLER + \" SELLER]\\n\"","lastModifiedDate":"2022-10-19"},{"lineNumber":28,"author":{"gitId":"ChryslineLim"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-19"},{"lineNumber":29,"author":{"gitId":"ChryslineLim"},"content":"            + PREFIX_PRICE_RANGE + \" 200000 - 500000 \";","lastModifiedDate":"2022-10-19"},{"lineNumber":30,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":31,"author":{"gitId":"ChryslineLim"},"content":"    private final AbstractFilterPropsPredicate predicate;","lastModifiedDate":"2022-10-19"},{"lineNumber":32,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":33,"author":{"gitId":"ChryslineLim"},"content":"    public FilterPropsCommand(AbstractFilterPropsPredicate predicate) {","lastModifiedDate":"2022-10-19"},{"lineNumber":34,"author":{"gitId":"ChryslineLim"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2022-10-19"},{"lineNumber":35,"author":{"gitId":"ChryslineLim"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":36,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":37,"author":{"gitId":"ChryslineLim"},"content":"    @Override","lastModifiedDate":"2022-10-19"},{"lineNumber":38,"author":{"gitId":"ChryslineLim"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-10-19"},{"lineNumber":39,"author":{"gitId":"ChryslineLim"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-19"},{"lineNumber":40,"author":{"gitId":"ChryslineLim"},"content":"        model.updateFilteredPropertyList(predicate);","lastModifiedDate":"2022-10-19"},{"lineNumber":41,"author":{"gitId":"ChryslineLim"},"content":"        return new CommandResult(","lastModifiedDate":"2022-10-19"},{"lineNumber":42,"author":{"gitId":"ChryslineLim"},"content":"                String.format(Messages.MESSAGE_PROPERTY_LISTED_OVERVIEW, model.getFilteredPropertyList().size()));","lastModifiedDate":"2022-10-19"},{"lineNumber":43,"author":{"gitId":"ChryslineLim"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":44,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":45,"author":{"gitId":"ChryslineLim"},"content":"    @Override","lastModifiedDate":"2022-10-19"},{"lineNumber":46,"author":{"gitId":"ChryslineLim"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-19"},{"lineNumber":47,"author":{"gitId":"ChryslineLim"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-19"},{"lineNumber":48,"author":{"gitId":"ChryslineLim"},"content":"                || (other instanceof FilterPropsCommand // instanceof handles nulls","lastModifiedDate":"2022-10-19"},{"lineNumber":49,"author":{"gitId":"ChryslineLim"},"content":"                \u0026\u0026 predicate.equals(((FilterPropsCommand) other).predicate)); // state check","lastModifiedDate":"2022-10-19"},{"lineNumber":50,"author":{"gitId":"ChryslineLim"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":51,"author":{"gitId":"ChryslineLim"},"content":"}","lastModifiedDate":"2022-10-19"},{"lineNumber":52,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-19"}],"authorContributionMap":{"ChryslineLim":52}},{"path":"src/main/java/seedu/address/logic/commands/ListBuyersCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"jchilling"},"content":"public class ListBuyersCommand extends Command {","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"jchilling"},"content":"    public static final String COMMAND_WORD \u003d \"listbuyers\";","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"jchilling"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all buyers\";","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jchilling":4,"-":21}},{"path":"src/main/java/seedu/address/logic/commands/ListPropertiesCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"jchilling"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PROPERTIES;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"jchilling"},"content":"public class ListPropertiesCommand extends Command {","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"jchilling"},"content":"    public static final String COMMAND_WORD \u003d \"listprops\";","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"jchilling"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all properties\";","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"jchilling"},"content":"        model.updateFilteredPropertyList(PREDICATE_SHOW_ALL_PROPERTIES);","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jchilling":6,"-":19}},{"path":"src/main/java/seedu/address/logic/parser/AddPersonCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"ChryslineLim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CHARACTERISTICS;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"ChryslineLim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRICE_RANGE;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"jchilling"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRIORITY;","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"zsiggg"},"content":"import seedu.address.logic.commands.AddPersonCommand;","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"zsiggg"},"content":"import seedu.address.model.address.Address;","lastModifiedDate":"2022-10-08"},{"lineNumber":15,"author":{"gitId":"ChryslineLim"},"content":"import seedu.address.model.characteristics.Characteristics;","lastModifiedDate":"2022-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":20,"author":{"gitId":"jchilling"},"content":"import seedu.address.model.person.Priority;","lastModifiedDate":"2022-10-19"},{"lineNumber":21,"author":{"gitId":"jchilling"},"content":"import seedu.address.model.pricerange.PriceRange;","lastModifiedDate":"2022-10-19"},{"lineNumber":22,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"zsiggg"},"content":"public class AddPersonCommandParser extends Parser\u003cAddPersonCommand\u003e {","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"zsiggg"},"content":"    public AddPersonCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":35,"author":{"gitId":"ChryslineLim"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"jchilling"},"content":"                        PREFIX_PRICE_RANGE, PREFIX_CHARACTERISTICS, PREFIX_PRIORITY);","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2017-12-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":40,"author":{"gitId":"zsiggg"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"ChryslineLim"},"content":"        // if user does not specify a budget for the buyer, then there will be no PriceRange object","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"ChryslineLim"},"content":"        PriceRange priceRange \u003d null;","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"ChryslineLim"},"content":"        if (argMultimap.getValue(PREFIX_PRICE_RANGE).isPresent()) {","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"ChryslineLim"},"content":"            priceRange \u003d ParserUtil.parsePriceRange(argMultimap.getValue(PREFIX_PRICE_RANGE).get());","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"ChryslineLim"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"ChryslineLim"},"content":"        // TODO: Consider allowing multiple -c instead of separated by ; in one -c","lastModifiedDate":"2022-10-19"},{"lineNumber":55,"author":{"gitId":"ChryslineLim"},"content":"        Characteristics characteristics \u003d null;","lastModifiedDate":"2022-10-19"},{"lineNumber":56,"author":{"gitId":"ChryslineLim"},"content":"        if (argMultimap.getValue(PREFIX_CHARACTERISTICS).isPresent()) {","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"ChryslineLim"},"content":"            characteristics \u003d ParserUtil.parseCharacteristics(argMultimap.getValue(PREFIX_CHARACTERISTICS).get());","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"ChryslineLim"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"jchilling"},"content":"        Priority priority \u003d new Priority(\"normal\");","lastModifiedDate":"2022-10-19"},{"lineNumber":61,"author":{"gitId":"jchilling"},"content":"        if (argMultimap.getValue(PREFIX_PRIORITY).isPresent()) {","lastModifiedDate":"2022-10-20"},{"lineNumber":62,"author":{"gitId":"jchilling"},"content":"            priority \u003d ParserUtil.parsePriority(argMultimap.getValue(PREFIX_PRIORITY).get());","lastModifiedDate":"2022-10-20"},{"lineNumber":63,"author":{"gitId":"jchilling"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":65,"author":{"gitId":"jchilling"},"content":"        Person person \u003d new Person(name, phone, email, address, priceRange, characteristics, priority);","lastModifiedDate":"2022-10-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":67,"author":{"gitId":"zsiggg"},"content":"        return new AddPersonCommand(person);","lastModifiedDate":"2022-10-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"zsiggg":6,"jchilling":10,"-":37,"ChryslineLim":17}},{"path":"src/main/java/seedu/address/logic/parser/AddPropertyCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zsiggg"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"zsiggg"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"zsiggg"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"ChryslineLim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CHARACTERISTICS;","lastModifiedDate":"2022-10-19"},{"lineNumber":6,"author":{"gitId":"zsiggg"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"zsiggg"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_OWNER_NAME;","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"zsiggg"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRICE;","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"zsiggg"},"content":"import seedu.address.logic.commands.AddPropertyCommand;","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"zsiggg"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"zsiggg"},"content":"import seedu.address.model.address.Address;","lastModifiedDate":"2022-10-08"},{"lineNumber":15,"author":{"gitId":"ChryslineLim"},"content":"import seedu.address.model.characteristics.Characteristics;","lastModifiedDate":"2022-10-19"},{"lineNumber":16,"author":{"gitId":"riccqi"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"riccqi"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"zsiggg"},"content":"import seedu.address.model.property.Description;","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"riccqi"},"content":"import seedu.address.model.property.Owner;","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"zsiggg"},"content":"import seedu.address.model.property.Price;","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"zsiggg"},"content":"import seedu.address.model.property.Property;","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"zsiggg"},"content":"import seedu.address.model.property.PropertyName;","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"zsiggg"},"content":"/**","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"riccqi"},"content":" * Parses input arguments and creates a new AddPropertyCommand object","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"zsiggg"},"content":" */","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"riccqi"},"content":"public class AddPropertyCommandParser extends Parser\u003cAddPropertyCommand\u003e {","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"zsiggg"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"zsiggg"},"content":"     * Parses the given {@code String} of arguments in the context of the AddPropertyCommand","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"zsiggg"},"content":"     * and returns an AddPropertyCommand object for execution.","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"zsiggg"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"zsiggg"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"zsiggg"},"content":"    public AddPropertyCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"zsiggg"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"zsiggg"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PRICE, PREFIX_ADDRESS,","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"riccqi"},"content":"                        PREFIX_DESCRIPTION, PREFIX_CHARACTERISTICS, PREFIX_OWNER_NAME, PREFIX_PHONE);","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"zsiggg"},"content":"        if (!arePrefixesPresent(","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"riccqi"},"content":"                argMultimap, PREFIX_NAME, PREFIX_PRICE, PREFIX_ADDRESS, PREFIX_DESCRIPTION,","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"riccqi"},"content":"                PREFIX_OWNER_NAME, PREFIX_PHONE)","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"zsiggg"},"content":"            || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"zsiggg"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPropertyCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"zsiggg"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"zsiggg"},"content":"        PropertyName propertyName \u003d ParserUtil.parsePropertyName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2022-10-06"},{"lineNumber":47,"author":{"gitId":"zsiggg"},"content":"        Price price \u003d ParserUtil.parsePrice(argMultimap.getValue(PREFIX_PRICE).get());","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"zsiggg"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2022-10-08"},{"lineNumber":49,"author":{"gitId":"zsiggg"},"content":"        Description description \u003d ParserUtil.parseDescription(argMultimap.getValue(PREFIX_DESCRIPTION).get());","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":51,"author":{"gitId":"riccqi"},"content":"        Name ownerName \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_OWNER_NAME).get());","lastModifiedDate":"2022-10-20"},{"lineNumber":52,"author":{"gitId":"riccqi"},"content":"        Phone ownerPhone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"riccqi"},"content":"        Owner newOwner \u003d new Owner(ownerName, ownerPhone);","lastModifiedDate":"2022-10-20"},{"lineNumber":54,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":55,"author":{"gitId":"ChryslineLim"},"content":"        // TODO: Consider allowing multiple -c instead of separated by ; in one -c","lastModifiedDate":"2022-10-20"},{"lineNumber":56,"author":{"gitId":"ChryslineLim"},"content":"        Characteristics characteristics \u003d null;","lastModifiedDate":"2022-10-19"},{"lineNumber":57,"author":{"gitId":"ChryslineLim"},"content":"        if (argMultimap.getValue(PREFIX_CHARACTERISTICS).isPresent()) {","lastModifiedDate":"2022-10-19"},{"lineNumber":58,"author":{"gitId":"ChryslineLim"},"content":"            characteristics \u003d ParserUtil.parseCharacteristics(argMultimap.getValue(PREFIX_CHARACTERISTICS).get());","lastModifiedDate":"2022-10-19"},{"lineNumber":59,"author":{"gitId":"ChryslineLim"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":60,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":61,"author":{"gitId":"riccqi"},"content":"        Property property \u003d new Property(propertyName, price, address, description, characteristics, newOwner);","lastModifiedDate":"2022-10-20"},{"lineNumber":62,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":63,"author":{"gitId":"zsiggg"},"content":"        return new AddPropertyCommand(property);","lastModifiedDate":"2022-10-05"},{"lineNumber":64,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":65,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":66,"author":{"gitId":"zsiggg"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"riccqi":15,"zsiggg":43,"ChryslineLim":8}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"chngchngchng"},"content":"import seedu.address.logic.commands.AddPersonCommand;","lastModifiedDate":"2022-10-18"},{"lineNumber":10,"author":{"gitId":"chngchngchng"},"content":"import seedu.address.logic.commands.AddPropertyCommand;","lastModifiedDate":"2022-10-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2022-10-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-10-18"},{"lineNumber":13,"author":{"gitId":"chngchngchng"},"content":"import seedu.address.logic.commands.DeleteBuyerCommand;","lastModifiedDate":"2022-10-18"},{"lineNumber":14,"author":{"gitId":"chngchngchng"},"content":"import seedu.address.logic.commands.DeletePropertyCommand;","lastModifiedDate":"2022-10-18"},{"lineNumber":15,"author":{"gitId":"chngchngchng"},"content":"import seedu.address.logic.commands.EditBuyerCommand;","lastModifiedDate":"2022-10-18"},{"lineNumber":16,"author":{"gitId":"chngchngchng"},"content":"import seedu.address.logic.commands.EditPropertyCommand;","lastModifiedDate":"2022-10-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2022-10-18"},{"lineNumber":18,"author":{"gitId":"chngchngchng"},"content":"import seedu.address.logic.commands.FilterBuyersCommand;","lastModifiedDate":"2022-10-18"},{"lineNumber":19,"author":{"gitId":"ChryslineLim"},"content":"import seedu.address.logic.commands.FilterPropsCommand;","lastModifiedDate":"2022-10-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2022-10-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2022-10-18"},{"lineNumber":22,"author":{"gitId":"chngchngchng"},"content":"import seedu.address.logic.commands.ListBuyersCommand;","lastModifiedDate":"2022-10-18"},{"lineNumber":23,"author":{"gitId":"chngchngchng"},"content":"import seedu.address.logic.commands.ListPropertiesCommand;","lastModifiedDate":"2022-10-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"ChryslineLim"},"content":"        case AddPersonCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"ChryslineLim"},"content":"            return new AddPersonCommandParser().parse(arguments);","lastModifiedDate":"2022-10-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"riccqi"},"content":"        case EditBuyerCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"riccqi"},"content":"            return new EditBuyerCommandParser().parse(arguments);","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"jchilling"},"content":"        case DeleteBuyerCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"jchilling"},"content":"            return new DeleteBuyerCommandParser().parse(arguments);","lastModifiedDate":"2022-10-13"},{"lineNumber":61,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":62,"author":{"gitId":"jchilling"},"content":"        case DeletePropertyCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-13"},{"lineNumber":63,"author":{"gitId":"jchilling"},"content":"            return new DeletePropertyCommandParser().parse(arguments);","lastModifiedDate":"2022-10-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"jchilling"},"content":"        case ListBuyersCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-12"},{"lineNumber":72,"author":{"gitId":"jchilling"},"content":"            return new ListBuyersCommand();","lastModifiedDate":"2022-10-12"},{"lineNumber":73,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":74,"author":{"gitId":"jchilling"},"content":"        case ListPropertiesCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-12"},{"lineNumber":75,"author":{"gitId":"jchilling"},"content":"            return new ListPropertiesCommand();","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":83,"author":{"gitId":"zsiggg"},"content":"        case AddPropertyCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-05"},{"lineNumber":84,"author":{"gitId":"riccqi"},"content":"            return new AddPropertyCommandParser().parse(arguments);","lastModifiedDate":"2022-10-12"},{"lineNumber":85,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":86,"author":{"gitId":"riccqi"},"content":"        case EditPropertyCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-12"},{"lineNumber":87,"author":{"gitId":"riccqi"},"content":"            return new EditPropertyCommandParser().parse(arguments);","lastModifiedDate":"2022-10-12"},{"lineNumber":88,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":89,"author":{"gitId":"chngchngchng"},"content":"        case FilterBuyersCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-18"},{"lineNumber":90,"author":{"gitId":"chngchngchng"},"content":"            return new FilterBuyersCommandParser().parse(arguments);","lastModifiedDate":"2022-10-18"},{"lineNumber":91,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":92,"author":{"gitId":"ChryslineLim"},"content":"        case FilterPropsCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-19"},{"lineNumber":93,"author":{"gitId":"ChryslineLim"},"content":"            return new FilterPropsCommandParser().parse(arguments);","lastModifiedDate":"2022-10-19"},{"lineNumber":94,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"riccqi":6,"zsiggg":2,"chngchngchng":12,"jchilling":10,"-":64,"ChryslineLim":6}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"ChryslineLim"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"-n\");","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"riccqi"},"content":"    public static final Prefix PREFIX_OWNER_NAME \u003d new Prefix(\"-owner\");","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"riccqi"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"-ph\");","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"ChryslineLim"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"-e\");","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"ChryslineLim"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"-a\");","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"jchilling"},"content":"    public static final Prefix PREFIX_PRIORITY \u003d new Prefix(\"-priority\");","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"ChryslineLim"},"content":"    public static final Prefix PREFIX_PRICE_RANGE \u003d new Prefix(\"-r\");","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"ChryslineLim"},"content":"    public static final Prefix PREFIX_CHARACTERISTICS \u003d new Prefix(\"-c\");","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"zsiggg"},"content":"    public static final Prefix PREFIX_PRICE \u003d new Prefix(\"-price\"); // temporary, should refactor all prefixes","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"zsiggg"},"content":"    public static final Prefix PREFIX_DESCRIPTION \u003d new Prefix(\"-d\");","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"zsiggg"},"content":"    public static final Prefix PREFIX_SELLER \u003d new Prefix(\"-seller\");","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"riccqi":2,"zsiggg":3,"jchilling":1,"-":9,"ChryslineLim":5}},{"path":"src/main/java/seedu/address/logic/parser/DeleteBuyerCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":6,"author":{"gitId":"jchilling"},"content":"import seedu.address.logic.commands.DeleteBuyerCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"jchilling"},"content":" * Parses input arguments and creates a new DeleteBuyerCommand object","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"jchilling"},"content":"public class DeleteBuyerCommandParser extends Parser\u003cDeleteBuyerCommand\u003e {","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"jchilling"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteBuyerCommand","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"jchilling"},"content":"     * and returns a DeleteBuyerCommand object for execution.","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"jchilling"},"content":"    public DeleteBuyerCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"jchilling"},"content":"            return new DeleteBuyerCommand(index);","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"jchilling"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteBuyerCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"jchilling":8,"-":21}},{"path":"src/main/java/seedu/address/logic/parser/DeletePropertyCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":6,"author":{"gitId":"jchilling"},"content":"import seedu.address.logic.commands.DeletePropertyCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"jchilling"},"content":" * Parses input arguments and creates a new DeletePropertyCommand object","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"jchilling"},"content":"public class DeletePropertyCommandParser extends Parser\u003cDeletePropertyCommand\u003e {","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"jchilling"},"content":"     * Parses the given {@code String} of arguments in the context of the DeletePropertyCommand","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"jchilling"},"content":"     * and returns a DeletePropertyCommand object for execution.","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"jchilling"},"content":"    public DeletePropertyCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"jchilling"},"content":"            return new DeletePropertyCommand(index);","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"jchilling"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeletePropertyCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"jchilling":8,"-":21}},{"path":"src/main/java/seedu/address/logic/parser/EditBuyerCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"ChryslineLim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CHARACTERISTICS;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"ChryslineLim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRICE_RANGE;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"jchilling"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRIORITY;","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":14,"author":{"gitId":"riccqi"},"content":"import seedu.address.logic.commands.EditBuyerCommand;","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"riccqi"},"content":"import seedu.address.logic.commands.EditBuyerCommand.EditPersonDescriptor;","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"riccqi"},"content":" * Parses input arguments and creates a new EditBuyerCommand object","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"riccqi"},"content":"public class EditBuyerCommandParser extends Parser\u003cEditBuyerCommand\u003e {","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"riccqi"},"content":"     * Parses the given {@code String} of arguments in the context of the EditBuyerCommand","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"riccqi"},"content":"     * and returns an EditBuyerCommand object for execution.","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"riccqi"},"content":"    public EditBuyerCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":31,"author":{"gitId":"ChryslineLim"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"jchilling"},"content":"                        PREFIX_PRICE_RANGE, PREFIX_CHARACTERISTICS, PREFIX_PRIORITY);","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":39,"author":{"gitId":"riccqi"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditBuyerCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"ChryslineLim"},"content":"        if (argMultimap.getValue(PREFIX_PRICE_RANGE).isPresent()) {","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"ChryslineLim"},"content":"            editPersonDescriptor.setPriceRange(ParserUtil","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"ChryslineLim"},"content":"                    .parsePriceRange(argMultimap.getValue(PREFIX_PRICE_RANGE).get()));","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"ChryslineLim"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"ChryslineLim"},"content":"        if (argMultimap.getValue(PREFIX_CHARACTERISTICS).isPresent()) {","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"ChryslineLim"},"content":"            editPersonDescriptor.setDesiredCharacteristics(ParserUtil","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"ChryslineLim"},"content":"                    .parseCharacteristics(argMultimap.getValue(PREFIX_CHARACTERISTICS).get()));","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"ChryslineLim"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"jchilling"},"content":"        if (argMultimap.getValue(PREFIX_PRIORITY).isPresent()) {","lastModifiedDate":"2022-10-20"},{"lineNumber":64,"author":{"gitId":"jchilling"},"content":"            editPersonDescriptor.setPriority(ParserUtil","lastModifiedDate":"2022-10-19"},{"lineNumber":65,"author":{"gitId":"jchilling"},"content":"                    .parsePriority(argMultimap.getValue(PREFIX_PRIORITY).get()));","lastModifiedDate":"2022-10-20"},{"lineNumber":66,"author":{"gitId":"jchilling"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"riccqi"},"content":"            throw new ParseException(EditBuyerCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"riccqi"},"content":"        return new EditBuyerCommand(index, editPersonDescriptor);","lastModifiedDate":"2022-10-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"riccqi":10,"jchilling":6,"-":48,"ChryslineLim":11}},{"path":"src/main/java/seedu/address/logic/parser/EditPropertyCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"riccqi"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"riccqi"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"riccqi"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"ChryslineLim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CHARACTERISTICS;","lastModifiedDate":"2022-10-19"},{"lineNumber":7,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRICE;","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"jchilling"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRIORITY;","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"riccqi"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"riccqi"},"content":"import seedu.address.logic.commands.EditPropertyCommand;","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"riccqi"},"content":"import seedu.address.logic.commands.EditPropertyCommand.EditPropertyDescriptor;","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"riccqi"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"riccqi"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"riccqi"},"content":" * Parses input arguments and creates a new EditPropertyCommand object","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"riccqi"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"riccqi"},"content":"public class EditPropertyCommandParser extends Parser\u003cEditPropertyCommand\u003e {","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"riccqi"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"riccqi"},"content":"     * Parses the given {@code String} of arguments in the context of the EditPropertyCommand","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"riccqi"},"content":"     * and returns an EditPropertyCommand object for execution.","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"riccqi"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"riccqi"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"riccqi"},"content":"    public EditPropertyCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"riccqi"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"riccqi"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"jchilling"},"content":"                .tokenize(args, PREFIX_NAME, PREFIX_PRICE, PREFIX_ADDRESS, PREFIX_DESCRIPTION, PREFIX_PRIORITY,","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"ChryslineLim"},"content":"                        PREFIX_CHARACTERISTICS);","lastModifiedDate":"2022-10-19"},{"lineNumber":32,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"riccqi"},"content":"        Index index;","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"riccqi"},"content":"        try {","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"riccqi"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"riccqi"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"riccqi"},"content":"            throw new ParseException(String","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"riccqi"},"content":"                    .format(MESSAGE_INVALID_COMMAND_FORMAT, EditPropertyCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"riccqi"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"riccqi"},"content":"        EditPropertyDescriptor editPropertyDescriptor \u003d new EditPropertyDescriptor();","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"riccqi"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"riccqi"},"content":"            editPropertyDescriptor.setName(ParserUtil.parsePropertyName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"riccqi"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"riccqi"},"content":"        if (argMultimap.getValue(PREFIX_PRICE).isPresent()) {","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"riccqi"},"content":"            editPropertyDescriptor.setPrice(ParserUtil.parsePrice(argMultimap.getValue(PREFIX_PRICE).get()));","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"riccqi"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"riccqi"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"riccqi"},"content":"            editPropertyDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"riccqi"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"riccqi"},"content":"        if (argMultimap.getValue(PREFIX_DESCRIPTION).isPresent()) {","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"riccqi"},"content":"            editPropertyDescriptor.setDescription(ParserUtil","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"riccqi"},"content":"                    .parseDescription(argMultimap.getValue(PREFIX_DESCRIPTION).get()));","lastModifiedDate":"2022-10-13"},{"lineNumber":55,"author":{"gitId":"riccqi"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":57,"author":{"gitId":"ChryslineLim"},"content":"        if (argMultimap.getValue(PREFIX_CHARACTERISTICS).isPresent()) {","lastModifiedDate":"2022-10-19"},{"lineNumber":58,"author":{"gitId":"ChryslineLim"},"content":"            editPropertyDescriptor.setCharacteristics(ParserUtil","lastModifiedDate":"2022-10-19"},{"lineNumber":59,"author":{"gitId":"ChryslineLim"},"content":"                    .parseCharacteristics(argMultimap.getValue(PREFIX_CHARACTERISTICS).get()));","lastModifiedDate":"2022-10-19"},{"lineNumber":60,"author":{"gitId":"ChryslineLim"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":61,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"riccqi"},"content":"        if (!editPropertyDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"riccqi"},"content":"            throw new ParseException(EditPropertyCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"riccqi"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"riccqi"},"content":"        return new EditPropertyCommand(index, editPropertyDescriptor);","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"riccqi"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"riccqi"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"riccqi":59,"jchilling":3,"ChryslineLim":6}},{"path":"src/main/java/seedu/address/logic/parser/FilterBuyersCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chngchngchng"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-18"},{"lineNumber":2,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":3,"author":{"gitId":"chngchngchng"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-18"},{"lineNumber":4,"author":{"gitId":"ChryslineLim"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-19"},{"lineNumber":5,"author":{"gitId":"chngchngchng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CHARACTERISTICS;","lastModifiedDate":"2022-10-18"},{"lineNumber":6,"author":{"gitId":"chngchngchng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRICE;","lastModifiedDate":"2022-10-18"},{"lineNumber":7,"author":{"gitId":"jchilling"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRIORITY;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"ChryslineLim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SELLER;","lastModifiedDate":"2022-10-19"},{"lineNumber":9,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":10,"author":{"gitId":"chngchngchng"},"content":"import seedu.address.logic.commands.FilterBuyersCommand;","lastModifiedDate":"2022-10-18"},{"lineNumber":11,"author":{"gitId":"chngchngchng"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-18"},{"lineNumber":12,"author":{"gitId":"zsiggg"},"content":"import seedu.address.model.characteristics.Characteristics;","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"ChryslineLim"},"content":"import seedu.address.model.person.AbstractFilterBuyerPredicate;","lastModifiedDate":"2022-10-19"},{"lineNumber":14,"author":{"gitId":"zsiggg"},"content":"import seedu.address.model.person.FilterBuyerByCharacteristicsPredicate;","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"chngchngchng"},"content":"import seedu.address.model.person.FilterBuyerByPricePredicate;","lastModifiedDate":"2022-10-18"},{"lineNumber":16,"author":{"gitId":"ChryslineLim"},"content":"import seedu.address.model.property.Price;","lastModifiedDate":"2022-10-19"},{"lineNumber":17,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":18,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":19,"author":{"gitId":"chngchngchng"},"content":"/**","lastModifiedDate":"2022-10-18"},{"lineNumber":20,"author":{"gitId":"chngchngchng"},"content":" * Parses user input to create a {@code FilterBuyersCommand}.","lastModifiedDate":"2022-10-18"},{"lineNumber":21,"author":{"gitId":"chngchngchng"},"content":" */","lastModifiedDate":"2022-10-18"},{"lineNumber":22,"author":{"gitId":"chngchngchng"},"content":"public class FilterBuyersCommandParser extends Parser\u003cFilterBuyersCommand\u003e {","lastModifiedDate":"2022-10-18"},{"lineNumber":23,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":24,"author":{"gitId":"chngchngchng"},"content":"    /**","lastModifiedDate":"2022-10-18"},{"lineNumber":25,"author":{"gitId":"chngchngchng"},"content":"     * Parses the given {@code String} of arguments in the context of the FilterBuyersCommand","lastModifiedDate":"2022-10-18"},{"lineNumber":26,"author":{"gitId":"chngchngchng"},"content":"     * and returns an FilterBuyersCommand object for execution.","lastModifiedDate":"2022-10-18"},{"lineNumber":27,"author":{"gitId":"chngchngchng"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-18"},{"lineNumber":28,"author":{"gitId":"chngchngchng"},"content":"     */","lastModifiedDate":"2022-10-18"},{"lineNumber":29,"author":{"gitId":"chngchngchng"},"content":"    public FilterBuyersCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-18"},{"lineNumber":30,"author":{"gitId":"chngchngchng"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-10-18"},{"lineNumber":31,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":32,"author":{"gitId":"chngchngchng"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_CHARACTERISTICS, PREFIX_PRICE,","lastModifiedDate":"2022-10-18"},{"lineNumber":33,"author":{"gitId":"jchilling"},"content":"                PREFIX_PRIORITY);","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":35,"author":{"gitId":"ChryslineLim"},"content":"        if (areMoreThanOnePrefixesPresent(argMultimap, PREFIX_PRICE, PREFIX_CHARACTERISTICS, PREFIX_SELLER)","lastModifiedDate":"2022-10-19"},{"lineNumber":36,"author":{"gitId":"ChryslineLim"},"content":"                || !isAnyPrefixPresent(argMultimap, PREFIX_PRICE, PREFIX_CHARACTERISTICS, PREFIX_SELLER)","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"ChryslineLim"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-10-19"},{"lineNumber":38,"author":{"gitId":"ChryslineLim"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterBuyersCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-19"},{"lineNumber":39,"author":{"gitId":"chngchngchng"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":40,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":41,"author":{"gitId":"ChryslineLim"},"content":"        AbstractFilterBuyerPredicate predicate \u003d null;","lastModifiedDate":"2022-10-19"},{"lineNumber":42,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":43,"author":{"gitId":"ChryslineLim"},"content":"        if (argMultimap.getValue(PREFIX_PRICE).isPresent()) {","lastModifiedDate":"2022-10-19"},{"lineNumber":44,"author":{"gitId":"ChryslineLim"},"content":"            Price price \u003d ParserUtil.parsePrice(argMultimap.getValue(PREFIX_PRICE).get());","lastModifiedDate":"2022-10-19"},{"lineNumber":45,"author":{"gitId":"ChryslineLim"},"content":"            predicate \u003d new FilterBuyerByPricePredicate(price);","lastModifiedDate":"2022-10-19"},{"lineNumber":46,"author":{"gitId":"chngchngchng"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":47,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":48,"author":{"gitId":"zsiggg"},"content":"        if (argMultimap.getValue(PREFIX_CHARACTERISTICS).isPresent()) {","lastModifiedDate":"2022-10-20"},{"lineNumber":49,"author":{"gitId":"zsiggg"},"content":"            Characteristics characteristics \u003d ParserUtil.parseCharacteristics(","lastModifiedDate":"2022-10-20"},{"lineNumber":50,"author":{"gitId":"zsiggg"},"content":"                    argMultimap.getValue(PREFIX_CHARACTERISTICS).get());","lastModifiedDate":"2022-10-20"},{"lineNumber":51,"author":{"gitId":"zsiggg"},"content":"            predicate \u003d new FilterBuyerByCharacteristicsPredicate(characteristics);","lastModifiedDate":"2022-10-20"},{"lineNumber":52,"author":{"gitId":"zsiggg"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":54,"author":{"gitId":"ChryslineLim"},"content":"        // TODO: Consider allowing filtering by multiple characteristics and tags at once","lastModifiedDate":"2022-10-19"},{"lineNumber":55,"author":{"gitId":"jchilling"},"content":"        // TODO: Filter by priority","lastModifiedDate":"2022-10-20"},{"lineNumber":56,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":57,"author":{"gitId":"ChryslineLim"},"content":"        return new FilterBuyersCommand(predicate);","lastModifiedDate":"2022-10-19"},{"lineNumber":58,"author":{"gitId":"chngchngchng"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":59,"author":{"gitId":"chngchngchng"},"content":"}","lastModifiedDate":"2022-10-18"}],"authorContributionMap":{"zsiggg":8,"chngchngchng":30,"jchilling":3,"ChryslineLim":18}},{"path":"src/main/java/seedu/address/logic/parser/FilterPropsCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChryslineLim"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-19"},{"lineNumber":2,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":3,"author":{"gitId":"ChryslineLim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-19"},{"lineNumber":4,"author":{"gitId":"ChryslineLim"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-19"},{"lineNumber":5,"author":{"gitId":"ChryslineLim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CHARACTERISTICS;","lastModifiedDate":"2022-10-19"},{"lineNumber":6,"author":{"gitId":"ChryslineLim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRICE_RANGE;","lastModifiedDate":"2022-10-19"},{"lineNumber":7,"author":{"gitId":"ChryslineLim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SELLER;","lastModifiedDate":"2022-10-19"},{"lineNumber":8,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":9,"author":{"gitId":"ChryslineLim"},"content":"import seedu.address.logic.commands.FilterPropsCommand;","lastModifiedDate":"2022-10-19"},{"lineNumber":10,"author":{"gitId":"ChryslineLim"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-19"},{"lineNumber":11,"author":{"gitId":"zsiggg"},"content":"import seedu.address.model.characteristics.Characteristics;","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"ChryslineLim"},"content":"import seedu.address.model.pricerange.PriceRange;","lastModifiedDate":"2022-10-19"},{"lineNumber":13,"author":{"gitId":"ChryslineLim"},"content":"import seedu.address.model.property.AbstractFilterPropsPredicate;","lastModifiedDate":"2022-10-19"},{"lineNumber":14,"author":{"gitId":"zsiggg"},"content":"import seedu.address.model.property.FilterPropsByCharacteristicsPredicate;","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"ChryslineLim"},"content":"import seedu.address.model.property.FilterPropsByPricePredicate;","lastModifiedDate":"2022-10-19"},{"lineNumber":16,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":17,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":18,"author":{"gitId":"ChryslineLim"},"content":"/**","lastModifiedDate":"2022-10-19"},{"lineNumber":19,"author":{"gitId":"ChryslineLim"},"content":" * Parses user input to create a {@code FilterPropsCommand}.","lastModifiedDate":"2022-10-19"},{"lineNumber":20,"author":{"gitId":"ChryslineLim"},"content":" */","lastModifiedDate":"2022-10-19"},{"lineNumber":21,"author":{"gitId":"ChryslineLim"},"content":"public class FilterPropsCommandParser extends Parser\u003cFilterPropsCommand\u003e {","lastModifiedDate":"2022-10-19"},{"lineNumber":22,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":23,"author":{"gitId":"ChryslineLim"},"content":"    /**","lastModifiedDate":"2022-10-19"},{"lineNumber":24,"author":{"gitId":"ChryslineLim"},"content":"     * Parses the given {@code String} of arguments in the context of the FilterPropsCommand","lastModifiedDate":"2022-10-19"},{"lineNumber":25,"author":{"gitId":"ChryslineLim"},"content":"     * and returns a FilterPropsCommand object for execution.","lastModifiedDate":"2022-10-19"},{"lineNumber":26,"author":{"gitId":"ChryslineLim"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-19"},{"lineNumber":27,"author":{"gitId":"ChryslineLim"},"content":"     */","lastModifiedDate":"2022-10-19"},{"lineNumber":28,"author":{"gitId":"ChryslineLim"},"content":"    public FilterPropsCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-19"},{"lineNumber":29,"author":{"gitId":"ChryslineLim"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-10-19"},{"lineNumber":30,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":31,"author":{"gitId":"ChryslineLim"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_PRICE_RANGE,","lastModifiedDate":"2022-10-19"},{"lineNumber":32,"author":{"gitId":"ChryslineLim"},"content":"                PREFIX_CHARACTERISTICS, PREFIX_SELLER);","lastModifiedDate":"2022-10-19"},{"lineNumber":33,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":34,"author":{"gitId":"ChryslineLim"},"content":"        if (areMoreThanOnePrefixesPresent(argMultimap, PREFIX_PRICE_RANGE, PREFIX_CHARACTERISTICS, PREFIX_SELLER)","lastModifiedDate":"2022-10-19"},{"lineNumber":35,"author":{"gitId":"ChryslineLim"},"content":"                || !isAnyPrefixPresent(argMultimap, PREFIX_PRICE_RANGE, PREFIX_CHARACTERISTICS, PREFIX_SELLER)","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"ChryslineLim"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-10-19"},{"lineNumber":37,"author":{"gitId":"ChryslineLim"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterPropsCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-19"},{"lineNumber":38,"author":{"gitId":"ChryslineLim"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":39,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":40,"author":{"gitId":"ChryslineLim"},"content":"        AbstractFilterPropsPredicate predicate \u003d null;","lastModifiedDate":"2022-10-19"},{"lineNumber":41,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":42,"author":{"gitId":"ChryslineLim"},"content":"        if (argMultimap.getValue(PREFIX_PRICE_RANGE).isPresent()) {","lastModifiedDate":"2022-10-19"},{"lineNumber":43,"author":{"gitId":"ChryslineLim"},"content":"            PriceRange priceRange \u003d ParserUtil.parsePriceRange(argMultimap.getValue(PREFIX_PRICE_RANGE).get());","lastModifiedDate":"2022-10-19"},{"lineNumber":44,"author":{"gitId":"ChryslineLim"},"content":"            predicate \u003d new FilterPropsByPricePredicate(priceRange);","lastModifiedDate":"2022-10-19"},{"lineNumber":45,"author":{"gitId":"ChryslineLim"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":46,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":47,"author":{"gitId":"zsiggg"},"content":"        if (argMultimap.getValue(PREFIX_CHARACTERISTICS).isPresent()) {","lastModifiedDate":"2022-10-20"},{"lineNumber":48,"author":{"gitId":"zsiggg"},"content":"            Characteristics characteristics \u003d ParserUtil.parseCharacteristics(","lastModifiedDate":"2022-10-20"},{"lineNumber":49,"author":{"gitId":"zsiggg"},"content":"                    argMultimap.getValue(PREFIX_CHARACTERISTICS).get());","lastModifiedDate":"2022-10-20"},{"lineNumber":50,"author":{"gitId":"zsiggg"},"content":"            predicate \u003d new FilterPropsByCharacteristicsPredicate(characteristics);","lastModifiedDate":"2022-10-20"},{"lineNumber":51,"author":{"gitId":"zsiggg"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":52,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"ChryslineLim"},"content":"        // TODO: Consider allowing filtering by multiple characteristics at once","lastModifiedDate":"2022-10-19"},{"lineNumber":54,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":55,"author":{"gitId":"ChryslineLim"},"content":"        return new FilterPropsCommand(predicate);","lastModifiedDate":"2022-10-19"},{"lineNumber":56,"author":{"gitId":"ChryslineLim"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":57,"author":{"gitId":"ChryslineLim"},"content":"}","lastModifiedDate":"2022-10-19"}],"authorContributionMap":{"zsiggg":8,"ChryslineLim":49}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"ChryslineLim"},"content":"public class FindCommandParser extends Parser\u003cFindCommand\u003e {","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"-":31,"ChryslineLim":1}},{"path":"src/main/java/seedu/address/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-07-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"ChryslineLim"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"ChryslineLim"},"content":"public abstract class Parser\u003cT extends Command\u003e {","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"ChryslineLim"},"content":"    public abstract T parse(String userInput) throws ParseException;","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"ChryslineLim"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"ChryslineLim"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"ChryslineLim"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"ChryslineLim"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"ChryslineLim"},"content":"    public boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"ChryslineLim"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"ChryslineLim"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":27,"author":{"gitId":"ChryslineLim"},"content":"    /**","lastModifiedDate":"2022-10-19"},{"lineNumber":28,"author":{"gitId":"ChryslineLim"},"content":"     * Returns true if more than one {@code Prefix} is present in the given","lastModifiedDate":"2022-10-19"},{"lineNumber":29,"author":{"gitId":"ChryslineLim"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-10-19"},{"lineNumber":30,"author":{"gitId":"ChryslineLim"},"content":"     */","lastModifiedDate":"2022-10-19"},{"lineNumber":31,"author":{"gitId":"ChryslineLim"},"content":"    public boolean areMoreThanOnePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-10-19"},{"lineNumber":32,"author":{"gitId":"ChryslineLim"},"content":"        return Stream.of(prefixes).filter(prefix -\u003e argumentMultimap.getValue(prefix).isPresent()).count() \u003e 1;","lastModifiedDate":"2022-10-19"},{"lineNumber":33,"author":{"gitId":"ChryslineLim"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":34,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":35,"author":{"gitId":"ChryslineLim"},"content":"    /**","lastModifiedDate":"2022-10-19"},{"lineNumber":36,"author":{"gitId":"ChryslineLim"},"content":"     * Returns false if no {@code Prefix} is present in the given","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"ChryslineLim"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-10-19"},{"lineNumber":38,"author":{"gitId":"ChryslineLim"},"content":"     */","lastModifiedDate":"2022-10-19"},{"lineNumber":39,"author":{"gitId":"ChryslineLim"},"content":"    public boolean isAnyPrefixPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"ChryslineLim"},"content":"        return Stream.of(prefixes).filter(prefix -\u003e argumentMultimap.getValue(prefix).isPresent()).count() \u003e 0;","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"ChryslineLim"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"-":14,"ChryslineLim":28}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"riccqi"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"riccqi"},"content":"import java.util.List;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"riccqi"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"zsiggg"},"content":"import seedu.address.model.address.Address;","lastModifiedDate":"2022-10-08"},{"lineNumber":13,"author":{"gitId":"ChryslineLim"},"content":"import seedu.address.model.characteristics.Characteristics;","lastModifiedDate":"2022-10-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"jchilling"},"content":"import seedu.address.model.person.Priority;","lastModifiedDate":"2022-10-19"},{"lineNumber":18,"author":{"gitId":"jchilling"},"content":"import seedu.address.model.pricerange.PriceRange;","lastModifiedDate":"2022-10-19"},{"lineNumber":19,"author":{"gitId":"zsiggg"},"content":"import seedu.address.model.property.Description;","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"zsiggg"},"content":"import seedu.address.model.property.Price;","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"ChryslineLim"},"content":"import seedu.address.model.property.Properties;","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"ChryslineLim"},"content":"import seedu.address.model.property.PropertyName;","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"jchilling"},"content":"     * Parses a {@code String priority} into a {@code Priority}.","lastModifiedDate":"2022-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"jchilling"},"content":"     * @throws ParseException if the given {@code priority} is invalid.","lastModifiedDate":"2022-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"jchilling"},"content":"    public static Priority parsePriority(String priority) throws ParseException {","lastModifiedDate":"2022-10-19"},{"lineNumber":112,"author":{"gitId":"jchilling"},"content":"        requireNonNull(priority);","lastModifiedDate":"2022-10-19"},{"lineNumber":113,"author":{"gitId":"jchilling"},"content":"        String trimmedPriority \u003d priority.trim().toUpperCase();","lastModifiedDate":"2022-10-20"},{"lineNumber":114,"author":{"gitId":"jchilling"},"content":"        if (!Priority.isValidPriority(trimmedPriority)) {","lastModifiedDate":"2022-10-20"},{"lineNumber":115,"author":{"gitId":"jchilling"},"content":"            throw new ParseException(Priority.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"jchilling"},"content":"        return new Priority(trimmedPriority);","lastModifiedDate":"2022-10-20"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":119,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":120,"author":{"gitId":"zsiggg"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":121,"author":{"gitId":"zsiggg"},"content":"     * Parses a {@code String description} into a {@code Description}.","lastModifiedDate":"2022-10-05"},{"lineNumber":122,"author":{"gitId":"zsiggg"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-05"},{"lineNumber":123,"author":{"gitId":"zsiggg"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":124,"author":{"gitId":"zsiggg"},"content":"     * @throws ParseException if the given {@code description} is invalid.","lastModifiedDate":"2022-10-05"},{"lineNumber":125,"author":{"gitId":"zsiggg"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":126,"author":{"gitId":"zsiggg"},"content":"    public static Description parseDescription(String description) throws ParseException {","lastModifiedDate":"2022-10-05"},{"lineNumber":127,"author":{"gitId":"zsiggg"},"content":"        requireNonNull(description);","lastModifiedDate":"2022-10-05"},{"lineNumber":128,"author":{"gitId":"zsiggg"},"content":"        String trimmedDescription \u003d description.trim();","lastModifiedDate":"2022-10-05"},{"lineNumber":129,"author":{"gitId":"zsiggg"},"content":"        if (!Description.isValidDescription(trimmedDescription)) {","lastModifiedDate":"2022-10-05"},{"lineNumber":130,"author":{"gitId":"zsiggg"},"content":"            throw new ParseException(Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-05"},{"lineNumber":131,"author":{"gitId":"zsiggg"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":132,"author":{"gitId":"zsiggg"},"content":"        return new Description(trimmedDescription);","lastModifiedDate":"2022-10-05"},{"lineNumber":133,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":134,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":135,"author":{"gitId":"ChryslineLim"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":136,"author":{"gitId":"ChryslineLim"},"content":"     * Parses {@code String range} into a {@code PriceRange}.","lastModifiedDate":"2022-10-05"},{"lineNumber":137,"author":{"gitId":"ChryslineLim"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":138,"author":{"gitId":"ChryslineLim"},"content":"    public static PriceRange parsePriceRange(String range) throws ParseException {","lastModifiedDate":"2022-10-05"},{"lineNumber":139,"author":{"gitId":"chngchngchng"},"content":"        requireNonNull(range);","lastModifiedDate":"2022-10-10"},{"lineNumber":140,"author":{"gitId":"chngchngchng"},"content":"        String trimmedRange \u003d range.trim();","lastModifiedDate":"2022-10-10"},{"lineNumber":141,"author":{"gitId":"ChryslineLim"},"content":"        /*TODO: Currently the price range accepted has to be in the exact format of LOW - HIGH","lastModifiedDate":"2022-10-19"},{"lineNumber":142,"author":{"gitId":"ChryslineLim"},"content":"        with no allowance for extra white spaces within e.g 200 -     500.","lastModifiedDate":"2022-10-19"},{"lineNumber":143,"author":{"gitId":"ChryslineLim"},"content":"        Accepted white spaces are only around e.g \"    200 - 500     \".","lastModifiedDate":"2022-10-19"},{"lineNumber":144,"author":{"gitId":"ChryslineLim"},"content":"        Something to consider for further enhancement if we want to make it","lastModifiedDate":"2022-10-19"},{"lineNumber":145,"author":{"gitId":"ChryslineLim"},"content":"        more flexible, but not a priority!*/","lastModifiedDate":"2022-10-19"},{"lineNumber":146,"author":{"gitId":"chngchngchng"},"content":"        if (!PriceRange.isValidPriceRange(trimmedRange)) {","lastModifiedDate":"2022-10-10"},{"lineNumber":147,"author":{"gitId":"ChryslineLim"},"content":"            throw new ParseException(PriceRange.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-05"},{"lineNumber":148,"author":{"gitId":"ChryslineLim"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":149,"author":{"gitId":"chngchngchng"},"content":"        return new PriceRange(trimmedRange);","lastModifiedDate":"2022-10-10"},{"lineNumber":150,"author":{"gitId":"ChryslineLim"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":151,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":152,"author":{"gitId":"ChryslineLim"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":153,"author":{"gitId":"ChryslineLim"},"content":"     * Parses {@code String characteristics} into a {@code Characteristics}.","lastModifiedDate":"2022-10-05"},{"lineNumber":154,"author":{"gitId":"ChryslineLim"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":155,"author":{"gitId":"ChryslineLim"},"content":"    public static Characteristics parseCharacteristics(String characteristics) throws ParseException {","lastModifiedDate":"2022-10-19"},{"lineNumber":156,"author":{"gitId":"ChryslineLim"},"content":"        requireNonNull(characteristics);","lastModifiedDate":"2022-10-12"},{"lineNumber":157,"author":{"gitId":"ChryslineLim"},"content":"        String trimmedCharacteristics \u003d characteristics.trim();","lastModifiedDate":"2022-10-06"},{"lineNumber":158,"author":{"gitId":"ChryslineLim"},"content":"        if (!Characteristics.isValidCharacteristics(trimmedCharacteristics)) {","lastModifiedDate":"2022-10-19"},{"lineNumber":159,"author":{"gitId":"ChryslineLim"},"content":"            throw new ParseException(Characteristics.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-19"},{"lineNumber":160,"author":{"gitId":"ChryslineLim"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":161,"author":{"gitId":"ChryslineLim"},"content":"        return new Characteristics(trimmedCharacteristics);","lastModifiedDate":"2022-10-19"},{"lineNumber":162,"author":{"gitId":"ChryslineLim"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":163,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":164,"author":{"gitId":"riccqi"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":165,"author":{"gitId":"riccqi"},"content":"     * Parses {@code String properties} into a {@code List\u003cInteger\u003e}.","lastModifiedDate":"2022-10-06"},{"lineNumber":166,"author":{"gitId":"riccqi"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":167,"author":{"gitId":"chngchngchng"},"content":"    // TODO: Actually parse properties here?","lastModifiedDate":"2022-10-10"},{"lineNumber":168,"author":{"gitId":"chngchngchng"},"content":"    public static Properties parseProperties(String properties) throws ParseException {","lastModifiedDate":"2022-10-10"},{"lineNumber":169,"author":{"gitId":"riccqi"},"content":"        if (properties.isEmpty()) {","lastModifiedDate":"2022-10-06"},{"lineNumber":170,"author":{"gitId":"chngchngchng"},"content":"            return new Properties(\"\");","lastModifiedDate":"2022-10-10"},{"lineNumber":171,"author":{"gitId":"riccqi"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":172,"author":{"gitId":"riccqi"},"content":"        String trimmedProperties \u003d properties.trim();","lastModifiedDate":"2022-10-06"},{"lineNumber":173,"author":{"gitId":"riccqi"},"content":"        List\u003cInteger\u003e propertyArray \u003d Arrays.stream(trimmedProperties.split(\";\"))","lastModifiedDate":"2022-10-06"},{"lineNumber":174,"author":{"gitId":"riccqi"},"content":"                .map(item -\u003e Integer.parseInt(item.trim()))","lastModifiedDate":"2022-10-06"},{"lineNumber":175,"author":{"gitId":"riccqi"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2022-10-06"},{"lineNumber":176,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":177,"author":{"gitId":"riccqi"},"content":"        // TODO: should add a check that all values that are ; separated are integers","lastModifiedDate":"2022-10-06"},{"lineNumber":178,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":179,"author":{"gitId":"chngchngchng"},"content":"        return new Properties(\"\");","lastModifiedDate":"2022-10-10"},{"lineNumber":180,"author":{"gitId":"riccqi"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":181,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":182,"author":{"gitId":"zsiggg"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":183,"author":{"gitId":"zsiggg"},"content":"     * Parses a {@code String price} into a {@code Price}.","lastModifiedDate":"2022-10-06"},{"lineNumber":184,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-06"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-10-06"},{"lineNumber":186,"author":{"gitId":"zsiggg"},"content":"     * @throws ParseException if the given {@code price} is invalid.","lastModifiedDate":"2022-10-06"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":188,"author":{"gitId":"zsiggg"},"content":"    public static Price parsePrice(String price) throws ParseException {","lastModifiedDate":"2022-10-06"},{"lineNumber":189,"author":{"gitId":"zsiggg"},"content":"        requireNonNull(price);","lastModifiedDate":"2022-10-06"},{"lineNumber":190,"author":{"gitId":"zsiggg"},"content":"        String trimmedPrice \u003d price.trim();","lastModifiedDate":"2022-10-06"},{"lineNumber":191,"author":{"gitId":"zsiggg"},"content":"        if (!Price.isValidPrice(trimmedPrice)) {","lastModifiedDate":"2022-10-06"},{"lineNumber":192,"author":{"gitId":"zsiggg"},"content":"            throw new ParseException(Price.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-06"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":194,"author":{"gitId":"zsiggg"},"content":"        return new Price(trimmedPrice);","lastModifiedDate":"2022-10-06"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":198,"author":{"gitId":"zsiggg"},"content":"     * Parses a {@code String propertyName} into a {@code PropertyName}.","lastModifiedDate":"2022-10-06"},{"lineNumber":199,"author":{"gitId":"zsiggg"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-06"},{"lineNumber":200,"author":{"gitId":"zsiggg"},"content":"     *","lastModifiedDate":"2022-10-06"},{"lineNumber":201,"author":{"gitId":"zsiggg"},"content":"     * @throws ParseException if the given {@code propertyName} is invalid.","lastModifiedDate":"2022-10-06"},{"lineNumber":202,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":203,"author":{"gitId":"zsiggg"},"content":"    public static PropertyName parsePropertyName(String propertyName) throws ParseException {","lastModifiedDate":"2022-10-06"},{"lineNumber":204,"author":{"gitId":"zsiggg"},"content":"        requireNonNull(propertyName);","lastModifiedDate":"2022-10-06"},{"lineNumber":205,"author":{"gitId":"zsiggg"},"content":"        String trimmedPropertyName \u003d propertyName.trim();","lastModifiedDate":"2022-10-06"},{"lineNumber":206,"author":{"gitId":"zsiggg"},"content":"        if (!PropertyName.isValidPropertyName(trimmedPropertyName)) {","lastModifiedDate":"2022-10-06"},{"lineNumber":207,"author":{"gitId":"zsiggg"},"content":"            throw new ParseException(PropertyName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-06"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":209,"author":{"gitId":"zsiggg"},"content":"        return new PropertyName(trimmedPropertyName);","lastModifiedDate":"2022-10-06"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"riccqi":18,"zsiggg":37,"chngchngchng":8,"jchilling":10,"-":110,"ChryslineLim":28}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":9,"author":{"gitId":"zsiggg"},"content":"import seedu.address.model.property.Property;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"riccqi"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"riccqi"},"content":"     * {@code Predicate} that always evaluate to true","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"riccqi"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":20,"author":{"gitId":"riccqi"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"riccqi"},"content":"     * {@code Predicate} that always evaluate to true","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"riccqi"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"zsiggg"},"content":"    Predicate\u003cProperty\u003e PREDICATE_SHOW_ALL_PROPERTIES \u003d unused -\u003e true;","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"zsiggg"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"zsiggg"},"content":"     * Returns the user prefs\u0027 person model file path.","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"zsiggg"},"content":"    Path getPersonModelFilePath();","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"zsiggg"},"content":"     * Sets the user prefs\u0027 person model file path.","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"zsiggg"},"content":"    void setPersonModelFilePath(Path addressBookFilePath);","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"zsiggg"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"zsiggg"},"content":"     * Returns the user prefs\u0027 property model file path.","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"zsiggg"},"content":"    Path getPropertyModelFilePath();","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"zsiggg"},"content":"     * Sets the user prefs\u0027 property model file path.","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"zsiggg"},"content":"    void setPropertyModelFilePath(Path addressBookFilePath);","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"zsiggg"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d PersonBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"zsiggg"},"content":"     * Replaces person model data with the data in {@code personModel}.","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"zsiggg"},"content":"    void setPersonModel(ReadOnlyPersonBook personModel);","lastModifiedDate":"2022-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":74,"author":{"gitId":"riccqi"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":75,"author":{"gitId":"riccqi"},"content":"     * Returns the PersonBook","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"riccqi"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"zsiggg"},"content":"    ReadOnlyPersonBook getPersonModel();","lastModifiedDate":"2022-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":103,"author":{"gitId":"zsiggg"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-11"},{"lineNumber":104,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":105,"author":{"gitId":"riccqi"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":106,"author":{"gitId":"riccqi"},"content":"     * Returns an unmodifiable view of the filtered person list","lastModifiedDate":"2022-10-12"},{"lineNumber":107,"author":{"gitId":"riccqi"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":112,"author":{"gitId":"riccqi"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":116,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":117,"author":{"gitId":"zsiggg"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d PropertyBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-13"},{"lineNumber":118,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":119,"author":{"gitId":"ChryslineLim"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":120,"author":{"gitId":"zsiggg"},"content":"     * Replaces property model data with the data in {@code propertyModel}.","lastModifiedDate":"2022-10-11"},{"lineNumber":121,"author":{"gitId":"ChryslineLim"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":122,"author":{"gitId":"zsiggg"},"content":"    void setPropertyModel(ReadOnlyPropertyBook propertyModel);","lastModifiedDate":"2022-10-13"},{"lineNumber":123,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":124,"author":{"gitId":"riccqi"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":125,"author":{"gitId":"riccqi"},"content":"     * Returns the PropertyBook","lastModifiedDate":"2022-10-12"},{"lineNumber":126,"author":{"gitId":"riccqi"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":127,"author":{"gitId":"zsiggg"},"content":"    ReadOnlyPropertyBook getPropertyModel();","lastModifiedDate":"2022-10-13"},{"lineNumber":128,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":129,"author":{"gitId":"riccqi"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":130,"author":{"gitId":"zsiggg"},"content":"     * Returns true if a property with the same identity as {@code property} exists in the address book.","lastModifiedDate":"2022-10-11"},{"lineNumber":131,"author":{"gitId":"riccqi"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":132,"author":{"gitId":"zsiggg"},"content":"    boolean hasProperty(Property property);","lastModifiedDate":"2022-10-11"},{"lineNumber":133,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":134,"author":{"gitId":"zsiggg"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":135,"author":{"gitId":"zsiggg"},"content":"     * Deletes the given property.","lastModifiedDate":"2022-10-11"},{"lineNumber":136,"author":{"gitId":"zsiggg"},"content":"     * The property must exist in the address book.","lastModifiedDate":"2022-10-11"},{"lineNumber":137,"author":{"gitId":"zsiggg"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":138,"author":{"gitId":"zsiggg"},"content":"    void deleteProperty(Property target);","lastModifiedDate":"2022-10-11"},{"lineNumber":139,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":140,"author":{"gitId":"zsiggg"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":141,"author":{"gitId":"zsiggg"},"content":"     * Adds the given property.","lastModifiedDate":"2022-10-11"},{"lineNumber":142,"author":{"gitId":"zsiggg"},"content":"     * {@code property} must not already exist in the address book.","lastModifiedDate":"2022-10-11"},{"lineNumber":143,"author":{"gitId":"zsiggg"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":144,"author":{"gitId":"zsiggg"},"content":"    void addProperty(Property property);","lastModifiedDate":"2022-10-11"},{"lineNumber":145,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":146,"author":{"gitId":"zsiggg"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":147,"author":{"gitId":"zsiggg"},"content":"     * Replaces the given property {@code target} with {@code editedProperty}.","lastModifiedDate":"2022-10-11"},{"lineNumber":148,"author":{"gitId":"zsiggg"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2022-10-11"},{"lineNumber":149,"author":{"gitId":"zsiggg"},"content":"     * The property identity of {@code editedProperty} must not be the same as another existing property in the address","lastModifiedDate":"2022-10-11"},{"lineNumber":150,"author":{"gitId":"zsiggg"},"content":"     * book.","lastModifiedDate":"2022-10-11"},{"lineNumber":151,"author":{"gitId":"zsiggg"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":152,"author":{"gitId":"zsiggg"},"content":"    void setProperty(Property target, Property editedProperty);","lastModifiedDate":"2022-10-11"},{"lineNumber":153,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":154,"author":{"gitId":"zsiggg"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Property List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-11"},{"lineNumber":155,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":156,"author":{"gitId":"riccqi"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":157,"author":{"gitId":"riccqi"},"content":"     * Returns an unmodifiable view of the filtered property list","lastModifiedDate":"2022-10-12"},{"lineNumber":158,"author":{"gitId":"riccqi"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":159,"author":{"gitId":"zsiggg"},"content":"    ObservableList\u003cProperty\u003e getFilteredPropertyList();","lastModifiedDate":"2022-10-11"},{"lineNumber":160,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":161,"author":{"gitId":"zsiggg"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":162,"author":{"gitId":"zsiggg"},"content":"     * Updates the filter of the filtered property list to filter by the given {@code predicate}.","lastModifiedDate":"2022-10-11"},{"lineNumber":163,"author":{"gitId":"riccqi"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":164,"author":{"gitId":"zsiggg"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2022-10-11"},{"lineNumber":165,"author":{"gitId":"zsiggg"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":166,"author":{"gitId":"zsiggg"},"content":"    void updateFilteredPropertyList(Predicate\u003cProperty\u003e predicate);","lastModifiedDate":"2022-10-11"},{"lineNumber":167,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"riccqi":24,"zsiggg":58,"jchilling":1,"-":82,"ChryslineLim":3}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"zsiggg"},"content":"import seedu.address.model.property.Property;","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"zsiggg"},"content":"    private final PersonBook personBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"zsiggg"},"content":"    private final PropertyBook propertyBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"zsiggg"},"content":"    private final FilteredList\u003cProperty\u003e filteredProperties;","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"zsiggg"},"content":"     * Initializes a ModelManager with the given personBook and userPrefs.","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"zsiggg"},"content":"    public ModelManager(ReadOnlyPersonBook personModel, ReadOnlyPropertyBook propertyModel,","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"zsiggg"},"content":"                        ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"zsiggg"},"content":"        requireAllNonNull(personModel, propertyModel, userPrefs);","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"zsiggg"},"content":"        logger.fine(\"Initializing with person model: \" + personModel + \" and property model: \" + propertyModel","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"zsiggg"},"content":"                + \" and user prefs \" + userPrefs);","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"zsiggg"},"content":"        this.personBook \u003d new PersonBook(personModel);","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"zsiggg"},"content":"        this.propertyBook \u003d new PropertyBook(propertyModel);","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"zsiggg"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.personBook.getPersonList());","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"zsiggg"},"content":"        filteredProperties \u003d new FilteredList\u003c\u003e(this.propertyBook.getPropertyList());","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"zsiggg"},"content":"        this(new PersonBook(), new PropertyBook(), new UserPrefs());","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"zsiggg"},"content":"    public Path getPersonModelFilePath() {","lastModifiedDate":"2022-10-11"},{"lineNumber":76,"author":{"gitId":"zsiggg"},"content":"        return userPrefs.getPersonBookFilePath();","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"zsiggg"},"content":"    public void setPersonModelFilePath(Path personModelFilePath) {","lastModifiedDate":"2022-10-11"},{"lineNumber":81,"author":{"gitId":"zsiggg"},"content":"        requireNonNull(personModelFilePath);","lastModifiedDate":"2022-10-11"},{"lineNumber":82,"author":{"gitId":"zsiggg"},"content":"        userPrefs.setPersonBookFilePath(personModelFilePath);","lastModifiedDate":"2022-10-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":85,"author":{"gitId":"zsiggg"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":86,"author":{"gitId":"zsiggg"},"content":"    public Path getPropertyModelFilePath() {","lastModifiedDate":"2022-10-11"},{"lineNumber":87,"author":{"gitId":"zsiggg"},"content":"        return userPrefs.getPropertyBookFilePath();","lastModifiedDate":"2022-10-12"},{"lineNumber":88,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":89,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":90,"author":{"gitId":"zsiggg"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":91,"author":{"gitId":"zsiggg"},"content":"    public void setPropertyModelFilePath(Path propertyModelFilePath) {","lastModifiedDate":"2022-10-11"},{"lineNumber":92,"author":{"gitId":"zsiggg"},"content":"        requireNonNull(propertyModelFilePath);","lastModifiedDate":"2022-10-11"},{"lineNumber":93,"author":{"gitId":"zsiggg"},"content":"        userPrefs.setPropertyBookFilePath(propertyModelFilePath);","lastModifiedDate":"2022-10-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"zsiggg"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d PersonBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"zsiggg"},"content":"    public void setPersonModel(ReadOnlyPersonBook personModel) {","lastModifiedDate":"2022-10-13"},{"lineNumber":100,"author":{"gitId":"zsiggg"},"content":"        this.personBook.resetData(personModel);","lastModifiedDate":"2022-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":104,"author":{"gitId":"zsiggg"},"content":"    public ReadOnlyPersonBook getPersonModel() {","lastModifiedDate":"2022-10-13"},{"lineNumber":105,"author":{"gitId":"zsiggg"},"content":"        return personBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":111,"author":{"gitId":"zsiggg"},"content":"        return personBook.hasPerson(person);","lastModifiedDate":"2022-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":116,"author":{"gitId":"zsiggg"},"content":"        personBook.removePerson(target);","lastModifiedDate":"2022-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":121,"author":{"gitId":"zsiggg"},"content":"        personBook.addPerson(person);","lastModifiedDate":"2022-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":128,"author":{"gitId":"zsiggg"},"content":"        personBook.setPerson(target, editedPerson);","lastModifiedDate":"2022-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":147,"author":{"gitId":"zsiggg"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d PropertyBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-13"},{"lineNumber":148,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":149,"author":{"gitId":"zsiggg"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":150,"author":{"gitId":"zsiggg"},"content":"    public void setPropertyModel(ReadOnlyPropertyBook propertyModel) {","lastModifiedDate":"2022-10-13"},{"lineNumber":151,"author":{"gitId":"zsiggg"},"content":"        this.propertyBook.resetData(propertyModel);","lastModifiedDate":"2022-10-13"},{"lineNumber":152,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":153,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":154,"author":{"gitId":"zsiggg"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":155,"author":{"gitId":"zsiggg"},"content":"    public ReadOnlyPropertyBook getPropertyModel() {","lastModifiedDate":"2022-10-13"},{"lineNumber":156,"author":{"gitId":"zsiggg"},"content":"        return propertyBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":157,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":158,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":159,"author":{"gitId":"zsiggg"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":160,"author":{"gitId":"zsiggg"},"content":"    public boolean hasProperty(Property property) {","lastModifiedDate":"2022-10-11"},{"lineNumber":161,"author":{"gitId":"zsiggg"},"content":"        requireNonNull(property);","lastModifiedDate":"2022-10-11"},{"lineNumber":162,"author":{"gitId":"zsiggg"},"content":"        return propertyBook.hasProperty(property);","lastModifiedDate":"2022-10-13"},{"lineNumber":163,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":164,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":165,"author":{"gitId":"zsiggg"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":166,"author":{"gitId":"zsiggg"},"content":"    public void deleteProperty(Property target) {","lastModifiedDate":"2022-10-11"},{"lineNumber":167,"author":{"gitId":"zsiggg"},"content":"        propertyBook.removeProperty(target);","lastModifiedDate":"2022-10-13"},{"lineNumber":168,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":169,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":170,"author":{"gitId":"zsiggg"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":171,"author":{"gitId":"zsiggg"},"content":"    public void addProperty(Property property) {","lastModifiedDate":"2022-10-11"},{"lineNumber":172,"author":{"gitId":"zsiggg"},"content":"        propertyBook.addProperty(property);","lastModifiedDate":"2022-10-13"},{"lineNumber":173,"author":{"gitId":"zsiggg"},"content":"        updateFilteredPropertyList(PREDICATE_SHOW_ALL_PROPERTIES);","lastModifiedDate":"2022-10-11"},{"lineNumber":174,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":175,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":176,"author":{"gitId":"zsiggg"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":177,"author":{"gitId":"zsiggg"},"content":"    public void setProperty(Property target, Property editedProperty) {","lastModifiedDate":"2022-10-11"},{"lineNumber":178,"author":{"gitId":"zsiggg"},"content":"        requireAllNonNull(target, editedProperty);","lastModifiedDate":"2022-10-11"},{"lineNumber":179,"author":{"gitId":"zsiggg"},"content":"        propertyBook.setProperty(target, editedProperty);","lastModifiedDate":"2022-10-13"},{"lineNumber":180,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":181,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":182,"author":{"gitId":"zsiggg"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Property List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-11"},{"lineNumber":183,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":184,"author":{"gitId":"zsiggg"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":185,"author":{"gitId":"zsiggg"},"content":"     * Returns an unmodifiable view of the list of {@code Property} backed by the internal list of","lastModifiedDate":"2022-10-11"},{"lineNumber":186,"author":{"gitId":"zsiggg"},"content":"     * {@code PropertyBook}","lastModifiedDate":"2022-10-13"},{"lineNumber":187,"author":{"gitId":"zsiggg"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":188,"author":{"gitId":"zsiggg"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":189,"author":{"gitId":"zsiggg"},"content":"    public ObservableList\u003cProperty\u003e getFilteredPropertyList() {","lastModifiedDate":"2022-10-11"},{"lineNumber":190,"author":{"gitId":"zsiggg"},"content":"        return filteredProperties;","lastModifiedDate":"2022-10-11"},{"lineNumber":191,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":192,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":193,"author":{"gitId":"zsiggg"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":194,"author":{"gitId":"zsiggg"},"content":"    public void updateFilteredPropertyList(Predicate\u003cProperty\u003e predicate) {","lastModifiedDate":"2022-10-11"},{"lineNumber":195,"author":{"gitId":"zsiggg"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2022-10-11"},{"lineNumber":196,"author":{"gitId":"zsiggg"},"content":"        filteredProperties.setPredicate(predicate);","lastModifiedDate":"2022-10-11"},{"lineNumber":197,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":198,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":213,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":214,"author":{"gitId":"zsiggg"},"content":"        return userPrefs.equals(other.userPrefs)","lastModifiedDate":"2022-10-11"},{"lineNumber":215,"author":{"gitId":"zsiggg"},"content":"                \u0026\u0026 personBook.equals(other.personBook)","lastModifiedDate":"2022-10-13"},{"lineNumber":216,"author":{"gitId":"zsiggg"},"content":"                \u0026\u0026 propertyBook.equals(other.propertyBook)","lastModifiedDate":"2022-10-13"},{"lineNumber":217,"author":{"gitId":"zsiggg"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons)","lastModifiedDate":"2022-10-11"},{"lineNumber":218,"author":{"gitId":"zsiggg"},"content":"                \u0026\u0026 filteredProperties.equals(other.filteredProperties);","lastModifiedDate":"2022-10-11"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"zsiggg":96,"-":125}},{"path":"src/main/java/seedu/address/model/PersonBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"zsiggg"},"content":"public class PersonBook implements ReadOnlyPersonBook {","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"zsiggg"},"content":"    public PersonBook() {}","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"zsiggg"},"content":"     * Creates an PersonBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"zsiggg"},"content":"    public PersonBook(ReadOnlyPersonBook toBeCopied) {","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"zsiggg"},"content":"     * Resets the existing data of this {@code PersonBook} with {@code newData}.","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"zsiggg"},"content":"    public void resetData(ReadOnlyPersonBook newData) {","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":89,"author":{"gitId":"zsiggg"},"content":"     * Removes {@code key} from this {@code PersonBook}.","lastModifiedDate":"2022-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2018-04-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"zsiggg"},"content":"                || (other instanceof PersonBook // instanceof handles nulls","lastModifiedDate":"2022-10-13"},{"lineNumber":114,"author":{"gitId":"zsiggg"},"content":"                \u0026\u0026 persons.equals(((PersonBook) other).persons));","lastModifiedDate":"2022-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"riccqi":1,"zsiggg":9,"-":111}},{"path":"src/main/java/seedu/address/model/PropertyBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zsiggg"},"content":"package seedu.address.model;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"zsiggg"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"zsiggg"},"content":"import java.util.List;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"zsiggg"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"zsiggg"},"content":"import seedu.address.model.property.Property;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"zsiggg"},"content":"import seedu.address.model.property.UniquePropertyList;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"zsiggg"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"zsiggg"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"zsiggg"},"content":" * Duplicates are not allowed (by .isSameProperty comparison)","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"zsiggg"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"zsiggg"},"content":"public class PropertyBook implements ReadOnlyPropertyBook {","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"zsiggg"},"content":"    private final UniquePropertyList properties;","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"zsiggg"},"content":"    /*","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"zsiggg"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"zsiggg"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"zsiggg"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"zsiggg"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"zsiggg"},"content":"     *   among constructors.","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"zsiggg"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"zsiggg"},"content":"    {","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"zsiggg"},"content":"        properties \u003d new UniquePropertyList();","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"zsiggg"},"content":"    public PropertyBook() {}","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"zsiggg"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"zsiggg"},"content":"     * Creates a PropertyBook using the Properties in the {@code propertyModel}","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"zsiggg"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"zsiggg"},"content":"    public PropertyBook(ReadOnlyPropertyBook propertyModel) {","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"zsiggg"},"content":"        this();","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"zsiggg"},"content":"        resetData(propertyModel);","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"zsiggg"},"content":"    //// list overwrite operations","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"zsiggg"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"zsiggg"},"content":"     * Replaces the contents of the property list with {@code properties}.","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"zsiggg"},"content":"     * {@code properties} must not contain duplicate properties.","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"zsiggg"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"zsiggg"},"content":"    public void setProperties(List\u003cProperty\u003e properties) {","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"zsiggg"},"content":"        this.properties.setProperties(properties);","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"zsiggg"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"zsiggg"},"content":"     * Resets the existing data of this {@code PropertyBook} with {@code newData}.","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"zsiggg"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"zsiggg"},"content":"    public void resetData(ReadOnlyPropertyBook newData) {","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"zsiggg"},"content":"        requireNonNull(newData);","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"zsiggg"},"content":"        setProperties(newData.getPropertyList());","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"zsiggg"},"content":"    //// property-level operations","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"zsiggg"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"zsiggg"},"content":"     * Returns true if a property with the same identity as {@code property} exists in the property model.","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"zsiggg"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"zsiggg"},"content":"    public boolean hasProperty(Property property) {","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"zsiggg"},"content":"        requireNonNull(property);","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"zsiggg"},"content":"        return properties.contains(property);","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"zsiggg"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"zsiggg"},"content":"     * Adds a property to the property model.","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"zsiggg"},"content":"     * The property must not already exist in the property model.","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"zsiggg"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"zsiggg"},"content":"    public void addProperty(Property p) {","lastModifiedDate":"2022-10-11"},{"lineNumber":74,"author":{"gitId":"zsiggg"},"content":"        properties.add(p);","lastModifiedDate":"2022-10-11"},{"lineNumber":75,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":76,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":77,"author":{"gitId":"zsiggg"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":78,"author":{"gitId":"zsiggg"},"content":"     * Replaces the given property {@code target} in the list with {@code editedProperty}.","lastModifiedDate":"2022-10-11"},{"lineNumber":79,"author":{"gitId":"zsiggg"},"content":"     * {@code target} must exist in the property model.","lastModifiedDate":"2022-10-11"},{"lineNumber":80,"author":{"gitId":"zsiggg"},"content":"     * The property identity of {@code editedProperty} must not be the same as another existing property in the","lastModifiedDate":"2022-10-11"},{"lineNumber":81,"author":{"gitId":"zsiggg"},"content":"     * property model.","lastModifiedDate":"2022-10-11"},{"lineNumber":82,"author":{"gitId":"zsiggg"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":83,"author":{"gitId":"zsiggg"},"content":"    public void setProperty(Property target, Property editedProperty) {","lastModifiedDate":"2022-10-11"},{"lineNumber":84,"author":{"gitId":"zsiggg"},"content":"        requireNonNull(editedProperty);","lastModifiedDate":"2022-10-11"},{"lineNumber":85,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":86,"author":{"gitId":"zsiggg"},"content":"        properties.setProperty(target, editedProperty);","lastModifiedDate":"2022-10-11"},{"lineNumber":87,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":88,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":89,"author":{"gitId":"zsiggg"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":90,"author":{"gitId":"zsiggg"},"content":"     * Removes {@code key} from this {@code PropertyBook}.","lastModifiedDate":"2022-10-13"},{"lineNumber":91,"author":{"gitId":"zsiggg"},"content":"     * {@code key} must exist in the property model.","lastModifiedDate":"2022-10-11"},{"lineNumber":92,"author":{"gitId":"zsiggg"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":93,"author":{"gitId":"zsiggg"},"content":"    public void removeProperty(Property key) {","lastModifiedDate":"2022-10-11"},{"lineNumber":94,"author":{"gitId":"zsiggg"},"content":"        properties.remove(key);","lastModifiedDate":"2022-10-11"},{"lineNumber":95,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":96,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":97,"author":{"gitId":"zsiggg"},"content":"    //// util methods","lastModifiedDate":"2022-10-11"},{"lineNumber":98,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":99,"author":{"gitId":"zsiggg"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":100,"author":{"gitId":"zsiggg"},"content":"    public String toString() {","lastModifiedDate":"2022-10-11"},{"lineNumber":101,"author":{"gitId":"zsiggg"},"content":"        return properties.asUnmodifiableObservableList().size() + \" properties\";","lastModifiedDate":"2022-10-11"},{"lineNumber":102,"author":{"gitId":"zsiggg"},"content":"        // TODO: refine later","lastModifiedDate":"2022-10-11"},{"lineNumber":103,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":104,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":105,"author":{"gitId":"zsiggg"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":106,"author":{"gitId":"zsiggg"},"content":"    public ObservableList\u003cProperty\u003e getPropertyList() {","lastModifiedDate":"2022-10-11"},{"lineNumber":107,"author":{"gitId":"zsiggg"},"content":"        return properties.asUnmodifiableObservableList();","lastModifiedDate":"2022-10-11"},{"lineNumber":108,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":109,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":110,"author":{"gitId":"zsiggg"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":111,"author":{"gitId":"zsiggg"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-11"},{"lineNumber":112,"author":{"gitId":"zsiggg"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-11"},{"lineNumber":113,"author":{"gitId":"zsiggg"},"content":"                || (other instanceof PropertyBook // instanceof handles nulls","lastModifiedDate":"2022-10-13"},{"lineNumber":114,"author":{"gitId":"zsiggg"},"content":"                \u0026\u0026 properties.equals(((PropertyBook) other).properties));","lastModifiedDate":"2022-10-13"},{"lineNumber":115,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":116,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":117,"author":{"gitId":"zsiggg"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":118,"author":{"gitId":"zsiggg"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-11"},{"lineNumber":119,"author":{"gitId":"zsiggg"},"content":"        return properties.hashCode();","lastModifiedDate":"2022-10-11"},{"lineNumber":120,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":121,"author":{"gitId":"zsiggg"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"zsiggg":121}},{"path":"src/main/java/seedu/address/model/ReadOnlyPersonBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"zsiggg"},"content":" * Unmodifiable view of a Person list","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"zsiggg"},"content":"public interface ReadOnlyPersonBook {","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"zsiggg":2,"-":15}},{"path":"src/main/java/seedu/address/model/ReadOnlyPropertyBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zsiggg"},"content":"package seedu.address.model;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"zsiggg"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"zsiggg"},"content":"import seedu.address.model.property.Property;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"zsiggg"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"zsiggg"},"content":" * Unmodifiable view of a Property list","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"zsiggg"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"zsiggg"},"content":"public interface ReadOnlyPropertyBook {","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"zsiggg"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"zsiggg"},"content":"     * Returns an unmodifiable view of the property list.","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"zsiggg"},"content":"     * This list will not contain any duplicate properties.","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"zsiggg"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"zsiggg"},"content":"    ObservableList\u003cProperty\u003e getPropertyList();","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"zsiggg"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"zsiggg":17}},{"path":"src/main/java/seedu/address/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"zsiggg"},"content":"    Path getPersonBookFilePath();","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"zsiggg"},"content":"    Path getPropertyBookFilePath();","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"zsiggg":3,"-":15}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"zsiggg"},"content":"    private Path personBookFilePath \u003d Paths.get(\"data\" , \"personmodel.json\");","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"zsiggg"},"content":"    private Path propertyBookFilePath \u003d Paths.get(\"data\", \"propertymodel.json\");","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"zsiggg"},"content":"        setPersonBookFilePath(newUserPrefs.getPersonBookFilePath());","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"zsiggg"},"content":"        setPropertyBookFilePath(newUserPrefs.getPropertyBookFilePath());","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"zsiggg"},"content":"    public Path getPersonBookFilePath() {","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"zsiggg"},"content":"        return personBookFilePath;","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":56,"author":{"gitId":"zsiggg"},"content":"    public void setPersonBookFilePath(Path personBookFilePath) {","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"zsiggg"},"content":"        requireNonNull(personBookFilePath);","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"zsiggg"},"content":"        this.personBookFilePath \u003d personBookFilePath;","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"zsiggg"},"content":"    public Path getPropertyBookFilePath() {","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"zsiggg"},"content":"        return propertyBookFilePath;","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"zsiggg"},"content":"    public void setPropertyBookFilePath(Path propertyBookFilePath) {","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"zsiggg"},"content":"        requireNonNull(propertyBookFilePath);","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"zsiggg"},"content":"        this.propertyBookFilePath \u003d propertyBookFilePath;","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"zsiggg"},"content":"                \u0026\u0026 personBookFilePath.equals(o.personBookFilePath)","lastModifiedDate":"2022-10-12"},{"lineNumber":83,"author":{"gitId":"zsiggg"},"content":"                \u0026\u0026 propertyBookFilePath.equals(o.propertyBookFilePath);","lastModifiedDate":"2022-10-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"zsiggg"},"content":"        return Objects.hash(guiSettings, personBookFilePath, propertyBookFilePath);","lastModifiedDate":"2022-10-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"zsiggg"},"content":"        sb.append(\"\\nPersons data file location : \" + personBookFilePath);","lastModifiedDate":"2022-10-12"},{"lineNumber":96,"author":{"gitId":"zsiggg"},"content":"        sb.append(\"\\nProperty data file location : \" + propertyBookFilePath);","lastModifiedDate":"2022-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"zsiggg":23,"-":77}},{"path":"src/main/java/seedu/address/model/address/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zsiggg"},"content":"package seedu.address.model.address;","lastModifiedDate":"2022-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s address in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                || (other instanceof Address // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Address) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"zsiggg":1,"-":56}},{"path":"src/main/java/seedu/address/model/characteristics/Characteristics.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChryslineLim"},"content":"package seedu.address.model.characteristics;","lastModifiedDate":"2022-10-19"},{"lineNumber":2,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":3,"author":{"gitId":"ChryslineLim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-19"},{"lineNumber":4,"author":{"gitId":"ChryslineLim"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-19"},{"lineNumber":5,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":6,"author":{"gitId":"ChryslineLim"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-19"},{"lineNumber":7,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":8,"author":{"gitId":"ChryslineLim"},"content":"/**","lastModifiedDate":"2022-10-19"},{"lineNumber":9,"author":{"gitId":"ChryslineLim"},"content":" * Represents the characteristics of a property.","lastModifiedDate":"2022-10-19"},{"lineNumber":10,"author":{"gitId":"ChryslineLim"},"content":" * Individual characteristics are separated by semicolons.","lastModifiedDate":"2022-10-19"},{"lineNumber":11,"author":{"gitId":"ChryslineLim"},"content":" */","lastModifiedDate":"2022-10-19"},{"lineNumber":12,"author":{"gitId":"ChryslineLim"},"content":"public class Characteristics {","lastModifiedDate":"2022-10-19"},{"lineNumber":13,"author":{"gitId":"ChryslineLim"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"If -c flag is used, \"","lastModifiedDate":"2022-10-19"},{"lineNumber":14,"author":{"gitId":"ChryslineLim"},"content":"            + \"characteristics entry cannot be left blank.\";","lastModifiedDate":"2022-10-19"},{"lineNumber":15,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":16,"author":{"gitId":"ChryslineLim"},"content":"    /*","lastModifiedDate":"2022-10-19"},{"lineNumber":17,"author":{"gitId":"ChryslineLim"},"content":"     * The first character of the characteristics must not be a whitespace,","lastModifiedDate":"2022-10-19"},{"lineNumber":18,"author":{"gitId":"ChryslineLim"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-10-19"},{"lineNumber":19,"author":{"gitId":"ChryslineLim"},"content":"     */","lastModifiedDate":"2022-10-19"},{"lineNumber":20,"author":{"gitId":"ChryslineLim"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2022-10-19"},{"lineNumber":21,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":22,"author":{"gitId":"ChryslineLim"},"content":"    public static final String CHARACTERISTIC_DELIMITER \u003d \";\";","lastModifiedDate":"2022-10-19"},{"lineNumber":23,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":24,"author":{"gitId":"ChryslineLim"},"content":"    public final String[] characteristicsArr;","lastModifiedDate":"2022-10-19"},{"lineNumber":25,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":26,"author":{"gitId":"ChryslineLim"},"content":"    /**","lastModifiedDate":"2022-10-19"},{"lineNumber":27,"author":{"gitId":"ChryslineLim"},"content":"     * Constructs a {@code Characteristics}.","lastModifiedDate":"2022-10-19"},{"lineNumber":28,"author":{"gitId":"ChryslineLim"},"content":"     * Guarantees: Immutable, is valid as declared in isValidCharacteristics.","lastModifiedDate":"2022-10-19"},{"lineNumber":29,"author":{"gitId":"ChryslineLim"},"content":"     */","lastModifiedDate":"2022-10-19"},{"lineNumber":30,"author":{"gitId":"ChryslineLim"},"content":"    public Characteristics(String characteristics) {","lastModifiedDate":"2022-10-19"},{"lineNumber":31,"author":{"gitId":"ChryslineLim"},"content":"        requireNonNull(characteristics);","lastModifiedDate":"2022-10-19"},{"lineNumber":32,"author":{"gitId":"ChryslineLim"},"content":"        checkArgument(isValidCharacteristics(characteristics), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-19"},{"lineNumber":33,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":34,"author":{"gitId":"ChryslineLim"},"content":"        characteristicsArr \u003d characteristics.split(CHARACTERISTIC_DELIMITER);","lastModifiedDate":"2022-10-19"},{"lineNumber":35,"author":{"gitId":"ChryslineLim"},"content":"        for (int i \u003d 0; i \u003c characteristicsArr.length; i++) {","lastModifiedDate":"2022-10-19"},{"lineNumber":36,"author":{"gitId":"ChryslineLim"},"content":"            characteristicsArr[i] \u003d characteristicsArr[i].trim();","lastModifiedDate":"2022-10-19"},{"lineNumber":37,"author":{"gitId":"ChryslineLim"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":38,"author":{"gitId":"ChryslineLim"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":39,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":40,"author":{"gitId":"zsiggg"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"zsiggg"},"content":"     * Returns the characteristics array represented by {@code Characteristics}.","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"zsiggg"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"zsiggg"},"content":"    public String[] getCharacteristicsArr() {","lastModifiedDate":"2022-10-20"},{"lineNumber":44,"author":{"gitId":"zsiggg"},"content":"        return characteristicsArr;","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":46,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":47,"author":{"gitId":"ChryslineLim"},"content":"    /**","lastModifiedDate":"2022-10-19"},{"lineNumber":48,"author":{"gitId":"ChryslineLim"},"content":"     * Returns true if a given user-input string is valid to be used in desired characteristics.","lastModifiedDate":"2022-10-19"},{"lineNumber":49,"author":{"gitId":"ChryslineLim"},"content":"     */","lastModifiedDate":"2022-10-19"},{"lineNumber":50,"author":{"gitId":"ChryslineLim"},"content":"    public static boolean isValidCharacteristics(String test) {","lastModifiedDate":"2022-10-19"},{"lineNumber":51,"author":{"gitId":"ChryslineLim"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-19"},{"lineNumber":52,"author":{"gitId":"ChryslineLim"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":53,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":54,"author":{"gitId":"ChryslineLim"},"content":"    /**","lastModifiedDate":"2022-10-19"},{"lineNumber":55,"author":{"gitId":"zsiggg"},"content":"     * Returns true if a given string is contained in the","lastModifiedDate":"2022-10-20"},{"lineNumber":56,"author":{"gitId":"ChryslineLim"},"content":"     * characteristics array.","lastModifiedDate":"2022-10-19"},{"lineNumber":57,"author":{"gitId":"ChryslineLim"},"content":"     */","lastModifiedDate":"2022-10-19"},{"lineNumber":58,"author":{"gitId":"ChryslineLim"},"content":"    public boolean containsCharacteristic(String characteristic) {","lastModifiedDate":"2022-10-19"},{"lineNumber":59,"author":{"gitId":"ChryslineLim"},"content":"        return Arrays.stream(characteristicsArr)","lastModifiedDate":"2022-10-19"},{"lineNumber":60,"author":{"gitId":"zsiggg"},"content":"                .anyMatch(c -\u003e c.toLowerCase().contains(characteristic));","lastModifiedDate":"2022-10-20"},{"lineNumber":61,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":62,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":63,"author":{"gitId":"zsiggg"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":64,"author":{"gitId":"zsiggg"},"content":"     * Returns true if a given {@code Characteristic} contains a characteristic that","lastModifiedDate":"2022-10-20"},{"lineNumber":65,"author":{"gitId":"zsiggg"},"content":"     * is also found in this {@code Characteristic}","lastModifiedDate":"2022-10-20"},{"lineNumber":66,"author":{"gitId":"zsiggg"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":67,"author":{"gitId":"zsiggg"},"content":"    public boolean containsAnyGivenCharacteristics(Characteristics other) {","lastModifiedDate":"2022-10-20"},{"lineNumber":68,"author":{"gitId":"zsiggg"},"content":"        return Arrays.stream(other.getCharacteristicsArr())","lastModifiedDate":"2022-10-20"},{"lineNumber":69,"author":{"gitId":"zsiggg"},"content":"                .anyMatch(c -\u003e containsCharacteristic(c));","lastModifiedDate":"2022-10-20"},{"lineNumber":70,"author":{"gitId":"ChryslineLim"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":71,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":72,"author":{"gitId":"ChryslineLim"},"content":"    @Override","lastModifiedDate":"2022-10-19"},{"lineNumber":73,"author":{"gitId":"ChryslineLim"},"content":"    public String toString() {","lastModifiedDate":"2022-10-19"},{"lineNumber":74,"author":{"gitId":"ChryslineLim"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-10-19"},{"lineNumber":75,"author":{"gitId":"ChryslineLim"},"content":"        // string representation has to be exactly the same as in user input format","lastModifiedDate":"2022-10-19"},{"lineNumber":76,"author":{"gitId":"ChryslineLim"},"content":"        // so that when saved and then retrieved from storage, can be parsed back directly","lastModifiedDate":"2022-10-19"},{"lineNumber":77,"author":{"gitId":"ChryslineLim"},"content":"        for (int i \u003d 0; i \u003c characteristicsArr.length; i++) {","lastModifiedDate":"2022-10-19"},{"lineNumber":78,"author":{"gitId":"ChryslineLim"},"content":"            sb.append(characteristicsArr[i])","lastModifiedDate":"2022-10-19"},{"lineNumber":79,"author":{"gitId":"ChryslineLim"},"content":"                    .append(\"; \");","lastModifiedDate":"2022-10-19"},{"lineNumber":80,"author":{"gitId":"ChryslineLim"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":81,"author":{"gitId":"ChryslineLim"},"content":"        // remove last \"; \" as we don\u0027t want it to be repeatedly appended","lastModifiedDate":"2022-10-19"},{"lineNumber":82,"author":{"gitId":"ChryslineLim"},"content":"        // as we store the string and retrieve it repeatedly","lastModifiedDate":"2022-10-19"},{"lineNumber":83,"author":{"gitId":"ChryslineLim"},"content":"        return sb.substring(0, sb.length() - 2);","lastModifiedDate":"2022-10-19"},{"lineNumber":84,"author":{"gitId":"ChryslineLim"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":85,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":86,"author":{"gitId":"ChryslineLim"},"content":"    @Override","lastModifiedDate":"2022-10-19"},{"lineNumber":87,"author":{"gitId":"ChryslineLim"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-19"},{"lineNumber":88,"author":{"gitId":"ChryslineLim"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-19"},{"lineNumber":89,"author":{"gitId":"ChryslineLim"},"content":"                || (other instanceof Characteristics // instanceof handles nulls","lastModifiedDate":"2022-10-19"},{"lineNumber":90,"author":{"gitId":"ChryslineLim"},"content":"                \u0026\u0026 Arrays.equals(characteristicsArr, ((Characteristics) other).characteristicsArr)); // state check","lastModifiedDate":"2022-10-19"},{"lineNumber":91,"author":{"gitId":"ChryslineLim"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":92,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":93,"author":{"gitId":"ChryslineLim"},"content":"    @Override","lastModifiedDate":"2022-10-19"},{"lineNumber":94,"author":{"gitId":"ChryslineLim"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-19"},{"lineNumber":95,"author":{"gitId":"ChryslineLim"},"content":"        return characteristicsArr.hashCode();","lastModifiedDate":"2022-10-19"},{"lineNumber":96,"author":{"gitId":"ChryslineLim"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":97,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":98,"author":{"gitId":"ChryslineLim"},"content":"}","lastModifiedDate":"2022-10-19"}],"authorContributionMap":{"zsiggg":18,"ChryslineLim":80}},{"path":"src/main/java/seedu/address/model/person/AbstractFilterBuyerPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chngchngchng"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-18"},{"lineNumber":2,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":3,"author":{"gitId":"chngchngchng"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-18"},{"lineNumber":4,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":5,"author":{"gitId":"chngchngchng"},"content":"/**","lastModifiedDate":"2022-10-18"},{"lineNumber":6,"author":{"gitId":"chngchngchng"},"content":" * An abstract class for predicates within the FilterBuyers method.","lastModifiedDate":"2022-10-18"},{"lineNumber":7,"author":{"gitId":"chngchngchng"},"content":" * Since there are three possible ways that a {@code FilterBuyersCommand}  can be executed,","lastModifiedDate":"2022-10-18"},{"lineNumber":8,"author":{"gitId":"chngchngchng"},"content":" * we need to create an abstract class that can be passed into the {@code FilterBuyersCommand} constructor,","lastModifiedDate":"2022-10-18"},{"lineNumber":9,"author":{"gitId":"chngchngchng"},"content":" * after which each individual predicate\u0027s behaviour is determined through polymorphism.","lastModifiedDate":"2022-10-18"},{"lineNumber":10,"author":{"gitId":"chngchngchng"},"content":" */","lastModifiedDate":"2022-10-18"},{"lineNumber":11,"author":{"gitId":"chngchngchng"},"content":"public abstract class AbstractFilterBuyerPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2022-10-18"},{"lineNumber":12,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":13,"author":{"gitId":"chngchngchng"},"content":"    @Override","lastModifiedDate":"2022-10-18"},{"lineNumber":14,"author":{"gitId":"chngchngchng"},"content":"    public abstract boolean test(Person person);","lastModifiedDate":"2022-10-18"},{"lineNumber":15,"author":{"gitId":"chngchngchng"},"content":"}","lastModifiedDate":"2022-10-18"}],"authorContributionMap":{"chngchngchng":15}},{"path":"src/main/java/seedu/address/model/person/FilterBuyerByCharacteristicsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chngchngchng"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-18"},{"lineNumber":2,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":3,"author":{"gitId":"chngchngchng"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-18"},{"lineNumber":4,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":5,"author":{"gitId":"ChryslineLim"},"content":"import seedu.address.model.characteristics.Characteristics;","lastModifiedDate":"2022-10-19"},{"lineNumber":6,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":7,"author":{"gitId":"chngchngchng"},"content":"/**","lastModifiedDate":"2022-10-18"},{"lineNumber":8,"author":{"gitId":"chngchngchng"},"content":" * Tests that a given {@code Person}\u0027s {@code DesiredCharacteristics} contains the given characteristic.","lastModifiedDate":"2022-10-18"},{"lineNumber":9,"author":{"gitId":"chngchngchng"},"content":" */","lastModifiedDate":"2022-10-18"},{"lineNumber":10,"author":{"gitId":"chngchngchng"},"content":"public class FilterBuyerByCharacteristicsPredicate extends AbstractFilterBuyerPredicate {","lastModifiedDate":"2022-10-18"},{"lineNumber":11,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":12,"author":{"gitId":"zsiggg"},"content":"    private final Characteristics givenCharacteristics;","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":14,"author":{"gitId":"chngchngchng"},"content":"    /**","lastModifiedDate":"2022-10-18"},{"lineNumber":15,"author":{"gitId":"zsiggg"},"content":"     * Standard constructor for the predicate.","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"chngchngchng"},"content":"     */","lastModifiedDate":"2022-10-18"},{"lineNumber":17,"author":{"gitId":"zsiggg"},"content":"    public FilterBuyerByCharacteristicsPredicate(Characteristics characteristics) {","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"chngchngchng"},"content":"        requireNonNull(characteristics);","lastModifiedDate":"2022-10-18"},{"lineNumber":19,"author":{"gitId":"zsiggg"},"content":"        this.givenCharacteristics \u003d characteristics;","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"chngchngchng"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":21,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":22,"author":{"gitId":"chngchngchng"},"content":"    @Override","lastModifiedDate":"2022-10-18"},{"lineNumber":23,"author":{"gitId":"chngchngchng"},"content":"    public boolean test(Person p) {","lastModifiedDate":"2022-10-18"},{"lineNumber":24,"author":{"gitId":"chngchngchng"},"content":"        // N.B.: Returns true if the target person does not have a DesiredCharacteristics object in their attributes.","lastModifiedDate":"2022-10-18"},{"lineNumber":25,"author":{"gitId":"chngchngchng"},"content":"        if (p.getDesiredCharacteristics().isEmpty()) {","lastModifiedDate":"2022-10-18"},{"lineNumber":26,"author":{"gitId":"chngchngchng"},"content":"            return true;","lastModifiedDate":"2022-10-18"},{"lineNumber":27,"author":{"gitId":"chngchngchng"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":28,"author":{"gitId":"zsiggg"},"content":"        return p.getDesiredCharacteristics().get().containsAnyGivenCharacteristics(givenCharacteristics);","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"chngchngchng"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":30,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":31,"author":{"gitId":"chngchngchng"},"content":"    @Override","lastModifiedDate":"2022-10-18"},{"lineNumber":32,"author":{"gitId":"chngchngchng"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-18"},{"lineNumber":33,"author":{"gitId":"chngchngchng"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-18"},{"lineNumber":34,"author":{"gitId":"chngchngchng"},"content":"                || (other instanceof FilterBuyerByCharacteristicsPredicate // instanceof handles nulls","lastModifiedDate":"2022-10-18"},{"lineNumber":35,"author":{"gitId":"zsiggg"},"content":"                \u0026\u0026 givenCharacteristics.equals((","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"chngchngchng"},"content":"                        (FilterBuyerByCharacteristicsPredicate) other).givenCharacteristics)); // state check","lastModifiedDate":"2022-10-18"},{"lineNumber":37,"author":{"gitId":"chngchngchng"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":38,"author":{"gitId":"chngchngchng"},"content":"}","lastModifiedDate":"2022-10-18"}],"authorContributionMap":{"zsiggg":6,"chngchngchng":31,"ChryslineLim":1}},{"path":"src/main/java/seedu/address/model/person/FilterBuyerByPricePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chngchngchng"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-18"},{"lineNumber":2,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":3,"author":{"gitId":"chngchngchng"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-18"},{"lineNumber":4,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":5,"author":{"gitId":"chngchngchng"},"content":"import seedu.address.model.property.Price;","lastModifiedDate":"2022-10-18"},{"lineNumber":6,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":7,"author":{"gitId":"chngchngchng"},"content":"/**","lastModifiedDate":"2022-10-18"},{"lineNumber":8,"author":{"gitId":"chngchngchng"},"content":" * Tests that a {@code Person}\u0027s {@code PriceRange} contains the given price value.","lastModifiedDate":"2022-10-18"},{"lineNumber":9,"author":{"gitId":"chngchngchng"},"content":" */","lastModifiedDate":"2022-10-18"},{"lineNumber":10,"author":{"gitId":"chngchngchng"},"content":"public class FilterBuyerByPricePredicate extends AbstractFilterBuyerPredicate {","lastModifiedDate":"2022-10-18"},{"lineNumber":11,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":12,"author":{"gitId":"chngchngchng"},"content":"    private final Price price;","lastModifiedDate":"2022-10-18"},{"lineNumber":13,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":14,"author":{"gitId":"chngchngchng"},"content":"    /**","lastModifiedDate":"2022-10-18"},{"lineNumber":15,"author":{"gitId":"ChryslineLim"},"content":"     * Standard constructor for the predicate.","lastModifiedDate":"2022-10-19"},{"lineNumber":16,"author":{"gitId":"chngchngchng"},"content":"     */","lastModifiedDate":"2022-10-18"},{"lineNumber":17,"author":{"gitId":"ChryslineLim"},"content":"    public FilterBuyerByPricePredicate(Price price) {","lastModifiedDate":"2022-10-19"},{"lineNumber":18,"author":{"gitId":"ChryslineLim"},"content":"        requireNonNull(price);","lastModifiedDate":"2022-10-19"},{"lineNumber":19,"author":{"gitId":"ChryslineLim"},"content":"        this.price \u003d price;","lastModifiedDate":"2022-10-19"},{"lineNumber":20,"author":{"gitId":"chngchngchng"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":21,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":22,"author":{"gitId":"chngchngchng"},"content":"    @Override","lastModifiedDate":"2022-10-18"},{"lineNumber":23,"author":{"gitId":"chngchngchng"},"content":"    public boolean test(Person p) {","lastModifiedDate":"2022-10-18"},{"lineNumber":24,"author":{"gitId":"chngchngchng"},"content":"        // N.B.: Returns true if the target person does not have a PriceRange object in their attributes.","lastModifiedDate":"2022-10-18"},{"lineNumber":25,"author":{"gitId":"chngchngchng"},"content":"        if (p.getPriceRange().isEmpty()) {","lastModifiedDate":"2022-10-18"},{"lineNumber":26,"author":{"gitId":"chngchngchng"},"content":"            return true;","lastModifiedDate":"2022-10-18"},{"lineNumber":27,"author":{"gitId":"chngchngchng"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":28,"author":{"gitId":"chngchngchng"},"content":"        return p.getPriceRange().get().isWithinPriceRange(price);","lastModifiedDate":"2022-10-18"},{"lineNumber":29,"author":{"gitId":"chngchngchng"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":30,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":31,"author":{"gitId":"chngchngchng"},"content":"    @Override","lastModifiedDate":"2022-10-18"},{"lineNumber":32,"author":{"gitId":"chngchngchng"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-18"},{"lineNumber":33,"author":{"gitId":"chngchngchng"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-18"},{"lineNumber":34,"author":{"gitId":"chngchngchng"},"content":"                || (other instanceof FilterBuyerByPricePredicate // instanceof handles nulls","lastModifiedDate":"2022-10-18"},{"lineNumber":35,"author":{"gitId":"chngchngchng"},"content":"                \u0026\u0026 price.equals(((FilterBuyerByPricePredicate) other).price)); // state check","lastModifiedDate":"2022-10-18"},{"lineNumber":36,"author":{"gitId":"chngchngchng"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":37,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":38,"author":{"gitId":"chngchngchng"},"content":"}","lastModifiedDate":"2022-10-18"}],"authorContributionMap":{"chngchngchng":34,"ChryslineLim":4}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"ChryslineLim"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"zsiggg"},"content":"import seedu.address.model.address.Address;","lastModifiedDate":"2022-10-08"},{"lineNumber":9,"author":{"gitId":"ChryslineLim"},"content":"import seedu.address.model.characteristics.Characteristics;","lastModifiedDate":"2022-10-19"},{"lineNumber":10,"author":{"gitId":"ChryslineLim"},"content":"import seedu.address.model.pricerange.PriceRange;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"ChryslineLim"},"content":" * Guarantees: field values are validated, immutable.","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"ChryslineLim"},"content":" * Only priceRange and desiredCharacteristics may be null.","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"ChryslineLim"},"content":"    private final Optional\u003cPriceRange\u003e priceRange;","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"ChryslineLim"},"content":"    private final Optional\u003cCharacteristics\u003e desiredCharacteristics;","lastModifiedDate":"2022-10-19"},{"lineNumber":29,"author":{"gitId":"jchilling"},"content":"    private final Priority priority;","lastModifiedDate":"2022-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"ChryslineLim"},"content":"    public Person(Name name, Phone phone, Email email, Address address,","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"jchilling"},"content":"                  PriceRange priceRange, Characteristics characteristics, Priority priority) {","lastModifiedDate":"2022-10-19"},{"lineNumber":36,"author":{"gitId":"jchilling"},"content":"        requireAllNonNull(name, phone, email, address, priority);","lastModifiedDate":"2022-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"ChryslineLim"},"content":"        this.priceRange \u003d Optional.ofNullable(priceRange);","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"ChryslineLim"},"content":"        this.desiredCharacteristics \u003d Optional.ofNullable(characteristics);","lastModifiedDate":"2022-10-19"},{"lineNumber":43,"author":{"gitId":"jchilling"},"content":"        this.priority \u003d priority;","lastModifiedDate":"2022-10-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":62,"author":{"gitId":"ChryslineLim"},"content":"    public Optional\u003cPriceRange\u003e getPriceRange() {","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"ChryslineLim"},"content":"        return this.priceRange;","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"ChryslineLim"},"content":"    public Optional\u003cCharacteristics\u003e getDesiredCharacteristics() {","lastModifiedDate":"2022-10-19"},{"lineNumber":67,"author":{"gitId":"ChryslineLim"},"content":"        return this.desiredCharacteristics;","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"ChryslineLim"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":69,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":74,"author":{"gitId":"jchilling"},"content":"    public Priority getPriority() {","lastModifiedDate":"2022-10-19"},{"lineNumber":75,"author":{"gitId":"jchilling"},"content":"        return this.priority;","lastModifiedDate":"2022-10-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getAddress().equals(getAddress())","lastModifiedDate":"2018-08-14"},{"lineNumber":110,"author":{"gitId":"ChryslineLim"},"content":"                \u0026\u0026 otherPerson.getPriceRange().equals(getPriceRange())","lastModifiedDate":"2022-10-11"},{"lineNumber":111,"author":{"gitId":"ChryslineLim"},"content":"                \u0026\u0026 otherPerson.getDesiredCharacteristics().equals(getDesiredCharacteristics())","lastModifiedDate":"2022-10-11"},{"lineNumber":112,"author":{"gitId":"jchilling"},"content":"                \u0026\u0026 otherPerson.getPriority().equals(getPriority());","lastModifiedDate":"2022-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":118,"author":{"gitId":"jchilling"},"content":"        return Objects.hash(name, phone, email, address, priority);","lastModifiedDate":"2022-10-19"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":130,"author":{"gitId":"ChryslineLim"},"content":"                .append(getAddress())","lastModifiedDate":"2022-10-11"},{"lineNumber":131,"author":{"gitId":"ChryslineLim"},"content":"                .append(\"; Budget: \")","lastModifiedDate":"2022-10-11"},{"lineNumber":132,"author":{"gitId":"ChryslineLim"},"content":"                .append(getPriceRange().map(PriceRange::toString).orElse(\"Budget: Not Specified\"))","lastModifiedDate":"2022-10-12"},{"lineNumber":133,"author":{"gitId":"ChryslineLim"},"content":"                .append(\"; Desired Characteristics: \")","lastModifiedDate":"2022-10-12"},{"lineNumber":134,"author":{"gitId":"ChryslineLim"},"content":"                .append(getDesiredCharacteristics()","lastModifiedDate":"2022-10-12"},{"lineNumber":135,"author":{"gitId":"ChryslineLim"},"content":"                        .map(Characteristics::toString)","lastModifiedDate":"2022-10-19"},{"lineNumber":136,"author":{"gitId":"ChryslineLim"},"content":"                        .orElse(\"Not Specified\"));","lastModifiedDate":"2022-10-19"},{"lineNumber":137,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":138,"author":{"gitId":"jchilling"},"content":"        builder.append(\" Priority: \")","lastModifiedDate":"2022-10-19"},{"lineNumber":139,"author":{"gitId":"jchilling"},"content":"                .append(getPriority());","lastModifiedDate":"2022-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"zsiggg":1,"jchilling":11,"-":107,"ChryslineLim":25}},{"path":"src/main/java/seedu/address/model/person/Priority.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jchilling"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-19"},{"lineNumber":2,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":3,"author":{"gitId":"jchilling"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-19"},{"lineNumber":4,"author":{"gitId":"jchilling"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-19"},{"lineNumber":5,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":6,"author":{"gitId":"jchilling"},"content":"/**","lastModifiedDate":"2022-10-19"},{"lineNumber":7,"author":{"gitId":"jchilling"},"content":" * Represents a Priority in the address book.","lastModifiedDate":"2022-10-19"},{"lineNumber":8,"author":{"gitId":"jchilling"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidPriority(String)}","lastModifiedDate":"2022-10-19"},{"lineNumber":9,"author":{"gitId":"jchilling"},"content":" */","lastModifiedDate":"2022-10-19"},{"lineNumber":10,"author":{"gitId":"jchilling"},"content":"public class Priority {","lastModifiedDate":"2022-10-19"},{"lineNumber":11,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":12,"author":{"gitId":"jchilling"},"content":"    private enum PriorityName {","lastModifiedDate":"2022-10-19"},{"lineNumber":13,"author":{"gitId":"jchilling"},"content":"        HIGH, NORMAL, LOW;","lastModifiedDate":"2022-10-19"},{"lineNumber":14,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":15,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":16,"author":{"gitId":"jchilling"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Priority should be high, low or normal.\";","lastModifiedDate":"2022-10-19"},{"lineNumber":17,"author":{"gitId":"jchilling"},"content":"    public static final String VALIDATION_HIGH \u003d \"HIGH\";","lastModifiedDate":"2022-10-19"},{"lineNumber":18,"author":{"gitId":"jchilling"},"content":"    public static final String VALIDATION_NORMAL \u003d \"NORMAL\";","lastModifiedDate":"2022-10-19"},{"lineNumber":19,"author":{"gitId":"jchilling"},"content":"    public static final String VALIDATION_LOW \u003d \"LOW\";","lastModifiedDate":"2022-10-19"},{"lineNumber":20,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":21,"author":{"gitId":"jchilling"},"content":"    public final PriorityName specifiedPriority;","lastModifiedDate":"2022-10-19"},{"lineNumber":22,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":23,"author":{"gitId":"jchilling"},"content":"    /**","lastModifiedDate":"2022-10-19"},{"lineNumber":24,"author":{"gitId":"jchilling"},"content":"     * Constructs a {@code Priority}.","lastModifiedDate":"2022-10-19"},{"lineNumber":25,"author":{"gitId":"jchilling"},"content":"     *","lastModifiedDate":"2022-10-19"},{"lineNumber":26,"author":{"gitId":"jchilling"},"content":"     * @param specifiedPriority A valid priority.","lastModifiedDate":"2022-10-19"},{"lineNumber":27,"author":{"gitId":"jchilling"},"content":"     */","lastModifiedDate":"2022-10-19"},{"lineNumber":28,"author":{"gitId":"jchilling"},"content":"    public Priority(String specifiedPriority) {","lastModifiedDate":"2022-10-19"},{"lineNumber":29,"author":{"gitId":"jchilling"},"content":"        requireNonNull(specifiedPriority);","lastModifiedDate":"2022-10-19"},{"lineNumber":30,"author":{"gitId":"jchilling"},"content":"        specifiedPriority \u003d specifiedPriority.toUpperCase();","lastModifiedDate":"2022-10-19"},{"lineNumber":31,"author":{"gitId":"jchilling"},"content":"        checkArgument(isValidPriority(specifiedPriority), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-19"},{"lineNumber":32,"author":{"gitId":"jchilling"},"content":"        this.specifiedPriority \u003d PriorityName.valueOf(specifiedPriority);","lastModifiedDate":"2022-10-19"},{"lineNumber":33,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":34,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":35,"author":{"gitId":"jchilling"},"content":"    /**","lastModifiedDate":"2022-10-19"},{"lineNumber":36,"author":{"gitId":"jchilling"},"content":"     * Returns true if a given string is a valid priority.","lastModifiedDate":"2022-10-19"},{"lineNumber":37,"author":{"gitId":"jchilling"},"content":"     */","lastModifiedDate":"2022-10-19"},{"lineNumber":38,"author":{"gitId":"jchilling"},"content":"    public static boolean isValidPriority(String test) {","lastModifiedDate":"2022-10-19"},{"lineNumber":39,"author":{"gitId":"jchilling"},"content":"        return test.equals(VALIDATION_HIGH)","lastModifiedDate":"2022-10-19"},{"lineNumber":40,"author":{"gitId":"jchilling"},"content":"                || test.equals(VALIDATION_NORMAL)","lastModifiedDate":"2022-10-19"},{"lineNumber":41,"author":{"gitId":"jchilling"},"content":"                || test.equals(VALIDATION_LOW);","lastModifiedDate":"2022-10-19"},{"lineNumber":42,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":43,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":44,"author":{"gitId":"jchilling"},"content":"    @Override","lastModifiedDate":"2022-10-19"},{"lineNumber":45,"author":{"gitId":"jchilling"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-19"},{"lineNumber":46,"author":{"gitId":"jchilling"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-19"},{"lineNumber":47,"author":{"gitId":"jchilling"},"content":"                || (other instanceof Priority // instanceof handles nulls","lastModifiedDate":"2022-10-19"},{"lineNumber":48,"author":{"gitId":"jchilling"},"content":"                \u0026\u0026 specifiedPriority.equals(((Priority) other).specifiedPriority)); // state check","lastModifiedDate":"2022-10-19"},{"lineNumber":49,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":50,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":51,"author":{"gitId":"jchilling"},"content":"    @Override","lastModifiedDate":"2022-10-19"},{"lineNumber":52,"author":{"gitId":"jchilling"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-19"},{"lineNumber":53,"author":{"gitId":"jchilling"},"content":"        return specifiedPriority.hashCode();","lastModifiedDate":"2022-10-19"},{"lineNumber":54,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":55,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":56,"author":{"gitId":"jchilling"},"content":"    /**","lastModifiedDate":"2022-10-19"},{"lineNumber":57,"author":{"gitId":"jchilling"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2022-10-19"},{"lineNumber":58,"author":{"gitId":"jchilling"},"content":"     */","lastModifiedDate":"2022-10-19"},{"lineNumber":59,"author":{"gitId":"jchilling"},"content":"    public String toString() {","lastModifiedDate":"2022-10-19"},{"lineNumber":60,"author":{"gitId":"jchilling"},"content":"        //return \u0027[\u0027 + specifiedPriority.toString() + \u0027]\u0027;","lastModifiedDate":"2022-10-19"},{"lineNumber":61,"author":{"gitId":"jchilling"},"content":"        return specifiedPriority.toString();","lastModifiedDate":"2022-10-19"},{"lineNumber":62,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":63,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":64,"author":{"gitId":"jchilling"},"content":"}","lastModifiedDate":"2022-10-19"}],"authorContributionMap":{"jchilling":64}},{"path":"src/main/java/seedu/address/model/person/exceptions/DuplicatePersonException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person.exceptions;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"jchilling"},"content":" * Signals that the operation will result in duplicate Persons","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"jchilling"},"content":" * (Persons are considered duplicates if they have the same identity).","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class DuplicatePersonException extends RuntimeException {","lastModifiedDate":"2018-08-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public DuplicatePersonException() {","lastModifiedDate":"2017-06-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"        super(\"Operation would result in duplicate persons\");","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"jchilling":2,"-":9}},{"path":"src/main/java/seedu/address/model/pricerange/PriceRange.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChryslineLim"},"content":"package seedu.address.model.pricerange;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"chngchngchng"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"chngchngchng"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"ChryslineLim"},"content":"import java.text.DecimalFormat;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"chngchngchng"},"content":"import seedu.address.model.property.Price;","lastModifiedDate":"2022-10-18"},{"lineNumber":9,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":10,"author":{"gitId":"chngchngchng"},"content":"/**","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"chngchngchng"},"content":" * Represents a Price Range for a property that a buyer can accept.","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"chngchngchng"},"content":" * Guarantees: immutable; is valid as declared.","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"chngchngchng"},"content":" */","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"chngchngchng"},"content":"public class PriceRange {","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"chngchngchng"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Price ranges must be specified in the form: \"","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"ChryslineLim"},"content":"            + \"\u003clow\u003e - \u003chigh\u003e, where \u003clow\u003e and \u003chigh\u003e are non-negative numbers within the maximum range of a Double.\";","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"chngchngchng"},"content":"    /*","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"chngchngchng"},"content":"     * The first part of the range must be digits, followed by a hyphen (whitespaces optional),","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"chngchngchng"},"content":"     * and then followed by more digits. A decimal / floating point value is also valid.","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"chngchngchng"},"content":"     * This helps prevent \"123a-123b\" from being considered a valid input.","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"chngchngchng"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"chngchngchng"},"content":"    public static final String VALIDATION_REGEX \u003d \"[0-9]*\\\\.?[0-9]+\\\\s?-\\\\s?[0-9]*\\\\.?[0-9]+\";","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"chngchngchng"},"content":"    public final Price low;","lastModifiedDate":"2022-10-18"},{"lineNumber":26,"author":{"gitId":"chngchngchng"},"content":"    public final Price high;","lastModifiedDate":"2022-10-18"},{"lineNumber":27,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"chngchngchng"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"chngchngchng"},"content":"     * Constructs a {@code PriceRange}.","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"chngchngchng"},"content":"     * Guarantees: Immutable, is valid as declared in isValidPriceRange.","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"chngchngchng"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"chngchngchng"},"content":"    public PriceRange(String priceRange) {","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"chngchngchng"},"content":"        requireNonNull(priceRange);","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"chngchngchng"},"content":"        checkArgument(isValidPriceRange(priceRange), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"chngchngchng"},"content":"        String[] rangeValues \u003d priceRange.split(\"-\");","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"chngchngchng"},"content":"        this.low \u003d new Price(rangeValues[0].trim());","lastModifiedDate":"2022-10-18"},{"lineNumber":38,"author":{"gitId":"chngchngchng"},"content":"        this.high \u003d new Price(rangeValues[1].trim());","lastModifiedDate":"2022-10-18"},{"lineNumber":39,"author":{"gitId":"chngchngchng"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"chngchngchng"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"chngchngchng"},"content":"     * Returns true if a given string is a valid price range in format.","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"chngchngchng"},"content":"     * Left value of the price range must be smaller than the right value of the price range.","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"ChryslineLim"},"content":"     * Both values must be non-negative and within the maximum range of a Float.","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"chngchngchng"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"chngchngchng"},"content":"    public static boolean isValidPriceRange(String test) {","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"chngchngchng"},"content":"        boolean isValid \u003d test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"ChryslineLim"},"content":"        // to prevent out of bounds error below","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"ChryslineLim"},"content":"        if (!isValid) {","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"ChryslineLim"},"content":"            return false;","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"ChryslineLim"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"chngchngchng"},"content":"        String[] rangeValues \u003d test.split(\"-\");","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"ChryslineLim"},"content":"        double leftValue \u003d Double.parseDouble(rangeValues[0].trim());","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"ChryslineLim"},"content":"        boolean isLeftValueValid \u003d leftValue \u003e\u003d 0 \u0026\u0026 leftValue \u003c Double.POSITIVE_INFINITY;","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"ChryslineLim"},"content":"        double rightValue \u003d Double.parseDouble(rangeValues[1].trim());","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"ChryslineLim"},"content":"        boolean isRightValueValid \u003d rightValue \u003e\u003d 0 \u0026\u0026 rightValue \u003c Double.POSITIVE_INFINITY;","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":61,"author":{"gitId":"chngchngchng"},"content":"        return isLeftValueValid","lastModifiedDate":"2022-10-18"},{"lineNumber":62,"author":{"gitId":"ChryslineLim"},"content":"                \u0026\u0026 isRightValueValid","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"ChryslineLim"},"content":"                \u0026\u0026 (leftValue - rightValue \u003c\u003d 0);","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"chngchngchng"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":65,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":66,"author":{"gitId":"chngchngchng"},"content":"    /*","lastModifiedDate":"2022-10-05"},{"lineNumber":67,"author":{"gitId":"ChryslineLim"},"content":"    Checks if a given Price is within the PriceRange.","lastModifiedDate":"2022-10-19"},{"lineNumber":68,"author":{"gitId":"chngchngchng"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":69,"author":{"gitId":"chngchngchng"},"content":"    public boolean isWithinPriceRange(Price p) {","lastModifiedDate":"2022-10-18"},{"lineNumber":70,"author":{"gitId":"ChryslineLim"},"content":"        return (low.isSmallerThanOrEqual(p) \u0026\u0026 high.isGreaterThanOrEqual(p));","lastModifiedDate":"2022-10-20"},{"lineNumber":71,"author":{"gitId":"chngchngchng"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":72,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":73,"author":{"gitId":"chngchngchng"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":74,"author":{"gitId":"chngchngchng"},"content":"    public String toString() {","lastModifiedDate":"2022-10-05"},{"lineNumber":75,"author":{"gitId":"chngchngchng"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-10-05"},{"lineNumber":76,"author":{"gitId":"ChryslineLim"},"content":"        // to avoid floats being saved to storage in scientific notation","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"ChryslineLim"},"content":"        // and causing parsing bugs when being converted back into a float","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"ChryslineLim"},"content":"        DecimalFormat df \u003d new DecimalFormat(\"#\");","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"ChryslineLim"},"content":"        df.setMaximumFractionDigits(0);","lastModifiedDate":"2022-10-12"},{"lineNumber":80,"author":{"gitId":"chngchngchng"},"content":"        sb.append(df.format(low.getNumericalValue()));","lastModifiedDate":"2022-10-18"},{"lineNumber":81,"author":{"gitId":"chngchngchng"},"content":"        sb.append(\" - \");","lastModifiedDate":"2022-10-05"},{"lineNumber":82,"author":{"gitId":"chngchngchng"},"content":"        sb.append(df.format(high.getNumericalValue()));","lastModifiedDate":"2022-10-18"},{"lineNumber":83,"author":{"gitId":"chngchngchng"},"content":"        return sb.toString();","lastModifiedDate":"2022-10-05"},{"lineNumber":84,"author":{"gitId":"chngchngchng"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":85,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":86,"author":{"gitId":"chngchngchng"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":87,"author":{"gitId":"chngchngchng"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-05"},{"lineNumber":88,"author":{"gitId":"chngchngchng"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-05"},{"lineNumber":89,"author":{"gitId":"chngchngchng"},"content":"                || (other instanceof PriceRange // instanceof handles nulls","lastModifiedDate":"2022-10-05"},{"lineNumber":90,"author":{"gitId":"ChryslineLim"},"content":"                \u0026\u0026 this.toString().equals(((PriceRange) other).toString())); // state check","lastModifiedDate":"2022-10-11"},{"lineNumber":91,"author":{"gitId":"chngchngchng"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":92,"author":{"gitId":"chngchngchng"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"chngchngchng":69,"ChryslineLim":23}},{"path":"src/main/java/seedu/address/model/property/AbstractFilterPropsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChryslineLim"},"content":"package seedu.address.model.property;","lastModifiedDate":"2022-10-19"},{"lineNumber":2,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":3,"author":{"gitId":"ChryslineLim"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-19"},{"lineNumber":4,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":5,"author":{"gitId":"ChryslineLim"},"content":"/**","lastModifiedDate":"2022-10-19"},{"lineNumber":6,"author":{"gitId":"ChryslineLim"},"content":" * An abstract class for predicates within the FilterProps method.","lastModifiedDate":"2022-10-19"},{"lineNumber":7,"author":{"gitId":"ChryslineLim"},"content":" * Since there are three possible ways that a {@code FilterPropsCommand} can be executed,","lastModifiedDate":"2022-10-19"},{"lineNumber":8,"author":{"gitId":"ChryslineLim"},"content":" * we need to create an abstract class that can be passed into the {@code FilterPropsCommand} constructor,","lastModifiedDate":"2022-10-19"},{"lineNumber":9,"author":{"gitId":"ChryslineLim"},"content":" * after which each individual predicate\u0027s behaviour is determined through polymorphism.","lastModifiedDate":"2022-10-19"},{"lineNumber":10,"author":{"gitId":"ChryslineLim"},"content":" */","lastModifiedDate":"2022-10-19"},{"lineNumber":11,"author":{"gitId":"ChryslineLim"},"content":"public abstract class AbstractFilterPropsPredicate implements Predicate\u003cProperty\u003e {","lastModifiedDate":"2022-10-19"},{"lineNumber":12,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":13,"author":{"gitId":"ChryslineLim"},"content":"}","lastModifiedDate":"2022-10-19"}],"authorContributionMap":{"ChryslineLim":13}},{"path":"src/main/java/seedu/address/model/property/Description.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jchilling"},"content":"package seedu.address.model.property;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"jchilling"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"jchilling"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"jchilling"},"content":"/**","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"jchilling"},"content":" * Represents a Property\u0027s description in the address book.","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"jchilling"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDescription(String)}","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"jchilling"},"content":" */","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"jchilling"},"content":"public class Description {","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"jchilling"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Descriptions can take any values, and it should not be blank\";","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"jchilling"},"content":"    /*","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"jchilling"},"content":"     * The first character of the description must not be a whitespace,","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"jchilling"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"jchilling"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"jchilling"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"jchilling"},"content":"    public final String value;","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"jchilling"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"jchilling"},"content":"     * Constructs an {@code Description}.","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"jchilling"},"content":"     *","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"jchilling"},"content":"     * @param description A valid description.","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"jchilling"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"jchilling"},"content":"    public Description(String description) {","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"jchilling"},"content":"        requireNonNull(description);","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"jchilling"},"content":"        checkArgument(isValidDescription(description), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"jchilling"},"content":"        value \u003d description;","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"jchilling"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"jchilling"},"content":"     * Returns true if a given string is a valid description.","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"jchilling"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"jchilling"},"content":"    public static boolean isValidDescription(String test) {","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"jchilling"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"jchilling"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"jchilling"},"content":"    public String toString() {","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"jchilling"},"content":"        return value;","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":44,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":45,"author":{"gitId":"jchilling"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"jchilling"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-04"},{"lineNumber":47,"author":{"gitId":"jchilling"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-04"},{"lineNumber":48,"author":{"gitId":"jchilling"},"content":"                || (other instanceof Description // instanceof handles nulls","lastModifiedDate":"2022-10-04"},{"lineNumber":49,"author":{"gitId":"jchilling"},"content":"                \u0026\u0026 value.equals(((Description) other).value)); // state check","lastModifiedDate":"2022-10-04"},{"lineNumber":50,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":51,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":52,"author":{"gitId":"jchilling"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":53,"author":{"gitId":"jchilling"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-04"},{"lineNumber":54,"author":{"gitId":"jchilling"},"content":"        return value.hashCode();","lastModifiedDate":"2022-10-04"},{"lineNumber":55,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":56,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":57,"author":{"gitId":"jchilling"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"jchilling":57}},{"path":"src/main/java/seedu/address/model/property/FilterPropsByCharacteristicsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zsiggg"},"content":"package seedu.address.model.property;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"zsiggg"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"zsiggg"},"content":"import seedu.address.model.characteristics.Characteristics;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"zsiggg"},"content":"/**","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"zsiggg"},"content":" * Tests that a given {@code Property}\u0027s {@code DesiredCharacteristics} contains the given characteristic.","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"zsiggg"},"content":" */","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"zsiggg"},"content":"public class FilterPropsByCharacteristicsPredicate extends AbstractFilterPropsPredicate {","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"zsiggg"},"content":"    private final Characteristics givenCharacteristics;","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"zsiggg"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"zsiggg"},"content":"     * Standard constructor for the predicate.","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"zsiggg"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"zsiggg"},"content":"    public FilterPropsByCharacteristicsPredicate(Characteristics characteristics) {","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"zsiggg"},"content":"        requireNonNull(characteristics);","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"zsiggg"},"content":"        this.givenCharacteristics \u003d characteristics;","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"zsiggg"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"zsiggg"},"content":"    public boolean test(Property p) {","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"zsiggg"},"content":"        // N.B.: Returns true if the target property does not have a Characteristics object in their attributes.","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"zsiggg"},"content":"        if (p.getCharacteristics().isEmpty()) {","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"zsiggg"},"content":"            return true;","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"zsiggg"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"zsiggg"},"content":"        return p.getCharacteristics().get().containsAnyGivenCharacteristics(givenCharacteristics);","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"zsiggg"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"zsiggg"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"zsiggg"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"zsiggg"},"content":"                || (other instanceof FilterPropsByCharacteristicsPredicate // instanceof handles nulls","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"zsiggg"},"content":"                \u0026\u0026 givenCharacteristics.equals((","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"zsiggg"},"content":"                        (FilterPropsByCharacteristicsPredicate) other).givenCharacteristics)); // state check","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"zsiggg"},"content":"}","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"zsiggg":38}},{"path":"src/main/java/seedu/address/model/property/FilterPropsByPricePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChryslineLim"},"content":"package seedu.address.model.property;","lastModifiedDate":"2022-10-19"},{"lineNumber":2,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":3,"author":{"gitId":"ChryslineLim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-19"},{"lineNumber":4,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":5,"author":{"gitId":"ChryslineLim"},"content":"import seedu.address.model.pricerange.PriceRange;","lastModifiedDate":"2022-10-19"},{"lineNumber":6,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":7,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":8,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":9,"author":{"gitId":"ChryslineLim"},"content":"/**","lastModifiedDate":"2022-10-19"},{"lineNumber":10,"author":{"gitId":"ChryslineLim"},"content":" * Tests that a {@code Property}\u0027s {@code Price} is within the given price range.","lastModifiedDate":"2022-10-19"},{"lineNumber":11,"author":{"gitId":"ChryslineLim"},"content":" */","lastModifiedDate":"2022-10-19"},{"lineNumber":12,"author":{"gitId":"ChryslineLim"},"content":"public class FilterPropsByPricePredicate extends AbstractFilterPropsPredicate {","lastModifiedDate":"2022-10-19"},{"lineNumber":13,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":14,"author":{"gitId":"ChryslineLim"},"content":"    private final PriceRange priceRange;","lastModifiedDate":"2022-10-19"},{"lineNumber":15,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":16,"author":{"gitId":"ChryslineLim"},"content":"    /**","lastModifiedDate":"2022-10-19"},{"lineNumber":17,"author":{"gitId":"ChryslineLim"},"content":"     * Standard constructor for the predicate.","lastModifiedDate":"2022-10-19"},{"lineNumber":18,"author":{"gitId":"ChryslineLim"},"content":"     */","lastModifiedDate":"2022-10-19"},{"lineNumber":19,"author":{"gitId":"ChryslineLim"},"content":"    public FilterPropsByPricePredicate(PriceRange priceRange) {","lastModifiedDate":"2022-10-19"},{"lineNumber":20,"author":{"gitId":"ChryslineLim"},"content":"        requireNonNull(priceRange);","lastModifiedDate":"2022-10-19"},{"lineNumber":21,"author":{"gitId":"ChryslineLim"},"content":"        this.priceRange \u003d priceRange;","lastModifiedDate":"2022-10-19"},{"lineNumber":22,"author":{"gitId":"ChryslineLim"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":23,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":24,"author":{"gitId":"ChryslineLim"},"content":"    @Override","lastModifiedDate":"2022-10-19"},{"lineNumber":25,"author":{"gitId":"ChryslineLim"},"content":"    public boolean test(Property p) {","lastModifiedDate":"2022-10-19"},{"lineNumber":26,"author":{"gitId":"ChryslineLim"},"content":"        return priceRange.isWithinPriceRange(p.getPrice());","lastModifiedDate":"2022-10-19"},{"lineNumber":27,"author":{"gitId":"ChryslineLim"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":28,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":29,"author":{"gitId":"ChryslineLim"},"content":"    @Override","lastModifiedDate":"2022-10-19"},{"lineNumber":30,"author":{"gitId":"ChryslineLim"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-19"},{"lineNumber":31,"author":{"gitId":"ChryslineLim"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-19"},{"lineNumber":32,"author":{"gitId":"ChryslineLim"},"content":"                || (other instanceof FilterPropsByPricePredicate // instanceof handles nulls","lastModifiedDate":"2022-10-19"},{"lineNumber":33,"author":{"gitId":"ChryslineLim"},"content":"                \u0026\u0026 priceRange.equals(((FilterPropsByPricePredicate) other).priceRange)); // state check","lastModifiedDate":"2022-10-19"},{"lineNumber":34,"author":{"gitId":"ChryslineLim"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":35,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":36,"author":{"gitId":"ChryslineLim"},"content":"}","lastModifiedDate":"2022-10-19"}],"authorContributionMap":{"ChryslineLim":36}},{"path":"src/main/java/seedu/address/model/property/Owner.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"riccqi"},"content":"package seedu.address.model.property;","lastModifiedDate":"2022-10-19"},{"lineNumber":2,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":3,"author":{"gitId":"riccqi"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-19"},{"lineNumber":4,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":5,"author":{"gitId":"riccqi"},"content":"import java.util.Objects;","lastModifiedDate":"2022-10-19"},{"lineNumber":6,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":7,"author":{"gitId":"riccqi"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-10-19"},{"lineNumber":8,"author":{"gitId":"riccqi"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-10-19"},{"lineNumber":9,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":10,"author":{"gitId":"riccqi"},"content":"/**","lastModifiedDate":"2022-10-19"},{"lineNumber":11,"author":{"gitId":"riccqi"},"content":" * Encapsulates all attributes for a particular Owner.","lastModifiedDate":"2022-10-19"},{"lineNumber":12,"author":{"gitId":"riccqi"},"content":" */","lastModifiedDate":"2022-10-19"},{"lineNumber":13,"author":{"gitId":"riccqi"},"content":"public class Owner {","lastModifiedDate":"2022-10-19"},{"lineNumber":14,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":15,"author":{"gitId":"riccqi"},"content":"    public final Name name;","lastModifiedDate":"2022-10-19"},{"lineNumber":16,"author":{"gitId":"riccqi"},"content":"    public final Phone phone;","lastModifiedDate":"2022-10-19"},{"lineNumber":17,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":18,"author":{"gitId":"riccqi"},"content":"    /**","lastModifiedDate":"2022-10-19"},{"lineNumber":19,"author":{"gitId":"riccqi"},"content":"     * Every field must be present for an Owner to be correctly initialised.","lastModifiedDate":"2022-10-19"},{"lineNumber":20,"author":{"gitId":"riccqi"},"content":"     */","lastModifiedDate":"2022-10-19"},{"lineNumber":21,"author":{"gitId":"riccqi"},"content":"    public Owner(Name name, Phone phone) {","lastModifiedDate":"2022-10-19"},{"lineNumber":22,"author":{"gitId":"riccqi"},"content":"        requireAllNonNull(name, phone);","lastModifiedDate":"2022-10-19"},{"lineNumber":23,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":24,"author":{"gitId":"riccqi"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-10-19"},{"lineNumber":25,"author":{"gitId":"riccqi"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2022-10-19"},{"lineNumber":26,"author":{"gitId":"riccqi"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":27,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":28,"author":{"gitId":"riccqi"},"content":"    public Name getName() {","lastModifiedDate":"2022-10-19"},{"lineNumber":29,"author":{"gitId":"riccqi"},"content":"        return this.name;","lastModifiedDate":"2022-10-19"},{"lineNumber":30,"author":{"gitId":"riccqi"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":31,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":32,"author":{"gitId":"riccqi"},"content":"    public Phone getPhone() {","lastModifiedDate":"2022-10-19"},{"lineNumber":33,"author":{"gitId":"riccqi"},"content":"        return this.phone;","lastModifiedDate":"2022-10-19"},{"lineNumber":34,"author":{"gitId":"riccqi"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":35,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":36,"author":{"gitId":"riccqi"},"content":"    /**","lastModifiedDate":"2022-10-19"},{"lineNumber":37,"author":{"gitId":"riccqi"},"content":"     * Returns true if both owners have the same phone number.","lastModifiedDate":"2022-10-19"},{"lineNumber":38,"author":{"gitId":"riccqi"},"content":"     */","lastModifiedDate":"2022-10-19"},{"lineNumber":39,"author":{"gitId":"riccqi"},"content":"    @Override","lastModifiedDate":"2022-10-19"},{"lineNumber":40,"author":{"gitId":"riccqi"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-19"},{"lineNumber":41,"author":{"gitId":"riccqi"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-19"},{"lineNumber":42,"author":{"gitId":"riccqi"},"content":"            return true;","lastModifiedDate":"2022-10-19"},{"lineNumber":43,"author":{"gitId":"riccqi"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":44,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":45,"author":{"gitId":"riccqi"},"content":"        if (!(other instanceof Owner)) {","lastModifiedDate":"2022-10-19"},{"lineNumber":46,"author":{"gitId":"riccqi"},"content":"            return false;","lastModifiedDate":"2022-10-19"},{"lineNumber":47,"author":{"gitId":"riccqi"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":48,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":49,"author":{"gitId":"riccqi"},"content":"        Owner otherOwner \u003d (Owner) other;","lastModifiedDate":"2022-10-19"},{"lineNumber":50,"author":{"gitId":"riccqi"},"content":"        return otherOwner !\u003d null","lastModifiedDate":"2022-10-19"},{"lineNumber":51,"author":{"gitId":"riccqi"},"content":"                \u0026\u0026 otherOwner.getPhone().equals(this.phone);","lastModifiedDate":"2022-10-19"},{"lineNumber":52,"author":{"gitId":"riccqi"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":53,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":54,"author":{"gitId":"riccqi"},"content":"    @Override","lastModifiedDate":"2022-10-19"},{"lineNumber":55,"author":{"gitId":"riccqi"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-19"},{"lineNumber":56,"author":{"gitId":"riccqi"},"content":"        return Objects.hash(this.name, this.phone);","lastModifiedDate":"2022-10-19"},{"lineNumber":57,"author":{"gitId":"riccqi"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":58,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":59,"author":{"gitId":"riccqi"},"content":"    @Override","lastModifiedDate":"2022-10-19"},{"lineNumber":60,"author":{"gitId":"riccqi"},"content":"    public String toString() {","lastModifiedDate":"2022-10-19"},{"lineNumber":61,"author":{"gitId":"riccqi"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-10-19"},{"lineNumber":62,"author":{"gitId":"riccqi"},"content":"        sb.append(\"Owner: \")","lastModifiedDate":"2022-10-20"},{"lineNumber":63,"author":{"gitId":"riccqi"},"content":"                .append(getName())","lastModifiedDate":"2022-10-20"},{"lineNumber":64,"author":{"gitId":"riccqi"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2022-10-19"},{"lineNumber":65,"author":{"gitId":"riccqi"},"content":"                .append(getPhone());","lastModifiedDate":"2022-10-19"},{"lineNumber":66,"author":{"gitId":"riccqi"},"content":"        return sb.toString();","lastModifiedDate":"2022-10-19"},{"lineNumber":67,"author":{"gitId":"riccqi"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":68,"author":{"gitId":"riccqi"},"content":"}","lastModifiedDate":"2022-10-19"}],"authorContributionMap":{"riccqi":68}},{"path":"src/main/java/seedu/address/model/property/Price.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jchilling"},"content":"package seedu.address.model.property;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"jchilling"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"jchilling"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"jchilling"},"content":"/**","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"jchilling"},"content":" * Represents a Property\u0027s price","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"jchilling"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPrice(String)}","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"jchilling"},"content":" */","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"jchilling"},"content":"public class Price {","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"jchilling"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"chngchngchng"},"content":"            \"Price should only contain numbers and an optional exponent. For example: 123.45\";","lastModifiedDate":"2022-10-18"},{"lineNumber":15,"author":{"gitId":"chngchngchng"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[0-9]*\\\\.*[0-9]+$\";","lastModifiedDate":"2022-10-18"},{"lineNumber":16,"author":{"gitId":"chngchngchng"},"content":"    public static final double EPSILON \u003d 0.01d;","lastModifiedDate":"2022-10-18"},{"lineNumber":17,"author":{"gitId":"jchilling"},"content":"    public final String value;","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"chngchngchng"},"content":"    public final double numericalValue;","lastModifiedDate":"2022-10-18"},{"lineNumber":19,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"jchilling"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"jchilling"},"content":"     * Constructs a {@code Price}.","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"jchilling"},"content":"     *","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"jchilling"},"content":"     * @param price A valid price number.","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"jchilling"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"jchilling"},"content":"    public Price(String price) {","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"jchilling"},"content":"        requireNonNull(price);","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"jchilling"},"content":"        checkArgument(isValidPrice(price), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"jchilling"},"content":"        value \u003d price;","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"chngchngchng"},"content":"        numericalValue \u003d Double.parseDouble(price);","lastModifiedDate":"2022-10-18"},{"lineNumber":30,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"jchilling"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"jchilling"},"content":"     * Returns true if a given string is a valid price.","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"jchilling"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"jchilling"},"content":"    public static boolean isValidPrice(String test) {","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"jchilling"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"chngchngchng"},"content":"    // TODO testing for these methods","lastModifiedDate":"2022-10-18"},{"lineNumber":40,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":41,"author":{"gitId":"chngchngchng"},"content":"    /**","lastModifiedDate":"2022-10-18"},{"lineNumber":42,"author":{"gitId":"ChryslineLim"},"content":"     * Returns true if the stored numerical value is greater than or equal to a given {@code Price}.","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"chngchngchng"},"content":"     */","lastModifiedDate":"2022-10-18"},{"lineNumber":44,"author":{"gitId":"ChryslineLim"},"content":"    public boolean isGreaterThanOrEqual(Price p) {","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"chngchngchng"},"content":"        double d \u003d p.getNumericalValue();","lastModifiedDate":"2022-10-18"},{"lineNumber":46,"author":{"gitId":"chngchngchng"},"content":"        return numericalValue - d \u003e EPSILON || numericalValue - d \u003d\u003d 0;","lastModifiedDate":"2022-10-18"},{"lineNumber":47,"author":{"gitId":"chngchngchng"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":48,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":49,"author":{"gitId":"chngchngchng"},"content":"    /**","lastModifiedDate":"2022-10-18"},{"lineNumber":50,"author":{"gitId":"ChryslineLim"},"content":"     * Returns true if the stored numerical value is smaller than or equal to a given {@code Price}.","lastModifiedDate":"2022-10-20"},{"lineNumber":51,"author":{"gitId":"chngchngchng"},"content":"     */","lastModifiedDate":"2022-10-18"},{"lineNumber":52,"author":{"gitId":"ChryslineLim"},"content":"    public boolean isSmallerThanOrEqual(Price p) {","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"chngchngchng"},"content":"        double d \u003d p.getNumericalValue();","lastModifiedDate":"2022-10-18"},{"lineNumber":54,"author":{"gitId":"chngchngchng"},"content":"        return d - numericalValue \u003e EPSILON || numericalValue - d \u003d\u003d 0;","lastModifiedDate":"2022-10-18"},{"lineNumber":55,"author":{"gitId":"chngchngchng"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":56,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":57,"author":{"gitId":"chngchngchng"},"content":"    public double getNumericalValue() {","lastModifiedDate":"2022-10-18"},{"lineNumber":58,"author":{"gitId":"chngchngchng"},"content":"        return this.numericalValue;","lastModifiedDate":"2022-10-18"},{"lineNumber":59,"author":{"gitId":"chngchngchng"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":60,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":61,"author":{"gitId":"jchilling"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":62,"author":{"gitId":"jchilling"},"content":"    public String toString() {","lastModifiedDate":"2022-10-04"},{"lineNumber":63,"author":{"gitId":"jchilling"},"content":"        return value;","lastModifiedDate":"2022-10-04"},{"lineNumber":64,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":65,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":66,"author":{"gitId":"jchilling"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":67,"author":{"gitId":"jchilling"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-04"},{"lineNumber":68,"author":{"gitId":"jchilling"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-04"},{"lineNumber":69,"author":{"gitId":"jchilling"},"content":"                || (other instanceof Price // instanceof handles nulls","lastModifiedDate":"2022-10-04"},{"lineNumber":70,"author":{"gitId":"jchilling"},"content":"                \u0026\u0026 value.equals(((Price) other).value)); // state check","lastModifiedDate":"2022-10-04"},{"lineNumber":71,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":72,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":73,"author":{"gitId":"jchilling"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":74,"author":{"gitId":"jchilling"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-04"},{"lineNumber":75,"author":{"gitId":"jchilling"},"content":"        return value.hashCode();","lastModifiedDate":"2022-10-04"},{"lineNumber":76,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":77,"author":{"gitId":"jchilling"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"chngchngchng":23,"jchilling":50,"ChryslineLim":4}},{"path":"src/main/java/seedu/address/model/property/Properties.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChryslineLim"},"content":"package seedu.address.model.property;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"chngchngchng"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"chngchngchng"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"chngchngchng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"chngchngchng"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"chngchngchng"},"content":"import java.util.List;","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"chngchngchng"},"content":"import seedu.address.model.address.Address;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"chngchngchng"},"content":"/**","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"chngchngchng"},"content":" * Represents a list of properties that a seller is selling / managing.","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"chngchngchng"},"content":" */","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"chngchngchng"},"content":"public class Properties {","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"chngchngchng"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"A list of properties must be represented by the\"","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"chngchngchng"},"content":"            + \"relative indices of the properties in the list, separated by spaces. A property list can be empty.\";","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"chngchngchng"},"content":"    /*","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"chngchngchng"},"content":"     * Digits that represent relative indices must be separated by spaces.","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"chngchngchng"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"chngchngchng"},"content":"    public static final String VALIDATION_REGEX \u003d \"(^(\\\\d\\\\s?)*$)\";","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"chngchngchng"},"content":"    // TODO propertyList is not populated at all (linking).","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"chngchngchng"},"content":"    public final List\u003cProperty\u003e propertyList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"chngchngchng"},"content":"    public final String[] indicesArray;","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"chngchngchng"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"chngchngchng"},"content":"     * Constructs a {@code Properties}.","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"chngchngchng"},"content":"     * Guarantees: Immutable, is valid as declared in isValidPropertiesString.","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"chngchngchng"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"chngchngchng"},"content":"    public Properties(String spaceSeparatedProperties) {","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"chngchngchng"},"content":"        requireNonNull(spaceSeparatedProperties);","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"chngchngchng"},"content":"        checkArgument(isValidPropertiesString(spaceSeparatedProperties), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"chngchngchng"},"content":"        indicesArray \u003d spaceSeparatedProperties.split(\" \");","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"chngchngchng"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"chngchngchng"},"content":"    public List\u003cProperty\u003e getPropertyList() {","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"chngchngchng"},"content":"        return this.propertyList;","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"chngchngchng"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"chngchngchng"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"chngchngchng"},"content":"     * Returns true if a given string is valid to be used in desired characteristics.","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"chngchngchng"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"chngchngchng"},"content":"    public static boolean isValidPropertiesString(String test) {","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"chngchngchng"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"chngchngchng"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"chngchngchng"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"chngchngchng"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"chngchngchng"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-05"},{"lineNumber":53,"author":{"gitId":"chngchngchng"},"content":"                || (other instanceof Properties // instanceof handles nulls","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"chngchngchng"},"content":"                \u0026\u0026 this.toString().equals(((Address) other).toString())); // state check","lastModifiedDate":"2022-10-05"},{"lineNumber":55,"author":{"gitId":"chngchngchng"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":57,"author":{"gitId":"chngchngchng"},"content":"    // TODO update toString method with proper implementation of List\u003cProperty\u003e once linked","lastModifiedDate":"2022-10-05"},{"lineNumber":58,"author":{"gitId":"chngchngchng"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":59,"author":{"gitId":"chngchngchng"},"content":"    public String toString() {","lastModifiedDate":"2022-10-05"},{"lineNumber":60,"author":{"gitId":"chngchngchng"},"content":"        StringBuilder sb \u003d new StringBuilder(\"Properties Owned: \");","lastModifiedDate":"2022-10-05"},{"lineNumber":61,"author":{"gitId":"chngchngchng"},"content":"        sb.append(Arrays.toString(indicesArray));","lastModifiedDate":"2022-10-05"},{"lineNumber":62,"author":{"gitId":"chngchngchng"},"content":"        return sb.toString();","lastModifiedDate":"2022-10-05"},{"lineNumber":63,"author":{"gitId":"chngchngchng"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":64,"author":{"gitId":"chngchngchng"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"chngchngchng":63,"ChryslineLim":1}},{"path":"src/main/java/seedu/address/model/property/Property.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jchilling"},"content":"package seedu.address.model.property;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"jchilling"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"jchilling"},"content":"import java.util.Objects;","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"ChryslineLim"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-19"},{"lineNumber":8,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"zsiggg"},"content":"import seedu.address.model.address.Address;","lastModifiedDate":"2022-10-08"},{"lineNumber":10,"author":{"gitId":"ChryslineLim"},"content":"import seedu.address.model.characteristics.Characteristics;","lastModifiedDate":"2022-10-19"},{"lineNumber":11,"author":{"gitId":"riccqi"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"riccqi"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"jchilling"},"content":"/**","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"jchilling"},"content":" * Represents a Property in the address book.","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"ChryslineLim"},"content":" * Guarantees: field values are validated, immutable.","lastModifiedDate":"2022-10-19"},{"lineNumber":17,"author":{"gitId":"ChryslineLim"},"content":" * Only characteristics may be null.","lastModifiedDate":"2022-10-19"},{"lineNumber":18,"author":{"gitId":"jchilling"},"content":" */","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"jchilling"},"content":"public class Property {","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"ChryslineLim"},"content":"    // TODO: Remove description and tags fields","lastModifiedDate":"2022-10-19"},{"lineNumber":22,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":23,"author":{"gitId":"jchilling"},"content":"    // Identity fields","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"zsiggg"},"content":"    private final PropertyName propertyName;","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"jchilling"},"content":"    private final Price price;","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"jchilling"},"content":"    // Data fields","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"zsiggg"},"content":"    private final Address address;","lastModifiedDate":"2022-10-08"},{"lineNumber":29,"author":{"gitId":"jchilling"},"content":"    private final Description description;","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"ChryslineLim"},"content":"    private final Optional\u003cCharacteristics\u003e characteristics;","lastModifiedDate":"2022-10-19"},{"lineNumber":31,"author":{"gitId":"riccqi"},"content":"    private final Owner owner;","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"jchilling"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"jchilling"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"jchilling"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"riccqi"},"content":"    public Property(PropertyName propertyName, Price price, Address address, Description description,","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"riccqi"},"content":"            Characteristics characteristics, Owner owner) {","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"riccqi"},"content":"        requireAllNonNull(propertyName, price, address, description, owner);","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"zsiggg"},"content":"        this.propertyName \u003d propertyName;","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"jchilling"},"content":"        this.price \u003d price;","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"zsiggg"},"content":"        this.address \u003d address;","lastModifiedDate":"2022-10-08"},{"lineNumber":42,"author":{"gitId":"jchilling"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"ChryslineLim"},"content":"        this.characteristics \u003d Optional.ofNullable(characteristics);","lastModifiedDate":"2022-10-19"},{"lineNumber":44,"author":{"gitId":"riccqi"},"content":"        this.owner \u003d owner;","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":47,"author":{"gitId":"riccqi"},"content":"    public PropertyName getPropertyName() {","lastModifiedDate":"2022-10-20"},{"lineNumber":48,"author":{"gitId":"zsiggg"},"content":"        return propertyName;","lastModifiedDate":"2022-10-06"},{"lineNumber":49,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":50,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":51,"author":{"gitId":"zsiggg"},"content":"    public Address getAddress() {","lastModifiedDate":"2022-10-08"},{"lineNumber":52,"author":{"gitId":"zsiggg"},"content":"        return address;","lastModifiedDate":"2022-10-08"},{"lineNumber":53,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":54,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":55,"author":{"gitId":"jchilling"},"content":"    public Price getPrice() {","lastModifiedDate":"2022-10-04"},{"lineNumber":56,"author":{"gitId":"jchilling"},"content":"        return price;","lastModifiedDate":"2022-10-04"},{"lineNumber":57,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":58,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":59,"author":{"gitId":"jchilling"},"content":"    public Description getDescription() {","lastModifiedDate":"2022-10-04"},{"lineNumber":60,"author":{"gitId":"jchilling"},"content":"        return description;","lastModifiedDate":"2022-10-04"},{"lineNumber":61,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":62,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":63,"author":{"gitId":"riccqi"},"content":"    public Owner getOwner() {","lastModifiedDate":"2022-10-20"},{"lineNumber":64,"author":{"gitId":"riccqi"},"content":"        return owner;","lastModifiedDate":"2022-10-20"},{"lineNumber":65,"author":{"gitId":"riccqi"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":66,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":67,"author":{"gitId":"riccqi"},"content":"    public Name getOwnerName() {","lastModifiedDate":"2022-10-20"},{"lineNumber":68,"author":{"gitId":"riccqi"},"content":"        return owner.getName();","lastModifiedDate":"2022-10-20"},{"lineNumber":69,"author":{"gitId":"riccqi"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":70,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":71,"author":{"gitId":"riccqi"},"content":"    public Phone getOwnerPhone() {","lastModifiedDate":"2022-10-20"},{"lineNumber":72,"author":{"gitId":"riccqi"},"content":"        return owner.getPhone();","lastModifiedDate":"2022-10-20"},{"lineNumber":73,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":74,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":75,"author":{"gitId":"ChryslineLim"},"content":"    public Optional\u003cCharacteristics\u003e getCharacteristics() {","lastModifiedDate":"2022-10-19"},{"lineNumber":76,"author":{"gitId":"ChryslineLim"},"content":"        return this.characteristics;","lastModifiedDate":"2022-10-19"},{"lineNumber":77,"author":{"gitId":"ChryslineLim"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":78,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":79,"author":{"gitId":"jchilling"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":80,"author":{"gitId":"jchilling"},"content":"     * Returns true if both properties have the same name and price.","lastModifiedDate":"2022-10-04"},{"lineNumber":81,"author":{"gitId":"jchilling"},"content":"     * This defines a weaker notion of equality between two properties.","lastModifiedDate":"2022-10-04"},{"lineNumber":82,"author":{"gitId":"jchilling"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":83,"author":{"gitId":"jchilling"},"content":"    public boolean isSameProperty(Property otherProperty) {","lastModifiedDate":"2022-10-04"},{"lineNumber":84,"author":{"gitId":"jchilling"},"content":"        if (otherProperty \u003d\u003d this) {","lastModifiedDate":"2022-10-04"},{"lineNumber":85,"author":{"gitId":"jchilling"},"content":"            return true;","lastModifiedDate":"2022-10-04"},{"lineNumber":86,"author":{"gitId":"jchilling"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":87,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":88,"author":{"gitId":"jchilling"},"content":"        return otherProperty !\u003d null","lastModifiedDate":"2022-10-04"},{"lineNumber":89,"author":{"gitId":"riccqi"},"content":"                \u0026\u0026 otherProperty.getPropertyName().equals(getPropertyName())","lastModifiedDate":"2022-10-20"},{"lineNumber":90,"author":{"gitId":"jchilling"},"content":"                \u0026\u0026 otherProperty.getPrice().equals(getPrice());","lastModifiedDate":"2022-10-04"},{"lineNumber":91,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":92,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":93,"author":{"gitId":"jchilling"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":94,"author":{"gitId":"zsiggg"},"content":"     * Returns true if both properties have the same identity and data fields.","lastModifiedDate":"2022-10-13"},{"lineNumber":95,"author":{"gitId":"zsiggg"},"content":"     * This defines a stronger notion of equality between two properties.","lastModifiedDate":"2022-10-13"},{"lineNumber":96,"author":{"gitId":"jchilling"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":97,"author":{"gitId":"jchilling"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":98,"author":{"gitId":"jchilling"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-04"},{"lineNumber":99,"author":{"gitId":"jchilling"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-04"},{"lineNumber":100,"author":{"gitId":"jchilling"},"content":"            return true;","lastModifiedDate":"2022-10-04"},{"lineNumber":101,"author":{"gitId":"jchilling"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":102,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":103,"author":{"gitId":"jchilling"},"content":"        if (!(other instanceof Property)) {","lastModifiedDate":"2022-10-04"},{"lineNumber":104,"author":{"gitId":"jchilling"},"content":"            return false;","lastModifiedDate":"2022-10-04"},{"lineNumber":105,"author":{"gitId":"jchilling"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":106,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":107,"author":{"gitId":"jchilling"},"content":"        Property otherProperty \u003d (Property) other;","lastModifiedDate":"2022-10-04"},{"lineNumber":108,"author":{"gitId":"riccqi"},"content":"        return otherProperty.getPropertyName().equals(getPropertyName())","lastModifiedDate":"2022-10-20"},{"lineNumber":109,"author":{"gitId":"jchilling"},"content":"                \u0026\u0026 otherProperty.getPrice().equals(getPrice())","lastModifiedDate":"2022-10-04"},{"lineNumber":110,"author":{"gitId":"zsiggg"},"content":"                \u0026\u0026 otherProperty.getAddress().equals(getAddress())","lastModifiedDate":"2022-10-08"},{"lineNumber":111,"author":{"gitId":"zsiggg"},"content":"                \u0026\u0026 otherProperty.getDescription().equals(getDescription())","lastModifiedDate":"2022-10-13"},{"lineNumber":112,"author":{"gitId":"riccqi"},"content":"                \u0026\u0026 otherProperty.getCharacteristics().equals(getCharacteristics())","lastModifiedDate":"2022-10-20"},{"lineNumber":113,"author":{"gitId":"riccqi"},"content":"                \u0026\u0026 otherProperty.getOwner().equals(getOwner());","lastModifiedDate":"2022-10-20"},{"lineNumber":114,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":115,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":116,"author":{"gitId":"jchilling"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":117,"author":{"gitId":"jchilling"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-04"},{"lineNumber":118,"author":{"gitId":"jchilling"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2022-10-04"},{"lineNumber":119,"author":{"gitId":"riccqi"},"content":"        return Objects.hash(propertyName, price, address, description, characteristics, owner);","lastModifiedDate":"2022-10-20"},{"lineNumber":120,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":121,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":122,"author":{"gitId":"jchilling"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":123,"author":{"gitId":"jchilling"},"content":"    public String toString() {","lastModifiedDate":"2022-10-04"},{"lineNumber":124,"author":{"gitId":"jchilling"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-10-04"},{"lineNumber":125,"author":{"gitId":"riccqi"},"content":"        builder.append(getPropertyName())","lastModifiedDate":"2022-10-20"},{"lineNumber":126,"author":{"gitId":"jchilling"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2022-10-04"},{"lineNumber":127,"author":{"gitId":"zsiggg"},"content":"                .append(getAddress())","lastModifiedDate":"2022-10-08"},{"lineNumber":128,"author":{"gitId":"jchilling"},"content":"                .append(\"; Price: \")","lastModifiedDate":"2022-10-04"},{"lineNumber":129,"author":{"gitId":"jchilling"},"content":"                .append(getPrice())","lastModifiedDate":"2022-10-04"},{"lineNumber":130,"author":{"gitId":"jchilling"},"content":"                .append(\"; Description: \")","lastModifiedDate":"2022-10-04"},{"lineNumber":131,"author":{"gitId":"riccqi"},"content":"                .append(getDescription());","lastModifiedDate":"2022-10-20"},{"lineNumber":132,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":133,"author":{"gitId":"ChryslineLim"},"content":"        builder.append(\"; Characteristics: \")","lastModifiedDate":"2022-10-19"},{"lineNumber":134,"author":{"gitId":"ChryslineLim"},"content":"                .append(getCharacteristics()","lastModifiedDate":"2022-10-19"},{"lineNumber":135,"author":{"gitId":"ChryslineLim"},"content":"                        .map(Characteristics::toString)","lastModifiedDate":"2022-10-19"},{"lineNumber":136,"author":{"gitId":"ChryslineLim"},"content":"                        .orElse(\"Not Specified\"));","lastModifiedDate":"2022-10-19"},{"lineNumber":137,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":138,"author":{"gitId":"riccqi"},"content":"        builder.append(\"; Owner: \")","lastModifiedDate":"2022-10-20"},{"lineNumber":139,"author":{"gitId":"riccqi"},"content":"                .append(getOwner());","lastModifiedDate":"2022-10-20"},{"lineNumber":140,"author":{"gitId":"jchilling"},"content":"        return builder.toString();","lastModifiedDate":"2022-10-04"},{"lineNumber":141,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":142,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":143,"author":{"gitId":"jchilling"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"riccqi":28,"zsiggg":17,"jchilling":82,"ChryslineLim":16}},{"path":"src/main/java/seedu/address/model/property/PropertyName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jchilling"},"content":"package seedu.address.model.property;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"jchilling"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"jchilling"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"jchilling"},"content":"/**","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"jchilling"},"content":" * Represents a Person\u0027s name in the address book.","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"zsiggg"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPropertyName(String)}","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"jchilling"},"content":" */","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"zsiggg"},"content":"public class PropertyName {","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"jchilling"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"jchilling"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"jchilling"},"content":"    /*","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"jchilling"},"content":"     * The first character of the name must not be a whitespace,","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"jchilling"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"jchilling"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"jchilling"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"jchilling"},"content":"    public final String fullName;","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"jchilling"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"jchilling"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"jchilling"},"content":"     *","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"jchilling"},"content":"     * @param name A valid name.","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"jchilling"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"zsiggg"},"content":"    public PropertyName(String name) {","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"jchilling"},"content":"        requireNonNull(name);","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"zsiggg"},"content":"        checkArgument(isValidPropertyName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"jchilling"},"content":"        fullName \u003d name;","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"jchilling"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"jchilling"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"jchilling"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"zsiggg"},"content":"    public static boolean isValidPropertyName(String test) {","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"jchilling"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"jchilling"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"jchilling"},"content":"    public String toString() {","lastModifiedDate":"2022-10-04"},{"lineNumber":44,"author":{"gitId":"jchilling"},"content":"        return fullName;","lastModifiedDate":"2022-10-04"},{"lineNumber":45,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":47,"author":{"gitId":"jchilling"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":48,"author":{"gitId":"jchilling"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-04"},{"lineNumber":49,"author":{"gitId":"jchilling"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-04"},{"lineNumber":50,"author":{"gitId":"zsiggg"},"content":"                || (other instanceof PropertyName // instanceof handles nulls","lastModifiedDate":"2022-10-06"},{"lineNumber":51,"author":{"gitId":"zsiggg"},"content":"                \u0026\u0026 fullName.equals(((PropertyName) other).fullName)); // state check","lastModifiedDate":"2022-10-06"},{"lineNumber":52,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":53,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":54,"author":{"gitId":"jchilling"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":55,"author":{"gitId":"jchilling"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-04"},{"lineNumber":56,"author":{"gitId":"jchilling"},"content":"        return fullName.hashCode();","lastModifiedDate":"2022-10-04"},{"lineNumber":57,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":58,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":59,"author":{"gitId":"jchilling"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"zsiggg":7,"jchilling":52}},{"path":"src/main/java/seedu/address/model/property/PropertyNameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jchilling"},"content":"package seedu.address.model.property;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"jchilling"},"content":"import java.util.List;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"jchilling"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"jchilling"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"jchilling"},"content":"/**","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"jchilling"},"content":" * Tests that a {@code Property}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"jchilling"},"content":" */","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"jchilling"},"content":"public class PropertyNameContainsKeywordsPredicate implements Predicate\u003cProperty\u003e {","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"jchilling"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"jchilling"},"content":"    public PropertyNameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"jchilling"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"jchilling"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"jchilling"},"content":"    public boolean test(Property property) {","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"jchilling"},"content":"        return keywords.stream()","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"riccqi"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(property.getPropertyName().fullName, keyword));","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"jchilling"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"jchilling"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"jchilling"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"jchilling"},"content":"                || (other instanceof PropertyNameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"jchilling"},"content":"                \u0026\u0026 keywords.equals(((PropertyNameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"jchilling"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"riccqi":1,"jchilling":30}},{"path":"src/main/java/seedu/address/model/property/UniquePropertyList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jchilling"},"content":"package seedu.address.model.property;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"jchilling"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"jchilling"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"jchilling"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"jchilling"},"content":"import java.util.List;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"jchilling"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"jchilling"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"jchilling"},"content":"import seedu.address.model.property.exceptions.DuplicatePropertyException;","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"jchilling"},"content":"import seedu.address.model.property.exceptions.PropertyNotFoundException;","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"jchilling"},"content":"/**","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"jchilling"},"content":" * A list of properties that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"jchilling"},"content":" * A property is considered unique by comparing using {@code Property#isSameProperty(Property) }.","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"jchilling"},"content":" * As such, adding and updating of properties uses Property#isSameProperty(Property) for equality","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"riccqi"},"content":" * to ensure that the property being added or updated is unique in terms of identity in the","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"riccqi"},"content":" * UniquePropertyList. However, the removal of a property uses Property#equals(Object) to","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"jchilling"},"content":" * ensure that the property with exactly the same fields will be removed.","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"jchilling"},"content":" *","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"jchilling"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"jchilling"},"content":" *","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"jchilling"},"content":" * @see Property#isSameProperty(Property)","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"jchilling"},"content":" */","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"jchilling"},"content":"public class UniquePropertyList implements Iterable\u003cProperty\u003e {","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"jchilling"},"content":"    private final ObservableList\u003cProperty\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"jchilling"},"content":"    private final ObservableList\u003cProperty\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"jchilling"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"jchilling"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"jchilling"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"jchilling"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"jchilling"},"content":"    public boolean contains(Property toCheck) {","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"jchilling"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"jchilling"},"content":"        return internalList.stream().anyMatch(toCheck::isSameProperty);","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"jchilling"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"jchilling"},"content":"     * Adds a person to the list.","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"jchilling"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2022-10-04"},{"lineNumber":44,"author":{"gitId":"jchilling"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":45,"author":{"gitId":"jchilling"},"content":"    public void add(Property toAdd) {","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"jchilling"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-10-04"},{"lineNumber":47,"author":{"gitId":"jchilling"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2022-10-04"},{"lineNumber":48,"author":{"gitId":"jchilling"},"content":"            throw new DuplicatePropertyException();","lastModifiedDate":"2022-10-04"},{"lineNumber":49,"author":{"gitId":"jchilling"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":50,"author":{"gitId":"jchilling"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2022-10-04"},{"lineNumber":51,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":52,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":53,"author":{"gitId":"jchilling"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":54,"author":{"gitId":"jchilling"},"content":"     * Replaces the property {@code target} in the list with {@code editedProperty}.","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"jchilling"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2022-10-04"},{"lineNumber":56,"author":{"gitId":"jchilling"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2022-10-04"},{"lineNumber":57,"author":{"gitId":"jchilling"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":58,"author":{"gitId":"jchilling"},"content":"    public void setProperty(Property target, Property editedProperty) {","lastModifiedDate":"2022-10-04"},{"lineNumber":59,"author":{"gitId":"jchilling"},"content":"        requireAllNonNull(target, editedProperty);","lastModifiedDate":"2022-10-04"},{"lineNumber":60,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":61,"author":{"gitId":"jchilling"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2022-10-04"},{"lineNumber":62,"author":{"gitId":"jchilling"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-10-04"},{"lineNumber":63,"author":{"gitId":"jchilling"},"content":"            throw new PropertyNotFoundException();","lastModifiedDate":"2022-10-04"},{"lineNumber":64,"author":{"gitId":"jchilling"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":65,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":66,"author":{"gitId":"jchilling"},"content":"        if (!target.isSameProperty(editedProperty) \u0026\u0026 contains(editedProperty)) {","lastModifiedDate":"2022-10-04"},{"lineNumber":67,"author":{"gitId":"jchilling"},"content":"            throw new DuplicatePropertyException();","lastModifiedDate":"2022-10-04"},{"lineNumber":68,"author":{"gitId":"jchilling"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":69,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":70,"author":{"gitId":"jchilling"},"content":"        internalList.set(index, editedProperty);","lastModifiedDate":"2022-10-04"},{"lineNumber":71,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":72,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":73,"author":{"gitId":"jchilling"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":74,"author":{"gitId":"jchilling"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2022-10-04"},{"lineNumber":75,"author":{"gitId":"jchilling"},"content":"     * The person must exist in the list.","lastModifiedDate":"2022-10-04"},{"lineNumber":76,"author":{"gitId":"jchilling"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":77,"author":{"gitId":"jchilling"},"content":"    public void remove(Property toRemove) {","lastModifiedDate":"2022-10-04"},{"lineNumber":78,"author":{"gitId":"jchilling"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-10-04"},{"lineNumber":79,"author":{"gitId":"jchilling"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2022-10-04"},{"lineNumber":80,"author":{"gitId":"jchilling"},"content":"            throw new PropertyNotFoundException();","lastModifiedDate":"2022-10-04"},{"lineNumber":81,"author":{"gitId":"jchilling"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":82,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":83,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":84,"author":{"gitId":"jchilling"},"content":"    public void setProperties(UniquePropertyList replacement) {","lastModifiedDate":"2022-10-04"},{"lineNumber":85,"author":{"gitId":"jchilling"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2022-10-04"},{"lineNumber":86,"author":{"gitId":"jchilling"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2022-10-04"},{"lineNumber":87,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":88,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":89,"author":{"gitId":"jchilling"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":90,"author":{"gitId":"jchilling"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2022-10-04"},{"lineNumber":91,"author":{"gitId":"jchilling"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2022-10-04"},{"lineNumber":92,"author":{"gitId":"jchilling"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":93,"author":{"gitId":"jchilling"},"content":"    public void setProperties(List\u003cProperty\u003e properties) {","lastModifiedDate":"2022-10-04"},{"lineNumber":94,"author":{"gitId":"jchilling"},"content":"        requireAllNonNull(properties);","lastModifiedDate":"2022-10-04"},{"lineNumber":95,"author":{"gitId":"jchilling"},"content":"        if (!propertiesAreUnique(properties)) {","lastModifiedDate":"2022-10-04"},{"lineNumber":96,"author":{"gitId":"jchilling"},"content":"            throw new DuplicatePropertyException();","lastModifiedDate":"2022-10-04"},{"lineNumber":97,"author":{"gitId":"jchilling"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":98,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":99,"author":{"gitId":"jchilling"},"content":"        internalList.setAll(properties);","lastModifiedDate":"2022-10-04"},{"lineNumber":100,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":101,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":102,"author":{"gitId":"jchilling"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":103,"author":{"gitId":"jchilling"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2022-10-04"},{"lineNumber":104,"author":{"gitId":"jchilling"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":105,"author":{"gitId":"jchilling"},"content":"    public ObservableList\u003cProperty\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-10-04"},{"lineNumber":106,"author":{"gitId":"jchilling"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2022-10-04"},{"lineNumber":107,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":108,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":109,"author":{"gitId":"jchilling"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":110,"author":{"gitId":"jchilling"},"content":"    public Iterator\u003cProperty\u003e iterator() {","lastModifiedDate":"2022-10-04"},{"lineNumber":111,"author":{"gitId":"jchilling"},"content":"        return internalList.iterator();","lastModifiedDate":"2022-10-04"},{"lineNumber":112,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":113,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":114,"author":{"gitId":"jchilling"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":115,"author":{"gitId":"jchilling"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-04"},{"lineNumber":116,"author":{"gitId":"jchilling"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-04"},{"lineNumber":117,"author":{"gitId":"jchilling"},"content":"                || (other instanceof UniquePropertyList // instanceof handles nulls","lastModifiedDate":"2022-10-04"},{"lineNumber":118,"author":{"gitId":"jchilling"},"content":"                        \u0026\u0026 internalList.equals(((UniquePropertyList) other).internalList));","lastModifiedDate":"2022-10-04"},{"lineNumber":119,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":120,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":121,"author":{"gitId":"jchilling"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":122,"author":{"gitId":"jchilling"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-04"},{"lineNumber":123,"author":{"gitId":"jchilling"},"content":"        return internalList.hashCode();","lastModifiedDate":"2022-10-04"},{"lineNumber":124,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":125,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":126,"author":{"gitId":"jchilling"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":127,"author":{"gitId":"jchilling"},"content":"     * Returns true if {@code properties} contains only unique properties.","lastModifiedDate":"2022-10-04"},{"lineNumber":128,"author":{"gitId":"jchilling"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":129,"author":{"gitId":"jchilling"},"content":"    private boolean propertiesAreUnique(List\u003cProperty\u003e properties) {","lastModifiedDate":"2022-10-04"},{"lineNumber":130,"author":{"gitId":"jchilling"},"content":"        for (int i \u003d 0; i \u003c properties.size() - 1; i++) {","lastModifiedDate":"2022-10-04"},{"lineNumber":131,"author":{"gitId":"jchilling"},"content":"            for (int j \u003d i + 1; j \u003c properties.size(); j++) {","lastModifiedDate":"2022-10-04"},{"lineNumber":132,"author":{"gitId":"jchilling"},"content":"                if (properties.get(i).isSameProperty(properties.get(j))) {","lastModifiedDate":"2022-10-04"},{"lineNumber":133,"author":{"gitId":"jchilling"},"content":"                    return false;","lastModifiedDate":"2022-10-04"},{"lineNumber":134,"author":{"gitId":"jchilling"},"content":"                }","lastModifiedDate":"2022-10-04"},{"lineNumber":135,"author":{"gitId":"jchilling"},"content":"            }","lastModifiedDate":"2022-10-04"},{"lineNumber":136,"author":{"gitId":"jchilling"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":137,"author":{"gitId":"jchilling"},"content":"        return true;","lastModifiedDate":"2022-10-04"},{"lineNumber":138,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":139,"author":{"gitId":"jchilling"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"riccqi":2,"jchilling":137}},{"path":"src/main/java/seedu/address/model/property/exceptions/DuplicatePropertyException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jchilling"},"content":"package seedu.address.model.property.exceptions;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"jchilling"},"content":"/**","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"jchilling"},"content":" * Signals that the operation will result in duplicate Properties","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"jchilling"},"content":" * (Properties are considered duplicates if they have the same identity).","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"jchilling"},"content":" */","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"jchilling"},"content":"public class DuplicatePropertyException extends RuntimeException {","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"jchilling"},"content":"    public DuplicatePropertyException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"jchilling"},"content":"        super(\"Operation would result in duplicate properties\");","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"jchilling"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"jchilling":12}},{"path":"src/main/java/seedu/address/model/property/exceptions/PropertyNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jchilling"},"content":"package seedu.address.model.property.exceptions;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"jchilling"},"content":"/**","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"jchilling"},"content":" * Signals that the operation is unable to find the specified property.","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"jchilling"},"content":" */","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"jchilling"},"content":"public class PropertyNotFoundException extends RuntimeException {}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"jchilling":6}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"zsiggg"},"content":"import seedu.address.model.PersonBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"zsiggg"},"content":"import seedu.address.model.PropertyBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"zsiggg"},"content":"import seedu.address.model.ReadOnlyPersonBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"zsiggg"},"content":"import seedu.address.model.ReadOnlyPropertyBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"zsiggg"},"content":"import seedu.address.model.address.Address;","lastModifiedDate":"2022-10-08"},{"lineNumber":8,"author":{"gitId":"ChryslineLim"},"content":"import seedu.address.model.characteristics.Characteristics;","lastModifiedDate":"2022-10-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":13,"author":{"gitId":"jchilling"},"content":"import seedu.address.model.person.Priority;","lastModifiedDate":"2022-10-19"},{"lineNumber":14,"author":{"gitId":"jchilling"},"content":"import seedu.address.model.pricerange.PriceRange;","lastModifiedDate":"2022-10-19"},{"lineNumber":15,"author":{"gitId":"chngchngchng"},"content":"import seedu.address.model.property.Description;","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"riccqi"},"content":"import seedu.address.model.property.Owner;","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"chngchngchng"},"content":"import seedu.address.model.property.Price;","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"chngchngchng"},"content":"import seedu.address.model.property.Property;","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"chngchngchng"},"content":"import seedu.address.model.property.PropertyName;","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"zsiggg"},"content":" * Contains utility methods for populating {@code PersonBook} with sample data.","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":29,"author":{"gitId":"ChryslineLim"},"content":"                new PriceRange(\"200000 - 250000\"), new Characteristics(\"Bright; 5-Room\"),","lastModifiedDate":"2022-10-19"},{"lineNumber":30,"author":{"gitId":"jchilling"},"content":"                new Priority(\"high\")),","lastModifiedDate":"2022-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":33,"author":{"gitId":"ChryslineLim"},"content":"                new PriceRange(\"250000 - 280000\"), new Characteristics(\"Clean; Large\"),","lastModifiedDate":"2022-10-19"},{"lineNumber":34,"author":{"gitId":"jchilling"},"content":"                new Priority(\"low\")),","lastModifiedDate":"2022-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":37,"author":{"gitId":"ChryslineLim"},"content":"                new PriceRange(\"300000 - 400000\"), new Characteristics(\"Near MRT\"),","lastModifiedDate":"2022-10-19"},{"lineNumber":38,"author":{"gitId":"jchilling"},"content":"                new Priority(\"low\")),","lastModifiedDate":"2022-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":41,"author":{"gitId":"ChryslineLim"},"content":"                new PriceRange(\"500000 - 800000\"), new Characteristics(\"Near School\"),","lastModifiedDate":"2022-10-19"},{"lineNumber":42,"author":{"gitId":"jchilling"},"content":"                new Priority(\"normal\")),","lastModifiedDate":"2022-10-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":45,"author":{"gitId":"ChryslineLim"},"content":"                new PriceRange(\"200000 - 250000\"), new Characteristics(\"Bishan\"),","lastModifiedDate":"2022-10-19"},{"lineNumber":46,"author":{"gitId":"jchilling"},"content":"                new Priority(\"normal\")),","lastModifiedDate":"2022-10-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":49,"author":{"gitId":"ChryslineLim"},"content":"                new PriceRange(\"100000 - 150000\"), new Characteristics(\"Toa Payoh; Kid-Friendly\"),","lastModifiedDate":"2022-10-19"},{"lineNumber":50,"author":{"gitId":"jchilling"},"content":"                new Priority(\"low\"))","lastModifiedDate":"2022-10-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":54,"author":{"gitId":"riccqi"},"content":"    public static Owner[] getSampleOwners() {","lastModifiedDate":"2022-10-20"},{"lineNumber":55,"author":{"gitId":"riccqi"},"content":"        return new Owner[] {","lastModifiedDate":"2022-10-20"},{"lineNumber":56,"author":{"gitId":"riccqi"},"content":"            new Owner(new Name(\"Alex Yeoh\"), new Phone(\"87438807\")),","lastModifiedDate":"2022-10-20"},{"lineNumber":57,"author":{"gitId":"riccqi"},"content":"            new Owner(new Name(\"Bernice Yu\"), new Phone(\"99272758\")),","lastModifiedDate":"2022-10-20"},{"lineNumber":58,"author":{"gitId":"riccqi"},"content":"            new Owner(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\")),","lastModifiedDate":"2022-10-20"},{"lineNumber":59,"author":{"gitId":"riccqi"},"content":"            new Owner(new Name(\"David Li\"), new Phone(\"91031282\")),","lastModifiedDate":"2022-10-20"},{"lineNumber":60,"author":{"gitId":"riccqi"},"content":"            new Owner(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\")),","lastModifiedDate":"2022-10-20"},{"lineNumber":61,"author":{"gitId":"riccqi"},"content":"            new Owner(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"))","lastModifiedDate":"2022-10-20"},{"lineNumber":62,"author":{"gitId":"riccqi"},"content":"        };","lastModifiedDate":"2022-10-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":65,"author":{"gitId":"chngchngchng"},"content":"    public static Property[] getSampleProperties() {","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"jchilling"},"content":"        return new Property[]{","lastModifiedDate":"2022-10-13"},{"lineNumber":67,"author":{"gitId":"jchilling"},"content":"            new Property(new PropertyName(\"Residential College 4\"), new Price(\"50000\"),","lastModifiedDate":"2022-10-13"},{"lineNumber":68,"author":{"gitId":"chngchngchng"},"content":"                new Address(\"6 College Avenue East\"), new Description(\"A place for NUS students to stay.\"),","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"riccqi"},"content":"                    new Characteristics(\"Bright; Sunny\"), getSampleOwners()[0]),","lastModifiedDate":"2022-10-20"},{"lineNumber":70,"author":{"gitId":"jchilling"},"content":"            new Property(new PropertyName(\"Tembusu College\"), new Price(\"9999\"),","lastModifiedDate":"2022-10-13"},{"lineNumber":71,"author":{"gitId":"jchilling"},"content":"                        new Address(\"26 College Avenue East\"), new Description(\"A place for NUS students to stay.\"),","lastModifiedDate":"2022-10-13"},{"lineNumber":72,"author":{"gitId":"riccqi"},"content":"                        new Characteristics(\"Near MRT\"), getSampleOwners()[1]),","lastModifiedDate":"2022-10-20"},{"lineNumber":73,"author":{"gitId":"jchilling"},"content":"            new Property(new PropertyName(\"Peak Residence\"), new Price(\"10000000\"),","lastModifiedDate":"2022-10-13"},{"lineNumber":74,"author":{"gitId":"jchilling"},"content":"                        new Address(\"333 Thompson Road\"),","lastModifiedDate":"2022-10-13"},{"lineNumber":75,"author":{"gitId":"jchilling"},"content":"                        new Description(\"latest freehold luxurious exclusive condominium.\"),","lastModifiedDate":"2022-10-13"},{"lineNumber":76,"author":{"gitId":"riccqi"},"content":"                        new Characteristics(\"Near School\"), getSampleOwners()[2]),","lastModifiedDate":"2022-10-20"},{"lineNumber":77,"author":{"gitId":"jchilling"},"content":"            new Property(new PropertyName(\"Hut\"), new Price(\"25000\"),","lastModifiedDate":"2022-10-13"},{"lineNumber":78,"author":{"gitId":"jchilling"},"content":"                        new Address(\"25 Regent Road\"),","lastModifiedDate":"2022-10-13"},{"lineNumber":79,"author":{"gitId":"jchilling"},"content":"                        new Description(\"new 3-room HDB flat\"),","lastModifiedDate":"2022-10-13"},{"lineNumber":80,"author":{"gitId":"riccqi"},"content":"                        new Characteristics(\"Kid-Friendly\"), getSampleOwners()[3]),","lastModifiedDate":"2022-10-20"},{"lineNumber":81,"author":{"gitId":"chngchngchng"},"content":"        };","lastModifiedDate":"2022-10-11"},{"lineNumber":82,"author":{"gitId":"chngchngchng"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":83,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":84,"author":{"gitId":"zsiggg"},"content":"    public static ReadOnlyPersonBook getSamplePersonModel() {","lastModifiedDate":"2022-10-13"},{"lineNumber":85,"author":{"gitId":"zsiggg"},"content":"        PersonBook sampleAb \u003d new PersonBook();","lastModifiedDate":"2022-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":92,"author":{"gitId":"zsiggg"},"content":"    public static ReadOnlyPropertyBook getSamplePropertyModel() {","lastModifiedDate":"2022-10-13"},{"lineNumber":93,"author":{"gitId":"zsiggg"},"content":"        PropertyBook propertyBook \u003d new PropertyBook();","lastModifiedDate":"2022-10-13"},{"lineNumber":94,"author":{"gitId":"chngchngchng"},"content":"        for (Property sampleProperty : getSampleProperties()) {","lastModifiedDate":"2022-10-11"},{"lineNumber":95,"author":{"gitId":"zsiggg"},"content":"            propertyBook.addProperty(sampleProperty);","lastModifiedDate":"2022-10-13"},{"lineNumber":96,"author":{"gitId":"chngchngchng"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":97,"author":{"gitId":"zsiggg"},"content":"        return propertyBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"riccqi":14,"zsiggg":12,"chngchngchng":11,"jchilling":18,"-":39,"ChryslineLim":7}},{"path":"src/main/java/seedu/address/storage/AddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"zsiggg"},"content":"import seedu.address.model.PersonBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"zsiggg"},"content":"import seedu.address.model.ReadOnlyPersonBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"zsiggg"},"content":" * Represents a storage for {@link PersonBook}.","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface AddressBookStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"zsiggg"},"content":"     * Returns PersonBook data as a {@link ReadOnlyPersonBook}.","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"zsiggg"},"content":"    Optional\u003cReadOnlyPersonBook\u003e readAddressBook() throws DataConversionException, IOException;","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @see #getAddressBookFilePath()","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"zsiggg"},"content":"    Optional\u003cReadOnlyPersonBook\u003e readAddressBook(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"zsiggg"},"content":"     * Saves the given {@link ReadOnlyPersonBook} to the storage.","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @param addressBook cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"zsiggg"},"content":"    void saveAddressBook(ReadOnlyPersonBook addressBook) throws IOException;","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"zsiggg"},"content":"     * @see #saveAddressBook(ReadOnlyPersonBook)","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":44,"author":{"gitId":"zsiggg"},"content":"    void saveAddressBook(ReadOnlyPersonBook addressBook, Path filePath) throws IOException;","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"zsiggg":10,"-":36}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedOwner.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"riccqi"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"riccqi"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"riccqi"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"riccqi"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"riccqi"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"riccqi"},"content":"import seedu.address.model.person.Priority;","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"riccqi"},"content":"import seedu.address.model.property.Owner;","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"riccqi"},"content":"/**","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"riccqi"},"content":" * Jackson-friendly version of {@link Priority}.","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"riccqi"},"content":" */","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"riccqi"},"content":"class JsonAdaptedOwner {","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"riccqi"},"content":"    private final String name;","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"riccqi"},"content":"    private final String phone;","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"riccqi"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"riccqi"},"content":"     * Constructs a {@code JsonAdaptedOwner} with the given {@code name} and {@code phone}.","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"riccqi"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"riccqi"},"content":"    @JsonCreator","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"riccqi"},"content":"    public JsonAdaptedOwner(String name, String phone) {","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"riccqi"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"riccqi"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"riccqi"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"riccqi"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"riccqi"},"content":"     * Converts a given {@code Owner} into this class for Jackson use.","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"riccqi"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"riccqi"},"content":"    public JsonAdaptedOwner(Owner source) {","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"riccqi"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"riccqi"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"riccqi"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"riccqi"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"riccqi"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"riccqi"},"content":"     *","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"riccqi"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"riccqi"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"riccqi"},"content":"    public Owner toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"riccqi"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"riccqi"},"content":"            throw new IllegalValueException(Priority.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-20"},{"lineNumber":44,"author":{"gitId":"riccqi"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"riccqi"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2022-10-20"},{"lineNumber":46,"author":{"gitId":"riccqi"},"content":"            throw new IllegalValueException(Priority.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-20"},{"lineNumber":47,"author":{"gitId":"riccqi"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":48,"author":{"gitId":"riccqi"},"content":"        return new Owner(new Name(name), new Phone(phone));","lastModifiedDate":"2022-10-20"},{"lineNumber":49,"author":{"gitId":"riccqi"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":50,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":51,"author":{"gitId":"riccqi"},"content":"}","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"riccqi":51}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"zsiggg"},"content":"import seedu.address.model.address.Address;","lastModifiedDate":"2022-10-08"},{"lineNumber":8,"author":{"gitId":"ChryslineLim"},"content":"import seedu.address.model.characteristics.Characteristics;","lastModifiedDate":"2022-10-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"jchilling"},"content":"import seedu.address.model.person.Priority;","lastModifiedDate":"2022-10-19"},{"lineNumber":14,"author":{"gitId":"jchilling"},"content":"import seedu.address.model.pricerange.PriceRange;","lastModifiedDate":"2022-10-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"ChryslineLim"},"content":"    // priceRange and desiredCharacteristics cannot be null; converted to \"\" for saving to storage if null","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"ChryslineLim"},"content":"    private final String priceRange;","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"ChryslineLim"},"content":"    private final String desiredCharacteristics;","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"jchilling"},"content":"    private final String specifiedPriority;","lastModifiedDate":"2022-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"ChryslineLim"},"content":"            @JsonProperty(\"priceRange\") String priceRange,","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"ChryslineLim"},"content":"         @JsonProperty(\"desiredCharacteristics\") String desiredCharacteristics,","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"jchilling"},"content":"            @JsonProperty(\"priority\") String specifiedPriority) {","lastModifiedDate":"2022-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"ChryslineLim"},"content":"        this.priceRange \u003d priceRange;","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"ChryslineLim"},"content":"        this.desiredCharacteristics \u003d desiredCharacteristics;","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"jchilling"},"content":"        this.specifiedPriority \u003d specifiedPriority;","lastModifiedDate":"2022-10-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"ChryslineLim"},"content":"        priceRange \u003d source.getPriceRange().map(PriceRange::toString).orElse(\"\");","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"ChryslineLim"},"content":"        desiredCharacteristics \u003d source.getDesiredCharacteristics()","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"ChryslineLim"},"content":"                .map(Characteristics::toString)","lastModifiedDate":"2022-10-19"},{"lineNumber":62,"author":{"gitId":"ChryslineLim"},"content":"                .orElse(\"\");","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"jchilling"},"content":"        specifiedPriority \u003d source.getPriority().toString();","lastModifiedDate":"2022-10-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"jchilling"},"content":"        if (specifiedPriority \u003d\u003d null) {","lastModifiedDate":"2022-10-19"},{"lineNumber":73,"author":{"gitId":"jchilling"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-10-19"},{"lineNumber":74,"author":{"gitId":"jchilling"},"content":"                    Priority.class.getSimpleName()));","lastModifiedDate":"2022-10-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":76,"author":{"gitId":"jchilling"},"content":"        if (!Priority.isValidPriority(specifiedPriority)) {","lastModifiedDate":"2022-10-19"},{"lineNumber":77,"author":{"gitId":"jchilling"},"content":"            throw new IllegalValueException(Priority.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"jchilling"},"content":"        final Priority modelPriority \u003d new Priority(specifiedPriority);","lastModifiedDate":"2022-10-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"ChryslineLim"},"content":"        if (priceRange \u003d\u003d null) {","lastModifiedDate":"2022-10-12"},{"lineNumber":114,"author":{"gitId":"ChryslineLim"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-10-12"},{"lineNumber":115,"author":{"gitId":"ChryslineLim"},"content":"                    PriceRange.class.getSimpleName()));","lastModifiedDate":"2022-10-12"},{"lineNumber":116,"author":{"gitId":"ChryslineLim"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":117,"author":{"gitId":"ChryslineLim"},"content":"        if (!priceRange.isEmpty() \u0026\u0026 !PriceRange.isValidPriceRange(priceRange)) {","lastModifiedDate":"2022-10-12"},{"lineNumber":118,"author":{"gitId":"ChryslineLim"},"content":"            throw new IllegalValueException(PriceRange.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-11"},{"lineNumber":119,"author":{"gitId":"ChryslineLim"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":120,"author":{"gitId":"ChryslineLim"},"content":"        final PriceRange modelPriceRange \u003d priceRange.isEmpty() ? null : new PriceRange(priceRange);","lastModifiedDate":"2022-10-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":122,"author":{"gitId":"ChryslineLim"},"content":"        if (desiredCharacteristics \u003d\u003d null) {","lastModifiedDate":"2022-10-12"},{"lineNumber":123,"author":{"gitId":"ChryslineLim"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-10-12"},{"lineNumber":124,"author":{"gitId":"ChryslineLim"},"content":"                    Characteristics.class.getSimpleName()));","lastModifiedDate":"2022-10-19"},{"lineNumber":125,"author":{"gitId":"ChryslineLim"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":126,"author":{"gitId":"ChryslineLim"},"content":"        if (!desiredCharacteristics.isEmpty()","lastModifiedDate":"2022-10-12"},{"lineNumber":127,"author":{"gitId":"ChryslineLim"},"content":"                \u0026\u0026 !Characteristics.isValidCharacteristics(desiredCharacteristics)) {","lastModifiedDate":"2022-10-19"},{"lineNumber":128,"author":{"gitId":"ChryslineLim"},"content":"            throw new IllegalValueException(Characteristics.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-19"},{"lineNumber":129,"author":{"gitId":"ChryslineLim"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":130,"author":{"gitId":"ChryslineLim"},"content":"        final Characteristics modelCharacteristics \u003d desiredCharacteristics.isEmpty()","lastModifiedDate":"2022-10-19"},{"lineNumber":131,"author":{"gitId":"ChryslineLim"},"content":"                ? null","lastModifiedDate":"2022-10-12"},{"lineNumber":132,"author":{"gitId":"ChryslineLim"},"content":"                : new Characteristics(desiredCharacteristics);","lastModifiedDate":"2022-10-19"},{"lineNumber":133,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":134,"author":{"gitId":"ChryslineLim"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress,","lastModifiedDate":"2022-10-12"},{"lineNumber":135,"author":{"gitId":"jchilling"},"content":"                modelPriceRange, modelCharacteristics, modelPriority);","lastModifiedDate":"2022-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"zsiggg":1,"jchilling":13,"-":90,"ChryslineLim":33}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedProperty.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zsiggg"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-10-19"},{"lineNumber":2,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":3,"author":{"gitId":"zsiggg"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-10-19"},{"lineNumber":4,"author":{"gitId":"zsiggg"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-10-19"},{"lineNumber":5,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":6,"author":{"gitId":"zsiggg"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-19"},{"lineNumber":7,"author":{"gitId":"zsiggg"},"content":"import seedu.address.model.address.Address;","lastModifiedDate":"2022-10-19"},{"lineNumber":8,"author":{"gitId":"zsiggg"},"content":"import seedu.address.model.characteristics.Characteristics;","lastModifiedDate":"2022-10-19"},{"lineNumber":9,"author":{"gitId":"zsiggg"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-10-19"},{"lineNumber":10,"author":{"gitId":"zsiggg"},"content":"import seedu.address.model.property.Description;","lastModifiedDate":"2022-10-19"},{"lineNumber":11,"author":{"gitId":"riccqi"},"content":"import seedu.address.model.property.Owner;","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"zsiggg"},"content":"import seedu.address.model.property.Price;","lastModifiedDate":"2022-10-19"},{"lineNumber":13,"author":{"gitId":"zsiggg"},"content":"import seedu.address.model.property.Property;","lastModifiedDate":"2022-10-19"},{"lineNumber":14,"author":{"gitId":"zsiggg"},"content":"import seedu.address.model.property.PropertyName;","lastModifiedDate":"2022-10-19"},{"lineNumber":15,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":16,"author":{"gitId":"zsiggg"},"content":"/**","lastModifiedDate":"2022-10-19"},{"lineNumber":17,"author":{"gitId":"zsiggg"},"content":" * Jackson-friendly version of {@link Property}.","lastModifiedDate":"2022-10-19"},{"lineNumber":18,"author":{"gitId":"zsiggg"},"content":" */","lastModifiedDate":"2022-10-19"},{"lineNumber":19,"author":{"gitId":"zsiggg"},"content":"class JsonAdaptedProperty {","lastModifiedDate":"2022-10-19"},{"lineNumber":20,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":21,"author":{"gitId":"zsiggg"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Property\u0027s %s field is missing!\";","lastModifiedDate":"2022-10-19"},{"lineNumber":22,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":23,"author":{"gitId":"zsiggg"},"content":"    private final String name;","lastModifiedDate":"2022-10-19"},{"lineNumber":24,"author":{"gitId":"zsiggg"},"content":"    private final String price;","lastModifiedDate":"2022-10-19"},{"lineNumber":25,"author":{"gitId":"zsiggg"},"content":"    private final String address;","lastModifiedDate":"2022-10-19"},{"lineNumber":26,"author":{"gitId":"zsiggg"},"content":"    private final String description;","lastModifiedDate":"2022-10-19"},{"lineNumber":27,"author":{"gitId":"zsiggg"},"content":"    // characteristics cannot be null; converted to \"\" for saving to storage if null","lastModifiedDate":"2022-10-19"},{"lineNumber":28,"author":{"gitId":"zsiggg"},"content":"    private final String characteristics;","lastModifiedDate":"2022-10-19"},{"lineNumber":29,"author":{"gitId":"riccqi"},"content":"    private final JsonAdaptedOwner owner;","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":31,"author":{"gitId":"zsiggg"},"content":"    /**","lastModifiedDate":"2022-10-19"},{"lineNumber":32,"author":{"gitId":"zsiggg"},"content":"     * Constructs a {@code JsonAdaptedProperty} with the given property details.","lastModifiedDate":"2022-10-19"},{"lineNumber":33,"author":{"gitId":"zsiggg"},"content":"     */","lastModifiedDate":"2022-10-19"},{"lineNumber":34,"author":{"gitId":"zsiggg"},"content":"    @JsonCreator","lastModifiedDate":"2022-10-19"},{"lineNumber":35,"author":{"gitId":"zsiggg"},"content":"    public JsonAdaptedProperty(@JsonProperty(\"name\") String name, @JsonProperty(\"price\") String price,","lastModifiedDate":"2022-10-19"},{"lineNumber":36,"author":{"gitId":"zsiggg"},"content":"                             @JsonProperty(\"address\") String address, @JsonProperty(\"description\") String description,","lastModifiedDate":"2022-10-19"},{"lineNumber":37,"author":{"gitId":"zsiggg"},"content":"                             @JsonProperty(\"characteristics\") String characteristics,","lastModifiedDate":"2022-10-19"},{"lineNumber":38,"author":{"gitId":"riccqi"},"content":"                               @JsonProperty(\"owner\") JsonAdaptedOwner owner) {","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"zsiggg"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-10-19"},{"lineNumber":40,"author":{"gitId":"zsiggg"},"content":"        this.price \u003d price;","lastModifiedDate":"2022-10-19"},{"lineNumber":41,"author":{"gitId":"zsiggg"},"content":"        this.address \u003d address;","lastModifiedDate":"2022-10-19"},{"lineNumber":42,"author":{"gitId":"zsiggg"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-10-19"},{"lineNumber":43,"author":{"gitId":"zsiggg"},"content":"        this.characteristics \u003d characteristics;","lastModifiedDate":"2022-10-19"},{"lineNumber":44,"author":{"gitId":"riccqi"},"content":"        this.owner \u003d owner;","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":46,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":47,"author":{"gitId":"zsiggg"},"content":"    /**","lastModifiedDate":"2022-10-19"},{"lineNumber":48,"author":{"gitId":"zsiggg"},"content":"     * Converts a given {@code Property} into this class for Jackson use.","lastModifiedDate":"2022-10-19"},{"lineNumber":49,"author":{"gitId":"zsiggg"},"content":"     */","lastModifiedDate":"2022-10-19"},{"lineNumber":50,"author":{"gitId":"zsiggg"},"content":"    public JsonAdaptedProperty(Property source) {","lastModifiedDate":"2022-10-19"},{"lineNumber":51,"author":{"gitId":"riccqi"},"content":"        name \u003d source.getPropertyName().fullName;","lastModifiedDate":"2022-10-20"},{"lineNumber":52,"author":{"gitId":"zsiggg"},"content":"        price \u003d source.getPrice().value;","lastModifiedDate":"2022-10-19"},{"lineNumber":53,"author":{"gitId":"zsiggg"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2022-10-19"},{"lineNumber":54,"author":{"gitId":"zsiggg"},"content":"        description \u003d source.getDescription().value;","lastModifiedDate":"2022-10-19"},{"lineNumber":55,"author":{"gitId":"zsiggg"},"content":"        characteristics \u003d source.getCharacteristics()","lastModifiedDate":"2022-10-19"},{"lineNumber":56,"author":{"gitId":"zsiggg"},"content":"                .map(Characteristics::toString)","lastModifiedDate":"2022-10-19"},{"lineNumber":57,"author":{"gitId":"zsiggg"},"content":"                .orElse(\"\");","lastModifiedDate":"2022-10-19"},{"lineNumber":58,"author":{"gitId":"riccqi"},"content":"        owner \u003d new JsonAdaptedOwner(source.getOwner());","lastModifiedDate":"2022-10-20"},{"lineNumber":59,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":60,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":61,"author":{"gitId":"zsiggg"},"content":"    /**","lastModifiedDate":"2022-10-19"},{"lineNumber":62,"author":{"gitId":"zsiggg"},"content":"     * Converts this Jackson-friendly adapted property object into the model\u0027s {@code Property} object.","lastModifiedDate":"2022-10-19"},{"lineNumber":63,"author":{"gitId":"zsiggg"},"content":"     *","lastModifiedDate":"2022-10-19"},{"lineNumber":64,"author":{"gitId":"zsiggg"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted property.","lastModifiedDate":"2022-10-19"},{"lineNumber":65,"author":{"gitId":"zsiggg"},"content":"     */","lastModifiedDate":"2022-10-19"},{"lineNumber":66,"author":{"gitId":"zsiggg"},"content":"    public Property toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-19"},{"lineNumber":67,"author":{"gitId":"zsiggg"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2022-10-19"},{"lineNumber":68,"author":{"gitId":"zsiggg"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-10-19"},{"lineNumber":69,"author":{"gitId":"zsiggg"},"content":"                    PropertyName.class.getSimpleName()));","lastModifiedDate":"2022-10-19"},{"lineNumber":70,"author":{"gitId":"zsiggg"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":71,"author":{"gitId":"zsiggg"},"content":"        if (!PropertyName.isValidPropertyName(name)) {","lastModifiedDate":"2022-10-19"},{"lineNumber":72,"author":{"gitId":"zsiggg"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-19"},{"lineNumber":73,"author":{"gitId":"zsiggg"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":74,"author":{"gitId":"riccqi"},"content":"        final PropertyName modelPropertyName \u003d new PropertyName(name);","lastModifiedDate":"2022-10-20"},{"lineNumber":75,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":76,"author":{"gitId":"zsiggg"},"content":"        if (price \u003d\u003d null) {","lastModifiedDate":"2022-10-19"},{"lineNumber":77,"author":{"gitId":"zsiggg"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-10-19"},{"lineNumber":78,"author":{"gitId":"zsiggg"},"content":"                    Price.class.getSimpleName()));","lastModifiedDate":"2022-10-19"},{"lineNumber":79,"author":{"gitId":"zsiggg"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":80,"author":{"gitId":"zsiggg"},"content":"        if (!Price.isValidPrice(price)) {","lastModifiedDate":"2022-10-19"},{"lineNumber":81,"author":{"gitId":"zsiggg"},"content":"            throw new IllegalValueException(Price.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-19"},{"lineNumber":82,"author":{"gitId":"zsiggg"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":83,"author":{"gitId":"zsiggg"},"content":"        final Price modelPrice \u003d new Price(price);","lastModifiedDate":"2022-10-19"},{"lineNumber":84,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":85,"author":{"gitId":"zsiggg"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2022-10-19"},{"lineNumber":86,"author":{"gitId":"zsiggg"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2022-10-19"},{"lineNumber":87,"author":{"gitId":"zsiggg"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":88,"author":{"gitId":"zsiggg"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2022-10-19"},{"lineNumber":89,"author":{"gitId":"zsiggg"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-19"},{"lineNumber":90,"author":{"gitId":"zsiggg"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":91,"author":{"gitId":"zsiggg"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2022-10-19"},{"lineNumber":92,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":93,"author":{"gitId":"zsiggg"},"content":"        if (description \u003d\u003d null) {","lastModifiedDate":"2022-10-19"},{"lineNumber":94,"author":{"gitId":"zsiggg"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-10-19"},{"lineNumber":95,"author":{"gitId":"zsiggg"},"content":"                    Description.class.getSimpleName()));","lastModifiedDate":"2022-10-19"},{"lineNumber":96,"author":{"gitId":"zsiggg"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":97,"author":{"gitId":"zsiggg"},"content":"        if (!Description.isValidDescription(description)) {","lastModifiedDate":"2022-10-19"},{"lineNumber":98,"author":{"gitId":"zsiggg"},"content":"            throw new IllegalValueException(Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-19"},{"lineNumber":99,"author":{"gitId":"zsiggg"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":100,"author":{"gitId":"zsiggg"},"content":"        final Description modelDescription \u003d new Description(name);","lastModifiedDate":"2022-10-19"},{"lineNumber":101,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":102,"author":{"gitId":"zsiggg"},"content":"        if (characteristics \u003d\u003d null) {","lastModifiedDate":"2022-10-19"},{"lineNumber":103,"author":{"gitId":"zsiggg"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-10-19"},{"lineNumber":104,"author":{"gitId":"zsiggg"},"content":"                    Characteristics.class.getSimpleName()));","lastModifiedDate":"2022-10-19"},{"lineNumber":105,"author":{"gitId":"zsiggg"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":106,"author":{"gitId":"zsiggg"},"content":"        if (!characteristics.isEmpty()","lastModifiedDate":"2022-10-19"},{"lineNumber":107,"author":{"gitId":"zsiggg"},"content":"                \u0026\u0026 !Characteristics.isValidCharacteristics(characteristics)) {","lastModifiedDate":"2022-10-19"},{"lineNumber":108,"author":{"gitId":"zsiggg"},"content":"            throw new IllegalValueException(Characteristics.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-19"},{"lineNumber":109,"author":{"gitId":"zsiggg"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":110,"author":{"gitId":"zsiggg"},"content":"        final Characteristics modelCharacteristics \u003d characteristics.isEmpty()","lastModifiedDate":"2022-10-19"},{"lineNumber":111,"author":{"gitId":"zsiggg"},"content":"                ? null","lastModifiedDate":"2022-10-19"},{"lineNumber":112,"author":{"gitId":"zsiggg"},"content":"                : new Characteristics(characteristics);","lastModifiedDate":"2022-10-19"},{"lineNumber":113,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":114,"author":{"gitId":"riccqi"},"content":"        if (owner \u003d\u003d null) {","lastModifiedDate":"2022-10-20"},{"lineNumber":115,"author":{"gitId":"zsiggg"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-10-19"},{"lineNumber":116,"author":{"gitId":"riccqi"},"content":"                    Owner.class.getSimpleName()));","lastModifiedDate":"2022-10-20"},{"lineNumber":117,"author":{"gitId":"zsiggg"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":118,"author":{"gitId":"riccqi"},"content":"        final Owner modelOwner \u003d owner.toModelType();","lastModifiedDate":"2022-10-20"},{"lineNumber":119,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":120,"author":{"gitId":"riccqi"},"content":"        return new Property(modelPropertyName, modelPrice, modelAddress, modelDescription,","lastModifiedDate":"2022-10-20"},{"lineNumber":121,"author":{"gitId":"riccqi"},"content":"                modelCharacteristics, modelOwner);","lastModifiedDate":"2022-10-20"},{"lineNumber":122,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":123,"author":{"gitId":"zsiggg"},"content":"}","lastModifiedDate":"2022-10-19"}],"authorContributionMap":{"riccqi":12,"zsiggg":111}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"jchilling"},"content":"import seedu.address.model.person.Priority;","lastModifiedDate":"2022-10-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"jchilling"},"content":" * Jackson-friendly version of {@link Priority}.","lastModifiedDate":"2022-10-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"class JsonAdaptedTag {","lastModifiedDate":"2018-12-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"jchilling"},"content":"    private final String specifiedPriority;","lastModifiedDate":"2022-10-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"jchilling"},"content":"        this.specifiedPriority \u003d tagName;","lastModifiedDate":"2022-10-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"jchilling"},"content":"    public JsonAdaptedTag(Priority source) {","lastModifiedDate":"2022-10-19"},{"lineNumber":28,"author":{"gitId":"jchilling"},"content":"        specifiedPriority \u003d source.toString();","lastModifiedDate":"2022-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"jchilling"},"content":"    public String getPriority() {","lastModifiedDate":"2022-10-19"},{"lineNumber":33,"author":{"gitId":"jchilling"},"content":"        return specifiedPriority;","lastModifiedDate":"2022-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"jchilling"},"content":"    public Priority toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-19"},{"lineNumber":42,"author":{"gitId":"jchilling"},"content":"        if (!Priority.isValidPriority(specifiedPriority)) {","lastModifiedDate":"2022-10-19"},{"lineNumber":43,"author":{"gitId":"jchilling"},"content":"            throw new IllegalValueException(Priority.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"jchilling"},"content":"        return new Priority(specifiedPriority);","lastModifiedDate":"2022-10-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"jchilling":12,"-":36}},{"path":"src/main/java/seedu/address/storage/JsonAddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"zsiggg"},"content":"import seedu.address.model.ReadOnlyPersonBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"zsiggg"},"content":" * A class to access PersonBook data stored as a json file on the hard disk.","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorage implements AddressBookStorage {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonAddressBookStorage.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public JsonAddressBookStorage(Path filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"zsiggg"},"content":"    public Optional\u003cReadOnlyPersonBook\u003e readAddressBook() throws DataConversionException {","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return readAddressBook(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Similar to {@link #readAddressBook()}.","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"zsiggg"},"content":"    public Optional\u003cReadOnlyPersonBook\u003e readAddressBook(Path filePath) throws DataConversionException {","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Optional\u003cJsonSerializableAddressBook\u003e jsonAddressBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                filePath, JsonSerializableAddressBook.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!jsonAddressBook.isPresent()) {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Optional.of(jsonAddressBook.get().toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"zsiggg"},"content":"    public void saveAddressBook(ReadOnlyPersonBook addressBook) throws IOException {","lastModifiedDate":"2022-10-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"zsiggg"},"content":"     * Similar to {@link #saveAddressBook(ReadOnlyPersonBook)}.","lastModifiedDate":"2022-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"zsiggg"},"content":"    public void saveAddressBook(ReadOnlyPersonBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2022-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(addressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableAddressBook(addressBook), filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"zsiggg":7,"-":73}},{"path":"src/main/java/seedu/address/storage/JsonPropertyBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zsiggg"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-10-19"},{"lineNumber":2,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":3,"author":{"gitId":"zsiggg"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-19"},{"lineNumber":4,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":5,"author":{"gitId":"zsiggg"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-19"},{"lineNumber":6,"author":{"gitId":"zsiggg"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-19"},{"lineNumber":7,"author":{"gitId":"zsiggg"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-19"},{"lineNumber":8,"author":{"gitId":"zsiggg"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-19"},{"lineNumber":9,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":10,"author":{"gitId":"zsiggg"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-10-19"},{"lineNumber":11,"author":{"gitId":"zsiggg"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-19"},{"lineNumber":12,"author":{"gitId":"zsiggg"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-19"},{"lineNumber":13,"author":{"gitId":"zsiggg"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2022-10-19"},{"lineNumber":14,"author":{"gitId":"zsiggg"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2022-10-19"},{"lineNumber":15,"author":{"gitId":"zsiggg"},"content":"import seedu.address.model.ReadOnlyPropertyBook;","lastModifiedDate":"2022-10-19"},{"lineNumber":16,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":17,"author":{"gitId":"zsiggg"},"content":"/**","lastModifiedDate":"2022-10-19"},{"lineNumber":18,"author":{"gitId":"zsiggg"},"content":" * A class to access PersonBook data stored as a json file on the hard disk.","lastModifiedDate":"2022-10-19"},{"lineNumber":19,"author":{"gitId":"zsiggg"},"content":" */","lastModifiedDate":"2022-10-19"},{"lineNumber":20,"author":{"gitId":"zsiggg"},"content":"public class JsonPropertyBookStorage implements PropertyBookStorage {","lastModifiedDate":"2022-10-19"},{"lineNumber":21,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":22,"author":{"gitId":"zsiggg"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonPropertyBookStorage.class);","lastModifiedDate":"2022-10-19"},{"lineNumber":23,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":24,"author":{"gitId":"zsiggg"},"content":"    private Path filePath;","lastModifiedDate":"2022-10-19"},{"lineNumber":25,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":26,"author":{"gitId":"zsiggg"},"content":"    public JsonPropertyBookStorage(Path filePath) {","lastModifiedDate":"2022-10-19"},{"lineNumber":27,"author":{"gitId":"zsiggg"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-10-19"},{"lineNumber":28,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":29,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":30,"author":{"gitId":"zsiggg"},"content":"    public Path getPropertyBookFilePath() {","lastModifiedDate":"2022-10-19"},{"lineNumber":31,"author":{"gitId":"zsiggg"},"content":"        return filePath;","lastModifiedDate":"2022-10-19"},{"lineNumber":32,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":33,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":34,"author":{"gitId":"zsiggg"},"content":"    @Override","lastModifiedDate":"2022-10-19"},{"lineNumber":35,"author":{"gitId":"zsiggg"},"content":"    public Optional\u003cReadOnlyPropertyBook\u003e readPropertyBook() throws DataConversionException {","lastModifiedDate":"2022-10-19"},{"lineNumber":36,"author":{"gitId":"zsiggg"},"content":"        return readPropertyBook(filePath);","lastModifiedDate":"2022-10-19"},{"lineNumber":37,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":38,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":39,"author":{"gitId":"zsiggg"},"content":"    /**","lastModifiedDate":"2022-10-19"},{"lineNumber":40,"author":{"gitId":"zsiggg"},"content":"     * Similar to {@link #readPropertyBook()}.","lastModifiedDate":"2022-10-19"},{"lineNumber":41,"author":{"gitId":"zsiggg"},"content":"     *","lastModifiedDate":"2022-10-19"},{"lineNumber":42,"author":{"gitId":"zsiggg"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2022-10-19"},{"lineNumber":43,"author":{"gitId":"zsiggg"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2022-10-19"},{"lineNumber":44,"author":{"gitId":"zsiggg"},"content":"     */","lastModifiedDate":"2022-10-19"},{"lineNumber":45,"author":{"gitId":"zsiggg"},"content":"    public Optional\u003cReadOnlyPropertyBook\u003e readPropertyBook(Path filePath) throws DataConversionException {","lastModifiedDate":"2022-10-19"},{"lineNumber":46,"author":{"gitId":"zsiggg"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2022-10-19"},{"lineNumber":47,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":48,"author":{"gitId":"zsiggg"},"content":"        Optional\u003cJsonSerializablePropertyBook\u003e jsonPropertyBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2022-10-19"},{"lineNumber":49,"author":{"gitId":"zsiggg"},"content":"                filePath, JsonSerializablePropertyBook.class);","lastModifiedDate":"2022-10-19"},{"lineNumber":50,"author":{"gitId":"zsiggg"},"content":"        if (!jsonPropertyBook.isPresent()) {","lastModifiedDate":"2022-10-19"},{"lineNumber":51,"author":{"gitId":"zsiggg"},"content":"            return Optional.empty();","lastModifiedDate":"2022-10-19"},{"lineNumber":52,"author":{"gitId":"zsiggg"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":53,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":54,"author":{"gitId":"zsiggg"},"content":"        try {","lastModifiedDate":"2022-10-19"},{"lineNumber":55,"author":{"gitId":"zsiggg"},"content":"            return Optional.of(jsonPropertyBook.get().toModelType());","lastModifiedDate":"2022-10-19"},{"lineNumber":56,"author":{"gitId":"zsiggg"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2022-10-19"},{"lineNumber":57,"author":{"gitId":"zsiggg"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2022-10-19"},{"lineNumber":58,"author":{"gitId":"zsiggg"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2022-10-19"},{"lineNumber":59,"author":{"gitId":"zsiggg"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":60,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":61,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":62,"author":{"gitId":"zsiggg"},"content":"    @Override","lastModifiedDate":"2022-10-19"},{"lineNumber":63,"author":{"gitId":"zsiggg"},"content":"    public void savePropertyBook(ReadOnlyPropertyBook propertyBook) throws IOException {","lastModifiedDate":"2022-10-19"},{"lineNumber":64,"author":{"gitId":"zsiggg"},"content":"        savePropertyBook(propertyBook, filePath);","lastModifiedDate":"2022-10-19"},{"lineNumber":65,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":66,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":67,"author":{"gitId":"zsiggg"},"content":"    /**","lastModifiedDate":"2022-10-19"},{"lineNumber":68,"author":{"gitId":"zsiggg"},"content":"     * Similar to {@link #savePropertyBook(ReadOnlyPropertyBook)}.","lastModifiedDate":"2022-10-19"},{"lineNumber":69,"author":{"gitId":"zsiggg"},"content":"     *","lastModifiedDate":"2022-10-19"},{"lineNumber":70,"author":{"gitId":"zsiggg"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2022-10-19"},{"lineNumber":71,"author":{"gitId":"zsiggg"},"content":"     */","lastModifiedDate":"2022-10-19"},{"lineNumber":72,"author":{"gitId":"zsiggg"},"content":"    public void savePropertyBook(ReadOnlyPropertyBook propertyBook, Path filePath) throws IOException {","lastModifiedDate":"2022-10-19"},{"lineNumber":73,"author":{"gitId":"zsiggg"},"content":"        requireNonNull(propertyBook);","lastModifiedDate":"2022-10-19"},{"lineNumber":74,"author":{"gitId":"zsiggg"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2022-10-19"},{"lineNumber":75,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":76,"author":{"gitId":"zsiggg"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2022-10-19"},{"lineNumber":77,"author":{"gitId":"zsiggg"},"content":"        JsonUtil.saveJsonFile(new JsonSerializablePropertyBook(propertyBook), filePath);","lastModifiedDate":"2022-10-19"},{"lineNumber":78,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":79,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":80,"author":{"gitId":"zsiggg"},"content":"}","lastModifiedDate":"2022-10-19"}],"authorContributionMap":{"zsiggg":80}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"zsiggg"},"content":"import seedu.address.model.PersonBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"zsiggg"},"content":"import seedu.address.model.ReadOnlyPersonBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"zsiggg"},"content":" * An Immutable PersonBook that is serializable to JSON format.","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"zsiggg"},"content":"     * Converts a given {@code ReadOnlyPersonBook} into this class for Jackson use.","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"zsiggg"},"content":"    public JsonSerializableAddressBook(ReadOnlyPersonBook source) {","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"zsiggg"},"content":"     * Converts this address book into the model\u0027s {@code PersonBook} object.","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"zsiggg"},"content":"    public PersonBook toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"zsiggg"},"content":"        PersonBook personBook \u003d new PersonBook();","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"zsiggg"},"content":"            if (personBook.hasPerson(person)) {","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"zsiggg"},"content":"            personBook.addPerson(person);","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"zsiggg"},"content":"        return personBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"zsiggg":11,"-":49}},{"path":"src/main/java/seedu/address/storage/JsonSerializablePropertyBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zsiggg"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-10-19"},{"lineNumber":2,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":3,"author":{"gitId":"zsiggg"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-19"},{"lineNumber":4,"author":{"gitId":"zsiggg"},"content":"import java.util.List;","lastModifiedDate":"2022-10-19"},{"lineNumber":5,"author":{"gitId":"zsiggg"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-19"},{"lineNumber":6,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":7,"author":{"gitId":"zsiggg"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-10-19"},{"lineNumber":8,"author":{"gitId":"zsiggg"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-10-19"},{"lineNumber":9,"author":{"gitId":"zsiggg"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2022-10-19"},{"lineNumber":10,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":11,"author":{"gitId":"zsiggg"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-19"},{"lineNumber":12,"author":{"gitId":"zsiggg"},"content":"import seedu.address.model.PropertyBook;","lastModifiedDate":"2022-10-19"},{"lineNumber":13,"author":{"gitId":"zsiggg"},"content":"import seedu.address.model.ReadOnlyPropertyBook;","lastModifiedDate":"2022-10-19"},{"lineNumber":14,"author":{"gitId":"zsiggg"},"content":"import seedu.address.model.property.Property;","lastModifiedDate":"2022-10-19"},{"lineNumber":15,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":16,"author":{"gitId":"zsiggg"},"content":"/**","lastModifiedDate":"2022-10-19"},{"lineNumber":17,"author":{"gitId":"zsiggg"},"content":" * An Immutable PropertyBook that is serializable to JSON format.","lastModifiedDate":"2022-10-19"},{"lineNumber":18,"author":{"gitId":"zsiggg"},"content":" */","lastModifiedDate":"2022-10-19"},{"lineNumber":19,"author":{"gitId":"zsiggg"},"content":"@JsonRootName(value \u003d \"propertyBook\")","lastModifiedDate":"2022-10-19"},{"lineNumber":20,"author":{"gitId":"zsiggg"},"content":"class JsonSerializablePropertyBook {","lastModifiedDate":"2022-10-19"},{"lineNumber":21,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":22,"author":{"gitId":"zsiggg"},"content":"    public static final String MESSAGE_DUPLICATE_PROPERTY \u003d \"Properties list contains duplicate property.\";","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":24,"author":{"gitId":"zsiggg"},"content":"    private final List\u003cJsonAdaptedProperty\u003e properties \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-19"},{"lineNumber":25,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":26,"author":{"gitId":"zsiggg"},"content":"    /**","lastModifiedDate":"2022-10-19"},{"lineNumber":27,"author":{"gitId":"zsiggg"},"content":"     * Constructs a {@code JsonSerializablePropertyBook} with the given properties.","lastModifiedDate":"2022-10-19"},{"lineNumber":28,"author":{"gitId":"zsiggg"},"content":"     */","lastModifiedDate":"2022-10-19"},{"lineNumber":29,"author":{"gitId":"zsiggg"},"content":"    @JsonCreator","lastModifiedDate":"2022-10-19"},{"lineNumber":30,"author":{"gitId":"zsiggg"},"content":"    public JsonSerializablePropertyBook(@JsonProperty(\"properties\") List\u003cJsonAdaptedProperty\u003e properties) {","lastModifiedDate":"2022-10-19"},{"lineNumber":31,"author":{"gitId":"zsiggg"},"content":"        this.properties.addAll(properties);","lastModifiedDate":"2022-10-19"},{"lineNumber":32,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":33,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":34,"author":{"gitId":"zsiggg"},"content":"    /**","lastModifiedDate":"2022-10-19"},{"lineNumber":35,"author":{"gitId":"zsiggg"},"content":"     * Converts a given {@code ReadOnlyPropertyBook} into this class for Jackson use.","lastModifiedDate":"2022-10-19"},{"lineNumber":36,"author":{"gitId":"zsiggg"},"content":"     *","lastModifiedDate":"2022-10-19"},{"lineNumber":37,"author":{"gitId":"zsiggg"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializablePropertyBook}.","lastModifiedDate":"2022-10-19"},{"lineNumber":38,"author":{"gitId":"zsiggg"},"content":"     */","lastModifiedDate":"2022-10-19"},{"lineNumber":39,"author":{"gitId":"zsiggg"},"content":"    public JsonSerializablePropertyBook(ReadOnlyPropertyBook source) {","lastModifiedDate":"2022-10-19"},{"lineNumber":40,"author":{"gitId":"zsiggg"},"content":"        properties.addAll(source.getPropertyList().stream().map(JsonAdaptedProperty::new).collect(Collectors.toList()));","lastModifiedDate":"2022-10-19"},{"lineNumber":41,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":42,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":43,"author":{"gitId":"zsiggg"},"content":"    /**","lastModifiedDate":"2022-10-19"},{"lineNumber":44,"author":{"gitId":"zsiggg"},"content":"     * Converts this property book into the model\u0027s {@code PropertyBook} object.","lastModifiedDate":"2022-10-19"},{"lineNumber":45,"author":{"gitId":"zsiggg"},"content":"     *","lastModifiedDate":"2022-10-19"},{"lineNumber":46,"author":{"gitId":"zsiggg"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2022-10-19"},{"lineNumber":47,"author":{"gitId":"zsiggg"},"content":"     */","lastModifiedDate":"2022-10-19"},{"lineNumber":48,"author":{"gitId":"zsiggg"},"content":"    public PropertyBook toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-19"},{"lineNumber":49,"author":{"gitId":"zsiggg"},"content":"        PropertyBook propertyBook \u003d new PropertyBook();","lastModifiedDate":"2022-10-19"},{"lineNumber":50,"author":{"gitId":"zsiggg"},"content":"        for (JsonAdaptedProperty jsonAdaptedProperty : properties) {","lastModifiedDate":"2022-10-19"},{"lineNumber":51,"author":{"gitId":"zsiggg"},"content":"            Property property \u003d jsonAdaptedProperty.toModelType();","lastModifiedDate":"2022-10-19"},{"lineNumber":52,"author":{"gitId":"zsiggg"},"content":"            if (propertyBook.hasProperty(property)) {","lastModifiedDate":"2022-10-19"},{"lineNumber":53,"author":{"gitId":"zsiggg"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PROPERTY);","lastModifiedDate":"2022-10-20"},{"lineNumber":54,"author":{"gitId":"zsiggg"},"content":"            }","lastModifiedDate":"2022-10-19"},{"lineNumber":55,"author":{"gitId":"zsiggg"},"content":"            propertyBook.addProperty(property);","lastModifiedDate":"2022-10-19"},{"lineNumber":56,"author":{"gitId":"zsiggg"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":57,"author":{"gitId":"zsiggg"},"content":"        return propertyBook;","lastModifiedDate":"2022-10-19"},{"lineNumber":58,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":59,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":60,"author":{"gitId":"zsiggg"},"content":"}","lastModifiedDate":"2022-10-19"}],"authorContributionMap":{"zsiggg":60}},{"path":"src/main/java/seedu/address/storage/PropertyBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zsiggg"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-10-19"},{"lineNumber":2,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":3,"author":{"gitId":"zsiggg"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-19"},{"lineNumber":4,"author":{"gitId":"zsiggg"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-19"},{"lineNumber":5,"author":{"gitId":"zsiggg"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-19"},{"lineNumber":6,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":7,"author":{"gitId":"zsiggg"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-19"},{"lineNumber":8,"author":{"gitId":"zsiggg"},"content":"import seedu.address.model.PropertyBook;","lastModifiedDate":"2022-10-19"},{"lineNumber":9,"author":{"gitId":"zsiggg"},"content":"import seedu.address.model.ReadOnlyPropertyBook;","lastModifiedDate":"2022-10-19"},{"lineNumber":10,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":11,"author":{"gitId":"zsiggg"},"content":"/**","lastModifiedDate":"2022-10-19"},{"lineNumber":12,"author":{"gitId":"zsiggg"},"content":" * Represents a storage for {@link PropertyBook}.","lastModifiedDate":"2022-10-19"},{"lineNumber":13,"author":{"gitId":"zsiggg"},"content":" */","lastModifiedDate":"2022-10-19"},{"lineNumber":14,"author":{"gitId":"zsiggg"},"content":"public interface PropertyBookStorage {","lastModifiedDate":"2022-10-19"},{"lineNumber":15,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":16,"author":{"gitId":"zsiggg"},"content":"    /**","lastModifiedDate":"2022-10-19"},{"lineNumber":17,"author":{"gitId":"zsiggg"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2022-10-19"},{"lineNumber":18,"author":{"gitId":"zsiggg"},"content":"     */","lastModifiedDate":"2022-10-19"},{"lineNumber":19,"author":{"gitId":"zsiggg"},"content":"    Path getPropertyBookFilePath();","lastModifiedDate":"2022-10-19"},{"lineNumber":20,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":21,"author":{"gitId":"zsiggg"},"content":"    /**","lastModifiedDate":"2022-10-19"},{"lineNumber":22,"author":{"gitId":"zsiggg"},"content":"     * Returns PropertyBook data as a {@link ReadOnlyPropertyBook}.","lastModifiedDate":"2022-10-19"},{"lineNumber":23,"author":{"gitId":"zsiggg"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2022-10-19"},{"lineNumber":24,"author":{"gitId":"zsiggg"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2022-10-19"},{"lineNumber":25,"author":{"gitId":"zsiggg"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2022-10-19"},{"lineNumber":26,"author":{"gitId":"zsiggg"},"content":"     */","lastModifiedDate":"2022-10-19"},{"lineNumber":27,"author":{"gitId":"zsiggg"},"content":"    Optional\u003cReadOnlyPropertyBook\u003e readPropertyBook() throws DataConversionException, IOException;","lastModifiedDate":"2022-10-19"},{"lineNumber":28,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":29,"author":{"gitId":"zsiggg"},"content":"    /**","lastModifiedDate":"2022-10-19"},{"lineNumber":30,"author":{"gitId":"zsiggg"},"content":"     * @see #getPropertyBookFilePath()","lastModifiedDate":"2022-10-19"},{"lineNumber":31,"author":{"gitId":"zsiggg"},"content":"     */","lastModifiedDate":"2022-10-19"},{"lineNumber":32,"author":{"gitId":"zsiggg"},"content":"    Optional\u003cReadOnlyPropertyBook\u003e readPropertyBook(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2022-10-19"},{"lineNumber":33,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":34,"author":{"gitId":"zsiggg"},"content":"    /**","lastModifiedDate":"2022-10-19"},{"lineNumber":35,"author":{"gitId":"zsiggg"},"content":"     * Saves the given {@link ReadOnlyPropertyBook} to the storage.","lastModifiedDate":"2022-10-19"},{"lineNumber":36,"author":{"gitId":"zsiggg"},"content":"     * @param propertyBook cannot be null.","lastModifiedDate":"2022-10-19"},{"lineNumber":37,"author":{"gitId":"zsiggg"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2022-10-19"},{"lineNumber":38,"author":{"gitId":"zsiggg"},"content":"     */","lastModifiedDate":"2022-10-19"},{"lineNumber":39,"author":{"gitId":"zsiggg"},"content":"    void savePropertyBook(ReadOnlyPropertyBook propertyBook) throws IOException;","lastModifiedDate":"2022-10-19"},{"lineNumber":40,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":41,"author":{"gitId":"zsiggg"},"content":"    /**","lastModifiedDate":"2022-10-19"},{"lineNumber":42,"author":{"gitId":"zsiggg"},"content":"     * @see #savePropertyBook(ReadOnlyPropertyBook)","lastModifiedDate":"2022-10-19"},{"lineNumber":43,"author":{"gitId":"zsiggg"},"content":"     */","lastModifiedDate":"2022-10-19"},{"lineNumber":44,"author":{"gitId":"zsiggg"},"content":"    void savePropertyBook(ReadOnlyPropertyBook propertyBook, Path filePath) throws IOException;","lastModifiedDate":"2022-10-19"},{"lineNumber":45,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":46,"author":{"gitId":"zsiggg"},"content":"}","lastModifiedDate":"2022-10-19"}],"authorContributionMap":{"zsiggg":46}},{"path":"src/main/java/seedu/address/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"zsiggg"},"content":"import seedu.address.model.ReadOnlyPersonBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"zsiggg"},"content":"public interface Storage extends AddressBookStorage, UserPrefsStorage, PropertyBookStorage {","lastModifiedDate":"2022-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"zsiggg"},"content":"    Optional\u003cReadOnlyPersonBook\u003e readAddressBook() throws DataConversionException, IOException;","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"zsiggg"},"content":"    void saveAddressBook(ReadOnlyPersonBook addressBook) throws IOException;","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"zsiggg":4,"-":28}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"zsiggg"},"content":"import seedu.address.model.ReadOnlyPersonBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"zsiggg"},"content":"import seedu.address.model.ReadOnlyPropertyBook;","lastModifiedDate":"2022-10-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"zsiggg"},"content":" * Manages storage of PersonBook data in local storage.","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private AddressBookStorage addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":23,"author":{"gitId":"zsiggg"},"content":"    private PropertyBookStorage propertyBookStorage;","lastModifiedDate":"2022-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"zsiggg"},"content":"    public StorageManager(AddressBookStorage addressBookStorage, PropertyBookStorage propertyBookStorage,","lastModifiedDate":"2022-10-19"},{"lineNumber":29,"author":{"gitId":"zsiggg"},"content":"                          UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2022-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.addressBookStorage \u003d addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"zsiggg"},"content":"        this.propertyBookStorage \u003d propertyBookStorage;","lastModifiedDate":"2022-10-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"zsiggg"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d PersonBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return addressBookStorage.getAddressBookFilePath();","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"zsiggg"},"content":"    public Optional\u003cReadOnlyPersonBook\u003e readAddressBook() throws DataConversionException, IOException {","lastModifiedDate":"2022-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return readAddressBook(addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"zsiggg"},"content":"    public Optional\u003cReadOnlyPersonBook\u003e readAddressBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2022-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return addressBookStorage.readAddressBook(filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"zsiggg"},"content":"    public void saveAddressBook(ReadOnlyPersonBook addressBook) throws IOException {","lastModifiedDate":"2022-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":77,"author":{"gitId":"zsiggg"},"content":"    public void saveAddressBook(ReadOnlyPersonBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2022-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        addressBookStorage.saveAddressBook(addressBook, filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"zsiggg"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d PropertyBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-19"},{"lineNumber":83,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":84,"author":{"gitId":"zsiggg"},"content":"    @Override","lastModifiedDate":"2022-10-19"},{"lineNumber":85,"author":{"gitId":"zsiggg"},"content":"    public Path getPropertyBookFilePath() {","lastModifiedDate":"2022-10-19"},{"lineNumber":86,"author":{"gitId":"zsiggg"},"content":"        return propertyBookStorage.getPropertyBookFilePath();","lastModifiedDate":"2022-10-19"},{"lineNumber":87,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":88,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":89,"author":{"gitId":"zsiggg"},"content":"    @Override","lastModifiedDate":"2022-10-19"},{"lineNumber":90,"author":{"gitId":"zsiggg"},"content":"    public Optional\u003cReadOnlyPropertyBook\u003e readPropertyBook() throws DataConversionException, IOException {","lastModifiedDate":"2022-10-19"},{"lineNumber":91,"author":{"gitId":"zsiggg"},"content":"        return readPropertyBook(propertyBookStorage.getPropertyBookFilePath());","lastModifiedDate":"2022-10-19"},{"lineNumber":92,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":93,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":94,"author":{"gitId":"zsiggg"},"content":"    @Override","lastModifiedDate":"2022-10-19"},{"lineNumber":95,"author":{"gitId":"zsiggg"},"content":"    public Optional\u003cReadOnlyPropertyBook\u003e readPropertyBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2022-10-19"},{"lineNumber":96,"author":{"gitId":"zsiggg"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2022-10-19"},{"lineNumber":97,"author":{"gitId":"zsiggg"},"content":"        return propertyBookStorage.readPropertyBook(filePath);","lastModifiedDate":"2022-10-19"},{"lineNumber":98,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":99,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":100,"author":{"gitId":"zsiggg"},"content":"    @Override","lastModifiedDate":"2022-10-19"},{"lineNumber":101,"author":{"gitId":"zsiggg"},"content":"    public void savePropertyBook(ReadOnlyPropertyBook propertyBook) throws IOException {","lastModifiedDate":"2022-10-19"},{"lineNumber":102,"author":{"gitId":"zsiggg"},"content":"        savePropertyBook(propertyBook, propertyBookStorage.getPropertyBookFilePath());","lastModifiedDate":"2022-10-19"},{"lineNumber":103,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":104,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":105,"author":{"gitId":"zsiggg"},"content":"    @Override","lastModifiedDate":"2022-10-19"},{"lineNumber":106,"author":{"gitId":"zsiggg"},"content":"    public void savePropertyBook(ReadOnlyPropertyBook propertyBook, Path filePath) throws IOException {","lastModifiedDate":"2022-10-19"},{"lineNumber":107,"author":{"gitId":"zsiggg"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2022-10-19"},{"lineNumber":108,"author":{"gitId":"zsiggg"},"content":"        propertyBookStorage.savePropertyBook(propertyBook, filePath);","lastModifiedDate":"2022-10-19"},{"lineNumber":109,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":110,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"zsiggg":41,"-":70}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"chngchngchng"},"content":"    private PropertyListPanel propertyListPanel;","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"chngchngchng"},"content":"    @FXML","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"chngchngchng"},"content":"    private StackPane propertyListPanelPlaceholder;","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"chngchngchng"},"content":"        propertyListPanel \u003d new PropertyListPanel(logic.getFilteredPropertyList());","lastModifiedDate":"2022-10-11"},{"lineNumber":121,"author":{"gitId":"chngchngchng"},"content":"        propertyListPanelPlaceholder.getChildren().add(propertyListPanel.getRoot());","lastModifiedDate":"2022-10-11"},{"lineNumber":122,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"zsiggg"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getPersonModelFilePath());","lastModifiedDate":"2022-10-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":177,"author":{"gitId":"chngchngchng"},"content":"    public PropertyListPanel getPropertyListPanel() {","lastModifiedDate":"2022-10-11"},{"lineNumber":178,"author":{"gitId":"chngchngchng"},"content":"        return propertyListPanel;","lastModifiedDate":"2022-10-11"},{"lineNumber":179,"author":{"gitId":"chngchngchng"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":180,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"zsiggg":1,"chngchngchng":11,"-":195}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"ChryslineLim"},"content":"import seedu.address.model.characteristics.Characteristics;","lastModifiedDate":"2022-10-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"ChryslineLim"},"content":"import seedu.address.model.pricerange.PriceRange;","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"zsiggg"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on PersonBook level 4\u003c/a\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"jchilling"},"content":"    private FlowPane priority;","lastModifiedDate":"2022-10-19"},{"lineNumber":43,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"riccqi"},"content":"    // TODO: set the following labels as optional","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"ChryslineLim"},"content":"    @FXML","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"ChryslineLim"},"content":"    private Label priceRange;","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"ChryslineLim"},"content":"    @FXML","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"ChryslineLim"},"content":"    private Label desiredCharacteristics;","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"jchilling"},"content":"        priority.getChildren().add(new Label(person.getPriority().toString()));","lastModifiedDate":"2022-10-19"},{"lineNumber":62,"author":{"gitId":"ChryslineLim"},"content":"        priceRange.setText(\"Budget: \" + person.getPriceRange()","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"ChryslineLim"},"content":"                .map(PriceRange::toString).orElse(\"Not Specified\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"ChryslineLim"},"content":"        desiredCharacteristics.setText(\"Desired Characteristics: \" + person","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"ChryslineLim"},"content":"                .getDesiredCharacteristics().map(Characteristics::toString)","lastModifiedDate":"2022-10-19"},{"lineNumber":66,"author":{"gitId":"ChryslineLim"},"content":"                .orElse(\"Not Specified\"));","lastModifiedDate":"2022-10-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"riccqi":2,"zsiggg":1,"jchilling":2,"-":70,"ChryslineLim":11}},{"path":"src/main/java/seedu/address/ui/PropertyCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chngchngchng"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"chngchngchng"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"chngchngchng"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"chngchngchng"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"chngchngchng"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"ChryslineLim"},"content":"import seedu.address.model.characteristics.Characteristics;","lastModifiedDate":"2022-10-19"},{"lineNumber":8,"author":{"gitId":"chngchngchng"},"content":"import seedu.address.model.property.Property;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"chngchngchng"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"chngchngchng"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"chngchngchng"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"chngchngchng"},"content":"public class PropertyCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"chngchngchng"},"content":"    private static final String FXML \u003d \"PropertyListCard.fxml\";","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"chngchngchng"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"chngchngchng"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"chngchngchng"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"chngchngchng"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"chngchngchng"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"chngchngchng"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"chngchngchng"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"chngchngchng"},"content":"    public final Property property;","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"chngchngchng"},"content":"    @FXML","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"chngchngchng"},"content":"    private HBox cardPane;","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"chngchngchng"},"content":"    @FXML","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"chngchngchng"},"content":"    private Label propertyName;","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"chngchngchng"},"content":"    @FXML","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"chngchngchng"},"content":"    private Label id;","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"chngchngchng"},"content":"    @FXML","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"chngchngchng"},"content":"    private Label price;","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"chngchngchng"},"content":"    @FXML","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"chngchngchng"},"content":"    private Label address;","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"chngchngchng"},"content":"    @FXML","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"chngchngchng"},"content":"    private Label description;","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"zsiggg"},"content":"    @FXML","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"riccqi"},"content":"    private Label ownerName;","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"riccqi"},"content":"    @FXML","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"riccqi"},"content":"    private Label ownerPhone;","lastModifiedDate":"2022-10-20"},{"lineNumber":44,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"ChryslineLim"},"content":"    // TODO: set the following label as optional","lastModifiedDate":"2022-10-19"},{"lineNumber":46,"author":{"gitId":"ChryslineLim"},"content":"    @FXML","lastModifiedDate":"2022-10-19"},{"lineNumber":47,"author":{"gitId":"ChryslineLim"},"content":"    private Label characteristics;","lastModifiedDate":"2022-10-19"},{"lineNumber":48,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":49,"author":{"gitId":"chngchngchng"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"chngchngchng"},"content":"     * Creates a {@code PropertyCard} with the given {@code Property} and index to display.","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"chngchngchng"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"chngchngchng"},"content":"    public PropertyCard(Property property, int displayedIndex) {","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"chngchngchng"},"content":"        super(FXML);","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"chngchngchng"},"content":"        this.property \u003d property;","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"chngchngchng"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"riccqi"},"content":"        propertyName.setText(property.getPropertyName().fullName);","lastModifiedDate":"2022-10-20"},{"lineNumber":57,"author":{"gitId":"chngchngchng"},"content":"        price.setText(property.getPrice().value);","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"chngchngchng"},"content":"        address.setText(property.getAddress().value);","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"chngchngchng"},"content":"        description.setText(property.getDescription().value);","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"ChryslineLim"},"content":"        characteristics.setText(\"Characteristics: \" + property","lastModifiedDate":"2022-10-19"},{"lineNumber":61,"author":{"gitId":"ChryslineLim"},"content":"                .getCharacteristics().map(Characteristics::toString)","lastModifiedDate":"2022-10-19"},{"lineNumber":62,"author":{"gitId":"ChryslineLim"},"content":"                .orElse(\"Not Specified\"));","lastModifiedDate":"2022-10-19"},{"lineNumber":63,"author":{"gitId":"riccqi"},"content":"        ownerName.setText(\"Owner Name: \" + property.getOwnerName());","lastModifiedDate":"2022-10-20"},{"lineNumber":64,"author":{"gitId":"riccqi"},"content":"        ownerPhone.setText(\"Owner Phone: \" + property.getOwnerPhone());","lastModifiedDate":"2022-10-20"},{"lineNumber":65,"author":{"gitId":"chngchngchng"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"chngchngchng"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"chngchngchng"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"chngchngchng"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"chngchngchng"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"chngchngchng"},"content":"            return true;","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"chngchngchng"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":74,"author":{"gitId":"chngchngchng"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-11"},{"lineNumber":75,"author":{"gitId":"chngchngchng"},"content":"        if (!(other instanceof PropertyCard)) {","lastModifiedDate":"2022-10-11"},{"lineNumber":76,"author":{"gitId":"chngchngchng"},"content":"            return false;","lastModifiedDate":"2022-10-11"},{"lineNumber":77,"author":{"gitId":"chngchngchng"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":78,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":79,"author":{"gitId":"chngchngchng"},"content":"        // state check","lastModifiedDate":"2022-10-11"},{"lineNumber":80,"author":{"gitId":"chngchngchng"},"content":"        PropertyCard card \u003d (PropertyCard) other;","lastModifiedDate":"2022-10-11"},{"lineNumber":81,"author":{"gitId":"chngchngchng"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2022-10-11"},{"lineNumber":82,"author":{"gitId":"chngchngchng"},"content":"                \u0026\u0026 property.equals(card.property);","lastModifiedDate":"2022-10-11"},{"lineNumber":83,"author":{"gitId":"chngchngchng"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":84,"author":{"gitId":"chngchngchng"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"riccqi":6,"zsiggg":1,"chngchngchng":69,"ChryslineLim":8}},{"path":"src/main/java/seedu/address/ui/PropertyListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chngchngchng"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"chngchngchng"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"chngchngchng"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"chngchngchng"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"chngchngchng"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"chngchngchng"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"chngchngchng"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"chngchngchng"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"chngchngchng"},"content":"import seedu.address.model.property.Property;","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"chngchngchng"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"chngchngchng"},"content":" * Panel containing the list of properties.","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"chngchngchng"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"chngchngchng"},"content":"public class PropertyListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"chngchngchng"},"content":"    private static final String FXML \u003d \"PropertyListPanel.fxml\";","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"chngchngchng"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PropertyListPanel.class);","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"chngchngchng"},"content":"    @FXML","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"chngchngchng"},"content":"    private ListView\u003cProperty\u003e propertyListView;","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"chngchngchng"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"chngchngchng"},"content":"     * Creates a {@code PropertyListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"chngchngchng"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"chngchngchng"},"content":"    public PropertyListPanel(ObservableList\u003cProperty\u003e propertyList) {","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"chngchngchng"},"content":"        super(FXML);","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"chngchngchng"},"content":"        propertyListView.setItems(propertyList);","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"chngchngchng"},"content":"        propertyListView.setCellFactory(listView -\u003e new PropertyListViewCell());","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"chngchngchng"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"chngchngchng"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"chngchngchng"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Property} using a {@code PropertyCard}.","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"chngchngchng"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"chngchngchng"},"content":"    class PropertyListViewCell extends ListCell\u003cProperty\u003e {","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"chngchngchng"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"chngchngchng"},"content":"        protected void updateItem(Property property, boolean empty) {","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"chngchngchng"},"content":"            super.updateItem(property, empty);","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"chngchngchng"},"content":"            if (empty || property \u003d\u003d null) {","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"chngchngchng"},"content":"                setGraphic(null);","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"chngchngchng"},"content":"                setText(null);","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"chngchngchng"},"content":"            } else {","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"chngchngchng"},"content":"                setGraphic(new PropertyCard(property, getIndex() + 1).getRoot());","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"chngchngchng"},"content":"            }","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"chngchngchng"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"chngchngchng"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"chngchngchng"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"chngchngchng":50}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"chngchngchng"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"chngchngchng"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"chngchngchng"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":16,"author":{"gitId":"chngchngchng"},"content":"\u003cfx:root minHeight\u003d\"600\" minWidth\u003d\"650.0\" onCloseRequest\u003d\"#handleExit\" resizable\u003d\"false\" title\u003d\"Address App\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/18\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":37,"author":{"gitId":"chngchngchng"},"content":"        \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"chngchngchng"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":43,"author":{"gitId":"chngchngchng"},"content":"        \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" maxHeight\u003d\"100\" minHeight\u003d\"100\" prefHeight\u003d\"100\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"chngchngchng"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":49,"author":{"gitId":"chngchngchng"},"content":"        \u003cHBox spacing\u003d\"20.0\" style\u003d\"-fx-background-color: #383838;\"\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"chngchngchng"},"content":"          \u003cVBox\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"chngchngchng"},"content":"          \u003cLabel style\u003d\"-fx-text-fill: white;\" text\u003d\"Buyer List\" textFill\u003d\"WHITE\"\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"chngchngchng"},"content":"                     \u003cVBox.margin\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"chngchngchng"},"content":"                        \u003cInsets bottom\u003d\"5.0\" left\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"chngchngchng"},"content":"                     \u003c/VBox.margin\u003e\u003c/Label\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"chngchngchng"},"content":"          \u003cVBox fx:id\u003d\"personList\" minWidth\u003d\"340.0\" prefWidth\u003d\"340\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":57,"author":{"gitId":"chngchngchng"},"content":"              \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":61,"author":{"gitId":"chngchngchng"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"chngchngchng"},"content":"          \u003cVBox\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"chngchngchng"},"content":"          \u003cLabel style\u003d\"-fx-text-fill: white;\" text\u003d\"Property List\" textFill\u003d\"WHITE\"\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"chngchngchng"},"content":"                     \u003cVBox.margin\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"chngchngchng"},"content":"                        \u003cInsets bottom\u003d\"5.0\" left\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"chngchngchng"},"content":"                     \u003c/VBox.margin\u003e\u003c/Label\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"chngchngchng"},"content":"          \u003cVBox fx:id\u003d\"propertyList\" minWidth\u003d\"340.0\" prefWidth\u003d\"340\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"chngchngchng"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"chngchngchng"},"content":"              \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"chngchngchng"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"chngchngchng"},"content":"            \u003cStackPane fx:id\u003d\"propertyListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"chngchngchng"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"chngchngchng"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":74,"author":{"gitId":"chngchngchng"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"chngchngchng":30,"-":50}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"jchilling"},"content":"      \u003cFlowPane fx:id\u003d\"priority\" /\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"ChryslineLim"},"content":"      \u003cLabel fx:id\u003d\"priceRange\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$priceRange\" /\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"ChryslineLim"},"content":"      \u003cLabel fx:id\u003d\"desiredCharacteristics\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$desiredCharacteristics\" /\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jchilling":1,"-":35,"ChryslineLim":2}},{"path":"src/main/resources/view/PropertyListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chngchngchng"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"chngchngchng"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"chngchngchng"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"chngchngchng"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"chngchngchng"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"chngchngchng"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"chngchngchng"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"chngchngchng"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"chngchngchng"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"chngchngchng"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"chngchngchng"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"chngchngchng"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"chngchngchng"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"chngchngchng"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"chngchngchng"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"chngchngchng"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"chngchngchng"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"chngchngchng"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"chngchngchng"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"chngchngchng"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"chngchngchng"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"chngchngchng"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"chngchngchng"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"chngchngchng"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"chngchngchng"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"chngchngchng"},"content":"        \u003cLabel fx:id\u003d\"propertyName\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"chngchngchng"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"chngchngchng"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"chngchngchng"},"content":"      \u003cLabel fx:id\u003d\"description\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$description\" /\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"chngchngchng"},"content":"      \u003cLabel fx:id\u003d\"price\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$price\" /\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"riccqi"},"content":"      \u003cLabel fx:id\u003d\"ownerName\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$ownerName\" /\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"riccqi"},"content":"      \u003cLabel fx:id\u003d\"ownerPhone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$ownerPhone\" /\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"ChryslineLim"},"content":"      \u003cLabel fx:id\u003d\"characteristics\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$characteristics\" /\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":36,"author":{"gitId":"chngchngchng"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"chngchngchng"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"chngchngchng"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"riccqi":2,"chngchngchng":35,"ChryslineLim":1}},{"path":"src/main/resources/view/PropertyListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chngchngchng"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"chngchngchng"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"chngchngchng"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"chngchngchng"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"chngchngchng"},"content":"  \u003cListView fx:id\u003d\"propertyListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"chngchngchng"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"chngchngchng":8}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.DESIRED_CHARACTERISTICS_DESC_AMY;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.PRICE_RANGE_DESC_AMY;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"jchilling"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.TAG_DESC_PRIORITY_HIGH;","lastModifiedDate":"2022-10-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"ChryslineLim"},"content":"import seedu.address.logic.commands.AddPersonCommand;","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":25,"author":{"gitId":"jchilling"},"content":"import seedu.address.logic.commands.ListBuyersCommand;","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"zsiggg"},"content":"import seedu.address.model.ReadOnlyPersonBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"zsiggg"},"content":"import seedu.address.storage.JsonPropertyBookStorage;","lastModifiedDate":"2022-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":53,"author":{"gitId":"zsiggg"},"content":"        JsonPropertyBookStorage propertyBookStorage \u003d new JsonPropertyBookStorage(","lastModifiedDate":"2022-10-19"},{"lineNumber":54,"author":{"gitId":"zsiggg"},"content":"                temporaryFolder.resolve(\"propertyBook.json\"));","lastModifiedDate":"2022-10-19"},{"lineNumber":55,"author":{"gitId":"zsiggg"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, propertyBookStorage, userPrefsStorage);","lastModifiedDate":"2022-10-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":67,"author":{"gitId":"jchilling"},"content":"        String deleteBuyerCommand \u003d \"deletebuyer 9\";","lastModifiedDate":"2022-10-13"},{"lineNumber":68,"author":{"gitId":"jchilling"},"content":"        assertCommandException(deleteBuyerCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":73,"author":{"gitId":"jchilling"},"content":"        String listCommand \u003d ListBuyersCommand.COMMAND_WORD;","lastModifiedDate":"2022-10-12"},{"lineNumber":74,"author":{"gitId":"jchilling"},"content":"        assertCommandSuccess(listCommand, ListBuyersCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2022-10-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":84,"author":{"gitId":"zsiggg"},"content":"        JsonPropertyBookStorage propertyBookStorage \u003d","lastModifiedDate":"2022-10-19"},{"lineNumber":85,"author":{"gitId":"zsiggg"},"content":"                new JsonPropertyBookStorage(temporaryFolder.resolve(\"ioExceptionPropertyBook.json\"));","lastModifiedDate":"2022-10-19"},{"lineNumber":86,"author":{"gitId":"zsiggg"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, propertyBookStorage, userPrefsStorage);","lastModifiedDate":"2022-10-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"ChryslineLim"},"content":"        String addCommand \u003d AddPersonCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2022-10-05"},{"lineNumber":91,"author":{"gitId":"jchilling"},"content":"                + ADDRESS_DESC_AMY + PRICE_RANGE_DESC_AMY + DESIRED_CHARACTERISTICS_DESC_AMY","lastModifiedDate":"2022-10-19"},{"lineNumber":92,"author":{"gitId":"jchilling"},"content":"                + TAG_DESC_PRIORITY_HIGH;","lastModifiedDate":"2022-10-19"},{"lineNumber":93,"author":{"gitId":"jchilling"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).build();","lastModifiedDate":"2022-10-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"zsiggg"},"content":"        Model expectedModel \u003d new ModelManager(model.getPersonModel(), model.getPropertyModel(), new UserPrefs());","lastModifiedDate":"2022-10-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":167,"author":{"gitId":"zsiggg"},"content":"        public void saveAddressBook(ReadOnlyPersonBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2022-10-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"riccqi":6,"zsiggg":10,"jchilling":9,"-":144,"ChryslineLim":2}},{"path":"src/test/java/seedu/address/logic/commands/AddPersonCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"riccqi"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalPersonsBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"riccqi"},"content":"import static seedu.address.testutil.TypicalProperties.getTypicalPropertyBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"ChryslineLim"},"content":"public class AddPersonCommandIntegrationTest {","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"riccqi"},"content":"        model \u003d new ModelManager(getTypicalPersonsBook(), getTypicalPropertyBook(), new UserPrefs());","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"zsiggg"},"content":"        Model expectedModel \u003d new ModelManager(model.getPersonModel(), model.getPropertyModel(), new UserPrefs());","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"ChryslineLim"},"content":"        assertCommandSuccess(new AddPersonCommand(validPerson), model,","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"ChryslineLim"},"content":"                String.format(AddPersonCommand.MESSAGE_SUCCESS, validPerson), expectedModel);","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":42,"author":{"gitId":"zsiggg"},"content":"        Person personInList \u003d model.getPersonModel().getPersonList().get(0);","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"ChryslineLim"},"content":"        assertCommandFailure(new AddPersonCommand(personInList), model, AddPersonCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"riccqi":5,"zsiggg":2,"-":35,"ChryslineLim":4}},{"path":"src/test/java/seedu/address/logic/commands/AddPersonCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":20,"author":{"gitId":"zsiggg"},"content":"import seedu.address.model.PersonBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"zsiggg"},"content":"import seedu.address.model.ReadOnlyPersonBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"zsiggg"},"content":"import seedu.address.model.ReadOnlyPropertyBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":25,"author":{"gitId":"chngchngchng"},"content":"import seedu.address.model.property.Property;","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"ChryslineLim"},"content":"public class AddPersonCommandTest {","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"ChryslineLim"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddPersonCommand(null));","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"ChryslineLim"},"content":"        CommandResult commandResult \u003d new AddPersonCommand(validPerson).execute(modelStub);","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"ChryslineLim"},"content":"        assertEquals(String.format(AddPersonCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"ChryslineLim"},"content":"        AddPersonCommand addPersonCommand \u003d new AddPersonCommand(validPerson);","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"ChryslineLim"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2022-10-06"},{"lineNumber":53,"author":{"gitId":"ChryslineLim"},"content":"                AddPersonCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addPersonCommand.execute(modelStub));","lastModifiedDate":"2022-10-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"ChryslineLim"},"content":"        AddPersonCommand addAliceCommand \u003d new AddPersonCommand(alice);","lastModifiedDate":"2022-10-05"},{"lineNumber":61,"author":{"gitId":"ChryslineLim"},"content":"        AddPersonCommand addBobCommand \u003d new AddPersonCommand(bob);","lastModifiedDate":"2022-10-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"ChryslineLim"},"content":"        AddPersonCommand addAliceCommandCopy \u003d new AddPersonCommand(alice);","lastModifiedDate":"2022-10-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"zsiggg"},"content":"        public Path getPersonModelFilePath() {","lastModifiedDate":"2022-10-11"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"zsiggg"},"content":"        public void setPersonModelFilePath(Path addressBookFilePath) {","lastModifiedDate":"2022-10-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"zsiggg"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":115,"author":{"gitId":"zsiggg"},"content":"        public Path getPropertyModelFilePath() {","lastModifiedDate":"2022-10-12"},{"lineNumber":116,"author":{"gitId":"zsiggg"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-12"},{"lineNumber":117,"author":{"gitId":"zsiggg"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":118,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":119,"author":{"gitId":"zsiggg"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":120,"author":{"gitId":"zsiggg"},"content":"        public void setPropertyModelFilePath(Path addressBookFilePath) {","lastModifiedDate":"2022-10-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":130,"author":{"gitId":"zsiggg"},"content":"        public void setPersonModel(ReadOnlyPersonBook newData) {","lastModifiedDate":"2022-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":135,"author":{"gitId":"zsiggg"},"content":"        public ReadOnlyPersonBook getPersonModel() {","lastModifiedDate":"2022-10-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2022-10-12"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-12"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":163,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":164,"author":{"gitId":"zsiggg"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":165,"author":{"gitId":"zsiggg"},"content":"        public void addProperty(Property property) {","lastModifiedDate":"2022-10-12"},{"lineNumber":166,"author":{"gitId":"zsiggg"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-12"},{"lineNumber":167,"author":{"gitId":"zsiggg"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":168,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":169,"author":{"gitId":"zsiggg"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":170,"author":{"gitId":"zsiggg"},"content":"        public void setPropertyModel(ReadOnlyPropertyBook newData) {","lastModifiedDate":"2022-10-13"},{"lineNumber":171,"author":{"gitId":"zsiggg"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-12"},{"lineNumber":172,"author":{"gitId":"zsiggg"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":173,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":174,"author":{"gitId":"zsiggg"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":175,"author":{"gitId":"zsiggg"},"content":"        public ReadOnlyPropertyBook getPropertyModel() {","lastModifiedDate":"2022-10-13"},{"lineNumber":176,"author":{"gitId":"zsiggg"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-12"},{"lineNumber":177,"author":{"gitId":"zsiggg"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":178,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":179,"author":{"gitId":"zsiggg"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":180,"author":{"gitId":"zsiggg"},"content":"        public boolean hasProperty(Property property) {","lastModifiedDate":"2022-10-12"},{"lineNumber":181,"author":{"gitId":"zsiggg"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-12"},{"lineNumber":182,"author":{"gitId":"zsiggg"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":183,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":184,"author":{"gitId":"zsiggg"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":185,"author":{"gitId":"zsiggg"},"content":"        public void deleteProperty(Property target) {","lastModifiedDate":"2022-10-12"},{"lineNumber":186,"author":{"gitId":"zsiggg"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-12"},{"lineNumber":187,"author":{"gitId":"zsiggg"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":188,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":189,"author":{"gitId":"zsiggg"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":190,"author":{"gitId":"zsiggg"},"content":"        public void setProperty(Property target, Property editedProperty) {","lastModifiedDate":"2022-10-12"},{"lineNumber":191,"author":{"gitId":"zsiggg"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-12"},{"lineNumber":192,"author":{"gitId":"zsiggg"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":193,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":194,"author":{"gitId":"chngchngchng"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":195,"author":{"gitId":"chngchngchng"},"content":"        public ObservableList\u003cProperty\u003e getFilteredPropertyList() {","lastModifiedDate":"2022-10-11"},{"lineNumber":196,"author":{"gitId":"chngchngchng"},"content":"            throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2022-10-11"},{"lineNumber":197,"author":{"gitId":"chngchngchng"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":198,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":200,"author":{"gitId":"zsiggg"},"content":"        public void updateFilteredPropertyList(Predicate\u003cProperty\u003e predicate) {","lastModifiedDate":"2022-10-12"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":203,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":225,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":226,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":239,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":243,"author":{"gitId":"zsiggg"},"content":"        public ReadOnlyPersonBook getPersonModel() {","lastModifiedDate":"2022-10-13"},{"lineNumber":244,"author":{"gitId":"zsiggg"},"content":"            return new PersonBook();","lastModifiedDate":"2022-10-13"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"zsiggg":48,"chngchngchng":6,"-":183,"ChryslineLim":11}},{"path":"src/test/java/seedu/address/logic/commands/BuyerCommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"ChryslineLim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CHARACTERISTICS;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"ChryslineLim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRICE_RANGE;","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"jchilling"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRIORITY;","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"zsiggg"},"content":"import seedu.address.model.PersonBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"zsiggg"},"content":"import seedu.address.model.PropertyBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"jchilling"},"content":"import seedu.address.model.property.Property;","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"jchilling"},"content":"import seedu.address.model.property.PropertyNameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"riccqi"},"content":"public class BuyerCommandTestUtil {","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"ChryslineLim"},"content":"    public static final String VALID_PRICE_RANGE_AMY \u003d \"200000 - 500000\";","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"ChryslineLim"},"content":"    public static final String VALID_PRICE_RANGE_BOB \u003d \"20 - 50\";","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"ChryslineLim"},"content":"    public static final String VALID_DESIRED_CHARACTERISTICS_AMY \u003d \"Toa Payoh; 5-Room\";","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"ChryslineLim"},"content":"    public static final String VALID_DESIRED_CHARACTERISTICS_BOB \u003d \"Jurong; 3-Room\";","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"jchilling"},"content":"    public static final String VALID_PRIORITY_HIGH \u003d \"HIGH\";","lastModifiedDate":"2022-10-19"},{"lineNumber":47,"author":{"gitId":"jchilling"},"content":"    public static final String VALID_PRIORITY_LOW \u003d \"LOW\";","lastModifiedDate":"2022-10-19"},{"lineNumber":48,"author":{"gitId":"jchilling"},"content":"    public static final String VALID_NAME_HOME \u003d \"Home\";","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"jchilling"},"content":"    public static final String VALID_ADDRESS_HOME \u003d \"25 College Avenue East\";","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"jchilling"},"content":"    public static final String VALID_PRICE_HOME \u003d \"0\";","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"jchilling"},"content":"    public static final String VALID_DESCRIPTION_HOME \u003d \"Tembu\";","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"ChryslineLim"},"content":"    public static final String PRICE_RANGE_DESC_AMY \u003d \" \" + PREFIX_PRICE_RANGE + VALID_PRICE_RANGE_AMY;","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"ChryslineLim"},"content":"    public static final String PRICE_RANGE_DESC_BOB \u003d \" \" + PREFIX_PRICE_RANGE + VALID_PRICE_RANGE_BOB;","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"ChryslineLim"},"content":"    public static final String DESIRED_CHARACTERISTICS_DESC_AMY \u003d \" \" + PREFIX_CHARACTERISTICS","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"ChryslineLim"},"content":"            + VALID_DESIRED_CHARACTERISTICS_AMY;","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"ChryslineLim"},"content":"    public static final String DESIRED_CHARACTERISTICS_DESC_BOB \u003d \" \" + PREFIX_CHARACTERISTICS","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"ChryslineLim"},"content":"            + VALID_DESIRED_CHARACTERISTICS_BOB;","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"jchilling"},"content":"    public static final String TAG_DESC_PRIORITY_HIGH \u003d \" \" + PREFIX_PRIORITY + VALID_PRIORITY_HIGH;","lastModifiedDate":"2022-10-20"},{"lineNumber":67,"author":{"gitId":"jchilling"},"content":"    public static final String TAG_DESC_PRIORITY_LOW \u003d \" \" + PREFIX_PRIORITY + VALID_PRIORITY_LOW;","lastModifiedDate":"2022-10-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"ChryslineLim"},"content":"    public static final String INVALID_PRICE_RANGE_DESC \u003d \" \" + PREFIX_PRICE_RANGE + \"200\"; // missing upper end value","lastModifiedDate":"2022-10-12"},{"lineNumber":74,"author":{"gitId":"ChryslineLim"},"content":"    public static final String INVALID_DESIRED_CHARACTERISTICS_DESC \u003d \" \" + PREFIX_CHARACTERISTICS;","lastModifiedDate":"2022-10-12"},{"lineNumber":75,"author":{"gitId":"ChryslineLim"},"content":"    // empty string not allowed for desired characteristics","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"jchilling"},"content":"    public static final String INVALID_PRIORITY_DESC \u003d \" \" + PREFIX_PRIORITY + \"zzz\";","lastModifiedDate":"2022-10-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":80,"author":{"gitId":"riccqi"},"content":"    public static final EditBuyerCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2022-10-12"},{"lineNumber":81,"author":{"gitId":"riccqi"},"content":"    public static final EditBuyerCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2022-10-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":86,"author":{"gitId":"ChryslineLim"},"content":"                .withPriceRange(VALID_PRICE_RANGE_AMY).withDesiredCharacteristics(VALID_DESIRED_CHARACTERISTICS_AMY)","lastModifiedDate":"2022-10-12"},{"lineNumber":87,"author":{"gitId":"jchilling"},"content":"                .withPriority(VALID_PRIORITY_HIGH).build();","lastModifiedDate":"2022-10-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":90,"author":{"gitId":"ChryslineLim"},"content":"                .withPriceRange(VALID_PRICE_RANGE_BOB).withDesiredCharacteristics(VALID_DESIRED_CHARACTERISTICS_BOB)","lastModifiedDate":"2022-10-12"},{"lineNumber":91,"author":{"gitId":"jchilling"},"content":"                .withPriority(VALID_PRIORITY_LOW).build();","lastModifiedDate":"2022-10-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":103,"author":{"gitId":"riccqi"},"content":"            System.out.println(expectedCommandResult.getFeedbackToUser());","lastModifiedDate":"2022-10-09"},{"lineNumber":104,"author":{"gitId":"riccqi"},"content":"            System.out.println(result.getFeedbackToUser());","lastModifiedDate":"2022-10-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":131,"author":{"gitId":"zsiggg"},"content":"        PersonBook expectedPersonBook \u003d new PersonBook(actualModel.getPersonModel());","lastModifiedDate":"2022-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":135,"author":{"gitId":"zsiggg"},"content":"        assertEquals(expectedPersonBook, actualModel.getPersonModel());","lastModifiedDate":"2022-10-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":138,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":139,"author":{"gitId":"jchilling"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":140,"author":{"gitId":"jchilling"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":141,"author":{"gitId":"jchilling"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":142,"author":{"gitId":"jchilling"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":143,"author":{"gitId":"zsiggg"},"content":"     * - the PropertyBook, filtered property list and selected property in {@code actualModel} remain unchanged","lastModifiedDate":"2022-10-13"},{"lineNumber":144,"author":{"gitId":"jchilling"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":145,"author":{"gitId":"jchilling"},"content":"    public static void assertPropertyCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2022-10-13"},{"lineNumber":146,"author":{"gitId":"jchilling"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2022-10-13"},{"lineNumber":147,"author":{"gitId":"jchilling"},"content":"        // only do so by copying its components.","lastModifiedDate":"2022-10-13"},{"lineNumber":148,"author":{"gitId":"zsiggg"},"content":"        PropertyBook expectedPropertyBook \u003d new PropertyBook(actualModel.getPropertyModel());","lastModifiedDate":"2022-10-13"},{"lineNumber":149,"author":{"gitId":"jchilling"},"content":"        List\u003cProperty\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPropertyList());","lastModifiedDate":"2022-10-13"},{"lineNumber":150,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":151,"author":{"gitId":"jchilling"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2022-10-13"},{"lineNumber":152,"author":{"gitId":"zsiggg"},"content":"        assertEquals(expectedPropertyBook, actualModel.getPropertyModel());","lastModifiedDate":"2022-10-13"},{"lineNumber":153,"author":{"gitId":"jchilling"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPropertyList());","lastModifiedDate":"2022-10-13"},{"lineNumber":154,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":155,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":156,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":171,"author":{"gitId":"jchilling"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":172,"author":{"gitId":"jchilling"},"content":"     * Updates {@code model}\u0027s filtered list to show only the property at the given {@code targetIndex} in the","lastModifiedDate":"2022-10-12"},{"lineNumber":173,"author":{"gitId":"jchilling"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2022-10-12"},{"lineNumber":174,"author":{"gitId":"jchilling"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":175,"author":{"gitId":"jchilling"},"content":"    public static void showPropertyAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2022-10-12"},{"lineNumber":176,"author":{"gitId":"jchilling"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPropertyList().size());","lastModifiedDate":"2022-10-12"},{"lineNumber":177,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":178,"author":{"gitId":"jchilling"},"content":"        Property property \u003d model.getFilteredPropertyList().get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-12"},{"lineNumber":179,"author":{"gitId":"riccqi"},"content":"        final String[] splitName \u003d property.getPropertyName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2022-10-20"},{"lineNumber":180,"author":{"gitId":"jchilling"},"content":"        model.updateFilteredPropertyList(new PropertyNameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2022-10-12"},{"lineNumber":181,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":182,"author":{"gitId":"jchilling"},"content":"        assertEquals(1, model.getFilteredPropertyList().size());","lastModifiedDate":"2022-10-12"},{"lineNumber":183,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":184,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":185,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"riccqi":6,"zsiggg":7,"jchilling":44,"-":112,"ChryslineLim":17}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"riccqi"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalPersonsBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"riccqi"},"content":"import static seedu.address.testutil.TypicalProperties.getTypicalPropertyBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"zsiggg"},"content":"import seedu.address.model.PersonBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"zsiggg"},"content":"import seedu.address.model.PropertyBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":27,"author":{"gitId":"riccqi"},"content":"        Model model \u003d new ModelManager(getTypicalPersonsBook(), getTypicalPropertyBook(), new UserPrefs());","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"riccqi"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalPersonsBook(), getTypicalPropertyBook(), new UserPrefs());","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"zsiggg"},"content":"        expectedModel.setPersonModel(new PersonBook());","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"zsiggg"},"content":"        expectedModel.setPropertyModel(new PropertyBook());","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"riccqi":5,"zsiggg":4,"-":26}},{"path":"src/test/java/seedu/address/logic/commands/DeleteBuyerCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"riccqi"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_ITEM;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"riccqi"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_ITEM;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"riccqi"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalPersonsBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"riccqi"},"content":"import static seedu.address.testutil.TypicalProperties.getTypicalPropertyBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"jchilling"},"content":"public class DeleteBuyerCommandTest {","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"riccqi"},"content":"    private Model model \u003d new ModelManager(getTypicalPersonsBook(), getTypicalPropertyBook(), new UserPrefs());","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":32,"author":{"gitId":"riccqi"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_ITEM.getZeroBased());","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"riccqi"},"content":"        DeleteBuyerCommand deleteCommand \u003d new DeleteBuyerCommand(INDEX_FIRST_ITEM);","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"jchilling"},"content":"        String expectedMessage \u003d String.format(DeleteBuyerCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"zsiggg"},"content":"        ModelManager expectedModel \u003d new ModelManager(","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"zsiggg"},"content":"                model.getPersonModel(), model.getPropertyModel(), new UserPrefs());","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"jchilling"},"content":"        DeleteBuyerCommand deleteCommand \u003d new DeleteBuyerCommand(outOfBoundIndex);","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"riccqi"},"content":"        showPersonAtIndex(model, INDEX_FIRST_ITEM);","lastModifiedDate":"2022-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":56,"author":{"gitId":"riccqi"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_ITEM.getZeroBased());","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"riccqi"},"content":"        DeleteBuyerCommand deleteCommand \u003d new DeleteBuyerCommand(INDEX_FIRST_ITEM);","lastModifiedDate":"2022-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"jchilling"},"content":"        String expectedMessage \u003d String.format(DeleteBuyerCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":61,"author":{"gitId":"zsiggg"},"content":"        Model expectedModel \u003d new ModelManager(model.getPersonModel(), model.getPropertyModel(), new UserPrefs());","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"riccqi"},"content":"        showPersonAtIndex(model, INDEX_FIRST_ITEM);","lastModifiedDate":"2022-10-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"riccqi"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_ITEM;","lastModifiedDate":"2022-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"zsiggg"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getPersonModel().getPersonList().size());","lastModifiedDate":"2022-10-11"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"jchilling"},"content":"        DeleteBuyerCommand deleteCommand \u003d new DeleteBuyerCommand(outOfBoundIndex);","lastModifiedDate":"2022-10-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"riccqi"},"content":"        DeleteBuyerCommand deleteFirstCommand \u003d new DeleteBuyerCommand(INDEX_FIRST_ITEM);","lastModifiedDate":"2022-10-13"},{"lineNumber":84,"author":{"gitId":"riccqi"},"content":"        DeleteBuyerCommand deleteSecondCommand \u003d new DeleteBuyerCommand(INDEX_SECOND_ITEM);","lastModifiedDate":"2022-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"riccqi"},"content":"        DeleteBuyerCommand deleteFirstCommandCopy \u003d new DeleteBuyerCommand(INDEX_FIRST_ITEM);","lastModifiedDate":"2022-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"riccqi":18,"zsiggg":4,"jchilling":5,"-":84}},{"path":"src/test/java/seedu/address/logic/commands/DeletePropertyCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.assertPropertyCommandFailure;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.showPropertyAtIndex;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"riccqi"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_ITEM;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"riccqi"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_ITEM;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"riccqi"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalPersonsBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"riccqi"},"content":"import static seedu.address.testutil.TypicalProperties.getTypicalPropertyBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"jchilling"},"content":"import seedu.address.model.property.Property;","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":24,"author":{"gitId":"jchilling"},"content":" * {@code DeletePropertyCommand}.","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"jchilling"},"content":"public class DeletePropertyCommandTest {","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"riccqi"},"content":"    private Model model \u003d new ModelManager(getTypicalPersonsBook(), getTypicalPropertyBook(), new UserPrefs());","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":32,"author":{"gitId":"riccqi"},"content":"        Property propertyToDelete \u003d model.getFilteredPropertyList().get(INDEX_FIRST_ITEM.getZeroBased());","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"riccqi"},"content":"        DeletePropertyCommand deletePropertyCommand \u003d new DeletePropertyCommand(INDEX_FIRST_ITEM);","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"jchilling"},"content":"        String expectedMessage \u003d String.format(DeletePropertyCommand.MESSAGE_DELETE_PROPERTY_SUCCESS, propertyToDelete);","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"zsiggg"},"content":"        ModelManager expectedModel \u003d","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"zsiggg"},"content":"                new ModelManager(model.getPersonModel(), model.getPropertyModel(), new UserPrefs());","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"jchilling"},"content":"        expectedModel.deleteProperty(propertyToDelete);","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"jchilling"},"content":"        assertCommandSuccess(deletePropertyCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"jchilling"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPropertyList().size() + 1);","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"jchilling"},"content":"        DeletePropertyCommand deletePropertyCommand \u003d new DeletePropertyCommand(outOfBoundIndex);","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"jchilling"},"content":"        assertPropertyCommandFailure(deletePropertyCommand, model, Messages.MESSAGE_INVALID_PROPERTY_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"riccqi"},"content":"        showPropertyAtIndex(model, INDEX_FIRST_ITEM);","lastModifiedDate":"2022-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":56,"author":{"gitId":"riccqi"},"content":"        Property propertyToDelete \u003d model.getFilteredPropertyList().get(INDEX_FIRST_ITEM.getZeroBased());","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"riccqi"},"content":"        DeletePropertyCommand deletePropertyCommand \u003d new DeletePropertyCommand(INDEX_FIRST_ITEM);","lastModifiedDate":"2022-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"jchilling"},"content":"        String expectedMessage \u003d String.format(DeletePropertyCommand.MESSAGE_DELETE_PROPERTY_SUCCESS, propertyToDelete);","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":61,"author":{"gitId":"zsiggg"},"content":"        Model expectedModel \u003d new ModelManager(model.getPersonModel(), model.getPropertyModel(), new UserPrefs());","lastModifiedDate":"2022-10-13"},{"lineNumber":62,"author":{"gitId":"jchilling"},"content":"        expectedModel.deleteProperty(propertyToDelete);","lastModifiedDate":"2022-10-13"},{"lineNumber":63,"author":{"gitId":"jchilling"},"content":"        showNoProperty(expectedModel);","lastModifiedDate":"2022-10-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"jchilling"},"content":"        assertCommandSuccess(deletePropertyCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"riccqi"},"content":"        showPropertyAtIndex(model, INDEX_FIRST_ITEM);","lastModifiedDate":"2022-10-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"riccqi"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_ITEM;","lastModifiedDate":"2022-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"zsiggg"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getPropertyModel().getPropertyList().size());","lastModifiedDate":"2022-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"jchilling"},"content":"        DeletePropertyCommand deletePropertyCommand \u003d new DeletePropertyCommand(outOfBoundIndex);","lastModifiedDate":"2022-10-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"jchilling"},"content":"        assertPropertyCommandFailure(deletePropertyCommand, model, Messages.MESSAGE_INVALID_PROPERTY_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"riccqi"},"content":"        DeletePropertyCommand deleteFirstCommand \u003d new DeletePropertyCommand(INDEX_FIRST_ITEM);","lastModifiedDate":"2022-10-13"},{"lineNumber":84,"author":{"gitId":"riccqi"},"content":"        DeletePropertyCommand deleteSecondCommand \u003d new DeletePropertyCommand(INDEX_SECOND_ITEM);","lastModifiedDate":"2022-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"riccqi"},"content":"        DeletePropertyCommand deleteFirstCommandCopy \u003d new DeletePropertyCommand(INDEX_FIRST_ITEM);","lastModifiedDate":"2022-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"jchilling"},"content":"     * Updates {@code model}\u0027s filtered list to show no property.","lastModifiedDate":"2022-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"jchilling"},"content":"    private void showNoProperty(Model model) {","lastModifiedDate":"2022-10-13"},{"lineNumber":107,"author":{"gitId":"jchilling"},"content":"        model.updateFilteredPropertyList(p -\u003e false);","lastModifiedDate":"2022-10-13"},{"lineNumber":108,"author":{"gitId":"jchilling"},"content":"        assertTrue(model.getFilteredPropertyList().isEmpty());","lastModifiedDate":"2022-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"riccqi":18,"zsiggg":4,"jchilling":19,"-":69}},{"path":"src/test/java/seedu/address/logic/commands/EditBuyerCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.DESC_AMY;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.DESC_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"jchilling"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.VALID_PRIORITY_LOW;","lastModifiedDate":"2022-10-19"},{"lineNumber":10,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"riccqi"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_ITEM;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"riccqi"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_ITEM;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"riccqi"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalPersonsBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"riccqi"},"content":"import static seedu.address.testutil.TypicalProperties.getTypicalPropertyBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"riccqi"},"content":"import seedu.address.logic.commands.EditBuyerCommand.EditPersonDescriptor;","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"zsiggg"},"content":"import seedu.address.model.PersonBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"zsiggg"},"content":"import seedu.address.model.PropertyBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"riccqi"},"content":"public class EditBuyerCommandTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":37,"author":{"gitId":"riccqi"},"content":"    private Model model \u003d new ModelManager(getTypicalPersonsBook(), getTypicalPropertyBook(), new UserPrefs());","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":41,"author":{"gitId":"riccqi"},"content":"        Person currentPerson \u003d model.getFilteredPersonList().get(0);","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"ChryslineLim"},"content":"        Person editedPerson \u003d new PersonBuilder().withPriceRange(\"20 - 50\").withDesiredCharacteristics(\"Clean\").build();","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"riccqi"},"content":"        EditBuyerCommand editBuyerCommand \u003d new EditBuyerCommand(INDEX_FIRST_ITEM, descriptor);","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"riccqi"},"content":"        String expectedMessage \u003d String.format(EditBuyerCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"zsiggg"},"content":"        Model expectedModel \u003d new ModelManager(new PersonBook(","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"zsiggg"},"content":"                model.getPersonModel()), new PropertyBook(model.getPropertyModel()), new UserPrefs());","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"riccqi"},"content":"        expectedModel.setPerson(currentPerson, editedPerson);","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"riccqi"},"content":"        assertCommandSuccess(editBuyerCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"jchilling"},"content":"                .withPriority(VALID_PRIORITY_LOW).build();","lastModifiedDate":"2022-10-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"jchilling"},"content":"                .withPhone(VALID_PHONE_BOB).withPriority(VALID_PRIORITY_LOW).build();","lastModifiedDate":"2022-10-19"},{"lineNumber":68,"author":{"gitId":"riccqi"},"content":"        EditBuyerCommand editBuyerCommand \u003d new EditBuyerCommand(indexLastPerson, descriptor);","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":70,"author":{"gitId":"riccqi"},"content":"        String expectedMessage \u003d String.format(EditBuyerCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"zsiggg"},"content":"        Model expectedModel \u003d new ModelManager(","lastModifiedDate":"2022-10-12"},{"lineNumber":73,"author":{"gitId":"zsiggg"},"content":"                new PersonBook(model.getPersonModel()), new PropertyBook(model.getPropertyModel()), new UserPrefs());","lastModifiedDate":"2022-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":76,"author":{"gitId":"riccqi"},"content":"        assertCommandSuccess(editBuyerCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":81,"author":{"gitId":"riccqi"},"content":"        EditBuyerCommand editBuyerCommand \u003d new EditBuyerCommand(INDEX_FIRST_ITEM, new EditPersonDescriptor());","lastModifiedDate":"2022-10-13"},{"lineNumber":82,"author":{"gitId":"riccqi"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_ITEM.getZeroBased());","lastModifiedDate":"2022-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"riccqi"},"content":"        String expectedMessage \u003d String.format(EditBuyerCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2022-10-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":86,"author":{"gitId":"zsiggg"},"content":"        Model expectedModel \u003d new ModelManager(new PersonBook(","lastModifiedDate":"2022-10-13"},{"lineNumber":87,"author":{"gitId":"zsiggg"},"content":"                model.getPersonModel()), new PropertyBook(model.getPropertyModel()), new UserPrefs());","lastModifiedDate":"2022-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"riccqi"},"content":"        assertCommandSuccess(editBuyerCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"riccqi"},"content":"        showPersonAtIndex(model, INDEX_FIRST_ITEM);","lastModifiedDate":"2022-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"riccqi"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_ITEM.getZeroBased());","lastModifiedDate":"2022-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"riccqi"},"content":"        EditBuyerCommand editBuyerCommand \u003d new EditBuyerCommand(INDEX_FIRST_ITEM,","lastModifiedDate":"2022-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"riccqi"},"content":"        String expectedMessage \u003d String.format(EditBuyerCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2022-10-12"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":103,"author":{"gitId":"zsiggg"},"content":"        Model expectedModel \u003d new ModelManager(","lastModifiedDate":"2022-10-12"},{"lineNumber":104,"author":{"gitId":"zsiggg"},"content":"                new PersonBook(model.getPersonModel()), new PropertyBook(model.getPropertyModel()), new UserPrefs());","lastModifiedDate":"2022-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":107,"author":{"gitId":"riccqi"},"content":"        assertCommandSuccess(editBuyerCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-12"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":112,"author":{"gitId":"riccqi"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_ITEM.getZeroBased());","lastModifiedDate":"2022-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"riccqi"},"content":"        EditBuyerCommand editBuyerCommand \u003d new EditBuyerCommand(INDEX_SECOND_ITEM, descriptor);","lastModifiedDate":"2022-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"riccqi"},"content":"        assertCommandFailure(editBuyerCommand, model, EditBuyerCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-10-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":121,"author":{"gitId":"riccqi"},"content":"        showPersonAtIndex(model, INDEX_FIRST_ITEM);","lastModifiedDate":"2022-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":124,"author":{"gitId":"riccqi"},"content":"        Person personInList \u003d model.getPersonModel().getPersonList().get(INDEX_SECOND_ITEM.getZeroBased());","lastModifiedDate":"2022-10-13"},{"lineNumber":125,"author":{"gitId":"riccqi"},"content":"        EditBuyerCommand editBuyerCommand \u003d new EditBuyerCommand(INDEX_FIRST_ITEM,","lastModifiedDate":"2022-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"riccqi"},"content":"        assertCommandFailure(editBuyerCommand, model, EditBuyerCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-10-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":135,"author":{"gitId":"riccqi"},"content":"        EditBuyerCommand editBuyerCommand \u003d new EditBuyerCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2022-10-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":137,"author":{"gitId":"riccqi"},"content":"        assertCommandFailure(editBuyerCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":146,"author":{"gitId":"riccqi"},"content":"        showPersonAtIndex(model, INDEX_FIRST_ITEM);","lastModifiedDate":"2022-10-13"},{"lineNumber":147,"author":{"gitId":"riccqi"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_ITEM;","lastModifiedDate":"2022-10-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":149,"author":{"gitId":"zsiggg"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getPersonModel().getPersonList().size());","lastModifiedDate":"2022-10-11"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":151,"author":{"gitId":"riccqi"},"content":"        EditBuyerCommand editBuyerCommand \u003d new EditBuyerCommand(outOfBoundIndex,","lastModifiedDate":"2022-10-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":154,"author":{"gitId":"riccqi"},"content":"        assertCommandFailure(editBuyerCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"riccqi"},"content":"        final EditBuyerCommand standardCommand \u003d new EditBuyerCommand(INDEX_FIRST_ITEM, DESC_AMY);","lastModifiedDate":"2022-10-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"riccqi"},"content":"        EditBuyerCommand commandWithSameValues \u003d new EditBuyerCommand(INDEX_FIRST_ITEM, copyDescriptor);","lastModifiedDate":"2022-10-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":176,"author":{"gitId":"riccqi"},"content":"        assertFalse(standardCommand.equals(new EditBuyerCommand(INDEX_SECOND_ITEM, DESC_AMY)));","lastModifiedDate":"2022-10-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":179,"author":{"gitId":"riccqi"},"content":"        assertFalse(standardCommand.equals(new EditBuyerCommand(INDEX_FIRST_ITEM, DESC_BOB)));","lastModifiedDate":"2022-10-13"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"riccqi":50,"zsiggg":11,"jchilling":3,"-":117,"ChryslineLim":1}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.DESC_AMY;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.DESC_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.VALID_DESIRED_CHARACTERISTICS_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.VALID_PRICE_RANGE_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"jchilling"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.VALID_PRIORITY_LOW;","lastModifiedDate":"2022-10-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"riccqi"},"content":"import seedu.address.logic.commands.EditBuyerCommand.EditPersonDescriptor;","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"ChryslineLim"},"content":"        // different price range -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"ChryslineLim"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPriceRange(VALID_PRICE_RANGE_BOB).build();","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"ChryslineLim"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"ChryslineLim"},"content":"        // different desired characteristics -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"ChryslineLim"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY)","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"ChryslineLim"},"content":"                .withDesiredCharacteristics(VALID_DESIRED_CHARACTERISTICS_BOB).build();","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"ChryslineLim"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"jchilling"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPriority(VALID_PRIORITY_LOW).build();","lastModifiedDate":"2022-10-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"riccqi":9,"jchilling":2,"-":49,"ChryslineLim":9}},{"path":"src/test/java/seedu/address/logic/commands/EditPropertyCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"riccqi"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.PropertyCommandTestUtil.VALID_NAME_PROPERTY1;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.PropertyCommandTestUtil.VALID_PRICE_PROPERTY1;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"riccqi"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_ITEM;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"riccqi"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalPersonsBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"riccqi"},"content":"import static seedu.address.testutil.TypicalProperties.getTypicalPropertyBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"riccqi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"riccqi"},"content":"import seedu.address.logic.commands.EditPropertyCommand.EditPropertyDescriptor;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"riccqi"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"riccqi"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"riccqi"},"content":"import seedu.address.model.PersonBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"riccqi"},"content":"import seedu.address.model.PropertyBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"riccqi"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"riccqi"},"content":"import seedu.address.model.property.Property;","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"riccqi"},"content":"import seedu.address.testutil.EditPropertyDescriptorBuilder;","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"riccqi"},"content":"import seedu.address.testutil.PropertyBuilder;","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"riccqi"},"content":"class EditPropertyCommandTest {","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"riccqi"},"content":"    private Model model \u003d new ModelManager(getTypicalPersonsBook(), getTypicalPropertyBook(), new UserPrefs());","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"riccqi"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"riccqi"},"content":"    void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"riccqi"},"content":"        Property currentProperty \u003d model.getFilteredPropertyList().get(0);","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"riccqi"},"content":"        Property editedProperty \u003d new PropertyBuilder().build();","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"riccqi"},"content":"        EditPropertyDescriptor descriptor \u003d new EditPropertyDescriptorBuilder(editedProperty).build();","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"riccqi"},"content":"        EditPropertyCommand editPropertyCommand \u003d new EditPropertyCommand(INDEX_FIRST_ITEM, descriptor);","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"riccqi"},"content":"        String expectedMessage \u003d String.format(EditPropertyCommand.MESSAGE_EDIT_PROPERTY_SUCCESS, editedProperty);","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"riccqi"},"content":"        Model expectedModel \u003d new ModelManager(new PersonBook(","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"riccqi"},"content":"                model.getPersonModel()), new PropertyBook(model.getPropertyModel()), new UserPrefs());","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"riccqi"},"content":"        expectedModel.setProperty(currentProperty, editedProperty);","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"riccqi"},"content":"        assertCommandSuccess(editPropertyCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"riccqi"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"riccqi"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"riccqi"},"content":"    void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"riccqi"},"content":"        Property currentProperty \u003d model.getFilteredPropertyList().get(0);","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"riccqi"},"content":"        PropertyBuilder propertyInList \u003d new PropertyBuilder(currentProperty);","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"riccqi"},"content":"        Property editedProperty \u003d propertyInList.withName(VALID_NAME_PROPERTY1)","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"riccqi"},"content":"                .withPrice(VALID_PRICE_PROPERTY1)","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"riccqi"},"content":"                .build();","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"riccqi"},"content":"        EditPropertyDescriptor descriptor \u003d new EditPropertyDescriptorBuilder(editedProperty).build();","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"riccqi"},"content":"        EditPropertyCommand editPropertyCommand \u003d new EditPropertyCommand(INDEX_FIRST_ITEM, descriptor);","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"riccqi"},"content":"        String expectedMessage \u003d String.format(EditPropertyCommand.MESSAGE_EDIT_PROPERTY_SUCCESS, editedProperty);","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"riccqi"},"content":"        Model expectedModel \u003d new ModelManager(new PersonBook(","lastModifiedDate":"2022-10-13"},{"lineNumber":55,"author":{"gitId":"riccqi"},"content":"                model.getPersonModel()), new PropertyBook(model.getPropertyModel()), new UserPrefs());","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"riccqi"},"content":"        expectedModel.setProperty(currentProperty, editedProperty);","lastModifiedDate":"2022-10-13"},{"lineNumber":58,"author":{"gitId":"riccqi"},"content":"        assertCommandSuccess(editPropertyCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-13"},{"lineNumber":59,"author":{"gitId":"riccqi"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":61,"author":{"gitId":"riccqi"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":62,"author":{"gitId":"riccqi"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-10-13"},{"lineNumber":63,"author":{"gitId":"riccqi"},"content":"        EditPropertyCommand editPropertyCommand \u003d new EditPropertyCommand(INDEX_FIRST_ITEM,","lastModifiedDate":"2022-10-13"},{"lineNumber":64,"author":{"gitId":"riccqi"},"content":"                new EditPropertyDescriptor());","lastModifiedDate":"2022-10-13"},{"lineNumber":65,"author":{"gitId":"riccqi"},"content":"        Property editedProperty \u003d model.getFilteredPropertyList().get(INDEX_FIRST_ITEM.getZeroBased());","lastModifiedDate":"2022-10-13"},{"lineNumber":66,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":67,"author":{"gitId":"riccqi"},"content":"        String expectedMessage \u003d String.format(EditPropertyCommand.MESSAGE_EDIT_PROPERTY_SUCCESS, editedProperty);","lastModifiedDate":"2022-10-13"},{"lineNumber":68,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":69,"author":{"gitId":"riccqi"},"content":"        Model expectedModel \u003d new ModelManager(new PersonBook(","lastModifiedDate":"2022-10-13"},{"lineNumber":70,"author":{"gitId":"riccqi"},"content":"                model.getPersonModel()), new PropertyBook(model.getPropertyModel()), new UserPrefs());","lastModifiedDate":"2022-10-13"},{"lineNumber":71,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":72,"author":{"gitId":"riccqi"},"content":"        assertCommandSuccess(editPropertyCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-13"},{"lineNumber":73,"author":{"gitId":"riccqi"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":74,"author":{"gitId":"riccqi"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"riccqi":74}},{"path":"src/test/java/seedu/address/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"riccqi":1,"-":19}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"riccqi"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalPersonsBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"riccqi"},"content":"import static seedu.address.testutil.TypicalProperties.getTypicalPropertyBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"riccqi"},"content":"    private Model model \u003d new ModelManager(getTypicalPersonsBook(), getTypicalPropertyBook(), new UserPrefs());","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"riccqi"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalPersonsBook(), getTypicalPropertyBook(), new UserPrefs());","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"riccqi":5,"-":79}},{"path":"src/test/java/seedu/address/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"riccqi":1,"-":19}},{"path":"src/test/java/seedu/address/logic/commands/ListBuyersCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"riccqi"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_ITEM;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"riccqi"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalPersonsBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"riccqi"},"content":"import static seedu.address.testutil.TypicalProperties.getTypicalPropertyBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"jchilling"},"content":"public class ListBuyersCommandTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"riccqi"},"content":"        model \u003d new ModelManager(getTypicalPersonsBook(), getTypicalPropertyBook(), new UserPrefs());","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"zsiggg"},"content":"        expectedModel \u003d new ModelManager(model.getPersonModel(), model.getPropertyModel(), new UserPrefs());","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"jchilling"},"content":"        assertCommandSuccess(new ListBuyersCommand(), model, ListBuyersCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":37,"author":{"gitId":"riccqi"},"content":"        showPersonAtIndex(model, INDEX_FIRST_ITEM);","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"jchilling"},"content":"        assertCommandSuccess(new ListBuyersCommand(), model, ListBuyersCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"riccqi":7,"zsiggg":1,"jchilling":3,"-":29}},{"path":"src/test/java/seedu/address/logic/commands/ListPropertiesCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.showPropertyAtIndex;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"riccqi"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_ITEM;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"riccqi"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalPersonsBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"riccqi"},"content":"import static seedu.address.testutil.TypicalProperties.getTypicalPropertyBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"jchilling"},"content":"public class ListPropertiesCommandTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"riccqi"},"content":"        model \u003d new ModelManager(getTypicalPersonsBook(), getTypicalPropertyBook(), new UserPrefs());","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"zsiggg"},"content":"        expectedModel \u003d new ModelManager(model.getPersonModel(), model.getPropertyModel(), new UserPrefs());","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":29,"author":{"gitId":"jchilling"},"content":"        assertCommandSuccess(new ListPropertiesCommand(), model, ListPropertiesCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":34,"author":{"gitId":"riccqi"},"content":"        showPropertyAtIndex(model, INDEX_FIRST_ITEM);","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"jchilling"},"content":"        assertCommandSuccess(new ListPropertiesCommand(), model, ListPropertiesCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"riccqi":7,"zsiggg":1,"jchilling":4,"-":26}},{"path":"src/test/java/seedu/address/logic/commands/PropertyCommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"riccqi"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"riccqi"},"content":"/**","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"riccqi"},"content":"* Contains helper methods for testing property commands.","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"riccqi"},"content":"*/","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"riccqi"},"content":"public class PropertyCommandTestUtil {","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"riccqi"},"content":"    public static final String VALID_NAME_PROPERTY1 \u003d \"Heng Mui Keng Terrace HDB\";","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"riccqi"},"content":"    public static final String VALID_NAME_PROPERTY2 \u003d \"ORCHARD ROAD CONDO\";","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"riccqi"},"content":"    public static final String VALID_NAME_PROPERTY3 \u003d \"West Coast Street 28 HDB\";","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"riccqi"},"content":"    public static final String VALID_PRICE_PROPERTY1 \u003d \"1000000\";","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"riccqi"},"content":"    public static final String VALID_ADDRESS_PROPERTY1 \u003d \"Blk 123, Heng Mui Keng Terrace\";","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"riccqi"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"riccqi":14}},{"path":"src/test/java/seedu/address/logic/parser/AddPersonCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.DESIRED_CHARACTERISTICS_DESC_AMY;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.DESIRED_CHARACTERISTICS_DESC_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.INVALID_DESIRED_CHARACTERISTICS_DESC;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.INVALID_PRICE_RANGE_DESC;","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"jchilling"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.INVALID_PRIORITY_DESC;","lastModifiedDate":"2022-10-19"},{"lineNumber":17,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.PRICE_RANGE_DESC_AMY;","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.PRICE_RANGE_DESC_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"jchilling"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.TAG_DESC_PRIORITY_HIGH;","lastModifiedDate":"2022-10-19"},{"lineNumber":26,"author":{"gitId":"jchilling"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.TAG_DESC_PRIORITY_LOW;","lastModifiedDate":"2022-10-19"},{"lineNumber":27,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"jchilling"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.VALID_PRIORITY_HIGH;","lastModifiedDate":"2022-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"zsiggg"},"content":"import seedu.address.logic.commands.AddPersonCommand;","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"zsiggg"},"content":"import seedu.address.model.address.Address;","lastModifiedDate":"2022-10-08"},{"lineNumber":41,"author":{"gitId":"ChryslineLim"},"content":"import seedu.address.model.characteristics.Characteristics;","lastModifiedDate":"2022-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"jchilling"},"content":"import seedu.address.model.person.Priority;","lastModifiedDate":"2022-10-19"},{"lineNumber":47,"author":{"gitId":"jchilling"},"content":"import seedu.address.model.pricerange.PriceRange;","lastModifiedDate":"2022-10-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"zsiggg"},"content":"public class AddPersonCommandParserTest {","lastModifiedDate":"2022-10-06"},{"lineNumber":51,"author":{"gitId":"zsiggg"},"content":"    private AddPersonCommandParser parser \u003d new AddPersonCommandParser();","lastModifiedDate":"2022-10-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":55,"author":{"gitId":"jchilling"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withPriority(VALID_PRIORITY_HIGH).build();","lastModifiedDate":"2022-10-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":59,"author":{"gitId":"jchilling"},"content":"                + ADDRESS_DESC_BOB + PRICE_RANGE_DESC_BOB + DESIRED_CHARACTERISTICS_DESC_BOB + TAG_DESC_PRIORITY_HIGH,","lastModifiedDate":"2022-10-19"},{"lineNumber":60,"author":{"gitId":"ChryslineLim"},"content":"                new AddPersonCommand(expectedPerson));","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":64,"author":{"gitId":"jchilling"},"content":"                + ADDRESS_DESC_BOB + PRICE_RANGE_DESC_BOB + DESIRED_CHARACTERISTICS_DESC_BOB + TAG_DESC_PRIORITY_HIGH,","lastModifiedDate":"2022-10-19"},{"lineNumber":65,"author":{"gitId":"ChryslineLim"},"content":"                new AddPersonCommand(expectedPerson));","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":69,"author":{"gitId":"jchilling"},"content":"                + ADDRESS_DESC_BOB + PRICE_RANGE_DESC_BOB + DESIRED_CHARACTERISTICS_DESC_BOB + TAG_DESC_PRIORITY_HIGH,","lastModifiedDate":"2022-10-19"},{"lineNumber":70,"author":{"gitId":"ChryslineLim"},"content":"                new AddPersonCommand(expectedPerson));","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":74,"author":{"gitId":"jchilling"},"content":"                + ADDRESS_DESC_BOB + PRICE_RANGE_DESC_BOB + DESIRED_CHARACTERISTICS_DESC_BOB + TAG_DESC_PRIORITY_HIGH,","lastModifiedDate":"2022-10-19"},{"lineNumber":75,"author":{"gitId":"ChryslineLim"},"content":"                new AddPersonCommand(expectedPerson));","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2017-12-23"},{"lineNumber":79,"author":{"gitId":"jchilling"},"content":"                + ADDRESS_DESC_BOB + PRICE_RANGE_DESC_BOB + DESIRED_CHARACTERISTICS_DESC_BOB + TAG_DESC_PRIORITY_HIGH,","lastModifiedDate":"2022-10-19"},{"lineNumber":80,"author":{"gitId":"ChryslineLim"},"content":"                new AddPersonCommand(expectedPerson));","lastModifiedDate":"2022-10-12"},{"lineNumber":81,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":82,"author":{"gitId":"ChryslineLim"},"content":"        // multiple price ranges - last price range accepted","lastModifiedDate":"2022-10-12"},{"lineNumber":83,"author":{"gitId":"ChryslineLim"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2022-10-12"},{"lineNumber":84,"author":{"gitId":"jchilling"},"content":"                + PRICE_RANGE_DESC_AMY + PRICE_RANGE_DESC_BOB","lastModifiedDate":"2022-10-19"},{"lineNumber":85,"author":{"gitId":"jchilling"},"content":"                + DESIRED_CHARACTERISTICS_DESC_BOB + TAG_DESC_PRIORITY_HIGH,","lastModifiedDate":"2022-10-19"},{"lineNumber":86,"author":{"gitId":"ChryslineLim"},"content":"                new AddPersonCommand(expectedPerson));","lastModifiedDate":"2022-10-12"},{"lineNumber":87,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":88,"author":{"gitId":"ChryslineLim"},"content":"        // multiple desired characteristics - last desired characteristics accepted","lastModifiedDate":"2022-10-12"},{"lineNumber":89,"author":{"gitId":"ChryslineLim"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2022-10-12"},{"lineNumber":90,"author":{"gitId":"ChryslineLim"},"content":"                + PRICE_RANGE_DESC_BOB + DESIRED_CHARACTERISTICS_DESC_AMY","lastModifiedDate":"2022-10-12"},{"lineNumber":91,"author":{"gitId":"jchilling"},"content":"                        + DESIRED_CHARACTERISTICS_DESC_BOB + TAG_DESC_PRIORITY_HIGH,","lastModifiedDate":"2022-10-19"},{"lineNumber":92,"author":{"gitId":"ChryslineLim"},"content":"                new AddPersonCommand(expectedPerson));","lastModifiedDate":"2022-10-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":97,"author":{"gitId":"jchilling"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY)","lastModifiedDate":"2022-10-19"},{"lineNumber":98,"author":{"gitId":"jchilling"},"content":"                .withNoDesiredCharacteristics()","lastModifiedDate":"2022-10-19"},{"lineNumber":99,"author":{"gitId":"ChryslineLim"},"content":"                .withNoPriceRange().build();","lastModifiedDate":"2022-10-12"},{"lineNumber":100,"author":{"gitId":"jchilling"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2022-10-19"},{"lineNumber":101,"author":{"gitId":"jchilling"},"content":"                + TAG_DESC_PRIORITY_HIGH,","lastModifiedDate":"2022-10-19"},{"lineNumber":102,"author":{"gitId":"zsiggg"},"content":"                new AddPersonCommand(expectedPerson));","lastModifiedDate":"2022-10-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":107,"author":{"gitId":"zsiggg"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPersonCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-06"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":134,"author":{"gitId":"jchilling"},"content":"                + TAG_DESC_PRIORITY_LOW + TAG_DESC_PRIORITY_HIGH, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":138,"author":{"gitId":"jchilling"},"content":"                + TAG_DESC_PRIORITY_LOW + TAG_DESC_PRIORITY_HIGH, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":142,"author":{"gitId":"jchilling"},"content":"                + TAG_DESC_PRIORITY_LOW + TAG_DESC_PRIORITY_HIGH, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2017-12-23"},{"lineNumber":146,"author":{"gitId":"jchilling"},"content":"                + TAG_DESC_PRIORITY_LOW + TAG_DESC_PRIORITY_HIGH, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":148,"author":{"gitId":"jchilling"},"content":"        // invalid priority","lastModifiedDate":"2022-10-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":150,"author":{"gitId":"jchilling"},"content":"                + INVALID_PRIORITY_DESC, Priority.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":152,"author":{"gitId":"ChryslineLim"},"content":"        // invalid price range","lastModifiedDate":"2022-10-12"},{"lineNumber":153,"author":{"gitId":"ChryslineLim"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2022-10-12"},{"lineNumber":154,"author":{"gitId":"ChryslineLim"},"content":"                + INVALID_PRICE_RANGE_DESC + DESIRED_CHARACTERISTICS_DESC_BOB","lastModifiedDate":"2022-10-12"},{"lineNumber":155,"author":{"gitId":"jchilling"},"content":"                + TAG_DESC_PRIORITY_LOW, PriceRange.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-19"},{"lineNumber":156,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":157,"author":{"gitId":"ChryslineLim"},"content":"        // invalid desired characteristics","lastModifiedDate":"2022-10-12"},{"lineNumber":158,"author":{"gitId":"ChryslineLim"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2022-10-12"},{"lineNumber":159,"author":{"gitId":"ChryslineLim"},"content":"                + PRICE_RANGE_DESC_BOB + INVALID_DESIRED_CHARACTERISTICS_DESC","lastModifiedDate":"2022-10-12"},{"lineNumber":160,"author":{"gitId":"jchilling"},"content":"                + TAG_DESC_PRIORITY_LOW, Characteristics.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-19"},{"lineNumber":161,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":163,"author":{"gitId":"ChryslineLim"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB","lastModifiedDate":"2022-10-12"},{"lineNumber":164,"author":{"gitId":"ChryslineLim"},"content":"                        + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2022-10-12"},{"lineNumber":165,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":169,"author":{"gitId":"ChryslineLim"},"content":"                + ADDRESS_DESC_BOB + PRICE_RANGE_DESC_BOB + DESIRED_CHARACTERISTICS_DESC_BOB","lastModifiedDate":"2022-10-12"},{"lineNumber":170,"author":{"gitId":"jchilling"},"content":"                        + TAG_DESC_PRIORITY_LOW,","lastModifiedDate":"2022-10-19"},{"lineNumber":171,"author":{"gitId":"zsiggg"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-06"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"riccqi":24,"zsiggg":7,"jchilling":28,"-":87,"ChryslineLim":27}},{"path":"src/test/java/seedu/address/logic/parser/DeleteBuyerCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"riccqi"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_ITEM;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"jchilling"},"content":"import seedu.address.logic.commands.DeleteBuyerCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"jchilling"},"content":" * outside of the DeleteBuyerCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"jchilling"},"content":" * same path through the DeleteBuyerCommand, and therefore we test only one of them.","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"jchilling"},"content":"public class DeleteBuyerCommandParserTest {","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"jchilling"},"content":"    private DeleteBuyerCommandParser parser \u003d new DeleteBuyerCommandParser();","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"riccqi"},"content":"        assertParseSuccess(parser, \"1\", new DeleteBuyerCommand(INDEX_FIRST_ITEM));","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"jchilling"},"content":"        assertParseFailure(parser, \"a\",","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"jchilling"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteBuyerCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"riccqi":2,"jchilling":7,"-":24}},{"path":"src/test/java/seedu/address/logic/parser/DeletePropertyCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"riccqi"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_ITEM;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"jchilling"},"content":"import seedu.address.logic.commands.DeletePropertyCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"jchilling"},"content":" * outside of the DeletePropertyCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"jchilling"},"content":" * same path through the DeletePropertyCommand, and therefore we test only one of them.","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"jchilling"},"content":"public class DeletePropertyCommandParserTest {","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"jchilling"},"content":"    private DeletePropertyCommandParser parser \u003d new DeletePropertyCommandParser();","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"riccqi"},"content":"        assertParseSuccess(parser, \"1\", new DeletePropertyCommand(INDEX_FIRST_ITEM));","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"jchilling"},"content":"        assertParseFailure(parser, \"a\",","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"jchilling"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeletePropertyCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"riccqi":2,"jchilling":7,"-":24}},{"path":"src/test/java/seedu/address/logic/parser/EditBuyerCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.DESIRED_CHARACTERISTICS_DESC_AMY;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.INVALID_DESIRED_CHARACTERISTICS_DESC;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.INVALID_PRICE_RANGE_DESC;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"jchilling"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.INVALID_PRIORITY_DESC;","lastModifiedDate":"2022-10-19"},{"lineNumber":16,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.PRICE_RANGE_DESC_AMY;","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"jchilling"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.TAG_DESC_PRIORITY_HIGH;","lastModifiedDate":"2022-10-19"},{"lineNumber":21,"author":{"gitId":"jchilling"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.TAG_DESC_PRIORITY_LOW;","lastModifiedDate":"2022-10-19"},{"lineNumber":22,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.VALID_DESIRED_CHARACTERISTICS_AMY;","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.VALID_PRICE_RANGE_AMY;","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"jchilling"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.VALID_PRIORITY_HIGH;","lastModifiedDate":"2022-10-19"},{"lineNumber":32,"author":{"gitId":"jchilling"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.VALID_PRIORITY_LOW;","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"jchilling"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRIORITY;","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"riccqi"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_ITEM;","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"riccqi"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_ITEM;","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"riccqi"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_ITEM;","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":43,"author":{"gitId":"riccqi"},"content":"import seedu.address.logic.commands.EditBuyerCommand;","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"riccqi"},"content":"import seedu.address.logic.commands.EditBuyerCommand.EditPersonDescriptor;","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"zsiggg"},"content":"import seedu.address.model.address.Address;","lastModifiedDate":"2022-10-08"},{"lineNumber":46,"author":{"gitId":"ChryslineLim"},"content":"import seedu.address.model.characteristics.Characteristics;","lastModifiedDate":"2022-10-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"jchilling"},"content":"import seedu.address.model.person.Priority;","lastModifiedDate":"2022-10-19"},{"lineNumber":51,"author":{"gitId":"jchilling"},"content":"import seedu.address.model.pricerange.PriceRange;","lastModifiedDate":"2022-10-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"riccqi"},"content":"public class EditBuyerCommandParserTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"jchilling"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_PRIORITY;","lastModifiedDate":"2022-10-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"riccqi"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditBuyerCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"riccqi"},"content":"    private EditBuyerCommandParser parser \u003d new EditBuyerCommandParser();","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"riccqi"},"content":"        assertParseFailure(parser, \"1\", EditBuyerCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":96,"author":{"gitId":"ChryslineLim"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PRICE_RANGE_DESC, PriceRange.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2022-10-12"},{"lineNumber":97,"author":{"gitId":"ChryslineLim"},"content":"        assertParseFailure(parser, \"1\" + INVALID_DESIRED_CHARACTERISTICS_DESC,","lastModifiedDate":"2022-10-12"},{"lineNumber":98,"author":{"gitId":"ChryslineLim"},"content":"                Characteristics.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2022-10-19"},{"lineNumber":99,"author":{"gitId":"jchilling"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PRIORITY_DESC, Priority.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2022-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"jchilling"},"content":"        //        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2022-10-19"},{"lineNumber":109,"author":{"gitId":"jchilling"},"content":"        //        // parsing it together with a valid tag results in error","lastModifiedDate":"2022-10-19"},{"lineNumber":110,"author":{"gitId":"jchilling"},"content":"        //        assertParseFailure(parser, \"1\" +","lastModifiedDate":"2022-10-19"},{"lineNumber":111,"author":{"gitId":"jchilling"},"content":"        //        TAG_DESC_PRIORITY_HIGH + TAG_DESC_PRIORITY_LOW + TAG_EMPTY, Priority.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-19"},{"lineNumber":112,"author":{"gitId":"jchilling"},"content":"        //        assertParseFailure(parser, \"1\" +","lastModifiedDate":"2022-10-19"},{"lineNumber":113,"author":{"gitId":"jchilling"},"content":"        //        TAG_DESC_PRIORITY_HIGH + TAG_EMPTY + TAG_DESC_PRIORITY_LOW, Priority.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-19"},{"lineNumber":114,"author":{"gitId":"jchilling"},"content":"        //        assertParseFailure(parser, \"1\" +","lastModifiedDate":"2022-10-19"},{"lineNumber":115,"author":{"gitId":"jchilling"},"content":"        //        TAG_EMPTY + TAG_DESC_PRIORITY_HIGH + TAG_DESC_PRIORITY_LOW, Priority.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2017-07-06"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"riccqi"},"content":"        Index targetIndex \u003d INDEX_SECOND_ITEM;","lastModifiedDate":"2022-10-13"},{"lineNumber":125,"author":{"gitId":"jchilling"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_PRIORITY_LOW","lastModifiedDate":"2022-10-19"},{"lineNumber":126,"author":{"gitId":"ChryslineLim"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY","lastModifiedDate":"2022-10-12"},{"lineNumber":127,"author":{"gitId":"jchilling"},"content":"                + PRICE_RANGE_DESC_AMY + DESIRED_CHARACTERISTICS_DESC_AMY + TAG_DESC_PRIORITY_HIGH;","lastModifiedDate":"2022-10-19"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"ChryslineLim"},"content":"                .withPriceRange(VALID_PRICE_RANGE_AMY).withDesiredCharacteristics(VALID_DESIRED_CHARACTERISTICS_AMY)","lastModifiedDate":"2022-10-12"},{"lineNumber":132,"author":{"gitId":"jchilling"},"content":"                .withPriority(VALID_PRIORITY_HIGH).build();","lastModifiedDate":"2022-10-19"},{"lineNumber":133,"author":{"gitId":"riccqi"},"content":"        EditBuyerCommand expectedCommand \u003d new EditBuyerCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":140,"author":{"gitId":"riccqi"},"content":"        Index targetIndex \u003d INDEX_FIRST_ITEM;","lastModifiedDate":"2022-10-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"riccqi"},"content":"        EditBuyerCommand expectedCommand \u003d new EditBuyerCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"riccqi"},"content":"        Index targetIndex \u003d INDEX_THIRD_ITEM;","lastModifiedDate":"2022-10-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"riccqi"},"content":"        EditBuyerCommand expectedCommand \u003d new EditBuyerCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"riccqi"},"content":"        expectedCommand \u003d new EditBuyerCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"riccqi"},"content":"        expectedCommand \u003d new EditBuyerCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-12"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"riccqi"},"content":"        expectedCommand \u003d new EditBuyerCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-12"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"jchilling"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_PRIORITY_HIGH;","lastModifiedDate":"2022-10-19"},{"lineNumber":179,"author":{"gitId":"jchilling"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPriority(VALID_PRIORITY_HIGH).build();","lastModifiedDate":"2022-10-19"},{"lineNumber":180,"author":{"gitId":"riccqi"},"content":"        expectedCommand \u003d new EditBuyerCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-12"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2022-10-20"},{"lineNumber":186,"author":{"gitId":"jchilling"},"content":"        Index targetIndex \u003d INDEX_FIRST_ITEM;","lastModifiedDate":"2022-10-20"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2022-10-20"},{"lineNumber":188,"author":{"gitId":"jchilling"},"content":"                + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_PRIORITY_HIGH","lastModifiedDate":"2022-10-20"},{"lineNumber":189,"author":{"gitId":"jchilling"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_PRIORITY_LOW;","lastModifiedDate":"2022-10-20"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-10-20"},{"lineNumber":192,"author":{"gitId":"jchilling"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withPriority(VALID_PRIORITY_LOW)","lastModifiedDate":"2022-10-20"},{"lineNumber":193,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2022-10-20"},{"lineNumber":194,"author":{"gitId":"jchilling"},"content":"        EditBuyerCommand expectedCommand \u003d new EditBuyerCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-20"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-20"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"riccqi"},"content":"        Index targetIndex \u003d INDEX_FIRST_ITEM;","lastModifiedDate":"2022-10-13"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":205,"author":{"gitId":"riccqi"},"content":"        EditBuyerCommand expectedCommand \u003d new EditBuyerCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-12"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-05-25"},{"lineNumber":210,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":212,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":213,"author":{"gitId":"riccqi"},"content":"        expectedCommand \u003d new EditBuyerCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-12"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":217,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"riccqi":46,"zsiggg":1,"jchilling":28,"-":136,"ChryslineLim":6}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"riccqi"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_ITEM;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":11,"author":{"gitId":"zsiggg"},"content":"import seedu.address.model.address.Address;","lastModifiedDate":"2022-10-08"},{"lineNumber":12,"author":{"gitId":"ChryslineLim"},"content":"import seedu.address.model.characteristics.Characteristics;","lastModifiedDate":"2022-10-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"ChryslineLim"},"content":"import seedu.address.model.pricerange.PriceRange;","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"ChryslineLim"},"content":"    private static final String INVALID_PRICE_RANGE \u003d \"200\";","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"ChryslineLim"},"content":"    private static final String INVALID_DESIRED_CHARACTERISTICS \u003d \"\";","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"ChryslineLim"},"content":"    private static final String VALID_PRICE_RANGE \u003d \"200 - 500\";","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"ChryslineLim"},"content":"    private static final String VALID_DESIRED_CHARACTERISTICS \u003d \"Bright; Large\";","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"riccqi"},"content":"        assertEquals(INDEX_FIRST_ITEM, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"riccqi"},"content":"        assertEquals(INDEX_FIRST_ITEM, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":149,"author":{"gitId":"ChryslineLim"},"content":"    public void parsePriceRange_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":150,"author":{"gitId":"ChryslineLim"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePriceRange(null));","lastModifiedDate":"2022-10-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":154,"author":{"gitId":"ChryslineLim"},"content":"    public void parsePriceRange_invalidValue_throwsParseException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":155,"author":{"gitId":"ChryslineLim"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePriceRange(INVALID_PRICE_RANGE));","lastModifiedDate":"2022-10-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":159,"author":{"gitId":"ChryslineLim"},"content":"    public void parseName_validPriceRangeWithoutWhitespace_returnsPriceRange() throws Exception {","lastModifiedDate":"2022-10-12"},{"lineNumber":160,"author":{"gitId":"ChryslineLim"},"content":"        PriceRange expectedPriceRange \u003d new PriceRange(VALID_PRICE_RANGE);","lastModifiedDate":"2022-10-12"},{"lineNumber":161,"author":{"gitId":"ChryslineLim"},"content":"        assertEquals(expectedPriceRange, ParserUtil.parsePriceRange(VALID_PRICE_RANGE));","lastModifiedDate":"2022-10-12"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":165,"author":{"gitId":"ChryslineLim"},"content":"    public void parseName_validPriceRangeWithWhitespace_returnsTrimmedPriceRange() throws Exception {","lastModifiedDate":"2022-10-12"},{"lineNumber":166,"author":{"gitId":"ChryslineLim"},"content":"        String priceRangeWithWhitespace \u003d WHITESPACE + VALID_PRICE_RANGE + WHITESPACE;","lastModifiedDate":"2022-10-12"},{"lineNumber":167,"author":{"gitId":"ChryslineLim"},"content":"        PriceRange expectedPriceRange \u003d new PriceRange(VALID_PRICE_RANGE);","lastModifiedDate":"2022-10-12"},{"lineNumber":168,"author":{"gitId":"ChryslineLim"},"content":"        assertEquals(expectedPriceRange, ParserUtil.parsePriceRange(priceRangeWithWhitespace));","lastModifiedDate":"2022-10-12"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":172,"author":{"gitId":"ChryslineLim"},"content":"    public void parseCharacteristics_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":173,"author":{"gitId":"ChryslineLim"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseCharacteristics(null));","lastModifiedDate":"2022-10-12"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":177,"author":{"gitId":"ChryslineLim"},"content":"    public void parseCharacteristics_invalidValue_throwsParseException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":178,"author":{"gitId":"ChryslineLim"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePriceRange(INVALID_DESIRED_CHARACTERISTICS));","lastModifiedDate":"2022-10-12"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":182,"author":{"gitId":"ChryslineLim"},"content":"    public void parseCharacteristics_validCharacteristicsWithoutWhitespace_returnsDesiredCharacteristics()","lastModifiedDate":"2022-10-12"},{"lineNumber":183,"author":{"gitId":"ChryslineLim"},"content":"            throws Exception {","lastModifiedDate":"2022-10-12"},{"lineNumber":184,"author":{"gitId":"ChryslineLim"},"content":"        Characteristics expectedCharacteristics \u003d","lastModifiedDate":"2022-10-19"},{"lineNumber":185,"author":{"gitId":"ChryslineLim"},"content":"                new Characteristics(VALID_DESIRED_CHARACTERISTICS);","lastModifiedDate":"2022-10-19"},{"lineNumber":186,"author":{"gitId":"ChryslineLim"},"content":"        assertEquals(expectedCharacteristics,","lastModifiedDate":"2022-10-19"},{"lineNumber":187,"author":{"gitId":"ChryslineLim"},"content":"                ParserUtil.parseCharacteristics(VALID_DESIRED_CHARACTERISTICS));","lastModifiedDate":"2022-10-12"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":191,"author":{"gitId":"ChryslineLim"},"content":"    public void parseCharacteristics_validCharacteristicsWithWhitespace_returnsTrimmedCharacteristics()","lastModifiedDate":"2022-10-12"},{"lineNumber":192,"author":{"gitId":"ChryslineLim"},"content":"            throws Exception {","lastModifiedDate":"2022-10-12"},{"lineNumber":193,"author":{"gitId":"ChryslineLim"},"content":"        String desiredCharacteristicsWithWhitespace \u003d WHITESPACE + VALID_DESIRED_CHARACTERISTICS + WHITESPACE;","lastModifiedDate":"2022-10-12"},{"lineNumber":194,"author":{"gitId":"ChryslineLim"},"content":"        Characteristics expectedCharacteristics \u003d","lastModifiedDate":"2022-10-19"},{"lineNumber":195,"author":{"gitId":"ChryslineLim"},"content":"                new Characteristics(VALID_DESIRED_CHARACTERISTICS);","lastModifiedDate":"2022-10-19"},{"lineNumber":196,"author":{"gitId":"ChryslineLim"},"content":"        assertEquals(expectedCharacteristics,","lastModifiedDate":"2022-10-19"},{"lineNumber":197,"author":{"gitId":"ChryslineLim"},"content":"                ParserUtil.parseCharacteristics(desiredCharacteristicsWithWhitespace));","lastModifiedDate":"2022-10-12"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":199,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"riccqi":3,"zsiggg":1,"-":161,"ChryslineLim":34}},{"path":"src/test/java/seedu/address/logic/parser/PersonBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"riccqi"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_ITEM;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"ChryslineLim"},"content":"import seedu.address.logic.commands.AddPersonCommand;","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"riccqi"},"content":"import seedu.address.logic.commands.DeleteBuyerCommand;","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"riccqi"},"content":"import seedu.address.logic.commands.DeletePropertyCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"riccqi"},"content":"import seedu.address.logic.commands.EditBuyerCommand;","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"riccqi"},"content":"import seedu.address.logic.commands.EditBuyerCommand.EditPersonDescriptor;","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"jchilling"},"content":"import seedu.address.logic.commands.ListBuyersCommand;","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"jchilling"},"content":"import seedu.address.logic.commands.ListPropertiesCommand;","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"zsiggg"},"content":"public class PersonBookParserTest {","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"ChryslineLim"},"content":"        AddPersonCommand command \u003d (AddPersonCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"ChryslineLim"},"content":"        assertEquals(new AddPersonCommand(person), command);","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"jchilling"},"content":"    public void parseCommand_deletebuyer() throws Exception {","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"jchilling"},"content":"        DeleteBuyerCommand command \u003d (DeleteBuyerCommand) parser.parseCommand(","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"riccqi"},"content":"                DeleteBuyerCommand.COMMAND_WORD + \" \" + INDEX_FIRST_ITEM.getOneBased());","lastModifiedDate":"2022-10-13"},{"lineNumber":55,"author":{"gitId":"riccqi"},"content":"        assertEquals(new DeleteBuyerCommand(INDEX_FIRST_ITEM), command);","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":58,"author":{"gitId":"jchilling"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":59,"author":{"gitId":"jchilling"},"content":"    public void parseCommand_deleteprop() throws Exception {","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"jchilling"},"content":"        DeletePropertyCommand command \u003d (DeletePropertyCommand) parser.parseCommand(","lastModifiedDate":"2022-10-13"},{"lineNumber":61,"author":{"gitId":"riccqi"},"content":"                DeletePropertyCommand.COMMAND_WORD + \" \" + INDEX_FIRST_ITEM.getOneBased());","lastModifiedDate":"2022-10-13"},{"lineNumber":62,"author":{"gitId":"riccqi"},"content":"        assertEquals(new DeletePropertyCommand(INDEX_FIRST_ITEM), command);","lastModifiedDate":"2022-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"riccqi"},"content":"        EditBuyerCommand command \u003d (EditBuyerCommand) parser.parseCommand(EditBuyerCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"riccqi"},"content":"                + INDEX_FIRST_ITEM.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2022-10-13"},{"lineNumber":71,"author":{"gitId":"riccqi"},"content":"        assertEquals(new EditBuyerCommand(INDEX_FIRST_ITEM, descriptor), command);","lastModifiedDate":"2022-10-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"jchilling"},"content":"    public void parseCommand_listbuyers() throws Exception {","lastModifiedDate":"2022-10-12"},{"lineNumber":96,"author":{"gitId":"jchilling"},"content":"        assertTrue(parser.parseCommand(ListBuyersCommand.COMMAND_WORD) instanceof ListBuyersCommand);","lastModifiedDate":"2022-10-12"},{"lineNumber":97,"author":{"gitId":"jchilling"},"content":"        assertTrue(parser.parseCommand(ListBuyersCommand.COMMAND_WORD + \" 3\") instanceof ListBuyersCommand);","lastModifiedDate":"2022-10-12"},{"lineNumber":98,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":99,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":100,"author":{"gitId":"jchilling"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":101,"author":{"gitId":"jchilling"},"content":"    public void parseCommand_listprops() throws Exception {","lastModifiedDate":"2022-10-12"},{"lineNumber":102,"author":{"gitId":"jchilling"},"content":"        assertTrue(parser.parseCommand(ListPropertiesCommand.COMMAND_WORD) instanceof ListPropertiesCommand);","lastModifiedDate":"2022-10-12"},{"lineNumber":103,"author":{"gitId":"jchilling"},"content":"        assertTrue(parser.parseCommand(ListPropertiesCommand.COMMAND_WORD + \" 3\") instanceof ListPropertiesCommand);","lastModifiedDate":"2022-10-12"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"riccqi":12,"zsiggg":1,"jchilling":18,"-":82,"ChryslineLim":3}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"zsiggg"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PROPERTIES;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"zsiggg"},"content":"import static seedu.address.testutil.TypicalProperties.HUT;","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"zsiggg"},"content":"import static seedu.address.testutil.TypicalProperties.PEAKRESIDENCE;","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"zsiggg"},"content":"import seedu.address.model.property.PropertyNameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"zsiggg"},"content":"import seedu.address.testutil.PersonModelBuilder;","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"zsiggg"},"content":"import seedu.address.testutil.PropertyModelBuilder;","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"zsiggg"},"content":"        assertEquals(new PersonBook(), new PersonBook(modelManager.getPersonModel()));","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"zsiggg"},"content":"        assertEquals(new PropertyBook(), new PropertyBook(modelManager.getPropertyModel()));","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"zsiggg"},"content":"        userPrefs.setPersonBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":53,"author":{"gitId":"zsiggg"},"content":"        userPrefs.setPersonBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"zsiggg"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setPersonModelFilePath(null));","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"zsiggg"},"content":"        modelManager.setPersonModelFilePath(path);","lastModifiedDate":"2022-10-11"},{"lineNumber":78,"author":{"gitId":"zsiggg"},"content":"        assertEquals(path, modelManager.getPersonModelFilePath());","lastModifiedDate":"2022-10-11"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"zsiggg"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":103,"author":{"gitId":"zsiggg"},"content":"    public void setPropertyModelFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":104,"author":{"gitId":"zsiggg"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setPropertyModelFilePath(null));","lastModifiedDate":"2022-10-12"},{"lineNumber":105,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":106,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":107,"author":{"gitId":"zsiggg"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":108,"author":{"gitId":"zsiggg"},"content":"    public void setPropertyModelFilePath_validPath_setsPropertyModelFilePath() {","lastModifiedDate":"2022-10-12"},{"lineNumber":109,"author":{"gitId":"zsiggg"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2022-10-12"},{"lineNumber":110,"author":{"gitId":"zsiggg"},"content":"        modelManager.setPropertyModelFilePath(path);","lastModifiedDate":"2022-10-12"},{"lineNumber":111,"author":{"gitId":"zsiggg"},"content":"        assertEquals(path, modelManager.getPropertyModelFilePath());","lastModifiedDate":"2022-10-12"},{"lineNumber":112,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":113,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":114,"author":{"gitId":"zsiggg"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":115,"author":{"gitId":"zsiggg"},"content":"    public void hasProperty_nullProperty_throwsNullPointerException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":116,"author":{"gitId":"zsiggg"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasProperty(null));","lastModifiedDate":"2022-10-12"},{"lineNumber":117,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":118,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":119,"author":{"gitId":"zsiggg"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":120,"author":{"gitId":"zsiggg"},"content":"    public void hasProperty_propertyNotInPropertyModel_returnsFalse() {","lastModifiedDate":"2022-10-12"},{"lineNumber":121,"author":{"gitId":"zsiggg"},"content":"        assertFalse(modelManager.hasProperty(PEAKRESIDENCE));","lastModifiedDate":"2022-10-12"},{"lineNumber":122,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":123,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":124,"author":{"gitId":"zsiggg"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":125,"author":{"gitId":"zsiggg"},"content":"    public void hasProperty_propertyInPropertyModel_returnsTrue() {","lastModifiedDate":"2022-10-12"},{"lineNumber":126,"author":{"gitId":"zsiggg"},"content":"        modelManager.addProperty(PEAKRESIDENCE);","lastModifiedDate":"2022-10-12"},{"lineNumber":127,"author":{"gitId":"zsiggg"},"content":"        assertTrue(modelManager.hasProperty(PEAKRESIDENCE));","lastModifiedDate":"2022-10-12"},{"lineNumber":128,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":129,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":130,"author":{"gitId":"zsiggg"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":131,"author":{"gitId":"zsiggg"},"content":"    public void getFilteredPropertyList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":132,"author":{"gitId":"zsiggg"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPropertyList().remove(0));","lastModifiedDate":"2022-10-12"},{"lineNumber":133,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":134,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":137,"author":{"gitId":"zsiggg"},"content":"        PersonBook personBook \u003d new PersonModelBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2022-10-13"},{"lineNumber":138,"author":{"gitId":"zsiggg"},"content":"        PersonBook differentPersonBook \u003d new PersonBook();","lastModifiedDate":"2022-10-13"},{"lineNumber":139,"author":{"gitId":"zsiggg"},"content":"        PropertyBook propertyBook \u003d new PropertyModelBuilder().withProperty(PEAKRESIDENCE).withProperty(HUT).build();","lastModifiedDate":"2022-10-13"},{"lineNumber":140,"author":{"gitId":"zsiggg"},"content":"        PropertyBook differentPropertyBook \u003d new PropertyBook();","lastModifiedDate":"2022-10-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":144,"author":{"gitId":"zsiggg"},"content":"        modelManager \u003d new ModelManager(personBook, propertyBook, userPrefs);","lastModifiedDate":"2022-10-13"},{"lineNumber":145,"author":{"gitId":"zsiggg"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(personBook, propertyBook, userPrefs);","lastModifiedDate":"2022-10-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":157,"author":{"gitId":"zsiggg"},"content":"        // different personBook -\u003e returns false","lastModifiedDate":"2022-10-13"},{"lineNumber":158,"author":{"gitId":"zsiggg"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentPersonBook, propertyBook, userPrefs)));","lastModifiedDate":"2022-10-13"},{"lineNumber":159,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":160,"author":{"gitId":"zsiggg"},"content":"        // different propertyBook -\u003e returns false","lastModifiedDate":"2022-10-13"},{"lineNumber":161,"author":{"gitId":"zsiggg"},"content":"        assertFalse(modelManager.equals(new ModelManager(personBook, differentPropertyBook, userPrefs)));","lastModifiedDate":"2022-10-13"},{"lineNumber":162,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":163,"author":{"gitId":"zsiggg"},"content":"        // different personBook and propertyBook -\u003e returns false","lastModifiedDate":"2022-10-13"},{"lineNumber":164,"author":{"gitId":"zsiggg"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentPersonBook, differentPropertyBook, userPrefs)));","lastModifiedDate":"2022-10-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":166,"author":{"gitId":"zsiggg"},"content":"        // different filteredPersonList -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":167,"author":{"gitId":"zsiggg"},"content":"        String[] keywordsForAlice \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2022-10-12"},{"lineNumber":168,"author":{"gitId":"zsiggg"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywordsForAlice)));","lastModifiedDate":"2022-10-12"},{"lineNumber":169,"author":{"gitId":"zsiggg"},"content":"        assertFalse(modelManager.equals(new ModelManager(personBook, propertyBook, userPrefs)));","lastModifiedDate":"2022-10-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":171,"author":{"gitId":"zsiggg"},"content":"        // resets filteredPersonList in modelManager for upcoming tests","lastModifiedDate":"2022-10-12"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":174,"author":{"gitId":"zsiggg"},"content":"        // different filteredPropertyList -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":175,"author":{"gitId":"riccqi"},"content":"        String[] keywordsForPeak \u003d PEAKRESIDENCE.getPropertyName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2022-10-20"},{"lineNumber":176,"author":{"gitId":"zsiggg"},"content":"        modelManager.updateFilteredPropertyList(","lastModifiedDate":"2022-10-12"},{"lineNumber":177,"author":{"gitId":"zsiggg"},"content":"                new PropertyNameContainsKeywordsPredicate(Arrays.asList(keywordsForPeak)));","lastModifiedDate":"2022-10-12"},{"lineNumber":178,"author":{"gitId":"zsiggg"},"content":"        assertFalse(modelManager.equals(new ModelManager(personBook, propertyBook, userPrefs)));","lastModifiedDate":"2022-10-13"},{"lineNumber":179,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":180,"author":{"gitId":"zsiggg"},"content":"        // resets filteredPropertyList in modelManager for upcoming tests","lastModifiedDate":"2022-10-12"},{"lineNumber":181,"author":{"gitId":"zsiggg"},"content":"        modelManager.updateFilteredPropertyList(PREDICATE_SHOW_ALL_PROPERTIES);","lastModifiedDate":"2022-10-12"},{"lineNumber":182,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":185,"author":{"gitId":"zsiggg"},"content":"        differentUserPrefs.setPersonBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":186,"author":{"gitId":"zsiggg"},"content":"        assertFalse(modelManager.equals(new ModelManager(personBook, propertyBook, differentUserPrefs)));","lastModifiedDate":"2022-10-13"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"riccqi":1,"zsiggg":75,"-":112}},{"path":"src/test/java/seedu/address/model/PersonBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"jchilling"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.VALID_PRIORITY_HIGH;","lastModifiedDate":"2022-10-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"riccqi"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalPersonsBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"zsiggg"},"content":"public class PersonBookTest {","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"zsiggg"},"content":"    private final PersonBook personBook \u003d new PersonBook();","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"zsiggg"},"content":"        assertEquals(Collections.emptyList(), personBook.getPersonList());","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"zsiggg"},"content":"        assertThrows(NullPointerException.class, () -\u003e personBook.resetData(null));","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"riccqi"},"content":"        PersonBook newData \u003d getTypicalPersonsBook();","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"zsiggg"},"content":"        personBook.resetData(newData);","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"zsiggg"},"content":"        assertEquals(newData, personBook);","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"jchilling"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withPriority(VALID_PRIORITY_HIGH)","lastModifiedDate":"2022-10-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"zsiggg"},"content":"        PersonBookStub newData \u003d new PersonBookStub(newPersons);","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":54,"author":{"gitId":"zsiggg"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e personBook.resetData(newData));","lastModifiedDate":"2022-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"zsiggg"},"content":"        assertThrows(NullPointerException.class, () -\u003e personBook.hasPerson(null));","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"zsiggg"},"content":"        assertFalse(personBook.hasPerson(ALICE));","lastModifiedDate":"2022-10-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"zsiggg"},"content":"        personBook.addPerson(ALICE);","lastModifiedDate":"2022-10-13"},{"lineNumber":70,"author":{"gitId":"zsiggg"},"content":"        assertTrue(personBook.hasPerson(ALICE));","lastModifiedDate":"2022-10-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"zsiggg"},"content":"        personBook.addPerson(ALICE);","lastModifiedDate":"2022-10-13"},{"lineNumber":76,"author":{"gitId":"jchilling"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withPriority(VALID_PRIORITY_HIGH)","lastModifiedDate":"2022-10-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"zsiggg"},"content":"        assertTrue(personBook.hasPerson(editedAlice));","lastModifiedDate":"2022-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":83,"author":{"gitId":"zsiggg"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e personBook.getPersonList().remove(0));","lastModifiedDate":"2022-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":87,"author":{"gitId":"zsiggg"},"content":"     * A stub ReadOnlyPersonBook whose persons list can violate interface constraints.","lastModifiedDate":"2022-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":89,"author":{"gitId":"zsiggg"},"content":"    private static class PersonBookStub implements ReadOnlyPersonBook {","lastModifiedDate":"2022-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":92,"author":{"gitId":"zsiggg"},"content":"        PersonBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2022-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"riccqi":3,"zsiggg":18,"jchilling":3,"-":77}},{"path":"src/test/java/seedu/address/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"zsiggg"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setPersonBookFilePath(null));","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"zsiggg":1,"-":20}},{"path":"src/test/java/seedu/address/model/address/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jchilling"},"content":"package seedu.address.model.address;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"jchilling"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"jchilling"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"jchilling"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"jchilling"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"jchilling"},"content":"public class AddressTest {","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"jchilling"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"jchilling"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"jchilling"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"jchilling"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"jchilling"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"jchilling"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"jchilling"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Address(invalidAddress));","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"jchilling"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"jchilling"},"content":"    public void isValidAddress() {","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"jchilling"},"content":"        // null address","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"jchilling"},"content":"        assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"jchilling"},"content":"        // invalid addresses","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"jchilling"},"content":"        assertFalse(Address.isValidAddress(\"\")); // empty string","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"jchilling"},"content":"        assertFalse(Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"jchilling"},"content":"        // valid addresses","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"jchilling"},"content":"        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"jchilling"},"content":"        assertTrue(Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"jchilling"},"content":"        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"jchilling"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"jchilling":36}},{"path":"src/test/java/seedu/address/model/characteristics/CharacteristicsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ChryslineLim"},"content":"package seedu.address.model.characteristics;","lastModifiedDate":"2022-10-19"},{"lineNumber":2,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":3,"author":{"gitId":"ChryslineLim"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-19"},{"lineNumber":4,"author":{"gitId":"ChryslineLim"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-19"},{"lineNumber":5,"author":{"gitId":"ChryslineLim"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-19"},{"lineNumber":6,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":7,"author":{"gitId":"ChryslineLim"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-19"},{"lineNumber":8,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":9,"author":{"gitId":"ChryslineLim"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-10-19"},{"lineNumber":10,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":11,"author":{"gitId":"ChryslineLim"},"content":"public class CharacteristicsTest {","lastModifiedDate":"2022-10-19"},{"lineNumber":12,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":13,"author":{"gitId":"ChryslineLim"},"content":"    @Test","lastModifiedDate":"2022-10-19"},{"lineNumber":14,"author":{"gitId":"ChryslineLim"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-19"},{"lineNumber":15,"author":{"gitId":"ChryslineLim"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2022-10-19"},{"lineNumber":16,"author":{"gitId":"ChryslineLim"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":17,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":18,"author":{"gitId":"ChryslineLim"},"content":"    @Test","lastModifiedDate":"2022-10-19"},{"lineNumber":19,"author":{"gitId":"ChryslineLim"},"content":"    public void constructor_invalidDesiredCharacteristics_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-19"},{"lineNumber":20,"author":{"gitId":"ChryslineLim"},"content":"        String invalidDesiredCharacteristics \u003d \"\";","lastModifiedDate":"2022-10-19"},{"lineNumber":21,"author":{"gitId":"ChryslineLim"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Characteristics(invalidDesiredCharacteristics));","lastModifiedDate":"2022-10-19"},{"lineNumber":22,"author":{"gitId":"ChryslineLim"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":23,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":24,"author":{"gitId":"ChryslineLim"},"content":"    @Test","lastModifiedDate":"2022-10-19"},{"lineNumber":25,"author":{"gitId":"ChryslineLim"},"content":"    public void isValidDesiredCharacteristics() {","lastModifiedDate":"2022-10-19"},{"lineNumber":26,"author":{"gitId":"ChryslineLim"},"content":"        // null name","lastModifiedDate":"2022-10-19"},{"lineNumber":27,"author":{"gitId":"ChryslineLim"},"content":"        assertThrows(NullPointerException.class, () -\u003e Characteristics.isValidCharacteristics(null));","lastModifiedDate":"2022-10-19"},{"lineNumber":28,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":29,"author":{"gitId":"ChryslineLim"},"content":"        // invalid desired characteristics","lastModifiedDate":"2022-10-19"},{"lineNumber":30,"author":{"gitId":"ChryslineLim"},"content":"        assertFalse(Characteristics.isValidCharacteristics(\"\")); // empty string","lastModifiedDate":"2022-10-19"},{"lineNumber":31,"author":{"gitId":"ChryslineLim"},"content":"        assertFalse(Characteristics.isValidCharacteristics(\" \")); // spaces only","lastModifiedDate":"2022-10-19"},{"lineNumber":32,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":33,"author":{"gitId":"ChryslineLim"},"content":"        // valid desired characteristics","lastModifiedDate":"2022-10-19"},{"lineNumber":34,"author":{"gitId":"ChryslineLim"},"content":"        assertTrue(Characteristics.isValidCharacteristics(\"Bright\"));","lastModifiedDate":"2022-10-19"},{"lineNumber":35,"author":{"gitId":"ChryslineLim"},"content":"        assertTrue(Characteristics.isValidCharacteristics(\"Multiple words\"));","lastModifiedDate":"2022-10-19"},{"lineNumber":36,"author":{"gitId":"ChryslineLim"},"content":"        assertTrue(Characteristics.isValidCharacteristics(\"Words; Separated; \"));","lastModifiedDate":"2022-10-19"},{"lineNumber":37,"author":{"gitId":"ChryslineLim"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":38,"author":{"gitId":"ChryslineLim"},"content":"}","lastModifiedDate":"2022-10-19"}],"authorContributionMap":{"ChryslineLim":38}},{"path":"src/test/java/seedu/address/model/person/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"zsiggg"},"content":"import seedu.address.model.address.Address;","lastModifiedDate":"2022-10-08"},{"lineNumber":10,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AddressTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Address(invalidAddress));","lastModifiedDate":"2019-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void isValidAddress() {","lastModifiedDate":"2017-01-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // null address","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // invalid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"zsiggg":2,"-":36}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.VALID_DESIRED_CHARACTERISTICS_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.VALID_PRICE_RANGE_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"jchilling"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.VALID_PRIORITY_HIGH;","lastModifiedDate":"2022-10-19"},{"lineNumber":12,"author":{"gitId":"jchilling"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.VALID_PRIORITY_LOW;","lastModifiedDate":"2022-10-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"jchilling"},"content":"    //    @Test","lastModifiedDate":"2022-10-19"},{"lineNumber":23,"author":{"gitId":"jchilling"},"content":"    //    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-19"},{"lineNumber":24,"author":{"gitId":"jchilling"},"content":"    //        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2022-10-19"},{"lineNumber":25,"author":{"gitId":"jchilling"},"content":"    //        assertThrows(UnsupportedOperationException.class, () -\u003e person.getName().toString());","lastModifiedDate":"2022-10-19"},{"lineNumber":26,"author":{"gitId":"jchilling"},"content":"    //    }","lastModifiedDate":"2022-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":37,"author":{"gitId":"ChryslineLim"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE)","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"ChryslineLim"},"content":"                .withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"ChryslineLim"},"content":"                .withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"ChryslineLim"},"content":"                .withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"ChryslineLim"},"content":"                .withPriceRange(VALID_PRICE_RANGE_BOB)","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"riccqi"},"content":"                .withDesiredCharacteristics(VALID_DESIRED_CHARACTERISTICS_BOB)","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"jchilling"},"content":"                .withPriority(VALID_PRIORITY_HIGH).build();","lastModifiedDate":"2022-10-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":94,"author":{"gitId":"ChryslineLim"},"content":"        // different price range -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":95,"author":{"gitId":"ChryslineLim"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPriceRange(VALID_PRICE_RANGE_BOB).build();","lastModifiedDate":"2022-10-12"},{"lineNumber":96,"author":{"gitId":"ChryslineLim"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2022-10-12"},{"lineNumber":97,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":98,"author":{"gitId":"ChryslineLim"},"content":"        // different desired characteristics -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":99,"author":{"gitId":"ChryslineLim"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_DESIRED_CHARACTERISTICS_BOB).build();","lastModifiedDate":"2022-10-12"},{"lineNumber":100,"author":{"gitId":"ChryslineLim"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2022-10-12"},{"lineNumber":101,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":103,"author":{"gitId":"jchilling"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPriority(VALID_PRIORITY_LOW).build();","lastModifiedDate":"2022-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"riccqi":7,"jchilling":9,"-":77,"ChryslineLim":13}},{"path":"src/test/java/seedu/address/model/person/PriorityTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jchilling"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":7,"author":{"gitId":"jchilling"},"content":"public class PriorityTest {","lastModifiedDate":"2022-10-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":11,"author":{"gitId":"jchilling"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Priority(null));","lastModifiedDate":"2022-10-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"jchilling"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Priority(invalidTagName));","lastModifiedDate":"2022-10-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2017-12-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2017-12-04"},{"lineNumber":23,"author":{"gitId":"jchilling"},"content":"        assertThrows(NullPointerException.class, () -\u003e Priority.isValidPriority(null));","lastModifiedDate":"2022-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-12-04"}],"authorContributionMap":{"jchilling":5,"-":21}},{"path":"src/test/java/seedu/address/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-08-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"jchilling"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.VALID_PRIORITY_HIGH;","lastModifiedDate":"2022-10-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"jchilling"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withPriority(VALID_PRIORITY_HIGH)","lastModifiedDate":"2022-10-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"jchilling"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withPriority(VALID_PRIORITY_HIGH)","lastModifiedDate":"2022-10-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"riccqi":1,"jchilling":3,"-":166}},{"path":"src/test/java/seedu/address/model/pricerange/PriceRangeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ChryslineLim"},"content":"package seedu.address.model.pricerange;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"ChryslineLim"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"ChryslineLim"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"ChryslineLim"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"ChryslineLim"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"ChryslineLim"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"ChryslineLim"},"content":"public class PriceRangeTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"ChryslineLim"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"ChryslineLim"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"ChryslineLim"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"ChryslineLim"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"ChryslineLim"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"ChryslineLim"},"content":"    public void constructor_invalidPriceRange_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"ChryslineLim"},"content":"        String invalidPriceRange \u003d \"200\";","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"ChryslineLim"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new PriceRange(invalidPriceRange));","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"ChryslineLim"},"content":"        String invalidEmptyPriceRange \u003d \"\";","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"ChryslineLim"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new PriceRange(invalidEmptyPriceRange));","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"ChryslineLim"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"ChryslineLim"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"ChryslineLim"},"content":"    public void isValidName() {","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"ChryslineLim"},"content":"        // null price range","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"ChryslineLim"},"content":"        assertThrows(NullPointerException.class, () -\u003e PriceRange.isValidPriceRange(null));","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"ChryslineLim"},"content":"        // invalid price range","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"ChryslineLim"},"content":"        assertFalse(PriceRange.isValidPriceRange(\"\")); // empty string","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"ChryslineLim"},"content":"        assertFalse(PriceRange.isValidPriceRange(\" \")); // spaces only","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"ChryslineLim"},"content":"        assertFalse(PriceRange.isValidPriceRange(\"200\")); // only one value","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"ChryslineLim"},"content":"        assertFalse(PriceRange.isValidPriceRange(\"500-200\")); // low before high","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"ChryslineLim"},"content":"        assertFalse(PriceRange.isValidPriceRange(\"200;300\")); // wrong separator","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"ChryslineLim"},"content":"        // valid price range","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"ChryslineLim"},"content":"        assertTrue(PriceRange.isValidPriceRange(\"200 - 500\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"ChryslineLim"},"content":"        assertTrue(PriceRange.isValidPriceRange(\"200-500\")); // no spacing","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"ChryslineLim"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"ChryslineLim"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"ChryslineLim":42}},{"path":"src/test/java/seedu/address/model/property/DescriptionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jchilling"},"content":"package seedu.address.model.property;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"jchilling"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"jchilling"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"jchilling"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"jchilling"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"jchilling"},"content":"public class DescriptionTest {","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"jchilling"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"jchilling"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"jchilling"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Description(null));","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"jchilling"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"jchilling"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"jchilling"},"content":"        String invalidDescription \u003d \"\";","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"jchilling"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Description(invalidDescription));","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"jchilling"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"jchilling"},"content":"    public void isValidDescription() {","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"jchilling"},"content":"        // null description","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"jchilling"},"content":"        assertThrows(NullPointerException.class, () -\u003e Description.isValidDescription(null));","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"jchilling"},"content":"        // blank description","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"jchilling"},"content":"        assertFalse(Description.isValidDescription(\"\")); // empty string","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"jchilling"},"content":"        assertFalse(Description.isValidDescription(\" \")); // spaces only","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"jchilling"},"content":"        // valid description","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"jchilling"},"content":"        assertTrue(Description.isValidDescription(\"A 5-storey condo on top of a hill\"));","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"jchilling"},"content":"        assertTrue(Description.isValidDescription(\"-\")); // one character","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"jchilling"},"content":"        assertTrue(Description.isValidDescription(\"A 5-storey condo on top of a hill - \"","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"jchilling"},"content":"                + \"Peak Residence offers you serenity away from the hustle and bustle with \"","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"jchilling"},"content":"                + \"breathtaking views all around.\"","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"jchilling"},"content":"        )); // long description","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"jchilling"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"jchilling":39}},{"path":"src/test/java/seedu/address/model/property/PriceTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jchilling"},"content":"package seedu.address.model.property;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"jchilling"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"jchilling"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"jchilling"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"jchilling"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"jchilling"},"content":"public class PriceTest {","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"jchilling"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"jchilling"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"jchilling"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Price(null));","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"jchilling"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"jchilling"},"content":"    public void constructor_invalidPrice_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"jchilling"},"content":"        String invalidPrice \u003d \"\";","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"jchilling"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Price(invalidPrice));","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"jchilling"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"jchilling"},"content":"    public void isValidPrice() {","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"jchilling"},"content":"        // null price","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"jchilling"},"content":"        assertThrows(NullPointerException.class, () -\u003e Price.isValidPrice(null));","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"jchilling"},"content":"        // invalid prices","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"jchilling"},"content":"        assertFalse(Price.isValidPrice(\"\")); // empty string","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"jchilling"},"content":"        assertFalse(Price.isValidPrice(\" \")); // spaces only","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"jchilling"},"content":"        assertFalse(Price.isValidPrice(\"phone\")); // non-numeric","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"jchilling"},"content":"        assertFalse(Price.isValidPrice(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"jchilling"},"content":"        assertFalse(Price.isValidPrice(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"jchilling"},"content":"        // valid price","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"jchilling"},"content":"        assertTrue(Price.isValidPrice(\"911\")); // exactly 3 numbers","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"jchilling"},"content":"        assertTrue(Price.isValidPrice(\"93121534\"));","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"jchilling"},"content":"        assertTrue(Price.isValidPrice(\"124293842033123\")); // long price","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"jchilling"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"jchilling":39}},{"path":"src/test/java/seedu/address/model/property/PropertyNameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jchilling"},"content":"package seedu.address.model.property;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"jchilling"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"jchilling"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"jchilling"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"jchilling"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"jchilling"},"content":"import java.util.List;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"jchilling"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"jchilling"},"content":"import seedu.address.testutil.PropertyBuilder;","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"jchilling"},"content":"public class PropertyNameContainsKeywordsPredicateTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"jchilling"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"jchilling"},"content":"    public void equals() {","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"jchilling"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"jchilling"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"jchilling"},"content":"        PropertyNameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"jchilling"},"content":"                new PropertyNameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"jchilling"},"content":"        PropertyNameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"jchilling"},"content":"                new PropertyNameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"jchilling"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"jchilling"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"jchilling"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"jchilling"},"content":"        PropertyNameContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"jchilling"},"content":"                new PropertyNameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"jchilling"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"jchilling"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"jchilling"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"jchilling"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"jchilling"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"jchilling"},"content":"        // different property -\u003e returns false","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"jchilling"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"jchilling"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"jchilling"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"jchilling"},"content":"        // One keyword","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"jchilling"},"content":"        PropertyNameContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"jchilling"},"content":"                new PropertyNameContainsKeywordsPredicate(Collections.singletonList(\"Peak\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"jchilling"},"content":"        assertTrue(predicate.test(new PropertyBuilder().withName(\"Peak Residence\").build()));","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"jchilling"},"content":"        // Multiple keywords","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"jchilling"},"content":"        predicate \u003d new PropertyNameContainsKeywordsPredicate(Arrays.asList(\"Peak\", \"Residence\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"jchilling"},"content":"        assertTrue(predicate.test(new PropertyBuilder().withName(\"Peak Residence\").build()));","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"jchilling"},"content":"        // Only one matching keyword","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"jchilling"},"content":"        predicate \u003d new PropertyNameContainsKeywordsPredicate(Arrays.asList(\"University\", \"Residence\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"jchilling"},"content":"        assertTrue(predicate.test(new PropertyBuilder().withName(\"Peak Residence\").build()));","lastModifiedDate":"2022-10-09"},{"lineNumber":58,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"jchilling"},"content":"        // Mixed-case keywords","lastModifiedDate":"2022-10-09"},{"lineNumber":60,"author":{"gitId":"jchilling"},"content":"        predicate \u003d new PropertyNameContainsKeywordsPredicate(Arrays.asList(\"pEaK\", \"rESiDEnce\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"jchilling"},"content":"        assertTrue(predicate.test(new PropertyBuilder().withName(\"Peak Residence\").build()));","lastModifiedDate":"2022-10-09"},{"lineNumber":62,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":63,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":64,"author":{"gitId":"jchilling"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":65,"author":{"gitId":"jchilling"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2022-10-09"},{"lineNumber":66,"author":{"gitId":"jchilling"},"content":"        // Zero keywords","lastModifiedDate":"2022-10-09"},{"lineNumber":67,"author":{"gitId":"jchilling"},"content":"        PropertyNameContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"jchilling"},"content":"                new PropertyNameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"jchilling"},"content":"        assertFalse(predicate.test(new PropertyBuilder().withName(\"Peak Residence\").build()));","lastModifiedDate":"2022-10-09"},{"lineNumber":70,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":71,"author":{"gitId":"jchilling"},"content":"        // Non-matching keyword","lastModifiedDate":"2022-10-09"},{"lineNumber":72,"author":{"gitId":"jchilling"},"content":"        predicate \u003d new PropertyNameContainsKeywordsPredicate(Arrays.asList(\"Hut\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":73,"author":{"gitId":"jchilling"},"content":"        assertFalse(predicate.test(new PropertyBuilder().withName(\"Peak Residence\").build()));","lastModifiedDate":"2022-10-09"},{"lineNumber":74,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":75,"author":{"gitId":"jchilling"},"content":"        // Keywords match price, address and description, but does not match name","lastModifiedDate":"2022-10-09"},{"lineNumber":76,"author":{"gitId":"jchilling"},"content":"        predicate \u003d","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"jchilling"},"content":"                new PropertyNameContainsKeywordsPredicate(Arrays.asList(\"3000000\", \"Main\", \"Street\", \"condo\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"jchilling"},"content":"        assertFalse(predicate.test(new PropertyBuilder().withName(\"Peak Residence\").withPrice(\"3000000\")","lastModifiedDate":"2022-10-09"},{"lineNumber":79,"author":{"gitId":"jchilling"},"content":"              .withAddress(\"Main Street\").withDescription(\"condo\").build()));","lastModifiedDate":"2022-10-09"},{"lineNumber":80,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":81,"author":{"gitId":"jchilling"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"jchilling":81}},{"path":"src/test/java/seedu/address/model/property/PropertyNameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jchilling"},"content":"package seedu.address.model.property;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"jchilling"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"jchilling"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"jchilling"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"jchilling"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"jchilling"},"content":"public class PropertyNameTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"jchilling"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"jchilling"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"jchilling"},"content":"        assertThrows(NullPointerException.class, () -\u003e new PropertyName(null));","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"jchilling"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"jchilling"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"jchilling"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"jchilling"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new PropertyName(invalidName));","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"jchilling"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"jchilling"},"content":"    public void isValidPropertyName() {","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"jchilling"},"content":"        // null name","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"jchilling"},"content":"        assertThrows(NullPointerException.class, () -\u003e PropertyName.isValidPropertyName(null));","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"jchilling"},"content":"        // invalid name","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"jchilling"},"content":"        assertFalse(PropertyName.isValidPropertyName(\"\")); // empty string","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"jchilling"},"content":"        assertFalse(PropertyName.isValidPropertyName(\" \")); // spaces only","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"jchilling"},"content":"        assertFalse(PropertyName.isValidPropertyName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"jchilling"},"content":"        assertFalse(PropertyName.isValidPropertyName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"jchilling"},"content":"        // valid name","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"jchilling"},"content":"        assertTrue(PropertyName.isValidPropertyName(\"tembusu college\")); // alphabets only","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"jchilling"},"content":"        assertTrue(PropertyName.isValidPropertyName(\"12345\")); // numbers only","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"jchilling"},"content":"        assertTrue(PropertyName.isValidPropertyName(\"21 century residence\")); // alphanumeric characters","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"jchilling"},"content":"        assertTrue(PropertyName.isValidPropertyName(\"Peak Residence\")); // with capital letters","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"jchilling"},"content":"        assertTrue(PropertyName.isValidPropertyName(\"Heng Mui Keng Street 2 5 Condo\")); // long names","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"jchilling"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"jchilling":40}},{"path":"src/test/java/seedu/address/model/property/UniquePropertyListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jchilling"},"content":"package seedu.address.model.property;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"jchilling"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"jchilling"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"jchilling"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.VALID_ADDRESS_HOME;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"jchilling"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"jchilling"},"content":"import static seedu.address.testutil.TypicalProperties.HOME;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"jchilling"},"content":"import static seedu.address.testutil.TypicalProperties.PEAKRESIDENCE;","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"jchilling"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"jchilling"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"jchilling"},"content":"import java.util.List;","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"jchilling"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"jchilling"},"content":"import seedu.address.model.property.exceptions.DuplicatePropertyException;","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"jchilling"},"content":"import seedu.address.model.property.exceptions.PropertyNotFoundException;","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"jchilling"},"content":"import seedu.address.testutil.PropertyBuilder;","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"jchilling"},"content":"public class UniquePropertyListTest {","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"jchilling"},"content":"    private final UniquePropertyList uniquePropertyList \u003d new UniquePropertyList();","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"jchilling"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"jchilling"},"content":"    public void contains_nullProperty_throwsNullPointerException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"jchilling"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePropertyList.contains(null));","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"jchilling"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"jchilling"},"content":"    public void contains_propertyNotInList_returnsFalse() {","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"jchilling"},"content":"        assertFalse(uniquePropertyList.contains(PEAKRESIDENCE));","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"jchilling"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"jchilling"},"content":"    public void contains_propertyInList_returnsTrue() {","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"jchilling"},"content":"        uniquePropertyList.add(PEAKRESIDENCE);","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"jchilling"},"content":"        assertTrue(uniquePropertyList.contains(PEAKRESIDENCE));","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"jchilling"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"jchilling"},"content":"    public void contains_propertyWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"jchilling"},"content":"        uniquePropertyList.add(PEAKRESIDENCE);","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"jchilling"},"content":"        Property editedPeakResidence \u003d new PropertyBuilder(PEAKRESIDENCE)","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"jchilling"},"content":"                .withAddress(VALID_ADDRESS_HOME)","lastModifiedDate":"2022-10-19"},{"lineNumber":46,"author":{"gitId":"jchilling"},"content":"                .build();","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"jchilling"},"content":"        assertTrue(uniquePropertyList.contains(editedPeakResidence));","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"jchilling"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"jchilling"},"content":"    public void add_nullProperty_throwsNullPointerException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"jchilling"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePropertyList.add(null));","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"jchilling"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"jchilling"},"content":"    public void add_duplicateProperty_throwsDuplicatePropertyException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":57,"author":{"gitId":"jchilling"},"content":"        uniquePropertyList.add(PEAKRESIDENCE);","lastModifiedDate":"2022-10-09"},{"lineNumber":58,"author":{"gitId":"jchilling"},"content":"        assertThrows(DuplicatePropertyException.class, () -\u003e uniquePropertyList.add(PEAKRESIDENCE));","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":60,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":61,"author":{"gitId":"jchilling"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":62,"author":{"gitId":"jchilling"},"content":"    public void setProperty_nullTargetProperty_throwsNullPointerException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":63,"author":{"gitId":"jchilling"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePropertyList.setProperty(null, PEAKRESIDENCE));","lastModifiedDate":"2022-10-09"},{"lineNumber":64,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":65,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":66,"author":{"gitId":"jchilling"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":67,"author":{"gitId":"jchilling"},"content":"    public void setProperty_nullEditedProperty_throwsNullPointerException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":68,"author":{"gitId":"jchilling"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePropertyList.setProperty(PEAKRESIDENCE, null));","lastModifiedDate":"2022-10-09"},{"lineNumber":69,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":70,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":71,"author":{"gitId":"jchilling"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":72,"author":{"gitId":"jchilling"},"content":"    public void setProperty_targetPropertyNotInList_throwsPropertyNotFoundException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":73,"author":{"gitId":"jchilling"},"content":"        assertThrows(","lastModifiedDate":"2022-10-09"},{"lineNumber":74,"author":{"gitId":"jchilling"},"content":"                PropertyNotFoundException.class, (","lastModifiedDate":"2022-10-09"},{"lineNumber":75,"author":{"gitId":"jchilling"},"content":"                ) -\u003e uniquePropertyList.setProperty(PEAKRESIDENCE, PEAKRESIDENCE));","lastModifiedDate":"2022-10-09"},{"lineNumber":76,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":77,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":78,"author":{"gitId":"jchilling"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":79,"author":{"gitId":"jchilling"},"content":"    public void setProperty_editedPropertyIsSameProperty_success() {","lastModifiedDate":"2022-10-09"},{"lineNumber":80,"author":{"gitId":"jchilling"},"content":"        uniquePropertyList.add(PEAKRESIDENCE);","lastModifiedDate":"2022-10-09"},{"lineNumber":81,"author":{"gitId":"jchilling"},"content":"        uniquePropertyList.setProperty(PEAKRESIDENCE, PEAKRESIDENCE);","lastModifiedDate":"2022-10-09"},{"lineNumber":82,"author":{"gitId":"jchilling"},"content":"        UniquePropertyList expectedUniquePropertyList \u003d new UniquePropertyList();","lastModifiedDate":"2022-10-09"},{"lineNumber":83,"author":{"gitId":"jchilling"},"content":"        expectedUniquePropertyList.add(PEAKRESIDENCE);","lastModifiedDate":"2022-10-09"},{"lineNumber":84,"author":{"gitId":"jchilling"},"content":"        assertEquals(expectedUniquePropertyList, uniquePropertyList);","lastModifiedDate":"2022-10-09"},{"lineNumber":85,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":86,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":87,"author":{"gitId":"jchilling"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":88,"author":{"gitId":"jchilling"},"content":"    public void setProperty_editedPropertyHasSameIdentity_success() {","lastModifiedDate":"2022-10-09"},{"lineNumber":89,"author":{"gitId":"jchilling"},"content":"        uniquePropertyList.add(PEAKRESIDENCE);","lastModifiedDate":"2022-10-09"},{"lineNumber":90,"author":{"gitId":"jchilling"},"content":"        Property editedPeakResidence \u003d new PropertyBuilder(PEAKRESIDENCE).withPrice(\"3000000\")","lastModifiedDate":"2022-10-09"},{"lineNumber":91,"author":{"gitId":"jchilling"},"content":"                .withAddress(VALID_ADDRESS_HOME)","lastModifiedDate":"2022-10-19"},{"lineNumber":92,"author":{"gitId":"jchilling"},"content":"                .build();","lastModifiedDate":"2022-10-09"},{"lineNumber":93,"author":{"gitId":"jchilling"},"content":"        uniquePropertyList.setProperty(PEAKRESIDENCE, editedPeakResidence);","lastModifiedDate":"2022-10-09"},{"lineNumber":94,"author":{"gitId":"jchilling"},"content":"        UniquePropertyList expectedUniquePropertyList \u003d new UniquePropertyList();","lastModifiedDate":"2022-10-09"},{"lineNumber":95,"author":{"gitId":"jchilling"},"content":"        expectedUniquePropertyList.add(editedPeakResidence);","lastModifiedDate":"2022-10-09"},{"lineNumber":96,"author":{"gitId":"jchilling"},"content":"        assertEquals(expectedUniquePropertyList, uniquePropertyList);","lastModifiedDate":"2022-10-09"},{"lineNumber":97,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":98,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":99,"author":{"gitId":"jchilling"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":100,"author":{"gitId":"jchilling"},"content":"    public void setProperty_editedPropertyHasDifferentIdentity_success() {","lastModifiedDate":"2022-10-09"},{"lineNumber":101,"author":{"gitId":"jchilling"},"content":"        uniquePropertyList.add(PEAKRESIDENCE);","lastModifiedDate":"2022-10-09"},{"lineNumber":102,"author":{"gitId":"jchilling"},"content":"        uniquePropertyList.setProperty(PEAKRESIDENCE, HOME);","lastModifiedDate":"2022-10-09"},{"lineNumber":103,"author":{"gitId":"jchilling"},"content":"        UniquePropertyList expectedUniquePropertyList \u003d new UniquePropertyList();","lastModifiedDate":"2022-10-09"},{"lineNumber":104,"author":{"gitId":"jchilling"},"content":"        expectedUniquePropertyList.add(HOME);","lastModifiedDate":"2022-10-09"},{"lineNumber":105,"author":{"gitId":"jchilling"},"content":"        assertEquals(expectedUniquePropertyList, uniquePropertyList);","lastModifiedDate":"2022-10-09"},{"lineNumber":106,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":107,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":108,"author":{"gitId":"jchilling"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":109,"author":{"gitId":"jchilling"},"content":"    public void setProperty_editedPropertyHasNonUniqueIdentity_throwsDuplicatePropertyException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":110,"author":{"gitId":"jchilling"},"content":"        uniquePropertyList.add(PEAKRESIDENCE);","lastModifiedDate":"2022-10-09"},{"lineNumber":111,"author":{"gitId":"jchilling"},"content":"        uniquePropertyList.add(HOME);","lastModifiedDate":"2022-10-09"},{"lineNumber":112,"author":{"gitId":"jchilling"},"content":"        assertThrows(DuplicatePropertyException.class, () -\u003e uniquePropertyList.setProperty(PEAKRESIDENCE, HOME));","lastModifiedDate":"2022-10-09"},{"lineNumber":113,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":114,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":115,"author":{"gitId":"jchilling"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":116,"author":{"gitId":"jchilling"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":117,"author":{"gitId":"jchilling"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePropertyList.remove(null));","lastModifiedDate":"2022-10-09"},{"lineNumber":118,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":119,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":120,"author":{"gitId":"jchilling"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":121,"author":{"gitId":"jchilling"},"content":"    public void remove_propertyDoesNotExist_throwsPropertyNotFoundException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":122,"author":{"gitId":"jchilling"},"content":"        assertThrows(PropertyNotFoundException.class, () -\u003e uniquePropertyList.remove(PEAKRESIDENCE));","lastModifiedDate":"2022-10-09"},{"lineNumber":123,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":124,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":125,"author":{"gitId":"jchilling"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":126,"author":{"gitId":"jchilling"},"content":"    public void remove_existingProperty_removesProperty() {","lastModifiedDate":"2022-10-09"},{"lineNumber":127,"author":{"gitId":"jchilling"},"content":"        uniquePropertyList.add(PEAKRESIDENCE);","lastModifiedDate":"2022-10-09"},{"lineNumber":128,"author":{"gitId":"jchilling"},"content":"        uniquePropertyList.remove(PEAKRESIDENCE);","lastModifiedDate":"2022-10-09"},{"lineNumber":129,"author":{"gitId":"jchilling"},"content":"        UniquePropertyList expectedUniquePropertyList \u003d new UniquePropertyList();","lastModifiedDate":"2022-10-09"},{"lineNumber":130,"author":{"gitId":"jchilling"},"content":"        assertEquals(expectedUniquePropertyList, uniquePropertyList);","lastModifiedDate":"2022-10-09"},{"lineNumber":131,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":132,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":133,"author":{"gitId":"jchilling"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":134,"author":{"gitId":"jchilling"},"content":"    public void setProperties_nullUniquePropertyList_throwsNullPointerException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":135,"author":{"gitId":"jchilling"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePropertyList.setProperties((UniquePropertyList) null));","lastModifiedDate":"2022-10-09"},{"lineNumber":136,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":137,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":138,"author":{"gitId":"jchilling"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":139,"author":{"gitId":"jchilling"},"content":"    public void setProperties_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2022-10-09"},{"lineNumber":140,"author":{"gitId":"jchilling"},"content":"        uniquePropertyList.add(PEAKRESIDENCE);","lastModifiedDate":"2022-10-09"},{"lineNumber":141,"author":{"gitId":"jchilling"},"content":"        UniquePropertyList expectedUniquePropertyList \u003d new UniquePropertyList();","lastModifiedDate":"2022-10-09"},{"lineNumber":142,"author":{"gitId":"jchilling"},"content":"        expectedUniquePropertyList.add(HOME);","lastModifiedDate":"2022-10-09"},{"lineNumber":143,"author":{"gitId":"jchilling"},"content":"        uniquePropertyList.setProperties(expectedUniquePropertyList);","lastModifiedDate":"2022-10-09"},{"lineNumber":144,"author":{"gitId":"jchilling"},"content":"        assertEquals(expectedUniquePropertyList, uniquePropertyList);","lastModifiedDate":"2022-10-09"},{"lineNumber":145,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":146,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":147,"author":{"gitId":"jchilling"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":148,"author":{"gitId":"jchilling"},"content":"    public void setProperties_nullList_throwsNullPointerException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":149,"author":{"gitId":"jchilling"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePropertyList.setProperties((List\u003cProperty\u003e) null));","lastModifiedDate":"2022-10-09"},{"lineNumber":150,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":151,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":152,"author":{"gitId":"jchilling"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":153,"author":{"gitId":"jchilling"},"content":"    public void setProperties_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2022-10-09"},{"lineNumber":154,"author":{"gitId":"jchilling"},"content":"        uniquePropertyList.add(PEAKRESIDENCE);","lastModifiedDate":"2022-10-09"},{"lineNumber":155,"author":{"gitId":"jchilling"},"content":"        List\u003cProperty\u003e propertyList \u003d Collections.singletonList(HOME);","lastModifiedDate":"2022-10-09"},{"lineNumber":156,"author":{"gitId":"jchilling"},"content":"        uniquePropertyList.setProperties(propertyList);","lastModifiedDate":"2022-10-09"},{"lineNumber":157,"author":{"gitId":"jchilling"},"content":"        UniquePropertyList expectedUniquePropertyList \u003d new UniquePropertyList();","lastModifiedDate":"2022-10-09"},{"lineNumber":158,"author":{"gitId":"jchilling"},"content":"        expectedUniquePropertyList.add(HOME);","lastModifiedDate":"2022-10-09"},{"lineNumber":159,"author":{"gitId":"jchilling"},"content":"        assertEquals(expectedUniquePropertyList, uniquePropertyList);","lastModifiedDate":"2022-10-09"},{"lineNumber":160,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":161,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":162,"author":{"gitId":"jchilling"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":163,"author":{"gitId":"jchilling"},"content":"    public void setProperties_listWithDuplicateProperties_throwsDuplicatePropertyException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":164,"author":{"gitId":"jchilling"},"content":"        List\u003cProperty\u003e listWithDuplicateProperties \u003d Arrays.asList(PEAKRESIDENCE, PEAKRESIDENCE);","lastModifiedDate":"2022-10-09"},{"lineNumber":165,"author":{"gitId":"jchilling"},"content":"        assertThrows(DuplicatePropertyException.class, (","lastModifiedDate":"2022-10-09"},{"lineNumber":166,"author":{"gitId":"jchilling"},"content":"        ) -\u003e uniquePropertyList.setProperties(listWithDuplicateProperties));","lastModifiedDate":"2022-10-09"},{"lineNumber":167,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":168,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":169,"author":{"gitId":"jchilling"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":170,"author":{"gitId":"jchilling"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":171,"author":{"gitId":"jchilling"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2022-10-09"},{"lineNumber":172,"author":{"gitId":"jchilling"},"content":"            -\u003e uniquePropertyList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2022-10-09"},{"lineNumber":173,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":174,"author":{"gitId":"jchilling"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"riccqi":1,"jchilling":173}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"ChryslineLim"},"content":"import static seedu.address.testutil.TypicalPersons.DANIEL;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"ChryslineLim"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"ChryslineLim"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"ChryslineLim"},"content":"import static seedu.address.testutil.TypicalPersons.GEORGE;","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"zsiggg"},"content":"import seedu.address.model.address.Address;","lastModifiedDate":"2022-10-08"},{"lineNumber":16,"author":{"gitId":"ChryslineLim"},"content":"import seedu.address.model.characteristics.Characteristics;","lastModifiedDate":"2022-10-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"jchilling"},"content":"import seedu.address.model.person.Priority;","lastModifiedDate":"2022-10-19"},{"lineNumber":21,"author":{"gitId":"ChryslineLim"},"content":"import seedu.address.model.pricerange.PriceRange;","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"jchilling"},"content":"    private static final String INVALID_PRIORITY \u003d \"#friend\";","lastModifiedDate":"2022-10-19"},{"lineNumber":29,"author":{"gitId":"ChryslineLim"},"content":"    private static final String INVALID_PRICE_RANGE \u003d \"200\";","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"ChryslineLim"},"content":"    private static final String INVALID_DESIRED_CHARACTERISTICS \u003d \" \";","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"ChryslineLim"},"content":"    private static final String VALID_PRICE_RANGE \u003d BENSON.getPriceRange().get().toString();","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"ChryslineLim"},"content":"    private static final String VALID_DESIRED_CHARACTERISTICS \u003d BENSON.getDesiredCharacteristics().toString();","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"jchilling"},"content":"    private static final String VALID_TAGS \u003d BENSON.getPriority().toString();","lastModifiedDate":"2022-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"ChryslineLim"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"ChryslineLim"},"content":"    public void toModelType_validPersonDetailsWithEmptyPriceRange_returnsPerson() throws Exception {","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"ChryslineLim"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(GEORGE);","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"ChryslineLim"},"content":"        assertEquals(GEORGE, person.toModelType());","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"ChryslineLim"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"ChryslineLim"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"ChryslineLim"},"content":"    public void toModelType_validPersonDetailsWithEmptyDesiredCharacteristics_returnsPerson() throws Exception {","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"ChryslineLim"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(FIONA);","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"ChryslineLim"},"content":"        assertEquals(FIONA, person.toModelType());","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"ChryslineLim"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"ChryslineLim"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"ChryslineLim"},"content":"    public void toModelType_validPersonDetailsWithEmptyPriceRangeAndDesiredCharacteristics_returnsPerson()","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"ChryslineLim"},"content":"            throws Exception {","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"ChryslineLim"},"content":"        JsonAdaptedPerson person1 \u003d new JsonAdaptedPerson(DANIEL);","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"ChryslineLim"},"content":"        assertEquals(DANIEL, person1.toModelType());","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"ChryslineLim"},"content":"        JsonAdaptedPerson person2 \u003d new JsonAdaptedPerson(ELLE);","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"ChryslineLim"},"content":"        assertEquals(ELLE, person2.toModelType());","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"ChryslineLim"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"ChryslineLim"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"ChryslineLim"},"content":"                        VALID_PRICE_RANGE, VALID_DESIRED_CHARACTERISTICS, VALID_TAGS);","lastModifiedDate":"2022-10-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"ChryslineLim"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"ChryslineLim"},"content":"                VALID_PRICE_RANGE, VALID_DESIRED_CHARACTERISTICS, VALID_TAGS);","lastModifiedDate":"2022-10-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"ChryslineLim"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2022-10-12"},{"lineNumber":88,"author":{"gitId":"ChryslineLim"},"content":"                        VALID_PRICE_RANGE, VALID_DESIRED_CHARACTERISTICS, VALID_TAGS);","lastModifiedDate":"2022-10-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"ChryslineLim"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2022-10-12"},{"lineNumber":96,"author":{"gitId":"ChryslineLim"},"content":"                VALID_PRICE_RANGE, VALID_DESIRED_CHARACTERISTICS, VALID_TAGS);","lastModifiedDate":"2022-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"ChryslineLim"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_PRICE_RANGE,","lastModifiedDate":"2022-10-12"},{"lineNumber":105,"author":{"gitId":"ChryslineLim"},"content":"                        VALID_DESIRED_CHARACTERISTICS, VALID_TAGS);","lastModifiedDate":"2022-10-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"ChryslineLim"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS,","lastModifiedDate":"2022-10-12"},{"lineNumber":113,"author":{"gitId":"ChryslineLim"},"content":"                VALID_PRICE_RANGE, VALID_DESIRED_CHARACTERISTICS, VALID_TAGS);","lastModifiedDate":"2022-10-12"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"ChryslineLim"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS,","lastModifiedDate":"2022-10-12"},{"lineNumber":122,"author":{"gitId":"ChryslineLim"},"content":"                        VALID_PRICE_RANGE, VALID_DESIRED_CHARACTERISTICS, VALID_TAGS);","lastModifiedDate":"2022-10-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"ChryslineLim"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null,","lastModifiedDate":"2022-10-12"},{"lineNumber":130,"author":{"gitId":"ChryslineLim"},"content":"                VALID_PRICE_RANGE, VALID_DESIRED_CHARACTERISTICS, VALID_TAGS);","lastModifiedDate":"2022-10-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":136,"author":{"gitId":"ChryslineLim"},"content":"    public void toModelType_invalidPriceRange_throwsIllegalValueException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-10-12"},{"lineNumber":138,"author":{"gitId":"ChryslineLim"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2022-10-12"},{"lineNumber":139,"author":{"gitId":"ChryslineLim"},"content":"                        INVALID_PRICE_RANGE, VALID_DESIRED_CHARACTERISTICS, VALID_TAGS);","lastModifiedDate":"2022-10-12"},{"lineNumber":140,"author":{"gitId":"ChryslineLim"},"content":"        String expectedMessage \u003d PriceRange.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-10-12"},{"lineNumber":141,"author":{"gitId":"ChryslineLim"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-10-12"},{"lineNumber":142,"author":{"gitId":"ChryslineLim"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":143,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":144,"author":{"gitId":"ChryslineLim"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":145,"author":{"gitId":"ChryslineLim"},"content":"    public void toModelType_nullPriceRange_throwsIllegalValueException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":146,"author":{"gitId":"ChryslineLim"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2022-10-12"},{"lineNumber":147,"author":{"gitId":"ChryslineLim"},"content":"                null, VALID_DESIRED_CHARACTERISTICS, VALID_TAGS);","lastModifiedDate":"2022-10-12"},{"lineNumber":148,"author":{"gitId":"ChryslineLim"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, PriceRange.class.getSimpleName());","lastModifiedDate":"2022-10-12"},{"lineNumber":149,"author":{"gitId":"ChryslineLim"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-10-12"},{"lineNumber":150,"author":{"gitId":"ChryslineLim"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":151,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":152,"author":{"gitId":"ChryslineLim"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":153,"author":{"gitId":"ChryslineLim"},"content":"    public void toModelType_invalidDesiredCharacteristics_throwsIllegalValueException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":154,"author":{"gitId":"ChryslineLim"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-10-12"},{"lineNumber":155,"author":{"gitId":"ChryslineLim"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2022-10-12"},{"lineNumber":156,"author":{"gitId":"ChryslineLim"},"content":"                        VALID_PRICE_RANGE, INVALID_DESIRED_CHARACTERISTICS, VALID_TAGS);","lastModifiedDate":"2022-10-12"},{"lineNumber":157,"author":{"gitId":"ChryslineLim"},"content":"        String expectedMessage \u003d Characteristics.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-10-19"},{"lineNumber":158,"author":{"gitId":"ChryslineLim"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-10-12"},{"lineNumber":159,"author":{"gitId":"ChryslineLim"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":160,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":161,"author":{"gitId":"ChryslineLim"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":162,"author":{"gitId":"ChryslineLim"},"content":"    public void toModelType_nullDesiredCharacteristics_throwsIllegalValueException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":163,"author":{"gitId":"ChryslineLim"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2022-10-12"},{"lineNumber":164,"author":{"gitId":"ChryslineLim"},"content":"                VALID_PRICE_RANGE, null, VALID_TAGS);","lastModifiedDate":"2022-10-12"},{"lineNumber":165,"author":{"gitId":"ChryslineLim"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-10-12"},{"lineNumber":166,"author":{"gitId":"ChryslineLim"},"content":"                Characteristics.class.getSimpleName());","lastModifiedDate":"2022-10-19"},{"lineNumber":167,"author":{"gitId":"ChryslineLim"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-10-12"},{"lineNumber":168,"author":{"gitId":"ChryslineLim"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":169,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":171,"author":{"gitId":"jchilling"},"content":"    public void toModelType_invalidPriority_throwsIllegalValueException() {","lastModifiedDate":"2022-10-19"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":173,"author":{"gitId":"ChryslineLim"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_PRICE_RANGE,","lastModifiedDate":"2022-10-12"},{"lineNumber":174,"author":{"gitId":"jchilling"},"content":"                        VALID_DESIRED_CHARACTERISTICS, INVALID_PRIORITY);","lastModifiedDate":"2022-10-19"},{"lineNumber":175,"author":{"gitId":"jchilling"},"content":"        String expectedMessage \u003d Priority.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-10-19"},{"lineNumber":176,"author":{"gitId":"jchilling"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-10-19"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"zsiggg":1,"jchilling":7,"-":90,"ChryslineLim":81}},{"path":"src/test/java/seedu/address/storage/JsonPersonBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.HOON;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.IDA;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"riccqi"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalPersonsBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"zsiggg"},"content":"import seedu.address.model.PersonBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"zsiggg"},"content":"import seedu.address.model.ReadOnlyPersonBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"zsiggg"},"content":"public class JsonPersonBookStorageTest {","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonAddressBookStorageTest\");","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"zsiggg"},"content":"    private java.util.Optional\u003cReadOnlyPersonBook\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new JsonAddressBookStorage(Paths.get(filePath)).readAddressBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidPersonAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidAndValidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidAndValidPersonAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":66,"author":{"gitId":"riccqi"},"content":"        PersonBook original \u003d getTypicalPersonsBook();","lastModifiedDate":"2022-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage jsonAddressBookStorage \u003d new JsonAddressBookStorage(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"zsiggg"},"content":"        ReadOnlyPersonBook readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2022-10-13"},{"lineNumber":72,"author":{"gitId":"zsiggg"},"content":"        assertEquals(original, new PersonBook(readBack));","lastModifiedDate":"2022-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        original.addPerson(HOON);","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        original.removePerson(ALICE);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"zsiggg"},"content":"        assertEquals(original, new PersonBook(readBack));","lastModifiedDate":"2022-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        original.addPerson(IDA);","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"zsiggg"},"content":"        assertEquals(original, new PersonBook(readBack));","lastModifiedDate":"2022-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"zsiggg"},"content":"    private void saveAddressBook(ReadOnlyPersonBook addressBook, String filePath) {","lastModifiedDate":"2022-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                    .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"zsiggg"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new PersonBook(), null));","lastModifiedDate":"2022-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"riccqi":2,"zsiggg":10,"-":98}},{"path":"src/test/java/seedu/address/storage/JsonSerializablePersonBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"zsiggg"},"content":"import seedu.address.model.PersonBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"zsiggg"},"content":"public class JsonSerializablePersonBookTest {","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"zsiggg"},"content":"    private static final Path TEST_DATA_FOLDER \u003d","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"zsiggg"},"content":"            Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"zsiggg"},"content":"        PersonBook personBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"riccqi"},"content":"        PersonBook typicalPersonsPersonBook \u003d TypicalPersons.getTypicalPersonsBook();","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"zsiggg"},"content":"        assertEquals(personBookFromFile, typicalPersonsPersonBook);","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"riccqi":1,"zsiggg":6,"-":41}},{"path":"src/test/java/seedu/address/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"zsiggg"},"content":"        userPrefs.setPersonBookFilePath(Paths.get(\"personmodel.json\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"zsiggg"},"content":"        userPrefs.setPropertyBookFilePath(Paths.get(\"propertymodel.json\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"zsiggg":2,"-":122}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"riccqi"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalPersonsBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"zsiggg"},"content":"import seedu.address.model.PersonBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"zsiggg"},"content":"import seedu.address.model.ReadOnlyPersonBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"zsiggg"},"content":"        JsonPropertyBookStorage propertyBookStorage \u003d new JsonPropertyBookStorage(getTempFilePath(\"pb\"));","lastModifiedDate":"2022-10-19"},{"lineNumber":30,"author":{"gitId":"zsiggg"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, propertyBookStorage, userPrefsStorage);","lastModifiedDate":"2022-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"zsiggg"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonPersonBookStorageTest} class.","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"riccqi"},"content":"        PersonBook original \u003d getTypicalPersonsBook();","lastModifiedDate":"2022-10-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"zsiggg"},"content":"        ReadOnlyPersonBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2022-10-13"},{"lineNumber":61,"author":{"gitId":"zsiggg"},"content":"        assertEquals(original, new PersonBook(retrieved));","lastModifiedDate":"2022-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"riccqi":2,"zsiggg":7,"-":60}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"riccqi"},"content":"import seedu.address.logic.commands.EditBuyerCommand.EditPersonDescriptor;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"zsiggg"},"content":"import seedu.address.model.address.Address;","lastModifiedDate":"2022-10-08"},{"lineNumber":5,"author":{"gitId":"ChryslineLim"},"content":"import seedu.address.model.characteristics.Characteristics;","lastModifiedDate":"2022-10-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":10,"author":{"gitId":"jchilling"},"content":"import seedu.address.model.person.Priority;","lastModifiedDate":"2022-10-19"},{"lineNumber":11,"author":{"gitId":"jchilling"},"content":"import seedu.address.model.pricerange.PriceRange;","lastModifiedDate":"2022-10-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":37,"author":{"gitId":"ChryslineLim"},"content":"        descriptor.setPriceRange(person.getPriceRange().orElse(null));","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"ChryslineLim"},"content":"        descriptor.setDesiredCharacteristics(person.getDesiredCharacteristics().orElse(null));","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"jchilling"},"content":"        descriptor.setPriority(person.getPriority());","lastModifiedDate":"2022-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":75,"author":{"gitId":"ChryslineLim"},"content":"     * Sets the {@code PriceRange} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"ChryslineLim"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"ChryslineLim"},"content":"    public EditPersonDescriptorBuilder withPriceRange(String priceRange) {","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"ChryslineLim"},"content":"        descriptor.setPriceRange(new PriceRange(priceRange));","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"ChryslineLim"},"content":"        return this;","lastModifiedDate":"2022-10-12"},{"lineNumber":80,"author":{"gitId":"ChryslineLim"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":81,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":82,"author":{"gitId":"ChryslineLim"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":83,"author":{"gitId":"ChryslineLim"},"content":"     * Sets the {@code DesiredCharacteristics} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2022-10-12"},{"lineNumber":84,"author":{"gitId":"ChryslineLim"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":85,"author":{"gitId":"ChryslineLim"},"content":"    public EditPersonDescriptorBuilder withDesiredCharacteristics(String desiredCharacteristics) {","lastModifiedDate":"2022-10-12"},{"lineNumber":86,"author":{"gitId":"ChryslineLim"},"content":"        descriptor.setDesiredCharacteristics(new Characteristics(desiredCharacteristics));","lastModifiedDate":"2022-10-19"},{"lineNumber":87,"author":{"gitId":"ChryslineLim"},"content":"        return this;","lastModifiedDate":"2022-10-12"},{"lineNumber":88,"author":{"gitId":"ChryslineLim"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":89,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":91,"author":{"gitId":"jchilling"},"content":"     * Sets the {@code Priority} of the {@code EditPropertyDescriptor} that we are building.","lastModifiedDate":"2022-10-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":93,"author":{"gitId":"jchilling"},"content":"    public EditPersonDescriptorBuilder withPriority(String priority) {","lastModifiedDate":"2022-10-19"},{"lineNumber":94,"author":{"gitId":"jchilling"},"content":"        descriptor.setPriority(new Priority(priority));","lastModifiedDate":"2022-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"riccqi":1,"zsiggg":1,"jchilling":6,"-":75,"ChryslineLim":18}},{"path":"src/test/java/seedu/address/testutil/EditPropertyDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"riccqi"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"riccqi"},"content":"import seedu.address.logic.commands.EditPropertyCommand.EditPropertyDescriptor;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"riccqi"},"content":"import seedu.address.model.address.Address;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"jchilling"},"content":"import seedu.address.model.property.Description;","lastModifiedDate":"2022-10-19"},{"lineNumber":6,"author":{"gitId":"riccqi"},"content":"import seedu.address.model.property.Price;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"riccqi"},"content":"import seedu.address.model.property.Property;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"riccqi"},"content":"import seedu.address.model.property.PropertyName;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"riccqi"},"content":"/**","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"riccqi"},"content":" * A utility class to help with building EditPropertyDescriptor objects.","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"riccqi"},"content":" */","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"riccqi"},"content":"public class EditPropertyDescriptorBuilder {","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"riccqi"},"content":"    private EditPropertyDescriptor descriptor;","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"riccqi"},"content":"    public EditPropertyDescriptorBuilder() {","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"riccqi"},"content":"        descriptor \u003d new EditPropertyDescriptor();","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"riccqi"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"riccqi"},"content":"    public EditPropertyDescriptorBuilder(EditPropertyDescriptor descriptor) {","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"riccqi"},"content":"        this.descriptor \u003d new EditPropertyDescriptor(descriptor);","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"riccqi"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"riccqi"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"riccqi"},"content":"     * Returns an {@code EditPropertyDescriptor} with fields containing {@code property}\u0027s details","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"riccqi"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"riccqi"},"content":"    public EditPropertyDescriptorBuilder(Property property) {","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"riccqi"},"content":"        descriptor \u003d new EditPropertyDescriptor();","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"riccqi"},"content":"        descriptor.setName(property.getPropertyName());","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"riccqi"},"content":"        descriptor.setPrice(property.getPrice());","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"riccqi"},"content":"        descriptor.setAddress(property.getAddress());","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"riccqi"},"content":"        descriptor.setDescription(property.getDescription());","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"riccqi"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"riccqi"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"riccqi"},"content":"     * Sets the {@code PropertyName} of the {@code EditPropertyDescriptor} that we are building.","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"riccqi"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"riccqi"},"content":"    public EditPropertyDescriptorBuilder withName(PropertyName name) {","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"riccqi"},"content":"        descriptor.setName(name);","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"riccqi"},"content":"        return this;","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"riccqi"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"riccqi"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"riccqi"},"content":"     * Sets the {@code Price} of the {@code EditPropertyDescriptor} that we are building.","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"riccqi"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"riccqi"},"content":"    public EditPropertyDescriptorBuilder withPrice(Price price) {","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"riccqi"},"content":"        descriptor.setPrice(price);","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"riccqi"},"content":"        return this;","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"riccqi"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"riccqi"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"riccqi"},"content":"     * Sets the {@code Address} of the {@code EditPropertyDescriptor} that we are building.","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"riccqi"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":55,"author":{"gitId":"riccqi"},"content":"    public EditPropertyDescriptorBuilder withAddress(Address address) {","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"riccqi"},"content":"        descriptor.setAddress(address);","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"riccqi"},"content":"        return this;","lastModifiedDate":"2022-10-13"},{"lineNumber":58,"author":{"gitId":"riccqi"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":59,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"riccqi"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":61,"author":{"gitId":"riccqi"},"content":"     * Sets the {@code Description} of the {@code EditPropertyDescriptor} that we are building.","lastModifiedDate":"2022-10-13"},{"lineNumber":62,"author":{"gitId":"riccqi"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":63,"author":{"gitId":"riccqi"},"content":"    public EditPropertyDescriptorBuilder withDescription(Description description) {","lastModifiedDate":"2022-10-13"},{"lineNumber":64,"author":{"gitId":"riccqi"},"content":"        descriptor.setDescription(description);","lastModifiedDate":"2022-10-13"},{"lineNumber":65,"author":{"gitId":"riccqi"},"content":"        return this;","lastModifiedDate":"2022-10-13"},{"lineNumber":66,"author":{"gitId":"riccqi"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":67,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":68,"author":{"gitId":"riccqi"},"content":"    public EditPropertyDescriptor build() {","lastModifiedDate":"2022-10-13"},{"lineNumber":69,"author":{"gitId":"riccqi"},"content":"        return descriptor;","lastModifiedDate":"2022-10-13"},{"lineNumber":70,"author":{"gitId":"riccqi"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":71,"author":{"gitId":"riccqi"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":72,"author":{"gitId":"riccqi"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"riccqi":71,"jchilling":1}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"zsiggg"},"content":"import seedu.address.model.address.Address;","lastModifiedDate":"2022-10-08"},{"lineNumber":4,"author":{"gitId":"ChryslineLim"},"content":"import seedu.address.model.characteristics.Characteristics;","lastModifiedDate":"2022-10-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"jchilling"},"content":"import seedu.address.model.person.Priority;","lastModifiedDate":"2022-10-19"},{"lineNumber":10,"author":{"gitId":"jchilling"},"content":"import seedu.address.model.pricerange.PriceRange;","lastModifiedDate":"2022-10-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"jchilling"},"content":"    public static final String DEFAULT_PRIORITY \u003d \"normal\";","lastModifiedDate":"2022-10-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"ChryslineLim"},"content":"    private PriceRange priceRange;","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"ChryslineLim"},"content":"    private Characteristics characteristics;","lastModifiedDate":"2022-10-19"},{"lineNumber":29,"author":{"gitId":"jchilling"},"content":"    private Priority priority;","lastModifiedDate":"2022-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"ChryslineLim"},"content":"        priceRange \u003d null;","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"ChryslineLim"},"content":"        characteristics \u003d null;","lastModifiedDate":"2022-10-19"},{"lineNumber":41,"author":{"gitId":"jchilling"},"content":"        priority \u003d new Priority(DEFAULT_PRIORITY);","lastModifiedDate":"2022-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"ChryslineLim"},"content":"        priceRange \u003d personToCopy.getPriceRange().orElse(null);","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"ChryslineLim"},"content":"        characteristics \u003d personToCopy.getDesiredCharacteristics().orElse(null);","lastModifiedDate":"2022-10-19"},{"lineNumber":54,"author":{"gitId":"jchilling"},"content":"        priority \u003d personToCopy.getPriority();","lastModifiedDate":"2022-10-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":89,"author":{"gitId":"jchilling"},"content":"    /**","lastModifiedDate":"2022-10-19"},{"lineNumber":90,"author":{"gitId":"jchilling"},"content":"     * Sets the {@code Priority} of the {@code Person} that we are building.","lastModifiedDate":"2022-10-19"},{"lineNumber":91,"author":{"gitId":"jchilling"},"content":"     */","lastModifiedDate":"2022-10-19"},{"lineNumber":92,"author":{"gitId":"jchilling"},"content":"    public PersonBuilder withPriority(String priority) {","lastModifiedDate":"2022-10-19"},{"lineNumber":93,"author":{"gitId":"jchilling"},"content":"        this.priority \u003d new Priority(priority);","lastModifiedDate":"2022-10-19"},{"lineNumber":94,"author":{"gitId":"jchilling"},"content":"        return this;","lastModifiedDate":"2022-10-19"},{"lineNumber":95,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":96,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":97,"author":{"gitId":"ChryslineLim"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":98,"author":{"gitId":"ChryslineLim"},"content":"     * Sets the {@code Price Range} of the {@code Person} that we are building.","lastModifiedDate":"2022-10-12"},{"lineNumber":99,"author":{"gitId":"ChryslineLim"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":100,"author":{"gitId":"ChryslineLim"},"content":"    public PersonBuilder withPriceRange(String priceRange) {","lastModifiedDate":"2022-10-12"},{"lineNumber":101,"author":{"gitId":"ChryslineLim"},"content":"        this.priceRange \u003d new PriceRange(priceRange);","lastModifiedDate":"2022-10-12"},{"lineNumber":102,"author":{"gitId":"ChryslineLim"},"content":"        return this;","lastModifiedDate":"2022-10-12"},{"lineNumber":103,"author":{"gitId":"ChryslineLim"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":104,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":105,"author":{"gitId":"ChryslineLim"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":106,"author":{"gitId":"ChryslineLim"},"content":"     * Removes the {@code Price Range} of the {@code Person} that we are building.","lastModifiedDate":"2022-10-12"},{"lineNumber":107,"author":{"gitId":"ChryslineLim"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":108,"author":{"gitId":"ChryslineLim"},"content":"    public PersonBuilder withNoPriceRange() {","lastModifiedDate":"2022-10-12"},{"lineNumber":109,"author":{"gitId":"ChryslineLim"},"content":"        this.priceRange \u003d null;","lastModifiedDate":"2022-10-12"},{"lineNumber":110,"author":{"gitId":"ChryslineLim"},"content":"        return this;","lastModifiedDate":"2022-10-12"},{"lineNumber":111,"author":{"gitId":"ChryslineLim"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":112,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":113,"author":{"gitId":"ChryslineLim"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":114,"author":{"gitId":"ChryslineLim"},"content":"     * Sets the {@code DesiredCharacteristics} of the {@code Person} that we are building.","lastModifiedDate":"2022-10-12"},{"lineNumber":115,"author":{"gitId":"ChryslineLim"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":116,"author":{"gitId":"ChryslineLim"},"content":"    public PersonBuilder withDesiredCharacteristics(String desiredCharacteristics) {","lastModifiedDate":"2022-10-12"},{"lineNumber":117,"author":{"gitId":"ChryslineLim"},"content":"        this.characteristics \u003d new Characteristics(desiredCharacteristics);","lastModifiedDate":"2022-10-19"},{"lineNumber":118,"author":{"gitId":"ChryslineLim"},"content":"        return this;","lastModifiedDate":"2022-10-12"},{"lineNumber":119,"author":{"gitId":"ChryslineLim"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":120,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":121,"author":{"gitId":"ChryslineLim"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":122,"author":{"gitId":"ChryslineLim"},"content":"     * Removes the {@code DesiredCharacteristics} of the {@code Person} that we are building.","lastModifiedDate":"2022-10-12"},{"lineNumber":123,"author":{"gitId":"ChryslineLim"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":124,"author":{"gitId":"ChryslineLim"},"content":"    public PersonBuilder withNoDesiredCharacteristics() {","lastModifiedDate":"2022-10-12"},{"lineNumber":125,"author":{"gitId":"ChryslineLim"},"content":"        this.characteristics \u003d null;","lastModifiedDate":"2022-10-19"},{"lineNumber":126,"author":{"gitId":"ChryslineLim"},"content":"        return this;","lastModifiedDate":"2022-10-12"},{"lineNumber":127,"author":{"gitId":"ChryslineLim"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":128,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":130,"author":{"gitId":"jchilling"},"content":"        return new Person(name, phone, email, address, priceRange, characteristics, priority);","lastModifiedDate":"2022-10-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"zsiggg":1,"jchilling":15,"-":78,"ChryslineLim":39}},{"path":"src/test/java/seedu/address/testutil/PersonModelBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"zsiggg"},"content":"import seedu.address.model.PersonBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"zsiggg"},"content":" * A utility class to help with building PersonBook objects.","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"zsiggg"},"content":"public class PersonModelBuilder {","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"zsiggg"},"content":"    private PersonBook personBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"zsiggg"},"content":"    public PersonModelBuilder() {","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"zsiggg"},"content":"        personBook \u003d new PersonBook();","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"zsiggg"},"content":"    public PersonModelBuilder(PersonBook personBook) {","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"zsiggg"},"content":"        this.personBook \u003d personBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":22,"author":{"gitId":"zsiggg"},"content":"     * Adds a new {@code Person} to the {@code PersonBook} that we are building.","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":24,"author":{"gitId":"zsiggg"},"content":"    public PersonModelBuilder withPerson(Person person) {","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"zsiggg"},"content":"        personBook.addPerson(person);","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"zsiggg"},"content":"    public PersonBook build() {","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"zsiggg"},"content":"        return personBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"zsiggg":13,"-":19}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"ChryslineLim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CHARACTERISTICS;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"ChryslineLim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRICE_RANGE;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"jchilling"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRIORITY;","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"ChryslineLim"},"content":"import seedu.address.logic.commands.AddPersonCommand;","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"riccqi"},"content":"import seedu.address.logic.commands.EditBuyerCommand.EditPersonDescriptor;","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":24,"author":{"gitId":"ChryslineLim"},"content":"        return AddPersonCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"ChryslineLim"},"content":"        if (person.getPriceRange().isPresent()) {","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"ChryslineLim"},"content":"            sb.append(PREFIX_PRICE_RANGE + person.getPriceRange().get().toString());","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"ChryslineLim"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"ChryslineLim"},"content":"        if (person.getDesiredCharacteristics().isPresent()) {","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"ChryslineLim"},"content":"            sb.append(PREFIX_CHARACTERISTICS + person.getDesiredCharacteristics().get().toString());","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"ChryslineLim"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"jchilling"},"content":"        sb.append(PREFIX_PRIORITY + person.getPriority().toString() + \" \");","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"ChryslineLim"},"content":"        descriptor.getPriceRange().ifPresent(priceRange -\u003e sb.append(PREFIX_PRICE_RANGE)","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"ChryslineLim"},"content":"                .append(priceRange).append(\" \"));","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"ChryslineLim"},"content":"        descriptor.getDesiredCharacteristics().ifPresent(desiredCharacteristics -\u003e sb.append(PREFIX_CHARACTERISTICS)","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"ChryslineLim"},"content":"                .append(desiredCharacteristics).append(\" \"));","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"jchilling"},"content":"        descriptor.getPriority().ifPresent(priority -\u003e sb.append(PREFIX_PRIORITY)","lastModifiedDate":"2022-10-20"},{"lineNumber":60,"author":{"gitId":"jchilling"},"content":"                .append(priority.specifiedPriority).append(\" \"));","lastModifiedDate":"2022-10-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"riccqi":1,"jchilling":4,"-":44,"ChryslineLim":14}},{"path":"src/test/java/seedu/address/testutil/PropertyBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jchilling"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"jchilling"},"content":"import seedu.address.model.address.Address;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"ChryslineLim"},"content":"import seedu.address.model.characteristics.Characteristics;","lastModifiedDate":"2022-10-19"},{"lineNumber":5,"author":{"gitId":"riccqi"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"riccqi"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"jchilling"},"content":"import seedu.address.model.property.Description;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"riccqi"},"content":"import seedu.address.model.property.Owner;","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"jchilling"},"content":"import seedu.address.model.property.Price;","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"jchilling"},"content":"import seedu.address.model.property.Property;","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"jchilling"},"content":"import seedu.address.model.property.PropertyName;","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"jchilling"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"jchilling"},"content":" * A utility class to help with building Property objects.","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"jchilling"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"jchilling"},"content":"public class PropertyBuilder {","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"jchilling"},"content":"    public static final String DEFAULT_NAME \u003d \"Peak Residence\";","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"jchilling"},"content":"    public static final String DEFAULT_PRICE \u003d \"3000000\";","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"jchilling"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"333 Thompson Road\";","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"jchilling"},"content":"    public static final String DEFAULT_DESCRIPTION \u003d \"A 5-storey condo on top of a hill - \"","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"jchilling"},"content":"            + \"Peak Residence offers you serenity away from the hustle and bustle with breathtaking views all around.\";","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"riccqi"},"content":"    public static final String DEFAULT_OWNER_NAME \u003d \"John Doe\";","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"riccqi"},"content":"    public static final String DEFAULT_OWNER_PHONE \u003d \"94351253\";","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"jchilling"},"content":"    private PropertyName name;","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"jchilling"},"content":"    private Price price;","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"jchilling"},"content":"    private Address address;","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"jchilling"},"content":"    private Description description;","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"riccqi"},"content":"    private Owner owner;","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"ChryslineLim"},"content":"    private Characteristics characteristics;","lastModifiedDate":"2022-10-19"},{"lineNumber":32,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"jchilling"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"jchilling"},"content":"     * Creates a {@code PropertyBuilder} with the default details.","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"jchilling"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"jchilling"},"content":"    public PropertyBuilder() {","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"jchilling"},"content":"        name \u003d new PropertyName(DEFAULT_NAME);","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"jchilling"},"content":"        price \u003d new Price(DEFAULT_PRICE);","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"jchilling"},"content":"        description \u003d new Description(DEFAULT_DESCRIPTION);","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"jchilling"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"ChryslineLim"},"content":"        characteristics \u003d null;","lastModifiedDate":"2022-10-19"},{"lineNumber":42,"author":{"gitId":"riccqi"},"content":"        owner \u003d new Owner(new Name(DEFAULT_OWNER_NAME), new Phone(DEFAULT_OWNER_PHONE));","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"jchilling"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"jchilling"},"content":"     * Initializes the PropertyBuilder with the data of {@code propertyToCopy}.","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"jchilling"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"jchilling"},"content":"    public PropertyBuilder(Property propertyToCopy) {","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"riccqi"},"content":"        name \u003d propertyToCopy.getPropertyName();","lastModifiedDate":"2022-10-20"},{"lineNumber":50,"author":{"gitId":"jchilling"},"content":"        price \u003d propertyToCopy.getPrice();","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"jchilling"},"content":"        description \u003d propertyToCopy.getDescription();","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"jchilling"},"content":"        address \u003d propertyToCopy.getAddress();","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"riccqi"},"content":"        owner \u003d propertyToCopy.getOwner();","lastModifiedDate":"2022-10-20"},{"lineNumber":54,"author":{"gitId":"ChryslineLim"},"content":"        characteristics \u003d propertyToCopy.getCharacteristics().orElse(null);","lastModifiedDate":"2022-10-19"},{"lineNumber":55,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":57,"author":{"gitId":"jchilling"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":58,"author":{"gitId":"jchilling"},"content":"     * Sets the {@code Name} of the {@code Property} that we are building.","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"jchilling"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":60,"author":{"gitId":"jchilling"},"content":"    public PropertyBuilder withName(String name) {","lastModifiedDate":"2022-10-09"},{"lineNumber":61,"author":{"gitId":"jchilling"},"content":"        this.name \u003d new PropertyName(name);","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"jchilling"},"content":"        return this;","lastModifiedDate":"2022-10-09"},{"lineNumber":63,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":64,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":65,"author":{"gitId":"jchilling"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":66,"author":{"gitId":"jchilling"},"content":"     * Sets the {@code Address} of the {@code Property} that we are building.","lastModifiedDate":"2022-10-09"},{"lineNumber":67,"author":{"gitId":"jchilling"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":68,"author":{"gitId":"jchilling"},"content":"    public PropertyBuilder withAddress(String address) {","lastModifiedDate":"2022-10-09"},{"lineNumber":69,"author":{"gitId":"jchilling"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2022-10-09"},{"lineNumber":70,"author":{"gitId":"jchilling"},"content":"        return this;","lastModifiedDate":"2022-10-09"},{"lineNumber":71,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":72,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":73,"author":{"gitId":"jchilling"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":74,"author":{"gitId":"jchilling"},"content":"     * Sets the {@code Price} of the {@code Property} that we are building.","lastModifiedDate":"2022-10-09"},{"lineNumber":75,"author":{"gitId":"jchilling"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":76,"author":{"gitId":"jchilling"},"content":"    public PropertyBuilder withPrice(String price) {","lastModifiedDate":"2022-10-09"},{"lineNumber":77,"author":{"gitId":"jchilling"},"content":"        this.price \u003d new Price(price);","lastModifiedDate":"2022-10-09"},{"lineNumber":78,"author":{"gitId":"jchilling"},"content":"        return this;","lastModifiedDate":"2022-10-09"},{"lineNumber":79,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":80,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":81,"author":{"gitId":"jchilling"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":82,"author":{"gitId":"jchilling"},"content":"     * Sets the {@code Description} of the {@code Property} that we are building.","lastModifiedDate":"2022-10-09"},{"lineNumber":83,"author":{"gitId":"jchilling"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":84,"author":{"gitId":"jchilling"},"content":"    public PropertyBuilder withDescription(String description) {","lastModifiedDate":"2022-10-09"},{"lineNumber":85,"author":{"gitId":"jchilling"},"content":"        this.description \u003d new Description(description);","lastModifiedDate":"2022-10-09"},{"lineNumber":86,"author":{"gitId":"jchilling"},"content":"        return this;","lastModifiedDate":"2022-10-09"},{"lineNumber":87,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":88,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":89,"author":{"gitId":"zsiggg"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":90,"author":{"gitId":"riccqi"},"content":"     * Sets the {@code Owner} of the {@code Property} that we are building.","lastModifiedDate":"2022-10-20"},{"lineNumber":91,"author":{"gitId":"zsiggg"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":92,"author":{"gitId":"riccqi"},"content":"    public PropertyBuilder withOwner(Owner owner) {","lastModifiedDate":"2022-10-20"},{"lineNumber":93,"author":{"gitId":"riccqi"},"content":"        this.owner \u003d owner;","lastModifiedDate":"2022-10-20"},{"lineNumber":94,"author":{"gitId":"zsiggg"},"content":"        return this;","lastModifiedDate":"2022-10-13"},{"lineNumber":95,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":96,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":97,"author":{"gitId":"ChryslineLim"},"content":"    /**","lastModifiedDate":"2022-10-19"},{"lineNumber":98,"author":{"gitId":"ChryslineLim"},"content":"     * Sets the {@code characteristics} of the {@code Property} that we are building.","lastModifiedDate":"2022-10-19"},{"lineNumber":99,"author":{"gitId":"ChryslineLim"},"content":"     */","lastModifiedDate":"2022-10-19"},{"lineNumber":100,"author":{"gitId":"ChryslineLim"},"content":"    public PropertyBuilder withCharacteristics(String characteristics) {","lastModifiedDate":"2022-10-19"},{"lineNumber":101,"author":{"gitId":"ChryslineLim"},"content":"        this.characteristics \u003d new Characteristics(characteristics);","lastModifiedDate":"2022-10-19"},{"lineNumber":102,"author":{"gitId":"ChryslineLim"},"content":"        return this;","lastModifiedDate":"2022-10-19"},{"lineNumber":103,"author":{"gitId":"ChryslineLim"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":104,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":105,"author":{"gitId":"ChryslineLim"},"content":"    /**","lastModifiedDate":"2022-10-19"},{"lineNumber":106,"author":{"gitId":"ChryslineLim"},"content":"     * Removes the {@code characteristics} of the {@code Property} that we are building.","lastModifiedDate":"2022-10-19"},{"lineNumber":107,"author":{"gitId":"ChryslineLim"},"content":"     */","lastModifiedDate":"2022-10-19"},{"lineNumber":108,"author":{"gitId":"ChryslineLim"},"content":"    public PropertyBuilder withNoCharacteristics() {","lastModifiedDate":"2022-10-19"},{"lineNumber":109,"author":{"gitId":"ChryslineLim"},"content":"        this.characteristics \u003d null;","lastModifiedDate":"2022-10-19"},{"lineNumber":110,"author":{"gitId":"ChryslineLim"},"content":"        return this;","lastModifiedDate":"2022-10-19"},{"lineNumber":111,"author":{"gitId":"ChryslineLim"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":112,"author":{"gitId":"ChryslineLim"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":113,"author":{"gitId":"jchilling"},"content":"    public Property build() {","lastModifiedDate":"2022-10-09"},{"lineNumber":114,"author":{"gitId":"riccqi"},"content":"        return new Property(name, price, address, description, characteristics, owner);","lastModifiedDate":"2022-10-20"},{"lineNumber":115,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":116,"author":{"gitId":"jchilling"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"riccqi":13,"zsiggg":5,"jchilling":78,"ChryslineLim":20}},{"path":"src/test/java/seedu/address/testutil/PropertyModelBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zsiggg"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"zsiggg"},"content":"import seedu.address.model.PropertyBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"zsiggg"},"content":"import seedu.address.model.property.Property;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"zsiggg"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"zsiggg"},"content":" * A utility class to help with building PropertyBook objects.","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"zsiggg"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"zsiggg"},"content":"public class PropertyModelBuilder {","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"zsiggg"},"content":"    private PropertyBook propertyBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"zsiggg"},"content":"    public PropertyModelBuilder() {","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"zsiggg"},"content":"        propertyBook \u003d new PropertyBook();","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"zsiggg"},"content":"    public PropertyModelBuilder(PropertyBook propertyBook) {","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"zsiggg"},"content":"        this.propertyBook \u003d propertyBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"zsiggg"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"zsiggg"},"content":"     * Adds a new {@code Property} to the {@code PropertyBook} that we are building.","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"zsiggg"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"zsiggg"},"content":"    public PropertyModelBuilder withProperty(Property property) {","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"zsiggg"},"content":"        propertyBook.addProperty(property);","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"zsiggg"},"content":"        return this;","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"zsiggg"},"content":"    public PropertyBook build() {","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"zsiggg"},"content":"        return propertyBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"zsiggg"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"zsiggg":32}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"riccqi"},"content":"    public static final Index INDEX_FIRST_ITEM \u003d Index.fromOneBased(1);","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"riccqi"},"content":"    public static final Index INDEX_SECOND_ITEM \u003d Index.fromOneBased(2);","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"riccqi"},"content":"    public static final Index INDEX_THIRD_ITEM \u003d Index.fromOneBased(3);","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"riccqi":3,"-":9}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.VALID_DESIRED_CHARACTERISTICS_AMY;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.VALID_DESIRED_CHARACTERISTICS_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.VALID_PRICE_RANGE_AMY;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.VALID_PRICE_RANGE_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"jchilling"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.VALID_PRIORITY_HIGH;","lastModifiedDate":"2022-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":21,"author":{"gitId":"zsiggg"},"content":"import seedu.address.model.PersonBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":29,"author":{"gitId":"ChryslineLim"},"content":"    public static final Person ALICE \u003d new PersonBuilder()","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"ChryslineLim"},"content":"            .withName(\"Alice Pauline\")","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"ChryslineLim"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\")","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"ChryslineLim"},"content":"            .withEmail(\"alice@example.com\")","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"ChryslineLim"},"content":"            .withPriceRange(\"200 - 500\")","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"ChryslineLim"},"content":"            .withDesiredCharacteristics(\"Bright\")","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"jchilling"},"content":"            .withPriority(\"normal\").build();","lastModifiedDate":"2022-10-19"},{"lineNumber":37,"author":{"gitId":"ChryslineLim"},"content":"    public static final Person BENSON \u003d new PersonBuilder()","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"ChryslineLim"},"content":"            .withName(\"Benson Meier\")","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":40,"author":{"gitId":"ChryslineLim"},"content":"            .withEmail(\"johnd@example.com\")","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"ChryslineLim"},"content":"            .withPhone(\"98765432\")","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"ChryslineLim"},"content":"            .withPriceRange(\"300 - 600\")","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"ChryslineLim"},"content":"            .withDesiredCharacteristics(\"Near MRT\")","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"jchilling"},"content":"            .withPriority(\"high\").build();","lastModifiedDate":"2022-10-19"},{"lineNumber":45,"author":{"gitId":"ChryslineLim"},"content":"    public static final Person CARL \u003d new PersonBuilder()","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"ChryslineLim"},"content":"            .withName(\"Carl Kurz\")","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"ChryslineLim"},"content":"            .withPhone(\"95352563\")","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"ChryslineLim"},"content":"            .withEmail(\"heinz@example.com\")","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"ChryslineLim"},"content":"            .withAddress(\"wall street\")","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"ChryslineLim"},"content":"            .withPriceRange(\"300 - 600\")","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"jchilling"},"content":"            .withDesiredCharacteristics(\"Near School\")","lastModifiedDate":"2022-10-19"},{"lineNumber":52,"author":{"gitId":"jchilling"},"content":"            .withPriority(\"low\").build();","lastModifiedDate":"2022-10-19"},{"lineNumber":53,"author":{"gitId":"ChryslineLim"},"content":"    // Daniel has not specified his price range nor desired characteristics","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"ChryslineLim"},"content":"    public static final Person DANIEL \u003d new PersonBuilder()","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"ChryslineLim"},"content":"            .withName(\"Daniel Meier\")","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"ChryslineLim"},"content":"            .withPhone(\"87652533\")","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"ChryslineLim"},"content":"            .withEmail(\"cornelia@example.com\")","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"ChryslineLim"},"content":"            .withAddress(\"10th street\")","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"jchilling"},"content":"            .withPriority(\"low\").build();","lastModifiedDate":"2022-10-19"},{"lineNumber":60,"author":{"gitId":"ChryslineLim"},"content":"    // Elle has not specified her price range nor desired characteristics","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"ChryslineLim"},"content":"    public static final Person ELLE \u003d new PersonBuilder()","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"ChryslineLim"},"content":"            .withName(\"Elle Meyer\")","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"ChryslineLim"},"content":"            .withPhone(\"9482224\")","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"ChryslineLim"},"content":"            .withEmail(\"werner@example.com\")","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"jchilling"},"content":"            .withAddress(\"michegan ave\")","lastModifiedDate":"2022-10-19"},{"lineNumber":66,"author":{"gitId":"jchilling"},"content":"            .withPriority(\"normal\")","lastModifiedDate":"2022-10-19"},{"lineNumber":67,"author":{"gitId":"jchilling"},"content":"            .build();","lastModifiedDate":"2022-10-19"},{"lineNumber":68,"author":{"gitId":"ChryslineLim"},"content":"    // Fiona has not specified her desired characteristics","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"ChryslineLim"},"content":"    public static final Person FIONA \u003d new PersonBuilder()","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"ChryslineLim"},"content":"            .withName(\"Fiona Kunz\")","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"ChryslineLim"},"content":"            .withPhone(\"9482427\")","lastModifiedDate":"2022-10-12"},{"lineNumber":72,"author":{"gitId":"ChryslineLim"},"content":"            .withEmail(\"lydia@example.com\")","lastModifiedDate":"2022-10-12"},{"lineNumber":73,"author":{"gitId":"ChryslineLim"},"content":"            .withAddress(\"little tokyo\")","lastModifiedDate":"2022-10-12"},{"lineNumber":74,"author":{"gitId":"jchilling"},"content":"            .withPriority(\"high\")","lastModifiedDate":"2022-10-19"},{"lineNumber":75,"author":{"gitId":"ChryslineLim"},"content":"            .withPriceRange(\"500 - 700\").build();","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"ChryslineLim"},"content":"    // George has not specified his price range","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"ChryslineLim"},"content":"    public static final Person GEORGE \u003d new PersonBuilder()","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"ChryslineLim"},"content":"            .withName(\"George Best\")","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"ChryslineLim"},"content":"            .withPhone(\"9482442\")","lastModifiedDate":"2022-10-12"},{"lineNumber":80,"author":{"gitId":"ChryslineLim"},"content":"            .withEmail(\"anna@example.com\")","lastModifiedDate":"2022-10-12"},{"lineNumber":81,"author":{"gitId":"ChryslineLim"},"content":"            .withAddress(\"4th street\")","lastModifiedDate":"2022-10-12"},{"lineNumber":82,"author":{"gitId":"jchilling"},"content":"            .withPriority(\"normal\")","lastModifiedDate":"2022-10-19"},{"lineNumber":83,"author":{"gitId":"ChryslineLim"},"content":"            .withDesiredCharacteristics(\"Cooling\").build();","lastModifiedDate":"2022-10-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":86,"author":{"gitId":"ChryslineLim"},"content":"    public static final Person HOON \u003d new PersonBuilder()","lastModifiedDate":"2022-10-12"},{"lineNumber":87,"author":{"gitId":"ChryslineLim"},"content":"            .withName(\"Hoon Meier\")","lastModifiedDate":"2022-10-12"},{"lineNumber":88,"author":{"gitId":"ChryslineLim"},"content":"            .withPhone(\"8482424\")","lastModifiedDate":"2022-10-12"},{"lineNumber":89,"author":{"gitId":"ChryslineLim"},"content":"            .withEmail(\"stefan@example.com\")","lastModifiedDate":"2022-10-12"},{"lineNumber":90,"author":{"gitId":"ChryslineLim"},"content":"            .withAddress(\"little india\")","lastModifiedDate":"2022-10-12"},{"lineNumber":91,"author":{"gitId":"ChryslineLim"},"content":"            .withPriceRange(\"120000 - 650000\")","lastModifiedDate":"2022-10-12"},{"lineNumber":92,"author":{"gitId":"ChryslineLim"},"content":"            .withDesiredCharacteristics(\"Big\").build();","lastModifiedDate":"2022-10-12"},{"lineNumber":93,"author":{"gitId":"ChryslineLim"},"content":"    public static final Person IDA \u003d new PersonBuilder()","lastModifiedDate":"2022-10-12"},{"lineNumber":94,"author":{"gitId":"ChryslineLim"},"content":"            .withName(\"Ida Mueller\")","lastModifiedDate":"2022-10-12"},{"lineNumber":95,"author":{"gitId":"ChryslineLim"},"content":"            .withPhone(\"8482131\")","lastModifiedDate":"2022-10-12"},{"lineNumber":96,"author":{"gitId":"ChryslineLim"},"content":"            .withEmail(\"hans@example.com\")","lastModifiedDate":"2022-10-12"},{"lineNumber":97,"author":{"gitId":"ChryslineLim"},"content":"            .withAddress(\"chicago ave\")","lastModifiedDate":"2022-10-12"},{"lineNumber":98,"author":{"gitId":"ChryslineLim"},"content":"            .withPriceRange(\"30000 - 50000\")","lastModifiedDate":"2022-10-12"},{"lineNumber":99,"author":{"gitId":"ChryslineLim"},"content":"            .withDesiredCharacteristics(\"Kid-Friendly\").build();","lastModifiedDate":"2022-10-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":102,"author":{"gitId":"ChryslineLim"},"content":"    public static final Person AMY \u003d new PersonBuilder()","lastModifiedDate":"2022-10-12"},{"lineNumber":103,"author":{"gitId":"ChryslineLim"},"content":"            .withName(VALID_NAME_AMY)","lastModifiedDate":"2022-10-12"},{"lineNumber":104,"author":{"gitId":"ChryslineLim"},"content":"            .withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2022-10-12"},{"lineNumber":105,"author":{"gitId":"ChryslineLim"},"content":"            .withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2022-10-12"},{"lineNumber":106,"author":{"gitId":"ChryslineLim"},"content":"            .withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2022-10-12"},{"lineNumber":107,"author":{"gitId":"ChryslineLim"},"content":"            .withPriceRange(VALID_PRICE_RANGE_AMY)","lastModifiedDate":"2022-10-12"},{"lineNumber":108,"author":{"gitId":"ChryslineLim"},"content":"            .withDesiredCharacteristics(VALID_DESIRED_CHARACTERISTICS_AMY)","lastModifiedDate":"2022-10-12"},{"lineNumber":109,"author":{"gitId":"jchilling"},"content":"            .withPriority(VALID_PRIORITY_HIGH).build();","lastModifiedDate":"2022-10-19"},{"lineNumber":110,"author":{"gitId":"ChryslineLim"},"content":"    public static final Person BOB \u003d new PersonBuilder()","lastModifiedDate":"2022-10-12"},{"lineNumber":111,"author":{"gitId":"ChryslineLim"},"content":"            .withName(VALID_NAME_BOB)","lastModifiedDate":"2022-10-12"},{"lineNumber":112,"author":{"gitId":"ChryslineLim"},"content":"            .withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-10-12"},{"lineNumber":113,"author":{"gitId":"ChryslineLim"},"content":"            .withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2022-10-12"},{"lineNumber":114,"author":{"gitId":"ChryslineLim"},"content":"            .withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2022-10-12"},{"lineNumber":115,"author":{"gitId":"ChryslineLim"},"content":"            .withPriceRange(VALID_PRICE_RANGE_BOB)","lastModifiedDate":"2022-10-12"},{"lineNumber":116,"author":{"gitId":"ChryslineLim"},"content":"            .withDesiredCharacteristics(VALID_DESIRED_CHARACTERISTICS_BOB)","lastModifiedDate":"2022-10-12"},{"lineNumber":117,"author":{"gitId":"jchilling"},"content":"            .withPriority(VALID_PRIORITY_HIGH)","lastModifiedDate":"2022-10-19"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":125,"author":{"gitId":"zsiggg"},"content":"     * Returns an {@code PersonBook} with all the typical persons.","lastModifiedDate":"2022-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":127,"author":{"gitId":"riccqi"},"content":"    public static PersonBook getTypicalPersonsBook() {","lastModifiedDate":"2022-10-13"},{"lineNumber":128,"author":{"gitId":"zsiggg"},"content":"        PersonBook ab \u003d new PersonBook();","lastModifiedDate":"2022-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"riccqi":13,"zsiggg":3,"jchilling":13,"-":38,"ChryslineLim":71}},{"path":"src/test/java/seedu/address/testutil/TypicalProperties.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zsiggg"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.VALID_ADDRESS_HOME;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.VALID_DESCRIPTION_HOME;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.VALID_NAME_HOME;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"riccqi"},"content":"import static seedu.address.logic.commands.BuyerCommandTestUtil.VALID_PRICE_HOME;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"zsiggg"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"zsiggg"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"zsiggg"},"content":"import java.util.List;","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"zsiggg"},"content":"import seedu.address.model.PropertyBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"zsiggg"},"content":"import seedu.address.model.property.Property;","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"zsiggg"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"zsiggg"},"content":" * A utility class containing a list of {@code Property} objects to be used in tests.","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"zsiggg"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"zsiggg"},"content":"public class TypicalProperties {","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"jchilling"},"content":"    public static final Property PEAKRESIDENCE \u003d new PropertyBuilder().withName(\"Peak Residence\")","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"jchilling"},"content":"            .withAddress(\"333 Thompson Road\").withPrice(\"3000000\")","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"jchilling"},"content":"            .withDescription(\"private condo\")","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"jchilling"},"content":"            .build();","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"jchilling"},"content":"    public static final Property HUT \u003d new PropertyBuilder().withName(\"HUT\")","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"jchilling"},"content":"            .withAddress(\"333 College Avenue\").withPrice(\"1000\")","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"jchilling"},"content":"            .withDescription(\"hdb\")","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"jchilling"},"content":"            .build();","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"jchilling"},"content":"    // Manually added - Property\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"jchilling"},"content":"    public static final Property HOME \u003d new PropertyBuilder().withName(VALID_NAME_HOME).withAddress(VALID_ADDRESS_HOME)","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"jchilling"},"content":"            .withPrice(VALID_PRICE_HOME).withDescription(VALID_DESCRIPTION_HOME).build();","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"zsiggg"},"content":"    private TypicalProperties() {} // prevents instantiation","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"jchilling"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"zsiggg"},"content":"     * Returns a {@code PropertyBook} with all the typical properties.","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"jchilling"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"riccqi"},"content":"    public static PropertyBook getTypicalPropertyBook() {","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"zsiggg"},"content":"        PropertyBook propertyBook \u003d new PropertyBook();","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"zsiggg"},"content":"        for (Property property : getTypicalProperties()) {","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"zsiggg"},"content":"            propertyBook.addProperty(property);","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"zsiggg"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"zsiggg"},"content":"        return propertyBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"zsiggg"},"content":"    public static List\u003cProperty\u003e getTypicalProperties() {","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"jchilling"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(PEAKRESIDENCE, HUT, HOME));","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"zsiggg"},"content":"}","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"riccqi":5,"zsiggg":27,"jchilling":19}}]
